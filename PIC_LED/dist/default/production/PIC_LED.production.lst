

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 06 10:44:41 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  001E80                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _anio
    48  001E80  000F               	dw	15
    49                           
    50                           ;initializer for _dia
    51  001E82  0008               	dw	8
    52                           
    53                           ;initializer for _diasem
    54  001E84  0003               	dw	3
    55                           
    56                           ;initializer for _hora
    57  001E86  0012               	dw	18
    58                           
    59                           ;initializer for _mes
    60  001E88  0009               	dw	9
    61                           
    62                           ;initializer for _minuto
    63  001E8A  001E               	dw	30
    64                           
    65                           	psect	smallconst
    66  000F00                     __psmallconst:
    67                           	opt stack 0
    68  000F00  00                 	db	0
    69  000F01                     _dpowers:
    70                           	opt stack 0
    71  000F01  0001               	dw	1
    72  000F03  000A               	dw	10
    73  000F05  0064               	dw	100
    74  000F07  03E8               	dw	1000
    75  000F09  2710               	dw	10000
    76  000F0B                     __end_of_dpowers:
    77                           	opt stack 0
    78  000F0B                     _LCD_INIT_STRING:
    79                           	opt stack 0
    80  000F0B  28                 	db	40
    81  000F0C  0C                 	db	12
    82  000F0D  01                 	db	1
    83  000F0E  06                 	db	6
    84  000F0F                     __end_of_LCD_INIT_STRING:
    85                           	opt stack 0
    86  000F0F                     STR_2:
    87                           
    88                           ; BSR set to: 15
    89  000F0F  25                 	db	37
    90  000F10  30                 	db	48	;'0'
    91  000F11  32                 	db	50	;'2'
    92  000F12  75                 	db	117	;'u'
    93  000F13  2F                 	db	47
    94  000F14  25                 	db	37
    95  000F15  30                 	db	48	;'0'
    96  000F16  32                 	db	50	;'2'
    97  000F17  75                 	db	117	;'u'
    98  000F18  2F                 	db	47
    99  000F19  25                 	db	37
   100  000F1A  30                 	db	48	;'0'
   101  000F1B  32                 	db	50	;'2'
   102  000F1C  75                 	db	117	;'u'
   103  000F1D  00                 	db	0
   104  000F1E                     STR_3:
   105                           
   106                           ; BSR set to: 15
   107  000F1E  25                 	db	37
   108  000F1F  30                 	db	48	;'0'
   109  000F20  32                 	db	50	;'2'
   110  000F21  75                 	db	117	;'u'
   111  000F22  3A                 	db	58	;':'
   112  000F23  25                 	db	37
   113  000F24  30                 	db	48	;'0'
   114  000F25  32                 	db	50	;'2'
   115  000F26  75                 	db	117	;'u'
   116  000F27  3A                 	db	58	;':'
   117  000F28  25                 	db	37
   118  000F29  30                 	db	48	;'0'
   119  000F2A  32                 	db	50	;'2'
   120  000F2B  75                 	db	117	;'u'
   121  000F2C  00                 	db	0
   122  000F2D                     STR_5:
   123                           
   124                           ; BSR set to: 15
   125  000F2D  20                 	db	32
   126  000F2E  20                 	db	32
   127  000F2F  20                 	db	32
   128  000F30  20                 	db	32
   129  000F31  20                 	db	32
   130  000F32  20                 	db	32
   131  000F33  00                 	db	0
   132  000F34                     STR_1:
   133                           
   134                           ; BSR set to: 15
   135  000F34  55                 	db	85	;'U'
   136  000F35  4E                 	db	78	;'N'
   137  000F36  54                 	db	84	;'T'
   138  000F37  52                 	db	82	;'R'
   139  000F38  45                 	db	69	;'E'
   140  000F39  46                 	db	70	;'F'
   141  000F3A  00                 	db	0
   142  0000                     
   143                           ; #config settings
   144  000F3B  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           	psect	nvCOMRAM
   147  000043                     __pnvCOMRAM:
   148                           	opt stack 0
   149  000043                     _anio_d:
   150                           	opt stack 0
   151  000043                     	ds	1
   152  000044                     _anio_u:
   153                           	opt stack 0
   154  000044                     	ds	1
   155  000045                     _dia_semana:
   156                           	opt stack 0
   157  000045                     	ds	1
   158  000046                     _fecha_d:
   159                           	opt stack 0
   160  000046                     	ds	1
   161  000047                     _fecha_u:
   162                           	opt stack 0
   163  000047                     	ds	1
   164  000048                     _hora_d:
   165                           	opt stack 0
   166  000048                     	ds	1
   167  000049                     _hora_u:
   168                           	opt stack 0
   169  000049                     	ds	1
   170  00004A                     _mes_d:
   171                           	opt stack 0
   172  00004A                     	ds	1
   173  00004B                     _mes_u:
   174                           	opt stack 0
   175  00004B                     	ds	1
   176  00004C                     _minuto_d:
   177                           	opt stack 0
   178  00004C                     	ds	1
   179  00004D                     _minuto_u:
   180                           	opt stack 0
   181  00004D                     	ds	1
   182  00004E                     _segundo_d:
   183                           	opt stack 0
   184  00004E                     	ds	1
   185  00004F                     _segundo_u:
   186                           	opt stack 0
   187  00004F                     	ds	1
   188  0000                     _ANCON0	set	3912
   189  0000                     _RTCCFG	set	3903
   190  0000                     _RTCCFGbits	set	3903
   191  0000                     _ADCON0	set	4034
   192  0000                     _ADCON1	set	4033
   193  0000                     _ALRMCFGbits	set	3985
   194  0000                     _EECON2	set	4007
   195  0000                     _INTCONbits	set	4082
   196  0000                     _LATBbits	set	3978
   197  0000                     _OSCCONbits	set	4051
   198  0000                     _OSCTUNEbits	set	3995
   199  0000                     _PIE3bits	set	4003
   200  0000                     _PORTAbits	set	3968
   201  0000                     _RTCVALH	set	3993
   202  0000                     _RTCVALL	set	3992
   203  0000                     _T1CONbits	set	4045
   204  0000                     _TRISA	set	3986
   205  0000                     _TRISB	set	3987
   206  0000                     _TRISBbits	set	3987
   207  0000                     _TRISC	set	3988
   208                           
   209                           	psect	cinit
   210  001D44                     __pcinit:
   211                           	opt stack 0
   212  001D44                     start_initialization:
   213                           	opt stack 0
   214  001D44                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Clear objects allocated to BANK0 (44 bytes)
   218  001D44  EE00  F060         	lfsr	0,__pbssBANK0
   219  001D48  0E2C               	movlw	44
   220  001D4A                     clear_0:
   221  001D4A  6AEE               	clrf	postinc0,c
   222  001D4C  06E8               	decf	wreg,f,c
   223  001D4E  E1FD               	bnz	clear_0
   224                           
   225                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   226  001D50  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   227                           
   228                           ; Clear objects allocated to COMRAM (26 bytes)
   229  001D52  EE00  F029         	lfsr	0,__pbssCOMRAM
   230  001D56  0E1A               	movlw	26
   231  001D58                     clear_1:
   232  001D58  6AEE               	clrf	postinc0,c
   233  001D5A  06E8               	decf	wreg,f,c
   234  001D5C  E1FD               	bnz	clear_1
   235                           
   236                           ; Initialize objects allocated to COMRAM (12 bytes)
   237                           ; load TBLPTR registers with __pidataCOMRAM
   238  001D5E  0E80               	movlw	low __pidataCOMRAM
   239  001D60  6EF6               	movwf	tblptrl,c
   240  001D62  0E1E               	movlw	high __pidataCOMRAM
   241  001D64  6EF7               	movwf	tblptrh,c
   242  001D66  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   243  001D68  6EF8               	movwf	tblptru,c
   244  001D6A  EE00  F050         	lfsr	0,__pdataCOMRAM
   245  001D6E  EE10 F00C          	lfsr	1,12
   246  001D72                     copy_data0:
   247  001D72  0009               	tblrd		*+
   248  001D74  CFF5 FFEE          	movff	tablat,postinc0
   249  001D78  50E5               	movf	postdec1,w,c
   250  001D7A  50E1               	movf	fsr1l,w,c
   251  001D7C  E1FA               	bnz	copy_data0
   252  001D7E                     end_of_initialization:
   253                           	opt stack 0
   254  001D7E                     __end_of__initialization:
   255                           	opt stack 0
   256  001D7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  001D80  6EF8               	movwf	tblptru,c
   258  001D82  0100               	movlb	0
   259  001D84  EFD0  F008         	goto	_main	;jump to C main() function
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	bitbssCOMRAM
   270  0002E0                     __pbitbssCOMRAM:
   271                           	opt stack 0
   272  0002E0                     _flag:
   273                           	opt stack 0
   274  0002E0                     	ds	1
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           postdec1	equ	0xFE5
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	bssCOMRAM
   285  000029                     __pbssCOMRAM:
   286                           	opt stack 0
   287  000029                     _RtccTimeVal:
   288                           	opt stack 0
   289  000029                     	ds	4
   290  00002D                     _a:
   291                           	opt stack 0
   292  00002D                     	ds	2
   293  00002F                     _b:
   294                           	opt stack 0
   295  00002F                     	ds	2
   296  000031                     _c:
   297                           	opt stack 0
   298  000031                     	ds	2
   299  000033                     _i:
   300                           	opt stack 0
   301  000033                     	ds	2
   302  000035                     _j:
   303                           	opt stack 0
   304  000035                     	ds	2
   305  000037                     _k:
   306                           	opt stack 0
   307  000037                     	ds	2
   308  000039                     _segundo:
   309                           	opt stack 0
   310  000039                     	ds	2
   311  00003B                     _RtccDate:
   312                           	opt stack 0
   313  00003B                     	ds	4
   314  00003F                     _RtccTime:
   315                           	opt stack 0
   316  00003F                     	ds	4
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	dataCOMRAM
   327  000050                     __pdataCOMRAM:
   328                           	opt stack 0
   329  000050                     _anio:
   330                           	opt stack 0
   331  000050                     	ds	2
   332  000052                     _dia:
   333                           	opt stack 0
   334  000052                     	ds	2
   335  000054                     _diasem:
   336                           	opt stack 0
   337  000054                     	ds	2
   338  000056                     _hora:
   339                           	opt stack 0
   340  000056                     	ds	2
   341  000058                     _mes:
   342                           	opt stack 0
   343  000058                     	ds	2
   344  00005A                     _minuto:
   345                           	opt stack 0
   346  00005A                     	ds	2
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	bssBANK0
   357  000060                     __pbssBANK0:
   358                           	opt stack 0
   359  000060                     _RtccAlrmTimeDate:
   360                           	opt stack 0
   361  000060                     	ds	8
   362  000068                     _RtccTimeDate:
   363                           	opt stack 0
   364  000068                     	ds	8
   365  000070                     _Rtcc_read_TimeDate:
   366                           	opt stack 0
   367  000070                     	ds	8
   368  000078                     _buffer2:
   369                           	opt stack 0
   370  000078                     	ds	20
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	cstackCOMRAM
   381  000001                     __pcstackCOMRAM:
   382                           	opt stack 0
   383  000001                     ??_isdigit:
   384  000001                     ??_lcd_send_nibble:
   385  000001                     ?___wmul:
   386                           	opt stack 0
   387  000001                     ?___awdiv:
   388                           	opt stack 0
   389  000001                     ?___lwdiv:
   390                           	opt stack 0
   391  000001                     Delay100TCYx@unit:
   392                           	opt stack 0
   393  000001                     Delay1KTCYx@unit:
   394                           	opt stack 0
   395  000001                     RtccReadDate@pDt:
   396                           	opt stack 0
   397  000001                     RtccReadTime@pTm:
   398                           	opt stack 0
   399  000001                     RtccWriteDate@pDt:
   400                           	opt stack 0
   401  000001                     RtccWriteTime@pTm:
   402                           	opt stack 0
   403  000001                     ___wmul@multiplier:
   404                           	opt stack 0
   405  000001                     ___awdiv@dividend:
   406                           	opt stack 0
   407  000001                     ___lwdiv@dividend:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411  000001                     	ds	1
   412  000002                     lcd_send_nibble@nibble:
   413                           	opt stack 0
   414  000002                     _isdigit$1822:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1
   418  000002                     	ds	1
   419  000003                     lcd_send_byte@n:
   420                           	opt stack 0
   421  000003                     RtccWriteDate@di:
   422                           	opt stack 0
   423  000003                     RtccWriteTime@di:
   424                           	opt stack 0
   425  000003                     isdigit@c:
   426                           	opt stack 0
   427  000003                     ___wmul@multiplicand:
   428                           	opt stack 0
   429  000003                     ___awdiv@divisor:
   430                           	opt stack 0
   431  000003                     ___lwdiv@divisor:
   432                           	opt stack 0
   433  000003                     RtccReadDate@rTD1:
   434                           	opt stack 0
   435  000003                     RtccReadTime@rTD1:
   436                           	opt stack 0
   437                           
   438                           ; 8 bytes @ 0x2
   439  000003                     	ds	1
   440  000004                     lcd_send_byte@address:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x3
   444  000004                     	ds	1
   445  000005                     lcd_init@i:
   446                           	opt stack 0
   447  000005                     lcd_gotoxy@y:
   448                           	opt stack 0
   449  000005                     lcd_comand@d:
   450                           	opt stack 0
   451  000005                     lcd_setcursor_vb@blink:
   452                           	opt stack 0
   453  000005                     RtccWriteDate@wasOn:
   454                           	opt stack 0
   455  000005                     RtccWriteTime@wasOn:
   456                           	opt stack 0
   457  000005                     ___awdiv@counter:
   458                           	opt stack 0
   459  000005                     ___wmul@product:
   460                           	opt stack 0
   461  000005                     ___lwdiv@quotient:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x4
   465  000005                     	ds	1
   466  000006                     lcd_gotoxy@x:
   467                           	opt stack 0
   468  000006                     lcd_setcursor_vb@visible:
   469                           	opt stack 0
   470  000006                     RtccWriteDate@wasAlrm:
   471                           	opt stack 0
   472  000006                     RtccWriteTime@wasAlrm:
   473                           	opt stack 0
   474  000006                     ___awdiv@sign:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x5
   478  000006                     	ds	1
   479  000007                     lcd_gotoxy@address:
   480                           	opt stack 0
   481  000007                     RtccWriteTime@wasWrEn:
   482                           	opt stack 0
   483  000007                     ___lwdiv@counter:
   484                           	opt stack 0
   485  000007                     RtccWriteDate@tempYear:
   486                           	opt stack 0
   487  000007                     ___awdiv@quotient:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x6
   491  000007                     	ds	1
   492  000008                     ?___lwmod:
   493                           	opt stack 0
   494  000008                     lcd_putc@c:
   495                           	opt stack 0
   496  000008                     RtccWriteTime@tempMinSec:
   497                           	opt stack 0
   498  000008                     ___lwmod@dividend:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x7
   502  000008                     	ds	1
   503  000009                     RtccWriteDate@wasWrEn:
   504                           	opt stack 0
   505  000009                     lcd_putrs@ptr:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x8
   509  000009                     	ds	1
   510  00000A                     RtccWriteDate@tempDayMonth:
   511                           	opt stack 0
   512  00000A                     RtccWriteTime@tempHourWDay:
   513                           	opt stack 0
   514  00000A                     ___lwmod@divisor:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x9
   518  00000A                     	ds	1
   519  00000B                     RtccReadDate@rTD0:
   520                           	opt stack 0
   521  00000B                     RtccReadTime@rTD0:
   522                           	opt stack 0
   523                           
   524                           ; 8 bytes @ 0xA
   525  00000B                     	ds	1
   526  00000C                     ___lwmod@counter:
   527                           	opt stack 0
   528  00000C                     RtccWriteDate@tempHourWDay:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0xB
   532  00000C                     	ds	1
   533  00000D                     ?_sprintf:
   534                           	opt stack 0
   535  00000D                     sprintf@sp:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0xC
   539  00000D                     	ds	1
   540  00000E                     
   541                           ; 0 bytes @ 0xD
   542  00000E                     	ds	1
   543  00000F                     sprintf@f:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0xE
   547  00000F                     	ds	4
   548  000013                     
   549                           ; 0 bytes @ 0x12
   550  000013                     	ds	4
   551  000017                     ??_sprintf:
   552                           
   553                           ; 0 bytes @ 0x16
   554  000017                     	ds	4
   555  00001B                     sprintf@ap:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x1A
   559  00001B                     	ds	2
   560  00001D                     sprintf@flag:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x1C
   564  00001D                     	ds	1
   565  00001E                     sprintf@val:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x1D
   569  00001E                     	ds	2
   570  000020                     sprintf@prec:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x1F
   574  000020                     	ds	1
   575  000021                     sprintf@width:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x20
   579  000021                     	ds	2
   580  000023                     sprintf@c:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x22
   584  000023                     	ds	1
   585  000024                     ??_main:
   586                           
   587                           ; 0 bytes @ 0x23
   588  000024                     	ds	1
   589  000025                     main@cr_y:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x24
   593  000025                     	ds	2
   594  000027                     main@cr_x:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x26
   598  000027                     	ds	2
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           postdec1	equ	0xFE5
   606                           fsr1l	equ	0xFE1
   607                           
   608 ;;
   609 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   610 ;;
   611 ;; *************** function _main *****************
   612 ;; Defined at:
   613 ;;		line 104 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  cr_x            2   38[COMRAM] int 
   618 ;;  cr_y            2   36[COMRAM] int 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  2  145[None  ] int 
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   631 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   632 ;;Total ram usage:        5 bytes
   633 ;; Hardware stack levels required when called:    6
   634 ;; This function calls:
   635 ;;		_Read_RTC
   636 ;;		_Setup
   637 ;;		_Write_RTC
   638 ;;		_caratula
   639 ;;		_lcd_gotoxy
   640 ;;		_lcd_setcursor_vb
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text0
   647  0011A0                     __ptext0:
   648                           	opt stack 0
   649  0011A0                     _main:
   650                           	opt stack 25
   651                           
   652                           ;main.c: 107: int cr_x = 1;
   653                           
   654                           ; BSR set to: 15
   655                           ;incstack = 0
   656  0011A0  0E00               	movlw	0
   657  0011A2  6E28               	movwf	main@cr_x+1,c
   658  0011A4  0E01               	movlw	1
   659  0011A6  6E27               	movwf	main@cr_x,c
   660                           
   661                           ;main.c: 108: int cr_y = 1;
   662  0011A8  0E00               	movlw	0
   663  0011AA  6E26               	movwf	main@cr_y+1,c
   664  0011AC  0E01               	movlw	1
   665  0011AE  6E25               	movwf	main@cr_y,c
   666                           
   667                           ;main.c: 110: Setup();
   668  0011B0  EC7E  F00E         	call	_Setup	;wreg free
   669  0011B4  D000               	goto	l2401
   670  0011B6                     l2401:
   671                           
   672                           ;main.c: 113: Read_RTC();
   673  0011B6  EC2A  F00C         	call	_Read_RTC	;wreg free
   674                           
   675                           ;main.c: 114: caratula();
   676  0011BA  ECA5  F00B         	call	_caratula	;wreg free
   677                           
   678                           ;main.c: 117: lcd_setcursor_vb(1, 1);
   679  0011BE  0E01               	movlw	1
   680  0011C0  6E05               	movwf	lcd_setcursor_vb@blink,c
   681  0011C2  0E01               	movlw	1
   682  0011C4  EC14  F00F         	call	_lcd_setcursor_vb
   683                           
   684                           ;main.c: 119: lcd_gotoxy(cr_x,cr_y);
   685  0011C8  C025  F005         	movff	main@cr_y,lcd_gotoxy@y
   686  0011CC  5027               	movf	main@cr_x,w,c
   687  0011CE  ECF1  F00E         	call	_lcd_gotoxy
   688                           
   689                           ;main.c: 121: if(PORTAbits.RA1 == 0){
   690  0011D2  B280               	btfsc	3968,1,c	;volatile
   691  0011D4  D030               	goto	l147
   692                           
   693                           ;main.c: 127: if(cr_x == 16 && cr_y == 1){
   694  0011D6  0E10               	movlw	16
   695  0011D8  1827               	xorwf	main@cr_x,w,c
   696  0011DA  1028               	iorwf	main@cr_x+1,w,c
   697  0011DC  A4D8               	btfss	status,2,c
   698  0011DE  D00C               	goto	l2417
   699  0011E0  0425               	decf	main@cr_y,w,c
   700  0011E2  1026               	iorwf	main@cr_y+1,w,c
   701  0011E4  A4D8               	btfss	status,2,c
   702  0011E6  D008               	goto	l2417
   703                           
   704                           ;main.c: 128: cr_x = 0;
   705  0011E8  0E00               	movlw	0
   706  0011EA  6E28               	movwf	main@cr_x+1,c
   707  0011EC  0E00               	movlw	0
   708  0011EE  6E27               	movwf	main@cr_x,c
   709                           
   710                           ;main.c: 129: cr_y = 2;
   711  0011F0  0E00               	movlw	0
   712  0011F2  6E26               	movwf	main@cr_y+1,c
   713  0011F4  0E02               	movlw	2
   714  0011F6  D011               	goto	L1
   715  0011F8                     l2417:
   716                           
   717                           ;main.c: 131: else if(cr_x == 16 && cr_y == 2){
   718  0011F8  0E10               	movlw	16
   719  0011FA  1827               	xorwf	main@cr_x,w,c
   720  0011FC  1028               	iorwf	main@cr_x+1,w,c
   721  0011FE  A4D8               	btfss	status,2,c
   722  001200  D00E               	goto	l2423
   723  001202  0E02               	movlw	2
   724  001204  1825               	xorwf	main@cr_y,w,c
   725  001206  1026               	iorwf	main@cr_y+1,w,c
   726  001208  A4D8               	btfss	status,2,c
   727  00120A  D009               	goto	l2423
   728                           
   729                           ;main.c: 132: cr_x = 0;
   730  00120C  0E00               	movlw	0
   731  00120E  6E28               	movwf	main@cr_x+1,c
   732  001210  0E00               	movlw	0
   733  001212  6E27               	movwf	main@cr_x,c
   734                           
   735                           ;main.c: 133: cr_y = 1;
   736  001214  0E00               	movlw	0
   737  001216  6E26               	movwf	main@cr_y+1,c
   738  001218  0E01               	movlw	1
   739  00121A                     L1:
   740  00121A  6E25               	movwf	main@cr_y,c
   741  00121C  D000               	goto	l2423
   742  00121E                     l2423:
   743                           
   744                           ;main.c: 134: }
   745                           ;main.c: 135: cr_x++;
   746  00121E  4A27               	infsnz	main@cr_x,f,c
   747  001220  2A28               	incf	main@cr_x+1,f,c
   748                           
   749                           ;main.c: 136: _delay((unsigned long)((98)*(8000000/4000.0)));
   750  001222  0EFF               	movlw	255
   751  001224  6E24               	movwf	??_main& (0+255),c
   752  001226  0E8A               	movlw	138
   753  001228                     u2117:
   754  001228  2EE8               	decfsz	wreg,f,c
   755  00122A  D7FE               	goto	u2117
   756  00122C  2E24               	decfsz	??_main& (0+255),f,c
   757  00122E  D7FC               	goto	u2117
   758  001230  D000               	nop2	
   759                           
   760                           ;main.c: 137: LATBbits.LATB1 = !LATBbits.LATB1;;
   761  001232  728A               	btg	3978,1,c	;volatile
   762                           
   763                           ;main.c: 139: }
   764  001234  D001               	goto	l151
   765  001236                     l147:
   766                           
   767                           ;main.c: 140: else LATBbits.LATB1 = 0;;
   768  001236  928A               	bcf	3978,1,c	;volatile
   769  001238                     l151:
   770                           
   771                           ;main.c: 142: if(PORTAbits.RA0 == 0)
   772  001238  B080               	btfsc	3968,0,c	;volatile
   773  00123A  D0AD               	goto	l152
   774                           
   775                           ;main.c: 143: {
   776                           ;main.c: 146: if(cr_x == 9 && cr_y == 1){
   777  00123C  0E09               	movlw	9
   778  00123E  1827               	xorwf	main@cr_x,w,c
   779  001240  1028               	iorwf	main@cr_x+1,w,c
   780  001242  A4D8               	btfss	status,2,c
   781  001244  D009               	goto	l2435
   782  001246  0425               	decf	main@cr_y,w,c
   783  001248  1026               	iorwf	main@cr_y+1,w,c
   784  00124A  A4D8               	btfss	status,2,c
   785  00124C  D005               	goto	l2435
   786                           
   787                           ;main.c: 148: dia+=10;
   788  00124E  0E0A               	movlw	10
   789  001250  2652               	addwf	_dia,f,c
   790  001252  0E00               	movlw	0
   791  001254  2253               	addwfc	_dia+1,f,c
   792                           
   793                           ;main.c: 149: }
   794  001256  D093               	goto	l2501
   795  001258                     l2435:
   796                           
   797                           ;main.c: 150: else if(cr_x == 10 && cr_y == 1){
   798  001258  0E0A               	movlw	10
   799  00125A  1827               	xorwf	main@cr_x,w,c
   800  00125C  1028               	iorwf	main@cr_x+1,w,c
   801  00125E  A4D8               	btfss	status,2,c
   802  001260  D007               	goto	l2441
   803  001262  0425               	decf	main@cr_y,w,c
   804  001264  1026               	iorwf	main@cr_y+1,w,c
   805  001266  A4D8               	btfss	status,2,c
   806  001268  D003               	goto	l2441
   807                           
   808                           ;main.c: 152: dia++;
   809  00126A  4A52               	infsnz	_dia,f,c
   810  00126C  2A53               	incf	_dia+1,f,c
   811                           
   812                           ;main.c: 153: }
   813  00126E  D087               	goto	l2501
   814  001270                     l2441:
   815                           
   816                           ;main.c: 154: else if(cr_x == 12 && cr_y == 1){
   817  001270  0E0C               	movlw	12
   818  001272  1827               	xorwf	main@cr_x,w,c
   819  001274  1028               	iorwf	main@cr_x+1,w,c
   820  001276  A4D8               	btfss	status,2,c
   821  001278  D009               	goto	l2447
   822  00127A  0425               	decf	main@cr_y,w,c
   823  00127C  1026               	iorwf	main@cr_y+1,w,c
   824  00127E  A4D8               	btfss	status,2,c
   825  001280  D005               	goto	l2447
   826                           
   827                           ;main.c: 156: mes+=10;
   828  001282  0E0A               	movlw	10
   829  001284  2658               	addwf	_mes,f,c
   830  001286  0E00               	movlw	0
   831  001288  2259               	addwfc	_mes+1,f,c
   832                           
   833                           ;main.c: 157: }
   834  00128A  D079               	goto	l2501
   835  00128C                     l2447:
   836                           
   837                           ;main.c: 158: else if(cr_x == 13 && cr_y == 1){
   838  00128C  0E0D               	movlw	13
   839  00128E  1827               	xorwf	main@cr_x,w,c
   840  001290  1028               	iorwf	main@cr_x+1,w,c
   841  001292  A4D8               	btfss	status,2,c
   842  001294  D007               	goto	l2453
   843  001296  0425               	decf	main@cr_y,w,c
   844  001298  1026               	iorwf	main@cr_y+1,w,c
   845  00129A  A4D8               	btfss	status,2,c
   846  00129C  D003               	goto	l2453
   847                           
   848                           ;main.c: 160: mes++;
   849  00129E  4A58               	infsnz	_mes,f,c
   850  0012A0  2A59               	incf	_mes+1,f,c
   851                           
   852                           ;main.c: 161: }
   853  0012A2  D06D               	goto	l2501
   854  0012A4                     l2453:
   855                           
   856                           ;main.c: 162: else if(cr_x == 15 && cr_y == 1){
   857  0012A4  0E0F               	movlw	15
   858  0012A6  1827               	xorwf	main@cr_x,w,c
   859  0012A8  1028               	iorwf	main@cr_x+1,w,c
   860  0012AA  A4D8               	btfss	status,2,c
   861  0012AC  D009               	goto	l2459
   862  0012AE  0425               	decf	main@cr_y,w,c
   863  0012B0  1026               	iorwf	main@cr_y+1,w,c
   864  0012B2  A4D8               	btfss	status,2,c
   865  0012B4  D005               	goto	l2459
   866                           
   867                           ;main.c: 164: anio+=10;
   868  0012B6  0E0A               	movlw	10
   869  0012B8  2650               	addwf	_anio,f,c
   870  0012BA  0E00               	movlw	0
   871  0012BC  2251               	addwfc	_anio+1,f,c
   872                           
   873                           ;main.c: 165: }
   874  0012BE  D05F               	goto	l2501
   875  0012C0                     l2459:
   876                           
   877                           ;main.c: 166: else if(cr_x == 16 && cr_y == 1){
   878  0012C0  0E10               	movlw	16
   879  0012C2  1827               	xorwf	main@cr_x,w,c
   880  0012C4  1028               	iorwf	main@cr_x+1,w,c
   881  0012C6  A4D8               	btfss	status,2,c
   882  0012C8  D007               	goto	l2465
   883  0012CA  0425               	decf	main@cr_y,w,c
   884  0012CC  1026               	iorwf	main@cr_y+1,w,c
   885  0012CE  A4D8               	btfss	status,2,c
   886  0012D0  D003               	goto	l2465
   887                           
   888                           ;main.c: 168: anio++;
   889  0012D2  4A50               	infsnz	_anio,f,c
   890  0012D4  2A51               	incf	_anio+1,f,c
   891                           
   892                           ;main.c: 169: }
   893  0012D6  D053               	goto	l2501
   894  0012D8                     l2465:
   895                           
   896                           ;main.c: 170: else if(cr_x == 1 && cr_y == 2){
   897  0012D8  0427               	decf	main@cr_x,w,c
   898  0012DA  1028               	iorwf	main@cr_x+1,w,c
   899  0012DC  A4D8               	btfss	status,2,c
   900  0012DE  D00A               	goto	l2471
   901  0012E0  0E02               	movlw	2
   902  0012E2  1825               	xorwf	main@cr_y,w,c
   903  0012E4  1026               	iorwf	main@cr_y+1,w,c
   904  0012E6  A4D8               	btfss	status,2,c
   905  0012E8  D005               	goto	l2471
   906                           
   907                           ;main.c: 172: hora+=10;
   908  0012EA  0E0A               	movlw	10
   909  0012EC  2656               	addwf	_hora,f,c
   910  0012EE  0E00               	movlw	0
   911  0012F0  2257               	addwfc	_hora+1,f,c
   912                           
   913                           ;main.c: 173: }
   914  0012F2  D045               	goto	l2501
   915  0012F4                     l2471:
   916                           
   917                           ;main.c: 174: else if(cr_x == 2 && cr_y == 2){
   918  0012F4  0E02               	movlw	2
   919  0012F6  1827               	xorwf	main@cr_x,w,c
   920  0012F8  1028               	iorwf	main@cr_x+1,w,c
   921  0012FA  A4D8               	btfss	status,2,c
   922  0012FC  D008               	goto	l2477
   923  0012FE  0E02               	movlw	2
   924  001300  1825               	xorwf	main@cr_y,w,c
   925  001302  1026               	iorwf	main@cr_y+1,w,c
   926  001304  A4D8               	btfss	status,2,c
   927  001306  D003               	goto	l2477
   928                           
   929                           ;main.c: 176: hora++;
   930  001308  4A56               	infsnz	_hora,f,c
   931  00130A  2A57               	incf	_hora+1,f,c
   932                           
   933                           ;main.c: 177: }
   934  00130C  D038               	goto	l2501
   935  00130E                     l2477:
   936                           
   937                           ;main.c: 178: else if(cr_x == 4 && cr_y == 2){
   938  00130E  0E04               	movlw	4
   939  001310  1827               	xorwf	main@cr_x,w,c
   940  001312  1028               	iorwf	main@cr_x+1,w,c
   941  001314  A4D8               	btfss	status,2,c
   942  001316  D00A               	goto	l2483
   943  001318  0E02               	movlw	2
   944  00131A  1825               	xorwf	main@cr_y,w,c
   945  00131C  1026               	iorwf	main@cr_y+1,w,c
   946  00131E  A4D8               	btfss	status,2,c
   947  001320  D005               	goto	l2483
   948                           
   949                           ;main.c: 180: minuto+=10;
   950  001322  0E0A               	movlw	10
   951  001324  265A               	addwf	_minuto,f,c
   952  001326  0E00               	movlw	0
   953  001328  225B               	addwfc	_minuto+1,f,c
   954                           
   955                           ;main.c: 181: }
   956  00132A  D029               	goto	l2501
   957  00132C                     l2483:
   958                           
   959                           ;main.c: 182: else if(cr_x == 5 && cr_y == 2){
   960  00132C  0E05               	movlw	5
   961  00132E  1827               	xorwf	main@cr_x,w,c
   962  001330  1028               	iorwf	main@cr_x+1,w,c
   963  001332  A4D8               	btfss	status,2,c
   964  001334  D008               	goto	l2489
   965  001336  0E02               	movlw	2
   966  001338  1825               	xorwf	main@cr_y,w,c
   967  00133A  1026               	iorwf	main@cr_y+1,w,c
   968  00133C  A4D8               	btfss	status,2,c
   969  00133E  D003               	goto	l2489
   970                           
   971                           ;main.c: 184: minuto++;
   972  001340  4A5A               	infsnz	_minuto,f,c
   973  001342  2A5B               	incf	_minuto+1,f,c
   974                           
   975                           ;main.c: 185: }
   976  001344  D01C               	goto	l2501
   977  001346                     l2489:
   978                           
   979                           ;main.c: 186: else if(cr_x == 7 && cr_y == 2){
   980  001346  0E07               	movlw	7
   981  001348  1827               	xorwf	main@cr_x,w,c
   982  00134A  1028               	iorwf	main@cr_x+1,w,c
   983  00134C  A4D8               	btfss	status,2,c
   984  00134E  D00A               	goto	l2495
   985  001350  0E02               	movlw	2
   986  001352  1825               	xorwf	main@cr_y,w,c
   987  001354  1026               	iorwf	main@cr_y+1,w,c
   988  001356  A4D8               	btfss	status,2,c
   989  001358  D005               	goto	l2495
   990                           
   991                           ;main.c: 188: segundo+=10;
   992  00135A  0E0A               	movlw	10
   993  00135C  2639               	addwf	_segundo,f,c
   994  00135E  0E00               	movlw	0
   995  001360  223A               	addwfc	_segundo+1,f,c
   996                           
   997                           ;main.c: 189: }
   998  001362  D00D               	goto	l2501
   999  001364                     l2495:
  1000                           
  1001                           ;main.c: 190: else if(cr_x == 8 && cr_y == 2){
  1002  001364  0E08               	movlw	8
  1003  001366  1827               	xorwf	main@cr_x,w,c
  1004  001368  1028               	iorwf	main@cr_x+1,w,c
  1005  00136A  A4D8               	btfss	status,2,c
  1006  00136C  D008               	goto	l2501
  1007  00136E  0E02               	movlw	2
  1008  001370  1825               	xorwf	main@cr_y,w,c
  1009  001372  1026               	iorwf	main@cr_y+1,w,c
  1010  001374  A4D8               	btfss	status,2,c
  1011  001376  D003               	goto	l2501
  1012                           
  1013                           ;main.c: 192: segundo++;
  1014  001378  4A39               	infsnz	_segundo,f,c
  1015  00137A  2A3A               	incf	_segundo+1,f,c
  1016  00137C  D000               	goto	l2501
  1017  00137E                     l2501:
  1018                           
  1019                           ;main.c: 193: }
  1020                           ;main.c: 195: Write_RTC();
  1021  00137E  ECD8  F009         	call	_Write_RTC	;wreg free
  1022                           
  1023                           ;main.c: 197: _delay((unsigned long)((98)*(8000000/4000.0)));
  1024  001382  0EFF               	movlw	255
  1025  001384  6E24               	movwf	??_main& (0+255),c
  1026  001386  0E8A               	movlw	138
  1027  001388                     u2127:
  1028  001388  2EE8               	decfsz	wreg,f,c
  1029  00138A  D7FE               	goto	u2127
  1030  00138C  2E24               	decfsz	??_main& (0+255),f,c
  1031  00138E  D7FC               	goto	u2127
  1032  001390  D000               	nop2	
  1033                           
  1034                           ;main.c: 198: LATBbits.LATB0 = 1;;
  1035  001392  808A               	bsf	3978,0,c	;volatile
  1036                           
  1037                           ;main.c: 199: }
  1038  001394  D002               	goto	l2507
  1039  001396                     l152:
  1040                           
  1041                           ;main.c: 200: else LATBbits.LATB0 = 0;;
  1042  001396  908A               	bcf	3978,0,c	;volatile
  1043  001398  D000               	goto	l2507
  1044  00139A                     l2507:
  1045                           
  1046                           ;main.c: 202: _delay((unsigned long)((98)*(8000000/4000.0)));
  1047  00139A  0EFF               	movlw	255
  1048  00139C  6E24               	movwf	??_main& (0+255),c
  1049  00139E  0E8A               	movlw	138
  1050  0013A0                     u2137:
  1051  0013A0  2EE8               	decfsz	wreg,f,c
  1052  0013A2  D7FE               	goto	u2137
  1053  0013A4  2E24               	decfsz	??_main& (0+255),f,c
  1054  0013A6  D7FC               	goto	u2137
  1055  0013A8  D000               	nop2	
  1056  0013AA  D705               	goto	l2401
  1057                           
  1058                           ;main.c: 204: }
  1059                           ;main.c: 205: return 0;
  1060                           ;	Return value of _main is never used
  1061  0013AC  EF00  F000         	goto	start
  1062  0013B0                     __end_of_main:
  1063                           	opt stack 0
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           postdec1	equ	0xFE5
  1071                           fsr1l	equ	0xFE1
  1072                           status	equ	0xFD8
  1073                           
  1074 ;; *************** function _lcd_setcursor_vb *****************
  1075 ;; Defined at:
  1076 ;;		line 210 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  visible         1    wreg     unsigned char 
  1079 ;;  blink           1    4[COMRAM] unsigned char 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  visible         1    5[COMRAM] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1091 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;Total ram usage:        2 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    2
  1098 ;; This function calls:
  1099 ;;		_lcd_send_byte
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text1
  1106  001E28                     __ptext1:
  1107                           	opt stack 0
  1108  001E28                     _lcd_setcursor_vb:
  1109                           	opt stack 28
  1110                           
  1111                           ;incstack = 0
  1112                           ;lcd_setcursor_vb@visible stored from wreg
  1113  001E28  6E06               	movwf	lcd_setcursor_vb@visible,c
  1114                           
  1115                           ;unmc_lcd_216.c: 211: lcd_send_byte(0, 0xC|(visible<<1)|blink);
  1116  001E2A  5006               	movf	lcd_setcursor_vb@visible,w,c
  1117  001E2C  2406               	addwf	lcd_setcursor_vb@visible,w,c
  1118  001E2E  1005               	iorwf	lcd_setcursor_vb@blink,w,c
  1119  001E30  090C               	iorlw	12
  1120  001E32  6E03               	movwf	lcd_send_byte@n,c
  1121  001E34  0E00               	movlw	0
  1122  001E36  ECC4  F00E         	call	_lcd_send_byte
  1123  001E3A  0012               	return		;funcret
  1124  001E3C                     __end_of_lcd_setcursor_vb:
  1125                           	opt stack 0
  1126                           tblptru	equ	0xFF8
  1127                           tblptrh	equ	0xFF7
  1128                           tblptrl	equ	0xFF6
  1129                           tablat	equ	0xFF5
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           postdec1	equ	0xFE5
  1133                           fsr1l	equ	0xFE1
  1134                           status	equ	0xFD8
  1135                           
  1136 ;; *************** function _caratula *****************
  1137 ;; Defined at:
  1138 ;;		line 36 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;		None               void
  1145 ;; Registers used:
  1146 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    5
  1159 ;; This function calls:
  1160 ;;		_lcd_comand
  1161 ;;		_lcd_gotoxy
  1162 ;;		_lcd_putrs
  1163 ;;		_sprintf
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text2
  1170  00174A                     __ptext2:
  1171                           	opt stack 0
  1172  00174A                     _caratula:
  1173                           	opt stack 25
  1174                           
  1175                           ;main.c: 38: lcd_comand(0b00001100);
  1176                           
  1177                           ;incstack = 0
  1178  00174A  0E0C               	movlw	12
  1179  00174C  EC39  F00F         	call	_lcd_comand
  1180                           
  1181                           ;main.c: 39: lcd_gotoxy(1,1);
  1182  001750  0E01               	movlw	1
  1183  001752  6E05               	movwf	lcd_gotoxy@y,c
  1184  001754  0E01               	movlw	1
  1185  001756  ECF1  F00E         	call	_lcd_gotoxy
  1186                           
  1187                           ;main.c: 40: lcd_putrs("UNTREF");
  1188  00175A  0E34               	movlw	low STR_1
  1189  00175C  6E09               	movwf	lcd_putrs@ptr,c
  1190  00175E  0E0F               	movlw	high STR_1
  1191  001760  6E0A               	movwf	lcd_putrs@ptr+1,c
  1192  001762  EC08  F00E         	call	_lcd_putrs	;wreg free
  1193                           
  1194                           ;main.c: 41: sprintf(buffer2,"%02u/%02u/%02u",dia,mes,anio);
  1195  001766  0E78               	movlw	low _buffer2
  1196  001768  6E0D               	movwf	sprintf@sp,c
  1197  00176A  0E00               	movlw	high _buffer2
  1198  00176C  6E0E               	movwf	sprintf@sp+1,c
  1199  00176E  0E0F               	movlw	low STR_2
  1200  001770  6E0F               	movwf	sprintf@f,c
  1201  001772  0E0F               	movlw	high STR_2
  1202  001774  6E10               	movwf	sprintf@f+1,c
  1203  001776  C052  F011         	movff	_dia,?_sprintf+4
  1204  00177A  C053  F012         	movff	_dia+1,?_sprintf+5
  1205  00177E  C058  F013         	movff	_mes,?_sprintf+6
  1206  001782  C059  F014         	movff	_mes+1,?_sprintf+7
  1207  001786  C050  F015         	movff	_anio,?_sprintf+8
  1208  00178A  C051  F016         	movff	_anio+1,?_sprintf+9
  1209  00178E  EC9E  F007         	call	_sprintf	;wreg free
  1210                           
  1211                           ;main.c: 42: lcd_gotoxy(9,1);
  1212  001792  0E01               	movlw	1
  1213  001794  6E05               	movwf	lcd_gotoxy@y,c
  1214  001796  0E09               	movlw	9
  1215  001798  ECF1  F00E         	call	_lcd_gotoxy
  1216                           
  1217                           ;main.c: 43: lcd_putrs(buffer2);
  1218  00179C  0E78               	movlw	low _buffer2
  1219  00179E  6E09               	movwf	lcd_putrs@ptr,c
  1220  0017A0  0E00               	movlw	high _buffer2
  1221  0017A2  6E0A               	movwf	lcd_putrs@ptr+1,c
  1222  0017A4  EC08  F00E         	call	_lcd_putrs	;wreg free
  1223                           
  1224                           ;main.c: 44: sprintf(buffer2,"%02u:%02u:%02u",hora,minuto,segundo);
  1225  0017A8  0E78               	movlw	low _buffer2
  1226  0017AA  6E0D               	movwf	sprintf@sp,c
  1227  0017AC  0E00               	movlw	high _buffer2
  1228  0017AE  6E0E               	movwf	sprintf@sp+1,c
  1229  0017B0  0E1E               	movlw	low STR_3
  1230  0017B2  6E0F               	movwf	sprintf@f,c
  1231  0017B4  0E0F               	movlw	high STR_3
  1232  0017B6  6E10               	movwf	sprintf@f+1,c
  1233  0017B8  C056  F011         	movff	_hora,?_sprintf+4
  1234  0017BC  C057  F012         	movff	_hora+1,?_sprintf+5
  1235  0017C0  C05A  F013         	movff	_minuto,?_sprintf+6
  1236  0017C4  C05B  F014         	movff	_minuto+1,?_sprintf+7
  1237  0017C8  C039  F015         	movff	_segundo,?_sprintf+8
  1238  0017CC  C03A  F016         	movff	_segundo+1,?_sprintf+9
  1239  0017D0  EC9E  F007         	call	_sprintf	;wreg free
  1240                           
  1241                           ;main.c: 45: lcd_gotoxy(1,2);
  1242  0017D4  0E02               	movlw	2
  1243  0017D6  6E05               	movwf	lcd_gotoxy@y,c
  1244  0017D8  0E01               	movlw	1
  1245  0017DA  ECF1  F00E         	call	_lcd_gotoxy
  1246                           
  1247                           ;main.c: 47: b=b++;
  1248  0017DE  0E78               	movlw	low _buffer2
  1249  0017E0  6E09               	movwf	lcd_putrs@ptr,c
  1250  0017E2  0E00               	movlw	high _buffer2
  1251  0017E4  6E0A               	movwf	lcd_putrs@ptr+1,c
  1252  0017E6  EC08  F00E         	call	_lcd_putrs	;wreg free
  1253  0017EA  4A2F               	infsnz	_b,f,c
  1254  0017EC  2A30               	incf	_b+1,f,c
  1255                           
  1256                           ;main.c: 48: if(b<7)
  1257  0017EE  BE30               	btfsc	_b+1,7,c
  1258  0017F0  D006               	goto	l2359
  1259  0017F2  5030               	movf	_b+1,w,c
  1260  0017F4  E110               	bnz	l2363
  1261  0017F6  0E07               	movlw	7
  1262  0017F8  5C2F               	subwf	_b,w,c
  1263  0017FA  B0D8               	btfsc	status,0,c
  1264  0017FC  D00C               	goto	l2363
  1265  0017FE                     l2359:
  1266                           
  1267                           ;main.c: 49: {
  1268                           ;main.c: 50: lcd_gotoxy(1,1);
  1269  0017FE  0E01               	movlw	1
  1270  001800  6E05               	movwf	lcd_gotoxy@y,c
  1271  001802  0E01               	movlw	1
  1272  001804  ECF1  F00E         	call	_lcd_gotoxy
  1273                           
  1274                           ;main.c: 51: lcd_putrs("UNTREF");
  1275  001808  0E34               	movlw	low STR_1
  1276  00180A  6E09               	movwf	lcd_putrs@ptr,c
  1277  00180C  0E0F               	movlw	high STR_1
  1278  00180E  6E0A               	movwf	lcd_putrs@ptr+1,c
  1279  001810  EC08  F00E         	call	_lcd_putrs	;wreg free
  1280  001814  D000               	goto	l2363
  1281  001816                     l2363:
  1282                           
  1283                           ;main.c: 52: }
  1284                           ;main.c: 53: if(b>6)
  1285  001816  BE30               	btfsc	_b+1,7,c
  1286  001818  0012               	return	
  1287  00181A  5030               	movf	_b+1,w,c
  1288  00181C  E104               	bnz	u1780
  1289  00181E  0E07               	movlw	7
  1290  001820  5C2F               	subwf	_b,w,c
  1291  001822  A0D8               	btfss	status,0,c
  1292  001824  0012               	return	
  1293  001826                     u1780:
  1294                           
  1295                           ;main.c: 54: {
  1296                           ;main.c: 55: if(b==11){b=0;}
  1297  001826  0E0B               	movlw	11
  1298  001828  182F               	xorwf	_b,w,c
  1299  00182A  1030               	iorwf	_b+1,w,c
  1300  00182C  A4D8               	btfss	status,2,c
  1301  00182E  D005               	goto	l2369
  1302  001830  0E00               	movlw	0
  1303  001832  6E30               	movwf	_b+1,c
  1304  001834  0E00               	movlw	0
  1305  001836  6E2F               	movwf	_b,c
  1306  001838  D000               	goto	l2369
  1307  00183A                     l2369:
  1308                           
  1309                           ;main.c: 56: lcd_gotoxy(1,1);
  1310  00183A  0E01               	movlw	1
  1311  00183C  6E05               	movwf	lcd_gotoxy@y,c
  1312  00183E  0E01               	movlw	1
  1313  001840  ECF1  F00E         	call	_lcd_gotoxy
  1314                           
  1315                           ;main.c: 57: lcd_putrs("      ");
  1316  001844  0E2D               	movlw	low STR_5
  1317  001846  6E09               	movwf	lcd_putrs@ptr,c
  1318  001848  0E0F               	movlw	high STR_5
  1319  00184A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1320  00184C  EC08  F00E         	call	_lcd_putrs	;wreg free
  1321  001850  0012               	return	
  1322  001852  0012               	return		;funcret
  1323  001854                     __end_of_caratula:
  1324                           	opt stack 0
  1325                           tblptru	equ	0xFF8
  1326                           tblptrh	equ	0xFF7
  1327                           tblptrl	equ	0xFF6
  1328                           tablat	equ	0xFF5
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           postdec1	equ	0xFE5
  1332                           fsr1l	equ	0xFE1
  1333                           status	equ	0xFD8
  1334                           
  1335 ;; *************** function _sprintf *****************
  1336 ;; Defined at:
  1337 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1340 ;;		 -> buffer2(20), 
  1341 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1342 ;;		 -> STR_3(15), STR_2(15), 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  tmpval          4    0        struct .
  1345 ;;  cp              3    0        PTR const unsigned char 
  1346 ;;  width           2   32[COMRAM] int 
  1347 ;;  val             2   29[COMRAM] unsigned int 
  1348 ;;  ap              2   26[COMRAM] PTR void [1]
  1349 ;;		 -> ?_sprintf(2), 
  1350 ;;  len             2    0        unsigned int 
  1351 ;;  c               1   34[COMRAM] char 
  1352 ;;  prec            1   31[COMRAM] char 
  1353 ;;  flag            1   28[COMRAM] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2   12[COMRAM] int 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1363 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1364 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1366 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;Total ram usage:       23 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    1
  1370 ;; This function calls:
  1371 ;;		___lwdiv
  1372 ;;		___lwmod
  1373 ;;		___wmul
  1374 ;;		_isdigit
  1375 ;; This function is called by:
  1376 ;;		_caratula
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text3
  1381  000F3C                     __ptext3:
  1382                           	opt stack 0
  1383  000F3C                     _sprintf:
  1384                           	opt stack 28
  1385                           
  1386                           ;doprnt.c: 494: va_list ap;
  1387                           ;doprnt.c: 499: signed char c;
  1388                           ;doprnt.c: 501: int width;
  1389                           ;doprnt.c: 506: signed char prec;
  1390                           ;doprnt.c: 508: unsigned char flag;
  1391                           ;doprnt.c: 523: union {
  1392                           ;doprnt.c: 524: unsigned long vd;
  1393                           ;doprnt.c: 525: double integ;
  1394                           ;doprnt.c: 526: } tmpval;
  1395                           ;doprnt.c: 528: unsigned int val;
  1396                           ;doprnt.c: 529: unsigned len;
  1397                           ;doprnt.c: 530: const char * cp;
  1398                           ;doprnt.c: 533: *ap = __va_start();
  1399                           
  1400                           ;incstack = 0
  1401  000F3C  0E11               	movlw	low (?_sprintf+4)
  1402  000F3E  6E1B               	movwf	sprintf@ap,c
  1403  000F40  0E00               	movlw	high (?_sprintf+4)
  1404  000F42  6E1C               	movwf	sprintf@ap+1,c
  1405                           
  1406                           ;doprnt.c: 536: while(c = *f++) {
  1407  000F44  D117               	goto	l2261
  1408  000F46                     l2179:
  1409                           
  1410                           ;doprnt.c: 538: if(c != '%')
  1411  000F46  0E25               	movlw	37
  1412  000F48  1823               	xorwf	sprintf@c,w,c
  1413  000F4A  B4D8               	btfsc	status,2,c
  1414  000F4C  D009               	goto	l2185
  1415                           
  1416                           ;doprnt.c: 540: {
  1417                           ;doprnt.c: 541: ((*sp++ = (c)));
  1418  000F4E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1419  000F52  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1420  000F56  C023  FFDF         	movff	sprintf@c,indf2
  1421  000F5A  4A0D               	infsnz	sprintf@sp,f,c
  1422  000F5C  2A0E               	incf	sprintf@sp+1,f,c
  1423                           
  1424                           ;doprnt.c: 542: continue;
  1425  000F5E  D10A               	goto	l2261
  1426  000F60                     l2185:
  1427                           
  1428                           ;doprnt.c: 543: }
  1429                           ;doprnt.c: 546: width = 0;
  1430  000F60  0E00               	movlw	0
  1431  000F62  6E22               	movwf	sprintf@width+1,c
  1432  000F64  0E00               	movlw	0
  1433  000F66  6E21               	movwf	sprintf@width,c
  1434                           
  1435                           ;doprnt.c: 548: flag = 0;
  1436  000F68  0E00               	movlw	0
  1437  000F6A  6E1D               	movwf	sprintf@flag,c
  1438                           
  1439                           ;doprnt.c: 551: switch(*f) {
  1440                           
  1441                           ;doprnt.c: 550: for(;;) {
  1442  000F6C  D005               	goto	l2191
  1443  000F6E                     l2187:
  1444                           
  1445                           ;doprnt.c: 580: flag |= 0x04;
  1446  000F6E  841D               	bsf	sprintf@flag,2,c
  1447                           
  1448                           ;doprnt.c: 581: f++;
  1449  000F70  4A0F               	infsnz	sprintf@f,f,c
  1450  000F72  2A10               	incf	sprintf@f+1,f,c
  1451                           
  1452                           ;doprnt.c: 582: continue;
  1453  000F74  D001               	goto	l2191
  1454                           
  1455                           ;doprnt.c: 584: }
  1456  000F76  D00B               	goto	l2193
  1457  000F78                     l2191:
  1458  000F78  C00F  FFF6         	movff	sprintf@f,tblptrl
  1459  000F7C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1460  000F80                     	if	0	;tblptru may be non-zero
  1461  000F80                     	endif
  1462  000F80                     	if	0	;tblptru may be non-zero
  1463  000F80                     	endif
  1464  000F80  0008               	tblrd		*
  1465  000F82  50F5               	movf	tablat,w,c
  1466                           
  1467                           ; Switch size 1, requested type "space"
  1468                           ; Number of cases is 1, Range of values is 48 to 48
  1469                           ; switch strategies available:
  1470                           ; Name         Instructions Cycles
  1471                           ; simple_byte            4     3 (average)
  1472                           ;	Chosen strategy is simple_byte
  1473  000F84  0A30               	xorlw	48	; case 48
  1474  000F86  B4D8               	btfsc	status,2,c
  1475  000F88  D7F2               	goto	l2187
  1476                           
  1477                           ;doprnt.c: 585: break;
  1478  000F8A  D001               	goto	l2193
  1479                           
  1480                           ;doprnt.c: 586: }
  1481  000F8C  D7F5               	goto	l2191
  1482  000F8E                     l2193:
  1483                           
  1484                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1485  000F8E  C00F  FFF6         	movff	sprintf@f,tblptrl
  1486  000F92  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1487  000F96                     	if	0	;tblptru may be non-zero
  1488  000F96                     	endif
  1489  000F96                     	if	0	;tblptru may be non-zero
  1490  000F96                     	endif
  1491  000F96  0008               	tblrd		*
  1492  000F98  50F5               	movf	tablat,w,c
  1493  000F9A  EC03  F00F         	call	_isdigit
  1494  000F9E  A0D8               	btfss	status,0,c
  1495  000FA0  D03A               	goto	l2209
  1496                           
  1497                           ;doprnt.c: 598: width = 0;
  1498  000FA2  0E00               	movlw	0
  1499  000FA4  6E22               	movwf	sprintf@width+1,c
  1500  000FA6  0E00               	movlw	0
  1501  000FA8  6E21               	movwf	sprintf@width,c
  1502  000FAA  D000               	goto	l2197
  1503  000FAC                     l2197:
  1504                           
  1505                           ;doprnt.c: 600: width *= 10;
  1506  000FAC  C021  F001         	movff	sprintf@width,___wmul@multiplier
  1507  000FB0  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1508  000FB4  0E00               	movlw	0
  1509  000FB6  6E04               	movwf	___wmul@multiplicand+1,c
  1510  000FB8  0E0A               	movlw	10
  1511  000FBA  6E03               	movwf	___wmul@multiplicand,c
  1512  000FBC  ECDD  F00E         	call	___wmul	;wreg free
  1513  000FC0  C001  F021         	movff	?___wmul,sprintf@width
  1514  000FC4  C002  F022         	movff	?___wmul+1,sprintf@width+1
  1515                           
  1516                           ;doprnt.c: 601: width += *f++ - '0';
  1517  000FC8  0ED0               	movlw	208
  1518  000FCA  6E17               	movwf	??_sprintf& (0+255),c
  1519  000FCC  0EFF               	movlw	255
  1520  000FCE  6E18               	movwf	(??_sprintf+1)& (0+255),c
  1521  000FD0  C00F  FFF6         	movff	sprintf@f,tblptrl
  1522  000FD4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1523  000FD8                     	if	0	;tblptru may be non-zero
  1524  000FD8                     	endif
  1525  000FD8                     	if	0	;tblptru may be non-zero
  1526  000FD8                     	endif
  1527  000FD8  0008               	tblrd		*
  1528  000FDA  50F5               	movf	tablat,w,c
  1529  000FDC  6E19               	movwf	(??_sprintf+2)& (0+255),c
  1530  000FDE  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  1531  000FE0  5017               	movf	??_sprintf,w,c
  1532  000FE2  2619               	addwf	??_sprintf+2,f,c
  1533  000FE4  5018               	movf	??_sprintf+1,w,c
  1534  000FE6  221A               	addwfc	??_sprintf+3,f,c
  1535  000FE8  5019               	movf	??_sprintf+2,w,c
  1536  000FEA  2621               	addwf	sprintf@width,f,c
  1537  000FEC  501A               	movf	??_sprintf+3,w,c
  1538  000FEE  2222               	addwfc	sprintf@width+1,f,c
  1539  000FF0  4A0F               	infsnz	sprintf@f,f,c
  1540  000FF2  2A10               	incf	sprintf@f+1,f,c
  1541                           
  1542                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1543  000FF4  C00F  FFF6         	movff	sprintf@f,tblptrl
  1544  000FF8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1545  000FFC                     	if	0	;tblptru may be non-zero
  1546  000FFC                     	endif
  1547  000FFC                     	if	0	;tblptru may be non-zero
  1548  000FFC                     	endif
  1549  000FFC  0008               	tblrd		*
  1550  000FFE  50F5               	movf	tablat,w,c
  1551  001000  EC03  F00F         	call	_isdigit
  1552  001004  A0D8               	btfss	status,0,c
  1553  001006  D007               	goto	l2209
  1554  001008  D7D1               	goto	l2197
  1555                           
  1556                           ;doprnt.c: 608: }
  1557                           ;doprnt.c: 635: switch(c = *f++) {
  1558  00100A  D005               	goto	l2209
  1559                           
  1560                           ;doprnt.c: 638: goto alldone;
  1561                           
  1562                           ;doprnt.c: 637: case 0:
  1563  00100C  D0C1               	goto	l2263
  1564                           
  1565                           ;doprnt.c: 813: continue;
  1566                           
  1567                           ;doprnt.c: 802: default:
  1568  00100E  D0B2               	goto	l2261
  1569  001010                     l2205:
  1570                           
  1571                           ;doprnt.c: 818: flag |= 0xC0;
  1572  001010  0EC0               	movlw	192
  1573  001012  121D               	iorwf	sprintf@flag,f,c
  1574                           
  1575                           ;doprnt.c: 822: }
  1576                           
  1577                           ;doprnt.c: 819: break;
  1578  001014  D011               	goto	l2211
  1579  001016                     l2209:
  1580  001016  C00F  FFF6         	movff	sprintf@f,tblptrl
  1581  00101A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1582  00101E  4A0F               	infsnz	sprintf@f,f,c
  1583  001020  2A10               	incf	sprintf@f+1,f,c
  1584  001022                     	if	0	;tblptru may be non-zero
  1585  001022                     	endif
  1586  001022                     	if	0	;tblptru may be non-zero
  1587  001022                     	endif
  1588  001022  0008               	tblrd		*
  1589  001024  CFF5 F023          	movff	tablat,sprintf@c
  1590  001028  5023               	movf	sprintf@c,w,c
  1591                           
  1592                           ; Switch size 1, requested type "space"
  1593                           ; Number of cases is 2, Range of values is 0 to 117
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte            7     4 (average)
  1597                           ;	Chosen strategy is simple_byte
  1598  00102A  0A00               	xorlw	0	; case 0
  1599  00102C  B4D8               	btfsc	status,2,c
  1600  00102E  D0B0               	goto	l2263
  1601  001030  0A75               	xorlw	117	; case 117
  1602  001032  B4D8               	btfsc	status,2,c
  1603  001034  D7ED               	goto	l2205
  1604  001036  D09E               	goto	l2261
  1605  001038                     l2211:
  1606                           
  1607                           ;doprnt.c: 1273: {
  1608                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1609  001038  C01B  FFD9         	movff	sprintf@ap,fsr2l
  1610  00103C  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  1611  001040  CFDE F01E          	movff	postinc2,sprintf@val
  1612  001044  CFDD F01F          	movff	postdec2,sprintf@val+1
  1613  001048  0E02               	movlw	2
  1614  00104A  261B               	addwf	sprintf@ap,f,c
  1615  00104C  0E00               	movlw	0
  1616  00104E  221C               	addwfc	sprintf@ap+1,f,c
  1617                           
  1618                           ;doprnt.c: 1287: }
  1619                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1620  001050  0E01               	movlw	1
  1621  001052  6E23               	movwf	sprintf@c,c
  1622  001054                     l2217:
  1623  001054  0E05               	movlw	5
  1624  001056  1823               	xorwf	sprintf@c,w,c
  1625  001058  B4D8               	btfsc	status,2,c
  1626  00105A  D016               	goto	l2229
  1627  00105C  D001               	goto	l2221
  1628  00105E  D014               	goto	l2229
  1629  001060                     l2221:
  1630                           
  1631                           ;doprnt.c: 1306: if(val < dpowers[c])
  1632  001060  5023               	movf	sprintf@c,w,c
  1633  001062  0D02               	mullw	2
  1634  001064  0E01               	movlw	low _dpowers
  1635  001066  24F3               	addwf	prodl,w,c
  1636  001068  6EF6               	movwf	tblptrl,c
  1637  00106A  0E0F               	movlw	high _dpowers
  1638  00106C  20F4               	addwfc	prodh,w,c
  1639  00106E  6EF7               	movwf	tblptrh,c
  1640  001070                     	if	0	;There are less than 3 active tblptr bytes
  1641  001070                     	endif
  1642  001070  0009               	tblrd		*+
  1643  001072  50F5               	movf	tablat,w,c
  1644  001074  5C1E               	subwf	sprintf@val,w,c
  1645  001076  0009               	tblrd		*+
  1646  001078  50F5               	movf	tablat,w,c
  1647  00107A  581F               	subwfb	sprintf@val+1,w,c
  1648  00107C  A0D8               	btfss	status,0,c
  1649  00107E  D004               	goto	l2229
  1650  001080  D001               	goto	l2225
  1651                           
  1652                           ;doprnt.c: 1307: break;
  1653  001082  D002               	goto	l2229
  1654  001084                     l2225:
  1655  001084  2A23               	incf	sprintf@c,f,c
  1656  001086  D7E6               	goto	l2217
  1657  001088                     l2229:
  1658                           
  1659                           ;doprnt.c: 1381: if(width > c)
  1660  001088  0E80               	movlw	128
  1661  00108A  BE23               	btfsc	sprintf@c,7,c
  1662  00108C  0E7F               	movlw	127
  1663  00108E  6E17               	movwf	??_sprintf& (0+255),c
  1664  001090  5021               	movf	sprintf@width,w,c
  1665  001092  5C23               	subwf	sprintf@c,w,c
  1666  001094  5022               	movf	sprintf@width+1,w,c
  1667  001096  0A80               	xorlw	128
  1668  001098  5817               	subwfb	??_sprintf& (0+255),w,c
  1669  00109A  B0D8               	btfsc	status,0,c
  1670  00109C  D007               	goto	l2233
  1671                           
  1672                           ;doprnt.c: 1382: width -= c;
  1673  00109E  5023               	movf	sprintf@c,w,c
  1674  0010A0  5E21               	subwf	sprintf@width,f,c
  1675  0010A2  0E00               	movlw	0
  1676  0010A4  BE23               	btfsc	sprintf@c,7,c
  1677  0010A6  0EFF               	movlw	255
  1678  0010A8  5A22               	subwfb	sprintf@width+1,f,c
  1679  0010AA  D005               	goto	l2235
  1680  0010AC                     l2233:
  1681                           
  1682                           ;doprnt.c: 1383: else
  1683                           ;doprnt.c: 1384: width = 0;
  1684  0010AC  0E00               	movlw	0
  1685  0010AE  6E22               	movwf	sprintf@width+1,c
  1686  0010B0  0E00               	movlw	0
  1687  0010B2  6E21               	movwf	sprintf@width,c
  1688  0010B4  D000               	goto	l2235
  1689  0010B6                     l2235:
  1690                           
  1691                           ;doprnt.c: 1387: if(flag & 0x04) {
  1692  0010B6  A41D               	btfss	sprintf@flag,2,c
  1693  0010B8  D015               	goto	l2245
  1694                           
  1695                           ;doprnt.c: 1415: if(width)
  1696  0010BA  5021               	movf	sprintf@width,w,c
  1697  0010BC  1022               	iorwf	sprintf@width+1,w,c
  1698  0010BE  B4D8               	btfsc	status,2,c
  1699  0010C0  D026               	goto	l276
  1700  0010C2                     l2239:
  1701                           
  1702                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1703  0010C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1704  0010C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1705  0010CA  0E30               	movlw	48
  1706  0010CC  6EDF               	movwf	indf2,c
  1707  0010CE  4A0D               	infsnz	sprintf@sp,f,c
  1708  0010D0  2A0E               	incf	sprintf@sp+1,f,c
  1709                           
  1710                           ;doprnt.c: 1418: while(--width);
  1711  0010D2  0621               	decf	sprintf@width,f,c
  1712  0010D4  A0D8               	btfss	status,0,c
  1713  0010D6  0622               	decf	sprintf@width+1,f,c
  1714  0010D8  5021               	movf	sprintf@width,w,c
  1715  0010DA  1022               	iorwf	sprintf@width+1,w,c
  1716  0010DC  B4D8               	btfsc	status,2,c
  1717  0010DE  D017               	goto	l276
  1718  0010E0  D7F0               	goto	l2239
  1719                           
  1720                           ;doprnt.c: 1420: } else
  1721  0010E2  D015               	goto	l276
  1722  0010E4                     l2245:
  1723                           
  1724                           ;doprnt.c: 1422: {
  1725                           ;doprnt.c: 1424: if(width
  1726                           ;doprnt.c: 1428: )
  1727  0010E4  5021               	movf	sprintf@width,w,c
  1728  0010E6  1022               	iorwf	sprintf@width+1,w,c
  1729  0010E8  B4D8               	btfsc	status,2,c
  1730  0010EA  D011               	goto	l276
  1731  0010EC                     l2247:
  1732                           
  1733                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1734  0010EC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1735  0010F0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1736  0010F4  0E20               	movlw	32
  1737  0010F6  6EDF               	movwf	indf2,c
  1738  0010F8  4A0D               	infsnz	sprintf@sp,f,c
  1739  0010FA  2A0E               	incf	sprintf@sp+1,f,c
  1740                           
  1741                           ;doprnt.c: 1431: while(--width);
  1742  0010FC  0621               	decf	sprintf@width,f,c
  1743  0010FE  A0D8               	btfss	status,0,c
  1744  001100  0622               	decf	sprintf@width+1,f,c
  1745  001102  5021               	movf	sprintf@width,w,c
  1746  001104  1022               	iorwf	sprintf@width+1,w,c
  1747  001106  B4D8               	btfsc	status,2,c
  1748  001108  D002               	goto	l276
  1749  00110A  D7F0               	goto	l2247
  1750  00110C  D000               	goto	l276
  1751  00110E                     l276:
  1752                           
  1753                           ;doprnt.c: 1469: }
  1754                           ;doprnt.c: 1472: prec = c;
  1755  00110E  C023  F020         	movff	sprintf@c,sprintf@prec
  1756                           
  1757                           ;doprnt.c: 1474: while(prec--) {
  1758  001112  D02A               	goto	l2259
  1759  001114                     l2253:
  1760                           
  1761                           ;doprnt.c: 1478: {
  1762                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1763  001114  5020               	movf	sprintf@prec,w,c
  1764  001116  0D02               	mullw	2
  1765  001118  0E01               	movlw	low _dpowers
  1766  00111A  24F3               	addwf	prodl,w,c
  1767  00111C  6EF6               	movwf	tblptrl,c
  1768  00111E  0E0F               	movlw	high _dpowers
  1769  001120  20F4               	addwfc	prodh,w,c
  1770  001122  6EF7               	movwf	tblptrh,c
  1771  001124                     	if	0	;There are less than 3 active tblptr bytes
  1772  001124                     	endif
  1773  001124  0009               	tblrd		*+
  1774  001126  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1775  00112A  000A               	tblrd		*-
  1776  00112C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1777  001130  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  1778  001134  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1779  001138  ECDA  F00D         	call	___lwdiv	;wreg free
  1780  00113C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1781  001140  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1782  001144  0E00               	movlw	0
  1783  001146  6E0B               	movwf	___lwmod@divisor+1,c
  1784  001148  0E0A               	movlw	10
  1785  00114A  6E0A               	movwf	___lwmod@divisor,c
  1786  00114C  EC32  F00E         	call	___lwmod	;wreg free
  1787  001150  5008               	movf	?___lwmod,w,c
  1788  001152  0F30               	addlw	48
  1789  001154  6E23               	movwf	sprintf@c,c
  1790                           
  1791                           ;doprnt.c: 1523: }
  1792                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1793  001156  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1794  00115A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1795  00115E  C023  FFDF         	movff	sprintf@c,indf2
  1796  001162  4A0D               	infsnz	sprintf@sp,f,c
  1797  001164  2A0E               	incf	sprintf@sp+1,f,c
  1798  001166  D000               	goto	l2259
  1799  001168                     l2259:
  1800  001168  0620               	decf	sprintf@prec,f,c
  1801  00116A  2820               	incf	sprintf@prec,w,c
  1802  00116C  B4D8               	btfsc	status,2,c
  1803  00116E  D002               	goto	l2261
  1804  001170  D7D1               	goto	l2253
  1805  001172  D000               	goto	l2261
  1806  001174                     l2261:
  1807  001174  C00F  FFF6         	movff	sprintf@f,tblptrl
  1808  001178  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1809  00117C  4A0F               	infsnz	sprintf@f,f,c
  1810  00117E  2A10               	incf	sprintf@f+1,f,c
  1811  001180                     	if	0	;tblptru may be non-zero
  1812  001180                     	endif
  1813  001180                     	if	0	;tblptru may be non-zero
  1814  001180                     	endif
  1815  001180  0008               	tblrd		*
  1816  001182  CFF5 F023          	movff	tablat,sprintf@c
  1817  001186  5023               	movf	sprintf@c,w,c
  1818  001188  B4D8               	btfsc	status,2,c
  1819  00118A  D002               	goto	l2263
  1820  00118C  D6DC               	goto	l2179
  1821  00118E  D000               	goto	l2263
  1822  001190                     l2263:
  1823                           
  1824                           ;doprnt.c: 1538: *sp = 0;
  1825  001190  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1826  001194  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1827  001198  0E00               	movlw	0
  1828  00119A  6EDF               	movwf	indf2,c
  1829  00119C  0012               	return	
  1830                           
  1831                           ;doprnt.c: 1540: return 0;
  1832                           ;	Return value of _sprintf is never used
  1833  00119E  0012               	return		;funcret
  1834  0011A0                     __end_of_sprintf:
  1835                           	opt stack 0
  1836                           tblptru	equ	0xFF8
  1837                           tblptrh	equ	0xFF7
  1838                           tblptrl	equ	0xFF6
  1839                           tablat	equ	0xFF5
  1840                           prodh	equ	0xFF4
  1841                           prodl	equ	0xFF3
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           postdec1	equ	0xFE5
  1845                           fsr1l	equ	0xFE1
  1846                           indf2	equ	0xFDF
  1847                           postinc2	equ	0xFDE
  1848                           postdec2	equ	0xFDD
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8
  1852                           
  1853 ;; *************** function _isdigit *****************
  1854 ;; Defined at:
  1855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  c               1    wreg     unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  c               1    2[COMRAM] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;		None               void
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;Total ram usage:        3 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_sprintf
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text4
  1883  001E06                     __ptext4:
  1884                           	opt stack 0
  1885  001E06                     _isdigit:
  1886                           	opt stack 28
  1887                           
  1888                           ;incstack = 0
  1889                           ;isdigit@c stored from wreg
  1890  001E06  6E03               	movwf	isdigit@c,c
  1891  001E08  0E00               	movlw	0
  1892  001E0A  6E02               	movwf	_isdigit$1822,c
  1893  001E0C  0E3A               	movlw	58
  1894  001E0E  6003               	cpfslt	isdigit@c,c
  1895  001E10  D006               	goto	l1967
  1896  001E12  0E2F               	movlw	47
  1897  001E14  6403               	cpfsgt	isdigit@c,c
  1898  001E16  D003               	goto	l1967
  1899  001E18  0E01               	movlw	1
  1900  001E1A  6E02               	movwf	_isdigit$1822,c
  1901  001E1C  D000               	goto	l1967
  1902  001E1E                     l1967:
  1903  001E1E  C002  F001         	movff	_isdigit$1822,??_isdigit
  1904  001E22  3001               	rrcf	??_isdigit,w,c
  1905  001E24  0012               	return	
  1906  001E26  0012               	return		;funcret
  1907  001E28                     __end_of_isdigit:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           prodh	equ	0xFF4
  1914                           prodl	equ	0xFF3
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1l	equ	0xFE1
  1919                           indf2	equ	0xFDF
  1920                           postinc2	equ	0xFDE
  1921                           postdec2	equ	0xFDD
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function ___wmul *****************
  1927 ;; Defined at:
  1928 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  multiplier      2    0[COMRAM] unsigned int 
  1931 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  product         2    4[COMRAM] unsigned int 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  2    0[COMRAM] unsigned int 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, prodl, prodh
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;Total ram usage:        6 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_sprintf
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text5
  1957  001DBA                     __ptext5:
  1958                           	opt stack 0
  1959  001DBA                     ___wmul:
  1960                           	opt stack 28
  1961                           
  1962                           ;incstack = 0
  1963  001DBA  5001               	movf	___wmul@multiplier,w,c
  1964  001DBC  0203               	mulwf	___wmul@multiplicand,c
  1965  001DBE  CFF3 F005          	movff	prodl,___wmul@product
  1966  001DC2  CFF4 F006          	movff	prodh,___wmul@product+1
  1967  001DC6  5001               	movf	___wmul@multiplier,w,c
  1968  001DC8  0204               	mulwf	___wmul@multiplicand+1,c
  1969  001DCA  50F3               	movf	prodl,w,c
  1970  001DCC  2606               	addwf	___wmul@product+1,f,c
  1971  001DCE  5002               	movf	___wmul@multiplier+1,w,c
  1972  001DD0  0203               	mulwf	___wmul@multiplicand,c
  1973  001DD2  50F3               	movf	prodl,w,c
  1974  001DD4  2606               	addwf	___wmul@product+1,f,c
  1975  001DD6  C005  F001         	movff	___wmul@product,?___wmul
  1976  001DDA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1977  001DDE  0012               	return	
  1978  001DE0  0012               	return		;funcret
  1979  001DE2                     __end_of___wmul:
  1980                           	opt stack 0
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           prodh	equ	0xFF4
  1986                           prodl	equ	0xFF3
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1l	equ	0xFE1
  1991                           indf2	equ	0xFDF
  1992                           postinc2	equ	0xFDE
  1993                           postdec2	equ	0xFDD
  1994                           fsr2h	equ	0xFDA
  1995                           fsr2l	equ	0xFD9
  1996                           status	equ	0xFD8
  1997                           
  1998 ;; *************** function ___lwmod *****************
  1999 ;; Defined at:
  2000 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  dividend        2    7[COMRAM] unsigned int 
  2003 ;;  divisor         2    9[COMRAM] unsigned int 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  counter         1   11[COMRAM] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  2    7[COMRAM] unsigned int 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2018 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2019 ;;Total ram usage:        5 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_sprintf
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text6
  2029  001C64                     __ptext6:
  2030                           	opt stack 0
  2031  001C64                     ___lwmod:
  2032                           	opt stack 28
  2033                           
  2034                           ;incstack = 0
  2035  001C64  500A               	movf	___lwmod@divisor,w,c
  2036  001C66  100B               	iorwf	___lwmod@divisor+1,w,c
  2037  001C68  B4D8               	btfsc	status,2,c
  2038  001C6A  D01D               	goto	l930
  2039  001C6C  0E01               	movlw	1
  2040  001C6E  6E0C               	movwf	___lwmod@counter,c
  2041  001C70  D005               	goto	l2049
  2042  001C72                     l2047:
  2043  001C72  90D8               	bcf	status,0,c
  2044  001C74  360A               	rlcf	___lwmod@divisor,f,c
  2045  001C76  360B               	rlcf	___lwmod@divisor+1,f,c
  2046  001C78  2A0C               	incf	___lwmod@counter,f,c
  2047  001C7A  D000               	goto	l2049
  2048  001C7C                     l2049:
  2049  001C7C  BE0B               	btfsc	___lwmod@divisor+1,7,c
  2050  001C7E  D002               	goto	l2051
  2051  001C80  D7F8               	goto	l2047
  2052  001C82  D000               	goto	l2051
  2053  001C84                     l2051:
  2054  001C84  500A               	movf	___lwmod@divisor,w,c
  2055  001C86  5C08               	subwf	___lwmod@dividend,w,c
  2056  001C88  500B               	movf	___lwmod@divisor+1,w,c
  2057  001C8A  5809               	subwfb	___lwmod@dividend+1,w,c
  2058  001C8C  A0D8               	btfss	status,0,c
  2059  001C8E  D005               	goto	l2055
  2060  001C90  500A               	movf	___lwmod@divisor,w,c
  2061  001C92  5E08               	subwf	___lwmod@dividend,f,c
  2062  001C94  500B               	movf	___lwmod@divisor+1,w,c
  2063  001C96  5A09               	subwfb	___lwmod@dividend+1,f,c
  2064  001C98  D000               	goto	l2055
  2065  001C9A                     l2055:
  2066  001C9A  90D8               	bcf	status,0,c
  2067  001C9C  320B               	rrcf	___lwmod@divisor+1,f,c
  2068  001C9E  320A               	rrcf	___lwmod@divisor,f,c
  2069  001CA0  2E0C               	decfsz	___lwmod@counter,f,c
  2070  001CA2  D7F0               	goto	l2051
  2071  001CA4  D000               	goto	l930
  2072  001CA6                     l930:
  2073  001CA6  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2074  001CAA  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2075  001CAE  0012               	return		;funcret
  2076  001CB0                     __end_of___lwmod:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           prodh	equ	0xFF4
  2083                           prodl	equ	0xFF3
  2084                           postinc0	equ	0xFEE
  2085                           wreg	equ	0xFE8
  2086                           postdec1	equ	0xFE5
  2087                           fsr1l	equ	0xFE1
  2088                           indf2	equ	0xFDF
  2089                           postinc2	equ	0xFDE
  2090                           postdec2	equ	0xFDD
  2091                           fsr2h	equ	0xFDA
  2092                           fsr2l	equ	0xFD9
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function ___lwdiv *****************
  2096 ;; Defined at:
  2097 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  dividend        2    0[COMRAM] unsigned int 
  2100 ;;  divisor         2    2[COMRAM] unsigned int 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  quotient        2    4[COMRAM] unsigned int 
  2103 ;;  counter         1    6[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2    0[COMRAM] unsigned int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;Total ram usage:        7 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_sprintf
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text7
  2127  001BB4                     __ptext7:
  2128                           	opt stack 0
  2129  001BB4                     ___lwdiv:
  2130                           	opt stack 28
  2131                           
  2132                           ;incstack = 0
  2133  001BB4  0E00               	movlw	0
  2134  001BB6  6E06               	movwf	___lwdiv@quotient+1,c
  2135  001BB8  0E00               	movlw	0
  2136  001BBA  6E05               	movwf	___lwdiv@quotient,c
  2137  001BBC  5003               	movf	___lwdiv@divisor,w,c
  2138  001BBE  1004               	iorwf	___lwdiv@divisor+1,w,c
  2139  001BC0  B4D8               	btfsc	status,2,c
  2140  001BC2  D021               	goto	l920
  2141  001BC4  0E01               	movlw	1
  2142  001BC6  6E07               	movwf	___lwdiv@counter,c
  2143  001BC8  D005               	goto	l2029
  2144  001BCA                     l2027:
  2145  001BCA  90D8               	bcf	status,0,c
  2146  001BCC  3603               	rlcf	___lwdiv@divisor,f,c
  2147  001BCE  3604               	rlcf	___lwdiv@divisor+1,f,c
  2148  001BD0  2A07               	incf	___lwdiv@counter,f,c
  2149  001BD2  D000               	goto	l2029
  2150  001BD4                     l2029:
  2151  001BD4  BE04               	btfsc	___lwdiv@divisor+1,7,c
  2152  001BD6  D002               	goto	l2031
  2153  001BD8  D7F8               	goto	l2027
  2154  001BDA  D000               	goto	l2031
  2155  001BDC                     l2031:
  2156  001BDC  90D8               	bcf	status,0,c
  2157  001BDE  3605               	rlcf	___lwdiv@quotient,f,c
  2158  001BE0  3606               	rlcf	___lwdiv@quotient+1,f,c
  2159  001BE2  5003               	movf	___lwdiv@divisor,w,c
  2160  001BE4  5C01               	subwf	___lwdiv@dividend,w,c
  2161  001BE6  5004               	movf	___lwdiv@divisor+1,w,c
  2162  001BE8  5802               	subwfb	___lwdiv@dividend+1,w,c
  2163  001BEA  A0D8               	btfss	status,0,c
  2164  001BEC  D006               	goto	l2039
  2165  001BEE  5003               	movf	___lwdiv@divisor,w,c
  2166  001BF0  5E01               	subwf	___lwdiv@dividend,f,c
  2167  001BF2  5004               	movf	___lwdiv@divisor+1,w,c
  2168  001BF4  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2169  001BF6  8005               	bsf	___lwdiv@quotient,0,c
  2170  001BF8  D000               	goto	l2039
  2171  001BFA                     l2039:
  2172  001BFA  90D8               	bcf	status,0,c
  2173  001BFC  3204               	rrcf	___lwdiv@divisor+1,f,c
  2174  001BFE  3203               	rrcf	___lwdiv@divisor,f,c
  2175  001C00  2E07               	decfsz	___lwdiv@counter,f,c
  2176  001C02  D7EC               	goto	l2031
  2177  001C04  D000               	goto	l920
  2178  001C06                     l920:
  2179  001C06  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2180  001C0A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2181  001C0E  0012               	return		;funcret
  2182  001C10                     __end_of___lwdiv:
  2183                           	opt stack 0
  2184                           tblptru	equ	0xFF8
  2185                           tblptrh	equ	0xFF7
  2186                           tblptrl	equ	0xFF6
  2187                           tablat	equ	0xFF5
  2188                           prodh	equ	0xFF4
  2189                           prodl	equ	0xFF3
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           postdec1	equ	0xFE5
  2193                           fsr1l	equ	0xFE1
  2194                           indf2	equ	0xFDF
  2195                           postinc2	equ	0xFDE
  2196                           postdec2	equ	0xFDD
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function _lcd_putrs *****************
  2202 ;; Defined at:
  2203 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  2206 ;;		 -> STR_5(7), STR_4(7), buffer2(20), STR_1(7), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;		None               void
  2211 ;; Registers used:
  2212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2222 ;;Total ram usage:        2 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    4
  2225 ;; This function calls:
  2226 ;;		_lcd_putc
  2227 ;; This function is called by:
  2228 ;;		_caratula
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text8
  2233  001C10                     __ptext8:
  2234                           	opt stack 0
  2235  001C10                     _lcd_putrs:
  2236                           	opt stack 25
  2237                           
  2238                           ;unmc_lcd_216.c: 223: while(*ptr){
  2239                           
  2240                           ;incstack = 0
  2241  001C10  D015               	goto	l2175
  2242  001C12                     l2171:
  2243                           
  2244                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2245  001C12  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2246  001C16  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2247  001C1A  6AF8               	clrf	tblptru,c
  2248  001C1C  0E0E               	movlw	(high __ramtop+-1)
  2249  001C1E  64F7               	cpfsgt	tblptrh,c
  2250  001C20  D003               	bra	u1567
  2251  001C22  0008               	tblrd		*
  2252  001C24  50F5               	movf	tablat,w,c
  2253  001C26  D005               	bra	u1560
  2254  001C28                     u1567:
  2255  001C28  CFF6 FFE9          	movff	tblptrl,fsr0l
  2256  001C2C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2257  001C30  50EF               	movf	indf0,w,c
  2258  001C32                     u1560:
  2259  001C32  EC58  F00E         	call	_lcd_putc
  2260  001C36  4A09               	infsnz	lcd_putrs@ptr,f,c
  2261  001C38  2A0A               	incf	lcd_putrs@ptr+1,f,c
  2262  001C3A  D000               	goto	l2175
  2263  001C3C                     l2175:
  2264  001C3C  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2265  001C40  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2266  001C44  6AF8               	clrf	tblptru,c
  2267  001C46  0E0E               	movlw	(high __ramtop+-1)
  2268  001C48  64F7               	cpfsgt	tblptrh,c
  2269  001C4A  D003               	bra	u1577
  2270  001C4C  0008               	tblrd		*
  2271  001C4E  50F5               	movf	tablat,w,c
  2272  001C50  D005               	bra	u1570
  2273  001C52                     u1577:
  2274  001C52  CFF6 FFE9          	movff	tblptrl,fsr0l
  2275  001C56  CFF7 FFEA          	movff	tblptrh,fsr0h
  2276  001C5A  50EF               	movf	indf0,w,c
  2277  001C5C                     u1570:
  2278  001C5C  0900               	iorlw	0
  2279  001C5E  A4D8               	btfss	status,2,c
  2280  001C60  D7D8               	goto	l2171
  2281  001C62  0012               	return		;funcret
  2282  001C64                     __end_of_lcd_putrs:
  2283                           	opt stack 0
  2284                           tblptru	equ	0xFF8
  2285                           tblptrh	equ	0xFF7
  2286                           tblptrl	equ	0xFF6
  2287                           tablat	equ	0xFF5
  2288                           prodh	equ	0xFF4
  2289                           prodl	equ	0xFF3
  2290                           indf0	equ	0xFEF
  2291                           postinc0	equ	0xFEE
  2292                           fsr0h	equ	0xFEA
  2293                           fsr0l	equ	0xFE9
  2294                           wreg	equ	0xFE8
  2295                           postdec1	equ	0xFE5
  2296                           fsr1l	equ	0xFE1
  2297                           indf2	equ	0xFDF
  2298                           postinc2	equ	0xFDE
  2299                           postdec2	equ	0xFDD
  2300                           fsr2h	equ	0xFDA
  2301                           fsr2l	equ	0xFD9
  2302                           status	equ	0xFD8
  2303                           
  2304 ;; *************** function _lcd_putc *****************
  2305 ;; Defined at:
  2306 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  c               1    wreg     unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  c               1    7[COMRAM] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;		None               void
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2324 ;;Total ram usage:        1 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    3
  2327 ;; This function calls:
  2328 ;;		_lcd_gotoxy
  2329 ;;		_lcd_send_byte
  2330 ;; This function is called by:
  2331 ;;		_lcd_putrs
  2332 ;;		_lcd_puts
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text9
  2337  001CB0                     __ptext9:
  2338                           	opt stack 0
  2339  001CB0                     _lcd_putc:
  2340                           	opt stack 25
  2341                           
  2342                           ;incstack = 0
  2343                           ;lcd_putc@c stored from wreg
  2344  001CB0  6E08               	movwf	lcd_putc@c,c
  2345                           
  2346                           ;unmc_lcd_216.c: 173: switch(c){
  2347  001CB2  D018               	goto	l1957
  2348  001CB4                     l1947:
  2349                           
  2350                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2351  001CB4  0E01               	movlw	1
  2352  001CB6  6E03               	movwf	lcd_send_byte@n,c
  2353  001CB8  0E00               	movlw	0
  2354  001CBA  ECC4  F00E         	call	_lcd_send_byte
  2355                           
  2356                           ;unmc_lcd_216.c: 176: break;
  2357  001CBE  0012               	return	
  2358  001CC0                     l1949:
  2359                           
  2360                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2361  001CC0  0E02               	movlw	2
  2362  001CC2  6E05               	movwf	lcd_gotoxy@y,c
  2363  001CC4  0E01               	movlw	1
  2364  001CC6  ECF1  F00E         	call	_lcd_gotoxy
  2365                           
  2366                           ;unmc_lcd_216.c: 179: break;
  2367  001CCA  0012               	return	
  2368  001CCC                     l1951:
  2369                           
  2370                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2371  001CCC  0E10               	movlw	16
  2372  001CCE  6E03               	movwf	lcd_send_byte@n,c
  2373  001CD0  0E00               	movlw	0
  2374  001CD2  ECC4  F00E         	call	_lcd_send_byte
  2375                           
  2376                           ;unmc_lcd_216.c: 182: break;
  2377  001CD6  0012               	return	
  2378  001CD8                     l1953:
  2379                           
  2380                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2381  001CD8  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  2382  001CDC  0E01               	movlw	1
  2383  001CDE  ECC4  F00E         	call	_lcd_send_byte
  2384                           
  2385                           ;unmc_lcd_216.c: 186: }
  2386                           
  2387                           ;unmc_lcd_216.c: 185: break;
  2388  001CE2  0012               	return	
  2389  001CE4                     l1957:
  2390  001CE4  5008               	movf	lcd_putc@c,w,c
  2391                           
  2392                           ; Switch size 1, requested type "space"
  2393                           ; Number of cases is 3, Range of values is 8 to 12
  2394                           ; switch strategies available:
  2395                           ; Name         Instructions Cycles
  2396                           ; simple_byte           10     6 (average)
  2397                           ;	Chosen strategy is simple_byte
  2398  001CE6  0A08               	xorlw	8	; case 8
  2399  001CE8  B4D8               	btfsc	status,2,c
  2400  001CEA  D7F0               	goto	l1951
  2401  001CEC  0A02               	xorlw	2	; case 10
  2402  001CEE  B4D8               	btfsc	status,2,c
  2403  001CF0  D7E7               	goto	l1949
  2404  001CF2  0A06               	xorlw	6	; case 12
  2405  001CF4  B4D8               	btfsc	status,2,c
  2406  001CF6  D7DE               	goto	l1947
  2407  001CF8  D7EF               	goto	l1953
  2408  001CFA  0012               	return		;funcret
  2409  001CFC                     __end_of_lcd_putc:
  2410                           	opt stack 0
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           prodh	equ	0xFF4
  2416                           prodl	equ	0xFF3
  2417                           indf0	equ	0xFEF
  2418                           postinc0	equ	0xFEE
  2419                           fsr0h	equ	0xFEA
  2420                           fsr0l	equ	0xFE9
  2421                           wreg	equ	0xFE8
  2422                           postdec1	equ	0xFE5
  2423                           fsr1l	equ	0xFE1
  2424                           indf2	equ	0xFDF
  2425                           postinc2	equ	0xFDE
  2426                           postdec2	equ	0xFDD
  2427                           fsr2h	equ	0xFDA
  2428                           fsr2l	equ	0xFD9
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _lcd_gotoxy *****************
  2432 ;; Defined at:
  2433 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  x               1    wreg     unsigned char 
  2436 ;;  y               1    4[COMRAM] unsigned char 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  x               1    5[COMRAM] unsigned char 
  2439 ;;  address         1    6[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;		None               void
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2449 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;Total ram usage:        3 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    2
  2456 ;; This function calls:
  2457 ;;		_lcd_send_byte
  2458 ;; This function is called by:
  2459 ;;		_caratula
  2460 ;;		_main
  2461 ;;		_lcd_putc
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text10
  2466  001DE2                     __ptext10:
  2467                           	opt stack 0
  2468  001DE2                     _lcd_gotoxy:
  2469                           	opt stack 28
  2470                           
  2471                           ;incstack = 0
  2472                           ;lcd_gotoxy@x stored from wreg
  2473  001DE2  6E06               	movwf	lcd_gotoxy@x,c
  2474                           
  2475                           ;unmc_lcd_216.c: 159: int8 address;
  2476                           ;unmc_lcd_216.c: 161: if(y != 1)
  2477  001DE4  0405               	decf	lcd_gotoxy@y,w,c
  2478  001DE6  B4D8               	btfsc	status,2,c
  2479  001DE8  D002               	goto	l1803
  2480                           
  2481                           ;unmc_lcd_216.c: 162: address = 0x40;
  2482  001DEA  0E40               	movlw	64
  2483  001DEC  D001               	goto	L2
  2484  001DEE                     l1803:
  2485                           
  2486                           ;unmc_lcd_216.c: 163: else
  2487                           ;unmc_lcd_216.c: 164: address=0;
  2488  001DEE  0E00               	movlw	0
  2489  001DF0                     L2:
  2490  001DF0  6E07               	movwf	lcd_gotoxy@address,c
  2491  001DF2  D000               	goto	l1805
  2492  001DF4                     l1805:
  2493                           
  2494                           ;unmc_lcd_216.c: 166: address += x-1;
  2495  001DF4  0406               	decf	lcd_gotoxy@x,w,c
  2496  001DF6  2607               	addwf	lcd_gotoxy@address,f,c
  2497                           
  2498                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2499  001DF8  5007               	movf	lcd_gotoxy@address,w,c
  2500  001DFA  0980               	iorlw	128
  2501  001DFC  6E03               	movwf	lcd_send_byte@n,c
  2502  001DFE  0E00               	movlw	0
  2503  001E00  ECC4  F00E         	call	_lcd_send_byte
  2504  001E04  0012               	return		;funcret
  2505  001E06                     __end_of_lcd_gotoxy:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           prodh	equ	0xFF4
  2512                           prodl	equ	0xFF3
  2513                           indf0	equ	0xFEF
  2514                           postinc0	equ	0xFEE
  2515                           fsr0h	equ	0xFEA
  2516                           fsr0l	equ	0xFE9
  2517                           wreg	equ	0xFE8
  2518                           postdec1	equ	0xFE5
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _Setup *****************
  2528 ;; Defined at:
  2529 ;;		line 66 in file "main.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;		None               void
  2536 ;; Registers used:
  2537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    3
  2550 ;; This function calls:
  2551 ;;		_Write_RTC
  2552 ;;		_lcd_comand
  2553 ;;		_lcd_init
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text11
  2560  001CFC                     __ptext11:
  2561                           	opt stack 0
  2562  001CFC                     _Setup:
  2563                           	opt stack 27
  2564                           
  2565                           ;main.c: 68: OSCTUNEbits.INTSRC=1;
  2566                           
  2567                           ;incstack = 0
  2568  001CFC  8E9B               	bsf	3995,7,c	;volatile
  2569                           
  2570                           ;main.c: 69: OSCTUNEbits.PLLEN=0;
  2571  001CFE  9C9B               	bcf	3995,6,c	;volatile
  2572                           
  2573                           ;main.c: 70: OSCCONbits.IRCF0=1;
  2574  001D00  88D3               	bsf	4051,4,c	;volatile
  2575                           
  2576                           ;main.c: 71: OSCCONbits.IRCF1=1;
  2577  001D02  8AD3               	bsf	4051,5,c	;volatile
  2578                           
  2579                           ;main.c: 72: OSCCONbits.IRCF2=1;
  2580  001D04  8CD3               	bsf	4051,6,c	;volatile
  2581                           
  2582                           ;main.c: 73: OSCCONbits.SCS0=0;
  2583  001D06  90D3               	bcf	4051,0,c	;volatile
  2584                           
  2585                           ;main.c: 74: OSCCONbits.SCS1=0;
  2586  001D08  92D3               	bcf	4051,1,c	;volatile
  2587                           
  2588                           ;main.c: 75: TRISA = 0b11111111;
  2589  001D0A  6892               	setf	3986,c	;volatile
  2590                           
  2591                           ;main.c: 76: TRISB = 0;
  2592  001D0C  0E00               	movlw	0
  2593  001D0E  6E93               	movwf	3987,c	;volatile
  2594                           
  2595                           ;main.c: 77: TRISC = 0b00000111;
  2596  001D10  0E07               	movlw	7
  2597  001D12  6E94               	movwf	3988,c	;volatile
  2598                           
  2599                           ;main.c: 81: ANCON0=0b11111111;
  2600  001D14  010F               	movlb	15	; () banked
  2601  001D16  6948               	setf	72,b	;volatile
  2602                           
  2603                           ;main.c: 82: ANCON0=0b10010111;
  2604  001D18  0E97               	movlw	151
  2605  001D1A  010F               	movlb	15	; () banked
  2606  001D1C  6F48               	movwf	72,b	;volatile
  2607                           
  2608                           ;main.c: 83: ADCON0=0b00101101;
  2609  001D1E  0E2D               	movlw	45
  2610  001D20  6EC2               	movwf	4034,c	;volatile
  2611                           
  2612                           ;main.c: 84: ADCON1=0b00010000;
  2613  001D22  0E10               	movlw	16
  2614  001D24  6EC1               	movwf	4033,c	;volatile
  2615                           
  2616                           ; BSR set to: 15
  2617                           ;main.c: 85: RTCCFGbits.RTCEN=1;
  2618  001D26  010F               	movlb	15	; () banked
  2619  001D28  8F3F               	bsf	63,7,b	;volatile
  2620                           
  2621                           ; BSR set to: 15
  2622                           ;main.c: 86: RTCCFGbits.RTCWREN=1;
  2623  001D2A  010F               	movlb	15	; () banked
  2624  001D2C  8B3F               	bsf	63,5,b	;volatile
  2625                           
  2626                           ; BSR set to: 15
  2627                           ;main.c: 87: T1CONbits.T1OSCEN=1;
  2628  001D2E  86CD               	bsf	4045,3,c	;volatile
  2629                           
  2630                           ; BSR set to: 15
  2631                           ;main.c: 88: Write_RTC();
  2632  001D30  ECD8  F009         	call	_Write_RTC	;wreg free
  2633                           
  2634                           ;main.c: 89: lcd_init();
  2635  001D34  EC28  F00D         	call	_lcd_init	;wreg free
  2636                           
  2637                           ;main.c: 91: lcd_comand(0b00001110);
  2638  001D38  0E0E               	movlw	14
  2639  001D3A  EC39  F00F         	call	_lcd_comand
  2640                           
  2641                           ;main.c: 94: LATBbits.LATB1 = 0;;
  2642  001D3E  928A               	bcf	3978,1,c	;volatile
  2643                           
  2644                           ;main.c: 95: LATBbits.LATB0 = 0;;
  2645  001D40  908A               	bcf	3978,0,c	;volatile
  2646  001D42  0012               	return		;funcret
  2647  001D44                     __end_of_Setup:
  2648                           	opt stack 0
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           prodh	equ	0xFF4
  2654                           prodl	equ	0xFF3
  2655                           indf0	equ	0xFEF
  2656                           postinc0	equ	0xFEE
  2657                           fsr0h	equ	0xFEA
  2658                           fsr0l	equ	0xFE9
  2659                           wreg	equ	0xFE8
  2660                           postdec1	equ	0xFE5
  2661                           fsr1l	equ	0xFE1
  2662                           indf2	equ	0xFDF
  2663                           postinc2	equ	0xFDE
  2664                           postdec2	equ	0xFDD
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _lcd_init *****************
  2670 ;; Defined at:
  2671 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  i               1    4[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;		None               void
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;Total ram usage:        1 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    2
  2692 ;; This function calls:
  2693 ;;		_Delay1KTCYx
  2694 ;;		_lcd_send_byte
  2695 ;;		_lcd_send_nibble
  2696 ;; This function is called by:
  2697 ;;		_Setup
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text12
  2702  001A50                     __ptext12:
  2703                           	opt stack 0
  2704  001A50                     _lcd_init:
  2705                           	opt stack 27
  2706                           
  2707                           ;unmc_lcd_216.c: 120: int8 i;
  2708                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2709                           
  2710                           ;incstack = 0
  2711  001A50  9693               	bcf	3987,3,c	;volatile
  2712                           
  2713                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2714  001A52  9493               	bcf	3987,2,c	;volatile
  2715                           
  2716                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2717  001A54  968A               	bcf	3978,3,c	;volatile
  2718                           
  2719                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2720  001A56  948A               	bcf	3978,2,c	;volatile
  2721                           
  2722                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2723  001A58  9893               	bcf	3987,4,c	;volatile
  2724                           
  2725                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2726  001A5A  9A93               	bcf	3987,5,c	;volatile
  2727                           
  2728                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2729  001A5C  9C93               	bcf	3987,6,c	;volatile
  2730                           
  2731                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2732  001A5E  9E93               	bcf	3987,7,c	;volatile
  2733                           
  2734                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2735  001A60  0E0A               	movlw	10
  2736  001A62  EC1E  F00F         	call	_Delay1KTCYx
  2737                           
  2738                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2739  001A66  0E0A               	movlw	10
  2740  001A68  EC1E  F00F         	call	_Delay1KTCYx
  2741                           
  2742                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2743  001A6C  0E0A               	movlw	10
  2744  001A6E  EC1E  F00F         	call	_Delay1KTCYx
  2745                           
  2746                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2747  001A72  0E00               	movlw	0
  2748  001A74  6E05               	movwf	lcd_init@i,c
  2749  001A76                     l2273:
  2750  001A76  0E02               	movlw	2
  2751  001A78  6405               	cpfsgt	lcd_init@i,c
  2752  001A7A  D001               	goto	l2277
  2753  001A7C  D008               	goto	l2283
  2754  001A7E                     l2277:
  2755                           
  2756                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2757  001A7E  0E03               	movlw	3
  2758  001A80  EC68  F00D         	call	_lcd_send_nibble
  2759                           
  2760                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2761  001A84  0E0A               	movlw	10
  2762  001A86  EC1E  F00F         	call	_Delay1KTCYx
  2763  001A8A  2A05               	incf	lcd_init@i,f,c
  2764  001A8C  D7F4               	goto	l2273
  2765  001A8E                     l2283:
  2766                           
  2767                           ;unmc_lcd_216.c: 146: }
  2768                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2769  001A8E  0E02               	movlw	2
  2770  001A90  EC68  F00D         	call	_lcd_send_nibble
  2771                           
  2772                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2773  001A94  0E00               	movlw	0
  2774  001A96  6E05               	movwf	lcd_init@i,c
  2775  001A98  0E03               	movlw	3
  2776  001A9A  6405               	cpfsgt	lcd_init@i,c
  2777  001A9C  D002               	goto	l2291
  2778  001A9E  0012               	return	
  2779  001AA0  0012               	return	
  2780  001AA2                     l2291:
  2781                           
  2782                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2783  001AA2  5005               	movf	lcd_init@i,w,c
  2784  001AA4  0D01               	mullw	1
  2785  001AA6  0E0B               	movlw	low _LCD_INIT_STRING
  2786  001AA8  24F3               	addwf	prodl,w,c
  2787  001AAA  6EF6               	movwf	tblptrl,c
  2788  001AAC  0E0F               	movlw	high _LCD_INIT_STRING
  2789  001AAE  20F4               	addwfc	prodh,w,c
  2790  001AB0  6EF7               	movwf	tblptrh,c
  2791  001AB2                     	if	0	;There are less than 3 active tblptr bytes
  2792  001AB2                     	endif
  2793  001AB2  0008               	tblrd		*
  2794  001AB4  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2795  001AB8  0E00               	movlw	0
  2796  001ABA  ECC4  F00E         	call	_lcd_send_byte
  2797                           
  2798                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2799  001ABE  0E0A               	movlw	10
  2800  001AC0  EC1E  F00F         	call	_Delay1KTCYx
  2801  001AC4  2A05               	incf	lcd_init@i,f,c
  2802  001AC6  0E03               	movlw	3
  2803  001AC8  6405               	cpfsgt	lcd_init@i,c
  2804  001ACA  D7EB               	goto	l2291
  2805  001ACC  0012               	return	
  2806  001ACE  0012               	return		;funcret
  2807  001AD0                     __end_of_lcd_init:
  2808                           	opt stack 0
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           indf0	equ	0xFEF
  2816                           postinc0	equ	0xFEE
  2817                           fsr0h	equ	0xFEA
  2818                           fsr0l	equ	0xFE9
  2819                           wreg	equ	0xFE8
  2820                           postdec1	equ	0xFE5
  2821                           fsr1l	equ	0xFE1
  2822                           indf2	equ	0xFDF
  2823                           postinc2	equ	0xFDE
  2824                           postdec2	equ	0xFDD
  2825                           fsr2h	equ	0xFDA
  2826                           fsr2l	equ	0xFD9
  2827                           status	equ	0xFD8
  2828                           
  2829 ;; *************** function _Delay1KTCYx *****************
  2830 ;; Defined at:
  2831 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  unit            1    wreg     unsigned char 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  unit            1    0[COMRAM] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;		None               void
  2838 ;; Registers used:
  2839 ;;		wreg
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;Total ram usage:        1 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_lcd_init
  2855 ;;		_DelayPORXLCD
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text13
  2860  001E3C                     __ptext13:
  2861                           	opt stack 0
  2862  001E3C                     _Delay1KTCYx:
  2863                           	opt stack 28
  2864                           
  2865                           ;incstack = 0
  2866                           ;Delay1KTCYx@unit stored from wreg
  2867  001E3C  6E01               	movwf	Delay1KTCYx@unit,c
  2868  001E3E  0EFA               	movlw	250
  2869  001E40                     u2147:
  2870  001E40  F000               	nop	
  2871  001E42  2EE8               	decfsz	wreg,f,c
  2872  001E44  D7FD               	goto	u2147
  2873  001E46  2E01               	decfsz	Delay1KTCYx@unit,f,c
  2874  001E48  D7FA               	goto	l1049
  2875  001E4A  0012               	return	
  2876  001E4C  0012               	return		;funcret
  2877  001E4E                     __end_of_Delay1KTCYx:
  2878                           	opt stack 0
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           prodh	equ	0xFF4
  2884                           prodl	equ	0xFF3
  2885                           indf0	equ	0xFEF
  2886                           postinc0	equ	0xFEE
  2887                           fsr0h	equ	0xFEA
  2888                           fsr0l	equ	0xFE9
  2889                           wreg	equ	0xFE8
  2890                           postdec1	equ	0xFE5
  2891                           fsr1l	equ	0xFE1
  2892                           indf2	equ	0xFDF
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function _lcd_comand *****************
  2900 ;; Defined at:
  2901 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  d               1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  d               1    4[COMRAM] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;		None               void
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;Total ram usage:        1 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    2
  2922 ;; This function calls:
  2923 ;;		_lcd_send_byte
  2924 ;; This function is called by:
  2925 ;;		_caratula
  2926 ;;		_Setup
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text14
  2931  001E72                     __ptext14:
  2932                           	opt stack 0
  2933  001E72                     _lcd_comand:
  2934                           	opt stack 27
  2935                           
  2936                           ;incstack = 0
  2937                           ;lcd_comand@d stored from wreg
  2938  001E72  6E05               	movwf	lcd_comand@d,c
  2939                           
  2940                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2941  001E74  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  2942  001E78  0E00               	movlw	0
  2943  001E7A  ECC4  F00E         	call	_lcd_send_byte
  2944  001E7E  0012               	return		;funcret
  2945  001E80                     __end_of_lcd_comand:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           indf0	equ	0xFEF
  2954                           postinc0	equ	0xFEE
  2955                           fsr0h	equ	0xFEA
  2956                           fsr0l	equ	0xFE9
  2957                           wreg	equ	0xFE8
  2958                           postdec1	equ	0xFE5
  2959                           fsr1l	equ	0xFE1
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           postdec2	equ	0xFDD
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _lcd_send_byte *****************
  2968 ;; Defined at:
  2969 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  address         1    wreg     unsigned char 
  2972 ;;  n               1    2[COMRAM] unsigned char 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  address         1    3[COMRAM] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2984 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;Total ram usage:        2 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    1
  2991 ;; This function calls:
  2992 ;;		_Delay100TCYx
  2993 ;;		_lcd_send_nibble
  2994 ;; This function is called by:
  2995 ;;		_lcd_init
  2996 ;;		_lcd_gotoxy
  2997 ;;		_lcd_putc
  2998 ;;		_lcd_comand
  2999 ;;		_lcd_setcursor_vb
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text15
  3004  001D88                     __ptext15:
  3005                           	opt stack 0
  3006  001D88                     _lcd_send_byte:
  3007                           	opt stack 28
  3008                           
  3009                           ;incstack = 0
  3010                           ;lcd_send_byte@address stored from wreg
  3011  001D88  6E04               	movwf	lcd_send_byte@address,c
  3012                           
  3013                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  3014  001D8A  968A               	bcf	3978,3,c	;volatile
  3015                           
  3016                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  3017  001D8C  0E02               	movlw	2
  3018  001D8E  EC27  F00F         	call	_Delay100TCYx
  3019                           
  3020                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  3021  001D92  9893               	bcf	3987,4,c	;volatile
  3022                           
  3023                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  3024  001D94  9A93               	bcf	3987,5,c	;volatile
  3025                           
  3026                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  3027  001D96  9C93               	bcf	3987,6,c	;volatile
  3028                           
  3029                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  3030  001D98  9E93               	bcf	3987,7,c	;volatile
  3031                           
  3032                           ;unmc_lcd_216.c: 101: if(address)
  3033  001D9A  5004               	movf	lcd_send_byte@address,w,c
  3034  001D9C  B4D8               	btfsc	status,2,c
  3035  001D9E  D002               	goto	l197
  3036                           
  3037                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  3038  001DA0  868A               	bsf	3978,3,c	;volatile
  3039  001DA2  D001               	goto	l198
  3040  001DA4                     l197:
  3041                           
  3042                           ;unmc_lcd_216.c: 103: else
  3043                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  3044  001DA4  968A               	bcf	3978,3,c	;volatile
  3045  001DA6                     l198:
  3046                           
  3047                           ;unmc_lcd_216.c: 106: __nop();
  3048  001DA6  F000               	nop	
  3049                           
  3050                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  3051  001DA8  3803               	swapf	lcd_send_byte@n,w,c
  3052  001DAA  0B0F               	andlw	15
  3053  001DAC  EC68  F00D         	call	_lcd_send_nibble
  3054                           
  3055                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  3056  001DB0  5003               	movf	lcd_send_byte@n,w,c
  3057  001DB2  0B0F               	andlw	15
  3058  001DB4  EC68  F00D         	call	_lcd_send_nibble
  3059  001DB8  0012               	return		;funcret
  3060  001DBA                     __end_of_lcd_send_byte:
  3061                           	opt stack 0
  3062                           tblptru	equ	0xFF8
  3063                           tblptrh	equ	0xFF7
  3064                           tblptrl	equ	0xFF6
  3065                           tablat	equ	0xFF5
  3066                           prodh	equ	0xFF4
  3067                           prodl	equ	0xFF3
  3068                           indf0	equ	0xFEF
  3069                           postinc0	equ	0xFEE
  3070                           fsr0h	equ	0xFEA
  3071                           fsr0l	equ	0xFE9
  3072                           wreg	equ	0xFE8
  3073                           postdec1	equ	0xFE5
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           postinc2	equ	0xFDE
  3077                           postdec2	equ	0xFDD
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _lcd_send_nibble *****************
  3083 ;; Defined at:
  3084 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  nibble          1    wreg     unsigned char 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  nibble          1    1[COMRAM] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_lcd_send_byte
  3108 ;;		_lcd_init
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text16
  3113  001AD0                     __ptext16:
  3114                           	opt stack 0
  3115  001AD0                     _lcd_send_nibble:
  3116                           	opt stack 28
  3117                           
  3118                           ;incstack = 0
  3119                           ;lcd_send_nibble@nibble stored from wreg
  3120  001AD0  6E02               	movwf	lcd_send_nibble@nibble,c
  3121                           
  3122                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  3123  001AD2  A002               	btfss	lcd_send_nibble@nibble,0,c
  3124  001AD4  D003               	goto	u1060
  3125  001AD6  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3126  001AD8  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3127  001ADA  D001               	goto	u1078
  3128  001ADC                     u1060:
  3129  001ADC  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3130  001ADE                     u1078:
  3131  001ADE  3A01               	swapf	??_lcd_send_nibble,f,c
  3132  001AE0  508A               	movf	3978,w,c	;volatile
  3133  001AE2  1801               	xorwf	??_lcd_send_nibble,w,c
  3134  001AE4  0BEF               	andlw	-17
  3135  001AE6  1801               	xorwf	??_lcd_send_nibble,w,c
  3136  001AE8  6E8A               	movwf	3978,c	;volatile
  3137                           
  3138                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  3139  001AEA  A202               	btfss	lcd_send_nibble@nibble,1,c
  3140  001AEC  D003               	goto	u1080
  3141  001AEE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3142  001AF0  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3143  001AF2  D001               	goto	u1098
  3144  001AF4                     u1080:
  3145  001AF4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3146  001AF6                     u1098:
  3147  001AF6  3A01               	swapf	??_lcd_send_nibble,f,c
  3148  001AF8  4601               	rlncf	??_lcd_send_nibble,f,c
  3149  001AFA  508A               	movf	3978,w,c	;volatile
  3150  001AFC  1801               	xorwf	??_lcd_send_nibble,w,c
  3151  001AFE  0BDF               	andlw	-33
  3152  001B00  1801               	xorwf	??_lcd_send_nibble,w,c
  3153  001B02  6E8A               	movwf	3978,c	;volatile
  3154                           
  3155                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  3156  001B04  A402               	btfss	lcd_send_nibble@nibble,2,c
  3157  001B06  D003               	goto	u1100
  3158  001B08  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3159  001B0A  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3160  001B0C  D001               	goto	u1118
  3161  001B0E                     u1100:
  3162  001B0E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3163  001B10                     u1118:
  3164  001B10  3A01               	swapf	??_lcd_send_nibble,f,c
  3165  001B12  4601               	rlncf	??_lcd_send_nibble,f,c
  3166  001B14  4601               	rlncf	??_lcd_send_nibble,f,c
  3167  001B16  508A               	movf	3978,w,c	;volatile
  3168  001B18  1801               	xorwf	??_lcd_send_nibble,w,c
  3169  001B1A  0BBF               	andlw	-65
  3170  001B1C  1801               	xorwf	??_lcd_send_nibble,w,c
  3171  001B1E  6E8A               	movwf	3978,c	;volatile
  3172                           
  3173                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  3174  001B20  A602               	btfss	lcd_send_nibble@nibble,3,c
  3175  001B22  D003               	goto	u1120
  3176  001B24  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3177  001B26  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3178  001B28  D001               	goto	u1138
  3179  001B2A                     u1120:
  3180  001B2A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3181  001B2C                     u1138:
  3182  001B2C  3201               	rrcf	??_lcd_send_nibble,f,c
  3183  001B2E  3201               	rrcf	??_lcd_send_nibble,f,c
  3184  001B30  508A               	movf	3978,w,c	;volatile
  3185  001B32  1801               	xorwf	??_lcd_send_nibble,w,c
  3186  001B34  0B7F               	andlw	-129
  3187  001B36  1801               	xorwf	??_lcd_send_nibble,w,c
  3188  001B38  6E8A               	movwf	3978,c	;volatile
  3189                           
  3190                           ;unmc_lcd_216.c: 32: __nop();
  3191  001B3A  F000               	nop	
  3192                           
  3193                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3194  001B3C  848A               	bsf	3978,2,c	;volatile
  3195                           
  3196                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3197  001B3E  F000               	nop	
  3198  001B40  F000               	nop	
  3199                           
  3200                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3201  001B42  948A               	bcf	3978,2,c	;volatile
  3202  001B44  0012               	return		;funcret
  3203  001B46                     __end_of_lcd_send_nibble:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           prodh	equ	0xFF4
  3210                           prodl	equ	0xFF3
  3211                           indf0	equ	0xFEF
  3212                           postinc0	equ	0xFEE
  3213                           fsr0h	equ	0xFEA
  3214                           fsr0l	equ	0xFE9
  3215                           wreg	equ	0xFE8
  3216                           postdec1	equ	0xFE5
  3217                           fsr1l	equ	0xFE1
  3218                           indf2	equ	0xFDF
  3219                           postinc2	equ	0xFDE
  3220                           postdec2	equ	0xFDD
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8
  3224                           
  3225 ;; *************** function _Delay100TCYx *****************
  3226 ;; Defined at:
  3227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  unit            1    wreg     unsigned char 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  unit            1    0[COMRAM] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3245 ;;Total ram usage:        1 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_lcd_send_byte
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text17
  3255  001E4E                     __ptext17:
  3256                           	opt stack 0
  3257  001E4E                     _Delay100TCYx:
  3258                           	opt stack 28
  3259                           
  3260                           ;incstack = 0
  3261                           ;Delay100TCYx@unit stored from wreg
  3262  001E4E  6E01               	movwf	Delay100TCYx@unit,c
  3263  001E50  0E21               	movlw	33
  3264  001E52                     u2157:
  3265  001E52  2EE8               	decfsz	wreg,f,c
  3266  001E54  D7FE               	goto	u2157
  3267  001E56  F000               	nop	
  3268  001E58  2E01               	decfsz	Delay100TCYx@unit,f,c
  3269  001E5A  D7FA               	goto	l1777
  3270  001E5C  0012               	return	
  3271  001E5E  0012               	return		;funcret
  3272  001E60                     __end_of_Delay100TCYx:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           indf0	equ	0xFEF
  3281                           postinc0	equ	0xFEE
  3282                           fsr0h	equ	0xFEA
  3283                           fsr0l	equ	0xFE9
  3284                           wreg	equ	0xFE8
  3285                           postdec1	equ	0xFE5
  3286                           fsr1l	equ	0xFE1
  3287                           indf2	equ	0xFDF
  3288                           postinc2	equ	0xFDE
  3289                           postdec2	equ	0xFDD
  3290                           fsr2h	equ	0xFDA
  3291                           fsr2l	equ	0xFD9
  3292                           status	equ	0xFD8
  3293                           
  3294 ;; *************** function _Write_RTC *****************
  3295 ;; Defined at:
  3296 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;		None               void
  3303 ;; Registers used:
  3304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    2
  3317 ;; This function calls:
  3318 ;;		_RtccWrOn
  3319 ;;		_RtccWriteDate
  3320 ;;		_RtccWriteTime
  3321 ;;		___awdiv
  3322 ;; This function is called by:
  3323 ;;		_Setup
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text18
  3329  0013B0                     __ptext18:
  3330                           	opt stack 0
  3331  0013B0                     _Write_RTC:
  3332                           	opt stack 28
  3333                           
  3334                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  3335                           
  3336                           ;incstack = 0
  3337  0013B0  EC30  F00F         	call	_RtccWrOn	;wreg free
  3338                           
  3339                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  3340  0013B4  80A3               	bsf	4003,0,c	;volatile
  3341                           
  3342                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  3343  0013B6  C039  F001         	movff	_segundo,___awdiv@dividend
  3344  0013BA  C03A  F002         	movff	_segundo+1,___awdiv@dividend+1
  3345  0013BE  0E00               	movlw	0
  3346  0013C0  6E04               	movwf	___awdiv@divisor+1,c
  3347  0013C2  0E0A               	movlw	10
  3348  0013C4  6E03               	movwf	___awdiv@divisor,c
  3349  0013C6  EC96  F00C         	call	___awdiv	;wreg free
  3350  0013CA  5001               	movf	?___awdiv,w,c
  3351  0013CC  6E4E               	movwf	_segundo_d,c
  3352                           
  3353                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  3354  0013CE  504E               	movf	_segundo_d,w,c
  3355  0013D0  0D0A               	mullw	10
  3356  0013D2  50F3               	movf	prodl,w,c
  3357  0013D4  0800               	sublw	0
  3358  0013D6  2439               	addwf	_segundo,w,c
  3359  0013D8  6E4F               	movwf	_segundo_u,c
  3360                           
  3361                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  3362  0013DA  504E               	movf	_segundo_d,w,c
  3363  0013DC  0D10               	mullw	16
  3364  0013DE  50F3               	movf	prodl,w,c
  3365  0013E0  244F               	addwf	_segundo_u,w,c
  3366  0013E2  6E40               	movwf	_RtccTime+1,c
  3367                           
  3368                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  3369  0013E4  C05A  F001         	movff	_minuto,___awdiv@dividend
  3370  0013E8  C05B  F002         	movff	_minuto+1,___awdiv@dividend+1
  3371  0013EC  0E00               	movlw	0
  3372  0013EE  6E04               	movwf	___awdiv@divisor+1,c
  3373  0013F0  0E0A               	movlw	10
  3374  0013F2  6E03               	movwf	___awdiv@divisor,c
  3375  0013F4  EC96  F00C         	call	___awdiv	;wreg free
  3376  0013F8  5001               	movf	?___awdiv,w,c
  3377  0013FA  6E4C               	movwf	_minuto_d,c
  3378                           
  3379                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  3380  0013FC  504C               	movf	_minuto_d,w,c
  3381  0013FE  0D0A               	mullw	10
  3382  001400  50F3               	movf	prodl,w,c
  3383  001402  0800               	sublw	0
  3384  001404  245A               	addwf	_minuto,w,c
  3385  001406  6E4D               	movwf	_minuto_u,c
  3386                           
  3387                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  3388  001408  504C               	movf	_minuto_d,w,c
  3389  00140A  0D10               	mullw	16
  3390  00140C  50F3               	movf	prodl,w,c
  3391  00140E  244D               	addwf	_minuto_u,w,c
  3392  001410  6E41               	movwf	_RtccTime+2,c
  3393                           
  3394                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  3395  001412  C056  F001         	movff	_hora,___awdiv@dividend
  3396  001416  C057  F002         	movff	_hora+1,___awdiv@dividend+1
  3397  00141A  0E00               	movlw	0
  3398  00141C  6E04               	movwf	___awdiv@divisor+1,c
  3399  00141E  0E0A               	movlw	10
  3400  001420  6E03               	movwf	___awdiv@divisor,c
  3401  001422  EC96  F00C         	call	___awdiv	;wreg free
  3402  001426  5001               	movf	?___awdiv,w,c
  3403  001428  6E48               	movwf	_hora_d,c
  3404                           
  3405                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  3406  00142A  5048               	movf	_hora_d,w,c
  3407  00142C  0D0A               	mullw	10
  3408  00142E  50F3               	movf	prodl,w,c
  3409  001430  0800               	sublw	0
  3410  001432  2456               	addwf	_hora,w,c
  3411  001434  6E49               	movwf	_hora_u,c
  3412                           
  3413                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  3414  001436  5048               	movf	_hora_d,w,c
  3415  001438  0D10               	mullw	16
  3416  00143A  50F3               	movf	prodl,w,c
  3417  00143C  2449               	addwf	_hora_u,w,c
  3418  00143E  6E42               	movwf	_RtccTime+3,c
  3419                           
  3420                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  3421  001440  C050  F001         	movff	_anio,___awdiv@dividend
  3422  001444  C051  F002         	movff	_anio+1,___awdiv@dividend+1
  3423  001448  0E00               	movlw	0
  3424  00144A  6E04               	movwf	___awdiv@divisor+1,c
  3425  00144C  0E0A               	movlw	10
  3426  00144E  6E03               	movwf	___awdiv@divisor,c
  3427  001450  EC96  F00C         	call	___awdiv	;wreg free
  3428  001454  5001               	movf	?___awdiv,w,c
  3429  001456  6E43               	movwf	_anio_d,c
  3430                           
  3431                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  3432  001458  5043               	movf	_anio_d,w,c
  3433  00145A  0D0A               	mullw	10
  3434  00145C  50F3               	movf	prodl,w,c
  3435  00145E  0800               	sublw	0
  3436  001460  2450               	addwf	_anio,w,c
  3437  001462  6E44               	movwf	_anio_u,c
  3438                           
  3439                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  3440  001464  5043               	movf	_anio_d,w,c
  3441  001466  0D10               	mullw	16
  3442  001468  50F3               	movf	prodl,w,c
  3443  00146A  2444               	addwf	_anio_u,w,c
  3444  00146C  6E3E               	movwf	_RtccDate+3,c
  3445                           
  3446                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  3447  00146E  C058  F001         	movff	_mes,___awdiv@dividend
  3448  001472  C059  F002         	movff	_mes+1,___awdiv@dividend+1
  3449  001476  0E00               	movlw	0
  3450  001478  6E04               	movwf	___awdiv@divisor+1,c
  3451  00147A  0E0A               	movlw	10
  3452  00147C  6E03               	movwf	___awdiv@divisor,c
  3453  00147E  EC96  F00C         	call	___awdiv	;wreg free
  3454  001482  5001               	movf	?___awdiv,w,c
  3455  001484  6E4A               	movwf	_mes_d,c
  3456                           
  3457                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3458  001486  504A               	movf	_mes_d,w,c
  3459  001488  0D0A               	mullw	10
  3460  00148A  50F3               	movf	prodl,w,c
  3461  00148C  0800               	sublw	0
  3462  00148E  2458               	addwf	_mes,w,c
  3463  001490  6E4B               	movwf	_mes_u,c
  3464                           
  3465                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3466  001492  504A               	movf	_mes_d,w,c
  3467  001494  0D10               	mullw	16
  3468  001496  50F3               	movf	prodl,w,c
  3469  001498  244B               	addwf	_mes_u,w,c
  3470  00149A  6E3D               	movwf	_RtccDate+2,c
  3471                           
  3472                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3473  00149C  C052  F001         	movff	_dia,___awdiv@dividend
  3474  0014A0  C053  F002         	movff	_dia+1,___awdiv@dividend+1
  3475  0014A4  0E00               	movlw	0
  3476  0014A6  6E04               	movwf	___awdiv@divisor+1,c
  3477  0014A8  0E0A               	movlw	10
  3478  0014AA  6E03               	movwf	___awdiv@divisor,c
  3479  0014AC  EC96  F00C         	call	___awdiv	;wreg free
  3480  0014B0  5001               	movf	?___awdiv,w,c
  3481  0014B2  6E46               	movwf	_fecha_d,c
  3482                           
  3483                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3484  0014B4  5046               	movf	_fecha_d,w,c
  3485  0014B6  0D0A               	mullw	10
  3486  0014B8  50F3               	movf	prodl,w,c
  3487  0014BA  0800               	sublw	0
  3488  0014BC  2452               	addwf	_dia,w,c
  3489  0014BE  6E47               	movwf	_fecha_u,c
  3490                           
  3491                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3492  0014C0  5046               	movf	_fecha_d,w,c
  3493  0014C2  0D10               	mullw	16
  3494  0014C4  50F3               	movf	prodl,w,c
  3495  0014C6  2447               	addwf	_fecha_u,w,c
  3496  0014C8  6E3C               	movwf	_RtccDate+1,c
  3497                           
  3498                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3499  0014CA  C054  F045         	movff	_diasem,_dia_semana
  3500                           
  3501                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3502  0014CE  C054  F03B         	movff	_diasem,_RtccDate
  3503                           
  3504                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3505  0014D2  0E3F               	movlw	low _RtccTime
  3506  0014D4  6E01               	movwf	RtccWriteTime@pTm,c
  3507  0014D6  0E00               	movlw	high _RtccTime
  3508  0014D8  6E02               	movwf	RtccWriteTime@pTm+1,c
  3509  0014DA  0E01               	movlw	1
  3510  0014DC  6E03               	movwf	RtccWriteTime@di,c
  3511  0014DE  EC1F  F00B         	call	_RtccWriteTime	;wreg free
  3512                           
  3513                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3514  0014E2  0E3B               	movlw	low _RtccDate
  3515  0014E4  6E01               	movwf	RtccWriteDate@pDt,c
  3516  0014E6  0E00               	movlw	high _RtccDate
  3517  0014E8  6E02               	movwf	RtccWriteDate@pDt+1,c
  3518  0014EA  0E01               	movlw	1
  3519  0014EC  6E03               	movwf	RtccWriteDate@di,c
  3520  0014EE  EC7C  F00A         	call	_RtccWriteDate	;wreg free
  3521                           
  3522                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3523  0014F2  010F               	movlb	15	; () banked
  3524  0014F4  8F3F               	bsf	63,7,b	;volatile
  3525                           
  3526                           ; BSR set to: 15
  3527  0014F6  0012               	return		;funcret
  3528  0014F8                     __end_of_Write_RTC:
  3529                           	opt stack 0
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           prodh	equ	0xFF4
  3535                           prodl	equ	0xFF3
  3536                           indf0	equ	0xFEF
  3537                           postinc0	equ	0xFEE
  3538                           fsr0h	equ	0xFEA
  3539                           fsr0l	equ	0xFE9
  3540                           wreg	equ	0xFE8
  3541                           postdec1	equ	0xFE5
  3542                           fsr1l	equ	0xFE1
  3543                           indf2	equ	0xFDF
  3544                           postinc2	equ	0xFDE
  3545                           postdec2	equ	0xFDD
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550 ;; *************** function ___awdiv *****************
  3551 ;; Defined at:
  3552 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  dividend        2    0[COMRAM] int 
  3555 ;;  divisor         2    2[COMRAM] int 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  quotient        2    6[COMRAM] int 
  3558 ;;  sign            1    5[COMRAM] unsigned char 
  3559 ;;  counter         1    4[COMRAM] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2    0[COMRAM] int 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3570 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3572 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3573 ;;Total ram usage:        8 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_Write_RTC
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text19
  3583  00192C                     __ptext19:
  3584                           	opt stack 0
  3585  00192C                     ___awdiv:
  3586                           	opt stack 29
  3587                           
  3588                           ; BSR set to: 15
  3589                           ;incstack = 0
  3590  00192C  0E00               	movlw	0
  3591  00192E  6E06               	movwf	___awdiv@sign,c
  3592  001930  AE04               	btfss	___awdiv@divisor+1,7,c
  3593  001932  D007               	goto	l1985
  3594  001934  6C03               	negf	___awdiv@divisor,c
  3595  001936  1E04               	comf	___awdiv@divisor+1,f,c
  3596  001938  B0D8               	btfsc	status,0,c
  3597  00193A  2A04               	incf	___awdiv@divisor+1,f,c
  3598  00193C  0E01               	movlw	1
  3599  00193E  6E06               	movwf	___awdiv@sign,c
  3600  001940  D000               	goto	l1985
  3601  001942                     l1985:
  3602  001942  AE02               	btfss	___awdiv@dividend+1,7,c
  3603  001944  D007               	goto	l1991
  3604  001946  6C01               	negf	___awdiv@dividend,c
  3605  001948  1E02               	comf	___awdiv@dividend+1,f,c
  3606  00194A  B0D8               	btfsc	status,0,c
  3607  00194C  2A02               	incf	___awdiv@dividend+1,f,c
  3608  00194E  0E01               	movlw	1
  3609  001950  1A06               	xorwf	___awdiv@sign,f,c
  3610  001952  D000               	goto	l1991
  3611  001954                     l1991:
  3612  001954  0E00               	movlw	0
  3613  001956  6E08               	movwf	___awdiv@quotient+1,c
  3614  001958  0E00               	movlw	0
  3615  00195A  6E07               	movwf	___awdiv@quotient,c
  3616  00195C  5003               	movf	___awdiv@divisor,w,c
  3617  00195E  1004               	iorwf	___awdiv@divisor+1,w,c
  3618  001960  B4D8               	btfsc	status,2,c
  3619  001962  D021               	goto	l2013
  3620  001964  0E01               	movlw	1
  3621  001966  6E05               	movwf	___awdiv@counter,c
  3622  001968  D005               	goto	l1999
  3623  00196A                     l1997:
  3624  00196A  90D8               	bcf	status,0,c
  3625  00196C  3603               	rlcf	___awdiv@divisor,f,c
  3626  00196E  3604               	rlcf	___awdiv@divisor+1,f,c
  3627  001970  2A05               	incf	___awdiv@counter,f,c
  3628  001972  D000               	goto	l1999
  3629  001974                     l1999:
  3630  001974  BE04               	btfsc	___awdiv@divisor+1,7,c
  3631  001976  D002               	goto	l2001
  3632  001978  D7F8               	goto	l1997
  3633  00197A  D000               	goto	l2001
  3634  00197C                     l2001:
  3635  00197C  90D8               	bcf	status,0,c
  3636  00197E  3607               	rlcf	___awdiv@quotient,f,c
  3637  001980  3608               	rlcf	___awdiv@quotient+1,f,c
  3638  001982  5003               	movf	___awdiv@divisor,w,c
  3639  001984  5C01               	subwf	___awdiv@dividend,w,c
  3640  001986  5004               	movf	___awdiv@divisor+1,w,c
  3641  001988  5802               	subwfb	___awdiv@dividend+1,w,c
  3642  00198A  A0D8               	btfss	status,0,c
  3643  00198C  D006               	goto	l2009
  3644  00198E  5003               	movf	___awdiv@divisor,w,c
  3645  001990  5E01               	subwf	___awdiv@dividend,f,c
  3646  001992  5004               	movf	___awdiv@divisor+1,w,c
  3647  001994  5A02               	subwfb	___awdiv@dividend+1,f,c
  3648  001996  8007               	bsf	___awdiv@quotient,0,c
  3649  001998  D000               	goto	l2009
  3650  00199A                     l2009:
  3651  00199A  90D8               	bcf	status,0,c
  3652  00199C  3204               	rrcf	___awdiv@divisor+1,f,c
  3653  00199E  3203               	rrcf	___awdiv@divisor,f,c
  3654  0019A0  2E05               	decfsz	___awdiv@counter,f,c
  3655  0019A2  D7EC               	goto	l2001
  3656  0019A4  D000               	goto	l2013
  3657  0019A6                     l2013:
  3658  0019A6  5006               	movf	___awdiv@sign,w,c
  3659  0019A8  B4D8               	btfsc	status,2,c
  3660  0019AA  D005               	goto	l2017
  3661  0019AC  6C07               	negf	___awdiv@quotient,c
  3662  0019AE  1E08               	comf	___awdiv@quotient+1,f,c
  3663  0019B0  B0D8               	btfsc	status,0,c
  3664  0019B2  2A08               	incf	___awdiv@quotient+1,f,c
  3665  0019B4  D000               	goto	l2017
  3666  0019B6                     l2017:
  3667  0019B6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3668  0019BA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3669  0019BE  0012               	return	
  3670  0019C0  0012               	return		;funcret
  3671  0019C2                     __end_of___awdiv:
  3672                           	opt stack 0
  3673                           tblptru	equ	0xFF8
  3674                           tblptrh	equ	0xFF7
  3675                           tblptrl	equ	0xFF6
  3676                           tablat	equ	0xFF5
  3677                           prodh	equ	0xFF4
  3678                           prodl	equ	0xFF3
  3679                           indf0	equ	0xFEF
  3680                           postinc0	equ	0xFEE
  3681                           fsr0h	equ	0xFEA
  3682                           fsr0l	equ	0xFE9
  3683                           wreg	equ	0xFE8
  3684                           postdec1	equ	0xFE5
  3685                           fsr1l	equ	0xFE1
  3686                           indf2	equ	0xFDF
  3687                           postinc2	equ	0xFDE
  3688                           postdec2	equ	0xFDD
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function _RtccWriteTime *****************
  3694 ;; Defined at:
  3695 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  pTm             2    0[COMRAM] PTR const struct .
  3698 ;;		 -> RtccTime(4), 
  3699 ;;  di              1    2[COMRAM] enum E7121
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  tempHourWDay    2    9[COMRAM] struct .
  3702 ;;  tempMinSec      2    7[COMRAM] struct .
  3703 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3704 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3705 ;;  wasOn           1    4[COMRAM] enum E7121
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      enum E7337
  3708 ;; Registers used:
  3709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3715 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;Total ram usage:       11 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    1
  3722 ;; This function calls:
  3723 ;;		_RtccWrOn
  3724 ;; This function is called by:
  3725 ;;		_Write_RTC
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text20
  3730  00163E                     __ptext20:
  3731                           	opt stack 0
  3732  00163E                     _RtccWriteTime:
  3733                           	opt stack 28
  3734                           
  3735                           ;incstack = 0
  3736  00163E  0E00               	movlw	0
  3737  001640  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3738  001642  EE20 F002          	lfsr	2,2
  3739  001646  5001               	movf	RtccWriteTime@pTm,w,c
  3740  001648  26D9               	addwf	fsr2l,f,c
  3741  00164A  5002               	movf	RtccWriteTime@pTm+1,w,c
  3742  00164C  22DA               	addwfc	fsr2h,f,c
  3743  00164E  0E5A               	movlw	90
  3744  001650  60DF               	cpfslt	indf2,c
  3745  001652  0012               	return	
  3746  001654  EE20 F001          	lfsr	2,1
  3747  001658  5001               	movf	RtccWriteTime@pTm,w,c
  3748  00165A  26D9               	addwf	fsr2l,f,c
  3749  00165C  5002               	movf	RtccWriteTime@pTm+1,w,c
  3750  00165E  22DA               	addwfc	fsr2h,f,c
  3751  001660  0E5A               	movlw	90
  3752  001662  60DF               	cpfslt	indf2,c
  3753  001664  0012               	return	
  3754  001666  EE20 F003          	lfsr	2,3
  3755  00166A  5001               	movf	RtccWriteTime@pTm,w,c
  3756  00166C  26D9               	addwf	fsr2l,f,c
  3757  00166E  5002               	movf	RtccWriteTime@pTm+1,w,c
  3758  001670  22DA               	addwfc	fsr2h,f,c
  3759  001672  0E24               	movlw	36
  3760  001674  64DF               	cpfsgt	indf2,c
  3761  001676  D002               	goto	l1817
  3762  001678  0012               	return	
  3763                           
  3764                           ;	Return value of _RtccWriteTime is never used
  3765  00167A  0012               	return	
  3766  00167C                     l1817:
  3767  00167C  EE20 F002          	lfsr	2,2
  3768  001680  5001               	movf	RtccWriteTime@pTm,w,c
  3769  001682  26D9               	addwf	fsr2l,f,c
  3770  001684  5002               	movf	RtccWriteTime@pTm+1,w,c
  3771  001686  22DA               	addwfc	fsr2h,f,c
  3772  001688  50DF               	movf	indf2,w,c
  3773  00168A  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3774  00168C  EE20 F001          	lfsr	2,1
  3775  001690  5001               	movf	RtccWriteTime@pTm,w,c
  3776  001692  26D9               	addwf	fsr2l,f,c
  3777  001694  5002               	movf	RtccWriteTime@pTm+1,w,c
  3778  001696  22DA               	addwfc	fsr2h,f,c
  3779  001698  50DF               	movf	indf2,w,c
  3780  00169A  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3781  00169C  5003               	movf	RtccWriteTime@di,w,c
  3782  00169E  B4D8               	btfsc	status,2,c
  3783  0016A0  D002               	goto	l1823
  3784  0016A2  9CF2               	bcf	intcon,6,c	;volatile
  3785  0016A4  D000               	goto	l1823
  3786  0016A6                     l1823:
  3787  0016A6  0E00               	movlw	0
  3788  0016A8  BB3F               	btfsc	63,5,b	;volatile
  3789  0016AA  0E01               	movlw	1
  3790  0016AC  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3791  0016AE  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3792  0016B0  A4D8               	btfss	status,2,c
  3793  0016B2  D003               	goto	l1827
  3794  0016B4  EC30  F00F         	call	_RtccWrOn	;wreg free
  3795  0016B8  D000               	goto	l1827
  3796  0016BA                     l1827:
  3797  0016BA  0E00               	movlw	0
  3798  0016BC  BF3F               	btfsc	63,7,b	;volatile
  3799  0016BE  0E01               	movlw	1
  3800  0016C0  6E05               	movwf	RtccWriteTime@wasOn,c
  3801  0016C2  5005               	movf	RtccWriteTime@wasOn,w,c
  3802  0016C4  B4D8               	btfsc	status,2,c
  3803  0016C6  D007               	goto	l1833
  3804  0016C8  0E00               	movlw	0
  3805  0016CA  BE91               	btfsc	3985,7,c	;volatile
  3806  0016CC  0E01               	movlw	1
  3807  0016CE  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3808  0016D0  010F               	movlb	15	; () banked
  3809  0016D2  9F3F               	bcf	63,7,b	;volatile
  3810  0016D4  D000               	goto	l1833
  3811  0016D6                     l1833:
  3812  0016D6  0EFC               	movlw	252
  3813  0016D8  010F               	movlb	15	; () banked
  3814  0016DA  173F               	andwf	63,f,b	;volatile
  3815  0016DC  010F               	movlb	15	; () banked
  3816  0016DE  813F               	bsf	63,0,b	;volatile
  3817                           
  3818                           ; BSR set to: 15
  3819  0016E0  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3820                           
  3821                           ; BSR set to: 15
  3822  0016E4  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3823                           
  3824                           ; BSR set to: 15
  3825  0016E8  EE20 F003          	lfsr	2,3
  3826  0016EC  5001               	movf	RtccWriteTime@pTm,w,c
  3827  0016EE  26D9               	addwf	fsr2l,f,c
  3828  0016F0  5002               	movf	RtccWriteTime@pTm+1,w,c
  3829  0016F2  22DA               	addwfc	fsr2h,f,c
  3830  0016F4  50DF               	movf	indf2,w,c
  3831  0016F6  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3832                           
  3833                           ; BSR set to: 15
  3834  0016F8  0EFC               	movlw	252
  3835  0016FA  010F               	movlb	15	; () banked
  3836  0016FC  173F               	andwf	63,f,b	;volatile
  3837                           
  3838                           ; BSR set to: 15
  3839  0016FE  010F               	movlb	15	; () banked
  3840  001700  813F               	bsf	63,0,b	;volatile
  3841                           
  3842                           ; BSR set to: 15
  3843  001702  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3844                           
  3845                           ; BSR set to: 15
  3846  001706  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3847                           
  3848                           ; BSR set to: 15
  3849  00170A  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3850                           
  3851                           ; BSR set to: 15
  3852  00170E  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3853                           
  3854                           ; BSR set to: 15
  3855  001712  5005               	movf	RtccWriteTime@wasOn,w,c
  3856  001714  B4D8               	btfsc	status,2,c
  3857  001716  D00D               	goto	l1865
  3858                           
  3859                           ; BSR set to: 15
  3860  001718  010F               	movlb	15	; () banked
  3861  00171A  8F3F               	bsf	63,7,b	;volatile
  3862                           
  3863                           ; BSR set to: 15
  3864  00171C  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3865  00171E  B4D8               	btfsc	status,2,c
  3866  001720  D002               	goto	l1861
  3867                           
  3868                           ; BSR set to: 15
  3869  001722  8E91               	bsf	3985,7,c	;volatile
  3870  001724  D000               	goto	l1861
  3871  001726                     l1861:
  3872                           
  3873                           ; BSR set to: 15
  3874  001726  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3875  001728  B4D8               	btfsc	status,2,c
  3876  00172A  D009               	goto	l1869
  3877                           
  3878                           ; BSR set to: 15
  3879  00172C  EC30  F00F         	call	_RtccWrOn	;wreg free
  3880  001730  D006               	goto	l1869
  3881  001732                     l1865:
  3882  001732  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3883  001734  A4D8               	btfss	status,2,c
  3884  001736  D003               	goto	l1869
  3885  001738  010F               	movlb	15	; () banked
  3886  00173A  9B3F               	bcf	63,5,b	;volatile
  3887                           
  3888                           ; BSR set to: 15
  3889  00173C  D000               	goto	l1869
  3890  00173E                     l1869:
  3891  00173E  5003               	movf	RtccWriteTime@di,w,c
  3892  001740  B4D8               	btfsc	status,2,c
  3893  001742  0012               	return	
  3894  001744  8CF2               	bsf	intcon,6,c	;volatile
  3895  001746  0012               	return	
  3896                           
  3897                           ;	Return value of _RtccWriteTime is never used
  3898  001748  0012               	return		;funcret
  3899  00174A                     __end_of_RtccWriteTime:
  3900                           	opt stack 0
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           indf0	equ	0xFEF
  3909                           postinc0	equ	0xFEE
  3910                           fsr0h	equ	0xFEA
  3911                           fsr0l	equ	0xFE9
  3912                           wreg	equ	0xFE8
  3913                           postdec1	equ	0xFE5
  3914                           fsr1l	equ	0xFE1
  3915                           indf2	equ	0xFDF
  3916                           postinc2	equ	0xFDE
  3917                           postdec2	equ	0xFDD
  3918                           fsr2h	equ	0xFDA
  3919                           fsr2l	equ	0xFD9
  3920                           status	equ	0xFD8
  3921                           
  3922 ;; *************** function _RtccWriteDate *****************
  3923 ;; Defined at:
  3924 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  pDt             2    0[COMRAM] PTR const struct .
  3927 ;;		 -> RtccDate(4), 
  3928 ;;  di              1    2[COMRAM] enum E7121
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  tempHourWDay    2   11[COMRAM] struct .
  3931 ;;  tempDayMonth    2    9[COMRAM] struct .
  3932 ;;  tempYear        2    6[COMRAM] struct .
  3933 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3934 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3935 ;;  wasOn           1    4[COMRAM] enum E7121
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      enum E7337
  3938 ;; Registers used:
  3939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3945 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;Total ram usage:       13 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    1
  3952 ;; This function calls:
  3953 ;;		_RtccWrOn
  3954 ;; This function is called by:
  3955 ;;		_Write_RTC
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text21
  3960  0014F8                     __ptext21:
  3961                           	opt stack 0
  3962  0014F8                     _RtccWriteDate:
  3963                           	opt stack 28
  3964                           
  3965                           ;incstack = 0
  3966  0014F8  0E00               	movlw	0
  3967  0014FA  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3968  0014FC  EE20 F002          	lfsr	2,2
  3969  001500  5001               	movf	RtccWriteDate@pDt,w,c
  3970  001502  26D9               	addwf	fsr2l,f,c
  3971  001504  5002               	movf	RtccWriteDate@pDt+1,w,c
  3972  001506  22DA               	addwfc	fsr2h,f,c
  3973  001508  0E13               	movlw	19
  3974  00150A  60DF               	cpfslt	indf2,c
  3975  00150C  0012               	return	
  3976  00150E  EE20 F002          	lfsr	2,2
  3977  001512  5001               	movf	RtccWriteDate@pDt,w,c
  3978  001514  26D9               	addwf	fsr2l,f,c
  3979  001516  5002               	movf	RtccWriteDate@pDt+1,w,c
  3980  001518  22DA               	addwfc	fsr2h,f,c
  3981  00151A  50DF               	movf	indf2,w,c
  3982  00151C  B4D8               	btfsc	status,2,c
  3983  00151E  0012               	return	
  3984  001520  EE20 F001          	lfsr	2,1
  3985  001524  5001               	movf	RtccWriteDate@pDt,w,c
  3986  001526  26D9               	addwf	fsr2l,f,c
  3987  001528  5002               	movf	RtccWriteDate@pDt+1,w,c
  3988  00152A  22DA               	addwfc	fsr2h,f,c
  3989  00152C  0E32               	movlw	50
  3990  00152E  60DF               	cpfslt	indf2,c
  3991  001530  0012               	return	
  3992  001532  EE20 F001          	lfsr	2,1
  3993  001536  5001               	movf	RtccWriteDate@pDt,w,c
  3994  001538  26D9               	addwf	fsr2l,f,c
  3995  00153A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3996  00153C  22DA               	addwfc	fsr2h,f,c
  3997  00153E  50DF               	movf	indf2,w,c
  3998  001540  B4D8               	btfsc	status,2,c
  3999  001542  0012               	return	
  4000  001544  EE20 F003          	lfsr	2,3
  4001  001548  5001               	movf	RtccWriteDate@pDt,w,c
  4002  00154A  26D9               	addwf	fsr2l,f,c
  4003  00154C  5002               	movf	RtccWriteDate@pDt+1,w,c
  4004  00154E  22DA               	addwfc	fsr2h,f,c
  4005  001550  0E99               	movlw	153
  4006  001552  64DF               	cpfsgt	indf2,c
  4007  001554  D002               	goto	l1885
  4008  001556  0012               	return	
  4009                           
  4010                           ;	Return value of _RtccWriteDate is never used
  4011  001558  0012               	return	
  4012  00155A                     l1885:
  4013  00155A  EE20 F003          	lfsr	2,3
  4014  00155E  5001               	movf	RtccWriteDate@pDt,w,c
  4015  001560  26D9               	addwf	fsr2l,f,c
  4016  001562  5002               	movf	RtccWriteDate@pDt+1,w,c
  4017  001564  22DA               	addwfc	fsr2h,f,c
  4018  001566  50DF               	movf	indf2,w,c
  4019  001568  6E07               	movwf	RtccWriteDate@tempYear,c
  4020  00156A  EE20 F001          	lfsr	2,1
  4021  00156E  5001               	movf	RtccWriteDate@pDt,w,c
  4022  001570  26D9               	addwf	fsr2l,f,c
  4023  001572  5002               	movf	RtccWriteDate@pDt+1,w,c
  4024  001574  22DA               	addwfc	fsr2h,f,c
  4025  001576  50DF               	movf	indf2,w,c
  4026  001578  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  4027  00157A  EE20 F002          	lfsr	2,2
  4028  00157E  5001               	movf	RtccWriteDate@pDt,w,c
  4029  001580  26D9               	addwf	fsr2l,f,c
  4030  001582  5002               	movf	RtccWriteDate@pDt+1,w,c
  4031  001584  22DA               	addwfc	fsr2h,f,c
  4032  001586  50DF               	movf	indf2,w,c
  4033  001588  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  4034  00158A  5003               	movf	RtccWriteDate@di,w,c
  4035  00158C  B4D8               	btfsc	status,2,c
  4036  00158E  D002               	goto	l1891
  4037  001590  9CF2               	bcf	intcon,6,c	;volatile
  4038  001592  D000               	goto	l1891
  4039  001594                     l1891:
  4040  001594  0E00               	movlw	0
  4041  001596  BB3F               	btfsc	63,5,b	;volatile
  4042  001598  0E01               	movlw	1
  4043  00159A  6E09               	movwf	RtccWriteDate@wasWrEn,c
  4044  00159C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4045  00159E  A4D8               	btfss	status,2,c
  4046  0015A0  D003               	goto	l1895
  4047  0015A2  EC30  F00F         	call	_RtccWrOn	;wreg free
  4048  0015A6  D000               	goto	l1895
  4049  0015A8                     l1895:
  4050  0015A8  0E00               	movlw	0
  4051  0015AA  BF3F               	btfsc	63,7,b	;volatile
  4052  0015AC  0E01               	movlw	1
  4053  0015AE  6E05               	movwf	RtccWriteDate@wasOn,c
  4054  0015B0  5005               	movf	RtccWriteDate@wasOn,w,c
  4055  0015B2  B4D8               	btfsc	status,2,c
  4056  0015B4  D007               	goto	l1901
  4057  0015B6  0E00               	movlw	0
  4058  0015B8  BE91               	btfsc	3985,7,c	;volatile
  4059  0015BA  0E01               	movlw	1
  4060  0015BC  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4061  0015BE  010F               	movlb	15	; () banked
  4062  0015C0  9F3F               	bcf	63,7,b	;volatile
  4063  0015C2  D000               	goto	l1901
  4064  0015C4                     l1901:
  4065  0015C4  0EFC               	movlw	252
  4066  0015C6  010F               	movlb	15	; () banked
  4067  0015C8  173F               	andwf	63,f,b	;volatile
  4068  0015CA  010F               	movlb	15	; () banked
  4069  0015CC  813F               	bsf	63,0,b	;volatile
  4070                           
  4071                           ; BSR set to: 15
  4072  0015CE  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  4073                           
  4074                           ; BSR set to: 15
  4075  0015D2  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  4076                           
  4077                           ; BSR set to: 15
  4078  0015D6  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  4079  0015DA  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  4080  0015DE  50DF               	movf	indf2,w,c
  4081  0015E0  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  4082                           
  4083                           ; BSR set to: 15
  4084  0015E2  0EFC               	movlw	252
  4085  0015E4  010F               	movlb	15	; () banked
  4086  0015E6  173F               	andwf	63,f,b	;volatile
  4087                           
  4088                           ; BSR set to: 15
  4089  0015E8  0E03               	movlw	3
  4090  0015EA  010F               	movlb	15	; () banked
  4091  0015EC  133F               	iorwf	63,f,b	;volatile
  4092                           
  4093                           ; BSR set to: 15
  4094  0015EE  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  4095                           
  4096                           ; BSR set to: 15
  4097  0015F2  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  4098                           
  4099                           ; BSR set to: 15
  4100  0015F6  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  4101                           
  4102                           ; BSR set to: 15
  4103  0015FA  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  4104                           
  4105                           ; BSR set to: 15
  4106  0015FE  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  4107                           
  4108                           ; BSR set to: 15
  4109  001602  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  4110                           
  4111                           ; BSR set to: 15
  4112  001606  5005               	movf	RtccWriteDate@wasOn,w,c
  4113  001608  B4D8               	btfsc	status,2,c
  4114  00160A  D00D               	goto	l1937
  4115                           
  4116                           ; BSR set to: 15
  4117  00160C  010F               	movlb	15	; () banked
  4118  00160E  8F3F               	bsf	63,7,b	;volatile
  4119                           
  4120                           ; BSR set to: 15
  4121  001610  5006               	movf	RtccWriteDate@wasAlrm,w,c
  4122  001612  B4D8               	btfsc	status,2,c
  4123  001614  D002               	goto	l1933
  4124                           
  4125                           ; BSR set to: 15
  4126  001616  8E91               	bsf	3985,7,c	;volatile
  4127  001618  D000               	goto	l1933
  4128  00161A                     l1933:
  4129                           
  4130                           ; BSR set to: 15
  4131  00161A  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4132  00161C  B4D8               	btfsc	status,2,c
  4133  00161E  D009               	goto	l1941
  4134                           
  4135                           ; BSR set to: 15
  4136  001620  EC30  F00F         	call	_RtccWrOn	;wreg free
  4137  001624  D006               	goto	l1941
  4138  001626                     l1937:
  4139  001626  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4140  001628  A4D8               	btfss	status,2,c
  4141  00162A  D003               	goto	l1941
  4142  00162C  010F               	movlb	15	; () banked
  4143  00162E  9B3F               	bcf	63,5,b	;volatile
  4144                           
  4145                           ; BSR set to: 15
  4146  001630  D000               	goto	l1941
  4147  001632                     l1941:
  4148  001632  5003               	movf	RtccWriteDate@di,w,c
  4149  001634  B4D8               	btfsc	status,2,c
  4150  001636  0012               	return	
  4151  001638  9CF2               	bcf	intcon,6,c	;volatile
  4152  00163A  0012               	return	
  4153                           
  4154                           ;	Return value of _RtccWriteDate is never used
  4155  00163C  0012               	return		;funcret
  4156  00163E                     __end_of_RtccWriteDate:
  4157                           	opt stack 0
  4158                           tblptru	equ	0xFF8
  4159                           tblptrh	equ	0xFF7
  4160                           tblptrl	equ	0xFF6
  4161                           tablat	equ	0xFF5
  4162                           prodh	equ	0xFF4
  4163                           prodl	equ	0xFF3
  4164                           intcon	equ	0xFF2
  4165                           indf0	equ	0xFEF
  4166                           postinc0	equ	0xFEE
  4167                           fsr0h	equ	0xFEA
  4168                           fsr0l	equ	0xFE9
  4169                           wreg	equ	0xFE8
  4170                           postdec1	equ	0xFE5
  4171                           fsr1l	equ	0xFE1
  4172                           indf2	equ	0xFDF
  4173                           postinc2	equ	0xFDE
  4174                           postdec2	equ	0xFDD
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _RtccWrOn *****************
  4180 ;; Defined at:
  4181 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  data            2    0        unsigned int 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;		None               void
  4188 ;; Registers used:
  4189 ;;		wreg, status,2
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_Write_RTC
  4205 ;;		_RtccWriteDate
  4206 ;;		_RtccWriteTime
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text22
  4211  001E60                     __ptext22:
  4212                           	opt stack 0
  4213  001E60                     _RtccWrOn:
  4214                           	opt stack 28
  4215                           
  4216                           ;incstack = 0
  4217  001E60  9CF2               	bcf	intcon,6,c	;volatile
  4218  001E62  0E55               	movlw	85
  4219  001E64  6EA7               	movwf	4007,c	;volatile
  4220  001E66  0EAA               	movlw	170
  4221  001E68  6EA7               	movwf	4007,c	;volatile
  4222  001E6A  010F               	movlb	15	; () banked
  4223  001E6C  8B3F               	bsf	63,5,b	;volatile
  4224                           
  4225                           ; BSR set to: 15
  4226  001E6E  8CF2               	bsf	intcon,6,c	;volatile
  4227                           
  4228                           ; BSR set to: 15
  4229  001E70  0012               	return		;funcret
  4230  001E72                     __end_of_RtccWrOn:
  4231                           	opt stack 0
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           prodh	equ	0xFF4
  4237                           prodl	equ	0xFF3
  4238                           intcon	equ	0xFF2
  4239                           indf0	equ	0xFEF
  4240                           postinc0	equ	0xFEE
  4241                           fsr0h	equ	0xFEA
  4242                           fsr0l	equ	0xFE9
  4243                           wreg	equ	0xFE8
  4244                           postdec1	equ	0xFE5
  4245                           fsr1l	equ	0xFE1
  4246                           indf2	equ	0xFDF
  4247                           postinc2	equ	0xFDE
  4248                           postdec2	equ	0xFDD
  4249                           fsr2h	equ	0xFDA
  4250                           fsr2l	equ	0xFD9
  4251                           status	equ	0xFD8
  4252                           
  4253 ;; *************** function _Read_RTC *****************
  4254 ;; Defined at:
  4255 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;		None               void
  4262 ;; Registers used:
  4263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    1
  4276 ;; This function calls:
  4277 ;;		_RtccReadDate
  4278 ;;		_RtccReadTime
  4279 ;; This function is called by:
  4280 ;;		_main
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text23
  4285  001854                     __ptext23:
  4286                           	opt stack 0
  4287  001854                     _Read_RTC:
  4288                           	opt stack 29
  4289                           
  4290                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  4291                           
  4292                           ; BSR set to: 15
  4293                           ;incstack = 0
  4294  001854  0E3F               	movlw	low _RtccTime
  4295  001856  6E01               	movwf	RtccReadTime@pTm,c
  4296  001858  0E00               	movlw	high _RtccTime
  4297  00185A  6E02               	movwf	RtccReadTime@pTm+1,c
  4298  00185C  ECA3  F00D         	call	_RtccReadTime	;wreg free
  4299                           
  4300                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  4301  001860  5040               	movf	_RtccTime+1,w,c
  4302  001862  0B0F               	andlw	15
  4303  001864  6E4F               	movwf	_segundo_u,c
  4304                           
  4305                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  4306  001866  3840               	swapf	_RtccTime+1,w,c
  4307  001868  0B0F               	andlw	15
  4308  00186A  0B0F               	andlw	15
  4309  00186C  6E4E               	movwf	_segundo_d,c
  4310                           
  4311                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  4312  00186E  5041               	movf	_RtccTime+2,w,c
  4313  001870  0B0F               	andlw	15
  4314  001872  6E4D               	movwf	_minuto_u,c
  4315                           
  4316                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  4317  001874  3841               	swapf	_RtccTime+2,w,c
  4318  001876  0B0F               	andlw	15
  4319  001878  0B0F               	andlw	15
  4320  00187A  6E4C               	movwf	_minuto_d,c
  4321                           
  4322                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  4323  00187C  5042               	movf	_RtccTime+3,w,c
  4324  00187E  0B0F               	andlw	15
  4325  001880  6E49               	movwf	_hora_u,c
  4326                           
  4327                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  4328  001882  3842               	swapf	_RtccTime+3,w,c
  4329  001884  0B0F               	andlw	15
  4330  001886  0B0F               	andlw	15
  4331  001888  6E48               	movwf	_hora_d,c
  4332                           
  4333                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  4334  00188A  0E3B               	movlw	low _RtccDate
  4335  00188C  6E01               	movwf	RtccReadDate@pDt,c
  4336  00188E  0E00               	movlw	high _RtccDate
  4337  001890  6E02               	movwf	RtccReadDate@pDt+1,c
  4338  001892  ECE1  F00C         	call	_RtccReadDate	;wreg free
  4339                           
  4340                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  4341  001896  503C               	movf	_RtccDate+1,w,c
  4342  001898  0B0F               	andlw	15
  4343  00189A  6E47               	movwf	_fecha_u,c
  4344                           
  4345                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  4346  00189C  383C               	swapf	_RtccDate+1,w,c
  4347  00189E  0B0F               	andlw	15
  4348  0018A0  0B0F               	andlw	15
  4349  0018A2  6E46               	movwf	_fecha_d,c
  4350                           
  4351                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  4352  0018A4  503D               	movf	_RtccDate+2,w,c
  4353  0018A6  0B0F               	andlw	15
  4354  0018A8  6E4B               	movwf	_mes_u,c
  4355                           
  4356                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  4357  0018AA  383D               	swapf	_RtccDate+2,w,c
  4358  0018AC  0B0F               	andlw	15
  4359  0018AE  0B0F               	andlw	15
  4360  0018B0  6E4A               	movwf	_mes_d,c
  4361                           
  4362                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  4363  0018B2  C03B  F045         	movff	_RtccDate,_dia_semana
  4364                           
  4365                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  4366  0018B6  503E               	movf	_RtccDate+3,w,c
  4367  0018B8  0B0F               	andlw	15
  4368  0018BA  6E44               	movwf	_anio_u,c
  4369                           
  4370                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  4371  0018BC  383E               	swapf	_RtccDate+3,w,c
  4372  0018BE  0B0F               	andlw	15
  4373  0018C0  0B0F               	andlw	15
  4374  0018C2  6E43               	movwf	_anio_d,c
  4375                           
  4376                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  4377  0018C4  504E               	movf	_segundo_d,w,c
  4378  0018C6  0D0A               	mullw	10
  4379  0018C8  504F               	movf	_segundo_u,w,c
  4380  0018CA  24F3               	addwf	prodl,w,c
  4381  0018CC  6E39               	movwf	_segundo,c
  4382  0018CE  0E00               	movlw	0
  4383  0018D0  20F4               	addwfc	prodh,w,c
  4384  0018D2  6E3A               	movwf	_segundo+1,c
  4385                           
  4386                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  4387  0018D4  504C               	movf	_minuto_d,w,c
  4388  0018D6  0D0A               	mullw	10
  4389  0018D8  504D               	movf	_minuto_u,w,c
  4390  0018DA  24F3               	addwf	prodl,w,c
  4391  0018DC  6E5A               	movwf	_minuto,c
  4392  0018DE  0E00               	movlw	0
  4393  0018E0  20F4               	addwfc	prodh,w,c
  4394  0018E2  6E5B               	movwf	_minuto+1,c
  4395                           
  4396                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  4397  0018E4  5048               	movf	_hora_d,w,c
  4398  0018E6  0D0A               	mullw	10
  4399  0018E8  5049               	movf	_hora_u,w,c
  4400  0018EA  24F3               	addwf	prodl,w,c
  4401  0018EC  6E56               	movwf	_hora,c
  4402  0018EE  0E00               	movlw	0
  4403  0018F0  20F4               	addwfc	prodh,w,c
  4404  0018F2  6E57               	movwf	_hora+1,c
  4405                           
  4406                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  4407  0018F4  5046               	movf	_fecha_d,w,c
  4408  0018F6  0D0A               	mullw	10
  4409  0018F8  5047               	movf	_fecha_u,w,c
  4410  0018FA  24F3               	addwf	prodl,w,c
  4411  0018FC  6E52               	movwf	_dia,c
  4412  0018FE  0E00               	movlw	0
  4413  001900  20F4               	addwfc	prodh,w,c
  4414  001902  6E53               	movwf	_dia+1,c
  4415                           
  4416                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  4417  001904  C045  F054         	movff	_dia_semana,_diasem
  4418  001908  6A55               	clrf	_diasem+1,c
  4419                           
  4420                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  4421  00190A  504A               	movf	_mes_d,w,c
  4422  00190C  0D0A               	mullw	10
  4423  00190E  504B               	movf	_mes_u,w,c
  4424  001910  24F3               	addwf	prodl,w,c
  4425  001912  6E58               	movwf	_mes,c
  4426  001914  0E00               	movlw	0
  4427  001916  20F4               	addwfc	prodh,w,c
  4428  001918  6E59               	movwf	_mes+1,c
  4429                           
  4430                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  4431  00191A  5043               	movf	_anio_d,w,c
  4432  00191C  0D0A               	mullw	10
  4433  00191E  5044               	movf	_anio_u,w,c
  4434  001920  24F3               	addwf	prodl,w,c
  4435  001922  6E50               	movwf	_anio,c
  4436  001924  0E00               	movlw	0
  4437  001926  20F4               	addwfc	prodh,w,c
  4438  001928  6E51               	movwf	_anio+1,c
  4439  00192A  0012               	return		;funcret
  4440  00192C                     __end_of_Read_RTC:
  4441                           	opt stack 0
  4442                           tblptru	equ	0xFF8
  4443                           tblptrh	equ	0xFF7
  4444                           tblptrl	equ	0xFF6
  4445                           tablat	equ	0xFF5
  4446                           prodh	equ	0xFF4
  4447                           prodl	equ	0xFF3
  4448                           intcon	equ	0xFF2
  4449                           indf0	equ	0xFEF
  4450                           postinc0	equ	0xFEE
  4451                           fsr0h	equ	0xFEA
  4452                           fsr0l	equ	0xFE9
  4453                           wreg	equ	0xFE8
  4454                           postdec1	equ	0xFE5
  4455                           fsr1l	equ	0xFE1
  4456                           indf2	equ	0xFDF
  4457                           postinc2	equ	0xFDE
  4458                           postdec2	equ	0xFDD
  4459                           fsr2h	equ	0xFDA
  4460                           fsr2l	equ	0xFD9
  4461                           status	equ	0xFD8
  4462                           
  4463 ;; *************** function _RtccReadTime *****************
  4464 ;; Defined at:
  4465 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  pTm             2    0[COMRAM] PTR struct .
  4468 ;;		 -> RtccTime(4), 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  rTD0            8   10[COMRAM] struct .
  4471 ;;  rTD1            8    2[COMRAM] struct .
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4482 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4484 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4485 ;;Total ram usage:       18 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_Read_RTC
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text24
  4495  001B46                     __ptext24:
  4496                           	opt stack 0
  4497  001B46                     _RtccReadTime:
  4498                           	opt stack 29
  4499  001B46  0EFC               	movlw	252
  4500  001B48  010F               	movlb	15	; () banked
  4501  001B4A  173F               	andwf	63,f,b	;volatile
  4502                           
  4503                           ; BSR set to: 15
  4504  001B4C  010F               	movlb	15	; () banked
  4505  001B4E  813F               	bsf	63,0,b	;volatile
  4506                           
  4507                           ; BSR set to: 15
  4508  001B50  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  4509                           
  4510                           ; BSR set to: 15
  4511  001B54  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  4512                           
  4513                           ; BSR set to: 15
  4514  001B58  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  4515                           
  4516                           ; BSR set to: 15
  4517  001B5C  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  4518                           
  4519                           ; BSR set to: 15
  4520  001B60  0EFC               	movlw	252
  4521  001B62  010F               	movlb	15	; () banked
  4522  001B64  173F               	andwf	63,f,b	;volatile
  4523  001B66  010F               	movlb	15	; () banked
  4524  001B68  813F               	bsf	63,0,b	;volatile
  4525                           
  4526                           ; BSR set to: 15
  4527  001B6A  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  4528                           
  4529                           ; BSR set to: 15
  4530  001B6E  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  4531                           
  4532                           ; BSR set to: 15
  4533  001B72  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  4534                           
  4535                           ; BSR set to: 15
  4536  001B76  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  4537                           
  4538                           ; BSR set to: 15
  4539  001B7A  5009               	movf	RtccReadTime@rTD1+6,w,c
  4540  001B7C  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  4541  001B7E  A4D8               	btfss	status,2,c
  4542  001B80  D7E2               	goto	l2109
  4543                           
  4544                           ; BSR set to: 15
  4545                           
  4546                           ; BSR set to: 15
  4547  001B82  EE20 F003          	lfsr	2,3
  4548  001B86  5001               	movf	RtccReadTime@pTm,w,c
  4549  001B88  26D9               	addwf	fsr2l,f,c
  4550  001B8A  5002               	movf	RtccReadTime@pTm+1,w,c
  4551  001B8C  22DA               	addwfc	fsr2h,f,c
  4552  001B8E  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  4553  001B92  EE20 F002          	lfsr	2,2
  4554  001B96  5001               	movf	RtccReadTime@pTm,w,c
  4555  001B98  26D9               	addwf	fsr2l,f,c
  4556  001B9A  5002               	movf	RtccReadTime@pTm+1,w,c
  4557  001B9C  22DA               	addwfc	fsr2h,f,c
  4558  001B9E  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  4559  001BA2  EE20 F001          	lfsr	2,1
  4560  001BA6  5001               	movf	RtccReadTime@pTm,w,c
  4561  001BA8  26D9               	addwf	fsr2l,f,c
  4562  001BAA  5002               	movf	RtccReadTime@pTm+1,w,c
  4563  001BAC  22DA               	addwfc	fsr2h,f,c
  4564  001BAE  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  4565                           
  4566                           ; BSR set to: 15
  4567  001BB2  0012               	return		;funcret
  4568  001BB4                     __end_of_RtccReadTime:
  4569                           	opt stack 0
  4570                           tblptru	equ	0xFF8
  4571                           tblptrh	equ	0xFF7
  4572                           tblptrl	equ	0xFF6
  4573                           tablat	equ	0xFF5
  4574                           prodh	equ	0xFF4
  4575                           prodl	equ	0xFF3
  4576                           intcon	equ	0xFF2
  4577                           indf0	equ	0xFEF
  4578                           postinc0	equ	0xFEE
  4579                           fsr0h	equ	0xFEA
  4580                           fsr0l	equ	0xFE9
  4581                           wreg	equ	0xFE8
  4582                           postdec1	equ	0xFE5
  4583                           fsr1l	equ	0xFE1
  4584                           indf2	equ	0xFDF
  4585                           postinc2	equ	0xFDE
  4586                           postdec2	equ	0xFDD
  4587                           fsr2h	equ	0xFDA
  4588                           fsr2l	equ	0xFD9
  4589                           status	equ	0xFD8
  4590                           
  4591 ;; *************** function _RtccReadDate *****************
  4592 ;; Defined at:
  4593 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  pDt             2    0[COMRAM] PTR struct .
  4596 ;;		 -> RtccDate(4), 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  rTD0            8   10[COMRAM] struct .
  4599 ;;  rTD1            8    2[COMRAM] struct .
  4600 ;; Return value:  Size  Location     Type
  4601 ;;		None               void
  4602 ;; Registers used:
  4603 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4613 ;;Total ram usage:       18 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_Read_RTC
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text25
  4623  0019C2                     __ptext25:
  4624                           	opt stack 0
  4625  0019C2                     _RtccReadDate:
  4626                           	opt stack 29
  4627  0019C2  0EFC               	movlw	252
  4628  0019C4  010F               	movlb	15	; () banked
  4629  0019C6  173F               	andwf	63,f,b	;volatile
  4630  0019C8  0E03               	movlw	3
  4631  0019CA  010F               	movlb	15	; () banked
  4632  0019CC  133F               	iorwf	63,f,b	;volatile
  4633                           
  4634                           ; BSR set to: 15
  4635  0019CE  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  4636                           
  4637                           ; BSR set to: 15
  4638  0019D2  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  4639                           
  4640                           ; BSR set to: 15
  4641  0019D6  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  4642                           
  4643                           ; BSR set to: 15
  4644  0019DA  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  4645                           
  4646                           ; BSR set to: 15
  4647  0019DE  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  4648                           
  4649                           ; BSR set to: 15
  4650  0019E2  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  4651  0019E6  0EFC               	movlw	252
  4652  0019E8  010F               	movlb	15	; () banked
  4653  0019EA  173F               	andwf	63,f,b	;volatile
  4654  0019EC  0E03               	movlw	3
  4655  0019EE  010F               	movlb	15	; () banked
  4656  0019F0  133F               	iorwf	63,f,b	;volatile
  4657                           
  4658                           ; BSR set to: 15
  4659  0019F2  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  4660                           
  4661                           ; BSR set to: 15
  4662  0019F6  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  4663                           
  4664                           ; BSR set to: 15
  4665  0019FA  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  4666                           
  4667                           ; BSR set to: 15
  4668  0019FE  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  4669                           
  4670                           ; BSR set to: 15
  4671  001A02  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  4672                           
  4673                           ; BSR set to: 15
  4674  001A06  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  4675  001A0A  5005               	movf	RtccReadDate@rTD1+2,w,c
  4676  001A0C  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  4677  001A0E  A4D8               	btfss	status,2,c
  4678  001A10  D7D8               	goto	l2135
  4679                           
  4680                           ; BSR set to: 15
  4681                           
  4682                           ; BSR set to: 15
  4683  001A12  EE20 F001          	lfsr	2,1
  4684  001A16  5001               	movf	RtccReadDate@pDt,w,c
  4685  001A18  26D9               	addwf	fsr2l,f,c
  4686  001A1A  5002               	movf	RtccReadDate@pDt+1,w,c
  4687  001A1C  22DA               	addwfc	fsr2h,f,c
  4688  001A1E  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  4689  001A22  EE20 F002          	lfsr	2,2
  4690  001A26  5001               	movf	RtccReadDate@pDt,w,c
  4691  001A28  26D9               	addwf	fsr2l,f,c
  4692  001A2A  5002               	movf	RtccReadDate@pDt+1,w,c
  4693  001A2C  22DA               	addwfc	fsr2h,f,c
  4694  001A2E  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  4695                           
  4696                           ; BSR set to: 15
  4697  001A32  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  4698  001A36  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  4699  001A3A  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  4700                           
  4701                           ; BSR set to: 15
  4702  001A3E  EE20 F003          	lfsr	2,3
  4703  001A42  5001               	movf	RtccReadDate@pDt,w,c
  4704  001A44  26D9               	addwf	fsr2l,f,c
  4705  001A46  5002               	movf	RtccReadDate@pDt+1,w,c
  4706  001A48  22DA               	addwfc	fsr2h,f,c
  4707  001A4A  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  4708                           
  4709                           ; BSR set to: 15
  4710  001A4E  0012               	return		;funcret
  4711  001A50                     __end_of_RtccReadDate:
  4712                           	opt stack 0
  4713                           tblptru	equ	0xFF8
  4714                           tblptrh	equ	0xFF7
  4715                           tblptrl	equ	0xFF6
  4716                           tablat	equ	0xFF5
  4717                           prodh	equ	0xFF4
  4718                           prodl	equ	0xFF3
  4719                           intcon	equ	0xFF2
  4720                           indf0	equ	0xFEF
  4721                           postinc0	equ	0xFEE
  4722                           fsr0h	equ	0xFEA
  4723                           fsr0l	equ	0xFE9
  4724                           wreg	equ	0xFE8
  4725                           postdec1	equ	0xFE5
  4726                           fsr1l	equ	0xFE1
  4727                           indf2	equ	0xFDF
  4728                           postinc2	equ	0xFDE
  4729                           postdec2	equ	0xFDD
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           intcon	equ	0xFF2
  4740                           indf0	equ	0xFEF
  4741                           postinc0	equ	0xFEE
  4742                           fsr0h	equ	0xFEA
  4743                           fsr0l	equ	0xFE9
  4744                           wreg	equ	0xFE8
  4745                           postdec1	equ	0xFE5
  4746                           fsr1l	equ	0xFE1
  4747                           indf2	equ	0xFDF
  4748                           postinc2	equ	0xFDE
  4749                           postdec2	equ	0xFDD
  4750                           fsr2h	equ	0xFDA
  4751                           fsr2l	equ	0xFD9
  4752                           status	equ	0xFD8
  4753                           
  4754                           	psect	rparam
  4755  0000                     tblptru	equ	0xFF8
  4756                           tblptrh	equ	0xFF7
  4757                           tblptrl	equ	0xFF6
  4758                           tablat	equ	0xFF5
  4759                           prodh	equ	0xFF4
  4760                           prodl	equ	0xFF3
  4761                           intcon	equ	0xFF2
  4762                           indf0	equ	0xFEF
  4763                           postinc0	equ	0xFEE
  4764                           fsr0h	equ	0xFEA
  4765                           fsr0l	equ	0xFE9
  4766                           wreg	equ	0xFE8
  4767                           postdec1	equ	0xFE5
  4768                           fsr1l	equ	0xFE1
  4769                           indf2	equ	0xFDF
  4770                           postinc2	equ	0xFDE
  4771                           postdec2	equ	0xFDD
  4772                           fsr2h	equ	0xFDA
  4773                           fsr2l	equ	0xFD9
  4774                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    14
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      92
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[7]), STR_4(CODE[7]), buffer2(BANK0[20]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _lcd_setcursor_vb->_lcd_send_byte
    _caratula->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   15426
                                             35 COMRAM     5     5      0
                           _Read_RTC
                              _Setup
                          _Write_RTC
                           _caratula
                         _lcd_gotoxy
                   _lcd_setcursor_vb
 ---------------------------------------------------------------------------------
 (1) _lcd_setcursor_vb                                     2     1      1     732
                                              4 COMRAM     2     1      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0    5877
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    22     10    1916
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    2174
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    1809
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    1141
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _caratula
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_setcursor_vb
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     28      5C       1       96.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88       6        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 06 10:44:41 2016

                        _a 002D                          _b 002F                          _c 0031  
                        _i 0033                          _j 0035                          _k 0037  
           ?_lcd_send_byte 0003               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
              lcd_comand@d 0005               __CFG_CP0$OFF 000000                        l151 1238  
                      l152 1396                        l147 1236                        l276 110E  
                      l197 1DA4                        l198 1DA6                        l920 1C06  
                      l930 1CA6                        _dia 0052                        _mes 0058  
                      wreg 000FE8            RtccReadDate@pDt 0001                lcd_gotoxy@x 0006  
              lcd_gotoxy@y 0005                       l2001 197C                       l2013 19A6  
                     l2031 1BDC                       l2017 19B6                       l2009 199A  
                     l1049 1E3E                       l2027 1BCA                       l2051 1C84  
                     l2211 1038                       l2109 1B46                       l2029 1BD4  
                     l2221 1060                       l2205 1010                       l2135 19C2  
                     l2039 1BFA                       l2055 1C9A                       l2047 1C72  
                     l2049 1C7C                       l2233 10AC                       l2225 1084  
                     l2217 1054                       l2209 1016                       l2401 11B6  
                     l2171 1C12                       l2235 10B6                       l2253 1114  
                     l2245 10E4                       l2229 1088                       l2261 1174  
                     l2501 137E                       l2175 1C3C                       l2247 10EC  
                     l2239 10C2                       l2263 1190                       l2191 0F78  
                     l2423 121E                       l2273 1A76                       l2193 0F8E  
                     l2185 0F60                       l2441 1270                       l2417 11F8  
                     l2291 1AA2                       l2283 1A8E                       l1803 1DEE  
                     l2259 1168                       l2187 0F6E                       l2179 0F46  
                     l2363 1816                       l2507 139A                       l2435 1258  
                     l1901 15C4                       l2277 1A7E                       l1805 1DF4  
                     l2197 0FAC                       l2453 12A4                       l1823 16A6  
                     l2359 17FE                       l2471 12F4                       l2447 128C  
                     l1833 16D6                       l1817 167C                       l2369 183A  
                     l2465 12D8                       l1827 16BA                       l2483 132C  
                     l2459 12C0                       l1941 1632                       l1933 161A  
                     l1861 1726                       l2477 130E                       l1951 1CCC  
                     l2495 1364                       l1937 1626                       l1865 1732  
                     l1777 1E50                       l1953 1CD8                       l2489 1346  
                     l1891 1594                       l1947 1CB4                       l1885 155A  
                     l1869 173E                       l1949 1CC0                       l1957 1CE4  
                     l1895 15A8                       l1991 1954                       l1967 1E1E  
                     l1985 1942                       l1997 196A                       l1999 1974  
                     STR_1 0F34                       STR_2 0F0F                       STR_3 0F1E  
                     STR_4 0F34                       STR_5 0F2D                       u1100 1B0E  
                     u1120 1B2A                       u1060 1ADC                       u1118 1B10  
                     u1080 1AF4                       u1138 1B2C                       u2117 1228  
                     u1078 1ADE                       u2127 1388                       u2137 13A0  
                     u1098 1AF6                       u2147 1E40                       u2157 1E52  
                     u1560 1C32                       u1570 1C5C                       u1567 1C28  
                     u1577 1C52                       u1780 1826           ?_lcd_send_nibble 0001  
                     _anio 0050                       _flag 02E0                       _main 11A0  
                     _hora 0056                       fsr0h 000FEA                       indf0 000FEF  
                     fsr0l 000FE9                       fsr2h 000FDA                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9              __CFG_T1DIG$ON 000000  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000           RtccReadDate@rTD0 000B           RtccReadDate@rTD1 0003  
             ___param_bank 000010            RtccReadTime@pTm 0001                _Delay1KTCYx 1E3C  
            __CFG_PLLDIV$1 000000                      ?_main 0001            __end_of___awdiv 19C2  
    __size_of_Delay100TCYx 0012            ___awdiv@divisor 0003            __end_of___lwdiv 1C10  
          __end_of___lwmod 1CB0            ___awdiv@counter 0005                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94             __CFG_FCMEN$OFF 000000  
                    _Setup 1CFC            __end_of_dpowers 0F0B                      _mes_d 004A  
                    _mes_u 004B            __end_of_isdigit 1E28             __pbitbssCOMRAM 02E0  
                    tablat 000FF5               lcd_putrs@ptr 0009                      status 000FD8  
          __end_of_sprintf 11A0    __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1D44  
             _Delay100TCYx 1E4E               __end_of_main 13B0            ??_lcd_send_byte 0004  
         RtccReadTime@rTD0 000B           RtccReadTime@rTD1 0003           __end_of_Read_RTC 192C  
                   ??_main 0024              __activetblptr 000002           __end_of_RtccWrOn 1E72  
                   ?_Setup 0001                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _EECON2 000FA7                     _ANCON0 000F48           ___awdiv@dividend 0001  
           __CFG_WDTEN$OFF 000000           RtccWriteDate@pDt 0001                     _RTCCFG 000F3F  
           __CFG_WPCFG$OFF 000000           __end_of_caratula 1854             __CFG_WPDIS$OFF 000000  
           __CFG_XINST$OFF 000000           __end_of_lcd_init 1AD0           __end_of_lcd_putc 1CFC  
        ?_lcd_setcursor_vb 0005                     ___wmul 1DBA                  ??___awdiv 0005  
           __CFG_STVREN$ON 000000                     _diasem 0054                     _anio_d 0043  
                   _anio_u 0044                  ??___lwdiv 0005                  ??___lwmod 000C  
       ??_lcd_setcursor_vb 0006                     _hora_d 0048                     _hora_u 0049  
                   clear_0 1D4A                     clear_1 1D58           ___awdiv@quotient 0007  
                   _minuto 005A      __end_of_RtccWriteDate 163E      __end_of_RtccWriteTime 174A  
         RtccWriteTime@pTm 0001               __pdataCOMRAM 0050                  ??_isdigit 0001  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_sprintf 0017                 __accesstop 0060  
  __end_of__initialization 1D7E         __size_of_Write_RTC 0148              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_Setup 1D44            __CFG_DSWDTPS$G2 000000  
          __CFG_OSC$INTOSC 000000                    ??_Setup 000E          lcd_gotoxy@address 0007  
       __size_of_lcd_putrs 0054               sprintf@width 0021                 __pbssBANK0 0060  
                ?_Read_RTC 0001                 _dia_semana 0045  RtccWriteTime@tempHourWDay 000A  
               __pnvCOMRAM 0043                  ?_RtccWrOn 0001             lcd_send_byte@n 0003  
                  ?___wmul 0001              ?_RtccReadDate 0001              ?_RtccReadTime 0001  
             ?_Delay1KTCYx 0001          __end_of_Write_RTC 14F8                 _lcd_comand 1E72  
                ?_caratula 0001                 _lcd_gotoxy 1DE2                    _RTCVALH 000F99  
                  _RTCVALL 000F98                  ?_lcd_init 0001                  ?_lcd_putc 0001  
               ??_Read_RTC 0013                    __Hparam 0000                    __Lparam 0000  
 __size_of_lcd_send_nibble 0076                 ??_RtccWrOn 0001             ??_RtccReadDate 0003  
           ??_RtccReadTime 0003                    ___awdiv 192C          __end_of_lcd_putrs 1C64  
          __size_of___wmul 0028                    ___lwdiv 1BB4                    ___lwmod 1C64  
             __psmallconst 0F00                _RtccTimeVal 0029                    __pcinit 1D44  
                  _fecha_d 0046                    _fecha_u 0047                    __ramtop 0F00  
                  __ptext0 11A0                    __ptext1 1E28                    __ptext2 174A  
                  __ptext3 0F3C                    __ptext4 1E06                    __ptext5 1DBA  
                  __ptext6 1C64                    __ptext7 1BB4                    __ptext8 1C10  
                  __ptext9 1CB0                    _buffer2 0078                  _T1CONbits 000FCD  
                  _dpowers 0F01                    _isdigit 1E06                 ??_caratula 0024  
                  _segundo 0039                    _sprintf 0F3C                 ??_lcd_init 0005  
               ??_lcd_putc 0008       end_of_initialization 1D7E       lcd_send_byte@address 0004  
            __Lmediumconst 0000                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE      __end_of_lcd_send_byte 1DBA  
                _PORTAbits 000F80           __CFG_DSBOREN$OFF 000000                ?_lcd_comand 0001  
         __CFG_CPUDIV$OSC1 000000                  _TRISBbits 000F93                ?_lcd_gotoxy 0005  
__size_of_lcd_setcursor_vb 0014            _LCD_INIT_STRING 0F0B           __CFG_IOL1WAY$OFF 000000  
RtccWriteDate@tempDayMonth 000A        __CFG_MSSP7B_EN$MSK7 000000           Delay100TCYx@unit 0001  
           __end_of___wmul 1DE2              __pidataCOMRAM 1E80  RtccWriteDate@tempHourWDay 000C  
        ??_lcd_send_nibble 0001       __size_of_Delay1KTCYx 0012           __CFG_DSWDTEN$OFF 000000  
      start_initialization 1D44       __end_of_RtccReadDate 1A50       __end_of_RtccReadTime 1BB4  
     RtccWriteTime@wasAlrm 0006       RtccWriteTime@wasWrEn 0007     __size_of_RtccWriteDate 0146  
          RtccWriteDate@di 0003     __size_of_RtccWriteTime 010C          __size_of_Read_RTC 00D8  
      __size_of_lcd_comand 000E        __size_of_lcd_gotoxy 0024                   ??___wmul 0005  
        __size_of_RtccWrOn 0012            RtccWriteTime@di 0003           __CFG_LPT1OSC$OFF 000000  
              _ALRMCFGbits 000F91    __end_of_LCD_INIT_STRING 0F0F                __pbssCOMRAM 0029  
                _Write_RTC 13B0               _isdigit$1822 0002          __size_of_caratula 010A  
          Delay1KTCYx@unit 0001          __size_of_lcd_init 0080                sprintf@flag 001D  
        __size_of_lcd_putc 004C                sprintf@prec 0020           ___lwdiv@dividend 0001  
            ?_Delay100TCYx 0001                   ?___awdiv 0001                   ?___lwdiv 0001  
                 ?___lwmod 0008    RtccWriteTime@tempMinSec 0008                  _lcd_putrs 1C10  
  lcd_setcursor_vb@visible 0006              _RtccWriteDate 14F8                __smallconst 0F00  
            _RtccWriteTime 163E                   ?_isdigit 0001       __CFG_RTCOSC$T1OSCREF 000000  
         _lcd_setcursor_vb 1E28             __size_of_Setup 0048                 ?_Write_RTC 0001  
         ___lwdiv@quotient 0005                   ?_sprintf 000D           _RtccAlrmTimeDate 0060  
           ___wmul@product 0005                   _LATBbits 000F8A                   _PIE3bits 000FA3  
                _segundo_d 004E             ??_Delay100TCYx 0001                  _segundo_u 004F  
         __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 0005         _Rtcc_read_TimeDate 0070  
           ?_RtccWriteDate 0001                 ?_lcd_putrs 0009          ___wmul@multiplier 0001  
           ?_RtccWriteTime 0001                  lcd_init@i 0005      __size_of_RtccReadDate 008E  
             ??_lcd_comand 0005                  lcd_putc@c 0008      __size_of_RtccReadTime 006E  
             ??_lcd_gotoxy 0006                  copy_data0 1D72                   _Read_RTC 1854  
          _lcd_send_nibble 1AD0                   __Hrparam 0000                   _RtccDate 003B  
                 __Lrparam 0000                   _RtccTime 003F                   _RtccWrOn 1E60  
       __end_of_lcd_comand 1E80         __end_of_lcd_gotoxy 1E06               _RtccReadDate 19C2  
         __size_of___awdiv 0096               _RtccReadTime 1B46           __size_of___lwdiv 005C  
         __size_of___lwmod 004C               _RtccTimeDate 0068                 sprintf@val 001E  
                 _caratula 174A           __size_of_isdigit 0022            ___lwdiv@divisor 0003  
              ??_Write_RTC 000E            ___lwdiv@counter 0007                   __ptext10 1DE2  
                 __ptext11 1CFC                   __ptext20 163E                   __ptext12 1A50  
                 __ptext21 14F8                   __ptext13 1E3C                   __ptext22 1E60  
                 __ptext14 1E72                   __ptext23 1854                   __ptext15 1D88  
                 __ptext24 1B46                   __ptext16 1AD0                   __ptext25 19C2  
                 __ptext17 1E4E                   __ptext18 13B0                   __ptext19 192C  
                 _lcd_init 1A50                   _lcd_putc 1CB0           __size_of_sprintf 0264  
   __size_of_lcd_send_byte 0032              __size_of_main 0210                   _minuto_d 004C  
                 _minuto_u 004D              ??_Delay1KTCYx 0001            ??_RtccWriteDate 0004  
                 main@cr_x 0027                   main@cr_y 0025            ??_RtccWriteTime 0004  
              ??_lcd_putrs 000B                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       RtccWriteTime@wasOn 0005       __end_of_Delay100TCYx 1E60                   isdigit@c 0003  
                sprintf@ap 001B    __end_of_lcd_send_nibble 1B46                  sprintf@sp 000D  
    lcd_setcursor_vb@blink 0005           ___lwmod@dividend 0008                 _OSCCONbits 000FD3  
 __end_of_lcd_setcursor_vb 1E3C      RtccWriteDate@tempYear 0007              _lcd_send_byte 1D88  
               _RTCCFGbits 000F3F                   sprintf@c 0023                   sprintf@f 000F  
          ___lwmod@divisor 000A        __end_of_Delay1KTCYx 1E4E            ___lwmod@counter 000C  
     RtccWriteDate@wasAlrm 0006       RtccWriteDate@wasWrEn 0009      lcd_send_nibble@nibble 0002  
