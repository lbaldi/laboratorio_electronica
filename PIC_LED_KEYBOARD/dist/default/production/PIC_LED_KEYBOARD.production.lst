

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Aug 23 18:56:26 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001C84                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _anio
    44  001C84  0010               	dw	16
    45                           
    46                           ;initializer for _dia
    47  001C86  0001               	dw	1
    48                           
    49                           ;initializer for _mes
    50  001C88  0001               	dw	1
    51                           
    52                           	psect	smallconst
    53  000F00                     __psmallconst:
    54                           	opt stack 0
    55  000F00  00                 	db	0
    56  000F01                     _dpowers:
    57                           	opt stack 0
    58  000F01  0001               	dw	1
    59  000F03  000A               	dw	10
    60  000F05  0064               	dw	100
    61  000F07  03E8               	dw	1000
    62  000F09  2710               	dw	10000
    63  000F0B                     __end_of_dpowers:
    64                           	opt stack 0
    65  000F0B                     _LCD_INIT_STRING:
    66                           	opt stack 0
    67  000F0B  28                 	db	40
    68  000F0C  0C                 	db	12
    69  000F0D  01                 	db	1
    70  000F0E  06                 	db	6
    71  000F0F                     __end_of_LCD_INIT_STRING:
    72                           	opt stack 0
    73  000F0F                     STR_1:
    74                           
    75                           ; BSR set to: 15
    76  000F0F  55                 	db	85	;'U'
    77  000F10  4E                 	db	78	;'N'
    78  000F11  49                 	db	73	;'I'
    79  000F12  4D                 	db	77	;'M'
    80  000F13  49                 	db	73	;'I'
    81  000F14  43                 	db	67	;'C'
    82  000F15  20                 	db	32
    83  000F16  20                 	db	32
    84  000F17  54                 	db	84	;'T'
    85  000F18  45                 	db	69	;'E'
    86  000F19  43                 	db	67	;'C'
    87  000F1A  4C                 	db	76	;'L'
    88  000F1B  41                 	db	65	;'A'
    89  000F1C  44                 	db	68	;'D'
    90  000F1D  4F                 	db	79	;'O'
    91  000F1E  20                 	db	32
    92  000F1F  00                 	db	0
    93  000F20                     STR_2:
    94                           
    95                           ; BSR set to: 15
    96  000F20  25                 	db	37
    97  000F21  30                 	db	48	;'0'
    98  000F22  31                 	db	49	;'1'
    99  000F23  75                 	db	117	;'u'
   100  000F24  00                 	db	0
   101  000F25                     STR_16:
   102                           
   103                           ; BSR set to: 15
   104  000F25  23                 	db	35
   105  000F26  00                 	db	0
   106  000F27                     STR_14:
   107                           
   108                           ; BSR set to: 15
   109  000F27  2A                 	db	42
   110  000F28  00                 	db	0
   111  000F29                     STR_5:
   112                           
   113                           ; BSR set to: 15
   114  000F29  41                 	db	65	;'A'
   115  000F2A  00                 	db	0
   116  000F2B                     STR_9:
   117                           
   118                           ; BSR set to: 15
   119  000F2B  42                 	db	66	;'B'
   120  000F2C  00                 	db	0
   121  000F2D                     STR_13:
   122                           
   123                           ; BSR set to: 15
   124  000F2D  43                 	db	67	;'C'
   125  000F2E  00                 	db	0
   126  000F2F                     STR_17:
   127                           
   128                           ; BSR set to: 15
   129  000F2F  44                 	db	68	;'D'
   130  000F30  00                 	db	0
   131  0000                     
   132                           ; #config settings
   133  000F31  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           	psect	nvCOMRAM
   136  00004A                     __pnvCOMRAM:
   137                           	opt stack 0
   138  00004A                     _anio_d:
   139                           	opt stack 0
   140  00004A                     	ds	1
   141  00004B                     _anio_u:
   142                           	opt stack 0
   143  00004B                     	ds	1
   144  00004C                     _dia_semana:
   145                           	opt stack 0
   146  00004C                     	ds	1
   147  00004D                     _fecha_d:
   148                           	opt stack 0
   149  00004D                     	ds	1
   150  00004E                     _fecha_u:
   151                           	opt stack 0
   152  00004E                     	ds	1
   153  00004F                     _hora_d:
   154                           	opt stack 0
   155  00004F                     	ds	1
   156  000050                     _hora_u:
   157                           	opt stack 0
   158  000050                     	ds	1
   159  000051                     _mes_d:
   160                           	opt stack 0
   161  000051                     	ds	1
   162  000052                     _mes_u:
   163                           	opt stack 0
   164  000052                     	ds	1
   165  000053                     _minuto_d:
   166                           	opt stack 0
   167  000053                     	ds	1
   168  000054                     _minuto_u:
   169                           	opt stack 0
   170  000054                     	ds	1
   171  000055                     _segundo_d:
   172                           	opt stack 0
   173  000055                     	ds	1
   174  000056                     _segundo_u:
   175                           	opt stack 0
   176  000056                     	ds	1
   177  0000                     _ANCON0	set	3912
   178  0000                     _ANCON1	set	3913
   179  0000                     _RTCCFG	set	3903
   180  0000                     _RTCCFGbits	set	3903
   181  0000                     _ADCON0	set	4034
   182  0000                     _ADCON1	set	4033
   183  0000                     _ALRMCFGbits	set	3985
   184  0000                     _EECON2	set	4007
   185  0000                     _INTCONbits	set	4082
   186  0000                     _LATAbits	set	3977
   187  0000                     _LATBbits	set	3978
   188  0000                     _OSCCONbits	set	4051
   189  0000                     _OSCTUNEbits	set	3995
   190  0000                     _PIE3bits	set	4003
   191  0000                     _PORTAbits	set	3968
   192  0000                     _PORTCbits	set	3970
   193  0000                     _RTCVALH	set	3993
   194  0000                     _RTCVALL	set	3992
   195  0000                     _T1CONbits	set	4045
   196  0000                     _TRISA	set	3986
   197  0000                     _TRISB	set	3987
   198  0000                     _TRISBbits	set	3987
   199  0000                     _TRISC	set	3988
   200                           
   201                           	psect	cinit
   202  001B34                     __pcinit:
   203                           	opt stack 0
   204  001B34                     start_initialization:
   205                           	opt stack 0
   206  001B34                     __initialization:
   207                           	opt stack 0
   208                           
   209                           ; Clear objects allocated to BANK0 (36 bytes)
   210  001B34  EE00  F060         	lfsr	0,__pbssBANK0
   211  001B38  0E24               	movlw	36
   212  001B3A                     clear_0:
   213  001B3A  6AEE               	clrf	postinc0,c
   214  001B3C  06E8               	decf	wreg,f,c
   215  001B3E  E1FD               	bnz	clear_0
   216                           
   217                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   218  001B40  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   219                           
   220                           ; Clear objects allocated to COMRAM (41 bytes)
   221  001B42  EE00  F001         	lfsr	0,__pbssCOMRAM
   222  001B46  0E29               	movlw	41
   223  001B48                     clear_1:
   224  001B48  6AEE               	clrf	postinc0,c
   225  001B4A  06E8               	decf	wreg,f,c
   226  001B4C  E1FD               	bnz	clear_1
   227                           
   228                           ; Initialize objects allocated to COMRAM (6 bytes)
   229                           ; load TBLPTR registers with __pidataCOMRAM
   230  001B4E  0E84               	movlw	low __pidataCOMRAM
   231  001B50  6EF6               	movwf	tblptrl,c
   232  001B52  0E1C               	movlw	high __pidataCOMRAM
   233  001B54  6EF7               	movwf	tblptrh,c
   234  001B56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   235  001B58  6EF8               	movwf	tblptru,c
   236  001B5A  EE00  F057         	lfsr	0,__pdataCOMRAM
   237  001B5E  EE10 F006          	lfsr	1,6
   238  001B62                     copy_data0:
   239  001B62  0009               	tblrd		*+
   240  001B64  CFF5 FFEE          	movff	tablat,postinc0
   241  001B68  50E5               	movf	postdec1,w,c
   242  001B6A  50E1               	movf	fsr1l,w,c
   243  001B6C  E1FA               	bnz	copy_data0
   244  001B6E                     end_of_initialization:
   245                           	opt stack 0
   246  001B6E                     __end_of__initialization:
   247                           	opt stack 0
   248  001B6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  001B70  6EF8               	movwf	tblptru,c
   250  001B72  0100               	movlb	0
   251  001B74  EF99  F007         	goto	_main	;jump to C main() function
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec1	equ	0xFE5
   259                           fsr1l	equ	0xFE1
   260                           
   261                           	psect	bitbssCOMRAM
   262  0002E8                     __pbitbssCOMRAM:
   263                           	opt stack 0
   264  0002E8                     _flag:
   265                           	opt stack 0
   266  0002E8                     	ds	1
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           postdec1	equ	0xFE5
   274                           fsr1l	equ	0xFE1
   275                           
   276                           	psect	bssCOMRAM
   277  000001                     __pbssCOMRAM:
   278                           	opt stack 0
   279  000001                     _RtccTimeDate:
   280                           	opt stack 0
   281  000001                     	ds	8
   282  000009                     _RtccTimeVal:
   283                           	opt stack 0
   284  000009                     	ds	4
   285  00000D                     _a:
   286                           	opt stack 0
   287  00000D                     	ds	2
   288  00000F                     _b:
   289                           	opt stack 0
   290  00000F                     	ds	2
   291  000011                     _c:
   292                           	opt stack 0
   293  000011                     	ds	2
   294  000013                     _diasem:
   295                           	opt stack 0
   296  000013                     	ds	2
   297  000015                     _hora:
   298                           	opt stack 0
   299  000015                     	ds	2
   300  000017                     _i:
   301                           	opt stack 0
   302  000017                     	ds	2
   303  000019                     _j:
   304                           	opt stack 0
   305  000019                     	ds	2
   306  00001B                     _k:
   307                           	opt stack 0
   308  00001B                     	ds	2
   309  00001D                     _minuto:
   310                           	opt stack 0
   311  00001D                     	ds	2
   312  00001F                     _segundo:
   313                           	opt stack 0
   314  00001F                     	ds	2
   315  000021                     _key:
   316                           	opt stack 0
   317  000021                     	ds	1
   318  000022                     _RtccDate:
   319                           	opt stack 0
   320  000022                     	ds	4
   321  000026                     _RtccTime:
   322                           	opt stack 0
   323  000026                     	ds	4
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	dataCOMRAM
   334  000057                     __pdataCOMRAM:
   335                           	opt stack 0
   336  000057                     _anio:
   337                           	opt stack 0
   338  000057                     	ds	2
   339  000059                     _dia:
   340                           	opt stack 0
   341  000059                     	ds	2
   342  00005B                     _mes:
   343                           	opt stack 0
   344  00005B                     	ds	2
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	bssBANK0
   355  000060                     __pbssBANK0:
   356                           	opt stack 0
   357  000060                     _RtccAlrmTimeDate:
   358                           	opt stack 0
   359  000060                     	ds	8
   360  000068                     _Rtcc_read_TimeDate:
   361                           	opt stack 0
   362  000068                     	ds	8
   363  000070                     _buffer2:
   364                           	opt stack 0
   365  000070                     	ds	20
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	cstackCOMRAM
   376  00002A                     __pcstackCOMRAM:
   377                           	opt stack 0
   378  00002A                     ??_isdigit:
   379  00002A                     ??_lcd_send_nibble:
   380  00002A                     ?___wmul:
   381                           	opt stack 0
   382  00002A                     ?___awdiv:
   383                           	opt stack 0
   384  00002A                     ?___lwdiv:
   385                           	opt stack 0
   386  00002A                     Delay100TCYx@unit:
   387                           	opt stack 0
   388  00002A                     Delay1KTCYx@unit:
   389                           	opt stack 0
   390  00002A                     RtccWriteDate@pDt:
   391                           	opt stack 0
   392  00002A                     RtccWriteTime@pTm:
   393                           	opt stack 0
   394  00002A                     ___wmul@multiplier:
   395                           	opt stack 0
   396  00002A                     ___awdiv@dividend:
   397                           	opt stack 0
   398  00002A                     ___lwdiv@dividend:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x0
   402  00002A                     	ds	1
   403  00002B                     lcd_send_nibble@nibble:
   404                           	opt stack 0
   405  00002B                     _isdigit$2039:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x1
   409  00002B                     	ds	1
   410  00002C                     lcd_send_byte@n:
   411                           	opt stack 0
   412  00002C                     RtccWriteDate@di:
   413                           	opt stack 0
   414  00002C                     RtccWriteTime@di:
   415                           	opt stack 0
   416  00002C                     isdigit@c:
   417                           	opt stack 0
   418  00002C                     ___wmul@multiplicand:
   419                           	opt stack 0
   420  00002C                     ___awdiv@divisor:
   421                           	opt stack 0
   422  00002C                     ___lwdiv@divisor:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x2
   426  00002C                     	ds	1
   427  00002D                     lcd_send_byte@address:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x3
   431  00002D                     	ds	1
   432  00002E                     lcd_init@i:
   433                           	opt stack 0
   434  00002E                     lcd_gotoxy@y:
   435                           	opt stack 0
   436  00002E                     lcd_comand@d:
   437                           	opt stack 0
   438  00002E                     RtccWriteDate@wasOn:
   439                           	opt stack 0
   440  00002E                     RtccWriteTime@wasOn:
   441                           	opt stack 0
   442  00002E                     ___awdiv@counter:
   443                           	opt stack 0
   444  00002E                     ___wmul@product:
   445                           	opt stack 0
   446  00002E                     ___lwdiv@quotient:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x4
   450  00002E                     	ds	1
   451  00002F                     lcd_gotoxy@x:
   452                           	opt stack 0
   453  00002F                     RtccWriteDate@wasAlrm:
   454                           	opt stack 0
   455  00002F                     RtccWriteTime@wasAlrm:
   456                           	opt stack 0
   457  00002F                     ___awdiv@sign:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x5
   461  00002F                     	ds	1
   462  000030                     lcd_gotoxy@address:
   463                           	opt stack 0
   464  000030                     RtccWriteTime@wasWrEn:
   465                           	opt stack 0
   466  000030                     ___lwdiv@counter:
   467                           	opt stack 0
   468  000030                     RtccWriteDate@tempYear:
   469                           	opt stack 0
   470  000030                     ___awdiv@quotient:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x6
   474  000030                     	ds	1
   475  000031                     ?___lwmod:
   476                           	opt stack 0
   477  000031                     lcd_putc@c:
   478                           	opt stack 0
   479  000031                     RtccWriteTime@tempMinSec:
   480                           	opt stack 0
   481  000031                     ___lwmod@dividend:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x7
   485  000031                     	ds	1
   486  000032                     RtccWriteDate@wasWrEn:
   487                           	opt stack 0
   488  000032                     lcd_putrs@ptr:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x8
   492  000032                     	ds	1
   493  000033                     RtccWriteDate@tempDayMonth:
   494                           	opt stack 0
   495  000033                     RtccWriteTime@tempHourWDay:
   496                           	opt stack 0
   497  000033                     ___lwmod@divisor:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x9
   501  000033                     	ds	1
   502  000034                     
   503                           ; 0 bytes @ 0xA
   504  000034                     	ds	1
   505  000035                     ___lwmod@counter:
   506                           	opt stack 0
   507  000035                     RtccWriteDate@tempHourWDay:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0xB
   511  000035                     	ds	1
   512  000036                     ?_sprintf:
   513                           	opt stack 0
   514  000036                     sprintf@sp:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0xC
   518  000036                     	ds	1
   519  000037                     
   520                           ; 0 bytes @ 0xD
   521  000037                     	ds	1
   522  000038                     sprintf@f:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0xE
   526  000038                     	ds	4
   527  00003C                     ??_sprintf:
   528                           
   529                           ; 0 bytes @ 0x12
   530  00003C                     	ds	4
   531  000040                     sprintf@ap:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x16
   535  000040                     	ds	2
   536  000042                     sprintf@flag:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x18
   540  000042                     	ds	1
   541  000043                     sprintf@val:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x19
   545  000043                     	ds	2
   546  000045                     sprintf@prec:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x1B
   550  000045                     	ds	1
   551  000046                     sprintf@width:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x1C
   555  000046                     	ds	2
   556  000048                     sprintf@c:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x1E
   560  000048                     	ds	1
   561  000049                     ??_main:
   562                           
   563                           ; 0 bytes @ 0x1F
   564  000049                     	ds	1
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           postdec1	equ	0xFE5
   572                           fsr1l	equ	0xFE1
   573                           
   574 ;;
   575 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   576 ;;
   577 ;; *************** function _main *****************
   578 ;; Defined at:
   579 ;;		line 91 in file "main.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  2  148[None  ] int 
   586 ;; Registers used:
   587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   597 ;;Total ram usage:        1 bytes
   598 ;; Hardware stack levels required when called:    6
   599 ;; This function calls:
   600 ;;		_Setup
   601 ;;		_caratula
   602 ;;		_lcd_putrs
   603 ;;		_sprintf
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text0
   610  000F32                     __ptext0:
   611                           	opt stack 0
   612  000F32                     _main:
   613                           	opt stack 25
   614                           
   615                           ;main.c: 93: Setup();
   616                           
   617                           ; BSR set to: 15
   618                           ;incstack = 0
   619  000F32  EC76  F00D         	call	_Setup	;wreg free
   620                           
   621                           ;main.c: 94: caratula();
   622  000F36  ECE9  F00D         	call	_caratula	;wreg free
   623  000F3A  D000               	goto	l2232
   624  000F3C                     l2232:
   625                           
   626                           ;main.c: 96: {
   627                           ;main.c: 100: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
   628  000F3C  8089               	bsf	3977,0,c	;volatile
   629  000F3E  9289               	bcf	3977,1,c	;volatile
   630  000F40  9489               	bcf	3977,2,c	;volatile
   631  000F42  9689               	bcf	3977,3,c	;volatile
   632                           
   633                           ;main.c: 101: {
   634                           ;main.c: 102: if (PORTAbits.RA5==1){key=1;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA5==1){};}
   635  000F44  AA80               	btfss	3968,5,c	;volatile
   636  000F46  D018               	goto	l150
   637  000F48  0E01               	movlw	1
   638  000F4A  6E21               	movwf	_key,c
   639  000F4C  0E70               	movlw	low _buffer2
   640  000F4E  6E36               	movwf	sprintf@sp,c
   641  000F50  0E00               	movlw	high _buffer2
   642  000F52  6E37               	movwf	sprintf@sp+1,c
   643  000F54  0E20               	movlw	low STR_2
   644  000F56  6E38               	movwf	sprintf@f,c
   645  000F58  0E0F               	movlw	high STR_2
   646  000F5A  6E39               	movwf	sprintf@f+1,c
   647  000F5C  C021  F03A         	movff	_key,?_sprintf+4
   648  000F60  6A3B               	clrf	?_sprintf+5,c
   649  000F62  EC0D  F009         	call	_sprintf	;wreg free
   650  000F66  0E70               	movlw	low _buffer2
   651  000F68  6E32               	movwf	lcd_putrs@ptr,c
   652  000F6A  0E00               	movlw	high _buffer2
   653  000F6C  6E33               	movwf	lcd_putrs@ptr+1,c
   654  000F6E  EC00  F00D         	call	_lcd_putrs	;wreg free
   655  000F72  D000               	goto	l151
   656  000F74                     l151:
   657  000F74  BA80               	btfsc	3968,5,c	;volatile
   658  000F76  D7FE               	goto	l151
   659  000F78                     l150:
   660                           
   661                           ;main.c: 103: if (PORTAbits.RA7==1){key=2;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
   662  000F78  AE80               	btfss	3968,7,c	;volatile
   663  000F7A  D018               	goto	l154
   664  000F7C  0E02               	movlw	2
   665  000F7E  6E21               	movwf	_key,c
   666  000F80  0E70               	movlw	low _buffer2
   667  000F82  6E36               	movwf	sprintf@sp,c
   668  000F84  0E00               	movlw	high _buffer2
   669  000F86  6E37               	movwf	sprintf@sp+1,c
   670  000F88  0E20               	movlw	low STR_2
   671  000F8A  6E38               	movwf	sprintf@f,c
   672  000F8C  0E0F               	movlw	high STR_2
   673  000F8E  6E39               	movwf	sprintf@f+1,c
   674  000F90  C021  F03A         	movff	_key,?_sprintf+4
   675  000F94  6A3B               	clrf	?_sprintf+5,c
   676  000F96  EC0D  F009         	call	_sprintf	;wreg free
   677  000F9A  0E70               	movlw	low _buffer2
   678  000F9C  6E32               	movwf	lcd_putrs@ptr,c
   679  000F9E  0E00               	movlw	high _buffer2
   680  000FA0  6E33               	movwf	lcd_putrs@ptr+1,c
   681  000FA2  EC00  F00D         	call	_lcd_putrs	;wreg free
   682  000FA6  D000               	goto	l155
   683  000FA8                     l155:
   684  000FA8  BE80               	btfsc	3968,7,c	;volatile
   685  000FAA  D7FE               	goto	l155
   686  000FAC                     l154:
   687                           
   688                           ;main.c: 104: if (PORTAbits.RA6==1){key=3;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA6==1){};}
   689  000FAC  AC80               	btfss	3968,6,c	;volatile
   690  000FAE  D018               	goto	l158
   691  000FB0  0E03               	movlw	3
   692  000FB2  6E21               	movwf	_key,c
   693  000FB4  0E70               	movlw	low _buffer2
   694  000FB6  6E36               	movwf	sprintf@sp,c
   695  000FB8  0E00               	movlw	high _buffer2
   696  000FBA  6E37               	movwf	sprintf@sp+1,c
   697  000FBC  0E20               	movlw	low STR_2
   698  000FBE  6E38               	movwf	sprintf@f,c
   699  000FC0  0E0F               	movlw	high STR_2
   700  000FC2  6E39               	movwf	sprintf@f+1,c
   701  000FC4  C021  F03A         	movff	_key,?_sprintf+4
   702  000FC8  6A3B               	clrf	?_sprintf+5,c
   703  000FCA  EC0D  F009         	call	_sprintf	;wreg free
   704  000FCE  0E70               	movlw	low _buffer2
   705  000FD0  6E32               	movwf	lcd_putrs@ptr,c
   706  000FD2  0E00               	movlw	high _buffer2
   707  000FD4  6E33               	movwf	lcd_putrs@ptr+1,c
   708  000FD6  EC00  F00D         	call	_lcd_putrs	;wreg free
   709  000FDA  D000               	goto	l159
   710  000FDC                     l159:
   711  000FDC  BC80               	btfsc	3968,6,c	;volatile
   712  000FDE  D7FE               	goto	l159
   713  000FE0                     l158:
   714                           
   715                           ;main.c: 105: if (PORTCbits.RC2==1){key=11;lcd_putrs("A");while(PORTCbits.RC2==1){};}
   716  000FE0  A482               	btfss	3970,2,c	;volatile
   717  000FE2  D00B               	goto	l162
   718  000FE4  0E0B               	movlw	11
   719  000FE6  6E21               	movwf	_key,c
   720  000FE8  0E29               	movlw	low STR_5
   721  000FEA  6E32               	movwf	lcd_putrs@ptr,c
   722  000FEC  0E0F               	movlw	high STR_5
   723  000FEE  6E33               	movwf	lcd_putrs@ptr+1,c
   724  000FF0  EC00  F00D         	call	_lcd_putrs	;wreg free
   725  000FF4  D000               	goto	l163
   726  000FF6                     l163:
   727  000FF6  B482               	btfsc	3970,2,c	;volatile
   728  000FF8  D7FE               	goto	l163
   729  000FFA                     l162:
   730                           
   731                           ;main.c: 106: }
   732                           ;main.c: 107: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
   733  000FFA  9089               	bcf	3977,0,c	;volatile
   734  000FFC  8289               	bsf	3977,1,c	;volatile
   735  000FFE  9489               	bcf	3977,2,c	;volatile
   736  001000  9689               	bcf	3977,3,c	;volatile
   737                           
   738                           ;main.c: 108: {
   739                           ;main.c: 109: if (PORTAbits.RA5==1){key=4;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA5==1){};}
   740  001002  AA80               	btfss	3968,5,c	;volatile
   741  001004  D018               	goto	l166
   742  001006  0E04               	movlw	4
   743  001008  6E21               	movwf	_key,c
   744  00100A  0E70               	movlw	low _buffer2
   745  00100C  6E36               	movwf	sprintf@sp,c
   746  00100E  0E00               	movlw	high _buffer2
   747  001010  6E37               	movwf	sprintf@sp+1,c
   748  001012  0E20               	movlw	low STR_2
   749  001014  6E38               	movwf	sprintf@f,c
   750  001016  0E0F               	movlw	high STR_2
   751  001018  6E39               	movwf	sprintf@f+1,c
   752  00101A  C021  F03A         	movff	_key,?_sprintf+4
   753  00101E  6A3B               	clrf	?_sprintf+5,c
   754  001020  EC0D  F009         	call	_sprintf	;wreg free
   755  001024  0E70               	movlw	low _buffer2
   756  001026  6E32               	movwf	lcd_putrs@ptr,c
   757  001028  0E00               	movlw	high _buffer2
   758  00102A  6E33               	movwf	lcd_putrs@ptr+1,c
   759  00102C  EC00  F00D         	call	_lcd_putrs	;wreg free
   760  001030  D000               	goto	l167
   761  001032                     l167:
   762  001032  BA80               	btfsc	3968,5,c	;volatile
   763  001034  D7FE               	goto	l167
   764  001036                     l166:
   765                           
   766                           ;main.c: 110: if (PORTAbits.RA7==1){key=5;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
   767  001036  AE80               	btfss	3968,7,c	;volatile
   768  001038  D018               	goto	l170
   769  00103A  0E05               	movlw	5
   770  00103C  6E21               	movwf	_key,c
   771  00103E  0E70               	movlw	low _buffer2
   772  001040  6E36               	movwf	sprintf@sp,c
   773  001042  0E00               	movlw	high _buffer2
   774  001044  6E37               	movwf	sprintf@sp+1,c
   775  001046  0E20               	movlw	low STR_2
   776  001048  6E38               	movwf	sprintf@f,c
   777  00104A  0E0F               	movlw	high STR_2
   778  00104C  6E39               	movwf	sprintf@f+1,c
   779  00104E  C021  F03A         	movff	_key,?_sprintf+4
   780  001052  6A3B               	clrf	?_sprintf+5,c
   781  001054  EC0D  F009         	call	_sprintf	;wreg free
   782  001058  0E70               	movlw	low _buffer2
   783  00105A  6E32               	movwf	lcd_putrs@ptr,c
   784  00105C  0E00               	movlw	high _buffer2
   785  00105E  6E33               	movwf	lcd_putrs@ptr+1,c
   786  001060  EC00  F00D         	call	_lcd_putrs	;wreg free
   787  001064  D000               	goto	l171
   788  001066                     l171:
   789  001066  BE80               	btfsc	3968,7,c	;volatile
   790  001068  D7FE               	goto	l171
   791  00106A                     l170:
   792                           
   793                           ;main.c: 111: if (PORTAbits.RA6==1){key=6;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA6==1){};}
   794  00106A  AC80               	btfss	3968,6,c	;volatile
   795  00106C  D018               	goto	l174
   796  00106E  0E06               	movlw	6
   797  001070  6E21               	movwf	_key,c
   798  001072  0E70               	movlw	low _buffer2
   799  001074  6E36               	movwf	sprintf@sp,c
   800  001076  0E00               	movlw	high _buffer2
   801  001078  6E37               	movwf	sprintf@sp+1,c
   802  00107A  0E20               	movlw	low STR_2
   803  00107C  6E38               	movwf	sprintf@f,c
   804  00107E  0E0F               	movlw	high STR_2
   805  001080  6E39               	movwf	sprintf@f+1,c
   806  001082  C021  F03A         	movff	_key,?_sprintf+4
   807  001086  6A3B               	clrf	?_sprintf+5,c
   808  001088  EC0D  F009         	call	_sprintf	;wreg free
   809  00108C  0E70               	movlw	low _buffer2
   810  00108E  6E32               	movwf	lcd_putrs@ptr,c
   811  001090  0E00               	movlw	high _buffer2
   812  001092  6E33               	movwf	lcd_putrs@ptr+1,c
   813  001094  EC00  F00D         	call	_lcd_putrs	;wreg free
   814  001098  D000               	goto	l175
   815  00109A                     l175:
   816  00109A  BC80               	btfsc	3968,6,c	;volatile
   817  00109C  D7FE               	goto	l175
   818  00109E                     l174:
   819                           
   820                           ;main.c: 112: if (PORTCbits.RC2==1){key=12;lcd_putrs("B");while(PORTCbits.RC2==1){};}
   821  00109E  A482               	btfss	3970,2,c	;volatile
   822  0010A0  D00B               	goto	l178
   823  0010A2  0E0C               	movlw	12
   824  0010A4  6E21               	movwf	_key,c
   825  0010A6  0E2B               	movlw	low STR_9
   826  0010A8  6E32               	movwf	lcd_putrs@ptr,c
   827  0010AA  0E0F               	movlw	high STR_9
   828  0010AC  6E33               	movwf	lcd_putrs@ptr+1,c
   829  0010AE  EC00  F00D         	call	_lcd_putrs	;wreg free
   830  0010B2  D000               	goto	l179
   831  0010B4                     l179:
   832  0010B4  B482               	btfsc	3970,2,c	;volatile
   833  0010B6  D7FE               	goto	l179
   834  0010B8                     l178:
   835                           
   836                           ;main.c: 113: }
   837                           ;main.c: 114: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
   838  0010B8  9089               	bcf	3977,0,c	;volatile
   839  0010BA  9289               	bcf	3977,1,c	;volatile
   840  0010BC  8489               	bsf	3977,2,c	;volatile
   841  0010BE  9689               	bcf	3977,3,c	;volatile
   842                           
   843                           ;main.c: 115: {
   844                           ;main.c: 116: if (PORTAbits.RA5==1){key=7;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA5==1){};}
   845  0010C0  AA80               	btfss	3968,5,c	;volatile
   846  0010C2  D018               	goto	l182
   847  0010C4  0E07               	movlw	7
   848  0010C6  6E21               	movwf	_key,c
   849  0010C8  0E70               	movlw	low _buffer2
   850  0010CA  6E36               	movwf	sprintf@sp,c
   851  0010CC  0E00               	movlw	high _buffer2
   852  0010CE  6E37               	movwf	sprintf@sp+1,c
   853  0010D0  0E20               	movlw	low STR_2
   854  0010D2  6E38               	movwf	sprintf@f,c
   855  0010D4  0E0F               	movlw	high STR_2
   856  0010D6  6E39               	movwf	sprintf@f+1,c
   857  0010D8  C021  F03A         	movff	_key,?_sprintf+4
   858  0010DC  6A3B               	clrf	?_sprintf+5,c
   859  0010DE  EC0D  F009         	call	_sprintf	;wreg free
   860  0010E2  0E70               	movlw	low _buffer2
   861  0010E4  6E32               	movwf	lcd_putrs@ptr,c
   862  0010E6  0E00               	movlw	high _buffer2
   863  0010E8  6E33               	movwf	lcd_putrs@ptr+1,c
   864  0010EA  EC00  F00D         	call	_lcd_putrs	;wreg free
   865  0010EE  D000               	goto	l183
   866  0010F0                     l183:
   867  0010F0  BA80               	btfsc	3968,5,c	;volatile
   868  0010F2  D7FE               	goto	l183
   869  0010F4                     l182:
   870                           
   871                           ;main.c: 117: if (PORTAbits.RA7==1){key=8;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
   872  0010F4  AE80               	btfss	3968,7,c	;volatile
   873  0010F6  D018               	goto	l186
   874  0010F8  0E08               	movlw	8
   875  0010FA  6E21               	movwf	_key,c
   876  0010FC  0E70               	movlw	low _buffer2
   877  0010FE  6E36               	movwf	sprintf@sp,c
   878  001100  0E00               	movlw	high _buffer2
   879  001102  6E37               	movwf	sprintf@sp+1,c
   880  001104  0E20               	movlw	low STR_2
   881  001106  6E38               	movwf	sprintf@f,c
   882  001108  0E0F               	movlw	high STR_2
   883  00110A  6E39               	movwf	sprintf@f+1,c
   884  00110C  C021  F03A         	movff	_key,?_sprintf+4
   885  001110  6A3B               	clrf	?_sprintf+5,c
   886  001112  EC0D  F009         	call	_sprintf	;wreg free
   887  001116  0E70               	movlw	low _buffer2
   888  001118  6E32               	movwf	lcd_putrs@ptr,c
   889  00111A  0E00               	movlw	high _buffer2
   890  00111C  6E33               	movwf	lcd_putrs@ptr+1,c
   891  00111E  EC00  F00D         	call	_lcd_putrs	;wreg free
   892  001122  D000               	goto	l187
   893  001124                     l187:
   894  001124  BE80               	btfsc	3968,7,c	;volatile
   895  001126  D7FE               	goto	l187
   896  001128                     l186:
   897                           
   898                           ;main.c: 118: if (PORTAbits.RA6==1){key=9;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA6==1){};}
   899  001128  AC80               	btfss	3968,6,c	;volatile
   900  00112A  D018               	goto	l190
   901  00112C  0E09               	movlw	9
   902  00112E  6E21               	movwf	_key,c
   903  001130  0E70               	movlw	low _buffer2
   904  001132  6E36               	movwf	sprintf@sp,c
   905  001134  0E00               	movlw	high _buffer2
   906  001136  6E37               	movwf	sprintf@sp+1,c
   907  001138  0E20               	movlw	low STR_2
   908  00113A  6E38               	movwf	sprintf@f,c
   909  00113C  0E0F               	movlw	high STR_2
   910  00113E  6E39               	movwf	sprintf@f+1,c
   911  001140  C021  F03A         	movff	_key,?_sprintf+4
   912  001144  6A3B               	clrf	?_sprintf+5,c
   913  001146  EC0D  F009         	call	_sprintf	;wreg free
   914  00114A  0E70               	movlw	low _buffer2
   915  00114C  6E32               	movwf	lcd_putrs@ptr,c
   916  00114E  0E00               	movlw	high _buffer2
   917  001150  6E33               	movwf	lcd_putrs@ptr+1,c
   918  001152  EC00  F00D         	call	_lcd_putrs	;wreg free
   919  001156  D000               	goto	l191
   920  001158                     l191:
   921  001158  BC80               	btfsc	3968,6,c	;volatile
   922  00115A  D7FE               	goto	l191
   923  00115C                     l190:
   924                           
   925                           ;main.c: 119: if (PORTCbits.RC2==1){key=13;lcd_putrs("C");while(PORTCbits.RC2==1){};}
   926  00115C  A482               	btfss	3970,2,c	;volatile
   927  00115E  D00B               	goto	l194
   928  001160  0E0D               	movlw	13
   929  001162  6E21               	movwf	_key,c
   930  001164  0E2D               	movlw	low STR_13
   931  001166  6E32               	movwf	lcd_putrs@ptr,c
   932  001168  0E0F               	movlw	high STR_13
   933  00116A  6E33               	movwf	lcd_putrs@ptr+1,c
   934  00116C  EC00  F00D         	call	_lcd_putrs	;wreg free
   935  001170  D000               	goto	l195
   936  001172                     l195:
   937  001172  B482               	btfsc	3970,2,c	;volatile
   938  001174  D7FE               	goto	l195
   939  001176                     l194:
   940                           
   941                           ;main.c: 120: }
   942                           ;main.c: 121: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
   943  001176  9089               	bcf	3977,0,c	;volatile
   944  001178  9289               	bcf	3977,1,c	;volatile
   945  00117A  9489               	bcf	3977,2,c	;volatile
   946  00117C  8689               	bsf	3977,3,c	;volatile
   947                           
   948                           ;main.c: 122: {
   949                           ;main.c: 123: if (PORTAbits.RA5==1){key=14;lcd_putrs("*");while(PORTAbits.RA5==1){};}
   950  00117E  AA80               	btfss	3968,5,c	;volatile
   951  001180  D00B               	goto	l198
   952  001182  0E0E               	movlw	14
   953  001184  6E21               	movwf	_key,c
   954  001186  0E27               	movlw	low STR_14
   955  001188  6E32               	movwf	lcd_putrs@ptr,c
   956  00118A  0E0F               	movlw	high STR_14
   957  00118C  6E33               	movwf	lcd_putrs@ptr+1,c
   958  00118E  EC00  F00D         	call	_lcd_putrs	;wreg free
   959  001192  D000               	goto	l199
   960  001194                     l199:
   961  001194  BA80               	btfsc	3968,5,c	;volatile
   962  001196  D7FE               	goto	l199
   963  001198                     l198:
   964                           
   965                           ;main.c: 124: if (PORTAbits.RA7==1){key=0;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
   966  001198  AE80               	btfss	3968,7,c	;volatile
   967  00119A  D018               	goto	l202
   968  00119C  0E00               	movlw	0
   969  00119E  6E21               	movwf	_key,c
   970  0011A0  0E70               	movlw	low _buffer2
   971  0011A2  6E36               	movwf	sprintf@sp,c
   972  0011A4  0E00               	movlw	high _buffer2
   973  0011A6  6E37               	movwf	sprintf@sp+1,c
   974  0011A8  0E20               	movlw	low STR_2
   975  0011AA  6E38               	movwf	sprintf@f,c
   976  0011AC  0E0F               	movlw	high STR_2
   977  0011AE  6E39               	movwf	sprintf@f+1,c
   978  0011B0  C021  F03A         	movff	_key,?_sprintf+4
   979  0011B4  6A3B               	clrf	?_sprintf+5,c
   980  0011B6  EC0D  F009         	call	_sprintf	;wreg free
   981  0011BA  0E70               	movlw	low _buffer2
   982  0011BC  6E32               	movwf	lcd_putrs@ptr,c
   983  0011BE  0E00               	movlw	high _buffer2
   984  0011C0  6E33               	movwf	lcd_putrs@ptr+1,c
   985  0011C2  EC00  F00D         	call	_lcd_putrs	;wreg free
   986  0011C6  D000               	goto	l203
   987  0011C8                     l203:
   988  0011C8  BE80               	btfsc	3968,7,c	;volatile
   989  0011CA  D7FE               	goto	l203
   990  0011CC                     l202:
   991                           
   992                           ;main.c: 125: if (PORTAbits.RA6==1){key=15;lcd_putrs("#");while(PORTAbits.RA6==1){};}
   993  0011CC  AC80               	btfss	3968,6,c	;volatile
   994  0011CE  D00B               	goto	l206
   995  0011D0  0E0F               	movlw	15
   996  0011D2  6E21               	movwf	_key,c
   997  0011D4  0E25               	movlw	low STR_16
   998  0011D6  6E32               	movwf	lcd_putrs@ptr,c
   999  0011D8  0E0F               	movlw	high STR_16
  1000  0011DA  6E33               	movwf	lcd_putrs@ptr+1,c
  1001  0011DC  EC00  F00D         	call	_lcd_putrs	;wreg free
  1002  0011E0  D000               	goto	l207
  1003  0011E2                     l207:
  1004  0011E2  BC80               	btfsc	3968,6,c	;volatile
  1005  0011E4  D7FE               	goto	l207
  1006  0011E6                     l206:
  1007                           
  1008                           ;main.c: 126: if (PORTCbits.RC2==1){key=16;lcd_putrs("D");while(PORTCbits.RC2==1){};}
  1009  0011E6  A482               	btfss	3970,2,c	;volatile
  1010  0011E8  D00D               	goto	l2326
  1011  0011EA  0E10               	movlw	16
  1012  0011EC  6E21               	movwf	_key,c
  1013  0011EE  0E2F               	movlw	low STR_17
  1014  0011F0  6E32               	movwf	lcd_putrs@ptr,c
  1015  0011F2  0E0F               	movlw	high STR_17
  1016  0011F4  6E33               	movwf	lcd_putrs@ptr+1,c
  1017  0011F6  EC00  F00D         	call	_lcd_putrs	;wreg free
  1018  0011FA  D000               	goto	l211
  1019  0011FC                     l211:
  1020  0011FC  A482               	btfss	3970,2,c	;volatile
  1021  0011FE  D002               	goto	l2326
  1022  001200  D7FD               	goto	l211
  1023  001202  D000               	goto	l2326
  1024  001204                     l2326:
  1025                           
  1026                           ;main.c: 127: }
  1027                           ;main.c: 128: _delay((unsigned long)((98)*(8000000/4000.0)));
  1028  001204  0EFF               	movlw	255
  1029  001206  6E49               	movwf	??_main& (0+255),c
  1030  001208  0E8A               	movlw	138
  1031  00120A                     u2057:
  1032  00120A  2EE8               	decfsz	wreg,f,c
  1033  00120C  D7FE               	goto	u2057
  1034  00120E  2E49               	decfsz	??_main& (0+255),f,c
  1035  001210  D7FC               	goto	u2057
  1036  001212  D000               	nop2	
  1037  001214  D693               	goto	l2232
  1038                           
  1039                           ;main.c: 130: }
  1040                           ;main.c: 131: return 0;
  1041                           ;	Return value of _main is never used
  1042  001216  EF00  F000         	goto	start
  1043  00121A                     __end_of_main:
  1044                           	opt stack 0
  1045                           tblptru	equ	0xFF8
  1046                           tblptrh	equ	0xFF7
  1047                           tblptrl	equ	0xFF6
  1048                           tablat	equ	0xFF5
  1049                           postinc0	equ	0xFEE
  1050                           wreg	equ	0xFE8
  1051                           postdec1	equ	0xFE5
  1052                           fsr1l	equ	0xFE1
  1053                           
  1054 ;; *************** function _sprintf *****************
  1055 ;; Defined at:
  1056 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1059 ;;		 -> buffer2(20), 
  1060 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1061 ;;		 -> STR_15(5), STR_12(5), STR_11(5), STR_10(5), 
  1062 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_4(5), 
  1063 ;;		 -> STR_3(5), STR_2(5), 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  tmpval          4    0        struct .
  1066 ;;  cp              3    0        PTR const unsigned char 
  1067 ;;  width           2   28[COMRAM] int 
  1068 ;;  val             2   25[COMRAM] unsigned int 
  1069 ;;  ap              2   22[COMRAM] PTR void [1]
  1070 ;;		 -> ?_sprintf(2), 
  1071 ;;  len             2    0        unsigned int 
  1072 ;;  c               1   30[COMRAM] char 
  1073 ;;  prec            1   27[COMRAM] char 
  1074 ;;  flag            1   24[COMRAM] unsigned char 
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  2   12[COMRAM] int 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1084 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1085 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1087 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1088 ;;Total ram usage:       19 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    1
  1091 ;; This function calls:
  1092 ;;		___lwdiv
  1093 ;;		___lwmod
  1094 ;;		___wmul
  1095 ;;		_isdigit
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text1
  1102  00121A                     __ptext1:
  1103                           	opt stack 0
  1104  00121A                     _sprintf:
  1105                           	opt stack 29
  1106                           
  1107                           ;doprnt.c: 494: va_list ap;
  1108                           ;doprnt.c: 499: signed char c;
  1109                           ;doprnt.c: 501: int width;
  1110                           ;doprnt.c: 506: signed char prec;
  1111                           ;doprnt.c: 508: unsigned char flag;
  1112                           ;doprnt.c: 523: union {
  1113                           ;doprnt.c: 524: unsigned long vd;
  1114                           ;doprnt.c: 525: double integ;
  1115                           ;doprnt.c: 526: } tmpval;
  1116                           ;doprnt.c: 528: unsigned int val;
  1117                           ;doprnt.c: 529: unsigned len;
  1118                           ;doprnt.c: 530: const char * cp;
  1119                           ;doprnt.c: 533: *ap = __va_start();
  1120                           
  1121                           ;incstack = 0
  1122  00121A  0E3A               	movlw	low (?_sprintf+4)
  1123  00121C  6E40               	movwf	sprintf@ap,c
  1124  00121E  0E00               	movlw	high (?_sprintf+4)
  1125  001220  6E41               	movwf	sprintf@ap+1,c
  1126                           
  1127                           ;doprnt.c: 536: while(c = *f++) {
  1128  001222  D117               	goto	l2220
  1129  001224                     l2138:
  1130                           
  1131                           ;doprnt.c: 538: if(c != '%')
  1132  001224  0E25               	movlw	37
  1133  001226  1848               	xorwf	sprintf@c,w,c
  1134  001228  B4D8               	btfsc	status,2,c
  1135  00122A  D009               	goto	l2144
  1136                           
  1137                           ;doprnt.c: 540: {
  1138                           ;doprnt.c: 541: ((*sp++ = (c)));
  1139  00122C  C036  FFD9         	movff	sprintf@sp,fsr2l
  1140  001230  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1141  001234  C048  FFDF         	movff	sprintf@c,indf2
  1142  001238  4A36               	infsnz	sprintf@sp,f,c
  1143  00123A  2A37               	incf	sprintf@sp+1,f,c
  1144                           
  1145                           ;doprnt.c: 542: continue;
  1146  00123C  D10A               	goto	l2220
  1147  00123E                     l2144:
  1148                           
  1149                           ;doprnt.c: 543: }
  1150                           ;doprnt.c: 546: width = 0;
  1151  00123E  0E00               	movlw	0
  1152  001240  6E47               	movwf	sprintf@width+1,c
  1153  001242  0E00               	movlw	0
  1154  001244  6E46               	movwf	sprintf@width,c
  1155                           
  1156                           ;doprnt.c: 548: flag = 0;
  1157  001246  0E00               	movlw	0
  1158  001248  6E42               	movwf	sprintf@flag,c
  1159                           
  1160                           ;doprnt.c: 551: switch(*f) {
  1161                           
  1162                           ;doprnt.c: 550: for(;;) {
  1163  00124A  D005               	goto	l2150
  1164  00124C                     l2146:
  1165                           
  1166                           ;doprnt.c: 580: flag |= 0x04;
  1167  00124C  8442               	bsf	sprintf@flag,2,c
  1168                           
  1169                           ;doprnt.c: 581: f++;
  1170  00124E  4A38               	infsnz	sprintf@f,f,c
  1171  001250  2A39               	incf	sprintf@f+1,f,c
  1172                           
  1173                           ;doprnt.c: 582: continue;
  1174  001252  D001               	goto	l2150
  1175                           
  1176                           ;doprnt.c: 584: }
  1177  001254  D00B               	goto	l2152
  1178  001256                     l2150:
  1179  001256  C038  FFF6         	movff	sprintf@f,tblptrl
  1180  00125A  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1181  00125E                     	if	0	;tblptru may be non-zero
  1182  00125E                     	endif
  1183  00125E                     	if	0	;tblptru may be non-zero
  1184  00125E                     	endif
  1185  00125E  0008               	tblrd		*
  1186  001260  50F5               	movf	tablat,w,c
  1187                           
  1188                           ; Switch size 1, requested type "space"
  1189                           ; Number of cases is 1, Range of values is 48 to 48
  1190                           ; switch strategies available:
  1191                           ; Name         Instructions Cycles
  1192                           ; simple_byte            4     3 (average)
  1193                           ;	Chosen strategy is simple_byte
  1194  001262  0A30               	xorlw	48	; case 48
  1195  001264  B4D8               	btfsc	status,2,c
  1196  001266  D7F2               	goto	l2146
  1197                           
  1198                           ;doprnt.c: 585: break;
  1199  001268  D001               	goto	l2152
  1200                           
  1201                           ;doprnt.c: 586: }
  1202  00126A  D7F5               	goto	l2150
  1203  00126C                     l2152:
  1204                           
  1205                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1206  00126C  C038  FFF6         	movff	sprintf@f,tblptrl
  1207  001270  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1208  001274                     	if	0	;tblptru may be non-zero
  1209  001274                     	endif
  1210  001274                     	if	0	;tblptru may be non-zero
  1211  001274                     	endif
  1212  001274  0008               	tblrd		*
  1213  001276  50F5               	movf	tablat,w,c
  1214  001278  EC0F  F00E         	call	_isdigit
  1215  00127C  A0D8               	btfss	status,0,c
  1216  00127E  D03A               	goto	l2168
  1217                           
  1218                           ;doprnt.c: 598: width = 0;
  1219  001280  0E00               	movlw	0
  1220  001282  6E47               	movwf	sprintf@width+1,c
  1221  001284  0E00               	movlw	0
  1222  001286  6E46               	movwf	sprintf@width,c
  1223  001288  D000               	goto	l2156
  1224  00128A                     l2156:
  1225                           
  1226                           ;doprnt.c: 600: width *= 10;
  1227  00128A  C046  F02A         	movff	sprintf@width,___wmul@multiplier
  1228  00128E  C047  F02B         	movff	sprintf@width+1,___wmul@multiplier+1
  1229  001292  0E00               	movlw	0
  1230  001294  6E2D               	movwf	___wmul@multiplicand+1,c
  1231  001296  0E0A               	movlw	10
  1232  001298  6E2C               	movwf	___wmul@multiplicand,c
  1233  00129A  ECD5  F00D         	call	___wmul	;wreg free
  1234  00129E  C02A  F046         	movff	?___wmul,sprintf@width
  1235  0012A2  C02B  F047         	movff	?___wmul+1,sprintf@width+1
  1236                           
  1237                           ;doprnt.c: 601: width += *f++ - '0';
  1238  0012A6  0ED0               	movlw	208
  1239  0012A8  6E3C               	movwf	??_sprintf& (0+255),c
  1240  0012AA  0EFF               	movlw	255
  1241  0012AC  6E3D               	movwf	(??_sprintf+1)& (0+255),c
  1242  0012AE  C038  FFF6         	movff	sprintf@f,tblptrl
  1243  0012B2  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1244  0012B6                     	if	0	;tblptru may be non-zero
  1245  0012B6                     	endif
  1246  0012B6                     	if	0	;tblptru may be non-zero
  1247  0012B6                     	endif
  1248  0012B6  0008               	tblrd		*
  1249  0012B8  50F5               	movf	tablat,w,c
  1250  0012BA  6E3E               	movwf	(??_sprintf+2)& (0+255),c
  1251  0012BC  6A3F               	clrf	(??_sprintf+3)& (0+255),c
  1252  0012BE  503C               	movf	??_sprintf,w,c
  1253  0012C0  263E               	addwf	??_sprintf+2,f,c
  1254  0012C2  503D               	movf	??_sprintf+1,w,c
  1255  0012C4  223F               	addwfc	??_sprintf+3,f,c
  1256  0012C6  503E               	movf	??_sprintf+2,w,c
  1257  0012C8  2646               	addwf	sprintf@width,f,c
  1258  0012CA  503F               	movf	??_sprintf+3,w,c
  1259  0012CC  2247               	addwfc	sprintf@width+1,f,c
  1260  0012CE  4A38               	infsnz	sprintf@f,f,c
  1261  0012D0  2A39               	incf	sprintf@f+1,f,c
  1262                           
  1263                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1264  0012D2  C038  FFF6         	movff	sprintf@f,tblptrl
  1265  0012D6  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1266  0012DA                     	if	0	;tblptru may be non-zero
  1267  0012DA                     	endif
  1268  0012DA                     	if	0	;tblptru may be non-zero
  1269  0012DA                     	endif
  1270  0012DA  0008               	tblrd		*
  1271  0012DC  50F5               	movf	tablat,w,c
  1272  0012DE  EC0F  F00E         	call	_isdigit
  1273  0012E2  A0D8               	btfss	status,0,c
  1274  0012E4  D007               	goto	l2168
  1275  0012E6  D7D1               	goto	l2156
  1276                           
  1277                           ;doprnt.c: 608: }
  1278                           ;doprnt.c: 635: switch(c = *f++) {
  1279  0012E8  D005               	goto	l2168
  1280                           
  1281                           ;doprnt.c: 638: goto alldone;
  1282                           
  1283                           ;doprnt.c: 637: case 0:
  1284  0012EA  D0C1               	goto	l2222
  1285                           
  1286                           ;doprnt.c: 813: continue;
  1287                           
  1288                           ;doprnt.c: 802: default:
  1289  0012EC  D0B2               	goto	l2220
  1290  0012EE                     l2164:
  1291                           
  1292                           ;doprnt.c: 818: flag |= 0xC0;
  1293  0012EE  0EC0               	movlw	192
  1294  0012F0  1242               	iorwf	sprintf@flag,f,c
  1295                           
  1296                           ;doprnt.c: 822: }
  1297                           
  1298                           ;doprnt.c: 819: break;
  1299  0012F2  D011               	goto	l2170
  1300  0012F4                     l2168:
  1301  0012F4  C038  FFF6         	movff	sprintf@f,tblptrl
  1302  0012F8  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1303  0012FC  4A38               	infsnz	sprintf@f,f,c
  1304  0012FE  2A39               	incf	sprintf@f+1,f,c
  1305  001300                     	if	0	;tblptru may be non-zero
  1306  001300                     	endif
  1307  001300                     	if	0	;tblptru may be non-zero
  1308  001300                     	endif
  1309  001300  0008               	tblrd		*
  1310  001302  CFF5 F048          	movff	tablat,sprintf@c
  1311  001306  5048               	movf	sprintf@c,w,c
  1312                           
  1313                           ; Switch size 1, requested type "space"
  1314                           ; Number of cases is 2, Range of values is 0 to 117
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte            7     4 (average)
  1318                           ;	Chosen strategy is simple_byte
  1319  001308  0A00               	xorlw	0	; case 0
  1320  00130A  B4D8               	btfsc	status,2,c
  1321  00130C  D0B0               	goto	l2222
  1322  00130E  0A75               	xorlw	117	; case 117
  1323  001310  B4D8               	btfsc	status,2,c
  1324  001312  D7ED               	goto	l2164
  1325  001314  D09E               	goto	l2220
  1326  001316                     l2170:
  1327                           
  1328                           ;doprnt.c: 1273: {
  1329                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1330  001316  C040  FFD9         	movff	sprintf@ap,fsr2l
  1331  00131A  C041  FFDA         	movff	sprintf@ap+1,fsr2h
  1332  00131E  CFDE F043          	movff	postinc2,sprintf@val
  1333  001322  CFDD F044          	movff	postdec2,sprintf@val+1
  1334  001326  0E02               	movlw	2
  1335  001328  2640               	addwf	sprintf@ap,f,c
  1336  00132A  0E00               	movlw	0
  1337  00132C  2241               	addwfc	sprintf@ap+1,f,c
  1338                           
  1339                           ;doprnt.c: 1287: }
  1340                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1341  00132E  0E01               	movlw	1
  1342  001330  6E48               	movwf	sprintf@c,c
  1343  001332                     l2176:
  1344  001332  0E05               	movlw	5
  1345  001334  1848               	xorwf	sprintf@c,w,c
  1346  001336  B4D8               	btfsc	status,2,c
  1347  001338  D016               	goto	l2188
  1348  00133A  D001               	goto	l2180
  1349  00133C  D014               	goto	l2188
  1350  00133E                     l2180:
  1351                           
  1352                           ;doprnt.c: 1306: if(val < dpowers[c])
  1353  00133E  5048               	movf	sprintf@c,w,c
  1354  001340  0D02               	mullw	2
  1355  001342  0E01               	movlw	low _dpowers
  1356  001344  24F3               	addwf	prodl,w,c
  1357  001346  6EF6               	movwf	tblptrl,c
  1358  001348  0E0F               	movlw	high _dpowers
  1359  00134A  20F4               	addwfc	prodh,w,c
  1360  00134C  6EF7               	movwf	tblptrh,c
  1361  00134E                     	if	0	;There are less than 3 active tblptr bytes
  1362  00134E                     	endif
  1363  00134E  0009               	tblrd		*+
  1364  001350  50F5               	movf	tablat,w,c
  1365  001352  5C43               	subwf	sprintf@val,w,c
  1366  001354  0009               	tblrd		*+
  1367  001356  50F5               	movf	tablat,w,c
  1368  001358  5844               	subwfb	sprintf@val+1,w,c
  1369  00135A  A0D8               	btfss	status,0,c
  1370  00135C  D004               	goto	l2188
  1371  00135E  D001               	goto	l2184
  1372                           
  1373                           ;doprnt.c: 1307: break;
  1374  001360  D002               	goto	l2188
  1375  001362                     l2184:
  1376  001362  2A48               	incf	sprintf@c,f,c
  1377  001364  D7E6               	goto	l2176
  1378  001366                     l2188:
  1379                           
  1380                           ;doprnt.c: 1381: if(width > c)
  1381  001366  0E80               	movlw	128
  1382  001368  BE48               	btfsc	sprintf@c,7,c
  1383  00136A  0E7F               	movlw	127
  1384  00136C  6E3C               	movwf	??_sprintf& (0+255),c
  1385  00136E  5046               	movf	sprintf@width,w,c
  1386  001370  5C48               	subwf	sprintf@c,w,c
  1387  001372  5047               	movf	sprintf@width+1,w,c
  1388  001374  0A80               	xorlw	128
  1389  001376  583C               	subwfb	??_sprintf& (0+255),w,c
  1390  001378  B0D8               	btfsc	status,0,c
  1391  00137A  D007               	goto	l2192
  1392                           
  1393                           ;doprnt.c: 1382: width -= c;
  1394  00137C  5048               	movf	sprintf@c,w,c
  1395  00137E  5E46               	subwf	sprintf@width,f,c
  1396  001380  0E00               	movlw	0
  1397  001382  BE48               	btfsc	sprintf@c,7,c
  1398  001384  0EFF               	movlw	255
  1399  001386  5A47               	subwfb	sprintf@width+1,f,c
  1400  001388  D005               	goto	l2194
  1401  00138A                     l2192:
  1402                           
  1403                           ;doprnt.c: 1383: else
  1404                           ;doprnt.c: 1384: width = 0;
  1405  00138A  0E00               	movlw	0
  1406  00138C  6E47               	movwf	sprintf@width+1,c
  1407  00138E  0E00               	movlw	0
  1408  001390  6E46               	movwf	sprintf@width,c
  1409  001392  D000               	goto	l2194
  1410  001394                     l2194:
  1411                           
  1412                           ;doprnt.c: 1387: if(flag & 0x04) {
  1413  001394  A442               	btfss	sprintf@flag,2,c
  1414  001396  D015               	goto	l2204
  1415                           
  1416                           ;doprnt.c: 1415: if(width)
  1417  001398  5046               	movf	sprintf@width,w,c
  1418  00139A  1047               	iorwf	sprintf@width+1,w,c
  1419  00139C  B4D8               	btfsc	status,2,c
  1420  00139E  D026               	goto	l313
  1421  0013A0                     l2198:
  1422                           
  1423                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1424  0013A0  C036  FFD9         	movff	sprintf@sp,fsr2l
  1425  0013A4  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1426  0013A8  0E30               	movlw	48
  1427  0013AA  6EDF               	movwf	indf2,c
  1428  0013AC  4A36               	infsnz	sprintf@sp,f,c
  1429  0013AE  2A37               	incf	sprintf@sp+1,f,c
  1430                           
  1431                           ;doprnt.c: 1418: while(--width);
  1432  0013B0  0646               	decf	sprintf@width,f,c
  1433  0013B2  A0D8               	btfss	status,0,c
  1434  0013B4  0647               	decf	sprintf@width+1,f,c
  1435  0013B6  5046               	movf	sprintf@width,w,c
  1436  0013B8  1047               	iorwf	sprintf@width+1,w,c
  1437  0013BA  B4D8               	btfsc	status,2,c
  1438  0013BC  D017               	goto	l313
  1439  0013BE  D7F0               	goto	l2198
  1440                           
  1441                           ;doprnt.c: 1420: } else
  1442  0013C0  D015               	goto	l313
  1443  0013C2                     l2204:
  1444                           
  1445                           ;doprnt.c: 1422: {
  1446                           ;doprnt.c: 1424: if(width
  1447                           ;doprnt.c: 1428: )
  1448  0013C2  5046               	movf	sprintf@width,w,c
  1449  0013C4  1047               	iorwf	sprintf@width+1,w,c
  1450  0013C6  B4D8               	btfsc	status,2,c
  1451  0013C8  D011               	goto	l313
  1452  0013CA                     l2206:
  1453                           
  1454                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1455  0013CA  C036  FFD9         	movff	sprintf@sp,fsr2l
  1456  0013CE  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1457  0013D2  0E20               	movlw	32
  1458  0013D4  6EDF               	movwf	indf2,c
  1459  0013D6  4A36               	infsnz	sprintf@sp,f,c
  1460  0013D8  2A37               	incf	sprintf@sp+1,f,c
  1461                           
  1462                           ;doprnt.c: 1431: while(--width);
  1463  0013DA  0646               	decf	sprintf@width,f,c
  1464  0013DC  A0D8               	btfss	status,0,c
  1465  0013DE  0647               	decf	sprintf@width+1,f,c
  1466  0013E0  5046               	movf	sprintf@width,w,c
  1467  0013E2  1047               	iorwf	sprintf@width+1,w,c
  1468  0013E4  B4D8               	btfsc	status,2,c
  1469  0013E6  D002               	goto	l313
  1470  0013E8  D7F0               	goto	l2206
  1471  0013EA  D000               	goto	l313
  1472  0013EC                     l313:
  1473                           
  1474                           ;doprnt.c: 1469: }
  1475                           ;doprnt.c: 1472: prec = c;
  1476  0013EC  C048  F045         	movff	sprintf@c,sprintf@prec
  1477                           
  1478                           ;doprnt.c: 1474: while(prec--) {
  1479  0013F0  D02A               	goto	l2218
  1480  0013F2                     l2212:
  1481                           
  1482                           ;doprnt.c: 1478: {
  1483                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1484  0013F2  5045               	movf	sprintf@prec,w,c
  1485  0013F4  0D02               	mullw	2
  1486  0013F6  0E01               	movlw	low _dpowers
  1487  0013F8  24F3               	addwf	prodl,w,c
  1488  0013FA  6EF6               	movwf	tblptrl,c
  1489  0013FC  0E0F               	movlw	high _dpowers
  1490  0013FE  20F4               	addwfc	prodh,w,c
  1491  001400  6EF7               	movwf	tblptrh,c
  1492  001402                     	if	0	;There are less than 3 active tblptr bytes
  1493  001402                     	endif
  1494  001402  0009               	tblrd		*+
  1495  001404  CFF5 F02C          	movff	tablat,___lwdiv@divisor
  1496  001408  000A               	tblrd		*-
  1497  00140A  CFF5 F02D          	movff	tablat,___lwdiv@divisor+1
  1498  00140E  C043  F02A         	movff	sprintf@val,___lwdiv@dividend
  1499  001412  C044  F02B         	movff	sprintf@val+1,___lwdiv@dividend+1
  1500  001416  ECD2  F00C         	call	___lwdiv	;wreg free
  1501  00141A  C02A  F031         	movff	?___lwdiv,___lwmod@dividend
  1502  00141E  C02B  F032         	movff	?___lwdiv+1,___lwmod@dividend+1
  1503  001422  0E00               	movlw	0
  1504  001424  6E34               	movwf	___lwmod@divisor+1,c
  1505  001426  0E0A               	movlw	10
  1506  001428  6E33               	movwf	___lwmod@divisor,c
  1507  00142A  EC2A  F00D         	call	___lwmod	;wreg free
  1508  00142E  5031               	movf	?___lwmod,w,c
  1509  001430  0F30               	addlw	48
  1510  001432  6E48               	movwf	sprintf@c,c
  1511                           
  1512                           ;doprnt.c: 1523: }
  1513                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1514  001434  C036  FFD9         	movff	sprintf@sp,fsr2l
  1515  001438  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1516  00143C  C048  FFDF         	movff	sprintf@c,indf2
  1517  001440  4A36               	infsnz	sprintf@sp,f,c
  1518  001442  2A37               	incf	sprintf@sp+1,f,c
  1519  001444  D000               	goto	l2218
  1520  001446                     l2218:
  1521  001446  0645               	decf	sprintf@prec,f,c
  1522  001448  2845               	incf	sprintf@prec,w,c
  1523  00144A  B4D8               	btfsc	status,2,c
  1524  00144C  D002               	goto	l2220
  1525  00144E  D7D1               	goto	l2212
  1526  001450  D000               	goto	l2220
  1527  001452                     l2220:
  1528  001452  C038  FFF6         	movff	sprintf@f,tblptrl
  1529  001456  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1530  00145A  4A38               	infsnz	sprintf@f,f,c
  1531  00145C  2A39               	incf	sprintf@f+1,f,c
  1532  00145E                     	if	0	;tblptru may be non-zero
  1533  00145E                     	endif
  1534  00145E                     	if	0	;tblptru may be non-zero
  1535  00145E                     	endif
  1536  00145E  0008               	tblrd		*
  1537  001460  CFF5 F048          	movff	tablat,sprintf@c
  1538  001464  5048               	movf	sprintf@c,w,c
  1539  001466  B4D8               	btfsc	status,2,c
  1540  001468  D002               	goto	l2222
  1541  00146A  D6DC               	goto	l2138
  1542  00146C  D000               	goto	l2222
  1543  00146E                     l2222:
  1544                           
  1545                           ;doprnt.c: 1538: *sp = 0;
  1546  00146E  C036  FFD9         	movff	sprintf@sp,fsr2l
  1547  001472  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1548  001476  0E00               	movlw	0
  1549  001478  6EDF               	movwf	indf2,c
  1550  00147A  0012               	return	
  1551                           
  1552                           ;doprnt.c: 1540: return 0;
  1553                           ;	Return value of _sprintf is never used
  1554  00147C  0012               	return		;funcret
  1555  00147E                     __end_of_sprintf:
  1556                           	opt stack 0
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           prodh	equ	0xFF4
  1562                           prodl	equ	0xFF3
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           postdec1	equ	0xFE5
  1566                           fsr1l	equ	0xFE1
  1567                           indf2	equ	0xFDF
  1568                           postinc2	equ	0xFDE
  1569                           postdec2	equ	0xFDD
  1570                           fsr2h	equ	0xFDA
  1571                           fsr2l	equ	0xFD9
  1572                           status	equ	0xFD8
  1573                           
  1574 ;; *************** function _isdigit *****************
  1575 ;; Defined at:
  1576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  c               1    wreg     unsigned char 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  c               1    2[COMRAM] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;		None               void
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;Total ram usage:        3 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_sprintf
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text2
  1604  001C1E                     __ptext2:
  1605                           	opt stack 0
  1606  001C1E                     _isdigit:
  1607                           	opt stack 29
  1608                           
  1609                           ;incstack = 0
  1610                           ;isdigit@c stored from wreg
  1611  001C1E  6E2C               	movwf	isdigit@c,c
  1612  001C20  0E00               	movlw	0
  1613  001C22  6E2B               	movwf	_isdigit$2039,c
  1614  001C24  0E3A               	movlw	58
  1615  001C26  602C               	cpfslt	isdigit@c,c
  1616  001C28  D006               	goto	l2058
  1617  001C2A  0E2F               	movlw	47
  1618  001C2C  642C               	cpfsgt	isdigit@c,c
  1619  001C2E  D003               	goto	l2058
  1620  001C30  0E01               	movlw	1
  1621  001C32  6E2B               	movwf	_isdigit$2039,c
  1622  001C34  D000               	goto	l2058
  1623  001C36                     l2058:
  1624  001C36  C02B  F02A         	movff	_isdigit$2039,??_isdigit
  1625  001C3A  302A               	rrcf	??_isdigit,w,c
  1626  001C3C  0012               	return	
  1627  001C3E  0012               	return		;funcret
  1628  001C40                     __end_of_isdigit:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           tblptrh	equ	0xFF7
  1632                           tblptrl	equ	0xFF6
  1633                           tablat	equ	0xFF5
  1634                           prodh	equ	0xFF4
  1635                           prodl	equ	0xFF3
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           postdec1	equ	0xFE5
  1639                           fsr1l	equ	0xFE1
  1640                           indf2	equ	0xFDF
  1641                           postinc2	equ	0xFDE
  1642                           postdec2	equ	0xFDD
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647 ;; *************** function ___wmul *****************
  1648 ;; Defined at:
  1649 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  multiplier      2    0[COMRAM] unsigned int 
  1652 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  product         2    4[COMRAM] unsigned int 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2    0[COMRAM] unsigned int 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, prodl, prodh
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1668 ;;Total ram usage:        6 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_sprintf
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text3
  1678  001BAA                     __ptext3:
  1679                           	opt stack 0
  1680  001BAA                     ___wmul:
  1681                           	opt stack 29
  1682                           
  1683                           ;incstack = 0
  1684  001BAA  502A               	movf	___wmul@multiplier,w,c
  1685  001BAC  022C               	mulwf	___wmul@multiplicand,c
  1686  001BAE  CFF3 F02E          	movff	prodl,___wmul@product
  1687  001BB2  CFF4 F02F          	movff	prodh,___wmul@product+1
  1688  001BB6  502A               	movf	___wmul@multiplier,w,c
  1689  001BB8  022D               	mulwf	___wmul@multiplicand+1,c
  1690  001BBA  50F3               	movf	prodl,w,c
  1691  001BBC  262F               	addwf	___wmul@product+1,f,c
  1692  001BBE  502B               	movf	___wmul@multiplier+1,w,c
  1693  001BC0  022C               	mulwf	___wmul@multiplicand,c
  1694  001BC2  50F3               	movf	prodl,w,c
  1695  001BC4  262F               	addwf	___wmul@product+1,f,c
  1696  001BC6  C02E  F02A         	movff	___wmul@product,?___wmul
  1697  001BCA  C02F  F02B         	movff	___wmul@product+1,?___wmul+1
  1698  001BCE  0012               	return	
  1699  001BD0  0012               	return		;funcret
  1700  001BD2                     __end_of___wmul:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           prodh	equ	0xFF4
  1707                           prodl	equ	0xFF3
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           postdec1	equ	0xFE5
  1711                           fsr1l	equ	0xFE1
  1712                           indf2	equ	0xFDF
  1713                           postinc2	equ	0xFDE
  1714                           postdec2	equ	0xFDD
  1715                           fsr2h	equ	0xFDA
  1716                           fsr2l	equ	0xFD9
  1717                           status	equ	0xFD8
  1718                           
  1719 ;; *************** function ___lwmod *****************
  1720 ;; Defined at:
  1721 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  dividend        2    7[COMRAM] unsigned int 
  1724 ;;  divisor         2    9[COMRAM] unsigned int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  counter         1   11[COMRAM] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  2    7[COMRAM] unsigned int 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1739 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;Total ram usage:        5 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; This function calls:
  1743 ;;		Nothing
  1744 ;; This function is called by:
  1745 ;;		_sprintf
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text4
  1750  001A54                     __ptext4:
  1751                           	opt stack 0
  1752  001A54                     ___lwmod:
  1753                           	opt stack 29
  1754                           
  1755                           ;incstack = 0
  1756  001A54  5033               	movf	___lwmod@divisor,w,c
  1757  001A56  1034               	iorwf	___lwmod@divisor+1,w,c
  1758  001A58  B4D8               	btfsc	status,2,c
  1759  001A5A  D01D               	goto	l967
  1760  001A5C  0E01               	movlw	1
  1761  001A5E  6E35               	movwf	___lwmod@counter,c
  1762  001A60  D005               	goto	l2096
  1763  001A62                     l2094:
  1764  001A62  90D8               	bcf	status,0,c
  1765  001A64  3633               	rlcf	___lwmod@divisor,f,c
  1766  001A66  3634               	rlcf	___lwmod@divisor+1,f,c
  1767  001A68  2A35               	incf	___lwmod@counter,f,c
  1768  001A6A  D000               	goto	l2096
  1769  001A6C                     l2096:
  1770  001A6C  BE34               	btfsc	___lwmod@divisor+1,7,c
  1771  001A6E  D002               	goto	l2098
  1772  001A70  D7F8               	goto	l2094
  1773  001A72  D000               	goto	l2098
  1774  001A74                     l2098:
  1775  001A74  5033               	movf	___lwmod@divisor,w,c
  1776  001A76  5C31               	subwf	___lwmod@dividend,w,c
  1777  001A78  5034               	movf	___lwmod@divisor+1,w,c
  1778  001A7A  5832               	subwfb	___lwmod@dividend+1,w,c
  1779  001A7C  A0D8               	btfss	status,0,c
  1780  001A7E  D005               	goto	l2102
  1781  001A80  5033               	movf	___lwmod@divisor,w,c
  1782  001A82  5E31               	subwf	___lwmod@dividend,f,c
  1783  001A84  5034               	movf	___lwmod@divisor+1,w,c
  1784  001A86  5A32               	subwfb	___lwmod@dividend+1,f,c
  1785  001A88  D000               	goto	l2102
  1786  001A8A                     l2102:
  1787  001A8A  90D8               	bcf	status,0,c
  1788  001A8C  3234               	rrcf	___lwmod@divisor+1,f,c
  1789  001A8E  3233               	rrcf	___lwmod@divisor,f,c
  1790  001A90  2E35               	decfsz	___lwmod@counter,f,c
  1791  001A92  D7F0               	goto	l2098
  1792  001A94  D000               	goto	l967
  1793  001A96                     l967:
  1794  001A96  C031  F031         	movff	___lwmod@dividend,?___lwmod
  1795  001A9A  C032  F032         	movff	___lwmod@dividend+1,?___lwmod+1
  1796  001A9E  0012               	return		;funcret
  1797  001AA0                     __end_of___lwmod:
  1798                           	opt stack 0
  1799                           tblptru	equ	0xFF8
  1800                           tblptrh	equ	0xFF7
  1801                           tblptrl	equ	0xFF6
  1802                           tablat	equ	0xFF5
  1803                           prodh	equ	0xFF4
  1804                           prodl	equ	0xFF3
  1805                           postinc0	equ	0xFEE
  1806                           wreg	equ	0xFE8
  1807                           postdec1	equ	0xFE5
  1808                           fsr1l	equ	0xFE1
  1809                           indf2	equ	0xFDF
  1810                           postinc2	equ	0xFDE
  1811                           postdec2	equ	0xFDD
  1812                           fsr2h	equ	0xFDA
  1813                           fsr2l	equ	0xFD9
  1814                           status	equ	0xFD8
  1815                           
  1816 ;; *************** function ___lwdiv *****************
  1817 ;; Defined at:
  1818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  dividend        2    0[COMRAM] unsigned int 
  1821 ;;  divisor         2    2[COMRAM] unsigned int 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  quotient        2    4[COMRAM] unsigned int 
  1824 ;;  counter         1    6[COMRAM] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2    0[COMRAM] unsigned int 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1835 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;Total ram usage:        7 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_sprintf
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text5
  1848  0019A4                     __ptext5:
  1849                           	opt stack 0
  1850  0019A4                     ___lwdiv:
  1851                           	opt stack 29
  1852                           
  1853                           ;incstack = 0
  1854  0019A4  0E00               	movlw	0
  1855  0019A6  6E2F               	movwf	___lwdiv@quotient+1,c
  1856  0019A8  0E00               	movlw	0
  1857  0019AA  6E2E               	movwf	___lwdiv@quotient,c
  1858  0019AC  502C               	movf	___lwdiv@divisor,w,c
  1859  0019AE  102D               	iorwf	___lwdiv@divisor+1,w,c
  1860  0019B0  B4D8               	btfsc	status,2,c
  1861  0019B2  D021               	goto	l957
  1862  0019B4  0E01               	movlw	1
  1863  0019B6  6E30               	movwf	___lwdiv@counter,c
  1864  0019B8  D005               	goto	l2076
  1865  0019BA                     l2074:
  1866  0019BA  90D8               	bcf	status,0,c
  1867  0019BC  362C               	rlcf	___lwdiv@divisor,f,c
  1868  0019BE  362D               	rlcf	___lwdiv@divisor+1,f,c
  1869  0019C0  2A30               	incf	___lwdiv@counter,f,c
  1870  0019C2  D000               	goto	l2076
  1871  0019C4                     l2076:
  1872  0019C4  BE2D               	btfsc	___lwdiv@divisor+1,7,c
  1873  0019C6  D002               	goto	l2078
  1874  0019C8  D7F8               	goto	l2074
  1875  0019CA  D000               	goto	l2078
  1876  0019CC                     l2078:
  1877  0019CC  90D8               	bcf	status,0,c
  1878  0019CE  362E               	rlcf	___lwdiv@quotient,f,c
  1879  0019D0  362F               	rlcf	___lwdiv@quotient+1,f,c
  1880  0019D2  502C               	movf	___lwdiv@divisor,w,c
  1881  0019D4  5C2A               	subwf	___lwdiv@dividend,w,c
  1882  0019D6  502D               	movf	___lwdiv@divisor+1,w,c
  1883  0019D8  582B               	subwfb	___lwdiv@dividend+1,w,c
  1884  0019DA  A0D8               	btfss	status,0,c
  1885  0019DC  D006               	goto	l2086
  1886  0019DE  502C               	movf	___lwdiv@divisor,w,c
  1887  0019E0  5E2A               	subwf	___lwdiv@dividend,f,c
  1888  0019E2  502D               	movf	___lwdiv@divisor+1,w,c
  1889  0019E4  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  1890  0019E6  802E               	bsf	___lwdiv@quotient,0,c
  1891  0019E8  D000               	goto	l2086
  1892  0019EA                     l2086:
  1893  0019EA  90D8               	bcf	status,0,c
  1894  0019EC  322D               	rrcf	___lwdiv@divisor+1,f,c
  1895  0019EE  322C               	rrcf	___lwdiv@divisor,f,c
  1896  0019F0  2E30               	decfsz	___lwdiv@counter,f,c
  1897  0019F2  D7EC               	goto	l2078
  1898  0019F4  D000               	goto	l957
  1899  0019F6                     l957:
  1900  0019F6  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  1901  0019FA  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1902  0019FE  0012               	return		;funcret
  1903  001A00                     __end_of___lwdiv:
  1904                           	opt stack 0
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           prodh	equ	0xFF4
  1910                           prodl	equ	0xFF3
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1l	equ	0xFE1
  1915                           indf2	equ	0xFDF
  1916                           postinc2	equ	0xFDE
  1917                           postdec2	equ	0xFDD
  1918                           fsr2h	equ	0xFDA
  1919                           fsr2l	equ	0xFD9
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _caratula *****************
  1923 ;; Defined at:
  1924 ;;		line 36 in file "main.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;		None               void
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    5
  1945 ;; This function calls:
  1946 ;;		_lcd_comand
  1947 ;;		_lcd_gotoxy
  1948 ;;		_lcd_putrs
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text6
  1955  001BD2                     __ptext6:
  1956                           	opt stack 0
  1957  001BD2                     _caratula:
  1958                           	opt stack 25
  1959                           
  1960                           ;main.c: 38: lcd_comand(0b00001100);
  1961                           
  1962                           ;incstack = 0
  1963  001BD2  0E0C               	movlw	12
  1964  001BD4  EC3B  F00E         	call	_lcd_comand
  1965                           
  1966                           ;main.c: 39: lcd_gotoxy(1,1);
  1967  001BD8  0E01               	movlw	1
  1968  001BDA  6E2E               	movwf	lcd_gotoxy@y,c
  1969  001BDC  0E01               	movlw	1
  1970  001BDE  ECFD  F00D         	call	_lcd_gotoxy
  1971                           
  1972                           ;main.c: 40: lcd_putrs("UNIMIC  TECLADO ");
  1973  001BE2  0E0F               	movlw	low STR_1
  1974  001BE4  6E32               	movwf	lcd_putrs@ptr,c
  1975  001BE6  0E0F               	movlw	high STR_1
  1976  001BE8  6E33               	movwf	lcd_putrs@ptr+1,c
  1977  001BEA  EC00  F00D         	call	_lcd_putrs	;wreg free
  1978                           
  1979                           ;main.c: 45: lcd_gotoxy(1,2);
  1980  001BEE  0E02               	movlw	2
  1981  001BF0  6E2E               	movwf	lcd_gotoxy@y,c
  1982  001BF2  0E01               	movlw	1
  1983  001BF4  ECFD  F00D         	call	_lcd_gotoxy
  1984  001BF8  0012               	return		;funcret
  1985  001BFA                     __end_of_caratula:
  1986                           	opt stack 0
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1l	equ	0xFE1
  1997                           indf2	equ	0xFDF
  1998                           postinc2	equ	0xFDE
  1999                           postdec2	equ	0xFDD
  2000                           fsr2h	equ	0xFDA
  2001                           fsr2l	equ	0xFD9
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function _lcd_putrs *****************
  2005 ;; Defined at:
  2006 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  2009 ;;		 -> STR_17(2), STR_16(2), STR_14(2), STR_13(2), 
  2010 ;;		 -> STR_9(2), STR_5(2), buffer2(20), STR_1(17), 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;		None               void
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;Total ram usage:        2 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    4
  2029 ;; This function calls:
  2030 ;;		_lcd_putc
  2031 ;; This function is called by:
  2032 ;;		_caratula
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text7
  2038  001A00                     __ptext7:
  2039                           	opt stack 0
  2040  001A00                     _lcd_putrs:
  2041                           	opt stack 26
  2042                           
  2043                           ;unmc_lcd_216.c: 223: while(*ptr){
  2044                           
  2045                           ;incstack = 0
  2046  001A00  D015               	goto	l2016
  2047  001A02                     l2012:
  2048                           
  2049                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2050  001A02  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2051  001A06  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2052  001A0A  6AF8               	clrf	tblptru,c
  2053  001A0C  0E0E               	movlw	(high __ramtop+-1)
  2054  001A0E  64F7               	cpfsgt	tblptrh,c
  2055  001A10  D003               	bra	u1437
  2056  001A12  0008               	tblrd		*
  2057  001A14  50F5               	movf	tablat,w,c
  2058  001A16  D005               	bra	u1430
  2059  001A18                     u1437:
  2060  001A18  CFF6 FFE9          	movff	tblptrl,fsr0l
  2061  001A1C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2062  001A20  50EF               	movf	indf0,w,c
  2063  001A22                     u1430:
  2064  001A22  EC50  F00D         	call	_lcd_putc
  2065  001A26  4A32               	infsnz	lcd_putrs@ptr,f,c
  2066  001A28  2A33               	incf	lcd_putrs@ptr+1,f,c
  2067  001A2A  D000               	goto	l2016
  2068  001A2C                     l2016:
  2069  001A2C  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2070  001A30  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2071  001A34  6AF8               	clrf	tblptru,c
  2072  001A36  0E0E               	movlw	(high __ramtop+-1)
  2073  001A38  64F7               	cpfsgt	tblptrh,c
  2074  001A3A  D003               	bra	u1447
  2075  001A3C  0008               	tblrd		*
  2076  001A3E  50F5               	movf	tablat,w,c
  2077  001A40  D005               	bra	u1440
  2078  001A42                     u1447:
  2079  001A42  CFF6 FFE9          	movff	tblptrl,fsr0l
  2080  001A46  CFF7 FFEA          	movff	tblptrh,fsr0h
  2081  001A4A  50EF               	movf	indf0,w,c
  2082  001A4C                     u1440:
  2083  001A4C  0900               	iorlw	0
  2084  001A4E  A4D8               	btfss	status,2,c
  2085  001A50  D7D8               	goto	l2012
  2086  001A52  0012               	return		;funcret
  2087  001A54                     __end_of_lcd_putrs:
  2088                           	opt stack 0
  2089                           tblptru	equ	0xFF8
  2090                           tblptrh	equ	0xFF7
  2091                           tblptrl	equ	0xFF6
  2092                           tablat	equ	0xFF5
  2093                           prodh	equ	0xFF4
  2094                           prodl	equ	0xFF3
  2095                           indf0	equ	0xFEF
  2096                           postinc0	equ	0xFEE
  2097                           fsr0h	equ	0xFEA
  2098                           fsr0l	equ	0xFE9
  2099                           wreg	equ	0xFE8
  2100                           postdec1	equ	0xFE5
  2101                           fsr1l	equ	0xFE1
  2102                           indf2	equ	0xFDF
  2103                           postinc2	equ	0xFDE
  2104                           postdec2	equ	0xFDD
  2105                           fsr2h	equ	0xFDA
  2106                           fsr2l	equ	0xFD9
  2107                           status	equ	0xFD8
  2108                           
  2109 ;; *************** function _lcd_putc *****************
  2110 ;; Defined at:
  2111 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  c               1    wreg     unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  c               1    7[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;		None               void
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;Total ram usage:        1 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    3
  2132 ;; This function calls:
  2133 ;;		_lcd_gotoxy
  2134 ;;		_lcd_send_byte
  2135 ;; This function is called by:
  2136 ;;		_lcd_putrs
  2137 ;;		_lcd_puts
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text8
  2142  001AA0                     __ptext8:
  2143                           	opt stack 0
  2144  001AA0                     _lcd_putc:
  2145                           	opt stack 26
  2146                           
  2147                           ;incstack = 0
  2148                           ;lcd_putc@c stored from wreg
  2149  001AA0  6E31               	movwf	lcd_putc@c,c
  2150                           
  2151                           ;unmc_lcd_216.c: 173: switch(c){
  2152  001AA2  D018               	goto	l1912
  2153  001AA4                     l1902:
  2154                           
  2155                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2156  001AA4  0E01               	movlw	1
  2157  001AA6  6E2C               	movwf	lcd_send_byte@n,c
  2158  001AA8  0E00               	movlw	0
  2159  001AAA  ECBC  F00D         	call	_lcd_send_byte
  2160                           
  2161                           ;unmc_lcd_216.c: 176: break;
  2162  001AAE  0012               	return	
  2163  001AB0                     l1904:
  2164                           
  2165                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2166  001AB0  0E02               	movlw	2
  2167  001AB2  6E2E               	movwf	lcd_gotoxy@y,c
  2168  001AB4  0E01               	movlw	1
  2169  001AB6  ECFD  F00D         	call	_lcd_gotoxy
  2170                           
  2171                           ;unmc_lcd_216.c: 179: break;
  2172  001ABA  0012               	return	
  2173  001ABC                     l1906:
  2174                           
  2175                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2176  001ABC  0E10               	movlw	16
  2177  001ABE  6E2C               	movwf	lcd_send_byte@n,c
  2178  001AC0  0E00               	movlw	0
  2179  001AC2  ECBC  F00D         	call	_lcd_send_byte
  2180                           
  2181                           ;unmc_lcd_216.c: 182: break;
  2182  001AC6  0012               	return	
  2183  001AC8                     l1908:
  2184                           
  2185                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2186  001AC8  C031  F02C         	movff	lcd_putc@c,lcd_send_byte@n
  2187  001ACC  0E01               	movlw	1
  2188  001ACE  ECBC  F00D         	call	_lcd_send_byte
  2189                           
  2190                           ;unmc_lcd_216.c: 186: }
  2191                           
  2192                           ;unmc_lcd_216.c: 185: break;
  2193  001AD2  0012               	return	
  2194  001AD4                     l1912:
  2195  001AD4  5031               	movf	lcd_putc@c,w,c
  2196                           
  2197                           ; Switch size 1, requested type "space"
  2198                           ; Number of cases is 3, Range of values is 8 to 12
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte           10     6 (average)
  2202                           ;	Chosen strategy is simple_byte
  2203  001AD6  0A08               	xorlw	8	; case 8
  2204  001AD8  B4D8               	btfsc	status,2,c
  2205  001ADA  D7F0               	goto	l1906
  2206  001ADC  0A02               	xorlw	2	; case 10
  2207  001ADE  B4D8               	btfsc	status,2,c
  2208  001AE0  D7E7               	goto	l1904
  2209  001AE2  0A06               	xorlw	6	; case 12
  2210  001AE4  B4D8               	btfsc	status,2,c
  2211  001AE6  D7DE               	goto	l1902
  2212  001AE8  D7EF               	goto	l1908
  2213  001AEA  0012               	return		;funcret
  2214  001AEC                     __end_of_lcd_putc:
  2215                           	opt stack 0
  2216                           tblptru	equ	0xFF8
  2217                           tblptrh	equ	0xFF7
  2218                           tblptrl	equ	0xFF6
  2219                           tablat	equ	0xFF5
  2220                           prodh	equ	0xFF4
  2221                           prodl	equ	0xFF3
  2222                           indf0	equ	0xFEF
  2223                           postinc0	equ	0xFEE
  2224                           fsr0h	equ	0xFEA
  2225                           fsr0l	equ	0xFE9
  2226                           wreg	equ	0xFE8
  2227                           postdec1	equ	0xFE5
  2228                           fsr1l	equ	0xFE1
  2229                           indf2	equ	0xFDF
  2230                           postinc2	equ	0xFDE
  2231                           postdec2	equ	0xFDD
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _lcd_gotoxy *****************
  2237 ;; Defined at:
  2238 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  x               1    wreg     unsigned char 
  2241 ;;  y               1    4[COMRAM] unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  x               1    5[COMRAM] unsigned char 
  2244 ;;  address         1    6[COMRAM] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2254 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;Total ram usage:        3 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    2
  2261 ;; This function calls:
  2262 ;;		_lcd_send_byte
  2263 ;; This function is called by:
  2264 ;;		_caratula
  2265 ;;		_lcd_putc
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text9
  2270  001BFA                     __ptext9:
  2271                           	opt stack 0
  2272  001BFA                     _lcd_gotoxy:
  2273                           	opt stack 26
  2274                           
  2275                           ;incstack = 0
  2276                           ;lcd_gotoxy@x stored from wreg
  2277  001BFA  6E2F               	movwf	lcd_gotoxy@x,c
  2278                           
  2279                           ;unmc_lcd_216.c: 159: int8 address;
  2280                           ;unmc_lcd_216.c: 161: if(y != 1)
  2281  001BFC  042E               	decf	lcd_gotoxy@y,w,c
  2282  001BFE  B4D8               	btfsc	status,2,c
  2283  001C00  D002               	goto	l1754
  2284                           
  2285                           ;unmc_lcd_216.c: 162: address = 0x40;
  2286  001C02  0E40               	movlw	64
  2287  001C04  D001               	goto	L1
  2288  001C06                     l1754:
  2289                           
  2290                           ;unmc_lcd_216.c: 163: else
  2291                           ;unmc_lcd_216.c: 164: address=0;
  2292  001C06  0E00               	movlw	0
  2293  001C08                     L1:
  2294  001C08  6E30               	movwf	lcd_gotoxy@address,c
  2295  001C0A  D000               	goto	l1756
  2296  001C0C                     l1756:
  2297                           
  2298                           ;unmc_lcd_216.c: 166: address += x-1;
  2299  001C0C  042F               	decf	lcd_gotoxy@x,w,c
  2300  001C0E  2630               	addwf	lcd_gotoxy@address,f,c
  2301                           
  2302                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2303  001C10  5030               	movf	lcd_gotoxy@address,w,c
  2304  001C12  0980               	iorlw	128
  2305  001C14  6E2C               	movwf	lcd_send_byte@n,c
  2306  001C16  0E00               	movlw	0
  2307  001C18  ECBC  F00D         	call	_lcd_send_byte
  2308  001C1C  0012               	return		;funcret
  2309  001C1E                     __end_of_lcd_gotoxy:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           indf0	equ	0xFEF
  2318                           postinc0	equ	0xFEE
  2319                           fsr0h	equ	0xFEA
  2320                           fsr0l	equ	0xFE9
  2321                           wreg	equ	0xFE8
  2322                           postdec1	equ	0xFE5
  2323                           fsr1l	equ	0xFE1
  2324                           indf2	equ	0xFDF
  2325                           postinc2	equ	0xFDE
  2326                           postdec2	equ	0xFDD
  2327                           fsr2h	equ	0xFDA
  2328                           fsr2l	equ	0xFD9
  2329                           status	equ	0xFD8
  2330                           
  2331 ;; *************** function _Setup *****************
  2332 ;; Defined at:
  2333 ;;		line 56 in file "main.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;		None               void
  2340 ;; Registers used:
  2341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    3
  2354 ;; This function calls:
  2355 ;;		_Write_RTC
  2356 ;;		_lcd_comand
  2357 ;;		_lcd_init
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text10
  2364  001AEC                     __ptext10:
  2365                           	opt stack 0
  2366  001AEC                     _Setup:
  2367                           	opt stack 27
  2368                           
  2369                           ;main.c: 58: OSCTUNEbits.INTSRC=1;
  2370                           
  2371                           ;incstack = 0
  2372  001AEC  8E9B               	bsf	3995,7,c	;volatile
  2373                           
  2374                           ;main.c: 59: OSCTUNEbits.PLLEN=0;
  2375  001AEE  9C9B               	bcf	3995,6,c	;volatile
  2376                           
  2377                           ;main.c: 60: OSCCONbits.IRCF0=1;
  2378  001AF0  88D3               	bsf	4051,4,c	;volatile
  2379                           
  2380                           ;main.c: 61: OSCCONbits.IRCF1=1;
  2381  001AF2  8AD3               	bsf	4051,5,c	;volatile
  2382                           
  2383                           ;main.c: 62: OSCCONbits.IRCF2=1;
  2384  001AF4  8CD3               	bsf	4051,6,c	;volatile
  2385                           
  2386                           ;main.c: 63: OSCCONbits.SCS0=0;
  2387  001AF6  90D3               	bcf	4051,0,c	;volatile
  2388                           
  2389                           ;main.c: 64: OSCCONbits.SCS1=0;
  2390  001AF8  92D3               	bcf	4051,1,c	;volatile
  2391                           
  2392                           ;main.c: 65: TRISA = 0b11110000;
  2393  001AFA  0EF0               	movlw	240
  2394  001AFC  6E92               	movwf	3986,c	;volatile
  2395                           
  2396                           ;main.c: 66: TRISB = 0;
  2397  001AFE  0E00               	movlw	0
  2398  001B00  6E93               	movwf	3987,c	;volatile
  2399                           
  2400                           ;main.c: 67: TRISC = 0b00000111;
  2401  001B02  0E07               	movlw	7
  2402  001B04  6E94               	movwf	3988,c	;volatile
  2403                           
  2404                           ;main.c: 71: ANCON0=0b11111111;
  2405  001B06  010F               	movlb	15	; () banked
  2406  001B08  6948               	setf	72,b	;volatile
  2407                           
  2408                           ; BSR set to: 15
  2409                           ;main.c: 73: ANCON1=0b11111111;
  2410  001B0A  010F               	movlb	15	; () banked
  2411  001B0C  6949               	setf	73,b	;volatile
  2412                           
  2413                           ;main.c: 74: ADCON0=0b00101101;
  2414  001B0E  0E2D               	movlw	45
  2415  001B10  6EC2               	movwf	4034,c	;volatile
  2416                           
  2417                           ;main.c: 75: ADCON1=0b00010000;
  2418  001B12  0E10               	movlw	16
  2419  001B14  6EC1               	movwf	4033,c	;volatile
  2420                           
  2421                           ; BSR set to: 15
  2422                           ;main.c: 76: RTCCFGbits.RTCEN=1;
  2423  001B16  010F               	movlb	15	; () banked
  2424  001B18  8F3F               	bsf	63,7,b	;volatile
  2425                           
  2426                           ; BSR set to: 15
  2427                           ;main.c: 77: RTCCFGbits.RTCWREN=1;
  2428  001B1A  010F               	movlb	15	; () banked
  2429  001B1C  8B3F               	bsf	63,5,b	;volatile
  2430                           
  2431                           ; BSR set to: 15
  2432                           ;main.c: 78: T1CONbits.T1OSCEN=1;
  2433  001B1E  86CD               	bsf	4045,3,c	;volatile
  2434                           
  2435                           ; BSR set to: 15
  2436                           ;main.c: 79: Write_RTC();
  2437  001B20  EC3F  F00A         	call	_Write_RTC	;wreg free
  2438                           
  2439                           ;main.c: 80: lcd_init();
  2440  001B24  EC57  F00C         	call	_lcd_init	;wreg free
  2441                           
  2442                           ;main.c: 81: lcd_comand(0b00001100);
  2443  001B28  0E0C               	movlw	12
  2444  001B2A  EC3B  F00E         	call	_lcd_comand
  2445                           
  2446                           ;main.c: 82: LATBbits.LATB1 = 1;;
  2447  001B2E  828A               	bsf	3978,1,c	;volatile
  2448                           
  2449                           ;main.c: 83: LATBbits.LATB0 = 1;;
  2450  001B30  808A               	bsf	3978,0,c	;volatile
  2451  001B32  0012               	return		;funcret
  2452  001B34                     __end_of_Setup:
  2453                           	opt stack 0
  2454                           tblptru	equ	0xFF8
  2455                           tblptrh	equ	0xFF7
  2456                           tblptrl	equ	0xFF6
  2457                           tablat	equ	0xFF5
  2458                           prodh	equ	0xFF4
  2459                           prodl	equ	0xFF3
  2460                           indf0	equ	0xFEF
  2461                           postinc0	equ	0xFEE
  2462                           fsr0h	equ	0xFEA
  2463                           fsr0l	equ	0xFE9
  2464                           wreg	equ	0xFE8
  2465                           postdec1	equ	0xFE5
  2466                           fsr1l	equ	0xFE1
  2467                           indf2	equ	0xFDF
  2468                           postinc2	equ	0xFDE
  2469                           postdec2	equ	0xFDD
  2470                           fsr2h	equ	0xFDA
  2471                           fsr2l	equ	0xFD9
  2472                           status	equ	0xFD8
  2473                           
  2474 ;; *************** function _lcd_init *****************
  2475 ;; Defined at:
  2476 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  i               1    4[COMRAM] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;		None               void
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2493 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2494 ;;Total ram usage:        1 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    2
  2497 ;; This function calls:
  2498 ;;		_Delay1KTCYx
  2499 ;;		_lcd_send_byte
  2500 ;;		_lcd_send_nibble
  2501 ;; This function is called by:
  2502 ;;		_Setup
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text11
  2507  0018AE                     __ptext11:
  2508                           	opt stack 0
  2509  0018AE                     _lcd_init:
  2510                           	opt stack 27
  2511                           
  2512                           ;unmc_lcd_216.c: 120: int8 i;
  2513                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2514                           
  2515                           ;incstack = 0
  2516  0018AE  9693               	bcf	3987,3,c	;volatile
  2517                           
  2518                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2519  0018B0  9493               	bcf	3987,2,c	;volatile
  2520                           
  2521                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2522  0018B2  968A               	bcf	3978,3,c	;volatile
  2523                           
  2524                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2525  0018B4  948A               	bcf	3978,2,c	;volatile
  2526                           
  2527                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2528  0018B6  9893               	bcf	3987,4,c	;volatile
  2529                           
  2530                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2531  0018B8  9A93               	bcf	3987,5,c	;volatile
  2532                           
  2533                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2534  0018BA  9C93               	bcf	3987,6,c	;volatile
  2535                           
  2536                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2537  0018BC  9E93               	bcf	3987,7,c	;volatile
  2538                           
  2539                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2540  0018BE  0E0A               	movlw	10
  2541  0018C0  EC20  F00E         	call	_Delay1KTCYx
  2542                           
  2543                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2544  0018C4  0E0A               	movlw	10
  2545  0018C6  EC20  F00E         	call	_Delay1KTCYx
  2546                           
  2547                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2548  0018CA  0E0A               	movlw	10
  2549  0018CC  EC20  F00E         	call	_Delay1KTCYx
  2550                           
  2551                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2552  0018D0  0E00               	movlw	0
  2553  0018D2  6E2E               	movwf	lcd_init@i,c
  2554  0018D4                     l2024:
  2555  0018D4  0E02               	movlw	2
  2556  0018D6  642E               	cpfsgt	lcd_init@i,c
  2557  0018D8  D001               	goto	l2028
  2558  0018DA  D008               	goto	l2034
  2559  0018DC                     l2028:
  2560                           
  2561                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2562  0018DC  0E03               	movlw	3
  2563  0018DE  EC97  F00C         	call	_lcd_send_nibble
  2564                           
  2565                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2566  0018E2  0E0A               	movlw	10
  2567  0018E4  EC20  F00E         	call	_Delay1KTCYx
  2568  0018E8  2A2E               	incf	lcd_init@i,f,c
  2569  0018EA  D7F4               	goto	l2024
  2570  0018EC                     l2034:
  2571                           
  2572                           ;unmc_lcd_216.c: 146: }
  2573                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2574  0018EC  0E02               	movlw	2
  2575  0018EE  EC97  F00C         	call	_lcd_send_nibble
  2576                           
  2577                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2578  0018F2  0E00               	movlw	0
  2579  0018F4  6E2E               	movwf	lcd_init@i,c
  2580  0018F6  0E03               	movlw	3
  2581  0018F8  642E               	cpfsgt	lcd_init@i,c
  2582  0018FA  D002               	goto	l2042
  2583  0018FC  0012               	return	
  2584  0018FE  0012               	return	
  2585  001900                     l2042:
  2586                           
  2587                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2588  001900  502E               	movf	lcd_init@i,w,c
  2589  001902  0D01               	mullw	1
  2590  001904  0E0B               	movlw	low _LCD_INIT_STRING
  2591  001906  24F3               	addwf	prodl,w,c
  2592  001908  6EF6               	movwf	tblptrl,c
  2593  00190A  0E0F               	movlw	high _LCD_INIT_STRING
  2594  00190C  20F4               	addwfc	prodh,w,c
  2595  00190E  6EF7               	movwf	tblptrh,c
  2596  001910                     	if	0	;There are less than 3 active tblptr bytes
  2597  001910                     	endif
  2598  001910  0008               	tblrd		*
  2599  001912  CFF5 F02C          	movff	tablat,lcd_send_byte@n
  2600  001916  0E00               	movlw	0
  2601  001918  ECBC  F00D         	call	_lcd_send_byte
  2602                           
  2603                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2604  00191C  0E0A               	movlw	10
  2605  00191E  EC20  F00E         	call	_Delay1KTCYx
  2606  001922  2A2E               	incf	lcd_init@i,f,c
  2607  001924  0E03               	movlw	3
  2608  001926  642E               	cpfsgt	lcd_init@i,c
  2609  001928  D7EB               	goto	l2042
  2610  00192A  0012               	return	
  2611  00192C  0012               	return		;funcret
  2612  00192E                     __end_of_lcd_init:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           indf0	equ	0xFEF
  2621                           postinc0	equ	0xFEE
  2622                           fsr0h	equ	0xFEA
  2623                           fsr0l	equ	0xFE9
  2624                           wreg	equ	0xFE8
  2625                           postdec1	equ	0xFE5
  2626                           fsr1l	equ	0xFE1
  2627                           indf2	equ	0xFDF
  2628                           postinc2	equ	0xFDE
  2629                           postdec2	equ	0xFDD
  2630                           fsr2h	equ	0xFDA
  2631                           fsr2l	equ	0xFD9
  2632                           status	equ	0xFD8
  2633                           
  2634 ;; *************** function _Delay1KTCYx *****************
  2635 ;; Defined at:
  2636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  unit            1    wreg     unsigned char 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  unit            1    0[COMRAM] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;		None               void
  2643 ;; Registers used:
  2644 ;;		wreg
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2654 ;;Total ram usage:        1 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_lcd_init
  2660 ;;		_DelayPORXLCD
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text12
  2665  001C40                     __ptext12:
  2666                           	opt stack 0
  2667  001C40                     _Delay1KTCYx:
  2668                           	opt stack 28
  2669                           
  2670                           ;incstack = 0
  2671                           ;Delay1KTCYx@unit stored from wreg
  2672  001C40  6E2A               	movwf	Delay1KTCYx@unit,c
  2673  001C42  0EFA               	movlw	250
  2674  001C44                     u2067:
  2675  001C44  F000               	nop	
  2676  001C46  2EE8               	decfsz	wreg,f,c
  2677  001C48  D7FD               	goto	u2067
  2678  001C4A  2E2A               	decfsz	Delay1KTCYx@unit,f,c
  2679  001C4C  D7FA               	goto	l1760
  2680  001C4E  0012               	return	
  2681  001C50  0012               	return		;funcret
  2682  001C52                     __end_of_Delay1KTCYx:
  2683                           	opt stack 0
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           indf0	equ	0xFEF
  2691                           postinc0	equ	0xFEE
  2692                           fsr0h	equ	0xFEA
  2693                           fsr0l	equ	0xFE9
  2694                           wreg	equ	0xFE8
  2695                           postdec1	equ	0xFE5
  2696                           fsr1l	equ	0xFE1
  2697                           indf2	equ	0xFDF
  2698                           postinc2	equ	0xFDE
  2699                           postdec2	equ	0xFDD
  2700                           fsr2h	equ	0xFDA
  2701                           fsr2l	equ	0xFD9
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _lcd_comand *****************
  2705 ;; Defined at:
  2706 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  d               1    wreg     unsigned char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  d               1    4[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2723 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;Total ram usage:        1 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    2
  2727 ;; This function calls:
  2728 ;;		_lcd_send_byte
  2729 ;; This function is called by:
  2730 ;;		_caratula
  2731 ;;		_Setup
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text13
  2736  001C76                     __ptext13:
  2737                           	opt stack 0
  2738  001C76                     _lcd_comand:
  2739                           	opt stack 27
  2740                           
  2741                           ;incstack = 0
  2742                           ;lcd_comand@d stored from wreg
  2743  001C76  6E2E               	movwf	lcd_comand@d,c
  2744                           
  2745                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2746  001C78  C02E  F02C         	movff	lcd_comand@d,lcd_send_byte@n
  2747  001C7C  0E00               	movlw	0
  2748  001C7E  ECBC  F00D         	call	_lcd_send_byte
  2749  001C82  0012               	return		;funcret
  2750  001C84                     __end_of_lcd_comand:
  2751                           	opt stack 0
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           prodh	equ	0xFF4
  2757                           prodl	equ	0xFF3
  2758                           indf0	equ	0xFEF
  2759                           postinc0	equ	0xFEE
  2760                           fsr0h	equ	0xFEA
  2761                           fsr0l	equ	0xFE9
  2762                           wreg	equ	0xFE8
  2763                           postdec1	equ	0xFE5
  2764                           fsr1l	equ	0xFE1
  2765                           indf2	equ	0xFDF
  2766                           postinc2	equ	0xFDE
  2767                           postdec2	equ	0xFDD
  2768                           fsr2h	equ	0xFDA
  2769                           fsr2l	equ	0xFD9
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function _lcd_send_byte *****************
  2773 ;; Defined at:
  2774 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  address         1    wreg     unsigned char 
  2777 ;;  n               1    2[COMRAM] unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  address         1    3[COMRAM] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;		None               void
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2789 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2793 ;;Total ram usage:        2 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    1
  2796 ;; This function calls:
  2797 ;;		_Delay100TCYx
  2798 ;;		_lcd_send_nibble
  2799 ;; This function is called by:
  2800 ;;		_lcd_init
  2801 ;;		_lcd_gotoxy
  2802 ;;		_lcd_putc
  2803 ;;		_lcd_comand
  2804 ;;		_lcd_setcursor_vb
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text14
  2809  001B78                     __ptext14:
  2810                           	opt stack 0
  2811  001B78                     _lcd_send_byte:
  2812                           	opt stack 27
  2813                           
  2814                           ;incstack = 0
  2815                           ;lcd_send_byte@address stored from wreg
  2816  001B78  6E2D               	movwf	lcd_send_byte@address,c
  2817                           
  2818                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2819  001B7A  968A               	bcf	3978,3,c	;volatile
  2820                           
  2821                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2822  001B7C  0E02               	movlw	2
  2823  001B7E  EC29  F00E         	call	_Delay100TCYx
  2824                           
  2825                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2826  001B82  9893               	bcf	3987,4,c	;volatile
  2827                           
  2828                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  2829  001B84  9A93               	bcf	3987,5,c	;volatile
  2830                           
  2831                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  2832  001B86  9C93               	bcf	3987,6,c	;volatile
  2833                           
  2834                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  2835  001B88  9E93               	bcf	3987,7,c	;volatile
  2836                           
  2837                           ;unmc_lcd_216.c: 101: if(address)
  2838  001B8A  502D               	movf	lcd_send_byte@address,w,c
  2839  001B8C  B4D8               	btfsc	status,2,c
  2840  001B8E  D002               	goto	l234
  2841                           
  2842                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  2843  001B90  868A               	bsf	3978,3,c	;volatile
  2844  001B92  D001               	goto	l235
  2845  001B94                     l234:
  2846                           
  2847                           ;unmc_lcd_216.c: 103: else
  2848                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  2849  001B94  968A               	bcf	3978,3,c	;volatile
  2850  001B96                     l235:
  2851                           
  2852                           ;unmc_lcd_216.c: 106: __nop();
  2853  001B96  F000               	nop	
  2854                           
  2855                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  2856  001B98  382C               	swapf	lcd_send_byte@n,w,c
  2857  001B9A  0B0F               	andlw	15
  2858  001B9C  EC97  F00C         	call	_lcd_send_nibble
  2859                           
  2860                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  2861  001BA0  502C               	movf	lcd_send_byte@n,w,c
  2862  001BA2  0B0F               	andlw	15
  2863  001BA4  EC97  F00C         	call	_lcd_send_nibble
  2864  001BA8  0012               	return		;funcret
  2865  001BAA                     __end_of_lcd_send_byte:
  2866                           	opt stack 0
  2867                           tblptru	equ	0xFF8
  2868                           tblptrh	equ	0xFF7
  2869                           tblptrl	equ	0xFF6
  2870                           tablat	equ	0xFF5
  2871                           prodh	equ	0xFF4
  2872                           prodl	equ	0xFF3
  2873                           indf0	equ	0xFEF
  2874                           postinc0	equ	0xFEE
  2875                           fsr0h	equ	0xFEA
  2876                           fsr0l	equ	0xFE9
  2877                           wreg	equ	0xFE8
  2878                           postdec1	equ	0xFE5
  2879                           fsr1l	equ	0xFE1
  2880                           indf2	equ	0xFDF
  2881                           postinc2	equ	0xFDE
  2882                           postdec2	equ	0xFDD
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function _lcd_send_nibble *****************
  2888 ;; Defined at:
  2889 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  nibble          1    wreg     unsigned char 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  nibble          1    1[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;		None               void
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;Total ram usage:        2 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_lcd_send_byte
  2913 ;;		_lcd_init
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text15
  2918  00192E                     __ptext15:
  2919                           	opt stack 0
  2920  00192E                     _lcd_send_nibble:
  2921                           	opt stack 27
  2922                           
  2923                           ;incstack = 0
  2924                           ;lcd_send_nibble@nibble stored from wreg
  2925  00192E  6E2B               	movwf	lcd_send_nibble@nibble,c
  2926                           
  2927                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  2928  001930  A02B               	btfss	lcd_send_nibble@nibble,0,c
  2929  001932  D003               	goto	u1030
  2930  001934  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  2931  001936  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  2932  001938  D001               	goto	u1048
  2933  00193A                     u1030:
  2934  00193A  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  2935  00193C                     u1048:
  2936  00193C  3A2A               	swapf	??_lcd_send_nibble,f,c
  2937  00193E  508A               	movf	3978,w,c	;volatile
  2938  001940  182A               	xorwf	??_lcd_send_nibble,w,c
  2939  001942  0BEF               	andlw	-17
  2940  001944  182A               	xorwf	??_lcd_send_nibble,w,c
  2941  001946  6E8A               	movwf	3978,c	;volatile
  2942                           
  2943                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  2944  001948  A22B               	btfss	lcd_send_nibble@nibble,1,c
  2945  00194A  D003               	goto	u1050
  2946  00194C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  2947  00194E  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  2948  001950  D001               	goto	u1068
  2949  001952                     u1050:
  2950  001952  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  2951  001954                     u1068:
  2952  001954  3A2A               	swapf	??_lcd_send_nibble,f,c
  2953  001956  462A               	rlncf	??_lcd_send_nibble,f,c
  2954  001958  508A               	movf	3978,w,c	;volatile
  2955  00195A  182A               	xorwf	??_lcd_send_nibble,w,c
  2956  00195C  0BDF               	andlw	-33
  2957  00195E  182A               	xorwf	??_lcd_send_nibble,w,c
  2958  001960  6E8A               	movwf	3978,c	;volatile
  2959                           
  2960                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  2961  001962  A42B               	btfss	lcd_send_nibble@nibble,2,c
  2962  001964  D003               	goto	u1070
  2963  001966  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  2964  001968  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  2965  00196A  D001               	goto	u1088
  2966  00196C                     u1070:
  2967  00196C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  2968  00196E                     u1088:
  2969  00196E  3A2A               	swapf	??_lcd_send_nibble,f,c
  2970  001970  462A               	rlncf	??_lcd_send_nibble,f,c
  2971  001972  462A               	rlncf	??_lcd_send_nibble,f,c
  2972  001974  508A               	movf	3978,w,c	;volatile
  2973  001976  182A               	xorwf	??_lcd_send_nibble,w,c
  2974  001978  0BBF               	andlw	-65
  2975  00197A  182A               	xorwf	??_lcd_send_nibble,w,c
  2976  00197C  6E8A               	movwf	3978,c	;volatile
  2977                           
  2978                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  2979  00197E  A62B               	btfss	lcd_send_nibble@nibble,3,c
  2980  001980  D003               	goto	u1090
  2981  001982  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  2982  001984  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  2983  001986  D001               	goto	u1108
  2984  001988                     u1090:
  2985  001988  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  2986  00198A                     u1108:
  2987  00198A  322A               	rrcf	??_lcd_send_nibble,f,c
  2988  00198C  322A               	rrcf	??_lcd_send_nibble,f,c
  2989  00198E  508A               	movf	3978,w,c	;volatile
  2990  001990  182A               	xorwf	??_lcd_send_nibble,w,c
  2991  001992  0B7F               	andlw	-129
  2992  001994  182A               	xorwf	??_lcd_send_nibble,w,c
  2993  001996  6E8A               	movwf	3978,c	;volatile
  2994                           
  2995                           ;unmc_lcd_216.c: 32: __nop();
  2996  001998  F000               	nop	
  2997                           
  2998                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  2999  00199A  848A               	bsf	3978,2,c	;volatile
  3000                           
  3001                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3002  00199C  F000               	nop	
  3003  00199E  F000               	nop	
  3004                           
  3005                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3006  0019A0  948A               	bcf	3978,2,c	;volatile
  3007  0019A2  0012               	return		;funcret
  3008  0019A4                     __end_of_lcd_send_nibble:
  3009                           	opt stack 0
  3010                           tblptru	equ	0xFF8
  3011                           tblptrh	equ	0xFF7
  3012                           tblptrl	equ	0xFF6
  3013                           tablat	equ	0xFF5
  3014                           prodh	equ	0xFF4
  3015                           prodl	equ	0xFF3
  3016                           indf0	equ	0xFEF
  3017                           postinc0	equ	0xFEE
  3018                           fsr0h	equ	0xFEA
  3019                           fsr0l	equ	0xFE9
  3020                           wreg	equ	0xFE8
  3021                           postdec1	equ	0xFE5
  3022                           fsr1l	equ	0xFE1
  3023                           indf2	equ	0xFDF
  3024                           postinc2	equ	0xFDE
  3025                           postdec2	equ	0xFDD
  3026                           fsr2h	equ	0xFDA
  3027                           fsr2l	equ	0xFD9
  3028                           status	equ	0xFD8
  3029                           
  3030 ;; *************** function _Delay100TCYx *****************
  3031 ;; Defined at:
  3032 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  unit            1    wreg     unsigned char 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  unit            1    0[COMRAM] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;		None               void
  3039 ;; Registers used:
  3040 ;;		wreg
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3050 ;;Total ram usage:        1 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_lcd_send_byte
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text16
  3060  001C52                     __ptext16:
  3061                           	opt stack 0
  3062  001C52                     _Delay100TCYx:
  3063                           	opt stack 27
  3064                           
  3065                           ;incstack = 0
  3066                           ;Delay100TCYx@unit stored from wreg
  3067  001C52  6E2A               	movwf	Delay100TCYx@unit,c
  3068  001C54  0E21               	movlw	33
  3069  001C56                     u2077:
  3070  001C56  2EE8               	decfsz	wreg,f,c
  3071  001C58  D7FE               	goto	u2077
  3072  001C5A  F000               	nop	
  3073  001C5C  2E2A               	decfsz	Delay100TCYx@unit,f,c
  3074  001C5E  D7FA               	goto	l1720
  3075  001C60  0012               	return	
  3076  001C62  0012               	return		;funcret
  3077  001C64                     __end_of_Delay100TCYx:
  3078                           	opt stack 0
  3079                           tblptru	equ	0xFF8
  3080                           tblptrh	equ	0xFF7
  3081                           tblptrl	equ	0xFF6
  3082                           tablat	equ	0xFF5
  3083                           prodh	equ	0xFF4
  3084                           prodl	equ	0xFF3
  3085                           indf0	equ	0xFEF
  3086                           postinc0	equ	0xFEE
  3087                           fsr0h	equ	0xFEA
  3088                           fsr0l	equ	0xFE9
  3089                           wreg	equ	0xFE8
  3090                           postdec1	equ	0xFE5
  3091                           fsr1l	equ	0xFE1
  3092                           indf2	equ	0xFDF
  3093                           postinc2	equ	0xFDE
  3094                           postdec2	equ	0xFDD
  3095                           fsr2h	equ	0xFDA
  3096                           fsr2l	equ	0xFD9
  3097                           status	equ	0xFD8
  3098                           
  3099 ;; *************** function _Write_RTC *****************
  3100 ;; Defined at:
  3101 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;		None               void
  3108 ;; Registers used:
  3109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3119 ;;Total ram usage:        0 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    2
  3122 ;; This function calls:
  3123 ;;		_RtccWrOn
  3124 ;;		_RtccWriteDate
  3125 ;;		_RtccWriteTime
  3126 ;;		___awdiv
  3127 ;; This function is called by:
  3128 ;;		_Setup
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text17
  3133  00147E                     __ptext17:
  3134                           	opt stack 0
  3135  00147E                     _Write_RTC:
  3136                           	opt stack 27
  3137                           
  3138                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  3139                           
  3140                           ;incstack = 0
  3141  00147E  EC32  F00E         	call	_RtccWrOn	;wreg free
  3142                           
  3143                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  3144  001482  80A3               	bsf	4003,0,c	;volatile
  3145                           
  3146                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  3147  001484  C01F  F02A         	movff	_segundo,___awdiv@dividend
  3148  001488  C020  F02B         	movff	_segundo+1,___awdiv@dividend+1
  3149  00148C  0E00               	movlw	0
  3150  00148E  6E2D               	movwf	___awdiv@divisor+1,c
  3151  001490  0E0A               	movlw	10
  3152  001492  6E2C               	movwf	___awdiv@divisor,c
  3153  001494  EC0C  F00C         	call	___awdiv	;wreg free
  3154  001498  502A               	movf	?___awdiv,w,c
  3155  00149A  6E55               	movwf	_segundo_d,c
  3156                           
  3157                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  3158  00149C  5055               	movf	_segundo_d,w,c
  3159  00149E  0D0A               	mullw	10
  3160  0014A0  50F3               	movf	prodl,w,c
  3161  0014A2  0800               	sublw	0
  3162  0014A4  241F               	addwf	_segundo,w,c
  3163  0014A6  6E56               	movwf	_segundo_u,c
  3164                           
  3165                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  3166  0014A8  5055               	movf	_segundo_d,w,c
  3167  0014AA  0D10               	mullw	16
  3168  0014AC  50F3               	movf	prodl,w,c
  3169  0014AE  2456               	addwf	_segundo_u,w,c
  3170  0014B0  6E27               	movwf	_RtccTime+1,c
  3171                           
  3172                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  3173  0014B2  C01D  F02A         	movff	_minuto,___awdiv@dividend
  3174  0014B6  C01E  F02B         	movff	_minuto+1,___awdiv@dividend+1
  3175  0014BA  0E00               	movlw	0
  3176  0014BC  6E2D               	movwf	___awdiv@divisor+1,c
  3177  0014BE  0E0A               	movlw	10
  3178  0014C0  6E2C               	movwf	___awdiv@divisor,c
  3179  0014C2  EC0C  F00C         	call	___awdiv	;wreg free
  3180  0014C6  502A               	movf	?___awdiv,w,c
  3181  0014C8  6E53               	movwf	_minuto_d,c
  3182                           
  3183                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  3184  0014CA  5053               	movf	_minuto_d,w,c
  3185  0014CC  0D0A               	mullw	10
  3186  0014CE  50F3               	movf	prodl,w,c
  3187  0014D0  0800               	sublw	0
  3188  0014D2  241D               	addwf	_minuto,w,c
  3189  0014D4  6E54               	movwf	_minuto_u,c
  3190                           
  3191                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  3192  0014D6  5053               	movf	_minuto_d,w,c
  3193  0014D8  0D10               	mullw	16
  3194  0014DA  50F3               	movf	prodl,w,c
  3195  0014DC  2454               	addwf	_minuto_u,w,c
  3196  0014DE  6E28               	movwf	_RtccTime+2,c
  3197                           
  3198                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  3199  0014E0  C015  F02A         	movff	_hora,___awdiv@dividend
  3200  0014E4  C016  F02B         	movff	_hora+1,___awdiv@dividend+1
  3201  0014E8  0E00               	movlw	0
  3202  0014EA  6E2D               	movwf	___awdiv@divisor+1,c
  3203  0014EC  0E0A               	movlw	10
  3204  0014EE  6E2C               	movwf	___awdiv@divisor,c
  3205  0014F0  EC0C  F00C         	call	___awdiv	;wreg free
  3206  0014F4  502A               	movf	?___awdiv,w,c
  3207  0014F6  6E4F               	movwf	_hora_d,c
  3208                           
  3209                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  3210  0014F8  504F               	movf	_hora_d,w,c
  3211  0014FA  0D0A               	mullw	10
  3212  0014FC  50F3               	movf	prodl,w,c
  3213  0014FE  0800               	sublw	0
  3214  001500  2415               	addwf	_hora,w,c
  3215  001502  6E50               	movwf	_hora_u,c
  3216                           
  3217                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  3218  001504  504F               	movf	_hora_d,w,c
  3219  001506  0D10               	mullw	16
  3220  001508  50F3               	movf	prodl,w,c
  3221  00150A  2450               	addwf	_hora_u,w,c
  3222  00150C  6E29               	movwf	_RtccTime+3,c
  3223                           
  3224                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  3225  00150E  C057  F02A         	movff	_anio,___awdiv@dividend
  3226  001512  C058  F02B         	movff	_anio+1,___awdiv@dividend+1
  3227  001516  0E00               	movlw	0
  3228  001518  6E2D               	movwf	___awdiv@divisor+1,c
  3229  00151A  0E0A               	movlw	10
  3230  00151C  6E2C               	movwf	___awdiv@divisor,c
  3231  00151E  EC0C  F00C         	call	___awdiv	;wreg free
  3232  001522  502A               	movf	?___awdiv,w,c
  3233  001524  6E4A               	movwf	_anio_d,c
  3234                           
  3235                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  3236  001526  504A               	movf	_anio_d,w,c
  3237  001528  0D0A               	mullw	10
  3238  00152A  50F3               	movf	prodl,w,c
  3239  00152C  0800               	sublw	0
  3240  00152E  2457               	addwf	_anio,w,c
  3241  001530  6E4B               	movwf	_anio_u,c
  3242                           
  3243                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  3244  001532  504A               	movf	_anio_d,w,c
  3245  001534  0D10               	mullw	16
  3246  001536  50F3               	movf	prodl,w,c
  3247  001538  244B               	addwf	_anio_u,w,c
  3248  00153A  6E25               	movwf	_RtccDate+3,c
  3249                           
  3250                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  3251  00153C  C05B  F02A         	movff	_mes,___awdiv@dividend
  3252  001540  C05C  F02B         	movff	_mes+1,___awdiv@dividend+1
  3253  001544  0E00               	movlw	0
  3254  001546  6E2D               	movwf	___awdiv@divisor+1,c
  3255  001548  0E0A               	movlw	10
  3256  00154A  6E2C               	movwf	___awdiv@divisor,c
  3257  00154C  EC0C  F00C         	call	___awdiv	;wreg free
  3258  001550  502A               	movf	?___awdiv,w,c
  3259  001552  6E51               	movwf	_mes_d,c
  3260                           
  3261                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3262  001554  5051               	movf	_mes_d,w,c
  3263  001556  0D0A               	mullw	10
  3264  001558  50F3               	movf	prodl,w,c
  3265  00155A  0800               	sublw	0
  3266  00155C  245B               	addwf	_mes,w,c
  3267  00155E  6E52               	movwf	_mes_u,c
  3268                           
  3269                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3270  001560  5051               	movf	_mes_d,w,c
  3271  001562  0D10               	mullw	16
  3272  001564  50F3               	movf	prodl,w,c
  3273  001566  2452               	addwf	_mes_u,w,c
  3274  001568  6E24               	movwf	_RtccDate+2,c
  3275                           
  3276                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3277  00156A  C059  F02A         	movff	_dia,___awdiv@dividend
  3278  00156E  C05A  F02B         	movff	_dia+1,___awdiv@dividend+1
  3279  001572  0E00               	movlw	0
  3280  001574  6E2D               	movwf	___awdiv@divisor+1,c
  3281  001576  0E0A               	movlw	10
  3282  001578  6E2C               	movwf	___awdiv@divisor,c
  3283  00157A  EC0C  F00C         	call	___awdiv	;wreg free
  3284  00157E  502A               	movf	?___awdiv,w,c
  3285  001580  6E4D               	movwf	_fecha_d,c
  3286                           
  3287                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3288  001582  504D               	movf	_fecha_d,w,c
  3289  001584  0D0A               	mullw	10
  3290  001586  50F3               	movf	prodl,w,c
  3291  001588  0800               	sublw	0
  3292  00158A  2459               	addwf	_dia,w,c
  3293  00158C  6E4E               	movwf	_fecha_u,c
  3294                           
  3295                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3296  00158E  504D               	movf	_fecha_d,w,c
  3297  001590  0D10               	mullw	16
  3298  001592  50F3               	movf	prodl,w,c
  3299  001594  244E               	addwf	_fecha_u,w,c
  3300  001596  6E23               	movwf	_RtccDate+1,c
  3301                           
  3302                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3303  001598  C013  F04C         	movff	_diasem,_dia_semana
  3304                           
  3305                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3306  00159C  C013  F022         	movff	_diasem,_RtccDate
  3307                           
  3308                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3309  0015A0  0E26               	movlw	low _RtccTime
  3310  0015A2  6E2A               	movwf	RtccWriteTime@pTm,c
  3311  0015A4  0E00               	movlw	high _RtccTime
  3312  0015A6  6E2B               	movwf	RtccWriteTime@pTm+1,c
  3313  0015A8  0E01               	movlw	1
  3314  0015AA  6E2C               	movwf	RtccWriteTime@di,c
  3315  0015AC  EC86  F00B         	call	_RtccWriteTime	;wreg free
  3316                           
  3317                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3318  0015B0  0E22               	movlw	low _RtccDate
  3319  0015B2  6E2A               	movwf	RtccWriteDate@pDt,c
  3320  0015B4  0E00               	movlw	high _RtccDate
  3321  0015B6  6E2B               	movwf	RtccWriteDate@pDt+1,c
  3322  0015B8  0E01               	movlw	1
  3323  0015BA  6E2C               	movwf	RtccWriteDate@di,c
  3324  0015BC  ECE3  F00A         	call	_RtccWriteDate	;wreg free
  3325                           
  3326                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3327  0015C0  010F               	movlb	15	; () banked
  3328  0015C2  8F3F               	bsf	63,7,b	;volatile
  3329                           
  3330                           ; BSR set to: 15
  3331  0015C4  0012               	return		;funcret
  3332  0015C6                     __end_of_Write_RTC:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           indf0	equ	0xFEF
  3341                           postinc0	equ	0xFEE
  3342                           fsr0h	equ	0xFEA
  3343                           fsr0l	equ	0xFE9
  3344                           wreg	equ	0xFE8
  3345                           postdec1	equ	0xFE5
  3346                           fsr1l	equ	0xFE1
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           fsr2h	equ	0xFDA
  3351                           fsr2l	equ	0xFD9
  3352                           status	equ	0xFD8
  3353                           
  3354 ;; *************** function ___awdiv *****************
  3355 ;; Defined at:
  3356 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  dividend        2    0[COMRAM] int 
  3359 ;;  divisor         2    2[COMRAM] int 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  quotient        2    6[COMRAM] int 
  3362 ;;  sign            1    5[COMRAM] unsigned char 
  3363 ;;  counter         1    4[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  2    0[COMRAM] int 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;Total ram usage:        8 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_Write_RTC
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text18
  3387  001818                     __ptext18:
  3388                           	opt stack 0
  3389  001818                     ___awdiv:
  3390                           	opt stack 28
  3391                           
  3392                           ; BSR set to: 15
  3393                           ;incstack = 0
  3394  001818  0E00               	movlw	0
  3395  00181A  6E2F               	movwf	___awdiv@sign,c
  3396  00181C  AE2D               	btfss	___awdiv@divisor+1,7,c
  3397  00181E  D007               	goto	l1922
  3398  001820  6C2C               	negf	___awdiv@divisor,c
  3399  001822  1E2D               	comf	___awdiv@divisor+1,f,c
  3400  001824  B0D8               	btfsc	status,0,c
  3401  001826  2A2D               	incf	___awdiv@divisor+1,f,c
  3402  001828  0E01               	movlw	1
  3403  00182A  6E2F               	movwf	___awdiv@sign,c
  3404  00182C  D000               	goto	l1922
  3405  00182E                     l1922:
  3406  00182E  AE2B               	btfss	___awdiv@dividend+1,7,c
  3407  001830  D007               	goto	l1928
  3408  001832  6C2A               	negf	___awdiv@dividend,c
  3409  001834  1E2B               	comf	___awdiv@dividend+1,f,c
  3410  001836  B0D8               	btfsc	status,0,c
  3411  001838  2A2B               	incf	___awdiv@dividend+1,f,c
  3412  00183A  0E01               	movlw	1
  3413  00183C  1A2F               	xorwf	___awdiv@sign,f,c
  3414  00183E  D000               	goto	l1928
  3415  001840                     l1928:
  3416  001840  0E00               	movlw	0
  3417  001842  6E31               	movwf	___awdiv@quotient+1,c
  3418  001844  0E00               	movlw	0
  3419  001846  6E30               	movwf	___awdiv@quotient,c
  3420  001848  502C               	movf	___awdiv@divisor,w,c
  3421  00184A  102D               	iorwf	___awdiv@divisor+1,w,c
  3422  00184C  B4D8               	btfsc	status,2,c
  3423  00184E  D021               	goto	l1950
  3424  001850  0E01               	movlw	1
  3425  001852  6E2E               	movwf	___awdiv@counter,c
  3426  001854  D005               	goto	l1936
  3427  001856                     l1934:
  3428  001856  90D8               	bcf	status,0,c
  3429  001858  362C               	rlcf	___awdiv@divisor,f,c
  3430  00185A  362D               	rlcf	___awdiv@divisor+1,f,c
  3431  00185C  2A2E               	incf	___awdiv@counter,f,c
  3432  00185E  D000               	goto	l1936
  3433  001860                     l1936:
  3434  001860  BE2D               	btfsc	___awdiv@divisor+1,7,c
  3435  001862  D002               	goto	l1938
  3436  001864  D7F8               	goto	l1934
  3437  001866  D000               	goto	l1938
  3438  001868                     l1938:
  3439  001868  90D8               	bcf	status,0,c
  3440  00186A  3630               	rlcf	___awdiv@quotient,f,c
  3441  00186C  3631               	rlcf	___awdiv@quotient+1,f,c
  3442  00186E  502C               	movf	___awdiv@divisor,w,c
  3443  001870  5C2A               	subwf	___awdiv@dividend,w,c
  3444  001872  502D               	movf	___awdiv@divisor+1,w,c
  3445  001874  582B               	subwfb	___awdiv@dividend+1,w,c
  3446  001876  A0D8               	btfss	status,0,c
  3447  001878  D006               	goto	l1946
  3448  00187A  502C               	movf	___awdiv@divisor,w,c
  3449  00187C  5E2A               	subwf	___awdiv@dividend,f,c
  3450  00187E  502D               	movf	___awdiv@divisor+1,w,c
  3451  001880  5A2B               	subwfb	___awdiv@dividend+1,f,c
  3452  001882  8030               	bsf	___awdiv@quotient,0,c
  3453  001884  D000               	goto	l1946
  3454  001886                     l1946:
  3455  001886  90D8               	bcf	status,0,c
  3456  001888  322D               	rrcf	___awdiv@divisor+1,f,c
  3457  00188A  322C               	rrcf	___awdiv@divisor,f,c
  3458  00188C  2E2E               	decfsz	___awdiv@counter,f,c
  3459  00188E  D7EC               	goto	l1938
  3460  001890  D000               	goto	l1950
  3461  001892                     l1950:
  3462  001892  502F               	movf	___awdiv@sign,w,c
  3463  001894  B4D8               	btfsc	status,2,c
  3464  001896  D005               	goto	l1954
  3465  001898  6C30               	negf	___awdiv@quotient,c
  3466  00189A  1E31               	comf	___awdiv@quotient+1,f,c
  3467  00189C  B0D8               	btfsc	status,0,c
  3468  00189E  2A31               	incf	___awdiv@quotient+1,f,c
  3469  0018A0  D000               	goto	l1954
  3470  0018A2                     l1954:
  3471  0018A2  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  3472  0018A6  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  3473  0018AA  0012               	return	
  3474  0018AC  0012               	return		;funcret
  3475  0018AE                     __end_of___awdiv:
  3476                           	opt stack 0
  3477                           tblptru	equ	0xFF8
  3478                           tblptrh	equ	0xFF7
  3479                           tblptrl	equ	0xFF6
  3480                           tablat	equ	0xFF5
  3481                           prodh	equ	0xFF4
  3482                           prodl	equ	0xFF3
  3483                           indf0	equ	0xFEF
  3484                           postinc0	equ	0xFEE
  3485                           fsr0h	equ	0xFEA
  3486                           fsr0l	equ	0xFE9
  3487                           wreg	equ	0xFE8
  3488                           postdec1	equ	0xFE5
  3489                           fsr1l	equ	0xFE1
  3490                           indf2	equ	0xFDF
  3491                           postinc2	equ	0xFDE
  3492                           postdec2	equ	0xFDD
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497 ;; *************** function _RtccWriteTime *****************
  3498 ;; Defined at:
  3499 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  pTm             2    0[COMRAM] PTR const struct .
  3502 ;;		 -> RtccTime(4), 
  3503 ;;  di              1    2[COMRAM] enum E7121
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  tempHourWDay    2    9[COMRAM] struct .
  3506 ;;  tempMinSec      2    7[COMRAM] struct .
  3507 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3508 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3509 ;;  wasOn           1    4[COMRAM] enum E7121
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      enum E7337
  3512 ;; Registers used:
  3513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3519 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3520 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;Total ram usage:       11 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    1
  3526 ;; This function calls:
  3527 ;;		_RtccWrOn
  3528 ;; This function is called by:
  3529 ;;		_Write_RTC
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text19
  3534  00170C                     __ptext19:
  3535                           	opt stack 0
  3536  00170C                     _RtccWriteTime:
  3537                           	opt stack 27
  3538                           
  3539                           ;incstack = 0
  3540  00170C  0E00               	movlw	0
  3541  00170E  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  3542  001710  EE20 F002          	lfsr	2,2
  3543  001714  502A               	movf	RtccWriteTime@pTm,w,c
  3544  001716  26D9               	addwf	fsr2l,f,c
  3545  001718  502B               	movf	RtccWriteTime@pTm+1,w,c
  3546  00171A  22DA               	addwfc	fsr2h,f,c
  3547  00171C  0E5A               	movlw	90
  3548  00171E  60DF               	cpfslt	indf2,c
  3549  001720  0012               	return	
  3550  001722  EE20 F001          	lfsr	2,1
  3551  001726  502A               	movf	RtccWriteTime@pTm,w,c
  3552  001728  26D9               	addwf	fsr2l,f,c
  3553  00172A  502B               	movf	RtccWriteTime@pTm+1,w,c
  3554  00172C  22DA               	addwfc	fsr2h,f,c
  3555  00172E  0E5A               	movlw	90
  3556  001730  60DF               	cpfslt	indf2,c
  3557  001732  0012               	return	
  3558  001734  EE20 F003          	lfsr	2,3
  3559  001738  502A               	movf	RtccWriteTime@pTm,w,c
  3560  00173A  26D9               	addwf	fsr2l,f,c
  3561  00173C  502B               	movf	RtccWriteTime@pTm+1,w,c
  3562  00173E  22DA               	addwfc	fsr2h,f,c
  3563  001740  0E24               	movlw	36
  3564  001742  64DF               	cpfsgt	indf2,c
  3565  001744  D002               	goto	l1772
  3566  001746  0012               	return	
  3567                           
  3568                           ;	Return value of _RtccWriteTime is never used
  3569  001748  0012               	return	
  3570  00174A                     l1772:
  3571  00174A  EE20 F002          	lfsr	2,2
  3572  00174E  502A               	movf	RtccWriteTime@pTm,w,c
  3573  001750  26D9               	addwf	fsr2l,f,c
  3574  001752  502B               	movf	RtccWriteTime@pTm+1,w,c
  3575  001754  22DA               	addwfc	fsr2h,f,c
  3576  001756  50DF               	movf	indf2,w,c
  3577  001758  6E32               	movwf	RtccWriteTime@tempMinSec+1,c
  3578  00175A  EE20 F001          	lfsr	2,1
  3579  00175E  502A               	movf	RtccWriteTime@pTm,w,c
  3580  001760  26D9               	addwf	fsr2l,f,c
  3581  001762  502B               	movf	RtccWriteTime@pTm+1,w,c
  3582  001764  22DA               	addwfc	fsr2h,f,c
  3583  001766  50DF               	movf	indf2,w,c
  3584  001768  6E31               	movwf	RtccWriteTime@tempMinSec,c
  3585  00176A  502C               	movf	RtccWriteTime@di,w,c
  3586  00176C  B4D8               	btfsc	status,2,c
  3587  00176E  D002               	goto	l1778
  3588  001770  9CF2               	bcf	intcon,6,c	;volatile
  3589  001772  D000               	goto	l1778
  3590  001774                     l1778:
  3591  001774  0E00               	movlw	0
  3592  001776  BB3F               	btfsc	63,5,b	;volatile
  3593  001778  0E01               	movlw	1
  3594  00177A  6E30               	movwf	RtccWriteTime@wasWrEn,c
  3595  00177C  5030               	movf	RtccWriteTime@wasWrEn,w,c
  3596  00177E  A4D8               	btfss	status,2,c
  3597  001780  D003               	goto	l1782
  3598  001782  EC32  F00E         	call	_RtccWrOn	;wreg free
  3599  001786  D000               	goto	l1782
  3600  001788                     l1782:
  3601  001788  0E00               	movlw	0
  3602  00178A  BF3F               	btfsc	63,7,b	;volatile
  3603  00178C  0E01               	movlw	1
  3604  00178E  6E2E               	movwf	RtccWriteTime@wasOn,c
  3605  001790  502E               	movf	RtccWriteTime@wasOn,w,c
  3606  001792  B4D8               	btfsc	status,2,c
  3607  001794  D007               	goto	l1788
  3608  001796  0E00               	movlw	0
  3609  001798  BE91               	btfsc	3985,7,c	;volatile
  3610  00179A  0E01               	movlw	1
  3611  00179C  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  3612  00179E  010F               	movlb	15	; () banked
  3613  0017A0  9F3F               	bcf	63,7,b	;volatile
  3614  0017A2  D000               	goto	l1788
  3615  0017A4                     l1788:
  3616  0017A4  0EFC               	movlw	252
  3617  0017A6  010F               	movlb	15	; () banked
  3618  0017A8  173F               	andwf	63,f,b	;volatile
  3619  0017AA  010F               	movlb	15	; () banked
  3620  0017AC  813F               	bsf	63,0,b	;volatile
  3621                           
  3622                           ; BSR set to: 15
  3623  0017AE  CF98 F033          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3624                           
  3625                           ; BSR set to: 15
  3626  0017B2  CF99 F034          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3627                           
  3628                           ; BSR set to: 15
  3629  0017B6  EE20 F003          	lfsr	2,3
  3630  0017BA  502A               	movf	RtccWriteTime@pTm,w,c
  3631  0017BC  26D9               	addwf	fsr2l,f,c
  3632  0017BE  502B               	movf	RtccWriteTime@pTm+1,w,c
  3633  0017C0  22DA               	addwfc	fsr2h,f,c
  3634  0017C2  50DF               	movf	indf2,w,c
  3635  0017C4  6E33               	movwf	RtccWriteTime@tempHourWDay,c
  3636                           
  3637                           ; BSR set to: 15
  3638  0017C6  0EFC               	movlw	252
  3639  0017C8  010F               	movlb	15	; () banked
  3640  0017CA  173F               	andwf	63,f,b	;volatile
  3641                           
  3642                           ; BSR set to: 15
  3643  0017CC  010F               	movlb	15	; () banked
  3644  0017CE  813F               	bsf	63,0,b	;volatile
  3645                           
  3646                           ; BSR set to: 15
  3647  0017D0  C033  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3648                           
  3649                           ; BSR set to: 15
  3650  0017D4  C034  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3651                           
  3652                           ; BSR set to: 15
  3653  0017D8  C031  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3654                           
  3655                           ; BSR set to: 15
  3656  0017DC  C032  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3657                           
  3658                           ; BSR set to: 15
  3659  0017E0  502E               	movf	RtccWriteTime@wasOn,w,c
  3660  0017E2  B4D8               	btfsc	status,2,c
  3661  0017E4  D00D               	goto	l1820
  3662                           
  3663                           ; BSR set to: 15
  3664  0017E6  010F               	movlb	15	; () banked
  3665  0017E8  8F3F               	bsf	63,7,b	;volatile
  3666                           
  3667                           ; BSR set to: 15
  3668  0017EA  502F               	movf	RtccWriteTime@wasAlrm,w,c
  3669  0017EC  B4D8               	btfsc	status,2,c
  3670  0017EE  D002               	goto	l1816
  3671                           
  3672                           ; BSR set to: 15
  3673  0017F0  8E91               	bsf	3985,7,c	;volatile
  3674  0017F2  D000               	goto	l1816
  3675  0017F4                     l1816:
  3676                           
  3677                           ; BSR set to: 15
  3678  0017F4  5030               	movf	RtccWriteTime@wasWrEn,w,c
  3679  0017F6  B4D8               	btfsc	status,2,c
  3680  0017F8  D009               	goto	l1824
  3681                           
  3682                           ; BSR set to: 15
  3683  0017FA  EC32  F00E         	call	_RtccWrOn	;wreg free
  3684  0017FE  D006               	goto	l1824
  3685  001800                     l1820:
  3686  001800  5030               	movf	RtccWriteTime@wasWrEn,w,c
  3687  001802  A4D8               	btfss	status,2,c
  3688  001804  D003               	goto	l1824
  3689  001806  010F               	movlb	15	; () banked
  3690  001808  9B3F               	bcf	63,5,b	;volatile
  3691                           
  3692                           ; BSR set to: 15
  3693  00180A  D000               	goto	l1824
  3694  00180C                     l1824:
  3695  00180C  502C               	movf	RtccWriteTime@di,w,c
  3696  00180E  B4D8               	btfsc	status,2,c
  3697  001810  0012               	return	
  3698  001812  8CF2               	bsf	intcon,6,c	;volatile
  3699  001814  0012               	return	
  3700                           
  3701                           ;	Return value of _RtccWriteTime is never used
  3702  001816  0012               	return		;funcret
  3703  001818                     __end_of_RtccWriteTime:
  3704                           	opt stack 0
  3705                           tblptru	equ	0xFF8
  3706                           tblptrh	equ	0xFF7
  3707                           tblptrl	equ	0xFF6
  3708                           tablat	equ	0xFF5
  3709                           prodh	equ	0xFF4
  3710                           prodl	equ	0xFF3
  3711                           intcon	equ	0xFF2
  3712                           indf0	equ	0xFEF
  3713                           postinc0	equ	0xFEE
  3714                           fsr0h	equ	0xFEA
  3715                           fsr0l	equ	0xFE9
  3716                           wreg	equ	0xFE8
  3717                           postdec1	equ	0xFE5
  3718                           fsr1l	equ	0xFE1
  3719                           indf2	equ	0xFDF
  3720                           postinc2	equ	0xFDE
  3721                           postdec2	equ	0xFDD
  3722                           fsr2h	equ	0xFDA
  3723                           fsr2l	equ	0xFD9
  3724                           status	equ	0xFD8
  3725                           
  3726 ;; *************** function _RtccWriteDate *****************
  3727 ;; Defined at:
  3728 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  pDt             2    0[COMRAM] PTR const struct .
  3731 ;;		 -> RtccDate(4), 
  3732 ;;  di              1    2[COMRAM] enum E7121
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  tempHourWDay    2   11[COMRAM] struct .
  3735 ;;  tempDayMonth    2    9[COMRAM] struct .
  3736 ;;  tempYear        2    6[COMRAM] struct .
  3737 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3738 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3739 ;;  wasOn           1    4[COMRAM] enum E7121
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      enum E7337
  3742 ;; Registers used:
  3743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3749 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;Total ram usage:       13 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    1
  3756 ;; This function calls:
  3757 ;;		_RtccWrOn
  3758 ;; This function is called by:
  3759 ;;		_Write_RTC
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text20
  3764  0015C6                     __ptext20:
  3765                           	opt stack 0
  3766  0015C6                     _RtccWriteDate:
  3767                           	opt stack 27
  3768                           
  3769                           ;incstack = 0
  3770  0015C6  0E00               	movlw	0
  3771  0015C8  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  3772  0015CA  EE20 F002          	lfsr	2,2
  3773  0015CE  502A               	movf	RtccWriteDate@pDt,w,c
  3774  0015D0  26D9               	addwf	fsr2l,f,c
  3775  0015D2  502B               	movf	RtccWriteDate@pDt+1,w,c
  3776  0015D4  22DA               	addwfc	fsr2h,f,c
  3777  0015D6  0E13               	movlw	19
  3778  0015D8  60DF               	cpfslt	indf2,c
  3779  0015DA  0012               	return	
  3780  0015DC  EE20 F002          	lfsr	2,2
  3781  0015E0  502A               	movf	RtccWriteDate@pDt,w,c
  3782  0015E2  26D9               	addwf	fsr2l,f,c
  3783  0015E4  502B               	movf	RtccWriteDate@pDt+1,w,c
  3784  0015E6  22DA               	addwfc	fsr2h,f,c
  3785  0015E8  50DF               	movf	indf2,w,c
  3786  0015EA  B4D8               	btfsc	status,2,c
  3787  0015EC  0012               	return	
  3788  0015EE  EE20 F001          	lfsr	2,1
  3789  0015F2  502A               	movf	RtccWriteDate@pDt,w,c
  3790  0015F4  26D9               	addwf	fsr2l,f,c
  3791  0015F6  502B               	movf	RtccWriteDate@pDt+1,w,c
  3792  0015F8  22DA               	addwfc	fsr2h,f,c
  3793  0015FA  0E32               	movlw	50
  3794  0015FC  60DF               	cpfslt	indf2,c
  3795  0015FE  0012               	return	
  3796  001600  EE20 F001          	lfsr	2,1
  3797  001604  502A               	movf	RtccWriteDate@pDt,w,c
  3798  001606  26D9               	addwf	fsr2l,f,c
  3799  001608  502B               	movf	RtccWriteDate@pDt+1,w,c
  3800  00160A  22DA               	addwfc	fsr2h,f,c
  3801  00160C  50DF               	movf	indf2,w,c
  3802  00160E  B4D8               	btfsc	status,2,c
  3803  001610  0012               	return	
  3804  001612  EE20 F003          	lfsr	2,3
  3805  001616  502A               	movf	RtccWriteDate@pDt,w,c
  3806  001618  26D9               	addwf	fsr2l,f,c
  3807  00161A  502B               	movf	RtccWriteDate@pDt+1,w,c
  3808  00161C  22DA               	addwfc	fsr2h,f,c
  3809  00161E  0E99               	movlw	153
  3810  001620  64DF               	cpfsgt	indf2,c
  3811  001622  D002               	goto	l1840
  3812  001624  0012               	return	
  3813                           
  3814                           ;	Return value of _RtccWriteDate is never used
  3815  001626  0012               	return	
  3816  001628                     l1840:
  3817  001628  EE20 F003          	lfsr	2,3
  3818  00162C  502A               	movf	RtccWriteDate@pDt,w,c
  3819  00162E  26D9               	addwf	fsr2l,f,c
  3820  001630  502B               	movf	RtccWriteDate@pDt+1,w,c
  3821  001632  22DA               	addwfc	fsr2h,f,c
  3822  001634  50DF               	movf	indf2,w,c
  3823  001636  6E30               	movwf	RtccWriteDate@tempYear,c
  3824  001638  EE20 F001          	lfsr	2,1
  3825  00163C  502A               	movf	RtccWriteDate@pDt,w,c
  3826  00163E  26D9               	addwf	fsr2l,f,c
  3827  001640  502B               	movf	RtccWriteDate@pDt+1,w,c
  3828  001642  22DA               	addwfc	fsr2h,f,c
  3829  001644  50DF               	movf	indf2,w,c
  3830  001646  6E33               	movwf	RtccWriteDate@tempDayMonth,c
  3831  001648  EE20 F002          	lfsr	2,2
  3832  00164C  502A               	movf	RtccWriteDate@pDt,w,c
  3833  00164E  26D9               	addwf	fsr2l,f,c
  3834  001650  502B               	movf	RtccWriteDate@pDt+1,w,c
  3835  001652  22DA               	addwfc	fsr2h,f,c
  3836  001654  50DF               	movf	indf2,w,c
  3837  001656  6E34               	movwf	RtccWriteDate@tempDayMonth+1,c
  3838  001658  502C               	movf	RtccWriteDate@di,w,c
  3839  00165A  B4D8               	btfsc	status,2,c
  3840  00165C  D002               	goto	l1846
  3841  00165E  9CF2               	bcf	intcon,6,c	;volatile
  3842  001660  D000               	goto	l1846
  3843  001662                     l1846:
  3844  001662  0E00               	movlw	0
  3845  001664  BB3F               	btfsc	63,5,b	;volatile
  3846  001666  0E01               	movlw	1
  3847  001668  6E32               	movwf	RtccWriteDate@wasWrEn,c
  3848  00166A  5032               	movf	RtccWriteDate@wasWrEn,w,c
  3849  00166C  A4D8               	btfss	status,2,c
  3850  00166E  D003               	goto	l1850
  3851  001670  EC32  F00E         	call	_RtccWrOn	;wreg free
  3852  001674  D000               	goto	l1850
  3853  001676                     l1850:
  3854  001676  0E00               	movlw	0
  3855  001678  BF3F               	btfsc	63,7,b	;volatile
  3856  00167A  0E01               	movlw	1
  3857  00167C  6E2E               	movwf	RtccWriteDate@wasOn,c
  3858  00167E  502E               	movf	RtccWriteDate@wasOn,w,c
  3859  001680  B4D8               	btfsc	status,2,c
  3860  001682  D007               	goto	l1856
  3861  001684  0E00               	movlw	0
  3862  001686  BE91               	btfsc	3985,7,c	;volatile
  3863  001688  0E01               	movlw	1
  3864  00168A  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  3865  00168C  010F               	movlb	15	; () banked
  3866  00168E  9F3F               	bcf	63,7,b	;volatile
  3867  001690  D000               	goto	l1856
  3868  001692                     l1856:
  3869  001692  0EFC               	movlw	252
  3870  001694  010F               	movlb	15	; () banked
  3871  001696  173F               	andwf	63,f,b	;volatile
  3872  001698  010F               	movlb	15	; () banked
  3873  00169A  813F               	bsf	63,0,b	;volatile
  3874                           
  3875                           ; BSR set to: 15
  3876  00169C  CF98 F035          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3877                           
  3878                           ; BSR set to: 15
  3879  0016A0  CF99 F036          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3880                           
  3881                           ; BSR set to: 15
  3882  0016A4  C02A  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3883  0016A8  C02B  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3884  0016AC  50DF               	movf	indf2,w,c
  3885  0016AE  6E36               	movwf	RtccWriteDate@tempHourWDay+1,c
  3886                           
  3887                           ; BSR set to: 15
  3888  0016B0  0EFC               	movlw	252
  3889  0016B2  010F               	movlb	15	; () banked
  3890  0016B4  173F               	andwf	63,f,b	;volatile
  3891                           
  3892                           ; BSR set to: 15
  3893  0016B6  0E03               	movlw	3
  3894  0016B8  010F               	movlb	15	; () banked
  3895  0016BA  133F               	iorwf	63,f,b	;volatile
  3896                           
  3897                           ; BSR set to: 15
  3898  0016BC  C030  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3899                           
  3900                           ; BSR set to: 15
  3901  0016C0  C031  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3902                           
  3903                           ; BSR set to: 15
  3904  0016C4  C033  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3905                           
  3906                           ; BSR set to: 15
  3907  0016C8  C034  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3908                           
  3909                           ; BSR set to: 15
  3910  0016CC  C035  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3911                           
  3912                           ; BSR set to: 15
  3913  0016D0  C036  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3914                           
  3915                           ; BSR set to: 15
  3916  0016D4  502E               	movf	RtccWriteDate@wasOn,w,c
  3917  0016D6  B4D8               	btfsc	status,2,c
  3918  0016D8  D00D               	goto	l1892
  3919                           
  3920                           ; BSR set to: 15
  3921  0016DA  010F               	movlb	15	; () banked
  3922  0016DC  8F3F               	bsf	63,7,b	;volatile
  3923                           
  3924                           ; BSR set to: 15
  3925  0016DE  502F               	movf	RtccWriteDate@wasAlrm,w,c
  3926  0016E0  B4D8               	btfsc	status,2,c
  3927  0016E2  D002               	goto	l1888
  3928                           
  3929                           ; BSR set to: 15
  3930  0016E4  8E91               	bsf	3985,7,c	;volatile
  3931  0016E6  D000               	goto	l1888
  3932  0016E8                     l1888:
  3933                           
  3934                           ; BSR set to: 15
  3935  0016E8  5032               	movf	RtccWriteDate@wasWrEn,w,c
  3936  0016EA  B4D8               	btfsc	status,2,c
  3937  0016EC  D009               	goto	l1896
  3938                           
  3939                           ; BSR set to: 15
  3940  0016EE  EC32  F00E         	call	_RtccWrOn	;wreg free
  3941  0016F2  D006               	goto	l1896
  3942  0016F4                     l1892:
  3943  0016F4  5032               	movf	RtccWriteDate@wasWrEn,w,c
  3944  0016F6  A4D8               	btfss	status,2,c
  3945  0016F8  D003               	goto	l1896
  3946  0016FA  010F               	movlb	15	; () banked
  3947  0016FC  9B3F               	bcf	63,5,b	;volatile
  3948                           
  3949                           ; BSR set to: 15
  3950  0016FE  D000               	goto	l1896
  3951  001700                     l1896:
  3952  001700  502C               	movf	RtccWriteDate@di,w,c
  3953  001702  B4D8               	btfsc	status,2,c
  3954  001704  0012               	return	
  3955  001706  9CF2               	bcf	intcon,6,c	;volatile
  3956  001708  0012               	return	
  3957                           
  3958                           ;	Return value of _RtccWriteDate is never used
  3959  00170A  0012               	return		;funcret
  3960  00170C                     __end_of_RtccWriteDate:
  3961                           	opt stack 0
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           prodh	equ	0xFF4
  3967                           prodl	equ	0xFF3
  3968                           intcon	equ	0xFF2
  3969                           indf0	equ	0xFEF
  3970                           postinc0	equ	0xFEE
  3971                           fsr0h	equ	0xFEA
  3972                           fsr0l	equ	0xFE9
  3973                           wreg	equ	0xFE8
  3974                           postdec1	equ	0xFE5
  3975                           fsr1l	equ	0xFE1
  3976                           indf2	equ	0xFDF
  3977                           postinc2	equ	0xFDE
  3978                           postdec2	equ	0xFDD
  3979                           fsr2h	equ	0xFDA
  3980                           fsr2l	equ	0xFD9
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _RtccWrOn *****************
  3984 ;; Defined at:
  3985 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  data            2    0        unsigned int 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;		None               void
  3992 ;; Registers used:
  3993 ;;		wreg, status,2
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_Write_RTC
  4009 ;;		_RtccWriteDate
  4010 ;;		_RtccWriteTime
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text21
  4015  001C64                     __ptext21:
  4016                           	opt stack 0
  4017  001C64                     _RtccWrOn:
  4018                           	opt stack 27
  4019                           
  4020                           ;incstack = 0
  4021  001C64  9CF2               	bcf	intcon,6,c	;volatile
  4022  001C66  0E55               	movlw	85
  4023  001C68  6EA7               	movwf	4007,c	;volatile
  4024  001C6A  0EAA               	movlw	170
  4025  001C6C  6EA7               	movwf	4007,c	;volatile
  4026  001C6E  010F               	movlb	15	; () banked
  4027  001C70  8B3F               	bsf	63,5,b	;volatile
  4028                           
  4029                           ; BSR set to: 15
  4030  001C72  8CF2               	bsf	intcon,6,c	;volatile
  4031                           
  4032                           ; BSR set to: 15
  4033  001C74  0012               	return		;funcret
  4034  001C76                     __end_of_RtccWrOn:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           tblptrh	equ	0xFF7
  4038                           tblptrl	equ	0xFF6
  4039                           tablat	equ	0xFF5
  4040                           prodh	equ	0xFF4
  4041                           prodl	equ	0xFF3
  4042                           intcon	equ	0xFF2
  4043                           indf0	equ	0xFEF
  4044                           postinc0	equ	0xFEE
  4045                           fsr0h	equ	0xFEA
  4046                           fsr0l	equ	0xFE9
  4047                           wreg	equ	0xFE8
  4048                           postdec1	equ	0xFE5
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           postdec2	equ	0xFDD
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           indf0	equ	0xFEF
  4064                           postinc0	equ	0xFEE
  4065                           fsr0h	equ	0xFEA
  4066                           fsr0l	equ	0xFE9
  4067                           wreg	equ	0xFE8
  4068                           postdec1	equ	0xFE5
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077                           	psect	rparam
  4078  0000                     tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           intcon	equ	0xFF2
  4085                           indf0	equ	0xFEF
  4086                           postinc0	equ	0xFEE
  4087                           fsr0h	equ	0xFEA
  4088                           fsr0l	equ	0xFE9
  4089                           wreg	equ	0xFE8
  4090                           postdec1	equ	0xFE5
  4091                           fsr1l	equ	0xFE1
  4092                           indf2	equ	0xFDF
  4093                           postinc2	equ	0xFDE
  4094                           postdec2	equ	0xFDD
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    14
    Data        6
    BSS         77
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      93
    BANK0           160      0      36
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_9(CODE[2]), STR_5(CODE[2]), buffer2(BANK0[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _caratula->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13614
                                             31 COMRAM     1     1      0
                              _Setup
                           _caratula
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    2940
                                             12 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0    4217
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (1) _lcd_putrs                                            2     0      2    2686
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    1553
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1     885
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3771
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
   _lcd_putrs
     _lcd_putc
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      24       5       22.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     20      5D       1       97.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81       6        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Aug 23 18:56:26 2016

                        _a 000D                          _b 000F                          _c 0011  
                        _i 0017                          _j 0019                          _k 001B  
           ?_lcd_send_byte 002C               ___awdiv@sign 002F        ___wmul@multiplicand 002C  
              lcd_comand@d 002E               __CFG_CP0$OFF 000000                        l202 11CC  
                      l211 11FC                        l203 11C8                        l206 11E6  
                      l150 0F78                        l207 11E2                        l151 0F74  
                      l313 13EC                        l234 1B94                        l170 106A  
                      l162 0FFA                        l154 0FAC                        l235 1B96  
                      l171 1066                        l163 0FF6                        l155 0FA8  
                      l190 115C                        l182 10F4                        l174 109E  
                      l166 1036                        l158 0FE0                        l191 1158  
                      l183 10F0                        l175 109A                        l167 1032  
                      l159 0FDC                        l194 1176                        l186 1128  
                      l178 10B8                        l195 1172                        l187 1124  
                      l179 10B4                        l198 1198                        l199 1194  
                      l957 19F6                        l967 1A96                        _dia 0059  
                      _key 0021                        _mes 005B                        wreg 000FE8  
              lcd_gotoxy@x 002F                lcd_gotoxy@y 002E                       l2012 1A02  
                     l2102 1A8A                       l2024 18D4                       l2016 1A2C  
                     l2042 1900                       l2034 18EC                       l2028 18DC  
                     l2212 13F2                       l2204 13C2                       l2220 1452  
                     l2206 13CA                       l2222 146E                       l2150 1256  
                     l2152 126C                       l2144 123E                       l2232 0F3C  
                     l2074 19BA                       l2058 1C36                       l2218 1446  
                     l2170 1316                       l2146 124C                       l2138 1224  
                     l2076 19C4                       l2180 133E                       l2164 12EE  
                     l2156 128A                       l2086 19EA                       l2078 19CC  
                     l2094 1A62                       l2326 1204                       l1720 1C54  
                     l2096 1A6C                       l2192 138A                       l2184 1362  
                     l2176 1332                       l2168 12F4                       l2098 1A74  
                     l2194 1394                       l1820 1800                       l2188 1366  
                     l1902 1AA4                       l2198 13A0                       l1840 1628  
                     l1824 180C                       l1816 17F4                       l1760 1C42  
                     l1904 1AB0                       l1912 1AD4                       l1850 1676  
                     l1922 182E                       l1754 1C06                       l1906 1ABC  
                     l1772 174A                       l1756 1C0C                       l1908 1AC8  
                     l1846 1662                       l1782 1788                       l1934 1856  
                     l1950 1892                       l1856 1692                       l1936 1860  
                     l1928 1840                       l1778 1774                       l1954 18A2  
                     l1946 1886                       l1938 1868                       l1892 16F4  
                     l1788 17A4                       l1896 1700                       l1888 16E8  
                     STR_1 0F0F                       STR_2 0F20                       STR_3 0F20  
                     STR_4 0F20                       STR_5 0F29                       STR_6 0F20  
                     STR_7 0F20                       STR_8 0F20                       STR_9 0F2B  
                     u1030 193A                       u1050 1952                       u1108 198A  
                     u1070 196C                       u1048 193C                       u1090 1988  
                     u1068 1954                       u1430 1A22                       u1088 196E  
                     u1440 1A4C                       u2057 120A                       u2067 1C44  
                     u2077 1C56                       u1437 1A18                       u1447 1A42  
         ?_lcd_send_nibble 002A                       _anio 0057                       _flag 02E8  
                     _main 0F32                       _hora 0015                       fsr0h 000FEA  
                     indf0 000FEF                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
            __CFG_T1DIG$ON 000000                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000               ___param_bank 000010  
              _Delay1KTCYx 1C40              __CFG_PLLDIV$1 000000                      ?_main 002A  
          __end_of___awdiv 18AE                      STR_10 0F20                      STR_11 0F20  
                    STR_12 0F20                      STR_13 0F2D                      STR_14 0F27  
                    STR_15 0F20                      STR_16 0F25                      STR_17 0F2F  
    __size_of_Delay100TCYx 0012            ___awdiv@divisor 002C            __end_of___lwdiv 1A00  
          __end_of___lwmod 1AA0            ___awdiv@counter 002E                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94             __CFG_FCMEN$OFF 000000  
                    _Setup 1AEC            __end_of_dpowers 0F0B                      _mes_d 0051  
                    _mes_u 0052            __end_of_isdigit 1C40             __pbitbssCOMRAM 02E8  
                    tablat 000FF5               lcd_putrs@ptr 0032                      status 000FD8  
          __end_of_sprintf 147E    __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1B34  
             _Delay100TCYx 1C52               __end_of_main 121A            ??_lcd_send_byte 002D  
                   ??_main 0049              __activetblptr 000002           __end_of_RtccWrOn 1C76  
                   ?_Setup 002A                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _EECON2 000FA7                     _ANCON0 000F48                     _ANCON1 000F49  
         ___awdiv@dividend 002A             __CFG_WDTEN$OFF 000000           RtccWriteDate@pDt 002A  
                   _RTCCFG 000F3F             __CFG_WPCFG$OFF 000000           __end_of_caratula 1BFA  
           __CFG_WPDIS$OFF 000000             __CFG_XINST$OFF 000000           __end_of_lcd_init 192E  
         __end_of_lcd_putc 1AEC                     ___wmul 1BAA                  ??___awdiv 002E  
           __CFG_STVREN$ON 000000                     _diasem 0013                     _anio_d 004A  
                   _anio_u 004B                  ??___lwdiv 002E                  ??___lwmod 0035  
                   _hora_d 004F                     _hora_u 0050                     clear_0 1B3A  
                   clear_1 1B48           ___awdiv@quotient 0030                     _minuto 001D  
    __end_of_RtccWriteDate 170C      __end_of_RtccWriteTime 1818           RtccWriteTime@pTm 002A  
             __pdataCOMRAM 0057                  ??_isdigit 002A               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_sprintf 003C                 __accesstop 0060    __end_of__initialization 1B6E  
       __size_of_Write_RTC 0148              ___rparam_used 000001             __pcstackCOMRAM 002A  
            __end_of_Setup 1B34            __CFG_DSWDTPS$G2 000000            __CFG_OSC$INTOSC 000000  
                  ??_Setup 0037          lcd_gotoxy@address 0030         __size_of_lcd_putrs 0054  
             sprintf@width 0046                 __pbssBANK0 0060                 _dia_semana 004C  
RtccWriteTime@tempHourWDay 0033                 __pnvCOMRAM 004A                  ?_RtccWrOn 002A  
           lcd_send_byte@n 002C                    ?___wmul 002A               ?_Delay1KTCYx 002A  
        __end_of_Write_RTC 15C6                 _lcd_comand 1C76                  ?_caratula 002A  
               _lcd_gotoxy 1BFA                    _RTCVALH 000F99                    _RTCVALL 000F98  
                ?_lcd_init 002A                  ?_lcd_putc 002A                    __Hparam 0000  
                  __Lparam 0000   __size_of_lcd_send_nibble 0076                 ??_RtccWrOn 002A  
                  ___awdiv 1818          __end_of_lcd_putrs 1A54            __size_of___wmul 0028  
                  ___lwdiv 19A4                    ___lwmod 1A54               __psmallconst 0F00  
              _RtccTimeVal 0009                    __pcinit 1B34                    _fecha_d 004D  
                  _fecha_u 004E                    __ramtop 0F00                    __ptext0 0F32  
                  __ptext1 121A                    __ptext2 1C1E                    __ptext3 1BAA  
                  __ptext4 1A54                    __ptext5 19A4                    __ptext6 1BD2  
                  __ptext7 1A00                    __ptext8 1AA0                    __ptext9 1BFA  
                  _buffer2 0070                  _T1CONbits 000FCD                    _dpowers 0F01  
                  _isdigit 1C1E                 ??_caratula 0034                    _segundo 001F  
                  _sprintf 121A                 ??_lcd_init 002E                 ??_lcd_putc 0031  
     end_of_initialization 1B6E       lcd_send_byte@address 002D              __Lmediumconst 0000  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE      __end_of_lcd_send_byte 1BAA                  _PORTAbits 000F80  
                _PORTCbits 000F82           __CFG_DSBOREN$OFF 000000                ?_lcd_comand 002A  
         __CFG_CPUDIV$OSC1 000000                  _TRISBbits 000F93                ?_lcd_gotoxy 002E  
          _LCD_INIT_STRING 0F0B           __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 0033  
      __CFG_MSSP7B_EN$MSK7 000000           Delay100TCYx@unit 002A             __end_of___wmul 1BD2  
            __pidataCOMRAM 1C84  RtccWriteDate@tempHourWDay 0035          ??_lcd_send_nibble 002A  
     __size_of_Delay1KTCYx 0012           __CFG_DSWDTEN$OFF 000000        start_initialization 1B34  
     RtccWriteTime@wasAlrm 002F       RtccWriteTime@wasWrEn 0030     __size_of_RtccWriteDate 0146  
          RtccWriteDate@di 002C     __size_of_RtccWriteTime 010C        __size_of_lcd_comand 000E  
      __size_of_lcd_gotoxy 0024                   ??___wmul 002E          __size_of_RtccWrOn 0012  
          RtccWriteTime@di 002C           __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91  
  __end_of_LCD_INIT_STRING 0F0F                __pbssCOMRAM 0001                  _Write_RTC 147E  
             _isdigit$2039 002B          __size_of_caratula 0028            Delay1KTCYx@unit 002A  
        __size_of_lcd_init 0080                sprintf@flag 0042          __size_of_lcd_putc 004C  
              sprintf@prec 0045           ___lwdiv@dividend 002A              ?_Delay100TCYx 002A  
                 ?___awdiv 002A                   ?___lwdiv 002A                   ?___lwmod 0031  
  RtccWriteTime@tempMinSec 0031                  _lcd_putrs 1A00              _RtccWriteDate 15C6  
              __smallconst 0F00              _RtccWriteTime 170C                   ?_isdigit 002A  
     __CFG_RTCOSC$T1OSCREF 000000             __size_of_Setup 0048                 ?_Write_RTC 002A  
         ___lwdiv@quotient 002E                   ?_sprintf 0036           _RtccAlrmTimeDate 0060  
           ___wmul@product 002E                   _LATAbits 000F89                   _LATBbits 000F8A  
                 _PIE3bits 000FA3                  _segundo_d 0055             ??_Delay100TCYx 002A  
                _segundo_u 0056           __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 002E  
       _Rtcc_read_TimeDate 0068             ?_RtccWriteDate 002A                 ?_lcd_putrs 0032  
        ___wmul@multiplier 002A             ?_RtccWriteTime 002A                  lcd_init@i 002E  
             ??_lcd_comand 002E                  lcd_putc@c 0031               ??_lcd_gotoxy 002F  
                copy_data0 1B62            _lcd_send_nibble 192E                   __Hrparam 0000  
                 _RtccDate 0022                   __Lrparam 0000                   _RtccTime 0026  
                 _RtccWrOn 1C64         __end_of_lcd_comand 1C84         __end_of_lcd_gotoxy 1C1E  
         __size_of___awdiv 0096           __size_of___lwdiv 005C           __size_of___lwmod 004C  
             _RtccTimeDate 0001                 sprintf@val 0043                   _caratula 1BD2  
         __size_of_isdigit 0022            ___lwdiv@divisor 002C                ??_Write_RTC 0037  
          ___lwdiv@counter 0030                   __ptext10 1AEC                   __ptext11 18AE  
                 __ptext20 15C6                   __ptext12 1C40                   __ptext21 1C64  
                 __ptext13 1C76                   __ptext14 1B78                   __ptext15 192E  
                 __ptext16 1C52                   __ptext17 147E                   __ptext18 1818  
                 __ptext19 170C                   _lcd_init 18AE                   _lcd_putc 1AA0  
         __size_of_sprintf 0264     __size_of_lcd_send_byte 0032              __size_of_main 02E8  
                 _minuto_d 0053                   _minuto_u 0054              ??_Delay1KTCYx 002A  
          ??_RtccWriteDate 002D            ??_RtccWriteTime 002D                ??_lcd_putrs 0034  
              _OSCTUNEbits 000F9B                 _INTCONbits 000FF2         RtccWriteTime@wasOn 002E  
     __end_of_Delay100TCYx 1C64                   isdigit@c 002C                  sprintf@ap 0040  
  __end_of_lcd_send_nibble 19A4                  sprintf@sp 0036           ___lwmod@dividend 0031  
               _OSCCONbits 000FD3      RtccWriteDate@tempYear 0030              _lcd_send_byte 1B78  
               _RTCCFGbits 000F3F                   sprintf@c 0048                   sprintf@f 0038  
          ___lwmod@divisor 0033        __end_of_Delay1KTCYx 1C52            ___lwmod@counter 0035  
     RtccWriteDate@wasAlrm 002F       RtccWriteDate@wasWrEn 0032      lcd_send_nibble@nibble 002B  
