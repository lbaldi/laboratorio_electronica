

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 13 19:25:21 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataCOMRAM
    63  00238C                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _anio
    67  00238C  0010               	dw	16
    68                           
    69                           ;initializer for _dia
    70  00238E  0006               	dw	6
    71                           
    72                           ;initializer for _diasem
    73  002390  0002               	dw	2
    74                           
    75                           ;initializer for _hora
    76  002392  0012               	dw	18
    77                           
    78                           ;initializer for _mes
    79  002394  0009               	dw	9
    80                           
    81                           	psect	smallconst
    82  000F00                     __psmallconst:
    83                           	opt stack 0
    84  000F00  00                 	db	0
    85  000F01                     _dpowers:
    86                           	opt stack 0
    87  000F01  0001               	dw	1
    88  000F03  000A               	dw	10
    89  000F05  0064               	dw	100
    90  000F07  03E8               	dw	1000
    91  000F09  2710               	dw	10000
    92  000F0B                     __end_of_dpowers:
    93                           	opt stack 0
    94  000F0B                     _LCD_INIT_STRING:
    95                           	opt stack 0
    96  000F0B  28                 	db	40
    97  000F0C  0C                 	db	12
    98  000F0D  01                 	db	1
    99  000F0E  06                 	db	6
   100  000F0F                     __end_of_LCD_INIT_STRING:
   101                           	opt stack 0
   102  000F0F                     STR_5:
   103                           
   104                           ; BSR set to: 15
   105  000F0F  49                 	db	73	;'I'
   106  000F10  6E                 	db	110	;'n'
   107  000F11  67                 	db	103	;'g'
   108  000F12  72                 	db	114	;'r'
   109  000F13  65                 	db	101	;'e'
   110  000F14  73                 	db	115	;'s'
   111  000F15  65                 	db	101	;'e'
   112  000F16  20                 	db	32
   113  000F17  73                 	db	115	;'s'
   114  000F18  75                 	db	117	;'u'
   115  000F19  20                 	db	32
   116  000F1A  50                 	db	80	;'P'
   117  000F1B  49                 	db	73	;'I'
   118  000F1C  4E                 	db	78	;'N'
   119  000F1D  3A                 	db	58	;':'
   120  000F1E  00                 	db	0
   121  000F1F                     STR_2:
   122                           
   123                           ; BSR set to: 15
   124  000F1F  25                 	db	37
   125  000F20  30                 	db	48	;'0'
   126  000F21  32                 	db	50	;'2'
   127  000F22  75                 	db	117	;'u'
   128  000F23  2F                 	db	47
   129  000F24  25                 	db	37
   130  000F25  30                 	db	48	;'0'
   131  000F26  32                 	db	50	;'2'
   132  000F27  75                 	db	117	;'u'
   133  000F28  2F                 	db	47
   134  000F29  25                 	db	37
   135  000F2A  30                 	db	48	;'0'
   136  000F2B  32                 	db	50	;'2'
   137  000F2C  75                 	db	117	;'u'
   138  000F2D  00                 	db	0
   139  000F2E                     STR_3:
   140                           
   141                           ; BSR set to: 15
   142  000F2E  25                 	db	37
   143  000F2F  30                 	db	48	;'0'
   144  000F30  32                 	db	50	;'2'
   145  000F31  75                 	db	117	;'u'
   146  000F32  3A                 	db	58	;':'
   147  000F33  25                 	db	37
   148  000F34  30                 	db	48	;'0'
   149  000F35  32                 	db	50	;'2'
   150  000F36  75                 	db	117	;'u'
   151  000F37  3A                 	db	58	;':'
   152  000F38  25                 	db	37
   153  000F39  30                 	db	48	;'0'
   154  000F3A  32                 	db	50	;'2'
   155  000F3B  75                 	db	117	;'u'
   156  000F3C  00                 	db	0
   157  000F3D                     STR_32:
   158                           
   159                           ; BSR set to: 15
   160  000F3D  56                 	db	86	;'V'
   161  000F3E  6F                 	db	111	;'o'
   162  000F3F  6C                 	db	108	;'l'
   163  000F40  75                 	db	117	;'u'
   164  000F41  6D                 	db	109	;'m'
   165  000F42  65                 	db	101	;'e'
   166  000F43  6E                 	db	110	;'n'
   167  000F44  00                 	db	0
   168  000F45                     STR_29:
   169                           
   170                           ; BSR set to: 15
   171  000F45  43                 	db	67	;'C'
   172  000F46  61                 	db	97	;'a'
   173  000F47  6D                 	db	109	;'m'
   174  000F48  62                 	db	98	;'b'
   175  000F49  69                 	db	105	;'i'
   176  000F4A  61                 	db	97	;'a'
   177  000F4B  72                 	db	114	;'r'
   178  000F4C  00                 	db	0
   179  000F4D                     STR_6:
   180                           
   181                           ; BSR set to: 15
   182  000F4D  41                 	db	65	;'A'
   183  000F4E  63                 	db	99	;'c'
   184  000F4F  74                 	db	116	;'t'
   185  000F50  69                 	db	105	;'i'
   186  000F51  76                 	db	118	;'v'
   187  000F52  61                 	db	97	;'a'
   188  000F53  72                 	db	114	;'r'
   189  000F54  00                 	db	0
   190  000F55                     STR_9:
   191                           
   192                           ; BSR set to: 15
   193  000F55  41                 	db	65	;'A'
   194  000F56  6C                 	db	108	;'l'
   195  000F57  61                 	db	97	;'a'
   196  000F58  72                 	db	114	;'r'
   197  000F59  6D                 	db	109	;'m'
   198  000F5A  61                 	db	97	;'a'
   199  000F5B  00                 	db	0
   200  000F5C                     STR_26:
   201                           
   202                           ; BSR set to: 15
   203  000F5C  46                 	db	70	;'F'
   204  000F5D  65                 	db	101	;'e'
   205  000F5E  63                 	db	99	;'c'
   206  000F5F  68                 	db	104	;'h'
   207  000F60  61                 	db	97	;'a'
   208  000F61  00                 	db	0
   209  000F62                     STR_7:
   210                           
   211                           ; BSR set to: 15
   212  000F62  52                 	db	82	;'R'
   213  000F63  65                 	db	101	;'e'
   214  000F64  6C                 	db	108	;'l'
   215  000F65  6F                 	db	111	;'o'
   216  000F66  6A                 	db	106	;'j'
   217  000F67  00                 	db	0
   218  000F68                     STR_30:
   219                           
   220                           ; BSR set to: 15
   221  000F68  52                 	db	82	;'R'
   222  000F69  65                 	db	101	;'e'
   223  000F6A  73                 	db	115	;'s'
   224  000F6B  65                 	db	101	;'e'
   225  000F6C  74                 	db	116	;'t'
   226  000F6D  00                 	db	0
   227  000F6E                     STR_1:
   228                           
   229                           ; BSR set to: 15
   230  000F6E  31                 	db	49	;'1'
   231  000F6F  32                 	db	50	;'2'
   232  000F70  33                 	db	51	;'3'
   233  000F71  34                 	db	52	;'4'
   234  000F72  00                 	db	0
   235  000F73                     STR_27:
   236                           
   237                           ; BSR set to: 15
   238  000F73  48                 	db	72	;'H'
   239  000F74  6F                 	db	111	;'o'
   240  000F75  72                 	db	114	;'r'
   241  000F76  61                 	db	97	;'a'
   242  000F77  00                 	db	0
   243  000F78                     STR_33:
   244                           
   245                           ; BSR set to: 15
   246  000F78  54                 	db	84	;'T'
   247  000F79  6F                 	db	111	;'o'
   248  000F7A  6E                 	db	110	;'n'
   249  000F7B  6F                 	db	111	;'o'
   250  000F7C  00                 	db	0
   251  000F7D                     STR_36:
   252                           
   253                           ; BSR set to: 15
   254  000F7D  25                 	db	37
   255  000F7E  30                 	db	48	;'0'
   256  000F7F  31                 	db	49	;'1'
   257  000F80  75                 	db	117	;'u'
   258  000F81  00                 	db	0
   259  000F82                     STR_4:
   260                           
   261                           ; BSR set to: 15
   262  000F82  58                 	db	88	;'X'
   263  000F83  32                 	db	50	;'2'
   264  000F84  38                 	db	56	;'8'
   265  000F85  00                 	db	0
   266  000F86                     STR_8:
   267                           
   268                           ; BSR set to: 15
   269  000F86  50                 	db	80	;'P'
   270  000F87  69                 	db	105	;'i'
   271  000F88  6E                 	db	110	;'n'
   272  000F89  00                 	db	0
   273  000F8A                     STR_23:
   274                           
   275                           ; BSR set to: 15
   276  000F8A  53                 	db	83	;'S'
   277  000F8B  49                 	db	73	;'I'
   278  000F8C  00                 	db	0
   279  000F8D                     STR_24:
   280                           
   281                           ; BSR set to: 15
   282  000F8D  4E                 	db	78	;'N'
   283  000F8E  4F                 	db	79	;'O'
   284  000F8F  00                 	db	0
   285  000F90                     STR_11:
   286                           
   287                           ; BSR set to: 15
   288  000F90  20                 	db	32
   289  000F91  00                 	db	0
   290  000F92                     STR_34:
   291                           
   292                           ; BSR set to: 15
   293  000F92  2A                 	db	42
   294  000F93  00                 	db	0
   295  000F94                     STR_10:
   296                           
   297                           ; BSR set to: 15
   298  000F94  3E                 	db	62	;'>'
   299  000F95  00                 	db	0
   300  0000                     
   301                           ; #config settings
   302  000F96  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           	psect	nvCOMRAM
   305  000056                     __pnvCOMRAM:
   306                           	opt stack 0
   307  000056                     _anio_d:
   308                           	opt stack 0
   309  000056                     	ds	1
   310  000057                     _fecha_d:
   311                           	opt stack 0
   312  000057                     	ds	1
   313  000058                     _hora_d:
   314                           	opt stack 0
   315  000058                     	ds	1
   316  000059                     _hora_u:
   317                           	opt stack 0
   318  000059                     	ds	1
   319  00005A                     _mes_d:
   320                           	opt stack 0
   321  00005A                     	ds	1
   322  00005B                     _minuto_d:
   323                           	opt stack 0
   324  00005B                     	ds	1
   325  00005C                     _minuto_u:
   326                           	opt stack 0
   327  00005C                     	ds	1
   328  00005D                     _segundo_d:
   329                           	opt stack 0
   330  00005D                     	ds	1
   331  00005E                     _segundo_u:
   332                           	opt stack 0
   333  00005E                     	ds	1
   334                           
   335                           	psect	nvBANK0
   336  000090                     __pnvBANK0:
   337                           	opt stack 0
   338  000090                     _anio_u:
   339                           	opt stack 0
   340  000090                     	ds	1
   341  000091                     _dia_semana:
   342                           	opt stack 0
   343  000091                     	ds	1
   344  000092                     _fecha_u:
   345                           	opt stack 0
   346  000092                     	ds	1
   347  000093                     _mes_u:
   348                           	opt stack 0
   349  000093                     	ds	1
   350  0000                     _ANCON0	set	3912
   351  0000                     _ANCON1	set	3913
   352  0000                     _RTCCFG	set	3903
   353  0000                     _RTCCFGbits	set	3903
   354  0000                     _ADCON0	set	4034
   355  0000                     _ADCON1	set	4033
   356  0000                     _ALRMCFGbits	set	3985
   357  0000                     _EECON2	set	4007
   358  0000                     _INTCONbits	set	4082
   359  0000                     _LATAbits	set	3977
   360  0000                     _LATBbits	set	3978
   361  0000                     _OSCCONbits	set	4051
   362  0000                     _OSCTUNEbits	set	3995
   363  0000                     _PIE3bits	set	4003
   364  0000                     _PORTAbits	set	3968
   365  0000                     _PORTCbits	set	3970
   366  0000                     _RTCVALH	set	3993
   367  0000                     _RTCVALL	set	3992
   368  0000                     _T1CONbits	set	4045
   369  0000                     _TRISA	set	3986
   370  0000                     _TRISB	set	3987
   371  0000                     _TRISBbits	set	3987
   372  0000                     _TRISC	set	3988
   373                           
   374                           	psect	cinit
   375  002104                     __pcinit:
   376                           	opt stack 0
   377  002104                     start_initialization:
   378                           	opt stack 0
   379  002104                     __initialization:
   380                           	opt stack 0
   381                           
   382                           ; Clear objects allocated to BANK0 (48 bytes)
   383  002104  EE00  F060         	lfsr	0,__pbssBANK0
   384  002108  0E30               	movlw	48
   385  00210A                     clear_0:
   386  00210A  6AEE               	clrf	postinc0,c
   387  00210C  06E8               	decf	wreg,f,c
   388  00210E  E1FD               	bnz	clear_0
   389                           
   390                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   391  002110  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   392                           
   393                           ; Clear objects allocated to COMRAM (39 bytes)
   394  002112  EE00  F001         	lfsr	0,__pbssCOMRAM
   395  002116  0E27               	movlw	39
   396  002118                     clear_1:
   397  002118  6AEE               	clrf	postinc0,c
   398  00211A  06E8               	decf	wreg,f,c
   399  00211C  E1FD               	bnz	clear_1
   400                           
   401                           ; Initialize objects allocated to COMRAM (10 bytes)
   402                           ; load TBLPTR registers with __pidataCOMRAM
   403  00211E  0E8C               	movlw	low __pidataCOMRAM
   404  002120  6EF6               	movwf	tblptrl,c
   405  002122  0E23               	movlw	high __pidataCOMRAM
   406  002124  6EF7               	movwf	tblptrh,c
   407  002126  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   408  002128  6EF8               	movwf	tblptru,c
   409  00212A  EE00  F04C         	lfsr	0,__pdataCOMRAM
   410  00212E  EE10 F00A          	lfsr	1,10
   411  002132                     copy_data0:
   412  002132  0009               	tblrd		*+
   413  002134  CFF5 FFEE          	movff	tablat,postinc0
   414  002138  50E5               	movf	postdec1,w,c
   415  00213A  50E1               	movf	fsr1l,w,c
   416  00213C  E1FA               	bnz	copy_data0
   417  00213E                     end_of_initialization:
   418                           	opt stack 0
   419  00213E                     __end_of__initialization:
   420                           	opt stack 0
   421  00213E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   422  002140  6EF8               	movwf	tblptru,c
   423  002142  0100               	movlb	0
   424  002144  EF41  F011         	goto	_main	;jump to C main() function
   425                           tblptru	equ	0xFF8
   426                           tblptrh	equ	0xFF7
   427                           tblptrl	equ	0xFF6
   428                           tablat	equ	0xFF5
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           postdec1	equ	0xFE5
   432                           fsr1l	equ	0xFE1
   433                           
   434                           	psect	bitbssCOMRAM
   435  0002F8                     __pbitbssCOMRAM:
   436                           	opt stack 0
   437  0002F8                     _flag:
   438                           	opt stack 0
   439  0002F8                     	ds	1
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	bssCOMRAM
   450  000001                     __pbssCOMRAM:
   451                           	opt stack 0
   452  000001                     _a:
   453                           	opt stack 0
   454  000001                     	ds	2
   455  000003                     _activity:
   456                           	opt stack 0
   457  000003                     	ds	2
   458  000005                     _b:
   459                           	opt stack 0
   460  000005                     	ds	2
   461  000007                     _c:
   462                           	opt stack 0
   463  000007                     	ds	2
   464  000009                     _i:
   465                           	opt stack 0
   466  000009                     	ds	2
   467  00000B                     _j:
   468                           	opt stack 0
   469  00000B                     	ds	2
   470  00000D                     _k:
   471                           	opt stack 0
   472  00000D                     	ds	2
   473  00000F                     _menu_selected:
   474                           	opt stack 0
   475  00000F                     	ds	2
   476  000011                     _menu_selector:
   477                           	opt stack 0
   478  000011                     	ds	2
   479  000013                     _minuto:
   480                           	opt stack 0
   481  000013                     	ds	2
   482  000015                     _pin:
   483                           	opt stack 0
   484  000015                     	ds	2
   485  000017                     _pin_input:
   486                           	opt stack 0
   487  000017                     	ds	2
   488  000019                     _segundo:
   489                           	opt stack 0
   490  000019                     	ds	2
   491  00001B                     _state:
   492                           	opt stack 0
   493  00001B                     	ds	2
   494  00001D                     _submenu_selector:
   495                           	opt stack 0
   496  00001D                     	ds	2
   497  00001F                     _key:
   498                           	opt stack 0
   499  00001F                     	ds	1
   500  000020                     _RtccDate:
   501                           	opt stack 0
   502  000020                     	ds	4
   503  000024                     _RtccTime:
   504                           	opt stack 0
   505  000024                     	ds	4
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           postdec1	equ	0xFE5
   513                           fsr1l	equ	0xFE1
   514                           
   515                           	psect	dataCOMRAM
   516  00004C                     __pdataCOMRAM:
   517                           	opt stack 0
   518  00004C                     _anio:
   519                           	opt stack 0
   520  00004C                     	ds	2
   521  00004E                     _dia:
   522                           	opt stack 0
   523  00004E                     	ds	2
   524  000050                     _diasem:
   525                           	opt stack 0
   526  000050                     	ds	2
   527  000052                     _hora:
   528                           	opt stack 0
   529  000052                     	ds	2
   530  000054                     _mes:
   531                           	opt stack 0
   532  000054                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	bssBANK0
   543  000060                     __pbssBANK0:
   544                           	opt stack 0
   545  000060                     _RtccAlrmTimeDate:
   546                           	opt stack 0
   547  000060                     	ds	8
   548  000068                     _RtccTimeDate:
   549                           	opt stack 0
   550  000068                     	ds	8
   551  000070                     _Rtcc_read_TimeDate:
   552                           	opt stack 0
   553  000070                     	ds	8
   554  000078                     _RtccTimeVal:
   555                           	opt stack 0
   556  000078                     	ds	4
   557  00007C                     _buffer1:
   558                           	opt stack 0
   559  00007C                     	ds	20
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           postinc0	equ	0xFEE
   565                           wreg	equ	0xFE8
   566                           postdec1	equ	0xFE5
   567                           fsr1l	equ	0xFE1
   568                           
   569                           	psect	cstackCOMRAM
   570  000028                     __pcstackCOMRAM:
   571                           	opt stack 0
   572  000028                     ??_isdigit:
   573  000028                     ??_lcd_send_nibble:
   574  000028                     ?___wmul:
   575                           	opt stack 0
   576  000028                     ?___awdiv:
   577                           	opt stack 0
   578  000028                     ?___lwdiv:
   579                           	opt stack 0
   580  000028                     Delay100TCYx@unit:
   581                           	opt stack 0
   582  000028                     Delay1KTCYx@unit:
   583                           	opt stack 0
   584  000028                     RtccReadDate@pDt:
   585                           	opt stack 0
   586  000028                     RtccReadTime@pTm:
   587                           	opt stack 0
   588  000028                     RtccWriteDate@pDt:
   589                           	opt stack 0
   590  000028                     RtccWriteTime@pTm:
   591                           	opt stack 0
   592  000028                     ___wmul@multiplier:
   593                           	opt stack 0
   594  000028                     ___awdiv@dividend:
   595                           	opt stack 0
   596  000028                     ___lwdiv@dividend:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x0
   600  000028                     	ds	1
   601  000029                     lcd_send_nibble@nibble:
   602                           	opt stack 0
   603  000029                     _isdigit$2107:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x1
   607  000029                     	ds	1
   608  00002A                     lcd_send_byte@n:
   609                           	opt stack 0
   610  00002A                     RtccWriteDate@di:
   611                           	opt stack 0
   612  00002A                     RtccWriteTime@di:
   613                           	opt stack 0
   614  00002A                     isdigit@c:
   615                           	opt stack 0
   616  00002A                     ___wmul@multiplicand:
   617                           	opt stack 0
   618  00002A                     ___awdiv@divisor:
   619                           	opt stack 0
   620  00002A                     ___lwdiv@divisor:
   621                           	opt stack 0
   622  00002A                     RtccReadDate@rTD1:
   623                           	opt stack 0
   624  00002A                     RtccReadTime@rTD1:
   625                           	opt stack 0
   626                           
   627                           ; 8 bytes @ 0x2
   628  00002A                     	ds	1
   629  00002B                     lcd_send_byte@address:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x3
   633  00002B                     	ds	1
   634  00002C                     lcd_init@i:
   635                           	opt stack 0
   636  00002C                     lcd_gotoxy@y:
   637                           	opt stack 0
   638  00002C                     lcd_comand@d:
   639                           	opt stack 0
   640  00002C                     RtccWriteDate@wasOn:
   641                           	opt stack 0
   642  00002C                     RtccWriteTime@wasOn:
   643                           	opt stack 0
   644  00002C                     ___awdiv@counter:
   645                           	opt stack 0
   646  00002C                     ___wmul@product:
   647                           	opt stack 0
   648  00002C                     ___lwdiv@quotient:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x4
   652  00002C                     	ds	1
   653  00002D                     lcd_gotoxy@x:
   654                           	opt stack 0
   655  00002D                     RtccWriteDate@wasAlrm:
   656                           	opt stack 0
   657  00002D                     RtccWriteTime@wasAlrm:
   658                           	opt stack 0
   659  00002D                     ___awdiv@sign:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x5
   663  00002D                     	ds	1
   664  00002E                     lcd_gotoxy@address:
   665                           	opt stack 0
   666  00002E                     RtccWriteTime@wasWrEn:
   667                           	opt stack 0
   668  00002E                     ___lwdiv@counter:
   669                           	opt stack 0
   670  00002E                     RtccWriteDate@tempYear:
   671                           	opt stack 0
   672  00002E                     ___awdiv@quotient:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x6
   676  00002E                     	ds	1
   677  00002F                     ?___lwmod:
   678                           	opt stack 0
   679  00002F                     lcd_putc@c:
   680                           	opt stack 0
   681  00002F                     RtccWriteTime@tempMinSec:
   682                           	opt stack 0
   683  00002F                     ___lwmod@dividend:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x7
   687  00002F                     	ds	1
   688  000030                     RtccWriteDate@wasWrEn:
   689                           	opt stack 0
   690  000030                     lcd_putrs@ptr:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x8
   694  000030                     	ds	1
   695  000031                     RtccWriteDate@tempDayMonth:
   696                           	opt stack 0
   697  000031                     RtccWriteTime@tempHourWDay:
   698                           	opt stack 0
   699  000031                     ___lwmod@divisor:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x9
   703  000031                     	ds	1
   704  000032                     lcd_write@column:
   705                           	opt stack 0
   706  000032                     RtccReadDate@rTD0:
   707                           	opt stack 0
   708  000032                     RtccReadTime@rTD0:
   709                           	opt stack 0
   710                           
   711                           ; 8 bytes @ 0xA
   712  000032                     	ds	1
   713  000033                     ___lwmod@counter:
   714                           	opt stack 0
   715  000033                     RtccWriteDate@tempHourWDay:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0xB
   719  000033                     	ds	1
   720  000034                     ?_sprintf:
   721                           	opt stack 0
   722  000034                     lcd_write@row:
   723                           	opt stack 0
   724  000034                     sprintf@sp:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0xC
   728  000034                     	ds	1
   729  000035                     
   730                           ; 0 bytes @ 0xD
   731  000035                     	ds	1
   732  000036                     lcd_write@string:
   733                           	opt stack 0
   734  000036                     sprintf@f:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0xE
   738  000036                     	ds	2
   739  000038                     ??_action_menu_selector:
   740  000038                     ??_action_submenu_selector:
   741  000038                     ??_button_B:
   742  000038                     
   743                           ; 0 bytes @ 0x10
   744  000038                     	ds	2
   745  00003A                     ??_button_A:
   746                           
   747                           ; 0 bytes @ 0x12
   748  00003A                     	ds	4
   749  00003E                     ??_sprintf:
   750                           
   751                           ; 0 bytes @ 0x16
   752  00003E                     	ds	4
   753  000042                     sprintf@ap:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x1A
   757  000042                     	ds	2
   758  000044                     sprintf@flag:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x1C
   762  000044                     	ds	1
   763  000045                     sprintf@val:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x1D
   767  000045                     	ds	2
   768  000047                     sprintf@prec:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x1F
   772  000047                     	ds	1
   773  000048                     sprintf@width:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x20
   777  000048                     	ds	2
   778  00004A                     sprintf@c:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x22
   782  00004A                     	ds	1
   783  00004B                     ??_keyboard_control:
   784                           
   785                           ; 0 bytes @ 0x23
   786  00004B                     	ds	1
   787  00004C                     tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           postinc0	equ	0xFEE
   792                           wreg	equ	0xFE8
   793                           postdec1	equ	0xFE5
   794                           fsr1l	equ	0xFE1
   795                           
   796                           ; 0 bytes @ 0x24
   797 ;;
   798 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   799 ;;
   800 ;; *************** function _main *****************
   801 ;; Defined at:
   802 ;;		line 379 in file "main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  2  312[None  ] int 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels required when called:   10
   822 ;; This function calls:
   823 ;;		_Read_RTC
   824 ;;		_activity_home
   825 ;;		_home_clock_refresh
   826 ;;		_keyboard_control
   827 ;;		_setup
   828 ;; This function is called by:
   829 ;;		Startup code after reset
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text0
   834  002282                     __ptext0:
   835                           	opt stack 0
   836  002282                     _main:
   837                           	opt stack 21
   838                           
   839                           ;main.c: 381: setup();
   840                           
   841                           ; BSR set to: 15
   842                           ;incstack = 0
   843  002282  ECBD  F00E         	call	_setup	;wreg free
   844                           
   845                           ;main.c: 382: activity_home();
   846  002286  EC18  F011         	call	_activity_home	;wreg free
   847  00228A  D000               	goto	l3009
   848  00228C                     l3009:
   849                           
   850                           ;main.c: 384: Read_RTC();
   851  00228C  EC28  F00C         	call	_Read_RTC	;wreg free
   852                           
   853                           ;main.c: 385: keyboard_control();
   854  002290  ECAA  F009         	call	_keyboard_control	;wreg free
   855                           
   856                           ;main.c: 386: if(activity == 0){home_clock_refresh();}
   857  002294  5003               	movf	_activity,w,c
   858  002296  1004               	iorwf	_activity+1,w,c
   859  002298  A4D8               	btfss	status,2,c
   860  00229A  D7F8               	goto	l3009
   861  00229C  EC3C  F00D         	call	_home_clock_refresh	;wreg free
   862  0022A0  D7F5               	goto	l3009
   863                           
   864                           ;main.c: 387: }
   865                           ;main.c: 389: return 0;
   866                           ;	Return value of _main is never used
   867  0022A2  EF00  F000         	goto	start
   868  0022A6                     __end_of_main:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           postdec1	equ	0xFE5
   877                           fsr1l	equ	0xFE1
   878                           status	equ	0xFD8
   879                           
   880 ;; *************** function _setup *****************
   881 ;; Defined at:
   882 ;;		line 54 in file "main.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;		None               void
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    3
   903 ;; This function calls:
   904 ;;		_Write_RTC
   905 ;;		_lcd_comand
   906 ;;		_lcd_init
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text1
   913  001D7A                     __ptext1:
   914                           	opt stack 0
   915  001D7A                     _setup:
   916                           	opt stack 27
   917                           
   918                           ;main.c: 56: OSCTUNEbits.INTSRC=1;
   919                           
   920                           ;incstack = 0
   921  001D7A  8E9B               	bsf	3995,7,c	;volatile
   922                           
   923                           ;main.c: 57: OSCTUNEbits.PLLEN=0;
   924  001D7C  9C9B               	bcf	3995,6,c	;volatile
   925                           
   926                           ;main.c: 58: OSCCONbits.IRCF0=1;
   927  001D7E  88D3               	bsf	4051,4,c	;volatile
   928                           
   929                           ;main.c: 59: OSCCONbits.IRCF1=1;
   930  001D80  8AD3               	bsf	4051,5,c	;volatile
   931                           
   932                           ;main.c: 60: OSCCONbits.IRCF2=1;
   933  001D82  8CD3               	bsf	4051,6,c	;volatile
   934                           
   935                           ;main.c: 61: OSCCONbits.SCS0=0;
   936  001D84  90D3               	bcf	4051,0,c	;volatile
   937                           
   938                           ;main.c: 62: OSCCONbits.SCS1=0;
   939  001D86  92D3               	bcf	4051,1,c	;volatile
   940                           
   941                           ;main.c: 63: TRISA = 0b11110000;
   942  001D88  0EF0               	movlw	240
   943  001D8A  6E92               	movwf	3986,c	;volatile
   944                           
   945                           ;main.c: 64: TRISB = 0;
   946  001D8C  0E00               	movlw	0
   947  001D8E  6E93               	movwf	3987,c	;volatile
   948                           
   949                           ;main.c: 65: TRISC = 0b00000111;
   950  001D90  0E07               	movlw	7
   951  001D92  6E94               	movwf	3988,c	;volatile
   952                           
   953                           ;main.c: 69: ANCON0=0b11111111;
   954  001D94  010F               	movlb	15	; () banked
   955  001D96  6948               	setf	72,b	;volatile
   956                           
   957                           ; BSR set to: 15
   958                           ;main.c: 71: ANCON1=0b11111111;
   959  001D98  010F               	movlb	15	; () banked
   960  001D9A  6949               	setf	73,b	;volatile
   961                           
   962                           ;main.c: 72: ADCON0=0b00101101;
   963  001D9C  0E2D               	movlw	45
   964  001D9E  6EC2               	movwf	4034,c	;volatile
   965                           
   966                           ;main.c: 73: ADCON1=0b00010000;
   967  001DA0  0E10               	movlw	16
   968  001DA2  6EC1               	movwf	4033,c	;volatile
   969                           
   970                           ; BSR set to: 15
   971                           ;main.c: 74: RTCCFGbits.RTCEN=1;
   972  001DA4  010F               	movlb	15	; () banked
   973  001DA6  8F3F               	bsf	63,7,b	;volatile
   974                           
   975                           ; BSR set to: 15
   976                           ;main.c: 75: RTCCFGbits.RTCWREN=1;
   977  001DA8  010F               	movlb	15	; () banked
   978  001DAA  8B3F               	bsf	63,5,b	;volatile
   979                           
   980                           ; BSR set to: 15
   981                           ;main.c: 76: T1CONbits.T1OSCEN=1;
   982  001DAC  86CD               	bsf	4045,3,c	;volatile
   983                           
   984                           ; BSR set to: 15
   985                           ;main.c: 77: Write_RTC();
   986  001DAE  EC55  F00A         	call	_Write_RTC	;wreg free
   987                           
   988                           ;main.c: 78: lcd_init();
   989  001DB2  ECCC  F00D         	call	_lcd_init	;wreg free
   990                           
   991                           ;main.c: 79: lcd_comand(0b00001100);
   992  001DB6  0E0C               	movlw	12
   993  001DB8  ECBF  F011         	call	_lcd_comand
   994                           
   995                           ;main.c: 80: LATBbits.LATB1 = 1;;
   996  001DBC  828A               	bsf	3978,1,c	;volatile
   997                           
   998                           ;main.c: 81: LATBbits.LATB0 = 1;;
   999  001DBE  808A               	bsf	3978,0,c	;volatile
  1000                           
  1001                           ;main.c: 84: menu_selected = 1;
  1002  001DC0  0E00               	movlw	0
  1003  001DC2  6E10               	movwf	_menu_selected+1,c
  1004  001DC4  0E01               	movlw	1
  1005  001DC6  6E0F               	movwf	_menu_selected,c
  1006                           
  1007                           ;main.c: 85: menu_selector = 1;
  1008  001DC8  0E00               	movlw	0
  1009  001DCA  6E12               	movwf	_menu_selector+1,c
  1010  001DCC  0E01               	movlw	1
  1011  001DCE  6E11               	movwf	_menu_selector,c
  1012                           
  1013                           ;main.c: 86: submenu_selector = 1;
  1014  001DD0  0E00               	movlw	0
  1015  001DD2  6E1E               	movwf	_submenu_selector+1,c
  1016  001DD4  0E01               	movlw	1
  1017  001DD6  6E1D               	movwf	_submenu_selector,c
  1018                           
  1019                           ;main.c: 87: pin = "1234";
  1020  001DD8  0E6E               	movlw	low STR_1
  1021  001DDA  6E15               	movwf	_pin,c
  1022  001DDC  0E0F               	movlw	high STR_1
  1023  001DDE  6E16               	movwf	_pin+1,c
  1024  001DE0  0012               	return		;funcret
  1025  001DE2                     __end_of_setup:
  1026                           	opt stack 0
  1027                           tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           postinc0	equ	0xFEE
  1032                           wreg	equ	0xFE8
  1033                           postdec1	equ	0xFE5
  1034                           fsr1l	equ	0xFE1
  1035                           status	equ	0xFD8
  1036                           
  1037 ;; *************** function _Write_RTC *****************
  1038 ;; Defined at:
  1039 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;		None               void
  1046 ;; Registers used:
  1047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    2
  1060 ;; This function calls:
  1061 ;;		_RtccWrOn
  1062 ;;		_RtccWriteDate
  1063 ;;		_RtccWriteTime
  1064 ;;		___awdiv
  1065 ;; This function is called by:
  1066 ;;		_setup
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text2
  1071  0014AA                     __ptext2:
  1072                           	opt stack 0
  1073  0014AA                     _Write_RTC:
  1074                           	opt stack 27
  1075                           
  1076                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1077                           
  1078                           ;incstack = 0
  1079  0014AA  EC8E  F011         	call	_RtccWrOn	;wreg free
  1080                           
  1081                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1082  0014AE  80A3               	bsf	4003,0,c	;volatile
  1083                           
  1084                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1085  0014B0  C019  F028         	movff	_segundo,___awdiv@dividend
  1086  0014B4  C01A  F029         	movff	_segundo+1,___awdiv@dividend+1
  1087  0014B8  0E00               	movlw	0
  1088  0014BA  6E2B               	movwf	___awdiv@divisor+1,c
  1089  0014BC  0E0A               	movlw	10
  1090  0014BE  6E2A               	movwf	___awdiv@divisor,c
  1091  0014C0  ECF1  F00C         	call	___awdiv	;wreg free
  1092  0014C4  5028               	movf	?___awdiv,w,c
  1093  0014C6  6E5D               	movwf	_segundo_d,c
  1094                           
  1095                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1096  0014C8  505D               	movf	_segundo_d,w,c
  1097  0014CA  0D0A               	mullw	10
  1098  0014CC  50F3               	movf	prodl,w,c
  1099  0014CE  0800               	sublw	0
  1100  0014D0  2419               	addwf	_segundo,w,c
  1101  0014D2  6E5E               	movwf	_segundo_u,c
  1102                           
  1103                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1104  0014D4  505D               	movf	_segundo_d,w,c
  1105  0014D6  0D10               	mullw	16
  1106  0014D8  50F3               	movf	prodl,w,c
  1107  0014DA  245E               	addwf	_segundo_u,w,c
  1108  0014DC  6E25               	movwf	_RtccTime+1,c
  1109                           
  1110                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1111  0014DE  C013  F028         	movff	_minuto,___awdiv@dividend
  1112  0014E2  C014  F029         	movff	_minuto+1,___awdiv@dividend+1
  1113  0014E6  0E00               	movlw	0
  1114  0014E8  6E2B               	movwf	___awdiv@divisor+1,c
  1115  0014EA  0E0A               	movlw	10
  1116  0014EC  6E2A               	movwf	___awdiv@divisor,c
  1117  0014EE  ECF1  F00C         	call	___awdiv	;wreg free
  1118  0014F2  5028               	movf	?___awdiv,w,c
  1119  0014F4  6E5B               	movwf	_minuto_d,c
  1120                           
  1121                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1122  0014F6  505B               	movf	_minuto_d,w,c
  1123  0014F8  0D0A               	mullw	10
  1124  0014FA  50F3               	movf	prodl,w,c
  1125  0014FC  0800               	sublw	0
  1126  0014FE  2413               	addwf	_minuto,w,c
  1127  001500  6E5C               	movwf	_minuto_u,c
  1128                           
  1129                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1130  001502  505B               	movf	_minuto_d,w,c
  1131  001504  0D10               	mullw	16
  1132  001506  50F3               	movf	prodl,w,c
  1133  001508  245C               	addwf	_minuto_u,w,c
  1134  00150A  6E26               	movwf	_RtccTime+2,c
  1135                           
  1136                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1137  00150C  C052  F028         	movff	_hora,___awdiv@dividend
  1138  001510  C053  F029         	movff	_hora+1,___awdiv@dividend+1
  1139  001514  0E00               	movlw	0
  1140  001516  6E2B               	movwf	___awdiv@divisor+1,c
  1141  001518  0E0A               	movlw	10
  1142  00151A  6E2A               	movwf	___awdiv@divisor,c
  1143  00151C  ECF1  F00C         	call	___awdiv	;wreg free
  1144  001520  5028               	movf	?___awdiv,w,c
  1145  001522  6E58               	movwf	_hora_d,c
  1146                           
  1147                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1148  001524  5058               	movf	_hora_d,w,c
  1149  001526  0D0A               	mullw	10
  1150  001528  50F3               	movf	prodl,w,c
  1151  00152A  0800               	sublw	0
  1152  00152C  2452               	addwf	_hora,w,c
  1153  00152E  6E59               	movwf	_hora_u,c
  1154                           
  1155                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1156  001530  5058               	movf	_hora_d,w,c
  1157  001532  0D10               	mullw	16
  1158  001534  50F3               	movf	prodl,w,c
  1159  001536  2459               	addwf	_hora_u,w,c
  1160  001538  6E27               	movwf	_RtccTime+3,c
  1161                           
  1162                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1163  00153A  C04C  F028         	movff	_anio,___awdiv@dividend
  1164  00153E  C04D  F029         	movff	_anio+1,___awdiv@dividend+1
  1165  001542  0E00               	movlw	0
  1166  001544  6E2B               	movwf	___awdiv@divisor+1,c
  1167  001546  0E0A               	movlw	10
  1168  001548  6E2A               	movwf	___awdiv@divisor,c
  1169  00154A  ECF1  F00C         	call	___awdiv	;wreg free
  1170  00154E  5028               	movf	?___awdiv,w,c
  1171  001550  6E56               	movwf	_anio_d,c
  1172                           
  1173                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1174  001552  5056               	movf	_anio_d,w,c
  1175  001554  0D0A               	mullw	10
  1176  001556  50F3               	movf	prodl,w,c
  1177  001558  0800               	sublw	0
  1178  00155A  244C               	addwf	_anio,w,c
  1179  00155C  0100               	movlb	0	; () banked
  1180  00155E  6F90               	movwf	_anio_u& (0+255),b
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1184  001560  5056               	movf	_anio_d,w,c
  1185  001562  0D10               	mullw	16
  1186  001564  50F3               	movf	prodl,w,c
  1187  001566  0100               	movlb	0	; () banked
  1188  001568  2590               	addwf	_anio_u& (0+255),w,b
  1189  00156A  6E23               	movwf	_RtccDate+3,c
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1193  00156C  C054  F028         	movff	_mes,___awdiv@dividend
  1194  001570  C055  F029         	movff	_mes+1,___awdiv@dividend+1
  1195  001574  0E00               	movlw	0
  1196  001576  6E2B               	movwf	___awdiv@divisor+1,c
  1197  001578  0E0A               	movlw	10
  1198  00157A  6E2A               	movwf	___awdiv@divisor,c
  1199  00157C  ECF1  F00C         	call	___awdiv	;wreg free
  1200  001580  5028               	movf	?___awdiv,w,c
  1201  001582  6E5A               	movwf	_mes_d,c
  1202                           
  1203                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1204  001584  505A               	movf	_mes_d,w,c
  1205  001586  0D0A               	mullw	10
  1206  001588  50F3               	movf	prodl,w,c
  1207  00158A  0800               	sublw	0
  1208  00158C  2454               	addwf	_mes,w,c
  1209  00158E  0100               	movlb	0	; () banked
  1210  001590  6F93               	movwf	_mes_u& (0+255),b
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1214  001592  505A               	movf	_mes_d,w,c
  1215  001594  0D10               	mullw	16
  1216  001596  50F3               	movf	prodl,w,c
  1217  001598  0100               	movlb	0	; () banked
  1218  00159A  2593               	addwf	_mes_u& (0+255),w,b
  1219  00159C  6E22               	movwf	_RtccDate+2,c
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1223  00159E  C04E  F028         	movff	_dia,___awdiv@dividend
  1224  0015A2  C04F  F029         	movff	_dia+1,___awdiv@dividend+1
  1225  0015A6  0E00               	movlw	0
  1226  0015A8  6E2B               	movwf	___awdiv@divisor+1,c
  1227  0015AA  0E0A               	movlw	10
  1228  0015AC  6E2A               	movwf	___awdiv@divisor,c
  1229  0015AE  ECF1  F00C         	call	___awdiv	;wreg free
  1230  0015B2  5028               	movf	?___awdiv,w,c
  1231  0015B4  6E57               	movwf	_fecha_d,c
  1232                           
  1233                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1234  0015B6  5057               	movf	_fecha_d,w,c
  1235  0015B8  0D0A               	mullw	10
  1236  0015BA  50F3               	movf	prodl,w,c
  1237  0015BC  0800               	sublw	0
  1238  0015BE  244E               	addwf	_dia,w,c
  1239  0015C0  0100               	movlb	0	; () banked
  1240  0015C2  6F92               	movwf	_fecha_u& (0+255),b
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1244  0015C4  5057               	movf	_fecha_d,w,c
  1245  0015C6  0D10               	mullw	16
  1246  0015C8  50F3               	movf	prodl,w,c
  1247  0015CA  0100               	movlb	0	; () banked
  1248  0015CC  2592               	addwf	_fecha_u& (0+255),w,b
  1249  0015CE  6E21               	movwf	_RtccDate+1,c
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1253  0015D0  C050  F091         	movff	_diasem,_dia_semana
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1257  0015D4  C050  F020         	movff	_diasem,_RtccDate
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1261  0015D8  0E24               	movlw	low _RtccTime
  1262  0015DA  6E28               	movwf	RtccWriteTime@pTm,c
  1263  0015DC  0E00               	movlw	high _RtccTime
  1264  0015DE  6E29               	movwf	RtccWriteTime@pTm+1,c
  1265  0015E0  0E01               	movlw	1
  1266  0015E2  6E2A               	movwf	RtccWriteTime@di,c
  1267  0015E4  ECA2  F00B         	call	_RtccWriteTime	;wreg free
  1268                           
  1269                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1270  0015E8  0E20               	movlw	low _RtccDate
  1271  0015EA  6E28               	movwf	RtccWriteDate@pDt,c
  1272  0015EC  0E00               	movlw	high _RtccDate
  1273  0015EE  6E29               	movwf	RtccWriteDate@pDt+1,c
  1274  0015F0  0E01               	movlw	1
  1275  0015F2  6E2A               	movwf	RtccWriteDate@di,c
  1276  0015F4  ECFF  F00A         	call	_RtccWriteDate	;wreg free
  1277                           
  1278                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1279  0015F8  010F               	movlb	15	; () banked
  1280  0015FA  8F3F               	bsf	63,7,b	;volatile
  1281                           
  1282                           ; BSR set to: 15
  1283  0015FC  0012               	return		;funcret
  1284  0015FE                     __end_of_Write_RTC:
  1285                           	opt stack 0
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           prodl	equ	0xFF3
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           postdec1	equ	0xFE5
  1294                           fsr1l	equ	0xFE1
  1295                           status	equ	0xFD8
  1296                           
  1297 ;; *************** function ___awdiv *****************
  1298 ;; Defined at:
  1299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  dividend        2    0[COMRAM] int 
  1302 ;;  divisor         2    2[COMRAM] int 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  quotient        2    6[COMRAM] int 
  1305 ;;  sign            1    5[COMRAM] unsigned char 
  1306 ;;  counter         1    4[COMRAM] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  2    0[COMRAM] int 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1317 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1319 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;Total ram usage:        8 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_Write_RTC
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text3
  1330  0019E2                     __ptext3:
  1331                           	opt stack 0
  1332  0019E2                     ___awdiv:
  1333                           	opt stack 28
  1334                           
  1335                           ; BSR set to: 15
  1336                           ;incstack = 0
  1337  0019E2  0E00               	movlw	0
  1338  0019E4  6E2D               	movwf	___awdiv@sign,c
  1339  0019E6  AE2B               	btfss	___awdiv@divisor+1,7,c
  1340  0019E8  D007               	goto	l2655
  1341  0019EA  6C2A               	negf	___awdiv@divisor,c
  1342  0019EC  1E2B               	comf	___awdiv@divisor+1,f,c
  1343  0019EE  B0D8               	btfsc	status,0,c
  1344  0019F0  2A2B               	incf	___awdiv@divisor+1,f,c
  1345  0019F2  0E01               	movlw	1
  1346  0019F4  6E2D               	movwf	___awdiv@sign,c
  1347  0019F6  D000               	goto	l2655
  1348  0019F8                     l2655:
  1349  0019F8  AE29               	btfss	___awdiv@dividend+1,7,c
  1350  0019FA  D007               	goto	l2661
  1351  0019FC  6C28               	negf	___awdiv@dividend,c
  1352  0019FE  1E29               	comf	___awdiv@dividend+1,f,c
  1353  001A00  B0D8               	btfsc	status,0,c
  1354  001A02  2A29               	incf	___awdiv@dividend+1,f,c
  1355  001A04  0E01               	movlw	1
  1356  001A06  1A2D               	xorwf	___awdiv@sign,f,c
  1357  001A08  D000               	goto	l2661
  1358  001A0A                     l2661:
  1359  001A0A  0E00               	movlw	0
  1360  001A0C  6E2F               	movwf	___awdiv@quotient+1,c
  1361  001A0E  0E00               	movlw	0
  1362  001A10  6E2E               	movwf	___awdiv@quotient,c
  1363  001A12  502A               	movf	___awdiv@divisor,w,c
  1364  001A14  102B               	iorwf	___awdiv@divisor+1,w,c
  1365  001A16  B4D8               	btfsc	status,2,c
  1366  001A18  D021               	goto	l2683
  1367  001A1A  0E01               	movlw	1
  1368  001A1C  6E2C               	movwf	___awdiv@counter,c
  1369  001A1E  D005               	goto	l2669
  1370  001A20                     l2667:
  1371  001A20  90D8               	bcf	status,0,c
  1372  001A22  362A               	rlcf	___awdiv@divisor,f,c
  1373  001A24  362B               	rlcf	___awdiv@divisor+1,f,c
  1374  001A26  2A2C               	incf	___awdiv@counter,f,c
  1375  001A28  D000               	goto	l2669
  1376  001A2A                     l2669:
  1377  001A2A  BE2B               	btfsc	___awdiv@divisor+1,7,c
  1378  001A2C  D002               	goto	l2671
  1379  001A2E  D7F8               	goto	l2667
  1380  001A30  D000               	goto	l2671
  1381  001A32                     l2671:
  1382  001A32  90D8               	bcf	status,0,c
  1383  001A34  362E               	rlcf	___awdiv@quotient,f,c
  1384  001A36  362F               	rlcf	___awdiv@quotient+1,f,c
  1385  001A38  502A               	movf	___awdiv@divisor,w,c
  1386  001A3A  5C28               	subwf	___awdiv@dividend,w,c
  1387  001A3C  502B               	movf	___awdiv@divisor+1,w,c
  1388  001A3E  5829               	subwfb	___awdiv@dividend+1,w,c
  1389  001A40  A0D8               	btfss	status,0,c
  1390  001A42  D006               	goto	l2679
  1391  001A44  502A               	movf	___awdiv@divisor,w,c
  1392  001A46  5E28               	subwf	___awdiv@dividend,f,c
  1393  001A48  502B               	movf	___awdiv@divisor+1,w,c
  1394  001A4A  5A29               	subwfb	___awdiv@dividend+1,f,c
  1395  001A4C  802E               	bsf	___awdiv@quotient,0,c
  1396  001A4E  D000               	goto	l2679
  1397  001A50                     l2679:
  1398  001A50  90D8               	bcf	status,0,c
  1399  001A52  322B               	rrcf	___awdiv@divisor+1,f,c
  1400  001A54  322A               	rrcf	___awdiv@divisor,f,c
  1401  001A56  2E2C               	decfsz	___awdiv@counter,f,c
  1402  001A58  D7EC               	goto	l2671
  1403  001A5A  D000               	goto	l2683
  1404  001A5C                     l2683:
  1405  001A5C  502D               	movf	___awdiv@sign,w,c
  1406  001A5E  B4D8               	btfsc	status,2,c
  1407  001A60  D005               	goto	l2687
  1408  001A62  6C2E               	negf	___awdiv@quotient,c
  1409  001A64  1E2F               	comf	___awdiv@quotient+1,f,c
  1410  001A66  B0D8               	btfsc	status,0,c
  1411  001A68  2A2F               	incf	___awdiv@quotient+1,f,c
  1412  001A6A  D000               	goto	l2687
  1413  001A6C                     l2687:
  1414  001A6C  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  1415  001A70  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  1416  001A74  0012               	return	
  1417  001A76  0012               	return		;funcret
  1418  001A78                     __end_of___awdiv:
  1419                           	opt stack 0
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           prodl	equ	0xFF3
  1425                           postinc0	equ	0xFEE
  1426                           wreg	equ	0xFE8
  1427                           postdec1	equ	0xFE5
  1428                           fsr1l	equ	0xFE1
  1429                           status	equ	0xFD8
  1430                           
  1431 ;; *************** function _RtccWriteTime *****************
  1432 ;; Defined at:
  1433 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  pTm             2    0[COMRAM] PTR const struct .
  1436 ;;		 -> RtccTime(4), 
  1437 ;;  di              1    2[COMRAM] enum E7121
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  tempHourWDay    2    9[COMRAM] struct .
  1440 ;;  tempMinSec      2    7[COMRAM] struct .
  1441 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1442 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1443 ;;  wasOn           1    4[COMRAM] enum E7121
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      enum E7337
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1453 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;Total ram usage:       11 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    1
  1460 ;; This function calls:
  1461 ;;		_RtccWrOn
  1462 ;; This function is called by:
  1463 ;;		_Write_RTC
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text4
  1468  001744                     __ptext4:
  1469                           	opt stack 0
  1470  001744                     _RtccWriteTime:
  1471                           	opt stack 27
  1472                           
  1473                           ;incstack = 0
  1474  001744  0E00               	movlw	0
  1475  001746  6E2D               	movwf	RtccWriteTime@wasAlrm,c
  1476  001748  EE20 F002          	lfsr	2,2
  1477  00174C  5028               	movf	RtccWriteTime@pTm,w,c
  1478  00174E  26D9               	addwf	fsr2l,f,c
  1479  001750  5029               	movf	RtccWriteTime@pTm+1,w,c
  1480  001752  22DA               	addwfc	fsr2h,f,c
  1481  001754  0E5A               	movlw	90
  1482  001756  60DF               	cpfslt	indf2,c
  1483  001758  0012               	return	
  1484  00175A  EE20 F001          	lfsr	2,1
  1485  00175E  5028               	movf	RtccWriteTime@pTm,w,c
  1486  001760  26D9               	addwf	fsr2l,f,c
  1487  001762  5029               	movf	RtccWriteTime@pTm+1,w,c
  1488  001764  22DA               	addwfc	fsr2h,f,c
  1489  001766  0E5A               	movlw	90
  1490  001768  60DF               	cpfslt	indf2,c
  1491  00176A  0012               	return	
  1492  00176C  EE20 F003          	lfsr	2,3
  1493  001770  5028               	movf	RtccWriteTime@pTm,w,c
  1494  001772  26D9               	addwf	fsr2l,f,c
  1495  001774  5029               	movf	RtccWriteTime@pTm+1,w,c
  1496  001776  22DA               	addwfc	fsr2h,f,c
  1497  001778  0E24               	movlw	36
  1498  00177A  64DF               	cpfsgt	indf2,c
  1499  00177C  D002               	goto	l2323
  1500  00177E  0012               	return	
  1501                           
  1502                           ;	Return value of _RtccWriteTime is never used
  1503  001780  0012               	return	
  1504  001782                     l2323:
  1505  001782  EE20 F002          	lfsr	2,2
  1506  001786  5028               	movf	RtccWriteTime@pTm,w,c
  1507  001788  26D9               	addwf	fsr2l,f,c
  1508  00178A  5029               	movf	RtccWriteTime@pTm+1,w,c
  1509  00178C  22DA               	addwfc	fsr2h,f,c
  1510  00178E  50DF               	movf	indf2,w,c
  1511  001790  6E30               	movwf	RtccWriteTime@tempMinSec+1,c
  1512  001792  EE20 F001          	lfsr	2,1
  1513  001796  5028               	movf	RtccWriteTime@pTm,w,c
  1514  001798  26D9               	addwf	fsr2l,f,c
  1515  00179A  5029               	movf	RtccWriteTime@pTm+1,w,c
  1516  00179C  22DA               	addwfc	fsr2h,f,c
  1517  00179E  50DF               	movf	indf2,w,c
  1518  0017A0  6E2F               	movwf	RtccWriteTime@tempMinSec,c
  1519  0017A2  502A               	movf	RtccWriteTime@di,w,c
  1520  0017A4  B4D8               	btfsc	status,2,c
  1521  0017A6  D002               	goto	l2329
  1522  0017A8  9CF2               	bcf	intcon,6,c	;volatile
  1523  0017AA  D000               	goto	l2329
  1524  0017AC                     l2329:
  1525  0017AC  0E00               	movlw	0
  1526  0017AE  BB3F               	btfsc	63,5,b	;volatile
  1527  0017B0  0E01               	movlw	1
  1528  0017B2  6E2E               	movwf	RtccWriteTime@wasWrEn,c
  1529  0017B4  502E               	movf	RtccWriteTime@wasWrEn,w,c
  1530  0017B6  A4D8               	btfss	status,2,c
  1531  0017B8  D003               	goto	l2333
  1532  0017BA  EC8E  F011         	call	_RtccWrOn	;wreg free
  1533  0017BE  D000               	goto	l2333
  1534  0017C0                     l2333:
  1535  0017C0  0E00               	movlw	0
  1536  0017C2  BF3F               	btfsc	63,7,b	;volatile
  1537  0017C4  0E01               	movlw	1
  1538  0017C6  6E2C               	movwf	RtccWriteTime@wasOn,c
  1539  0017C8  502C               	movf	RtccWriteTime@wasOn,w,c
  1540  0017CA  B4D8               	btfsc	status,2,c
  1541  0017CC  D007               	goto	l2339
  1542  0017CE  0E00               	movlw	0
  1543  0017D0  BE91               	btfsc	3985,7,c	;volatile
  1544  0017D2  0E01               	movlw	1
  1545  0017D4  6E2D               	movwf	RtccWriteTime@wasAlrm,c
  1546  0017D6  010F               	movlb	15	; () banked
  1547  0017D8  9F3F               	bcf	63,7,b	;volatile
  1548  0017DA  D000               	goto	l2339
  1549  0017DC                     l2339:
  1550  0017DC  0EFC               	movlw	252
  1551  0017DE  010F               	movlb	15	; () banked
  1552  0017E0  173F               	andwf	63,f,b	;volatile
  1553  0017E2  010F               	movlb	15	; () banked
  1554  0017E4  813F               	bsf	63,0,b	;volatile
  1555                           
  1556                           ; BSR set to: 15
  1557  0017E6  CF98 F031          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1558                           
  1559                           ; BSR set to: 15
  1560  0017EA  CF99 F032          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1561                           
  1562                           ; BSR set to: 15
  1563  0017EE  EE20 F003          	lfsr	2,3
  1564  0017F2  5028               	movf	RtccWriteTime@pTm,w,c
  1565  0017F4  26D9               	addwf	fsr2l,f,c
  1566  0017F6  5029               	movf	RtccWriteTime@pTm+1,w,c
  1567  0017F8  22DA               	addwfc	fsr2h,f,c
  1568  0017FA  50DF               	movf	indf2,w,c
  1569  0017FC  6E31               	movwf	RtccWriteTime@tempHourWDay,c
  1570                           
  1571                           ; BSR set to: 15
  1572  0017FE  0EFC               	movlw	252
  1573  001800  010F               	movlb	15	; () banked
  1574  001802  173F               	andwf	63,f,b	;volatile
  1575                           
  1576                           ; BSR set to: 15
  1577  001804  010F               	movlb	15	; () banked
  1578  001806  813F               	bsf	63,0,b	;volatile
  1579                           
  1580                           ; BSR set to: 15
  1581  001808  C031  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1582                           
  1583                           ; BSR set to: 15
  1584  00180C  C032  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1585                           
  1586                           ; BSR set to: 15
  1587  001810  C02F  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1588                           
  1589                           ; BSR set to: 15
  1590  001814  C030  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1591                           
  1592                           ; BSR set to: 15
  1593  001818  502C               	movf	RtccWriteTime@wasOn,w,c
  1594  00181A  B4D8               	btfsc	status,2,c
  1595  00181C  D00D               	goto	l2371
  1596                           
  1597                           ; BSR set to: 15
  1598  00181E  010F               	movlb	15	; () banked
  1599  001820  8F3F               	bsf	63,7,b	;volatile
  1600                           
  1601                           ; BSR set to: 15
  1602  001822  502D               	movf	RtccWriteTime@wasAlrm,w,c
  1603  001824  B4D8               	btfsc	status,2,c
  1604  001826  D002               	goto	l2367
  1605                           
  1606                           ; BSR set to: 15
  1607  001828  8E91               	bsf	3985,7,c	;volatile
  1608  00182A  D000               	goto	l2367
  1609  00182C                     l2367:
  1610                           
  1611                           ; BSR set to: 15
  1612  00182C  502E               	movf	RtccWriteTime@wasWrEn,w,c
  1613  00182E  B4D8               	btfsc	status,2,c
  1614  001830  D009               	goto	l2375
  1615                           
  1616                           ; BSR set to: 15
  1617  001832  EC8E  F011         	call	_RtccWrOn	;wreg free
  1618  001836  D006               	goto	l2375
  1619  001838                     l2371:
  1620  001838  502E               	movf	RtccWriteTime@wasWrEn,w,c
  1621  00183A  A4D8               	btfss	status,2,c
  1622  00183C  D003               	goto	l2375
  1623  00183E  010F               	movlb	15	; () banked
  1624  001840  9B3F               	bcf	63,5,b	;volatile
  1625                           
  1626                           ; BSR set to: 15
  1627  001842  D000               	goto	l2375
  1628  001844                     l2375:
  1629  001844  502A               	movf	RtccWriteTime@di,w,c
  1630  001846  B4D8               	btfsc	status,2,c
  1631  001848  0012               	return	
  1632  00184A  8CF2               	bsf	intcon,6,c	;volatile
  1633  00184C  0012               	return	
  1634                           
  1635                           ;	Return value of _RtccWriteTime is never used
  1636  00184E  0012               	return		;funcret
  1637  001850                     __end_of_RtccWriteTime:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           prodl	equ	0xFF3
  1644                           intcon	equ	0xFF2
  1645                           postinc0	equ	0xFEE
  1646                           wreg	equ	0xFE8
  1647                           postdec1	equ	0xFE5
  1648                           fsr1l	equ	0xFE1
  1649                           indf2	equ	0xFDF
  1650                           fsr2h	equ	0xFDA
  1651                           fsr2l	equ	0xFD9
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _RtccWriteDate *****************
  1655 ;; Defined at:
  1656 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  pDt             2    0[COMRAM] PTR const struct .
  1659 ;;		 -> RtccDate(4), 
  1660 ;;  di              1    2[COMRAM] enum E7121
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  tempHourWDay    2   11[COMRAM] struct .
  1663 ;;  tempDayMonth    2    9[COMRAM] struct .
  1664 ;;  tempYear        2    6[COMRAM] struct .
  1665 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1666 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1667 ;;  wasOn           1    4[COMRAM] enum E7121
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      enum E7337
  1670 ;; Registers used:
  1671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1677 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1680 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1681 ;;Total ram usage:       13 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    1
  1684 ;; This function calls:
  1685 ;;		_RtccWrOn
  1686 ;; This function is called by:
  1687 ;;		_Write_RTC
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text5
  1692  0015FE                     __ptext5:
  1693                           	opt stack 0
  1694  0015FE                     _RtccWriteDate:
  1695                           	opt stack 27
  1696                           
  1697                           ;incstack = 0
  1698  0015FE  0E00               	movlw	0
  1699  001600  6E2D               	movwf	RtccWriteDate@wasAlrm,c
  1700  001602  EE20 F002          	lfsr	2,2
  1701  001606  5028               	movf	RtccWriteDate@pDt,w,c
  1702  001608  26D9               	addwf	fsr2l,f,c
  1703  00160A  5029               	movf	RtccWriteDate@pDt+1,w,c
  1704  00160C  22DA               	addwfc	fsr2h,f,c
  1705  00160E  0E13               	movlw	19
  1706  001610  60DF               	cpfslt	indf2,c
  1707  001612  0012               	return	
  1708  001614  EE20 F002          	lfsr	2,2
  1709  001618  5028               	movf	RtccWriteDate@pDt,w,c
  1710  00161A  26D9               	addwf	fsr2l,f,c
  1711  00161C  5029               	movf	RtccWriteDate@pDt+1,w,c
  1712  00161E  22DA               	addwfc	fsr2h,f,c
  1713  001620  50DF               	movf	indf2,w,c
  1714  001622  B4D8               	btfsc	status,2,c
  1715  001624  0012               	return	
  1716  001626  EE20 F001          	lfsr	2,1
  1717  00162A  5028               	movf	RtccWriteDate@pDt,w,c
  1718  00162C  26D9               	addwf	fsr2l,f,c
  1719  00162E  5029               	movf	RtccWriteDate@pDt+1,w,c
  1720  001630  22DA               	addwfc	fsr2h,f,c
  1721  001632  0E32               	movlw	50
  1722  001634  60DF               	cpfslt	indf2,c
  1723  001636  0012               	return	
  1724  001638  EE20 F001          	lfsr	2,1
  1725  00163C  5028               	movf	RtccWriteDate@pDt,w,c
  1726  00163E  26D9               	addwf	fsr2l,f,c
  1727  001640  5029               	movf	RtccWriteDate@pDt+1,w,c
  1728  001642  22DA               	addwfc	fsr2h,f,c
  1729  001644  50DF               	movf	indf2,w,c
  1730  001646  B4D8               	btfsc	status,2,c
  1731  001648  0012               	return	
  1732  00164A  EE20 F003          	lfsr	2,3
  1733  00164E  5028               	movf	RtccWriteDate@pDt,w,c
  1734  001650  26D9               	addwf	fsr2l,f,c
  1735  001652  5029               	movf	RtccWriteDate@pDt+1,w,c
  1736  001654  22DA               	addwfc	fsr2h,f,c
  1737  001656  0E99               	movlw	153
  1738  001658  64DF               	cpfsgt	indf2,c
  1739  00165A  D002               	goto	l2391
  1740  00165C  0012               	return	
  1741                           
  1742                           ;	Return value of _RtccWriteDate is never used
  1743  00165E  0012               	return	
  1744  001660                     l2391:
  1745  001660  EE20 F003          	lfsr	2,3
  1746  001664  5028               	movf	RtccWriteDate@pDt,w,c
  1747  001666  26D9               	addwf	fsr2l,f,c
  1748  001668  5029               	movf	RtccWriteDate@pDt+1,w,c
  1749  00166A  22DA               	addwfc	fsr2h,f,c
  1750  00166C  50DF               	movf	indf2,w,c
  1751  00166E  6E2E               	movwf	RtccWriteDate@tempYear,c
  1752  001670  EE20 F001          	lfsr	2,1
  1753  001674  5028               	movf	RtccWriteDate@pDt,w,c
  1754  001676  26D9               	addwf	fsr2l,f,c
  1755  001678  5029               	movf	RtccWriteDate@pDt+1,w,c
  1756  00167A  22DA               	addwfc	fsr2h,f,c
  1757  00167C  50DF               	movf	indf2,w,c
  1758  00167E  6E31               	movwf	RtccWriteDate@tempDayMonth,c
  1759  001680  EE20 F002          	lfsr	2,2
  1760  001684  5028               	movf	RtccWriteDate@pDt,w,c
  1761  001686  26D9               	addwf	fsr2l,f,c
  1762  001688  5029               	movf	RtccWriteDate@pDt+1,w,c
  1763  00168A  22DA               	addwfc	fsr2h,f,c
  1764  00168C  50DF               	movf	indf2,w,c
  1765  00168E  6E32               	movwf	RtccWriteDate@tempDayMonth+1,c
  1766  001690  502A               	movf	RtccWriteDate@di,w,c
  1767  001692  B4D8               	btfsc	status,2,c
  1768  001694  D002               	goto	l2397
  1769  001696  9CF2               	bcf	intcon,6,c	;volatile
  1770  001698  D000               	goto	l2397
  1771  00169A                     l2397:
  1772  00169A  0E00               	movlw	0
  1773  00169C  BB3F               	btfsc	63,5,b	;volatile
  1774  00169E  0E01               	movlw	1
  1775  0016A0  6E30               	movwf	RtccWriteDate@wasWrEn,c
  1776  0016A2  5030               	movf	RtccWriteDate@wasWrEn,w,c
  1777  0016A4  A4D8               	btfss	status,2,c
  1778  0016A6  D003               	goto	l2401
  1779  0016A8  EC8E  F011         	call	_RtccWrOn	;wreg free
  1780  0016AC  D000               	goto	l2401
  1781  0016AE                     l2401:
  1782  0016AE  0E00               	movlw	0
  1783  0016B0  BF3F               	btfsc	63,7,b	;volatile
  1784  0016B2  0E01               	movlw	1
  1785  0016B4  6E2C               	movwf	RtccWriteDate@wasOn,c
  1786  0016B6  502C               	movf	RtccWriteDate@wasOn,w,c
  1787  0016B8  B4D8               	btfsc	status,2,c
  1788  0016BA  D007               	goto	l2407
  1789  0016BC  0E00               	movlw	0
  1790  0016BE  BE91               	btfsc	3985,7,c	;volatile
  1791  0016C0  0E01               	movlw	1
  1792  0016C2  6E2D               	movwf	RtccWriteDate@wasAlrm,c
  1793  0016C4  010F               	movlb	15	; () banked
  1794  0016C6  9F3F               	bcf	63,7,b	;volatile
  1795  0016C8  D000               	goto	l2407
  1796  0016CA                     l2407:
  1797  0016CA  0EFC               	movlw	252
  1798  0016CC  010F               	movlb	15	; () banked
  1799  0016CE  173F               	andwf	63,f,b	;volatile
  1800  0016D0  010F               	movlb	15	; () banked
  1801  0016D2  813F               	bsf	63,0,b	;volatile
  1802                           
  1803                           ; BSR set to: 15
  1804  0016D4  CF98 F033          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  1805                           
  1806                           ; BSR set to: 15
  1807  0016D8  CF99 F034          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  1808                           
  1809                           ; BSR set to: 15
  1810  0016DC  C028  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  1811  0016E0  C029  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  1812  0016E4  50DF               	movf	indf2,w,c
  1813  0016E6  6E34               	movwf	RtccWriteDate@tempHourWDay+1,c
  1814                           
  1815                           ; BSR set to: 15
  1816  0016E8  0EFC               	movlw	252
  1817  0016EA  010F               	movlb	15	; () banked
  1818  0016EC  173F               	andwf	63,f,b	;volatile
  1819                           
  1820                           ; BSR set to: 15
  1821  0016EE  0E03               	movlw	3
  1822  0016F0  010F               	movlb	15	; () banked
  1823  0016F2  133F               	iorwf	63,f,b	;volatile
  1824                           
  1825                           ; BSR set to: 15
  1826  0016F4  C02E  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  1827                           
  1828                           ; BSR set to: 15
  1829  0016F8  C02F  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  1830                           
  1831                           ; BSR set to: 15
  1832  0016FC  C031  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  1833                           
  1834                           ; BSR set to: 15
  1835  001700  C032  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  1836                           
  1837                           ; BSR set to: 15
  1838  001704  C033  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  1839                           
  1840                           ; BSR set to: 15
  1841  001708  C034  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  1842                           
  1843                           ; BSR set to: 15
  1844  00170C  502C               	movf	RtccWriteDate@wasOn,w,c
  1845  00170E  B4D8               	btfsc	status,2,c
  1846  001710  D00D               	goto	l2443
  1847                           
  1848                           ; BSR set to: 15
  1849  001712  010F               	movlb	15	; () banked
  1850  001714  8F3F               	bsf	63,7,b	;volatile
  1851                           
  1852                           ; BSR set to: 15
  1853  001716  502D               	movf	RtccWriteDate@wasAlrm,w,c
  1854  001718  B4D8               	btfsc	status,2,c
  1855  00171A  D002               	goto	l2439
  1856                           
  1857                           ; BSR set to: 15
  1858  00171C  8E91               	bsf	3985,7,c	;volatile
  1859  00171E  D000               	goto	l2439
  1860  001720                     l2439:
  1861                           
  1862                           ; BSR set to: 15
  1863  001720  5030               	movf	RtccWriteDate@wasWrEn,w,c
  1864  001722  B4D8               	btfsc	status,2,c
  1865  001724  D009               	goto	l2447
  1866                           
  1867                           ; BSR set to: 15
  1868  001726  EC8E  F011         	call	_RtccWrOn	;wreg free
  1869  00172A  D006               	goto	l2447
  1870  00172C                     l2443:
  1871  00172C  5030               	movf	RtccWriteDate@wasWrEn,w,c
  1872  00172E  A4D8               	btfss	status,2,c
  1873  001730  D003               	goto	l2447
  1874  001732  010F               	movlb	15	; () banked
  1875  001734  9B3F               	bcf	63,5,b	;volatile
  1876                           
  1877                           ; BSR set to: 15
  1878  001736  D000               	goto	l2447
  1879  001738                     l2447:
  1880  001738  502A               	movf	RtccWriteDate@di,w,c
  1881  00173A  B4D8               	btfsc	status,2,c
  1882  00173C  0012               	return	
  1883  00173E  9CF2               	bcf	intcon,6,c	;volatile
  1884  001740  0012               	return	
  1885                           
  1886                           ;	Return value of _RtccWriteDate is never used
  1887  001742  0012               	return		;funcret
  1888  001744                     __end_of_RtccWriteDate:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodl	equ	0xFF3
  1895                           intcon	equ	0xFF2
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           indf2	equ	0xFDF
  1901                           fsr2h	equ	0xFDA
  1902                           fsr2l	equ	0xFD9
  1903                           status	equ	0xFD8
  1904                           
  1905 ;; *************** function _RtccWrOn *****************
  1906 ;; Defined at:
  1907 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  data            2    0        unsigned int 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;		None               void
  1914 ;; Registers used:
  1915 ;;		wreg, status,2
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_Write_RTC
  1931 ;;		_RtccWriteDate
  1932 ;;		_RtccWriteTime
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text6
  1937  00231C                     __ptext6:
  1938                           	opt stack 0
  1939  00231C                     _RtccWrOn:
  1940                           	opt stack 27
  1941                           
  1942                           ;incstack = 0
  1943  00231C  9CF2               	bcf	intcon,6,c	;volatile
  1944  00231E  0E55               	movlw	85
  1945  002320  6EA7               	movwf	4007,c	;volatile
  1946  002322  0EAA               	movlw	170
  1947  002324  6EA7               	movwf	4007,c	;volatile
  1948  002326  010F               	movlb	15	; () banked
  1949  002328  8B3F               	bsf	63,5,b	;volatile
  1950                           
  1951                           ; BSR set to: 15
  1952  00232A  8CF2               	bsf	intcon,6,c	;volatile
  1953                           
  1954                           ; BSR set to: 15
  1955  00232C  0012               	return		;funcret
  1956  00232E                     __end_of_RtccWrOn:
  1957                           	opt stack 0
  1958                           tblptru	equ	0xFF8
  1959                           tblptrh	equ	0xFF7
  1960                           tblptrl	equ	0xFF6
  1961                           tablat	equ	0xFF5
  1962                           prodl	equ	0xFF3
  1963                           intcon	equ	0xFF2
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           postdec1	equ	0xFE5
  1967                           fsr1l	equ	0xFE1
  1968                           indf2	equ	0xFDF
  1969                           fsr2h	equ	0xFDA
  1970                           fsr2l	equ	0xFD9
  1971                           status	equ	0xFD8
  1972                           
  1973 ;; *************** function _keyboard_control *****************
  1974 ;; Defined at:
  1975 ;;		line 340 in file "main.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;		None               void
  1982 ;; Registers used:
  1983 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;Total ram usage:        1 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    9
  1996 ;; This function calls:
  1997 ;;		_button_A
  1998 ;;		_button_B
  1999 ;;		_button_C
  2000 ;;		_button_D
  2001 ;;		_button_asterisk
  2002 ;;		_button_hash
  2003 ;;		_button_number
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text7
  2010  001354                     __ptext7:
  2011                           	opt stack 0
  2012  001354                     _keyboard_control:
  2013                           	opt stack 21
  2014                           
  2015                           ;main.c: 342: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2016                           
  2017                           ; BSR set to: 15
  2018                           ;incstack = 0
  2019  001354  8089               	bsf	3977,0,c	;volatile
  2020  001356  9289               	bcf	3977,1,c	;volatile
  2021  001358  9489               	bcf	3977,2,c	;volatile
  2022  00135A  9689               	bcf	3977,3,c	;volatile
  2023                           
  2024                           ;main.c: 343: {
  2025                           ;main.c: 344: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2026  00135C  AA80               	btfss	3968,5,c	;volatile
  2027  00135E  D007               	goto	l246
  2028  001360  0E01               	movlw	1
  2029  001362  6E1F               	movwf	_key,c
  2030  001364  ECA4  F010         	call	_button_number	;wreg free
  2031  001368  D000               	goto	l247
  2032  00136A                     l247:
  2033  00136A  BA80               	btfsc	3968,5,c	;volatile
  2034  00136C  D7FE               	goto	l247
  2035  00136E                     l246:
  2036                           
  2037                           ;main.c: 345: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2038  00136E  AE80               	btfss	3968,7,c	;volatile
  2039  001370  D007               	goto	l250
  2040  001372  0E02               	movlw	2
  2041  001374  6E1F               	movwf	_key,c
  2042  001376  ECA4  F010         	call	_button_number	;wreg free
  2043  00137A  D000               	goto	l251
  2044  00137C                     l251:
  2045  00137C  BE80               	btfsc	3968,7,c	;volatile
  2046  00137E  D7FE               	goto	l251
  2047  001380                     l250:
  2048                           
  2049                           ;main.c: 346: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2050  001380  AC80               	btfss	3968,6,c	;volatile
  2051  001382  D007               	goto	l254
  2052  001384  0E03               	movlw	3
  2053  001386  6E1F               	movwf	_key,c
  2054  001388  ECA4  F010         	call	_button_number	;wreg free
  2055  00138C  D000               	goto	l255
  2056  00138E                     l255:
  2057  00138E  BC80               	btfsc	3968,6,c	;volatile
  2058  001390  D7FE               	goto	l255
  2059  001392                     l254:
  2060                           
  2061                           ;main.c: 347: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2062  001392  A482               	btfss	3970,2,c	;volatile
  2063  001394  D007               	goto	l258
  2064  001396  0E0B               	movlw	11
  2065  001398  6E1F               	movwf	_key,c
  2066  00139A  ECC4  F010         	call	_button_A	;wreg free
  2067  00139E  D000               	goto	l259
  2068  0013A0                     l259:
  2069  0013A0  B482               	btfsc	3970,2,c	;volatile
  2070  0013A2  D7FE               	goto	l259
  2071  0013A4                     l258:
  2072                           
  2073                           ;main.c: 348: }
  2074                           ;main.c: 350: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2075  0013A4  9089               	bcf	3977,0,c	;volatile
  2076  0013A6  8289               	bsf	3977,1,c	;volatile
  2077  0013A8  9489               	bcf	3977,2,c	;volatile
  2078  0013AA  9689               	bcf	3977,3,c	;volatile
  2079                           
  2080                           ;main.c: 351: {
  2081                           ;main.c: 352: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2082  0013AC  AA80               	btfss	3968,5,c	;volatile
  2083  0013AE  D007               	goto	l262
  2084  0013B0  0E04               	movlw	4
  2085  0013B2  6E1F               	movwf	_key,c
  2086  0013B4  ECA4  F010         	call	_button_number	;wreg free
  2087  0013B8  D000               	goto	l263
  2088  0013BA                     l263:
  2089  0013BA  BA80               	btfsc	3968,5,c	;volatile
  2090  0013BC  D7FE               	goto	l263
  2091  0013BE                     l262:
  2092                           
  2093                           ;main.c: 353: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2094  0013BE  AE80               	btfss	3968,7,c	;volatile
  2095  0013C0  D007               	goto	l266
  2096  0013C2  0E05               	movlw	5
  2097  0013C4  6E1F               	movwf	_key,c
  2098  0013C6  ECA4  F010         	call	_button_number	;wreg free
  2099  0013CA  D000               	goto	l267
  2100  0013CC                     l267:
  2101  0013CC  BE80               	btfsc	3968,7,c	;volatile
  2102  0013CE  D7FE               	goto	l267
  2103  0013D0                     l266:
  2104                           
  2105                           ;main.c: 354: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2106  0013D0  AC80               	btfss	3968,6,c	;volatile
  2107  0013D2  D007               	goto	l270
  2108  0013D4  0E06               	movlw	6
  2109  0013D6  6E1F               	movwf	_key,c
  2110  0013D8  ECA4  F010         	call	_button_number	;wreg free
  2111  0013DC  D000               	goto	l271
  2112  0013DE                     l271:
  2113  0013DE  BC80               	btfsc	3968,6,c	;volatile
  2114  0013E0  D7FE               	goto	l271
  2115  0013E2                     l270:
  2116                           
  2117                           ;main.c: 355: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2118  0013E2  A482               	btfss	3970,2,c	;volatile
  2119  0013E4  D007               	goto	l274
  2120  0013E6  0E0C               	movlw	12
  2121  0013E8  6E1F               	movwf	_key,c
  2122  0013EA  EC0D  F010         	call	_button_B	;wreg free
  2123  0013EE  D000               	goto	l275
  2124  0013F0                     l275:
  2125  0013F0  B482               	btfsc	3970,2,c	;volatile
  2126  0013F2  D7FE               	goto	l275
  2127  0013F4                     l274:
  2128                           
  2129                           ;main.c: 356: }
  2130                           ;main.c: 358: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2131  0013F4  9089               	bcf	3977,0,c	;volatile
  2132  0013F6  9289               	bcf	3977,1,c	;volatile
  2133  0013F8  8489               	bsf	3977,2,c	;volatile
  2134  0013FA  9689               	bcf	3977,3,c	;volatile
  2135                           
  2136                           ;main.c: 359: {
  2137                           ;main.c: 360: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2138  0013FC  AA80               	btfss	3968,5,c	;volatile
  2139  0013FE  D007               	goto	l278
  2140  001400  0E07               	movlw	7
  2141  001402  6E1F               	movwf	_key,c
  2142  001404  ECA4  F010         	call	_button_number	;wreg free
  2143  001408  D000               	goto	l279
  2144  00140A                     l279:
  2145  00140A  BA80               	btfsc	3968,5,c	;volatile
  2146  00140C  D7FE               	goto	l279
  2147  00140E                     l278:
  2148                           
  2149                           ;main.c: 361: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2150  00140E  AE80               	btfss	3968,7,c	;volatile
  2151  001410  D007               	goto	l282
  2152  001412  0E08               	movlw	8
  2153  001414  6E1F               	movwf	_key,c
  2154  001416  ECA4  F010         	call	_button_number	;wreg free
  2155  00141A  D000               	goto	l283
  2156  00141C                     l283:
  2157  00141C  BE80               	btfsc	3968,7,c	;volatile
  2158  00141E  D7FE               	goto	l283
  2159  001420                     l282:
  2160                           
  2161                           ;main.c: 362: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2162  001420  AC80               	btfss	3968,6,c	;volatile
  2163  001422  D007               	goto	l286
  2164  001424  0E09               	movlw	9
  2165  001426  6E1F               	movwf	_key,c
  2166  001428  ECA4  F010         	call	_button_number	;wreg free
  2167  00142C  D000               	goto	l287
  2168  00142E                     l287:
  2169  00142E  BC80               	btfsc	3968,6,c	;volatile
  2170  001430  D7FE               	goto	l287
  2171  001432                     l286:
  2172                           
  2173                           ;main.c: 363: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2174  001432  A482               	btfss	3970,2,c	;volatile
  2175  001434  D007               	goto	l290
  2176  001436  0E0D               	movlw	13
  2177  001438  6E1F               	movwf	_key,c
  2178  00143A  EC76  F011         	call	_button_C	;wreg free
  2179  00143E  D000               	goto	l291
  2180  001440                     l291:
  2181  001440  B482               	btfsc	3970,2,c	;volatile
  2182  001442  D7FE               	goto	l291
  2183  001444                     l290:
  2184                           
  2185                           ;main.c: 364: }
  2186                           ;main.c: 366: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2187  001444  9089               	bcf	3977,0,c	;volatile
  2188  001446  9289               	bcf	3977,1,c	;volatile
  2189  001448  9489               	bcf	3977,2,c	;volatile
  2190  00144A  8689               	bsf	3977,3,c	;volatile
  2191                           
  2192                           ;main.c: 367: {
  2193                           ;main.c: 368: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2194  00144C  AA80               	btfss	3968,5,c	;volatile
  2195  00144E  D007               	goto	l294
  2196  001450  0E0E               	movlw	14
  2197  001452  6E1F               	movwf	_key,c
  2198  001454  ECB8  F011         	call	_button_asterisk	;wreg free
  2199  001458  D000               	goto	l295
  2200  00145A                     l295:
  2201  00145A  BA80               	btfsc	3968,5,c	;volatile
  2202  00145C  D7FE               	goto	l295
  2203  00145E                     l294:
  2204                           
  2205                           ;main.c: 369: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2206  00145E  AE80               	btfss	3968,7,c	;volatile
  2207  001460  D007               	goto	l298
  2208  001462  0E00               	movlw	0
  2209  001464  6E1F               	movwf	_key,c
  2210  001466  ECA4  F010         	call	_button_number	;wreg free
  2211  00146A  D000               	goto	l299
  2212  00146C                     l299:
  2213  00146C  BE80               	btfsc	3968,7,c	;volatile
  2214  00146E  D7FE               	goto	l299
  2215  001470                     l298:
  2216                           
  2217                           ;main.c: 370: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2218  001470  AC80               	btfss	3968,6,c	;volatile
  2219  001472  D007               	goto	l302
  2220  001474  0E0F               	movlw	15
  2221  001476  6E1F               	movwf	_key,c
  2222  001478  ECA9  F011         	call	_button_hash	;wreg free
  2223  00147C  D000               	goto	l303
  2224  00147E                     l303:
  2225  00147E  BC80               	btfsc	3968,6,c	;volatile
  2226  001480  D7FE               	goto	l303
  2227  001482                     l302:
  2228                           
  2229                           ;main.c: 371: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2230  001482  A482               	btfss	3970,2,c	;volatile
  2231  001484  D009               	goto	l3003
  2232  001486  0E10               	movlw	16
  2233  001488  6E1F               	movwf	_key,c
  2234  00148A  ECCB  F011         	call	_button_D	;wreg free
  2235  00148E  D000               	goto	l307
  2236  001490                     l307:
  2237  001490  A482               	btfss	3970,2,c	;volatile
  2238  001492  D002               	goto	l3003
  2239  001494  D7FD               	goto	l307
  2240  001496  D000               	goto	l3003
  2241  001498                     l3003:
  2242                           
  2243                           ;main.c: 372: }
  2244                           ;main.c: 374: _delay((unsigned long)((98)*(8000000/4000.0)));
  2245  001498  0EFF               	movlw	255
  2246  00149A  6E4B               	movwf	??_keyboard_control& (0+255),c
  2247  00149C  0E8A               	movlw	138
  2248  00149E                     u2217:
  2249  00149E  2EE8               	decfsz	wreg,f,c
  2250  0014A0  D7FE               	goto	u2217
  2251  0014A2  2E4B               	decfsz	??_keyboard_control& (0+255),f,c
  2252  0014A4  D7FC               	goto	u2217
  2253  0014A6  D000               	nop2	
  2254  0014A8  0012               	return		;funcret
  2255  0014AA                     __end_of_keyboard_control:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           prodl	equ	0xFF3
  2262                           intcon	equ	0xFF2
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1l	equ	0xFE1
  2267                           indf2	equ	0xFDF
  2268                           fsr2h	equ	0xFDA
  2269                           fsr2l	equ	0xFD9
  2270                           status	equ	0xFD8
  2271                           
  2272 ;; *************** function _button_number *****************
  2273 ;; Defined at:
  2274 ;;		line 324 in file "main.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;		None               void
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    5
  2295 ;; This function calls:
  2296 ;;		_lcd_putrs
  2297 ;;		_sprintf
  2298 ;; This function is called by:
  2299 ;;		_keyboard_control
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text8
  2304  002148                     __ptext8:
  2305                           	opt stack 0
  2306  002148                     _button_number:
  2307                           	opt stack 24
  2308                           
  2309                           ;main.c: 326: if(activity == 1){
  2310                           
  2311                           ;incstack = 0
  2312  002148  0403               	decf	_activity,w,c
  2313  00214A  1004               	iorwf	_activity+1,w,c
  2314  00214C  A4D8               	btfss	status,2,c
  2315  00214E  D007               	goto	l2853
  2316                           
  2317                           ;main.c: 328: lcd_putrs("*");
  2318  002150  0E92               	movlw	low STR_34
  2319  002152  6E30               	movwf	lcd_putrs@ptr,c
  2320  002154  0E0F               	movlw	high STR_34
  2321  002156  6E31               	movwf	lcd_putrs@ptr+1,c
  2322  002158  ECE3  F00F         	call	_lcd_putrs	;wreg free
  2323                           
  2324                           ;main.c: 330: } else {
  2325  00215C  0012               	return	
  2326  00215E                     l2853:
  2327                           
  2328                           ;main.c: 332: sprintf(buffer1,"%01u",key);
  2329  00215E  0E7C               	movlw	low _buffer1
  2330  002160  6E34               	movwf	sprintf@sp,c
  2331  002162  0E00               	movlw	high _buffer1
  2332  002164  6E35               	movwf	sprintf@sp+1,c
  2333  002166  0E7D               	movlw	low STR_36
  2334  002168  6E36               	movwf	sprintf@f,c
  2335  00216A  0E0F               	movlw	high STR_36
  2336  00216C  6E37               	movwf	sprintf@f+1,c
  2337  00216E  C01F  F038         	movff	_key,?_sprintf+4
  2338  002172  6A39               	clrf	?_sprintf+5,c
  2339  002174  ECCC  F007         	call	_sprintf	;wreg free
  2340                           
  2341                           ;main.c: 333: lcd_putrs(buffer1);
  2342  002178  0E7C               	movlw	low _buffer1
  2343  00217A  6E30               	movwf	lcd_putrs@ptr,c
  2344  00217C  0E00               	movlw	high _buffer1
  2345  00217E  6E31               	movwf	lcd_putrs@ptr+1,c
  2346  002180  ECE3  F00F         	call	_lcd_putrs	;wreg free
  2347  002184  0012               	return	
  2348  002186  0012               	return		;funcret
  2349  002188                     __end_of_button_number:
  2350                           	opt stack 0
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodl	equ	0xFF3
  2356                           intcon	equ	0xFF2
  2357                           postinc0	equ	0xFEE
  2358                           wreg	equ	0xFE8
  2359                           postdec1	equ	0xFE5
  2360                           fsr1l	equ	0xFE1
  2361                           indf2	equ	0xFDF
  2362                           fsr2h	equ	0xFDA
  2363                           fsr2l	equ	0xFD9
  2364                           status	equ	0xFD8
  2365                           
  2366 ;; *************** function _button_hash *****************
  2367 ;; Defined at:
  2368 ;;		line 315 in file "main.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;		None               void
  2375 ;; Registers used:
  2376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    8
  2389 ;; This function calls:
  2390 ;;		_pin_input_validator
  2391 ;; This function is called by:
  2392 ;;		_keyboard_control
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text9
  2397  002352                     __ptext9:
  2398                           	opt stack 0
  2399  002352                     _button_hash:
  2400                           	opt stack 21
  2401                           
  2402                           ;main.c: 317: if(activity == 1){
  2403                           
  2404                           ;incstack = 0
  2405  002352  0403               	decf	_activity,w,c
  2406  002354  1004               	iorwf	_activity+1,w,c
  2407  002356  A4D8               	btfss	status,2,c
  2408  002358  0012               	return	
  2409                           
  2410                           ;main.c: 318: pin_input_validator();
  2411  00235A  ECB1  F011         	call	_pin_input_validator	;wreg free
  2412  00235E  0012               	return	
  2413  002360  0012               	return		;funcret
  2414  002362                     __end_of_button_hash:
  2415                           	opt stack 0
  2416                           tblptru	equ	0xFF8
  2417                           tblptrh	equ	0xFF7
  2418                           tblptrl	equ	0xFF6
  2419                           tablat	equ	0xFF5
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           postdec1	equ	0xFE5
  2425                           fsr1l	equ	0xFE1
  2426                           indf2	equ	0xFDF
  2427                           fsr2h	equ	0xFDA
  2428                           fsr2l	equ	0xFD9
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _pin_input_validator *****************
  2432 ;; Defined at:
  2433 ;;		line 232 in file "main.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    7
  2454 ;; This function calls:
  2455 ;;		_activity_menu
  2456 ;;		_activity_pin
  2457 ;; This function is called by:
  2458 ;;		_button_hash
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text10
  2463  002362                     __ptext10:
  2464                           	opt stack 0
  2465  002362                     _pin_input_validator:
  2466                           	opt stack 21
  2467                           
  2468                           ;main.c: 235: activity_menu();
  2469                           
  2470                           ;incstack = 0
  2471  002362  EC0C  F00E         	call	_activity_menu	;wreg free
  2472                           
  2473                           ;main.c: 236: }
  2474  002366  0012               	return	
  2475                           
  2476                           ;main.c: 237: else{
  2477                           ;main.c: 238: activity_pin();
  2478  002368  ECE2  F010         	call	_activity_pin	;wreg free
  2479  00236C  0012               	return	
  2480  00236E  0012               	return		;funcret
  2481  002370                     __end_of_pin_input_validator:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           prodl	equ	0xFF3
  2488                           intcon	equ	0xFF2
  2489                           postinc0	equ	0xFEE
  2490                           wreg	equ	0xFE8
  2491                           postdec1	equ	0xFE5
  2492                           fsr1l	equ	0xFE1
  2493                           indf2	equ	0xFDF
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _button_asterisk *****************
  2499 ;; Defined at:
  2500 ;;		line 310 in file "main.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    5
  2521 ;; This function calls:
  2522 ;;		_lcd_putrs
  2523 ;; This function is called by:
  2524 ;;		_keyboard_control
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text11
  2529  002370                     __ptext11:
  2530                           	opt stack 0
  2531  002370                     _button_asterisk:
  2532                           	opt stack 24
  2533                           
  2534                           ;main.c: 311: lcd_putrs("*");
  2535                           
  2536                           ;incstack = 0
  2537  002370  0E92               	movlw	low STR_34
  2538  002372  6E30               	movwf	lcd_putrs@ptr,c
  2539  002374  0E0F               	movlw	high STR_34
  2540  002376  6E31               	movwf	lcd_putrs@ptr+1,c
  2541  002378  ECE3  F00F         	call	_lcd_putrs	;wreg free
  2542  00237C  0012               	return		;funcret
  2543  00237E                     __end_of_button_asterisk:
  2544                           	opt stack 0
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           postinc0	equ	0xFEE
  2552                           wreg	equ	0xFE8
  2553                           postdec1	equ	0xFE5
  2554                           fsr1l	equ	0xFE1
  2555                           indf2	equ	0xFDF
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _button_D *****************
  2561 ;; Defined at:
  2562 ;;		line 303 in file "main.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    7
  2583 ;; This function calls:
  2584 ;;		_activity_home
  2585 ;; This function is called by:
  2586 ;;		_keyboard_control
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text12
  2591  002396                     __ptext12:
  2592                           	opt stack 0
  2593  002396                     _button_D:
  2594                           	opt stack 22
  2595                           
  2596                           ;main.c: 305: activity_home();
  2597                           
  2598                           ;incstack = 0
  2599  002396  EC18  F011         	call	_activity_home	;wreg free
  2600  00239A  0012               	return		;funcret
  2601  00239C                     __end_of_button_D:
  2602                           	opt stack 0
  2603                           tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           prodl	equ	0xFF3
  2608                           intcon	equ	0xFF2
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1l	equ	0xFE1
  2613                           indf2	equ	0xFDF
  2614                           fsr2h	equ	0xFDA
  2615                           fsr2l	equ	0xFD9
  2616                           status	equ	0xFD8
  2617                           
  2618 ;; *************** function _activity_home *****************
  2619 ;; Defined at:
  2620 ;;		line 100 in file "main.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;		None               void
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    6
  2641 ;; This function calls:
  2642 ;;		_lcd_init
  2643 ;;		_lcd_write
  2644 ;; This function is called by:
  2645 ;;		_button_D
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text13
  2651  002230                     __ptext13:
  2652                           	opt stack 0
  2653  002230                     _activity_home:
  2654                           	opt stack 22
  2655                           
  2656                           ;main.c: 102: activity = 0;
  2657                           
  2658                           ;incstack = 0
  2659  002230  0E00               	movlw	0
  2660  002232  6E04               	movwf	_activity+1,c
  2661  002234  0E00               	movlw	0
  2662  002236  6E03               	movwf	_activity,c
  2663                           
  2664                           ;main.c: 103: lcd_init();
  2665  002238  ECCC  F00D         	call	_lcd_init	;wreg free
  2666                           
  2667                           ;main.c: 104: lcd_write(1,1,"X28");
  2668  00223C  0E00               	movlw	0
  2669  00223E  6E33               	movwf	lcd_write@column+1,c
  2670  002240  0E01               	movlw	1
  2671  002242  6E32               	movwf	lcd_write@column,c
  2672  002244  0E00               	movlw	0
  2673  002246  6E35               	movwf	lcd_write@row+1,c
  2674  002248  0E01               	movlw	1
  2675  00224A  6E34               	movwf	lcd_write@row,c
  2676  00224C  0E82               	movlw	low STR_4
  2677  00224E  6E36               	movwf	lcd_write@string,c
  2678  002250  0E0F               	movlw	high STR_4
  2679  002252  6E37               	movwf	lcd_write@string+1,c
  2680  002254  EC82  F011         	call	_lcd_write	;wreg free
  2681  002258  0012               	return		;funcret
  2682  00225A                     __end_of_activity_home:
  2683                           	opt stack 0
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodl	equ	0xFF3
  2689                           intcon	equ	0xFF2
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postdec1	equ	0xFE5
  2693                           fsr1l	equ	0xFE1
  2694                           indf2	equ	0xFDF
  2695                           fsr2h	equ	0xFDA
  2696                           fsr2l	equ	0xFD9
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function _button_C *****************
  2700 ;; Defined at:
  2701 ;;		line 294 in file "main.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;		None               void
  2708 ;; Registers used:
  2709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    7
  2722 ;; This function calls:
  2723 ;;		_activity_menu
  2724 ;; This function is called by:
  2725 ;;		_keyboard_control
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text14
  2730  0022EC                     __ptext14:
  2731                           	opt stack 0
  2732  0022EC                     _button_C:
  2733                           	opt stack 22
  2734                           
  2735                           ;main.c: 296: if(activity != 0 && activity != 1){
  2736                           
  2737                           ;incstack = 0
  2738  0022EC  5003               	movf	_activity,w,c
  2739  0022EE  1004               	iorwf	_activity+1,w,c
  2740  0022F0  B4D8               	btfsc	status,2,c
  2741  0022F2  0012               	return	
  2742  0022F4  0403               	decf	_activity,w,c
  2743  0022F6  1004               	iorwf	_activity+1,w,c
  2744  0022F8  B4D8               	btfsc	status,2,c
  2745  0022FA  0012               	return	
  2746                           
  2747                           ;main.c: 297: activity_menu();
  2748  0022FC  EC0C  F00E         	call	_activity_menu	;wreg free
  2749  002300  0012               	return	
  2750  002302  0012               	return		;funcret
  2751  002304                     __end_of_button_C:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           prodl	equ	0xFF3
  2758                           intcon	equ	0xFF2
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1l	equ	0xFE1
  2763                           indf2	equ	0xFDF
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _activity_menu *****************
  2769 ;; Defined at:
  2770 ;;		line 119 in file "main.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;		None               void
  2777 ;; Registers used:
  2778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    6
  2791 ;; This function calls:
  2792 ;;		_lcd_init
  2793 ;;		_lcd_write
  2794 ;; This function is called by:
  2795 ;;		_pin_input_validator
  2796 ;;		_button_C
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text15
  2801  001C18                     __ptext15:
  2802                           	opt stack 0
  2803  001C18                     _activity_menu:
  2804                           	opt stack 21
  2805                           
  2806                           ;main.c: 121: activity = 2;
  2807                           
  2808                           ;incstack = 0
  2809  001C18  0E00               	movlw	0
  2810  001C1A  6E04               	movwf	_activity+1,c
  2811  001C1C  0E02               	movlw	2
  2812  001C1E  6E03               	movwf	_activity,c
  2813                           
  2814                           ;main.c: 122: lcd_init();
  2815  001C20  ECCC  F00D         	call	_lcd_init	;wreg free
  2816                           
  2817                           ;main.c: 123: lcd_write(2,1,"Activar");
  2818  001C24  0E00               	movlw	0
  2819  001C26  6E33               	movwf	lcd_write@column+1,c
  2820  001C28  0E02               	movlw	2
  2821  001C2A  6E32               	movwf	lcd_write@column,c
  2822  001C2C  0E00               	movlw	0
  2823  001C2E  6E35               	movwf	lcd_write@row+1,c
  2824  001C30  0E01               	movlw	1
  2825  001C32  6E34               	movwf	lcd_write@row,c
  2826  001C34  0E4D               	movlw	low STR_6
  2827  001C36  6E36               	movwf	lcd_write@string,c
  2828  001C38  0E0F               	movlw	high STR_6
  2829  001C3A  6E37               	movwf	lcd_write@string+1,c
  2830  001C3C  EC82  F011         	call	_lcd_write	;wreg free
  2831                           
  2832                           ;main.c: 124: lcd_write(2,2,"Reloj");
  2833  001C40  0E00               	movlw	0
  2834  001C42  6E33               	movwf	lcd_write@column+1,c
  2835  001C44  0E02               	movlw	2
  2836  001C46  6E32               	movwf	lcd_write@column,c
  2837  001C48  0E00               	movlw	0
  2838  001C4A  6E35               	movwf	lcd_write@row+1,c
  2839  001C4C  0E02               	movlw	2
  2840  001C4E  6E34               	movwf	lcd_write@row,c
  2841  001C50  0E62               	movlw	low STR_7
  2842  001C52  6E36               	movwf	lcd_write@string,c
  2843  001C54  0E0F               	movlw	high STR_7
  2844  001C56  6E37               	movwf	lcd_write@string+1,c
  2845  001C58  EC82  F011         	call	_lcd_write	;wreg free
  2846                           
  2847                           ;main.c: 125: lcd_write(10,1,"Pin");
  2848  001C5C  0E00               	movlw	0
  2849  001C5E  6E33               	movwf	lcd_write@column+1,c
  2850  001C60  0E0A               	movlw	10
  2851  001C62  6E32               	movwf	lcd_write@column,c
  2852  001C64  0E00               	movlw	0
  2853  001C66  6E35               	movwf	lcd_write@row+1,c
  2854  001C68  0E01               	movlw	1
  2855  001C6A  6E34               	movwf	lcd_write@row,c
  2856  001C6C  0E86               	movlw	low STR_8
  2857  001C6E  6E36               	movwf	lcd_write@string,c
  2858  001C70  0E0F               	movlw	high STR_8
  2859  001C72  6E37               	movwf	lcd_write@string+1,c
  2860  001C74  EC82  F011         	call	_lcd_write	;wreg free
  2861                           
  2862                           ;main.c: 126: lcd_write(10,2,"Alarma");
  2863  001C78  0E00               	movlw	0
  2864  001C7A  6E33               	movwf	lcd_write@column+1,c
  2865  001C7C  0E0A               	movlw	10
  2866  001C7E  6E32               	movwf	lcd_write@column,c
  2867  001C80  0E00               	movlw	0
  2868  001C82  6E35               	movwf	lcd_write@row+1,c
  2869  001C84  0E02               	movlw	2
  2870  001C86  6E34               	movwf	lcd_write@row,c
  2871  001C88  0E55               	movlw	low STR_9
  2872  001C8A  6E36               	movwf	lcd_write@string,c
  2873  001C8C  0E0F               	movlw	high STR_9
  2874  001C8E  6E37               	movwf	lcd_write@string+1,c
  2875  001C90  EC82  F011         	call	_lcd_write	;wreg free
  2876  001C94  0012               	return		;funcret
  2877  001C96                     __end_of_activity_menu:
  2878                           	opt stack 0
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           prodl	equ	0xFF3
  2884                           intcon	equ	0xFF2
  2885                           postinc0	equ	0xFEE
  2886                           wreg	equ	0xFE8
  2887                           postdec1	equ	0xFE5
  2888                           fsr1l	equ	0xFE1
  2889                           indf2	equ	0xFDF
  2890                           fsr2h	equ	0xFDA
  2891                           fsr2l	equ	0xFD9
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _button_B *****************
  2895 ;; Defined at:
  2896 ;;		line 266 in file "main.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;		None               void
  2903 ;; Registers used:
  2904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;Total ram usage:        2 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    7
  2917 ;; This function calls:
  2918 ;;		_activity_submenu_activation
  2919 ;;		_activity_submenu_alarm
  2920 ;;		_activity_submenu_clock
  2921 ;;		_activity_submenu_pin
  2922 ;; This function is called by:
  2923 ;;		_keyboard_control
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text16
  2928  00201A                     __ptext16:
  2929                           	opt stack 0
  2930  00201A                     _button_B:
  2931                           	opt stack 22
  2932                           
  2933                           ;main.c: 268: if(activity == 2){
  2934                           
  2935                           ;incstack = 0
  2936  00201A  0E02               	movlw	2
  2937  00201C  1803               	xorwf	_activity,w,c
  2938  00201E  1004               	iorwf	_activity+1,w,c
  2939  002020  A4D8               	btfss	status,2,c
  2940  002022  0012               	return	
  2941                           
  2942                           ;main.c: 270: switch(menu_selected){
  2943  002024  D00C               	goto	l2829
  2944  002026                     l2819:
  2945                           
  2946                           ;main.c: 273: activity_submenu_activation();
  2947  002026  EC84  F00F         	call	_activity_submenu_activation	;wreg free
  2948                           
  2949                           ;main.c: 274: break;
  2950  00202A  0012               	return	
  2951  00202C                     l2821:
  2952                           
  2953                           ;main.c: 277: activity_submenu_clock();
  2954  00202C  EC22  F00F         	call	_activity_submenu_clock	;wreg free
  2955                           
  2956                           ;main.c: 278: break;
  2957  002030  0012               	return	
  2958  002032                     l2823:
  2959                           
  2960                           ;main.c: 281: activity_submenu_pin();
  2961  002032  ECF1  F00E         	call	_activity_submenu_pin	;wreg free
  2962                           
  2963                           ;main.c: 282: break;
  2964  002036  0012               	return	
  2965  002038                     l2825:
  2966                           
  2967                           ;main.c: 285: activity_submenu_alarm();
  2968  002038  EC53  F00F         	call	_activity_submenu_alarm	;wreg free
  2969                           
  2970                           ;main.c: 287: }
  2971                           
  2972                           ;main.c: 286: break;
  2973  00203C  0012               	return	
  2974  00203E                     l2829:
  2975  00203E  C00F  F038         	movff	_menu_selected,??_button_B
  2976  002042  C010  F039         	movff	_menu_selected+1,??_button_B+1
  2977                           
  2978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2979                           ; Switch size 1, requested type "space"
  2980                           ; Number of cases is 1, Range of values is 0 to 0
  2981                           ; switch strategies available:
  2982                           ; Name         Instructions Cycles
  2983                           ; simple_byte            4     3 (average)
  2984                           ;	Chosen strategy is simple_byte
  2985  002046  5039               	movf	??_button_B+1,w,c
  2986  002048  0A00               	xorlw	0	; case 0
  2987  00204A  A4D8               	btfss	status,2,c
  2988  00204C  0012               	return	
  2989                           
  2990                           ; Switch size 1, requested type "space"
  2991                           ; Number of cases is 4, Range of values is 1 to 4
  2992                           ; switch strategies available:
  2993                           ; Name         Instructions Cycles
  2994                           ; simple_byte           13     7 (average)
  2995                           ;	Chosen strategy is simple_byte
  2996  00204E  5038               	movf	??_button_B,w,c
  2997  002050  0A01               	xorlw	1	; case 1
  2998  002052  B4D8               	btfsc	status,2,c
  2999  002054  D7E8               	goto	l2819
  3000  002056  0A03               	xorlw	3	; case 2
  3001  002058  B4D8               	btfsc	status,2,c
  3002  00205A  D7E8               	goto	l2821
  3003  00205C  0A01               	xorlw	1	; case 3
  3004  00205E  B4D8               	btfsc	status,2,c
  3005  002060  D7E8               	goto	l2823
  3006  002062  0A07               	xorlw	7	; case 4
  3007  002064  B4D8               	btfsc	status,2,c
  3008  002066  D7E8               	goto	l2825
  3009  002068  0012               	return	
  3010  00206A  0012               	return		;funcret
  3011  00206C                     __end_of_button_B:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodl	equ	0xFF3
  3018                           intcon	equ	0xFF2
  3019                           postinc0	equ	0xFEE
  3020                           wreg	equ	0xFE8
  3021                           postdec1	equ	0xFE5
  3022                           fsr1l	equ	0xFE1
  3023                           indf2	equ	0xFDF
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _activity_submenu_pin *****************
  3029 ;; Defined at:
  3030 ;;		line 210 in file "main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    6
  3051 ;; This function calls:
  3052 ;;		_lcd_init
  3053 ;;		_lcd_write
  3054 ;; This function is called by:
  3055 ;;		_button_B
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text17
  3060  001DE2                     __ptext17:
  3061                           	opt stack 0
  3062  001DE2                     _activity_submenu_pin:
  3063                           	opt stack 22
  3064                           
  3065                           ;main.c: 212: activity = 5;
  3066                           
  3067                           ;incstack = 0
  3068  001DE2  0E00               	movlw	0
  3069  001DE4  6E04               	movwf	_activity+1,c
  3070  001DE6  0E05               	movlw	5
  3071  001DE8  6E03               	movwf	_activity,c
  3072                           
  3073                           ;main.c: 213: lcd_init();
  3074  001DEA  ECCC  F00D         	call	_lcd_init	;wreg free
  3075                           
  3076                           ;main.c: 214: lcd_write(1,1,"Pin");
  3077  001DEE  0E00               	movlw	0
  3078  001DF0  6E33               	movwf	lcd_write@column+1,c
  3079  001DF2  0E01               	movlw	1
  3080  001DF4  6E32               	movwf	lcd_write@column,c
  3081  001DF6  0E00               	movlw	0
  3082  001DF8  6E35               	movwf	lcd_write@row+1,c
  3083  001DFA  0E01               	movlw	1
  3084  001DFC  6E34               	movwf	lcd_write@row,c
  3085  001DFE  0E86               	movlw	low STR_8
  3086  001E00  6E36               	movwf	lcd_write@string,c
  3087  001E02  0E0F               	movlw	high STR_8
  3088  001E04  6E37               	movwf	lcd_write@string+1,c
  3089  001E06  EC82  F011         	call	_lcd_write	;wreg free
  3090                           
  3091                           ;main.c: 215: lcd_write(10,1,"Cambiar");
  3092  001E0A  0E00               	movlw	0
  3093  001E0C  6E33               	movwf	lcd_write@column+1,c
  3094  001E0E  0E0A               	movlw	10
  3095  001E10  6E32               	movwf	lcd_write@column,c
  3096  001E12  0E00               	movlw	0
  3097  001E14  6E35               	movwf	lcd_write@row+1,c
  3098  001E16  0E01               	movlw	1
  3099  001E18  6E34               	movwf	lcd_write@row,c
  3100  001E1A  0E45               	movlw	low STR_29
  3101  001E1C  6E36               	movwf	lcd_write@string,c
  3102  001E1E  0E0F               	movlw	high STR_29
  3103  001E20  6E37               	movwf	lcd_write@string+1,c
  3104  001E22  EC82  F011         	call	_lcd_write	;wreg free
  3105                           
  3106                           ;main.c: 216: lcd_write(10,2,"Reset");
  3107  001E26  0E00               	movlw	0
  3108  001E28  6E33               	movwf	lcd_write@column+1,c
  3109  001E2A  0E0A               	movlw	10
  3110  001E2C  6E32               	movwf	lcd_write@column,c
  3111  001E2E  0E00               	movlw	0
  3112  001E30  6E35               	movwf	lcd_write@row+1,c
  3113  001E32  0E02               	movlw	2
  3114  001E34  6E34               	movwf	lcd_write@row,c
  3115  001E36  0E68               	movlw	low STR_30
  3116  001E38  6E36               	movwf	lcd_write@string,c
  3117  001E3A  0E0F               	movlw	high STR_30
  3118  001E3C  6E37               	movwf	lcd_write@string+1,c
  3119  001E3E  EC82  F011         	call	_lcd_write	;wreg free
  3120  001E42  0012               	return		;funcret
  3121  001E44                     __end_of_activity_submenu_pin:
  3122                           	opt stack 0
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           prodl	equ	0xFF3
  3128                           intcon	equ	0xFF2
  3129                           postinc0	equ	0xFEE
  3130                           wreg	equ	0xFE8
  3131                           postdec1	equ	0xFE5
  3132                           fsr1l	equ	0xFE1
  3133                           indf2	equ	0xFDF
  3134                           fsr2h	equ	0xFDA
  3135                           fsr2l	equ	0xFD9
  3136                           status	equ	0xFD8
  3137                           
  3138 ;; *************** function _activity_submenu_clock *****************
  3139 ;; Defined at:
  3140 ;;		line 199 in file "main.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;		None               void
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    6
  3161 ;; This function calls:
  3162 ;;		_lcd_init
  3163 ;;		_lcd_write
  3164 ;; This function is called by:
  3165 ;;		_button_B
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text18
  3170  001E44                     __ptext18:
  3171                           	opt stack 0
  3172  001E44                     _activity_submenu_clock:
  3173                           	opt stack 22
  3174                           
  3175                           ;main.c: 201: activity = 3;
  3176                           
  3177                           ;incstack = 0
  3178  001E44  0E00               	movlw	0
  3179  001E46  6E04               	movwf	_activity+1,c
  3180  001E48  0E03               	movlw	3
  3181  001E4A  6E03               	movwf	_activity,c
  3182                           
  3183                           ;main.c: 202: lcd_init();
  3184  001E4C  ECCC  F00D         	call	_lcd_init	;wreg free
  3185                           
  3186                           ;main.c: 203: lcd_write(1,1,"Reloj");
  3187  001E50  0E00               	movlw	0
  3188  001E52  6E33               	movwf	lcd_write@column+1,c
  3189  001E54  0E01               	movlw	1
  3190  001E56  6E32               	movwf	lcd_write@column,c
  3191  001E58  0E00               	movlw	0
  3192  001E5A  6E35               	movwf	lcd_write@row+1,c
  3193  001E5C  0E01               	movlw	1
  3194  001E5E  6E34               	movwf	lcd_write@row,c
  3195  001E60  0E62               	movlw	low STR_7
  3196  001E62  6E36               	movwf	lcd_write@string,c
  3197  001E64  0E0F               	movlw	high STR_7
  3198  001E66  6E37               	movwf	lcd_write@string+1,c
  3199  001E68  EC82  F011         	call	_lcd_write	;wreg free
  3200                           
  3201                           ;main.c: 204: lcd_write(10,1,"Fecha");
  3202  001E6C  0E00               	movlw	0
  3203  001E6E  6E33               	movwf	lcd_write@column+1,c
  3204  001E70  0E0A               	movlw	10
  3205  001E72  6E32               	movwf	lcd_write@column,c
  3206  001E74  0E00               	movlw	0
  3207  001E76  6E35               	movwf	lcd_write@row+1,c
  3208  001E78  0E01               	movlw	1
  3209  001E7A  6E34               	movwf	lcd_write@row,c
  3210  001E7C  0E5C               	movlw	low STR_26
  3211  001E7E  6E36               	movwf	lcd_write@string,c
  3212  001E80  0E0F               	movlw	high STR_26
  3213  001E82  6E37               	movwf	lcd_write@string+1,c
  3214  001E84  EC82  F011         	call	_lcd_write	;wreg free
  3215                           
  3216                           ;main.c: 205: lcd_write(10,2,"Hora");
  3217  001E88  0E00               	movlw	0
  3218  001E8A  6E33               	movwf	lcd_write@column+1,c
  3219  001E8C  0E0A               	movlw	10
  3220  001E8E  6E32               	movwf	lcd_write@column,c
  3221  001E90  0E00               	movlw	0
  3222  001E92  6E35               	movwf	lcd_write@row+1,c
  3223  001E94  0E02               	movlw	2
  3224  001E96  6E34               	movwf	lcd_write@row,c
  3225  001E98  0E73               	movlw	low STR_27
  3226  001E9A  6E36               	movwf	lcd_write@string,c
  3227  001E9C  0E0F               	movlw	high STR_27
  3228  001E9E  6E37               	movwf	lcd_write@string+1,c
  3229  001EA0  EC82  F011         	call	_lcd_write	;wreg free
  3230  001EA4  0012               	return		;funcret
  3231  001EA6                     __end_of_activity_submenu_clock:
  3232                           	opt stack 0
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodl	equ	0xFF3
  3238                           intcon	equ	0xFF2
  3239                           postinc0	equ	0xFEE
  3240                           wreg	equ	0xFE8
  3241                           postdec1	equ	0xFE5
  3242                           fsr1l	equ	0xFE1
  3243                           indf2	equ	0xFDF
  3244                           fsr2h	equ	0xFDA
  3245                           fsr2l	equ	0xFD9
  3246                           status	equ	0xFD8
  3247                           
  3248 ;; *************** function _activity_submenu_alarm *****************
  3249 ;; Defined at:
  3250 ;;		line 221 in file "main.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;		None               void
  3257 ;; Registers used:
  3258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    6
  3271 ;; This function calls:
  3272 ;;		_lcd_init
  3273 ;;		_lcd_write
  3274 ;; This function is called by:
  3275 ;;		_button_B
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text19
  3280  001EA6                     __ptext19:
  3281                           	opt stack 0
  3282  001EA6                     _activity_submenu_alarm:
  3283                           	opt stack 22
  3284                           
  3285                           ;main.c: 223: activity = 6;
  3286                           
  3287                           ;incstack = 0
  3288  001EA6  0E00               	movlw	0
  3289  001EA8  6E04               	movwf	_activity+1,c
  3290  001EAA  0E06               	movlw	6
  3291  001EAC  6E03               	movwf	_activity,c
  3292                           
  3293                           ;main.c: 224: lcd_init();
  3294  001EAE  ECCC  F00D         	call	_lcd_init	;wreg free
  3295                           
  3296                           ;main.c: 225: lcd_write(1,1,"Alarma");
  3297  001EB2  0E00               	movlw	0
  3298  001EB4  6E33               	movwf	lcd_write@column+1,c
  3299  001EB6  0E01               	movlw	1
  3300  001EB8  6E32               	movwf	lcd_write@column,c
  3301  001EBA  0E00               	movlw	0
  3302  001EBC  6E35               	movwf	lcd_write@row+1,c
  3303  001EBE  0E01               	movlw	1
  3304  001EC0  6E34               	movwf	lcd_write@row,c
  3305  001EC2  0E55               	movlw	low STR_9
  3306  001EC4  6E36               	movwf	lcd_write@string,c
  3307  001EC6  0E0F               	movlw	high STR_9
  3308  001EC8  6E37               	movwf	lcd_write@string+1,c
  3309  001ECA  EC82  F011         	call	_lcd_write	;wreg free
  3310                           
  3311                           ;main.c: 226: lcd_write(10,1,"Volumen");
  3312  001ECE  0E00               	movlw	0
  3313  001ED0  6E33               	movwf	lcd_write@column+1,c
  3314  001ED2  0E0A               	movlw	10
  3315  001ED4  6E32               	movwf	lcd_write@column,c
  3316  001ED6  0E00               	movlw	0
  3317  001ED8  6E35               	movwf	lcd_write@row+1,c
  3318  001EDA  0E01               	movlw	1
  3319  001EDC  6E34               	movwf	lcd_write@row,c
  3320  001EDE  0E3D               	movlw	low STR_32
  3321  001EE0  6E36               	movwf	lcd_write@string,c
  3322  001EE2  0E0F               	movlw	high STR_32
  3323  001EE4  6E37               	movwf	lcd_write@string+1,c
  3324  001EE6  EC82  F011         	call	_lcd_write	;wreg free
  3325                           
  3326                           ;main.c: 227: lcd_write(10,2,"Tono");
  3327  001EEA  0E00               	movlw	0
  3328  001EEC  6E33               	movwf	lcd_write@column+1,c
  3329  001EEE  0E0A               	movlw	10
  3330  001EF0  6E32               	movwf	lcd_write@column,c
  3331  001EF2  0E00               	movlw	0
  3332  001EF4  6E35               	movwf	lcd_write@row+1,c
  3333  001EF6  0E02               	movlw	2
  3334  001EF8  6E34               	movwf	lcd_write@row,c
  3335  001EFA  0E78               	movlw	low STR_33
  3336  001EFC  6E36               	movwf	lcd_write@string,c
  3337  001EFE  0E0F               	movlw	high STR_33
  3338  001F00  6E37               	movwf	lcd_write@string+1,c
  3339  001F02  EC82  F011         	call	_lcd_write	;wreg free
  3340  001F06  0012               	return		;funcret
  3341  001F08                     __end_of_activity_submenu_alarm:
  3342                           	opt stack 0
  3343                           tblptru	equ	0xFF8
  3344                           tblptrh	equ	0xFF7
  3345                           tblptrl	equ	0xFF6
  3346                           tablat	equ	0xFF5
  3347                           prodl	equ	0xFF3
  3348                           intcon	equ	0xFF2
  3349                           postinc0	equ	0xFEE
  3350                           wreg	equ	0xFE8
  3351                           postdec1	equ	0xFE5
  3352                           fsr1l	equ	0xFE1
  3353                           indf2	equ	0xFDF
  3354                           fsr2h	equ	0xFDA
  3355                           fsr2l	equ	0xFD9
  3356                           status	equ	0xFD8
  3357                           
  3358 ;; *************** function _activity_submenu_activation *****************
  3359 ;; Defined at:
  3360 ;;		line 188 in file "main.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;		None               void
  3367 ;; Registers used:
  3368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    6
  3381 ;; This function calls:
  3382 ;;		_lcd_init
  3383 ;;		_lcd_write
  3384 ;; This function is called by:
  3385 ;;		_button_B
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text20
  3390  001F08                     __ptext20:
  3391                           	opt stack 0
  3392  001F08                     _activity_submenu_activation:
  3393                           	opt stack 22
  3394                           
  3395                           ;main.c: 190: activity = 4;
  3396                           
  3397                           ;incstack = 0
  3398  001F08  0E00               	movlw	0
  3399  001F0A  6E04               	movwf	_activity+1,c
  3400  001F0C  0E04               	movlw	4
  3401  001F0E  6E03               	movwf	_activity,c
  3402                           
  3403                           ;main.c: 191: lcd_init();
  3404  001F10  ECCC  F00D         	call	_lcd_init	;wreg free
  3405                           
  3406                           ;main.c: 192: lcd_write(1,1,"Activar");
  3407  001F14  0E00               	movlw	0
  3408  001F16  6E33               	movwf	lcd_write@column+1,c
  3409  001F18  0E01               	movlw	1
  3410  001F1A  6E32               	movwf	lcd_write@column,c
  3411  001F1C  0E00               	movlw	0
  3412  001F1E  6E35               	movwf	lcd_write@row+1,c
  3413  001F20  0E01               	movlw	1
  3414  001F22  6E34               	movwf	lcd_write@row,c
  3415  001F24  0E4D               	movlw	low STR_6
  3416  001F26  6E36               	movwf	lcd_write@string,c
  3417  001F28  0E0F               	movlw	high STR_6
  3418  001F2A  6E37               	movwf	lcd_write@string+1,c
  3419  001F2C  EC82  F011         	call	_lcd_write	;wreg free
  3420                           
  3421                           ;main.c: 193: lcd_write(10,1,"SI");
  3422  001F30  0E00               	movlw	0
  3423  001F32  6E33               	movwf	lcd_write@column+1,c
  3424  001F34  0E0A               	movlw	10
  3425  001F36  6E32               	movwf	lcd_write@column,c
  3426  001F38  0E00               	movlw	0
  3427  001F3A  6E35               	movwf	lcd_write@row+1,c
  3428  001F3C  0E01               	movlw	1
  3429  001F3E  6E34               	movwf	lcd_write@row,c
  3430  001F40  0E8A               	movlw	low STR_23
  3431  001F42  6E36               	movwf	lcd_write@string,c
  3432  001F44  0E0F               	movlw	high STR_23
  3433  001F46  6E37               	movwf	lcd_write@string+1,c
  3434  001F48  EC82  F011         	call	_lcd_write	;wreg free
  3435                           
  3436                           ;main.c: 194: lcd_write(10,2,"NO");
  3437  001F4C  0E00               	movlw	0
  3438  001F4E  6E33               	movwf	lcd_write@column+1,c
  3439  001F50  0E0A               	movlw	10
  3440  001F52  6E32               	movwf	lcd_write@column,c
  3441  001F54  0E00               	movlw	0
  3442  001F56  6E35               	movwf	lcd_write@row+1,c
  3443  001F58  0E02               	movlw	2
  3444  001F5A  6E34               	movwf	lcd_write@row,c
  3445  001F5C  0E8D               	movlw	low STR_24
  3446  001F5E  6E36               	movwf	lcd_write@string,c
  3447  001F60  0E0F               	movlw	high STR_24
  3448  001F62  6E37               	movwf	lcd_write@string+1,c
  3449  001F64  EC82  F011         	call	_lcd_write	;wreg free
  3450  001F68  0012               	return		;funcret
  3451  001F6A                     __end_of_activity_submenu_activation:
  3452                           	opt stack 0
  3453                           tblptru	equ	0xFF8
  3454                           tblptrh	equ	0xFF7
  3455                           tblptrl	equ	0xFF6
  3456                           tablat	equ	0xFF5
  3457                           prodl	equ	0xFF3
  3458                           intcon	equ	0xFF2
  3459                           postinc0	equ	0xFEE
  3460                           wreg	equ	0xFE8
  3461                           postdec1	equ	0xFE5
  3462                           fsr1l	equ	0xFE1
  3463                           indf2	equ	0xFDF
  3464                           fsr2h	equ	0xFDA
  3465                           fsr2l	equ	0xFD9
  3466                           status	equ	0xFD8
  3467                           
  3468 ;; *************** function _button_A *****************
  3469 ;; Defined at:
  3470 ;;		line 243 in file "main.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;		None               void
  3477 ;; Registers used:
  3478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3488 ;;Total ram usage:        2 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    7
  3491 ;; This function calls:
  3492 ;;		_action_menu_selector
  3493 ;;		_action_submenu_selector
  3494 ;;		_activity_pin
  3495 ;; This function is called by:
  3496 ;;		_keyboard_control
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text21
  3501  002188                     __ptext21:
  3502                           	opt stack 0
  3503  002188                     _button_A:
  3504                           	opt stack 22
  3505                           
  3506                           ;main.c: 245: switch(activity){
  3507                           
  3508                           ;incstack = 0
  3509  002188  D009               	goto	l2809
  3510  00218A                     l2801:
  3511                           
  3512                           ;main.c: 248: activity_pin();
  3513  00218A  ECE2  F010         	call	_activity_pin	;wreg free
  3514                           
  3515                           ;main.c: 252: break;
  3516                           
  3517                           ;main.c: 251: case 1:
  3518                           
  3519                           ;main.c: 249: break;
  3520  00218E  0012               	return	
  3521  002190                     l2803:
  3522                           
  3523                           ;main.c: 255: action_menu_selector();
  3524  002190  ECFE  F008         	call	_action_menu_selector	;wreg free
  3525                           
  3526                           ;main.c: 256: break;
  3527  002194  0012               	return	
  3528  002196                     l2805:
  3529                           
  3530                           ;main.c: 259: action_submenu_selector();
  3531  002196  EC9D  F00C         	call	_action_submenu_selector	;wreg free
  3532                           
  3533                           ;main.c: 261: }
  3534                           
  3535                           ;main.c: 260: break;
  3536  00219A  0012               	return	
  3537  00219C                     l2809:
  3538  00219C  C003  F03A         	movff	_activity,??_button_A
  3539  0021A0  C004  F03B         	movff	_activity+1,??_button_A+1
  3540                           
  3541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3542                           ; Switch size 1, requested type "space"
  3543                           ; Number of cases is 1, Range of values is 0 to 0
  3544                           ; switch strategies available:
  3545                           ; Name         Instructions Cycles
  3546                           ; simple_byte            4     3 (average)
  3547                           ;	Chosen strategy is simple_byte
  3548  0021A4  503B               	movf	??_button_A+1,w,c
  3549  0021A6  0A00               	xorlw	0	; case 0
  3550  0021A8  A4D8               	btfss	status,2,c
  3551  0021AA  D7F5               	goto	l2805
  3552                           
  3553                           ; Switch size 1, requested type "space"
  3554                           ; Number of cases is 3, Range of values is 0 to 2
  3555                           ; switch strategies available:
  3556                           ; Name         Instructions Cycles
  3557                           ; simple_byte           10     6 (average)
  3558                           ;	Chosen strategy is simple_byte
  3559  0021AC  503A               	movf	??_button_A,w,c
  3560  0021AE  0A00               	xorlw	0	; case 0
  3561  0021B0  B4D8               	btfsc	status,2,c
  3562  0021B2  D7EB               	goto	l2801
  3563  0021B4  0A01               	xorlw	1	; case 1
  3564  0021B6  B4D8               	btfsc	status,2,c
  3565  0021B8  0012               	return	
  3566  0021BA  0A03               	xorlw	3	; case 2
  3567  0021BC  B4D8               	btfsc	status,2,c
  3568  0021BE  D7E8               	goto	l2803
  3569  0021C0  D7EA               	goto	l2805
  3570  0021C2  0012               	return		;funcret
  3571  0021C4                     __end_of_button_A:
  3572                           	opt stack 0
  3573                           tblptru	equ	0xFF8
  3574                           tblptrh	equ	0xFF7
  3575                           tblptrl	equ	0xFF6
  3576                           tablat	equ	0xFF5
  3577                           prodl	equ	0xFF3
  3578                           intcon	equ	0xFF2
  3579                           postinc0	equ	0xFEE
  3580                           wreg	equ	0xFE8
  3581                           postdec1	equ	0xFE5
  3582                           fsr1l	equ	0xFE1
  3583                           indf2	equ	0xFDF
  3584                           fsr2h	equ	0xFDA
  3585                           fsr2l	equ	0xFD9
  3586                           status	equ	0xFD8
  3587                           
  3588 ;; *************** function _activity_pin *****************
  3589 ;; Defined at:
  3590 ;;		line 109 in file "main.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;		None               void
  3597 ;; Registers used:
  3598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    6
  3611 ;; This function calls:
  3612 ;;		_lcd_comand
  3613 ;;		_lcd_gotoxy
  3614 ;;		_lcd_init
  3615 ;;		_lcd_write
  3616 ;; This function is called by:
  3617 ;;		_pin_input_validator
  3618 ;;		_button_A
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text22
  3623  0021C4                     __ptext22:
  3624                           	opt stack 0
  3625  0021C4                     _activity_pin:
  3626                           	opt stack 21
  3627                           
  3628                           ;main.c: 111: activity = 1;
  3629                           
  3630                           ;incstack = 0
  3631  0021C4  0E00               	movlw	0
  3632  0021C6  6E04               	movwf	_activity+1,c
  3633  0021C8  0E01               	movlw	1
  3634  0021CA  6E03               	movwf	_activity,c
  3635                           
  3636                           ;main.c: 112: lcd_init();
  3637  0021CC  ECCC  F00D         	call	_lcd_init	;wreg free
  3638                           
  3639                           ;main.c: 113: lcd_write(1,1,"Ingrese su PIN:");
  3640  0021D0  0E00               	movlw	0
  3641  0021D2  6E33               	movwf	lcd_write@column+1,c
  3642  0021D4  0E01               	movlw	1
  3643  0021D6  6E32               	movwf	lcd_write@column,c
  3644  0021D8  0E00               	movlw	0
  3645  0021DA  6E35               	movwf	lcd_write@row+1,c
  3646  0021DC  0E01               	movlw	1
  3647  0021DE  6E34               	movwf	lcd_write@row,c
  3648  0021E0  0E0F               	movlw	low STR_5
  3649  0021E2  6E36               	movwf	lcd_write@string,c
  3650  0021E4  0E0F               	movlw	high STR_5
  3651  0021E6  6E37               	movwf	lcd_write@string+1,c
  3652  0021E8  EC82  F011         	call	_lcd_write	;wreg free
  3653                           
  3654                           ;main.c: 114: lcd_gotoxy(1,2);
  3655  0021EC  0E02               	movlw	2
  3656  0021EE  6E2C               	movwf	lcd_gotoxy@y,c
  3657  0021F0  0E01               	movlw	1
  3658  0021F2  EC53  F011         	call	_lcd_gotoxy
  3659                           
  3660                           ;main.c: 115: lcd_comand(0b00001111);
  3661  0021F6  0E0F               	movlw	15
  3662  0021F8  ECBF  F011         	call	_lcd_comand
  3663  0021FC  0012               	return		;funcret
  3664  0021FE                     __end_of_activity_pin:
  3665                           	opt stack 0
  3666                           tblptru	equ	0xFF8
  3667                           tblptrh	equ	0xFF7
  3668                           tblptrl	equ	0xFF6
  3669                           tablat	equ	0xFF5
  3670                           prodl	equ	0xFF3
  3671                           intcon	equ	0xFF2
  3672                           postinc0	equ	0xFEE
  3673                           wreg	equ	0xFE8
  3674                           postdec1	equ	0xFE5
  3675                           fsr1l	equ	0xFE1
  3676                           indf2	equ	0xFDF
  3677                           fsr2h	equ	0xFDA
  3678                           fsr2l	equ	0xFD9
  3679                           status	equ	0xFD8
  3680                           
  3681 ;; *************** function _lcd_init *****************
  3682 ;; Defined at:
  3683 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  i               1    4[COMRAM] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;		None               void
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;Total ram usage:        1 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    2
  3704 ;; This function calls:
  3705 ;;		_Delay1KTCYx
  3706 ;;		_lcd_send_byte
  3707 ;;		_lcd_send_nibble
  3708 ;; This function is called by:
  3709 ;;		_setup
  3710 ;;		_activity_home
  3711 ;;		_activity_pin
  3712 ;;		_activity_menu
  3713 ;;		_activity_submenu_activation
  3714 ;;		_activity_submenu_clock
  3715 ;;		_activity_submenu_pin
  3716 ;;		_activity_submenu_alarm
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text23
  3721  001B98                     __ptext23:
  3722                           	opt stack 0
  3723  001B98                     _lcd_init:
  3724                           	opt stack 27
  3725                           
  3726                           ;unmc_lcd_216.c: 120: int8 i;
  3727                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  3728                           
  3729                           ;incstack = 0
  3730  001B98  9693               	bcf	3987,3,c	;volatile
  3731                           
  3732                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  3733  001B9A  9493               	bcf	3987,2,c	;volatile
  3734                           
  3735                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  3736  001B9C  968A               	bcf	3978,3,c	;volatile
  3737                           
  3738                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  3739  001B9E  948A               	bcf	3978,2,c	;volatile
  3740                           
  3741                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  3742  001BA0  9893               	bcf	3987,4,c	;volatile
  3743                           
  3744                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  3745  001BA2  9A93               	bcf	3987,5,c	;volatile
  3746                           
  3747                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  3748  001BA4  9C93               	bcf	3987,6,c	;volatile
  3749                           
  3750                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  3751  001BA6  9E93               	bcf	3987,7,c	;volatile
  3752                           
  3753                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  3754  001BA8  0E0A               	movlw	10
  3755  001BAA  EC97  F011         	call	_Delay1KTCYx
  3756                           
  3757                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  3758  001BAE  0E0A               	movlw	10
  3759  001BB0  EC97  F011         	call	_Delay1KTCYx
  3760                           
  3761                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  3762  001BB4  0E0A               	movlw	10
  3763  001BB6  EC97  F011         	call	_Delay1KTCYx
  3764                           
  3765                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  3766  001BBA  0E00               	movlw	0
  3767  001BBC  6E2C               	movwf	lcd_init@i,c
  3768  001BBE                     l2201:
  3769  001BBE  0E02               	movlw	2
  3770  001BC0  642C               	cpfsgt	lcd_init@i,c
  3771  001BC2  D001               	goto	l2205
  3772  001BC4  D008               	goto	l2211
  3773  001BC6                     l2205:
  3774                           
  3775                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  3776  001BC6  0E03               	movlw	3
  3777  001BC8  EC4B  F00E         	call	_lcd_send_nibble
  3778                           
  3779                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  3780  001BCC  0E0A               	movlw	10
  3781  001BCE  EC97  F011         	call	_Delay1KTCYx
  3782  001BD2  2A2C               	incf	lcd_init@i,f,c
  3783  001BD4  D7F4               	goto	l2201
  3784  001BD6                     l2211:
  3785                           
  3786                           ;unmc_lcd_216.c: 146: }
  3787                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  3788  001BD6  0E02               	movlw	2
  3789  001BD8  EC4B  F00E         	call	_lcd_send_nibble
  3790                           
  3791                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  3792  001BDC  0E00               	movlw	0
  3793  001BDE  6E2C               	movwf	lcd_init@i,c
  3794  001BE0  0E03               	movlw	3
  3795  001BE2  642C               	cpfsgt	lcd_init@i,c
  3796  001BE4  D002               	goto	l2219
  3797  001BE6  0012               	return	
  3798  001BE8  0012               	return	
  3799  001BEA                     l2219:
  3800                           
  3801                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  3802  001BEA  502C               	movf	lcd_init@i,w,c
  3803  001BEC  0D01               	mullw	1
  3804  001BEE  0E0B               	movlw	low _LCD_INIT_STRING
  3805  001BF0  24F3               	addwf	prodl,w,c
  3806  001BF2  6EF6               	movwf	tblptrl,c
  3807  001BF4  0E0F               	movlw	high _LCD_INIT_STRING
  3808  001BF6  20F4               	addwfc	prodh,w,c
  3809  001BF8  6EF7               	movwf	tblptrh,c
  3810  001BFA                     	if	0	;There are less than 3 active tblptr bytes
  3811  001BFA                     	endif
  3812  001BFA  0008               	tblrd		*
  3813  001BFC  CFF5 F02A          	movff	tablat,lcd_send_byte@n
  3814  001C00  0E00               	movlw	0
  3815  001C02  ECFF  F010         	call	_lcd_send_byte
  3816                           
  3817                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  3818  001C06  0E0A               	movlw	10
  3819  001C08  EC97  F011         	call	_Delay1KTCYx
  3820  001C0C  2A2C               	incf	lcd_init@i,f,c
  3821  001C0E  0E03               	movlw	3
  3822  001C10  642C               	cpfsgt	lcd_init@i,c
  3823  001C12  D7EB               	goto	l2219
  3824  001C14  0012               	return	
  3825  001C16  0012               	return		;funcret
  3826  001C18                     __end_of_lcd_init:
  3827                           	opt stack 0
  3828                           tblptru	equ	0xFF8
  3829                           tblptrh	equ	0xFF7
  3830                           tblptrl	equ	0xFF6
  3831                           tablat	equ	0xFF5
  3832                           prodh	equ	0xFF4
  3833                           prodl	equ	0xFF3
  3834                           intcon	equ	0xFF2
  3835                           postinc0	equ	0xFEE
  3836                           wreg	equ	0xFE8
  3837                           postdec1	equ	0xFE5
  3838                           fsr1l	equ	0xFE1
  3839                           indf2	equ	0xFDF
  3840                           fsr2h	equ	0xFDA
  3841                           fsr2l	equ	0xFD9
  3842                           status	equ	0xFD8
  3843                           
  3844 ;; *************** function _Delay1KTCYx *****************
  3845 ;; Defined at:
  3846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  unit            1    wreg     unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  unit            1    0[COMRAM] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;		None               void
  3853 ;; Registers used:
  3854 ;;		wreg
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;Total ram usage:        1 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_lcd_init
  3870 ;;		_DelayPORXLCD
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text24
  3875  00232E                     __ptext24:
  3876                           	opt stack 0
  3877  00232E                     _Delay1KTCYx:
  3878                           	opt stack 28
  3879                           
  3880                           ;incstack = 0
  3881                           ;Delay1KTCYx@unit stored from wreg
  3882  00232E  6E28               	movwf	Delay1KTCYx@unit,c
  3883  002330  0EFA               	movlw	250
  3884  002332                     u2227:
  3885  002332  F000               	nop	
  3886  002334  2EE8               	decfsz	wreg,f,c
  3887  002336  D7FD               	goto	u2227
  3888  002338  2E28               	decfsz	Delay1KTCYx@unit,f,c
  3889  00233A  D7FA               	goto	l1193
  3890  00233C  0012               	return	
  3891  00233E  0012               	return		;funcret
  3892  002340                     __end_of_Delay1KTCYx:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           intcon	equ	0xFF2
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           postdec1	equ	0xFE5
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _lcd_comand *****************
  3911 ;; Defined at:
  3912 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  d               1    wreg     unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  d               1    4[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;		None               void
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;Total ram usage:        1 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    2
  3933 ;; This function calls:
  3934 ;;		_lcd_send_byte
  3935 ;; This function is called by:
  3936 ;;		_setup
  3937 ;;		_activity_pin
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text25
  3942  00237E                     __ptext25:
  3943                           	opt stack 0
  3944  00237E                     _lcd_comand:
  3945                           	opt stack 27
  3946                           
  3947                           ;incstack = 0
  3948                           ;lcd_comand@d stored from wreg
  3949  00237E  6E2C               	movwf	lcd_comand@d,c
  3950                           
  3951                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  3952  002380  C02C  F02A         	movff	lcd_comand@d,lcd_send_byte@n
  3953  002384  0E00               	movlw	0
  3954  002386  ECFF  F010         	call	_lcd_send_byte
  3955  00238A  0012               	return		;funcret
  3956  00238C                     __end_of_lcd_comand:
  3957                           	opt stack 0
  3958                           tblptru	equ	0xFF8
  3959                           tblptrh	equ	0xFF7
  3960                           tblptrl	equ	0xFF6
  3961                           tablat	equ	0xFF5
  3962                           prodh	equ	0xFF4
  3963                           prodl	equ	0xFF3
  3964                           intcon	equ	0xFF2
  3965                           postinc0	equ	0xFEE
  3966                           wreg	equ	0xFE8
  3967                           postdec1	equ	0xFE5
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function _action_submenu_selector *****************
  3975 ;; Defined at:
  3976 ;;		line 168 in file "main.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;		None               void
  3983 ;; Registers used:
  3984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3994 ;;Total ram usage:        2 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    6
  3997 ;; This function calls:
  3998 ;;		_lcd_write
  3999 ;; This function is called by:
  4000 ;;		_button_A
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text26
  4005  00193A                     __ptext26:
  4006                           	opt stack 0
  4007  00193A                     _action_submenu_selector:
  4008                           	opt stack 22
  4009                           
  4010                           ;main.c: 170: switch(submenu_selector){
  4011                           
  4012                           ;incstack = 0
  4013  00193A  D042               	goto	l2597
  4014  00193C                     l2583:
  4015                           
  4016                           ;main.c: 173: lcd_write(9,1,">");
  4017  00193C  0E00               	movlw	0
  4018  00193E  6E33               	movwf	lcd_write@column+1,c
  4019  001940  0E09               	movlw	9
  4020  001942  6E32               	movwf	lcd_write@column,c
  4021  001944  0E00               	movlw	0
  4022  001946  6E35               	movwf	lcd_write@row+1,c
  4023  001948  0E01               	movlw	1
  4024  00194A  6E34               	movwf	lcd_write@row,c
  4025  00194C  0E94               	movlw	low STR_10
  4026  00194E  6E36               	movwf	lcd_write@string,c
  4027  001950  0E0F               	movlw	high STR_10
  4028  001952  6E37               	movwf	lcd_write@string+1,c
  4029  001954  EC82  F011         	call	_lcd_write	;wreg free
  4030                           
  4031                           ;main.c: 174: submenu_selector = 2;
  4032  001958  0E00               	movlw	0
  4033  00195A  6E1E               	movwf	_submenu_selector+1,c
  4034  00195C  0E02               	movlw	2
  4035  00195E  6E1D               	movwf	_submenu_selector,c
  4036                           
  4037                           ;main.c: 175: lcd_write(9,2," ");
  4038  001960  0E00               	movlw	0
  4039  001962  6E33               	movwf	lcd_write@column+1,c
  4040  001964  0E09               	movlw	9
  4041  001966  6E32               	movwf	lcd_write@column,c
  4042  001968  0E00               	movlw	0
  4043  00196A  6E35               	movwf	lcd_write@row+1,c
  4044  00196C  0E02               	movlw	2
  4045  00196E  6E34               	movwf	lcd_write@row,c
  4046  001970  0E90               	movlw	low STR_11
  4047  001972  6E36               	movwf	lcd_write@string,c
  4048  001974  0E0F               	movlw	high STR_11
  4049  001976  6E37               	movwf	lcd_write@string+1,c
  4050  001978  EC82  F011         	call	_lcd_write	;wreg free
  4051                           
  4052                           ;main.c: 176: break;
  4053  00197C  0012               	return	
  4054  00197E                     l2589:
  4055                           
  4056                           ;main.c: 179: lcd_write(9,2,">");
  4057  00197E  0E00               	movlw	0
  4058  001980  6E33               	movwf	lcd_write@column+1,c
  4059  001982  0E09               	movlw	9
  4060  001984  6E32               	movwf	lcd_write@column,c
  4061  001986  0E00               	movlw	0
  4062  001988  6E35               	movwf	lcd_write@row+1,c
  4063  00198A  0E02               	movlw	2
  4064  00198C  6E34               	movwf	lcd_write@row,c
  4065  00198E  0E94               	movlw	low STR_10
  4066  001990  6E36               	movwf	lcd_write@string,c
  4067  001992  0E0F               	movlw	high STR_10
  4068  001994  6E37               	movwf	lcd_write@string+1,c
  4069  001996  EC82  F011         	call	_lcd_write	;wreg free
  4070                           
  4071                           ;main.c: 180: submenu_selector = 1;
  4072  00199A  0E00               	movlw	0
  4073  00199C  6E1E               	movwf	_submenu_selector+1,c
  4074  00199E  0E01               	movlw	1
  4075  0019A0  6E1D               	movwf	_submenu_selector,c
  4076                           
  4077                           ;main.c: 181: lcd_write(9,1," ");
  4078  0019A2  0E00               	movlw	0
  4079  0019A4  6E33               	movwf	lcd_write@column+1,c
  4080  0019A6  0E09               	movlw	9
  4081  0019A8  6E32               	movwf	lcd_write@column,c
  4082  0019AA  0E00               	movlw	0
  4083  0019AC  6E35               	movwf	lcd_write@row+1,c
  4084  0019AE  0E01               	movlw	1
  4085  0019B0  6E34               	movwf	lcd_write@row,c
  4086  0019B2  0E90               	movlw	low STR_11
  4087  0019B4  6E36               	movwf	lcd_write@string,c
  4088  0019B6  0E0F               	movlw	high STR_11
  4089  0019B8  6E37               	movwf	lcd_write@string+1,c
  4090  0019BA  EC82  F011         	call	_lcd_write	;wreg free
  4091                           
  4092                           ;main.c: 183: }
  4093                           
  4094                           ;main.c: 182: break;
  4095  0019BE  0012               	return	
  4096  0019C0                     l2597:
  4097  0019C0  C01D  F038         	movff	_submenu_selector,??_action_submenu_selector
  4098  0019C4  C01E  F039         	movff	_submenu_selector+1,??_action_submenu_selector+1
  4099                           
  4100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4101                           ; Switch size 1, requested type "space"
  4102                           ; Number of cases is 1, Range of values is 0 to 0
  4103                           ; switch strategies available:
  4104                           ; Name         Instructions Cycles
  4105                           ; simple_byte            4     3 (average)
  4106                           ;	Chosen strategy is simple_byte
  4107  0019C8  5039               	movf	??_action_submenu_selector+1,w,c
  4108  0019CA  0A00               	xorlw	0	; case 0
  4109  0019CC  A4D8               	btfss	status,2,c
  4110  0019CE  0012               	return	
  4111                           
  4112                           ; Switch size 1, requested type "space"
  4113                           ; Number of cases is 2, Range of values is 1 to 2
  4114                           ; switch strategies available:
  4115                           ; Name         Instructions Cycles
  4116                           ; simple_byte            7     4 (average)
  4117                           ;	Chosen strategy is simple_byte
  4118  0019D0  5038               	movf	??_action_submenu_selector,w,c
  4119  0019D2  0A01               	xorlw	1	; case 1
  4120  0019D4  B4D8               	btfsc	status,2,c
  4121  0019D6  D7B2               	goto	l2583
  4122  0019D8  0A03               	xorlw	3	; case 2
  4123  0019DA  A4D8               	btfss	status,2,c
  4124  0019DC  0012               	return	
  4125  0019DE  D7CF               	goto	l2589
  4126  0019E0  0012               	return		;funcret
  4127  0019E2                     __end_of_action_submenu_selector:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           intcon	equ	0xFF2
  4136                           postinc0	equ	0xFEE
  4137                           wreg	equ	0xFE8
  4138                           postdec1	equ	0xFE5
  4139                           fsr1l	equ	0xFE1
  4140                           indf2	equ	0xFDF
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145 ;; *************** function _action_menu_selector *****************
  4146 ;; Defined at:
  4147 ;;		line 131 in file "main.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;		None               void
  4154 ;; Registers used:
  4155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4165 ;;Total ram usage:        2 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    6
  4168 ;; This function calls:
  4169 ;;		_lcd_write
  4170 ;; This function is called by:
  4171 ;;		_button_A
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text27
  4176  0011FC                     __ptext27:
  4177                           	opt stack 0
  4178  0011FC                     _action_menu_selector:
  4179                           	opt stack 22
  4180                           
  4181                           ;main.c: 133: switch(menu_selector){
  4182                           
  4183                           ;incstack = 0
  4184  0011FC  D094               	goto	l2575
  4185  0011FE                     l2549:
  4186                           
  4187                           ;main.c: 136: lcd_write(1,1,">");
  4188  0011FE  0E00               	movlw	0
  4189  001200  6E33               	movwf	lcd_write@column+1,c
  4190  001202  0E01               	movlw	1
  4191  001204  6E32               	movwf	lcd_write@column,c
  4192  001206  0E00               	movlw	0
  4193  001208  6E35               	movwf	lcd_write@row+1,c
  4194  00120A  0E01               	movlw	1
  4195  00120C  6E34               	movwf	lcd_write@row,c
  4196  00120E  0E94               	movlw	low STR_10
  4197  001210  6E36               	movwf	lcd_write@string,c
  4198  001212  0E0F               	movlw	high STR_10
  4199  001214  6E37               	movwf	lcd_write@string+1,c
  4200  001216  EC82  F011         	call	_lcd_write	;wreg free
  4201                           
  4202                           ;main.c: 137: menu_selector = 2;
  4203  00121A  0E00               	movlw	0
  4204  00121C  6E12               	movwf	_menu_selector+1,c
  4205  00121E  0E02               	movlw	2
  4206  001220  6E11               	movwf	_menu_selector,c
  4207                           
  4208                           ;main.c: 138: menu_selected = 1;
  4209  001222  0E00               	movlw	0
  4210  001224  6E10               	movwf	_menu_selected+1,c
  4211  001226  0E01               	movlw	1
  4212  001228  6E0F               	movwf	_menu_selected,c
  4213                           
  4214                           ;main.c: 139: lcd_write(9,2," ");
  4215  00122A  0E00               	movlw	0
  4216  00122C  6E33               	movwf	lcd_write@column+1,c
  4217  00122E  0E09               	movlw	9
  4218  001230  6E32               	movwf	lcd_write@column,c
  4219  001232  0E00               	movlw	0
  4220  001234  6E35               	movwf	lcd_write@row+1,c
  4221  001236  0E02               	movlw	2
  4222  001238  6E34               	movwf	lcd_write@row,c
  4223  00123A  0E90               	movlw	low STR_11
  4224  00123C  6E36               	movwf	lcd_write@string,c
  4225  00123E  0E0F               	movlw	high STR_11
  4226  001240  6E37               	movwf	lcd_write@string+1,c
  4227  001242  EC82  F011         	call	_lcd_write	;wreg free
  4228                           
  4229                           ;main.c: 140: break;
  4230  001246  0012               	return	
  4231  001248                     l2555:
  4232                           
  4233                           ;main.c: 143: lcd_write(1,2,">");
  4234  001248  0E00               	movlw	0
  4235  00124A  6E33               	movwf	lcd_write@column+1,c
  4236  00124C  0E01               	movlw	1
  4237  00124E  6E32               	movwf	lcd_write@column,c
  4238  001250  0E00               	movlw	0
  4239  001252  6E35               	movwf	lcd_write@row+1,c
  4240  001254  0E02               	movlw	2
  4241  001256  6E34               	movwf	lcd_write@row,c
  4242  001258  0E94               	movlw	low STR_10
  4243  00125A  6E36               	movwf	lcd_write@string,c
  4244  00125C  0E0F               	movlw	high STR_10
  4245  00125E  6E37               	movwf	lcd_write@string+1,c
  4246  001260  EC82  F011         	call	_lcd_write	;wreg free
  4247                           
  4248                           ;main.c: 144: menu_selector = 3;
  4249  001264  0E00               	movlw	0
  4250  001266  6E12               	movwf	_menu_selector+1,c
  4251  001268  0E03               	movlw	3
  4252  00126A  6E11               	movwf	_menu_selector,c
  4253                           
  4254                           ;main.c: 145: menu_selected = 2;
  4255  00126C  0E00               	movlw	0
  4256  00126E  6E10               	movwf	_menu_selected+1,c
  4257  001270  0E02               	movlw	2
  4258  001272  6E0F               	movwf	_menu_selected,c
  4259                           
  4260                           ;main.c: 146: lcd_write(1,1," ");
  4261  001274  0E00               	movlw	0
  4262  001276  6E33               	movwf	lcd_write@column+1,c
  4263  001278  0E01               	movlw	1
  4264  00127A  6E32               	movwf	lcd_write@column,c
  4265  00127C  0E00               	movlw	0
  4266  00127E  6E35               	movwf	lcd_write@row+1,c
  4267  001280  0E01               	movlw	1
  4268  001282  6E34               	movwf	lcd_write@row,c
  4269  001284  0E90               	movlw	low STR_11
  4270  001286  6E36               	movwf	lcd_write@string,c
  4271  001288  0E0F               	movlw	high STR_11
  4272  00128A  6E37               	movwf	lcd_write@string+1,c
  4273  00128C  EC82  F011         	call	_lcd_write	;wreg free
  4274                           
  4275                           ;main.c: 147: break;
  4276  001290  0012               	return	
  4277  001292                     l2561:
  4278                           
  4279                           ;main.c: 150: lcd_write(9,1,">");
  4280  001292  0E00               	movlw	0
  4281  001294  6E33               	movwf	lcd_write@column+1,c
  4282  001296  0E09               	movlw	9
  4283  001298  6E32               	movwf	lcd_write@column,c
  4284  00129A  0E00               	movlw	0
  4285  00129C  6E35               	movwf	lcd_write@row+1,c
  4286  00129E  0E01               	movlw	1
  4287  0012A0  6E34               	movwf	lcd_write@row,c
  4288  0012A2  0E94               	movlw	low STR_10
  4289  0012A4  6E36               	movwf	lcd_write@string,c
  4290  0012A6  0E0F               	movlw	high STR_10
  4291  0012A8  6E37               	movwf	lcd_write@string+1,c
  4292  0012AA  EC82  F011         	call	_lcd_write	;wreg free
  4293                           
  4294                           ;main.c: 151: menu_selector = 4;
  4295  0012AE  0E00               	movlw	0
  4296  0012B0  6E12               	movwf	_menu_selector+1,c
  4297  0012B2  0E04               	movlw	4
  4298  0012B4  6E11               	movwf	_menu_selector,c
  4299                           
  4300                           ;main.c: 152: menu_selected = 3;
  4301  0012B6  0E00               	movlw	0
  4302  0012B8  6E10               	movwf	_menu_selected+1,c
  4303  0012BA  0E03               	movlw	3
  4304  0012BC  6E0F               	movwf	_menu_selected,c
  4305                           
  4306                           ;main.c: 153: lcd_write(1,2," ");
  4307  0012BE  0E00               	movlw	0
  4308  0012C0  6E33               	movwf	lcd_write@column+1,c
  4309  0012C2  0E01               	movlw	1
  4310  0012C4  6E32               	movwf	lcd_write@column,c
  4311  0012C6  0E00               	movlw	0
  4312  0012C8  6E35               	movwf	lcd_write@row+1,c
  4313  0012CA  0E02               	movlw	2
  4314  0012CC  6E34               	movwf	lcd_write@row,c
  4315  0012CE  0E90               	movlw	low STR_11
  4316  0012D0  6E36               	movwf	lcd_write@string,c
  4317  0012D2  0E0F               	movlw	high STR_11
  4318  0012D4  6E37               	movwf	lcd_write@string+1,c
  4319  0012D6  EC82  F011         	call	_lcd_write	;wreg free
  4320                           
  4321                           ;main.c: 154: break;
  4322  0012DA  0012               	return	
  4323  0012DC                     l2567:
  4324                           
  4325                           ;main.c: 157: lcd_write(9,2,">");
  4326  0012DC  0E00               	movlw	0
  4327  0012DE  6E33               	movwf	lcd_write@column+1,c
  4328  0012E0  0E09               	movlw	9
  4329  0012E2  6E32               	movwf	lcd_write@column,c
  4330  0012E4  0E00               	movlw	0
  4331  0012E6  6E35               	movwf	lcd_write@row+1,c
  4332  0012E8  0E02               	movlw	2
  4333  0012EA  6E34               	movwf	lcd_write@row,c
  4334  0012EC  0E94               	movlw	low STR_10
  4335  0012EE  6E36               	movwf	lcd_write@string,c
  4336  0012F0  0E0F               	movlw	high STR_10
  4337  0012F2  6E37               	movwf	lcd_write@string+1,c
  4338  0012F4  EC82  F011         	call	_lcd_write	;wreg free
  4339                           
  4340                           ;main.c: 158: menu_selector = 1;
  4341  0012F8  0E00               	movlw	0
  4342  0012FA  6E12               	movwf	_menu_selector+1,c
  4343  0012FC  0E01               	movlw	1
  4344  0012FE  6E11               	movwf	_menu_selector,c
  4345                           
  4346                           ;main.c: 159: menu_selected = 4;
  4347  001300  0E00               	movlw	0
  4348  001302  6E10               	movwf	_menu_selected+1,c
  4349  001304  0E04               	movlw	4
  4350  001306  6E0F               	movwf	_menu_selected,c
  4351                           
  4352                           ;main.c: 160: lcd_write(9,1," ");
  4353  001308  0E00               	movlw	0
  4354  00130A  6E33               	movwf	lcd_write@column+1,c
  4355  00130C  0E09               	movlw	9
  4356  00130E  6E32               	movwf	lcd_write@column,c
  4357  001310  0E00               	movlw	0
  4358  001312  6E35               	movwf	lcd_write@row+1,c
  4359  001314  0E01               	movlw	1
  4360  001316  6E34               	movwf	lcd_write@row,c
  4361  001318  0E90               	movlw	low STR_11
  4362  00131A  6E36               	movwf	lcd_write@string,c
  4363  00131C  0E0F               	movlw	high STR_11
  4364  00131E  6E37               	movwf	lcd_write@string+1,c
  4365  001320  EC82  F011         	call	_lcd_write	;wreg free
  4366                           
  4367                           ;main.c: 163: }
  4368                           
  4369                           ;main.c: 161: break;
  4370  001324  0012               	return	
  4371  001326                     l2575:
  4372  001326  C011  F038         	movff	_menu_selector,??_action_menu_selector
  4373  00132A  C012  F039         	movff	_menu_selector+1,??_action_menu_selector+1
  4374                           
  4375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4376                           ; Switch size 1, requested type "space"
  4377                           ; Number of cases is 1, Range of values is 0 to 0
  4378                           ; switch strategies available:
  4379                           ; Name         Instructions Cycles
  4380                           ; simple_byte            4     3 (average)
  4381                           ;	Chosen strategy is simple_byte
  4382  00132E  5039               	movf	??_action_menu_selector+1,w,c
  4383  001330  0A00               	xorlw	0	; case 0
  4384  001332  A4D8               	btfss	status,2,c
  4385  001334  0012               	return	
  4386                           
  4387                           ; Switch size 1, requested type "space"
  4388                           ; Number of cases is 4, Range of values is 1 to 4
  4389                           ; switch strategies available:
  4390                           ; Name         Instructions Cycles
  4391                           ; simple_byte           13     7 (average)
  4392                           ;	Chosen strategy is simple_byte
  4393  001336  5038               	movf	??_action_menu_selector,w,c
  4394  001338  0A01               	xorlw	1	; case 1
  4395  00133A  B4D8               	btfsc	status,2,c
  4396  00133C  D760               	goto	l2549
  4397  00133E  0A03               	xorlw	3	; case 2
  4398  001340  B4D8               	btfsc	status,2,c
  4399  001342  D782               	goto	l2555
  4400  001344  0A01               	xorlw	1	; case 3
  4401  001346  B4D8               	btfsc	status,2,c
  4402  001348  D7A4               	goto	l2561
  4403  00134A  0A07               	xorlw	7	; case 4
  4404  00134C  A4D8               	btfss	status,2,c
  4405  00134E  0012               	return	
  4406  001350  D7C5               	goto	l2567
  4407  001352  0012               	return		;funcret
  4408  001354                     __end_of_action_menu_selector:
  4409                           	opt stack 0
  4410                           tblptru	equ	0xFF8
  4411                           tblptrh	equ	0xFF7
  4412                           tblptrl	equ	0xFF6
  4413                           tablat	equ	0xFF5
  4414                           prodh	equ	0xFF4
  4415                           prodl	equ	0xFF3
  4416                           intcon	equ	0xFF2
  4417                           postinc0	equ	0xFEE
  4418                           wreg	equ	0xFE8
  4419                           postdec1	equ	0xFE5
  4420                           fsr1l	equ	0xFE1
  4421                           indf2	equ	0xFDF
  4422                           fsr2h	equ	0xFDA
  4423                           fsr2l	equ	0xFD9
  4424                           status	equ	0xFD8
  4425                           
  4426 ;; *************** function _home_clock_refresh *****************
  4427 ;; Defined at:
  4428 ;;		line 90 in file "main.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;		None               void
  4435 ;; Registers used:
  4436 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4446 ;;Total ram usage:        0 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    6
  4449 ;; This function calls:
  4450 ;;		_lcd_write
  4451 ;;		_sprintf
  4452 ;; This function is called by:
  4453 ;;		_main
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text28
  4458  001A78                     __ptext28:
  4459                           	opt stack 0
  4460  001A78                     _home_clock_refresh:
  4461                           	opt stack 24
  4462                           
  4463                           ;main.c: 92: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  4464                           
  4465                           ;incstack = 0
  4466  001A78  0E7C               	movlw	low _buffer1
  4467  001A7A  6E34               	movwf	sprintf@sp,c
  4468  001A7C  0E00               	movlw	high _buffer1
  4469  001A7E  6E35               	movwf	sprintf@sp+1,c
  4470  001A80  0E1F               	movlw	low STR_2
  4471  001A82  6E36               	movwf	sprintf@f,c
  4472  001A84  0E0F               	movlw	high STR_2
  4473  001A86  6E37               	movwf	sprintf@f+1,c
  4474  001A88  C04E  F038         	movff	_dia,?_sprintf+4
  4475  001A8C  C04F  F039         	movff	_dia+1,?_sprintf+5
  4476  001A90  C054  F03A         	movff	_mes,?_sprintf+6
  4477  001A94  C055  F03B         	movff	_mes+1,?_sprintf+7
  4478  001A98  C04C  F03C         	movff	_anio,?_sprintf+8
  4479  001A9C  C04D  F03D         	movff	_anio+1,?_sprintf+9
  4480  001AA0  ECCC  F007         	call	_sprintf	;wreg free
  4481                           
  4482                           ;main.c: 93: lcd_write(9,1,buffer1);
  4483  001AA4  0E00               	movlw	0
  4484  001AA6  6E33               	movwf	lcd_write@column+1,c
  4485  001AA8  0E09               	movlw	9
  4486  001AAA  6E32               	movwf	lcd_write@column,c
  4487  001AAC  0E00               	movlw	0
  4488  001AAE  6E35               	movwf	lcd_write@row+1,c
  4489  001AB0  0E01               	movlw	1
  4490  001AB2  6E34               	movwf	lcd_write@row,c
  4491  001AB4  0E7C               	movlw	low _buffer1
  4492  001AB6  6E36               	movwf	lcd_write@string,c
  4493  001AB8  0E00               	movlw	high _buffer1
  4494  001ABA  6E37               	movwf	lcd_write@string+1,c
  4495  001ABC  EC82  F011         	call	_lcd_write	;wreg free
  4496                           
  4497                           ;main.c: 94: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  4498  001AC0  0E7C               	movlw	low _buffer1
  4499  001AC2  6E34               	movwf	sprintf@sp,c
  4500  001AC4  0E00               	movlw	high _buffer1
  4501  001AC6  6E35               	movwf	sprintf@sp+1,c
  4502  001AC8  0E2E               	movlw	low STR_3
  4503  001ACA  6E36               	movwf	sprintf@f,c
  4504  001ACC  0E0F               	movlw	high STR_3
  4505  001ACE  6E37               	movwf	sprintf@f+1,c
  4506  001AD0  C052  F038         	movff	_hora,?_sprintf+4
  4507  001AD4  C053  F039         	movff	_hora+1,?_sprintf+5
  4508  001AD8  C013  F03A         	movff	_minuto,?_sprintf+6
  4509  001ADC  C014  F03B         	movff	_minuto+1,?_sprintf+7
  4510  001AE0  C019  F03C         	movff	_segundo,?_sprintf+8
  4511  001AE4  C01A  F03D         	movff	_segundo+1,?_sprintf+9
  4512  001AE8  ECCC  F007         	call	_sprintf	;wreg free
  4513                           
  4514                           ;main.c: 95: lcd_write(9,2,buffer1);
  4515  001AEC  0E00               	movlw	0
  4516  001AEE  6E33               	movwf	lcd_write@column+1,c
  4517  001AF0  0E09               	movlw	9
  4518  001AF2  6E32               	movwf	lcd_write@column,c
  4519  001AF4  0E00               	movlw	0
  4520  001AF6  6E35               	movwf	lcd_write@row+1,c
  4521  001AF8  0E02               	movlw	2
  4522  001AFA  6E34               	movwf	lcd_write@row,c
  4523  001AFC  0E7C               	movlw	low _buffer1
  4524  001AFE  6E36               	movwf	lcd_write@string,c
  4525  001B00  0E00               	movlw	high _buffer1
  4526  001B02  6E37               	movwf	lcd_write@string+1,c
  4527  001B04  EC82  F011         	call	_lcd_write	;wreg free
  4528  001B08  0012               	return		;funcret
  4529  001B0A                     __end_of_home_clock_refresh:
  4530                           	opt stack 0
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           intcon	equ	0xFF2
  4538                           postinc0	equ	0xFEE
  4539                           wreg	equ	0xFE8
  4540                           postdec1	equ	0xFE5
  4541                           fsr1l	equ	0xFE1
  4542                           indf2	equ	0xFDF
  4543                           fsr2h	equ	0xFDA
  4544                           fsr2l	equ	0xFD9
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function _sprintf *****************
  4548 ;; Defined at:
  4549 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  sp              2   12[COMRAM] PTR unsigned char 
  4552 ;;		 -> buffer1(20), 
  4553 ;;  f               2   14[COMRAM] PTR const unsigned char 
  4554 ;;		 -> STR_36(5), STR_3(15), STR_2(15), 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  tmpval          4    0        struct .
  4557 ;;  cp              3    0        PTR const unsigned char 
  4558 ;;  width           2   32[COMRAM] int 
  4559 ;;  val             2   29[COMRAM] unsigned int 
  4560 ;;  ap              2   26[COMRAM] PTR void [1]
  4561 ;;		 -> ?_sprintf(2), 
  4562 ;;  len             2    0        unsigned int 
  4563 ;;  c               1   34[COMRAM] char 
  4564 ;;  prec            1   31[COMRAM] char 
  4565 ;;  flag            1   28[COMRAM] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  2   12[COMRAM] int 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4575 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;Total ram usage:       23 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    1
  4582 ;; This function calls:
  4583 ;;		___lwdiv
  4584 ;;		___lwmod
  4585 ;;		___wmul
  4586 ;;		_isdigit
  4587 ;; This function is called by:
  4588 ;;		_home_clock_refresh
  4589 ;;		_button_number
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text29
  4594  000F98                     __ptext29:
  4595                           	opt stack 0
  4596  000F98                     _sprintf:
  4597                           	opt stack 27
  4598                           
  4599                           ;doprnt.c: 494: va_list ap;
  4600                           ;doprnt.c: 499: signed char c;
  4601                           ;doprnt.c: 501: int width;
  4602                           ;doprnt.c: 506: signed char prec;
  4603                           ;doprnt.c: 508: unsigned char flag;
  4604                           ;doprnt.c: 523: union {
  4605                           ;doprnt.c: 524: unsigned long vd;
  4606                           ;doprnt.c: 525: double integ;
  4607                           ;doprnt.c: 526: } tmpval;
  4608                           ;doprnt.c: 528: unsigned int val;
  4609                           ;doprnt.c: 529: unsigned len;
  4610                           ;doprnt.c: 530: const char * cp;
  4611                           ;doprnt.c: 533: *ap = __va_start();
  4612                           
  4613                           ;incstack = 0
  4614  000F98  0E38               	movlw	low (?_sprintf+4)
  4615  000F9A  6E42               	movwf	sprintf@ap,c
  4616  000F9C  0E00               	movlw	high (?_sprintf+4)
  4617  000F9E  6E43               	movwf	sprintf@ap+1,c
  4618                           
  4619                           ;doprnt.c: 536: while(c = *f++) {
  4620  000FA0  D117               	goto	l2535
  4621  000FA2                     l2453:
  4622                           
  4623                           ;doprnt.c: 538: if(c != '%')
  4624  000FA2  0E25               	movlw	37
  4625  000FA4  184A               	xorwf	sprintf@c,w,c
  4626  000FA6  B4D8               	btfsc	status,2,c
  4627  000FA8  D009               	goto	l2459
  4628                           
  4629                           ;doprnt.c: 540: {
  4630                           ;doprnt.c: 541: ((*sp++ = (c)));
  4631  000FAA  C034  FFD9         	movff	sprintf@sp,fsr2l
  4632  000FAE  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  4633  000FB2  C04A  FFDF         	movff	sprintf@c,indf2
  4634  000FB6  4A34               	infsnz	sprintf@sp,f,c
  4635  000FB8  2A35               	incf	sprintf@sp+1,f,c
  4636                           
  4637                           ;doprnt.c: 542: continue;
  4638  000FBA  D10A               	goto	l2535
  4639  000FBC                     l2459:
  4640                           
  4641                           ;doprnt.c: 543: }
  4642                           ;doprnt.c: 546: width = 0;
  4643  000FBC  0E00               	movlw	0
  4644  000FBE  6E49               	movwf	sprintf@width+1,c
  4645  000FC0  0E00               	movlw	0
  4646  000FC2  6E48               	movwf	sprintf@width,c
  4647                           
  4648                           ;doprnt.c: 548: flag = 0;
  4649  000FC4  0E00               	movlw	0
  4650  000FC6  6E44               	movwf	sprintf@flag,c
  4651                           
  4652                           ;doprnt.c: 551: switch(*f) {
  4653                           
  4654                           ;doprnt.c: 550: for(;;) {
  4655  000FC8  D005               	goto	l2465
  4656  000FCA                     l2461:
  4657                           
  4658                           ;doprnt.c: 580: flag |= 0x04;
  4659  000FCA  8444               	bsf	sprintf@flag,2,c
  4660                           
  4661                           ;doprnt.c: 581: f++;
  4662  000FCC  4A36               	infsnz	sprintf@f,f,c
  4663  000FCE  2A37               	incf	sprintf@f+1,f,c
  4664                           
  4665                           ;doprnt.c: 582: continue;
  4666  000FD0  D001               	goto	l2465
  4667                           
  4668                           ;doprnt.c: 584: }
  4669  000FD2  D00B               	goto	l2467
  4670  000FD4                     l2465:
  4671  000FD4  C036  FFF6         	movff	sprintf@f,tblptrl
  4672  000FD8  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4673  000FDC                     	if	0	;tblptru may be non-zero
  4674  000FDC                     	endif
  4675  000FDC                     	if	0	;tblptru may be non-zero
  4676  000FDC                     	endif
  4677  000FDC  0008               	tblrd		*
  4678  000FDE  50F5               	movf	tablat,w,c
  4679                           
  4680                           ; Switch size 1, requested type "space"
  4681                           ; Number of cases is 1, Range of values is 48 to 48
  4682                           ; switch strategies available:
  4683                           ; Name         Instructions Cycles
  4684                           ; simple_byte            4     3 (average)
  4685                           ;	Chosen strategy is simple_byte
  4686  000FE0  0A30               	xorlw	48	; case 48
  4687  000FE2  B4D8               	btfsc	status,2,c
  4688  000FE4  D7F2               	goto	l2461
  4689                           
  4690                           ;doprnt.c: 585: break;
  4691  000FE6  D001               	goto	l2467
  4692                           
  4693                           ;doprnt.c: 586: }
  4694  000FE8  D7F5               	goto	l2465
  4695  000FEA                     l2467:
  4696                           
  4697                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4698  000FEA  C036  FFF6         	movff	sprintf@f,tblptrl
  4699  000FEE  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4700  000FF2                     	if	0	;tblptru may be non-zero
  4701  000FF2                     	endif
  4702  000FF2                     	if	0	;tblptru may be non-zero
  4703  000FF2                     	endif
  4704  000FF2  0008               	tblrd		*
  4705  000FF4  50F5               	movf	tablat,w,c
  4706  000FF6  EC65  F011         	call	_isdigit
  4707  000FFA  A0D8               	btfss	status,0,c
  4708  000FFC  D03A               	goto	l2483
  4709                           
  4710                           ;doprnt.c: 598: width = 0;
  4711  000FFE  0E00               	movlw	0
  4712  001000  6E49               	movwf	sprintf@width+1,c
  4713  001002  0E00               	movlw	0
  4714  001004  6E48               	movwf	sprintf@width,c
  4715  001006  D000               	goto	l2471
  4716  001008                     l2471:
  4717                           
  4718                           ;doprnt.c: 600: width *= 10;
  4719  001008  C048  F028         	movff	sprintf@width,___wmul@multiplier
  4720  00100C  C049  F029         	movff	sprintf@width+1,___wmul@multiplier+1
  4721  001010  0E00               	movlw	0
  4722  001012  6E2B               	movwf	___wmul@multiplicand+1,c
  4723  001014  0E0A               	movlw	10
  4724  001016  6E2A               	movwf	___wmul@multiplicand,c
  4725  001018  EC2D  F011         	call	___wmul	;wreg free
  4726  00101C  C028  F048         	movff	?___wmul,sprintf@width
  4727  001020  C029  F049         	movff	?___wmul+1,sprintf@width+1
  4728                           
  4729                           ;doprnt.c: 601: width += *f++ - '0';
  4730  001024  0ED0               	movlw	208
  4731  001026  6E3E               	movwf	??_sprintf& (0+255),c
  4732  001028  0EFF               	movlw	255
  4733  00102A  6E3F               	movwf	(??_sprintf+1)& (0+255),c
  4734  00102C  C036  FFF6         	movff	sprintf@f,tblptrl
  4735  001030  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4736  001034                     	if	0	;tblptru may be non-zero
  4737  001034                     	endif
  4738  001034                     	if	0	;tblptru may be non-zero
  4739  001034                     	endif
  4740  001034  0008               	tblrd		*
  4741  001036  50F5               	movf	tablat,w,c
  4742  001038  6E40               	movwf	(??_sprintf+2)& (0+255),c
  4743  00103A  6A41               	clrf	(??_sprintf+3)& (0+255),c
  4744  00103C  503E               	movf	??_sprintf,w,c
  4745  00103E  2640               	addwf	??_sprintf+2,f,c
  4746  001040  503F               	movf	??_sprintf+1,w,c
  4747  001042  2241               	addwfc	??_sprintf+3,f,c
  4748  001044  5040               	movf	??_sprintf+2,w,c
  4749  001046  2648               	addwf	sprintf@width,f,c
  4750  001048  5041               	movf	??_sprintf+3,w,c
  4751  00104A  2249               	addwfc	sprintf@width+1,f,c
  4752  00104C  4A36               	infsnz	sprintf@f,f,c
  4753  00104E  2A37               	incf	sprintf@f+1,f,c
  4754                           
  4755                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4756  001050  C036  FFF6         	movff	sprintf@f,tblptrl
  4757  001054  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4758  001058                     	if	0	;tblptru may be non-zero
  4759  001058                     	endif
  4760  001058                     	if	0	;tblptru may be non-zero
  4761  001058                     	endif
  4762  001058  0008               	tblrd		*
  4763  00105A  50F5               	movf	tablat,w,c
  4764  00105C  EC65  F011         	call	_isdigit
  4765  001060  A0D8               	btfss	status,0,c
  4766  001062  D007               	goto	l2483
  4767  001064  D7D1               	goto	l2471
  4768                           
  4769                           ;doprnt.c: 608: }
  4770                           ;doprnt.c: 635: switch(c = *f++) {
  4771  001066  D005               	goto	l2483
  4772                           
  4773                           ;doprnt.c: 638: goto alldone;
  4774                           
  4775                           ;doprnt.c: 637: case 0:
  4776  001068  D0C1               	goto	l2537
  4777                           
  4778                           ;doprnt.c: 813: continue;
  4779                           
  4780                           ;doprnt.c: 802: default:
  4781  00106A  D0B2               	goto	l2535
  4782  00106C                     l2479:
  4783                           
  4784                           ;doprnt.c: 818: flag |= 0xC0;
  4785  00106C  0EC0               	movlw	192
  4786  00106E  1244               	iorwf	sprintf@flag,f,c
  4787                           
  4788                           ;doprnt.c: 822: }
  4789                           
  4790                           ;doprnt.c: 819: break;
  4791  001070  D011               	goto	l2485
  4792  001072                     l2483:
  4793  001072  C036  FFF6         	movff	sprintf@f,tblptrl
  4794  001076  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4795  00107A  4A36               	infsnz	sprintf@f,f,c
  4796  00107C  2A37               	incf	sprintf@f+1,f,c
  4797  00107E                     	if	0	;tblptru may be non-zero
  4798  00107E                     	endif
  4799  00107E                     	if	0	;tblptru may be non-zero
  4800  00107E                     	endif
  4801  00107E  0008               	tblrd		*
  4802  001080  CFF5 F04A          	movff	tablat,sprintf@c
  4803  001084  504A               	movf	sprintf@c,w,c
  4804                           
  4805                           ; Switch size 1, requested type "space"
  4806                           ; Number of cases is 2, Range of values is 0 to 117
  4807                           ; switch strategies available:
  4808                           ; Name         Instructions Cycles
  4809                           ; simple_byte            7     4 (average)
  4810                           ;	Chosen strategy is simple_byte
  4811  001086  0A00               	xorlw	0	; case 0
  4812  001088  B4D8               	btfsc	status,2,c
  4813  00108A  D0B0               	goto	l2537
  4814  00108C  0A75               	xorlw	117	; case 117
  4815  00108E  B4D8               	btfsc	status,2,c
  4816  001090  D7ED               	goto	l2479
  4817  001092  D09E               	goto	l2535
  4818  001094                     l2485:
  4819                           
  4820                           ;doprnt.c: 1273: {
  4821                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4822  001094  C042  FFD9         	movff	sprintf@ap,fsr2l
  4823  001098  C043  FFDA         	movff	sprintf@ap+1,fsr2h
  4824  00109C  CFDE F045          	movff	postinc2,sprintf@val
  4825  0010A0  CFDD F046          	movff	postdec2,sprintf@val+1
  4826  0010A4  0E02               	movlw	2
  4827  0010A6  2642               	addwf	sprintf@ap,f,c
  4828  0010A8  0E00               	movlw	0
  4829  0010AA  2243               	addwfc	sprintf@ap+1,f,c
  4830                           
  4831                           ;doprnt.c: 1287: }
  4832                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4833  0010AC  0E01               	movlw	1
  4834  0010AE  6E4A               	movwf	sprintf@c,c
  4835  0010B0                     l2491:
  4836  0010B0  0E05               	movlw	5
  4837  0010B2  184A               	xorwf	sprintf@c,w,c
  4838  0010B4  B4D8               	btfsc	status,2,c
  4839  0010B6  D016               	goto	l2503
  4840  0010B8  D001               	goto	l2495
  4841  0010BA  D014               	goto	l2503
  4842  0010BC                     l2495:
  4843                           
  4844                           ;doprnt.c: 1306: if(val < dpowers[c])
  4845  0010BC  504A               	movf	sprintf@c,w,c
  4846  0010BE  0D02               	mullw	2
  4847  0010C0  0E01               	movlw	low _dpowers
  4848  0010C2  24F3               	addwf	prodl,w,c
  4849  0010C4  6EF6               	movwf	tblptrl,c
  4850  0010C6  0E0F               	movlw	high _dpowers
  4851  0010C8  20F4               	addwfc	prodh,w,c
  4852  0010CA  6EF7               	movwf	tblptrh,c
  4853  0010CC                     	if	0	;There are less than 3 active tblptr bytes
  4854  0010CC                     	endif
  4855  0010CC  0009               	tblrd		*+
  4856  0010CE  50F5               	movf	tablat,w,c
  4857  0010D0  5C45               	subwf	sprintf@val,w,c
  4858  0010D2  0009               	tblrd		*+
  4859  0010D4  50F5               	movf	tablat,w,c
  4860  0010D6  5846               	subwfb	sprintf@val+1,w,c
  4861  0010D8  A0D8               	btfss	status,0,c
  4862  0010DA  D004               	goto	l2503
  4863  0010DC  D001               	goto	l2499
  4864                           
  4865                           ;doprnt.c: 1307: break;
  4866  0010DE  D002               	goto	l2503
  4867  0010E0                     l2499:
  4868  0010E0  2A4A               	incf	sprintf@c,f,c
  4869  0010E2  D7E6               	goto	l2491
  4870  0010E4                     l2503:
  4871                           
  4872                           ;doprnt.c: 1381: if(width > c)
  4873  0010E4  0E80               	movlw	128
  4874  0010E6  BE4A               	btfsc	sprintf@c,7,c
  4875  0010E8  0E7F               	movlw	127
  4876  0010EA  6E3E               	movwf	??_sprintf& (0+255),c
  4877  0010EC  5048               	movf	sprintf@width,w,c
  4878  0010EE  5C4A               	subwf	sprintf@c,w,c
  4879  0010F0  5049               	movf	sprintf@width+1,w,c
  4880  0010F2  0A80               	xorlw	128
  4881  0010F4  583E               	subwfb	??_sprintf& (0+255),w,c
  4882  0010F6  B0D8               	btfsc	status,0,c
  4883  0010F8  D007               	goto	l2507
  4884                           
  4885                           ;doprnt.c: 1382: width -= c;
  4886  0010FA  504A               	movf	sprintf@c,w,c
  4887  0010FC  5E48               	subwf	sprintf@width,f,c
  4888  0010FE  0E00               	movlw	0
  4889  001100  BE4A               	btfsc	sprintf@c,7,c
  4890  001102  0EFF               	movlw	255
  4891  001104  5A49               	subwfb	sprintf@width+1,f,c
  4892  001106  D005               	goto	l2509
  4893  001108                     l2507:
  4894                           
  4895                           ;doprnt.c: 1383: else
  4896                           ;doprnt.c: 1384: width = 0;
  4897  001108  0E00               	movlw	0
  4898  00110A  6E49               	movwf	sprintf@width+1,c
  4899  00110C  0E00               	movlw	0
  4900  00110E  6E48               	movwf	sprintf@width,c
  4901  001110  D000               	goto	l2509
  4902  001112                     l2509:
  4903                           
  4904                           ;doprnt.c: 1387: if(flag & 0x04) {
  4905  001112  A444               	btfss	sprintf@flag,2,c
  4906  001114  D015               	goto	l2519
  4907                           
  4908                           ;doprnt.c: 1415: if(width)
  4909  001116  5048               	movf	sprintf@width,w,c
  4910  001118  1049               	iorwf	sprintf@width+1,w,c
  4911  00111A  B4D8               	btfsc	status,2,c
  4912  00111C  D026               	goto	l414
  4913  00111E                     l2513:
  4914                           
  4915                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4916  00111E  C034  FFD9         	movff	sprintf@sp,fsr2l
  4917  001122  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  4918  001126  0E30               	movlw	48
  4919  001128  6EDF               	movwf	indf2,c
  4920  00112A  4A34               	infsnz	sprintf@sp,f,c
  4921  00112C  2A35               	incf	sprintf@sp+1,f,c
  4922                           
  4923                           ;doprnt.c: 1418: while(--width);
  4924  00112E  0648               	decf	sprintf@width,f,c
  4925  001130  A0D8               	btfss	status,0,c
  4926  001132  0649               	decf	sprintf@width+1,f,c
  4927  001134  5048               	movf	sprintf@width,w,c
  4928  001136  1049               	iorwf	sprintf@width+1,w,c
  4929  001138  B4D8               	btfsc	status,2,c
  4930  00113A  D017               	goto	l414
  4931  00113C  D7F0               	goto	l2513
  4932                           
  4933                           ;doprnt.c: 1420: } else
  4934  00113E  D015               	goto	l414
  4935  001140                     l2519:
  4936                           
  4937                           ;doprnt.c: 1422: {
  4938                           ;doprnt.c: 1424: if(width
  4939                           ;doprnt.c: 1428: )
  4940  001140  5048               	movf	sprintf@width,w,c
  4941  001142  1049               	iorwf	sprintf@width+1,w,c
  4942  001144  B4D8               	btfsc	status,2,c
  4943  001146  D011               	goto	l414
  4944  001148                     l2521:
  4945                           
  4946                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4947  001148  C034  FFD9         	movff	sprintf@sp,fsr2l
  4948  00114C  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  4949  001150  0E20               	movlw	32
  4950  001152  6EDF               	movwf	indf2,c
  4951  001154  4A34               	infsnz	sprintf@sp,f,c
  4952  001156  2A35               	incf	sprintf@sp+1,f,c
  4953                           
  4954                           ;doprnt.c: 1431: while(--width);
  4955  001158  0648               	decf	sprintf@width,f,c
  4956  00115A  A0D8               	btfss	status,0,c
  4957  00115C  0649               	decf	sprintf@width+1,f,c
  4958  00115E  5048               	movf	sprintf@width,w,c
  4959  001160  1049               	iorwf	sprintf@width+1,w,c
  4960  001162  B4D8               	btfsc	status,2,c
  4961  001164  D002               	goto	l414
  4962  001166  D7F0               	goto	l2521
  4963  001168  D000               	goto	l414
  4964  00116A                     l414:
  4965                           
  4966                           ;doprnt.c: 1469: }
  4967                           ;doprnt.c: 1472: prec = c;
  4968  00116A  C04A  F047         	movff	sprintf@c,sprintf@prec
  4969                           
  4970                           ;doprnt.c: 1474: while(prec--) {
  4971  00116E  D02A               	goto	l2533
  4972  001170                     l2527:
  4973                           
  4974                           ;doprnt.c: 1478: {
  4975                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4976  001170  5047               	movf	sprintf@prec,w,c
  4977  001172  0D02               	mullw	2
  4978  001174  0E01               	movlw	low _dpowers
  4979  001176  24F3               	addwf	prodl,w,c
  4980  001178  6EF6               	movwf	tblptrl,c
  4981  00117A  0E0F               	movlw	high _dpowers
  4982  00117C  20F4               	addwfc	prodh,w,c
  4983  00117E  6EF7               	movwf	tblptrh,c
  4984  001180                     	if	0	;There are less than 3 active tblptr bytes
  4985  001180                     	endif
  4986  001180  0009               	tblrd		*+
  4987  001182  CFF5 F02A          	movff	tablat,___lwdiv@divisor
  4988  001186  000A               	tblrd		*-
  4989  001188  CFF5 F02B          	movff	tablat,___lwdiv@divisor+1
  4990  00118C  C045  F028         	movff	sprintf@val,___lwdiv@dividend
  4991  001190  C046  F029         	movff	sprintf@val+1,___lwdiv@dividend+1
  4992  001194  ECB5  F00F         	call	___lwdiv	;wreg free
  4993  001198  C028  F02F         	movff	?___lwdiv,___lwmod@dividend
  4994  00119C  C029  F030         	movff	?___lwdiv+1,___lwmod@dividend+1
  4995  0011A0  0E00               	movlw	0
  4996  0011A2  6E32               	movwf	___lwmod@divisor+1,c
  4997  0011A4  0E0A               	movlw	10
  4998  0011A6  6E31               	movwf	___lwmod@divisor,c
  4999  0011A8  EC36  F010         	call	___lwmod	;wreg free
  5000  0011AC  502F               	movf	?___lwmod,w,c
  5001  0011AE  0F30               	addlw	48
  5002  0011B0  6E4A               	movwf	sprintf@c,c
  5003                           
  5004                           ;doprnt.c: 1523: }
  5005                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5006  0011B2  C034  FFD9         	movff	sprintf@sp,fsr2l
  5007  0011B6  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  5008  0011BA  C04A  FFDF         	movff	sprintf@c,indf2
  5009  0011BE  4A34               	infsnz	sprintf@sp,f,c
  5010  0011C0  2A35               	incf	sprintf@sp+1,f,c
  5011  0011C2  D000               	goto	l2533
  5012  0011C4                     l2533:
  5013  0011C4  0647               	decf	sprintf@prec,f,c
  5014  0011C6  2847               	incf	sprintf@prec,w,c
  5015  0011C8  B4D8               	btfsc	status,2,c
  5016  0011CA  D002               	goto	l2535
  5017  0011CC  D7D1               	goto	l2527
  5018  0011CE  D000               	goto	l2535
  5019  0011D0                     l2535:
  5020  0011D0  C036  FFF6         	movff	sprintf@f,tblptrl
  5021  0011D4  C037  FFF7         	movff	sprintf@f+1,tblptrh
  5022  0011D8  4A36               	infsnz	sprintf@f,f,c
  5023  0011DA  2A37               	incf	sprintf@f+1,f,c
  5024  0011DC                     	if	0	;tblptru may be non-zero
  5025  0011DC                     	endif
  5026  0011DC                     	if	0	;tblptru may be non-zero
  5027  0011DC                     	endif
  5028  0011DC  0008               	tblrd		*
  5029  0011DE  CFF5 F04A          	movff	tablat,sprintf@c
  5030  0011E2  504A               	movf	sprintf@c,w,c
  5031  0011E4  B4D8               	btfsc	status,2,c
  5032  0011E6  D002               	goto	l2537
  5033  0011E8  D6DC               	goto	l2453
  5034  0011EA  D000               	goto	l2537
  5035  0011EC                     l2537:
  5036                           
  5037                           ;doprnt.c: 1538: *sp = 0;
  5038  0011EC  C034  FFD9         	movff	sprintf@sp,fsr2l
  5039  0011F0  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  5040  0011F4  0E00               	movlw	0
  5041  0011F6  6EDF               	movwf	indf2,c
  5042  0011F8  0012               	return	
  5043                           
  5044                           ;doprnt.c: 1540: return 0;
  5045                           ;	Return value of _sprintf is never used
  5046  0011FA  0012               	return		;funcret
  5047  0011FC                     __end_of_sprintf:
  5048                           	opt stack 0
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           prodh	equ	0xFF4
  5054                           prodl	equ	0xFF3
  5055                           intcon	equ	0xFF2
  5056                           postinc0	equ	0xFEE
  5057                           wreg	equ	0xFE8
  5058                           postdec1	equ	0xFE5
  5059                           fsr1l	equ	0xFE1
  5060                           indf2	equ	0xFDF
  5061                           postinc2	equ	0xFDE
  5062                           postdec2	equ	0xFDD
  5063                           fsr2h	equ	0xFDA
  5064                           fsr2l	equ	0xFD9
  5065                           status	equ	0xFD8
  5066                           
  5067 ;; *************** function _isdigit *****************
  5068 ;; Defined at:
  5069 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  c               1    wreg     unsigned char 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  c               1    2[COMRAM] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;		None               void
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;Total ram usage:        3 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_sprintf
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text30
  5097  0022CA                     __ptext30:
  5098                           	opt stack 0
  5099  0022CA                     _isdigit:
  5100                           	opt stack 27
  5101                           
  5102                           ;incstack = 0
  5103                           ;isdigit@c stored from wreg
  5104  0022CA  6E2A               	movwf	isdigit@c,c
  5105  0022CC  0E00               	movlw	0
  5106  0022CE  6E29               	movwf	_isdigit$2107,c
  5107  0022D0  0E3A               	movlw	58
  5108  0022D2  602A               	cpfslt	isdigit@c,c
  5109  0022D4  D006               	goto	l2267
  5110  0022D6  0E2F               	movlw	47
  5111  0022D8  642A               	cpfsgt	isdigit@c,c
  5112  0022DA  D003               	goto	l2267
  5113  0022DC  0E01               	movlw	1
  5114  0022DE  6E29               	movwf	_isdigit$2107,c
  5115  0022E0  D000               	goto	l2267
  5116  0022E2                     l2267:
  5117  0022E2  C029  F028         	movff	_isdigit$2107,??_isdigit
  5118  0022E6  3028               	rrcf	??_isdigit,w,c
  5119  0022E8  0012               	return	
  5120  0022EA  0012               	return		;funcret
  5121  0022EC                     __end_of_isdigit:
  5122                           	opt stack 0
  5123                           tblptru	equ	0xFF8
  5124                           tblptrh	equ	0xFF7
  5125                           tblptrl	equ	0xFF6
  5126                           tablat	equ	0xFF5
  5127                           prodh	equ	0xFF4
  5128                           prodl	equ	0xFF3
  5129                           intcon	equ	0xFF2
  5130                           postinc0	equ	0xFEE
  5131                           wreg	equ	0xFE8
  5132                           postdec1	equ	0xFE5
  5133                           fsr1l	equ	0xFE1
  5134                           indf2	equ	0xFDF
  5135                           postinc2	equ	0xFDE
  5136                           postdec2	equ	0xFDD
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function ___wmul *****************
  5142 ;; Defined at:
  5143 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  multiplier      2    0[COMRAM] unsigned int 
  5146 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  product         2    4[COMRAM] unsigned int 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  2    0[COMRAM] unsigned int 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0, prodl, prodh
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;Total ram usage:        6 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_sprintf
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text31
  5172  00225A                     __ptext31:
  5173                           	opt stack 0
  5174  00225A                     ___wmul:
  5175                           	opt stack 27
  5176                           
  5177                           ;incstack = 0
  5178  00225A  5028               	movf	___wmul@multiplier,w,c
  5179  00225C  022A               	mulwf	___wmul@multiplicand,c
  5180  00225E  CFF3 F02C          	movff	prodl,___wmul@product
  5181  002262  CFF4 F02D          	movff	prodh,___wmul@product+1
  5182  002266  5028               	movf	___wmul@multiplier,w,c
  5183  002268  022B               	mulwf	___wmul@multiplicand+1,c
  5184  00226A  50F3               	movf	prodl,w,c
  5185  00226C  262D               	addwf	___wmul@product+1,f,c
  5186  00226E  5029               	movf	___wmul@multiplier+1,w,c
  5187  002270  022A               	mulwf	___wmul@multiplicand,c
  5188  002272  50F3               	movf	prodl,w,c
  5189  002274  262D               	addwf	___wmul@product+1,f,c
  5190  002276  C02C  F028         	movff	___wmul@product,?___wmul
  5191  00227A  C02D  F029         	movff	___wmul@product+1,?___wmul+1
  5192  00227E  0012               	return	
  5193  002280  0012               	return		;funcret
  5194  002282                     __end_of___wmul:
  5195                           	opt stack 0
  5196                           tblptru	equ	0xFF8
  5197                           tblptrh	equ	0xFF7
  5198                           tblptrl	equ	0xFF6
  5199                           tablat	equ	0xFF5
  5200                           prodh	equ	0xFF4
  5201                           prodl	equ	0xFF3
  5202                           intcon	equ	0xFF2
  5203                           postinc0	equ	0xFEE
  5204                           wreg	equ	0xFE8
  5205                           postdec1	equ	0xFE5
  5206                           fsr1l	equ	0xFE1
  5207                           indf2	equ	0xFDF
  5208                           postinc2	equ	0xFDE
  5209                           postdec2	equ	0xFDD
  5210                           fsr2h	equ	0xFDA
  5211                           fsr2l	equ	0xFD9
  5212                           status	equ	0xFD8
  5213                           
  5214 ;; *************** function ___lwmod *****************
  5215 ;; Defined at:
  5216 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  dividend        2    7[COMRAM] unsigned int 
  5219 ;;  divisor         2    9[COMRAM] unsigned int 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  counter         1   11[COMRAM] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  2    7[COMRAM] unsigned int 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;Total ram usage:        5 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_sprintf
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text32
  5245  00206C                     __ptext32:
  5246                           	opt stack 0
  5247  00206C                     ___lwmod:
  5248                           	opt stack 27
  5249                           
  5250                           ;incstack = 0
  5251  00206C  5031               	movf	___lwmod@divisor,w,c
  5252  00206E  1032               	iorwf	___lwmod@divisor+1,w,c
  5253  002070  B4D8               	btfsc	status,2,c
  5254  002072  D01D               	goto	l1068
  5255  002074  0E01               	movlw	1
  5256  002076  6E33               	movwf	___lwmod@counter,c
  5257  002078  D005               	goto	l2305
  5258  00207A                     l2303:
  5259  00207A  90D8               	bcf	status,0,c
  5260  00207C  3631               	rlcf	___lwmod@divisor,f,c
  5261  00207E  3632               	rlcf	___lwmod@divisor+1,f,c
  5262  002080  2A33               	incf	___lwmod@counter,f,c
  5263  002082  D000               	goto	l2305
  5264  002084                     l2305:
  5265  002084  BE32               	btfsc	___lwmod@divisor+1,7,c
  5266  002086  D002               	goto	l2307
  5267  002088  D7F8               	goto	l2303
  5268  00208A  D000               	goto	l2307
  5269  00208C                     l2307:
  5270  00208C  5031               	movf	___lwmod@divisor,w,c
  5271  00208E  5C2F               	subwf	___lwmod@dividend,w,c
  5272  002090  5032               	movf	___lwmod@divisor+1,w,c
  5273  002092  5830               	subwfb	___lwmod@dividend+1,w,c
  5274  002094  A0D8               	btfss	status,0,c
  5275  002096  D005               	goto	l2311
  5276  002098  5031               	movf	___lwmod@divisor,w,c
  5277  00209A  5E2F               	subwf	___lwmod@dividend,f,c
  5278  00209C  5032               	movf	___lwmod@divisor+1,w,c
  5279  00209E  5A30               	subwfb	___lwmod@dividend+1,f,c
  5280  0020A0  D000               	goto	l2311
  5281  0020A2                     l2311:
  5282  0020A2  90D8               	bcf	status,0,c
  5283  0020A4  3232               	rrcf	___lwmod@divisor+1,f,c
  5284  0020A6  3231               	rrcf	___lwmod@divisor,f,c
  5285  0020A8  2E33               	decfsz	___lwmod@counter,f,c
  5286  0020AA  D7F0               	goto	l2307
  5287  0020AC  D000               	goto	l1068
  5288  0020AE                     l1068:
  5289  0020AE  C02F  F02F         	movff	___lwmod@dividend,?___lwmod
  5290  0020B2  C030  F030         	movff	___lwmod@dividend+1,?___lwmod+1
  5291  0020B6  0012               	return		;funcret
  5292  0020B8                     __end_of___lwmod:
  5293                           	opt stack 0
  5294                           tblptru	equ	0xFF8
  5295                           tblptrh	equ	0xFF7
  5296                           tblptrl	equ	0xFF6
  5297                           tablat	equ	0xFF5
  5298                           prodh	equ	0xFF4
  5299                           prodl	equ	0xFF3
  5300                           intcon	equ	0xFF2
  5301                           postinc0	equ	0xFEE
  5302                           wreg	equ	0xFE8
  5303                           postdec1	equ	0xFE5
  5304                           fsr1l	equ	0xFE1
  5305                           indf2	equ	0xFDF
  5306                           postinc2	equ	0xFDE
  5307                           postdec2	equ	0xFDD
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function ___lwdiv *****************
  5313 ;; Defined at:
  5314 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  dividend        2    0[COMRAM] unsigned int 
  5317 ;;  divisor         2    2[COMRAM] unsigned int 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  quotient        2    4[COMRAM] unsigned int 
  5320 ;;  counter         1    6[COMRAM] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  2    0[COMRAM] unsigned int 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;Total ram usage:        7 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_sprintf
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text33
  5344  001F6A                     __ptext33:
  5345                           	opt stack 0
  5346  001F6A                     ___lwdiv:
  5347                           	opt stack 27
  5348                           
  5349                           ;incstack = 0
  5350  001F6A  0E00               	movlw	0
  5351  001F6C  6E2D               	movwf	___lwdiv@quotient+1,c
  5352  001F6E  0E00               	movlw	0
  5353  001F70  6E2C               	movwf	___lwdiv@quotient,c
  5354  001F72  502A               	movf	___lwdiv@divisor,w,c
  5355  001F74  102B               	iorwf	___lwdiv@divisor+1,w,c
  5356  001F76  B4D8               	btfsc	status,2,c
  5357  001F78  D021               	goto	l1058
  5358  001F7A  0E01               	movlw	1
  5359  001F7C  6E2E               	movwf	___lwdiv@counter,c
  5360  001F7E  D005               	goto	l2285
  5361  001F80                     l2283:
  5362  001F80  90D8               	bcf	status,0,c
  5363  001F82  362A               	rlcf	___lwdiv@divisor,f,c
  5364  001F84  362B               	rlcf	___lwdiv@divisor+1,f,c
  5365  001F86  2A2E               	incf	___lwdiv@counter,f,c
  5366  001F88  D000               	goto	l2285
  5367  001F8A                     l2285:
  5368  001F8A  BE2B               	btfsc	___lwdiv@divisor+1,7,c
  5369  001F8C  D002               	goto	l2287
  5370  001F8E  D7F8               	goto	l2283
  5371  001F90  D000               	goto	l2287
  5372  001F92                     l2287:
  5373  001F92  90D8               	bcf	status,0,c
  5374  001F94  362C               	rlcf	___lwdiv@quotient,f,c
  5375  001F96  362D               	rlcf	___lwdiv@quotient+1,f,c
  5376  001F98  502A               	movf	___lwdiv@divisor,w,c
  5377  001F9A  5C28               	subwf	___lwdiv@dividend,w,c
  5378  001F9C  502B               	movf	___lwdiv@divisor+1,w,c
  5379  001F9E  5829               	subwfb	___lwdiv@dividend+1,w,c
  5380  001FA0  A0D8               	btfss	status,0,c
  5381  001FA2  D006               	goto	l2295
  5382  001FA4  502A               	movf	___lwdiv@divisor,w,c
  5383  001FA6  5E28               	subwf	___lwdiv@dividend,f,c
  5384  001FA8  502B               	movf	___lwdiv@divisor+1,w,c
  5385  001FAA  5A29               	subwfb	___lwdiv@dividend+1,f,c
  5386  001FAC  802C               	bsf	___lwdiv@quotient,0,c
  5387  001FAE  D000               	goto	l2295
  5388  001FB0                     l2295:
  5389  001FB0  90D8               	bcf	status,0,c
  5390  001FB2  322B               	rrcf	___lwdiv@divisor+1,f,c
  5391  001FB4  322A               	rrcf	___lwdiv@divisor,f,c
  5392  001FB6  2E2E               	decfsz	___lwdiv@counter,f,c
  5393  001FB8  D7EC               	goto	l2287
  5394  001FBA  D000               	goto	l1058
  5395  001FBC                     l1058:
  5396  001FBC  C02C  F028         	movff	___lwdiv@quotient,?___lwdiv
  5397  001FC0  C02D  F029         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5398  001FC4  0012               	return		;funcret
  5399  001FC6                     __end_of___lwdiv:
  5400                           	opt stack 0
  5401                           tblptru	equ	0xFF8
  5402                           tblptrh	equ	0xFF7
  5403                           tblptrl	equ	0xFF6
  5404                           tablat	equ	0xFF5
  5405                           prodh	equ	0xFF4
  5406                           prodl	equ	0xFF3
  5407                           intcon	equ	0xFF2
  5408                           postinc0	equ	0xFEE
  5409                           wreg	equ	0xFE8
  5410                           postdec1	equ	0xFE5
  5411                           fsr1l	equ	0xFE1
  5412                           indf2	equ	0xFDF
  5413                           postinc2	equ	0xFDE
  5414                           postdec2	equ	0xFDD
  5415                           fsr2h	equ	0xFDA
  5416                           fsr2l	equ	0xFD9
  5417                           status	equ	0xFD8
  5418                           
  5419 ;; *************** function _lcd_write *****************
  5420 ;; Defined at:
  5421 ;;		line 49 in file "main.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  column          2   10[COMRAM] int 
  5424 ;;  row             2   12[COMRAM] int 
  5425 ;;  string          2   14[COMRAM] PTR unsigned char 
  5426 ;;		 -> STR_33(5), STR_32(8), STR_31(7), STR_30(6), 
  5427 ;;		 -> STR_29(8), STR_28(4), STR_27(5), STR_26(6), 
  5428 ;;		 -> STR_25(6), STR_24(3), STR_23(3), STR_22(8), 
  5429 ;;		 -> STR_21(2), STR_20(2), STR_19(2), STR_18(2), 
  5430 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  5431 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  5432 ;;		 -> STR_9(7), STR_8(4), STR_7(6), STR_6(8), 
  5433 ;;		 -> STR_5(16), STR_4(4), buffer1(20), 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;		None               void
  5438 ;; Registers used:
  5439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5445 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;Total ram usage:        6 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    5
  5452 ;; This function calls:
  5453 ;;		_lcd_gotoxy
  5454 ;;		_lcd_putrs
  5455 ;; This function is called by:
  5456 ;;		_home_clock_refresh
  5457 ;;		_activity_home
  5458 ;;		_activity_pin
  5459 ;;		_activity_menu
  5460 ;;		_action_menu_selector
  5461 ;;		_action_submenu_selector
  5462 ;;		_activity_submenu_activation
  5463 ;;		_activity_submenu_clock
  5464 ;;		_activity_submenu_pin
  5465 ;;		_activity_submenu_alarm
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text34
  5470  002304                     __ptext34:
  5471                           	opt stack 0
  5472  002304                     _lcd_write:
  5473                           	opt stack 21
  5474                           
  5475                           ;main.c: 50: lcd_gotoxy(column, row);
  5476                           
  5477                           ;incstack = 0
  5478  002304  C034  F02C         	movff	lcd_write@row,lcd_gotoxy@y
  5479  002308  5032               	movf	lcd_write@column,w,c
  5480  00230A  EC53  F011         	call	_lcd_gotoxy
  5481                           
  5482                           ;main.c: 51: lcd_putrs(string);
  5483  00230E  C036  F030         	movff	lcd_write@string,lcd_putrs@ptr
  5484  002312  C037  F031         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  5485  002316  ECE3  F00F         	call	_lcd_putrs	;wreg free
  5486  00231A  0012               	return		;funcret
  5487  00231C                     __end_of_lcd_write:
  5488                           	opt stack 0
  5489                           tblptru	equ	0xFF8
  5490                           tblptrh	equ	0xFF7
  5491                           tblptrl	equ	0xFF6
  5492                           tablat	equ	0xFF5
  5493                           prodh	equ	0xFF4
  5494                           prodl	equ	0xFF3
  5495                           intcon	equ	0xFF2
  5496                           postinc0	equ	0xFEE
  5497                           wreg	equ	0xFE8
  5498                           postdec1	equ	0xFE5
  5499                           fsr1l	equ	0xFE1
  5500                           indf2	equ	0xFDF
  5501                           postinc2	equ	0xFDE
  5502                           postdec2	equ	0xFDD
  5503                           fsr2h	equ	0xFDA
  5504                           fsr2l	equ	0xFD9
  5505                           status	equ	0xFD8
  5506                           
  5507 ;; *************** function _lcd_putrs *****************
  5508 ;; Defined at:
  5509 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  5512 ;;		 -> STR_35(2), STR_34(2), STR_33(5), STR_32(8), 
  5513 ;;		 -> STR_31(7), STR_30(6), STR_29(8), STR_28(4), 
  5514 ;;		 -> STR_27(5), STR_26(6), STR_25(6), STR_24(3), 
  5515 ;;		 -> STR_23(3), STR_22(8), STR_21(2), STR_20(2), 
  5516 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  5517 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  5518 ;;		 -> STR_11(2), STR_10(2), STR_9(7), STR_8(4), 
  5519 ;;		 -> STR_7(6), STR_6(8), STR_5(16), STR_4(4), 
  5520 ;;		 -> buffer1(20), 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;		None
  5523 ;; Return value:  Size  Location     Type
  5524 ;;		None               void
  5525 ;; Registers used:
  5526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5536 ;;Total ram usage:        2 bytes
  5537 ;; Hardware stack levels used:    1
  5538 ;; Hardware stack levels required when called:    4
  5539 ;; This function calls:
  5540 ;;		_lcd_putc
  5541 ;; This function is called by:
  5542 ;;		_lcd_write
  5543 ;;		_button_asterisk
  5544 ;;		_button_number
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text35
  5549  001FC6                     __ptext35:
  5550                           	opt stack 0
  5551  001FC6                     _lcd_putrs:
  5552                           	opt stack 24
  5553                           
  5554                           ;unmc_lcd_216.c: 223: while(*ptr){
  5555                           
  5556                           ;incstack = 0
  5557  001FC6  D015               	goto	l2189
  5558  001FC8                     l2185:
  5559                           
  5560                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  5561  001FC8  C030  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5562  001FCC  C031  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5563  001FD0  6AF8               	clrf	tblptru,c
  5564  001FD2  0E0E               	movlw	(high __ramtop+-1)
  5565  001FD4  64F7               	cpfsgt	tblptrh,c
  5566  001FD6  D003               	bra	u1217
  5567  001FD8  0008               	tblrd		*
  5568  001FDA  50F5               	movf	tablat,w,c
  5569  001FDC  D005               	bra	u1210
  5570  001FDE                     u1217:
  5571  001FDE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5572  001FE2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5573  001FE6  50EF               	movf	indf0,w,c
  5574  001FE8                     u1210:
  5575  001FE8  EC5C  F010         	call	_lcd_putc
  5576  001FEC  4A30               	infsnz	lcd_putrs@ptr,f,c
  5577  001FEE  2A31               	incf	lcd_putrs@ptr+1,f,c
  5578  001FF0  D000               	goto	l2189
  5579  001FF2                     l2189:
  5580  001FF2  C030  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5581  001FF6  C031  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5582  001FFA  6AF8               	clrf	tblptru,c
  5583  001FFC  0E0E               	movlw	(high __ramtop+-1)
  5584  001FFE  64F7               	cpfsgt	tblptrh,c
  5585  002000  D003               	bra	u1227
  5586  002002  0008               	tblrd		*
  5587  002004  50F5               	movf	tablat,w,c
  5588  002006  D005               	bra	u1220
  5589  002008                     u1227:
  5590  002008  CFF6 FFE9          	movff	tblptrl,fsr0l
  5591  00200C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5592  002010  50EF               	movf	indf0,w,c
  5593  002012                     u1220:
  5594  002012  0900               	iorlw	0
  5595  002014  A4D8               	btfss	status,2,c
  5596  002016  D7D8               	goto	l2185
  5597  002018  0012               	return		;funcret
  5598  00201A                     __end_of_lcd_putrs:
  5599                           	opt stack 0
  5600                           tblptru	equ	0xFF8
  5601                           tblptrh	equ	0xFF7
  5602                           tblptrl	equ	0xFF6
  5603                           tablat	equ	0xFF5
  5604                           prodh	equ	0xFF4
  5605                           prodl	equ	0xFF3
  5606                           intcon	equ	0xFF2
  5607                           indf0	equ	0xFEF
  5608                           postinc0	equ	0xFEE
  5609                           fsr0h	equ	0xFEA
  5610                           fsr0l	equ	0xFE9
  5611                           wreg	equ	0xFE8
  5612                           postdec1	equ	0xFE5
  5613                           fsr1l	equ	0xFE1
  5614                           indf2	equ	0xFDF
  5615                           postinc2	equ	0xFDE
  5616                           postdec2	equ	0xFDD
  5617                           fsr2h	equ	0xFDA
  5618                           fsr2l	equ	0xFD9
  5619                           status	equ	0xFD8
  5620                           
  5621 ;; *************** function _lcd_putc *****************
  5622 ;; Defined at:
  5623 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  c               1    wreg     unsigned char 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  c               1    7[COMRAM] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;		None               void
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;Total ram usage:        1 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    3
  5644 ;; This function calls:
  5645 ;;		_lcd_gotoxy
  5646 ;;		_lcd_send_byte
  5647 ;; This function is called by:
  5648 ;;		_lcd_putrs
  5649 ;;		_lcd_puts
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text36
  5654  0020B8                     __ptext36:
  5655                           	opt stack 0
  5656  0020B8                     _lcd_putc:
  5657                           	opt stack 24
  5658                           
  5659                           ;incstack = 0
  5660                           ;lcd_putc@c stored from wreg
  5661  0020B8  6E2F               	movwf	lcd_putc@c,c
  5662                           
  5663                           ;unmc_lcd_216.c: 173: switch(c){
  5664  0020BA  D018               	goto	l2181
  5665  0020BC                     l2171:
  5666                           
  5667                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  5668  0020BC  0E01               	movlw	1
  5669  0020BE  6E2A               	movwf	lcd_send_byte@n,c
  5670  0020C0  0E00               	movlw	0
  5671  0020C2  ECFF  F010         	call	_lcd_send_byte
  5672                           
  5673                           ;unmc_lcd_216.c: 176: break;
  5674  0020C6  0012               	return	
  5675  0020C8                     l2173:
  5676                           
  5677                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  5678  0020C8  0E02               	movlw	2
  5679  0020CA  6E2C               	movwf	lcd_gotoxy@y,c
  5680  0020CC  0E01               	movlw	1
  5681  0020CE  EC53  F011         	call	_lcd_gotoxy
  5682                           
  5683                           ;unmc_lcd_216.c: 179: break;
  5684  0020D2  0012               	return	
  5685  0020D4                     l2175:
  5686                           
  5687                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  5688  0020D4  0E10               	movlw	16
  5689  0020D6  6E2A               	movwf	lcd_send_byte@n,c
  5690  0020D8  0E00               	movlw	0
  5691  0020DA  ECFF  F010         	call	_lcd_send_byte
  5692                           
  5693                           ;unmc_lcd_216.c: 182: break;
  5694  0020DE  0012               	return	
  5695  0020E0                     l2177:
  5696                           
  5697                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  5698  0020E0  C02F  F02A         	movff	lcd_putc@c,lcd_send_byte@n
  5699  0020E4  0E01               	movlw	1
  5700  0020E6  ECFF  F010         	call	_lcd_send_byte
  5701                           
  5702                           ;unmc_lcd_216.c: 186: }
  5703                           
  5704                           ;unmc_lcd_216.c: 185: break;
  5705  0020EA  0012               	return	
  5706  0020EC                     l2181:
  5707  0020EC  502F               	movf	lcd_putc@c,w,c
  5708                           
  5709                           ; Switch size 1, requested type "space"
  5710                           ; Number of cases is 3, Range of values is 8 to 12
  5711                           ; switch strategies available:
  5712                           ; Name         Instructions Cycles
  5713                           ; simple_byte           10     6 (average)
  5714                           ;	Chosen strategy is simple_byte
  5715  0020EE  0A08               	xorlw	8	; case 8
  5716  0020F0  B4D8               	btfsc	status,2,c
  5717  0020F2  D7F0               	goto	l2175
  5718  0020F4  0A02               	xorlw	2	; case 10
  5719  0020F6  B4D8               	btfsc	status,2,c
  5720  0020F8  D7E7               	goto	l2173
  5721  0020FA  0A06               	xorlw	6	; case 12
  5722  0020FC  B4D8               	btfsc	status,2,c
  5723  0020FE  D7DE               	goto	l2171
  5724  002100  D7EF               	goto	l2177
  5725  002102  0012               	return		;funcret
  5726  002104                     __end_of_lcd_putc:
  5727                           	opt stack 0
  5728                           tblptru	equ	0xFF8
  5729                           tblptrh	equ	0xFF7
  5730                           tblptrl	equ	0xFF6
  5731                           tablat	equ	0xFF5
  5732                           prodh	equ	0xFF4
  5733                           prodl	equ	0xFF3
  5734                           intcon	equ	0xFF2
  5735                           indf0	equ	0xFEF
  5736                           postinc0	equ	0xFEE
  5737                           fsr0h	equ	0xFEA
  5738                           fsr0l	equ	0xFE9
  5739                           wreg	equ	0xFE8
  5740                           postdec1	equ	0xFE5
  5741                           fsr1l	equ	0xFE1
  5742                           indf2	equ	0xFDF
  5743                           postinc2	equ	0xFDE
  5744                           postdec2	equ	0xFDD
  5745                           fsr2h	equ	0xFDA
  5746                           fsr2l	equ	0xFD9
  5747                           status	equ	0xFD8
  5748                           
  5749 ;; *************** function _lcd_gotoxy *****************
  5750 ;; Defined at:
  5751 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  x               1    wreg     unsigned char 
  5754 ;;  y               1    4[COMRAM] unsigned char 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  x               1    5[COMRAM] unsigned char 
  5757 ;;  address         1    6[COMRAM] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;		None               void
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5767 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5771 ;;Total ram usage:        3 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    2
  5774 ;; This function calls:
  5775 ;;		_lcd_send_byte
  5776 ;; This function is called by:
  5777 ;;		_lcd_write
  5778 ;;		_activity_pin
  5779 ;;		_lcd_putc
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text37
  5784  0022A6                     __ptext37:
  5785                           	opt stack 0
  5786  0022A6                     _lcd_gotoxy:
  5787                           	opt stack 24
  5788                           
  5789                           ;incstack = 0
  5790                           ;lcd_gotoxy@x stored from wreg
  5791  0022A6  6E2D               	movwf	lcd_gotoxy@x,c
  5792                           
  5793                           ;unmc_lcd_216.c: 159: int8 address;
  5794                           ;unmc_lcd_216.c: 161: if(y != 1)
  5795  0022A8  042C               	decf	lcd_gotoxy@y,w,c
  5796  0022AA  B4D8               	btfsc	status,2,c
  5797  0022AC  D002               	goto	l2163
  5798                           
  5799                           ;unmc_lcd_216.c: 162: address = 0x40;
  5800  0022AE  0E40               	movlw	64
  5801  0022B0  D001               	goto	L1
  5802  0022B2                     l2163:
  5803                           
  5804                           ;unmc_lcd_216.c: 163: else
  5805                           ;unmc_lcd_216.c: 164: address=0;
  5806  0022B2  0E00               	movlw	0
  5807  0022B4                     L1:
  5808  0022B4  6E2E               	movwf	lcd_gotoxy@address,c
  5809  0022B6  D000               	goto	l2165
  5810  0022B8                     l2165:
  5811                           
  5812                           ;unmc_lcd_216.c: 166: address += x-1;
  5813  0022B8  042D               	decf	lcd_gotoxy@x,w,c
  5814  0022BA  262E               	addwf	lcd_gotoxy@address,f,c
  5815                           
  5816                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  5817  0022BC  502E               	movf	lcd_gotoxy@address,w,c
  5818  0022BE  0980               	iorlw	128
  5819  0022C0  6E2A               	movwf	lcd_send_byte@n,c
  5820  0022C2  0E00               	movlw	0
  5821  0022C4  ECFF  F010         	call	_lcd_send_byte
  5822  0022C8  0012               	return		;funcret
  5823  0022CA                     __end_of_lcd_gotoxy:
  5824                           	opt stack 0
  5825                           tblptru	equ	0xFF8
  5826                           tblptrh	equ	0xFF7
  5827                           tblptrl	equ	0xFF6
  5828                           tablat	equ	0xFF5
  5829                           prodh	equ	0xFF4
  5830                           prodl	equ	0xFF3
  5831                           intcon	equ	0xFF2
  5832                           indf0	equ	0xFEF
  5833                           postinc0	equ	0xFEE
  5834                           fsr0h	equ	0xFEA
  5835                           fsr0l	equ	0xFE9
  5836                           wreg	equ	0xFE8
  5837                           postdec1	equ	0xFE5
  5838                           fsr1l	equ	0xFE1
  5839                           indf2	equ	0xFDF
  5840                           postinc2	equ	0xFDE
  5841                           postdec2	equ	0xFDD
  5842                           fsr2h	equ	0xFDA
  5843                           fsr2l	equ	0xFD9
  5844                           status	equ	0xFD8
  5845                           
  5846 ;; *************** function _lcd_send_byte *****************
  5847 ;; Defined at:
  5848 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  address         1    wreg     unsigned char 
  5851 ;;  n               1    2[COMRAM] unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  address         1    3[COMRAM] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;		None               void
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5867 ;;Total ram usage:        2 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    1
  5870 ;; This function calls:
  5871 ;;		_Delay100TCYx
  5872 ;;		_lcd_send_nibble
  5873 ;; This function is called by:
  5874 ;;		_lcd_init
  5875 ;;		_lcd_gotoxy
  5876 ;;		_lcd_putc
  5877 ;;		_lcd_comand
  5878 ;;		_lcd_setcursor_vb
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text38
  5883  0021FE                     __ptext38:
  5884                           	opt stack 0
  5885  0021FE                     _lcd_send_byte:
  5886                           	opt stack 27
  5887                           
  5888                           ;incstack = 0
  5889                           ;lcd_send_byte@address stored from wreg
  5890  0021FE  6E2B               	movwf	lcd_send_byte@address,c
  5891                           
  5892                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  5893  002200  968A               	bcf	3978,3,c	;volatile
  5894                           
  5895                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  5896  002202  0E02               	movlw	2
  5897  002204  ECA0  F011         	call	_Delay100TCYx
  5898                           
  5899                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  5900  002208  9893               	bcf	3987,4,c	;volatile
  5901                           
  5902                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  5903  00220A  9A93               	bcf	3987,5,c	;volatile
  5904                           
  5905                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  5906  00220C  9C93               	bcf	3987,6,c	;volatile
  5907                           
  5908                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  5909  00220E  9E93               	bcf	3987,7,c	;volatile
  5910                           
  5911                           ;unmc_lcd_216.c: 101: if(address)
  5912  002210  502B               	movf	lcd_send_byte@address,w,c
  5913  002212  B4D8               	btfsc	status,2,c
  5914  002214  D002               	goto	l335
  5915                           
  5916                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  5917  002216  868A               	bsf	3978,3,c	;volatile
  5918  002218  D001               	goto	l336
  5919  00221A                     l335:
  5920                           
  5921                           ;unmc_lcd_216.c: 103: else
  5922                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  5923  00221A  968A               	bcf	3978,3,c	;volatile
  5924  00221C                     l336:
  5925                           
  5926                           ;unmc_lcd_216.c: 106: __nop();
  5927  00221C  F000               	nop	
  5928                           
  5929                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  5930  00221E  382A               	swapf	lcd_send_byte@n,w,c
  5931  002220  0B0F               	andlw	15
  5932  002222  EC4B  F00E         	call	_lcd_send_nibble
  5933                           
  5934                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  5935  002226  502A               	movf	lcd_send_byte@n,w,c
  5936  002228  0B0F               	andlw	15
  5937  00222A  EC4B  F00E         	call	_lcd_send_nibble
  5938  00222E  0012               	return		;funcret
  5939  002230                     __end_of_lcd_send_byte:
  5940                           	opt stack 0
  5941                           tblptru	equ	0xFF8
  5942                           tblptrh	equ	0xFF7
  5943                           tblptrl	equ	0xFF6
  5944                           tablat	equ	0xFF5
  5945                           prodh	equ	0xFF4
  5946                           prodl	equ	0xFF3
  5947                           intcon	equ	0xFF2
  5948                           indf0	equ	0xFEF
  5949                           postinc0	equ	0xFEE
  5950                           fsr0h	equ	0xFEA
  5951                           fsr0l	equ	0xFE9
  5952                           wreg	equ	0xFE8
  5953                           postdec1	equ	0xFE5
  5954                           fsr1l	equ	0xFE1
  5955                           indf2	equ	0xFDF
  5956                           postinc2	equ	0xFDE
  5957                           postdec2	equ	0xFDD
  5958                           fsr2h	equ	0xFDA
  5959                           fsr2l	equ	0xFD9
  5960                           status	equ	0xFD8
  5961                           
  5962 ;; *************** function _lcd_send_nibble *****************
  5963 ;; Defined at:
  5964 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  nibble          1    wreg     unsigned char 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  nibble          1    1[COMRAM] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;		None               void
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;Total ram usage:        2 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_lcd_send_byte
  5988 ;;		_lcd_init
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text39
  5993  001C96                     __ptext39:
  5994                           	opt stack 0
  5995  001C96                     _lcd_send_nibble:
  5996                           	opt stack 28
  5997                           
  5998                           ;incstack = 0
  5999                           ;lcd_send_nibble@nibble stored from wreg
  6000  001C96  6E29               	movwf	lcd_send_nibble@nibble,c
  6001                           
  6002                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  6003  001C98  A029               	btfss	lcd_send_nibble@nibble,0,c
  6004  001C9A  D003               	goto	u1110
  6005  001C9C  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6006  001C9E  2A28               	incf	??_lcd_send_nibble& (0+255),f,c
  6007  001CA0  D001               	goto	u1128
  6008  001CA2                     u1110:
  6009  001CA2  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6010  001CA4                     u1128:
  6011  001CA4  3A28               	swapf	??_lcd_send_nibble,f,c
  6012  001CA6  508A               	movf	3978,w,c	;volatile
  6013  001CA8  1828               	xorwf	??_lcd_send_nibble,w,c
  6014  001CAA  0BEF               	andlw	-17
  6015  001CAC  1828               	xorwf	??_lcd_send_nibble,w,c
  6016  001CAE  6E8A               	movwf	3978,c	;volatile
  6017                           
  6018                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  6019  001CB0  A229               	btfss	lcd_send_nibble@nibble,1,c
  6020  001CB2  D003               	goto	u1130
  6021  001CB4  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6022  001CB6  2A28               	incf	??_lcd_send_nibble& (0+255),f,c
  6023  001CB8  D001               	goto	u1148
  6024  001CBA                     u1130:
  6025  001CBA  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6026  001CBC                     u1148:
  6027  001CBC  3A28               	swapf	??_lcd_send_nibble,f,c
  6028  001CBE  4628               	rlncf	??_lcd_send_nibble,f,c
  6029  001CC0  508A               	movf	3978,w,c	;volatile
  6030  001CC2  1828               	xorwf	??_lcd_send_nibble,w,c
  6031  001CC4  0BDF               	andlw	-33
  6032  001CC6  1828               	xorwf	??_lcd_send_nibble,w,c
  6033  001CC8  6E8A               	movwf	3978,c	;volatile
  6034                           
  6035                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  6036  001CCA  A429               	btfss	lcd_send_nibble@nibble,2,c
  6037  001CCC  D003               	goto	u1150
  6038  001CCE  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6039  001CD0  2A28               	incf	??_lcd_send_nibble& (0+255),f,c
  6040  001CD2  D001               	goto	u1168
  6041  001CD4                     u1150:
  6042  001CD4  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6043  001CD6                     u1168:
  6044  001CD6  3A28               	swapf	??_lcd_send_nibble,f,c
  6045  001CD8  4628               	rlncf	??_lcd_send_nibble,f,c
  6046  001CDA  4628               	rlncf	??_lcd_send_nibble,f,c
  6047  001CDC  508A               	movf	3978,w,c	;volatile
  6048  001CDE  1828               	xorwf	??_lcd_send_nibble,w,c
  6049  001CE0  0BBF               	andlw	-65
  6050  001CE2  1828               	xorwf	??_lcd_send_nibble,w,c
  6051  001CE4  6E8A               	movwf	3978,c	;volatile
  6052                           
  6053                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  6054  001CE6  A629               	btfss	lcd_send_nibble@nibble,3,c
  6055  001CE8  D003               	goto	u1170
  6056  001CEA  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6057  001CEC  2A28               	incf	??_lcd_send_nibble& (0+255),f,c
  6058  001CEE  D001               	goto	u1188
  6059  001CF0                     u1170:
  6060  001CF0  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6061  001CF2                     u1188:
  6062  001CF2  3228               	rrcf	??_lcd_send_nibble,f,c
  6063  001CF4  3228               	rrcf	??_lcd_send_nibble,f,c
  6064  001CF6  508A               	movf	3978,w,c	;volatile
  6065  001CF8  1828               	xorwf	??_lcd_send_nibble,w,c
  6066  001CFA  0B7F               	andlw	-129
  6067  001CFC  1828               	xorwf	??_lcd_send_nibble,w,c
  6068  001CFE  6E8A               	movwf	3978,c	;volatile
  6069                           
  6070                           ;unmc_lcd_216.c: 32: __nop();
  6071  001D00  F000               	nop	
  6072                           
  6073                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  6074  001D02  848A               	bsf	3978,2,c	;volatile
  6075                           
  6076                           ;unmc_lcd_216.c: 34: __nop();__nop();
  6077  001D04  F000               	nop	
  6078  001D06  F000               	nop	
  6079                           
  6080                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  6081  001D08  948A               	bcf	3978,2,c	;volatile
  6082  001D0A  0012               	return		;funcret
  6083  001D0C                     __end_of_lcd_send_nibble:
  6084                           	opt stack 0
  6085                           tblptru	equ	0xFF8
  6086                           tblptrh	equ	0xFF7
  6087                           tblptrl	equ	0xFF6
  6088                           tablat	equ	0xFF5
  6089                           prodh	equ	0xFF4
  6090                           prodl	equ	0xFF3
  6091                           intcon	equ	0xFF2
  6092                           indf0	equ	0xFEF
  6093                           postinc0	equ	0xFEE
  6094                           fsr0h	equ	0xFEA
  6095                           fsr0l	equ	0xFE9
  6096                           wreg	equ	0xFE8
  6097                           postdec1	equ	0xFE5
  6098                           fsr1l	equ	0xFE1
  6099                           indf2	equ	0xFDF
  6100                           postinc2	equ	0xFDE
  6101                           postdec2	equ	0xFDD
  6102                           fsr2h	equ	0xFDA
  6103                           fsr2l	equ	0xFD9
  6104                           status	equ	0xFD8
  6105                           
  6106 ;; *************** function _Delay100TCYx *****************
  6107 ;; Defined at:
  6108 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  unit            1    wreg     unsigned char 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  unit            1    0[COMRAM] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;		None               void
  6115 ;; Registers used:
  6116 ;;		wreg
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6126 ;;Total ram usage:        1 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_lcd_send_byte
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text40
  6136  002340                     __ptext40:
  6137                           	opt stack 0
  6138  002340                     _Delay100TCYx:
  6139                           	opt stack 27
  6140                           
  6141                           ;incstack = 0
  6142                           ;Delay100TCYx@unit stored from wreg
  6143  002340  6E28               	movwf	Delay100TCYx@unit,c
  6144  002342  0E21               	movlw	33
  6145  002344                     u2237:
  6146  002344  2EE8               	decfsz	wreg,f,c
  6147  002346  D7FE               	goto	u2237
  6148  002348  F000               	nop	
  6149  00234A  2E28               	decfsz	Delay100TCYx@unit,f,c
  6150  00234C  D7FA               	goto	l2137
  6151  00234E  0012               	return	
  6152  002350  0012               	return		;funcret
  6153  002352                     __end_of_Delay100TCYx:
  6154                           	opt stack 0
  6155                           tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           prodh	equ	0xFF4
  6160                           prodl	equ	0xFF3
  6161                           intcon	equ	0xFF2
  6162                           indf0	equ	0xFEF
  6163                           postinc0	equ	0xFEE
  6164                           fsr0h	equ	0xFEA
  6165                           fsr0l	equ	0xFE9
  6166                           wreg	equ	0xFE8
  6167                           postdec1	equ	0xFE5
  6168                           fsr1l	equ	0xFE1
  6169                           indf2	equ	0xFDF
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function _Read_RTC *****************
  6177 ;; Defined at:
  6178 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;		None               void
  6185 ;; Registers used:
  6186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    1
  6199 ;; This function calls:
  6200 ;;		_RtccReadDate
  6201 ;;		_RtccReadTime
  6202 ;; This function is called by:
  6203 ;;		_main
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text41
  6208  001850                     __ptext41:
  6209                           	opt stack 0
  6210  001850                     _Read_RTC:
  6211                           	opt stack 29
  6212                           
  6213                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  6214                           
  6215                           ;incstack = 0
  6216  001850  0E24               	movlw	low _RtccTime
  6217  001852  6E28               	movwf	RtccReadTime@pTm,c
  6218  001854  0E00               	movlw	high _RtccTime
  6219  001856  6E29               	movwf	RtccReadTime@pTm+1,c
  6220  001858  EC86  F00E         	call	_RtccReadTime	;wreg free
  6221                           
  6222                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  6223  00185C  5025               	movf	_RtccTime+1,w,c
  6224  00185E  0B0F               	andlw	15
  6225  001860  6E5E               	movwf	_segundo_u,c
  6226                           
  6227                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  6228  001862  3825               	swapf	_RtccTime+1,w,c
  6229  001864  0B0F               	andlw	15
  6230  001866  0B0F               	andlw	15
  6231  001868  6E5D               	movwf	_segundo_d,c
  6232                           
  6233                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  6234  00186A  5026               	movf	_RtccTime+2,w,c
  6235  00186C  0B0F               	andlw	15
  6236  00186E  6E5C               	movwf	_minuto_u,c
  6237                           
  6238                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  6239  001870  3826               	swapf	_RtccTime+2,w,c
  6240  001872  0B0F               	andlw	15
  6241  001874  0B0F               	andlw	15
  6242  001876  6E5B               	movwf	_minuto_d,c
  6243                           
  6244                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  6245  001878  5027               	movf	_RtccTime+3,w,c
  6246  00187A  0B0F               	andlw	15
  6247  00187C  6E59               	movwf	_hora_u,c
  6248                           
  6249                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  6250  00187E  3827               	swapf	_RtccTime+3,w,c
  6251  001880  0B0F               	andlw	15
  6252  001882  0B0F               	andlw	15
  6253  001884  6E58               	movwf	_hora_d,c
  6254                           
  6255                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  6256  001886  0E20               	movlw	low _RtccDate
  6257  001888  6E28               	movwf	RtccReadDate@pDt,c
  6258  00188A  0E00               	movlw	high _RtccDate
  6259  00188C  6E29               	movwf	RtccReadDate@pDt+1,c
  6260  00188E  EC85  F00D         	call	_RtccReadDate	;wreg free
  6261                           
  6262                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  6263  001892  5021               	movf	_RtccDate+1,w,c
  6264  001894  0B0F               	andlw	15
  6265  001896  0100               	movlb	0	; () banked
  6266  001898  6F92               	movwf	_fecha_u& (0+255),b
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  6270  00189A  3821               	swapf	_RtccDate+1,w,c
  6271  00189C  0B0F               	andlw	15
  6272  00189E  0B0F               	andlw	15
  6273  0018A0  6E57               	movwf	_fecha_d,c
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  6277  0018A2  5022               	movf	_RtccDate+2,w,c
  6278  0018A4  0B0F               	andlw	15
  6279  0018A6  0100               	movlb	0	; () banked
  6280  0018A8  6F93               	movwf	_mes_u& (0+255),b
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  6284  0018AA  3822               	swapf	_RtccDate+2,w,c
  6285  0018AC  0B0F               	andlw	15
  6286  0018AE  0B0F               	andlw	15
  6287  0018B0  6E5A               	movwf	_mes_d,c
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  6291  0018B2  C020  F091         	movff	_RtccDate,_dia_semana
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  6295  0018B6  5023               	movf	_RtccDate+3,w,c
  6296  0018B8  0B0F               	andlw	15
  6297  0018BA  0100               	movlb	0	; () banked
  6298  0018BC  6F90               	movwf	_anio_u& (0+255),b
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  6302  0018BE  3823               	swapf	_RtccDate+3,w,c
  6303  0018C0  0B0F               	andlw	15
  6304  0018C2  0B0F               	andlw	15
  6305  0018C4  6E56               	movwf	_anio_d,c
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  6309  0018C6  505D               	movf	_segundo_d,w,c
  6310  0018C8  0D0A               	mullw	10
  6311  0018CA  505E               	movf	_segundo_u,w,c
  6312  0018CC  24F3               	addwf	prodl,w,c
  6313  0018CE  6E19               	movwf	_segundo,c
  6314  0018D0  0E00               	movlw	0
  6315  0018D2  20F4               	addwfc	prodh,w,c
  6316  0018D4  6E1A               	movwf	_segundo+1,c
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  6320  0018D6  505B               	movf	_minuto_d,w,c
  6321  0018D8  0D0A               	mullw	10
  6322  0018DA  505C               	movf	_minuto_u,w,c
  6323  0018DC  24F3               	addwf	prodl,w,c
  6324  0018DE  6E13               	movwf	_minuto,c
  6325  0018E0  0E00               	movlw	0
  6326  0018E2  20F4               	addwfc	prodh,w,c
  6327  0018E4  6E14               	movwf	_minuto+1,c
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  6331  0018E6  5058               	movf	_hora_d,w,c
  6332  0018E8  0D0A               	mullw	10
  6333  0018EA  5059               	movf	_hora_u,w,c
  6334  0018EC  24F3               	addwf	prodl,w,c
  6335  0018EE  6E52               	movwf	_hora,c
  6336  0018F0  0E00               	movlw	0
  6337  0018F2  20F4               	addwfc	prodh,w,c
  6338  0018F4  6E53               	movwf	_hora+1,c
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  6342  0018F6  5057               	movf	_fecha_d,w,c
  6343  0018F8  0D0A               	mullw	10
  6344  0018FA  0100               	movlb	0	; () banked
  6345  0018FC  5192               	movf	_fecha_u& (0+255),w,b
  6346  0018FE  24F3               	addwf	prodl,w,c
  6347  001900  6E4E               	movwf	_dia,c
  6348  001902  0100               	movlb	0	; () banked
  6349  001904  0E00               	movlw	0
  6350  001906  20F4               	addwfc	prodh,w,c
  6351  001908  6E4F               	movwf	_dia+1,c
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  6355  00190A  C091  F050         	movff	_dia_semana,_diasem
  6356  00190E  6A51               	clrf	_diasem+1,c
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  6360  001910  505A               	movf	_mes_d,w,c
  6361  001912  0D0A               	mullw	10
  6362  001914  0100               	movlb	0	; () banked
  6363  001916  5193               	movf	_mes_u& (0+255),w,b
  6364  001918  24F3               	addwf	prodl,w,c
  6365  00191A  6E54               	movwf	_mes,c
  6366  00191C  0100               	movlb	0	; () banked
  6367  00191E  0E00               	movlw	0
  6368  001920  20F4               	addwfc	prodh,w,c
  6369  001922  6E55               	movwf	_mes+1,c
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  6373  001924  5056               	movf	_anio_d,w,c
  6374  001926  0D0A               	mullw	10
  6375  001928  0100               	movlb	0	; () banked
  6376  00192A  5190               	movf	_anio_u& (0+255),w,b
  6377  00192C  24F3               	addwf	prodl,w,c
  6378  00192E  6E4C               	movwf	_anio,c
  6379  001930  0100               	movlb	0	; () banked
  6380  001932  0E00               	movlw	0
  6381  001934  20F4               	addwfc	prodh,w,c
  6382  001936  6E4D               	movwf	_anio+1,c
  6383                           
  6384                           ; BSR set to: 0
  6385  001938  0012               	return		;funcret
  6386  00193A                     __end_of_Read_RTC:
  6387                           	opt stack 0
  6388                           tblptru	equ	0xFF8
  6389                           tblptrh	equ	0xFF7
  6390                           tblptrl	equ	0xFF6
  6391                           tablat	equ	0xFF5
  6392                           prodh	equ	0xFF4
  6393                           prodl	equ	0xFF3
  6394                           intcon	equ	0xFF2
  6395                           indf0	equ	0xFEF
  6396                           postinc0	equ	0xFEE
  6397                           fsr0h	equ	0xFEA
  6398                           fsr0l	equ	0xFE9
  6399                           wreg	equ	0xFE8
  6400                           postdec1	equ	0xFE5
  6401                           fsr1l	equ	0xFE1
  6402                           indf2	equ	0xFDF
  6403                           postinc2	equ	0xFDE
  6404                           postdec2	equ	0xFDD
  6405                           fsr2h	equ	0xFDA
  6406                           fsr2l	equ	0xFD9
  6407                           status	equ	0xFD8
  6408                           
  6409 ;; *************** function _RtccReadTime *****************
  6410 ;; Defined at:
  6411 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  pTm             2    0[COMRAM] PTR struct .
  6414 ;;		 -> RtccTime(4), 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  rTD0            8   10[COMRAM] struct .
  6417 ;;  rTD1            8    2[COMRAM] struct .
  6418 ;; Return value:  Size  Location     Type
  6419 ;;		None               void
  6420 ;; Registers used:
  6421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;Total ram usage:       18 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_Read_RTC
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text42
  6441  001D0C                     __ptext42:
  6442                           	opt stack 0
  6443  001D0C                     _RtccReadTime:
  6444                           	opt stack 29
  6445  001D0C  0EFC               	movlw	252
  6446  001D0E  010F               	movlb	15	; () banked
  6447  001D10  173F               	andwf	63,f,b	;volatile
  6448                           
  6449                           ; BSR set to: 15
  6450  001D12  010F               	movlb	15	; () banked
  6451  001D14  813F               	bsf	63,0,b	;volatile
  6452                           
  6453                           ; BSR set to: 15
  6454  001D16  CF98 F036          	movff	3992,RtccReadTime@rTD0+4	;volatile
  6455                           
  6456                           ; BSR set to: 15
  6457  001D1A  CF99 F037          	movff	3993,RtccReadTime@rTD0+5	;volatile
  6458                           
  6459                           ; BSR set to: 15
  6460  001D1E  CF98 F038          	movff	3992,RtccReadTime@rTD0+6	;volatile
  6461                           
  6462                           ; BSR set to: 15
  6463  001D22  CF99 F039          	movff	3993,RtccReadTime@rTD0+7	;volatile
  6464                           
  6465                           ; BSR set to: 15
  6466  001D26  0EFC               	movlw	252
  6467  001D28  010F               	movlb	15	; () banked
  6468  001D2A  173F               	andwf	63,f,b	;volatile
  6469  001D2C  010F               	movlb	15	; () banked
  6470  001D2E  813F               	bsf	63,0,b	;volatile
  6471                           
  6472                           ; BSR set to: 15
  6473  001D30  CF98 F02E          	movff	3992,RtccReadTime@rTD1+4	;volatile
  6474                           
  6475                           ; BSR set to: 15
  6476  001D34  CF99 F02F          	movff	3993,RtccReadTime@rTD1+5	;volatile
  6477                           
  6478                           ; BSR set to: 15
  6479  001D38  CF98 F030          	movff	3992,RtccReadTime@rTD1+6	;volatile
  6480                           
  6481                           ; BSR set to: 15
  6482  001D3C  CF99 F031          	movff	3993,RtccReadTime@rTD1+7	;volatile
  6483                           
  6484                           ; BSR set to: 15
  6485  001D40  5030               	movf	RtccReadTime@rTD1+6,w,c
  6486  001D42  1838               	xorwf	RtccReadTime@rTD0+6,w,c
  6487  001D44  A4D8               	btfss	status,2,c
  6488  001D46  D7E2               	goto	l2741
  6489                           
  6490                           ; BSR set to: 15
  6491                           
  6492                           ; BSR set to: 15
  6493  001D48  EE20 F003          	lfsr	2,3
  6494  001D4C  5028               	movf	RtccReadTime@pTm,w,c
  6495  001D4E  26D9               	addwf	fsr2l,f,c
  6496  001D50  5029               	movf	RtccReadTime@pTm+1,w,c
  6497  001D52  22DA               	addwfc	fsr2h,f,c
  6498  001D54  C036  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  6499  001D58  EE20 F002          	lfsr	2,2
  6500  001D5C  5028               	movf	RtccReadTime@pTm,w,c
  6501  001D5E  26D9               	addwf	fsr2l,f,c
  6502  001D60  5029               	movf	RtccReadTime@pTm+1,w,c
  6503  001D62  22DA               	addwfc	fsr2h,f,c
  6504  001D64  C039  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  6505  001D68  EE20 F001          	lfsr	2,1
  6506  001D6C  5028               	movf	RtccReadTime@pTm,w,c
  6507  001D6E  26D9               	addwf	fsr2l,f,c
  6508  001D70  5029               	movf	RtccReadTime@pTm+1,w,c
  6509  001D72  22DA               	addwfc	fsr2h,f,c
  6510  001D74  C038  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  6511                           
  6512                           ; BSR set to: 15
  6513  001D78  0012               	return		;funcret
  6514  001D7A                     __end_of_RtccReadTime:
  6515                           	opt stack 0
  6516                           tblptru	equ	0xFF8
  6517                           tblptrh	equ	0xFF7
  6518                           tblptrl	equ	0xFF6
  6519                           tablat	equ	0xFF5
  6520                           prodh	equ	0xFF4
  6521                           prodl	equ	0xFF3
  6522                           intcon	equ	0xFF2
  6523                           indf0	equ	0xFEF
  6524                           postinc0	equ	0xFEE
  6525                           fsr0h	equ	0xFEA
  6526                           fsr0l	equ	0xFE9
  6527                           wreg	equ	0xFE8
  6528                           postdec1	equ	0xFE5
  6529                           fsr1l	equ	0xFE1
  6530                           indf2	equ	0xFDF
  6531                           postinc2	equ	0xFDE
  6532                           postdec2	equ	0xFDD
  6533                           fsr2h	equ	0xFDA
  6534                           fsr2l	equ	0xFD9
  6535                           status	equ	0xFD8
  6536                           
  6537 ;; *************** function _RtccReadDate *****************
  6538 ;; Defined at:
  6539 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  pDt             2    0[COMRAM] PTR struct .
  6542 ;;		 -> RtccDate(4), 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  rTD0            8   10[COMRAM] struct .
  6545 ;;  rTD1            8    2[COMRAM] struct .
  6546 ;; Return value:  Size  Location     Type
  6547 ;;		None               void
  6548 ;; Registers used:
  6549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6556 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6558 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6559 ;;Total ram usage:       18 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_Read_RTC
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text43
  6569  001B0A                     __ptext43:
  6570                           	opt stack 0
  6571  001B0A                     _RtccReadDate:
  6572                           	opt stack 29
  6573  001B0A  0EFC               	movlw	252
  6574  001B0C  010F               	movlb	15	; () banked
  6575  001B0E  173F               	andwf	63,f,b	;volatile
  6576  001B10  0E03               	movlw	3
  6577  001B12  010F               	movlb	15	; () banked
  6578  001B14  133F               	iorwf	63,f,b	;volatile
  6579                           
  6580                           ; BSR set to: 15
  6581  001B16  CF98 F032          	movff	3992,RtccReadDate@rTD0	;volatile
  6582                           
  6583                           ; BSR set to: 15
  6584  001B1A  CF99 F033          	movff	3993,RtccReadDate@rTD0+1	;volatile
  6585                           
  6586                           ; BSR set to: 15
  6587  001B1E  CF98 F034          	movff	3992,RtccReadDate@rTD0+2	;volatile
  6588                           
  6589                           ; BSR set to: 15
  6590  001B22  CF99 F035          	movff	3993,RtccReadDate@rTD0+3	;volatile
  6591                           
  6592                           ; BSR set to: 15
  6593  001B26  CF98 F036          	movff	3992,RtccReadDate@rTD0+4	;volatile
  6594                           
  6595                           ; BSR set to: 15
  6596  001B2A  CF99 F037          	movff	3993,RtccReadDate@rTD0+5	;volatile
  6597  001B2E  0EFC               	movlw	252
  6598  001B30  010F               	movlb	15	; () banked
  6599  001B32  173F               	andwf	63,f,b	;volatile
  6600  001B34  0E03               	movlw	3
  6601  001B36  010F               	movlb	15	; () banked
  6602  001B38  133F               	iorwf	63,f,b	;volatile
  6603                           
  6604                           ; BSR set to: 15
  6605  001B3A  CF98 F02A          	movff	3992,RtccReadDate@rTD1	;volatile
  6606                           
  6607                           ; BSR set to: 15
  6608  001B3E  CF99 F02B          	movff	3993,RtccReadDate@rTD1+1	;volatile
  6609                           
  6610                           ; BSR set to: 15
  6611  001B42  CF98 F02C          	movff	3992,RtccReadDate@rTD1+2	;volatile
  6612                           
  6613                           ; BSR set to: 15
  6614  001B46  CF99 F02D          	movff	3993,RtccReadDate@rTD1+3	;volatile
  6615                           
  6616                           ; BSR set to: 15
  6617  001B4A  CF98 F02E          	movff	3992,RtccReadDate@rTD1+4	;volatile
  6618                           
  6619                           ; BSR set to: 15
  6620  001B4E  CF99 F02F          	movff	3993,RtccReadDate@rTD1+5	;volatile
  6621  001B52  502C               	movf	RtccReadDate@rTD1+2,w,c
  6622  001B54  1834               	xorwf	RtccReadDate@rTD0+2,w,c
  6623  001B56  A4D8               	btfss	status,2,c
  6624  001B58  D7D8               	goto	l2767
  6625                           
  6626                           ; BSR set to: 15
  6627                           
  6628                           ; BSR set to: 15
  6629  001B5A  EE20 F001          	lfsr	2,1
  6630  001B5E  5028               	movf	RtccReadDate@pDt,w,c
  6631  001B60  26D9               	addwf	fsr2l,f,c
  6632  001B62  5029               	movf	RtccReadDate@pDt+1,w,c
  6633  001B64  22DA               	addwfc	fsr2h,f,c
  6634  001B66  C034  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  6635  001B6A  EE20 F002          	lfsr	2,2
  6636  001B6E  5028               	movf	RtccReadDate@pDt,w,c
  6637  001B70  26D9               	addwf	fsr2l,f,c
  6638  001B72  5029               	movf	RtccReadDate@pDt+1,w,c
  6639  001B74  22DA               	addwfc	fsr2h,f,c
  6640  001B76  C035  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  6641                           
  6642                           ; BSR set to: 15
  6643  001B7A  C028  FFD9         	movff	RtccReadDate@pDt,fsr2l
  6644  001B7E  C029  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  6645  001B82  C037  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  6646                           
  6647                           ; BSR set to: 15
  6648  001B86  EE20 F003          	lfsr	2,3
  6649  001B8A  5028               	movf	RtccReadDate@pDt,w,c
  6650  001B8C  26D9               	addwf	fsr2l,f,c
  6651  001B8E  5029               	movf	RtccReadDate@pDt+1,w,c
  6652  001B90  22DA               	addwfc	fsr2h,f,c
  6653  001B92  C032  FFDF         	movff	RtccReadDate@rTD0,indf2
  6654                           
  6655                           ; BSR set to: 15
  6656  001B96  0012               	return		;funcret
  6657  001B98                     __end_of_RtccReadDate:
  6658                           	opt stack 0
  6659                           tblptru	equ	0xFF8
  6660                           tblptrh	equ	0xFF7
  6661                           tblptrl	equ	0xFF6
  6662                           tablat	equ	0xFF5
  6663                           prodh	equ	0xFF4
  6664                           prodl	equ	0xFF3
  6665                           intcon	equ	0xFF2
  6666                           indf0	equ	0xFEF
  6667                           postinc0	equ	0xFEE
  6668                           fsr0h	equ	0xFEA
  6669                           fsr0l	equ	0xFE9
  6670                           wreg	equ	0xFE8
  6671                           postdec1	equ	0xFE5
  6672                           fsr1l	equ	0xFE1
  6673                           indf2	equ	0xFDF
  6674                           postinc2	equ	0xFDE
  6675                           postdec2	equ	0xFDD
  6676                           fsr2h	equ	0xFDA
  6677                           fsr2l	equ	0xFD9
  6678                           status	equ	0xFD8
  6679                           tblptru	equ	0xFF8
  6680                           tblptrh	equ	0xFF7
  6681                           tblptrl	equ	0xFF6
  6682                           tablat	equ	0xFF5
  6683                           prodh	equ	0xFF4
  6684                           prodl	equ	0xFF3
  6685                           intcon	equ	0xFF2
  6686                           indf0	equ	0xFEF
  6687                           postinc0	equ	0xFEE
  6688                           fsr0h	equ	0xFEA
  6689                           fsr0l	equ	0xFE9
  6690                           wreg	equ	0xFE8
  6691                           postdec1	equ	0xFE5
  6692                           fsr1l	equ	0xFE1
  6693                           indf2	equ	0xFDF
  6694                           postinc2	equ	0xFDE
  6695                           postdec2	equ	0xFDD
  6696                           fsr2h	equ	0xFDA
  6697                           fsr2l	equ	0xFD9
  6698                           status	equ	0xFD8
  6699                           
  6700                           	psect	rparam
  6701  0000                     tblptru	equ	0xFF8
  6702                           tblptrh	equ	0xFF7
  6703                           tblptrl	equ	0xFF6
  6704                           tablat	equ	0xFF5
  6705                           prodh	equ	0xFF4
  6706                           prodl	equ	0xFF3
  6707                           intcon	equ	0xFF2
  6708                           indf0	equ	0xFEF
  6709                           postinc0	equ	0xFEE
  6710                           fsr0h	equ	0xFEA
  6711                           fsr0l	equ	0xFE9
  6712                           wreg	equ	0xFE8
  6713                           postdec1	equ	0xFE5
  6714                           fsr1l	equ	0xFE1
  6715                           indf2	equ	0xFDF
  6716                           postinc2	equ	0xFDE
  6717                           postdec2	equ	0xFDD
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    14
    Data        10
    BSS         87
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      95
    BANK0           160      0      52
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    pin_input	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_36(CODE[5]), STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[5]), STR_32(CODE[8]), 
		 -> STR_31(CODE[7]), STR_30(CODE[6]), STR_29(CODE[8]), STR_28(CODE[4]), 
		 -> STR_27(CODE[5]), STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[8]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[7]), STR_8(CODE[4]), 
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[16]), STR_4(CODE[4]), 
		 -> buffer1(BANK0[20]), 

    pin	PTR unsigned char  size(2) Largest target is 5
		 -> NULL(NULL[0]), STR_1(CODE[5]), 

    lcd_write@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_33(CODE[5]), STR_32(CODE[8]), STR_31(CODE[7]), STR_30(CODE[6]), 
		 -> STR_29(CODE[8]), STR_28(CODE[4]), STR_27(CODE[5]), STR_26(CODE[6]), 
		 -> STR_25(CODE[6]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[8]), 
		 -> STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[7]), STR_8(CODE[4]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[16]), STR_4(CODE[4]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _button_asterisk->_lcd_putrs
    _activity_home->_lcd_write
    _activity_menu->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_clock->_lcd_write
    _activity_submenu_alarm->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_action_menu_selector
    _button_A->_action_submenu_selector
    _activity_pin->_lcd_write
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _action_submenu_selector->_lcd_write
    _action_menu_selector->_lcd_write
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  140337
                           _Read_RTC
                      _activity_home
                 _home_clock_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  114822
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    3898
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   21111
                _pin_input_validator
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  0     0      0   21111
                      _activity_menu
                       _activity_pin
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0    1854
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0    9790
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _activity_home                                        0     0      0    9790
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0    9790
                      _activity_menu
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0    9790
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0   39160
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
             _activity_submenu_alarm
             _activity_submenu_clock
               _activity_submenu_pin
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_pin                                 0     0      0    9790
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_clock                               0     0      0    9790
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_alarm                               0     0      0    9790
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_activation                          0     0      0    9790
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   29219
                                             18 COMRAM     2     2      0
               _action_menu_selector
            _action_submenu_selector
                       _activity_pin
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   11321
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _action_submenu_selector                              2     2      0    8949
                                             16 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _action_menu_selector                                 2     2      0    8949
                                             16 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   10993
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2044
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6    8949
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1854
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1553
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1     885
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _keyboard_control
     _button_A
       _action_menu_selector
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _action_submenu_selector
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_B
       _activity_submenu_activation
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_alarm
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_clock
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_pin
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_C
       _activity_menu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_asterisk
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _button_hash
       _pin_input_validator
         _activity_menu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      34       5       32.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      93       6        0.0%
DATA                 0      0      93       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 13 19:25:21 2016

              ??_action_menu_selector 0038                                     _a 0001  
                                   _b 0005                                     _c 0007  
                                   _i 0009                                     _j 000B  
                                   _k 000D                        ?_lcd_send_byte 002A  
                        ___awdiv@sign 002D                   ___wmul@multiplicand 002A  
                         lcd_comand@d 002C                          __CFG_CP0$OFF 000000  
                     lcd_write@column 0032                                   l302 1482  
                                 l303 147E                                   l250 1380  
                                 l307 1490                                   l251 137C  
                                 l414 116A                                   l270 13E2  
                                 l262 13BE                                   l254 1392  
                                 l246 136E                                   l335 221A  
                                 l271 13DE                                   l263 13BA  
                                 l255 138E                                   l247 136A  
                                 l336 221C                                   l290 1444  
                                 l282 1420                                   l274 13F4  
                                 l266 13D0                                   l258 13A4  
                                 l291 1440                                   l283 141C  
                                 l275 13F0                                   l267 13CC  
                                 l259 13A0                                   l294 145E  
                                 l286 1432                                   l278 140E  
                                 l295 145A                                   l287 142E  
                                 l279 140A                                   l298 1470  
                                 l299 146C                                   _dia 004E  
                                 _key 001F                                   _mes 0054  
                                 _pin 0015                       lcd_write@string 0036  
                                 wreg 000FE8                       RtccReadDate@pDt 0028  
                         lcd_gotoxy@x 002D                           lcd_gotoxy@y 002C  
                   ??_button_asterisk 0032                                  l2201 1BBE  
                                l1058 1FBC                                  l2211 1BD6  
                                l3003 1498                                  l1068 20AE  
                                l2205 1BC6                                  l2311 20A2  
                                l2303 207A                                  l2137 2342  
                                l2305 2084                                  l1193 2330  
                                l2401 16AE                                  l3009 228C  
                                l2163 22B2                                  l2171 20BC  
                                l2307 208C                                  l2219 1BEA  
                                l2323 1782                                  l2165 22B8  
                                l2173 20C8                                  l2181 20EC  
                                l2333 17C0                                  l2175 20D4  
                                l2503 10E4                                  l2407 16CA  
                                l2177 20E0                                  l2185 1FC8  
                                l2521 1148                                  l2513 111E  
                                l2329 17AC                                  l2283 1F80  
                                l2267 22E2                                  l2507 1108  
                                l2443 172C                                  l2371 1838  
                                l2339 17DC                                  l2189 1FF2  
                                l2285 1F8A                                  l2533 11C4  
                                l2509 1112                                  l2461 0FCA  
                                l2453 0FA2                                  l2295 1FB0  
                                l2287 1F92                                  l2527 1170  
                                l2519 1140                                  l2471 1008  
                                l2535 11D0                                  l2447 1738  
                                l2439 1720                                  l2391 1660  
                                l2375 1844                                  l2367 182C  
                                l2537 11EC                                  l2465 0FD4  
                                l2561 1292                                  l2801 218A  
                                l2491 10B0                                  l2483 1072  
                                l2467 0FEA                                  l2459 0FBC  
                                l2555 1248                                  l2803 2190  
                                l2741 1D0C                                  l2485 1094  
                                l2549 11FE                                  l2805 2196  
                                l2821 202C                                  l2397 169A  
                                l2661 1A0A                                  l2495 10BC  
                                l2479 106C                                  l2567 12DC  
                                l2575 1326                                  l2583 193C  
                                l2823 2032                                  l2671 1A32  
                                l2655 19F8                                  l2809 219C  
                                l2825 2038                                  l2499 10E0  
                                l2819 2026                                  l2667 1A20  
                                l2683 1A5C                                  l2589 197E  
                                l2597 19C0                                  l2829 203E  
                                l2853 215E                                  l2669 1A2A  
                                l2767 1B0A                                  l2687 1A6C  
                                l2679 1A50                                  STR_1 0F6E  
                                STR_2 0F1F                                  STR_3 0F2E  
                                STR_4 0F82                                  STR_5 0F0F  
                                STR_6 0F4D                                  STR_7 0F62  
                                STR_8 0F86                                  STR_9 0F55  
                                u1110 1CA2                                  u1130 1CBA  
                                u1210 1FE8                                  u1220 2012  
                                u1150 1CD4                                  u1128 1CA4  
                                u1217 1FDE                                  u1170 1CF0  
                                u1227 2008                                  u1148 1CBC  
                                u1168 1CD6                                  u2217 149E  
                                u2227 2332                                  u1188 1CF2  
                                u2237 2344                      ?_lcd_send_nibble 0028  
                                _anio 004C                                  _flag 02F8  
                                _main 2282                                  _hora 0052  
                                fsr0h 000FEA                                  indf0 000FEF  
                                fsr0l 000FE9                                  fsr2h 000FDA  
                                fsr1l 000FE1                                  indf2 000FDF  
                                fsr2l 000FD9                         __CFG_T1DIG$ON 000000  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0000                         __CFG_IESO$OFF 000000  
                    RtccReadDate@rTD0 0032                      RtccReadDate@rTD1 002A  
                __end_of_activity_pin 21FE                          ___param_bank 000010  
     __size_of_activity_submenu_alarm 0062       __size_of_activity_submenu_clock 0062  
                     RtccReadTime@pTm 0028                           _Delay1KTCYx 232E  
                       __CFG_PLLDIV$1 000000                                 ?_main 0028  
                     __end_of___awdiv 1A78                                 STR_10 0F94  
                               STR_11 0F90                                 STR_20 0F94  
                               STR_12 0F94                                 STR_21 0F90  
                               STR_13 0F90                                 STR_14 0F94  
                               STR_22 0F4D                                 STR_30 0F68  
                               STR_15 0F90                                 STR_31 0F55  
                               STR_23 0F8A                                 STR_16 0F94  
                               STR_24 0F8D                                 STR_32 0F3D  
                               STR_17 0F90                                 STR_25 0F62  
                               STR_33 0F78                                 STR_18 0F94  
                               STR_34 0F92                                 STR_26 0F5C  
                               STR_19 0F90                                 STR_35 0F92  
                               STR_27 0F73                                 STR_28 0F86  
                               STR_36 0F7D                                 STR_29 0F45  
               __size_of_Delay100TCYx 0012                       ___awdiv@divisor 002A  
                     __end_of___lwdiv 1FC6                       __end_of___lwmod 20B8  
                     ___awdiv@counter 002C                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                        ?_button_hash 0028                        __CFG_FCMEN$OFF 000000  
                     __end_of_dpowers 0F0B                                 _mes_d 005A  
                               _mes_u 0093                       __end_of_isdigit 22EC  
                               _setup 1D7A                                 _state 001B  
                      __pbitbssCOMRAM 02F8                                 tablat 000FF5  
                        lcd_putrs@ptr 0030                                 status 000FD8  
                     __end_of_sprintf 11FC                 __end_of_activity_home 225A  
               __end_of_activity_menu 1C96                          lcd_write@row 0034  
             __CFG_DSWDTOSC$INTOSCREF 000000                       __initialization 2104  
                        _Delay100TCYx 2340                          __end_of_main 22A6  
                     ??_lcd_send_byte 002B                      RtccReadTime@rTD0 0032  
                    RtccReadTime@rTD1 002A                      __end_of_Read_RTC 193A  
             _action_submenu_selector 193A                                ??_main 004C  
                       __activetblptr 000002                      __end_of_RtccWrOn 232E  
              _activity_submenu_alarm 1EA6                _activity_submenu_clock 1E44  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _EECON2 000FA7                                _ANCON0 000F48  
                              _ANCON1 000F49                      ___awdiv@dividend 0028  
                              ?_setup 0028                        __CFG_WDTEN$OFF 000000  
        __size_of_pin_input_validator 000E                      RtccWriteDate@pDt 0028  
                              _RTCCFG 000F3F                        __CFG_WPCFG$OFF 000000  
                      __CFG_WPDIS$OFF 000000                        __CFG_XINST$OFF 000000  
                    __end_of_lcd_init 1C18            __end_of_home_clock_refresh 1B0A  
                    __end_of_lcd_putc 2104                                ___wmul 225A  
                           ??___awdiv 002C                        __CFG_STVREN$ON 000000  
                              _diasem 0050                                _anio_d 0056  
                              _anio_u 0090                             ??___lwdiv 002C  
                           ??___lwmod 0033                                _hora_d 0058  
                              _hora_u 0059                      __end_of_button_A 21C4  
                    __end_of_button_B 206C                      __end_of_button_C 2304  
                    __end_of_button_D 239C                                clear_0 210A  
                              clear_1 2118                      ___awdiv@quotient 002E  
                              _minuto 0013                 __end_of_RtccWriteDate 1744  
               __end_of_RtccWriteTime 1850                      RtccWriteTime@pTm 0028  
                        __pdataCOMRAM 004C                             ??_isdigit 0028  
              __size_of_button_number 0040                          __mediumconst 0000  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                             ??_sprintf 003E  
               __size_of_activity_pin 003A                            __accesstop 0060  
             __end_of__initialization 213E                    __size_of_Write_RTC 0154  
                       ___rparam_used 000001             ??_action_submenu_selector 0038  
           __size_of_keyboard_control 0156                        __pcstackCOMRAM 0028  
                       __end_of_setup 1DE2                       __CFG_DSWDTPS$G2 000000  
                     _button_asterisk 2370                       __CFG_OSC$INTOSC 000000  
                        _activity_pin 21C4                     lcd_gotoxy@address 002E  
                __size_of_button_hash 0010                    __size_of_lcd_putrs 0054  
                  __size_of_lcd_write 0018                          sprintf@width 0048  
                             ??_setup 0035                            __pbssBANK0 0060  
                           ?_Read_RTC 0028                            _dia_semana 0091  
           RtccWriteTime@tempHourWDay 0031                            __pnvCOMRAM 0056  
       __size_of_activity_submenu_pin 0062                         _button_number 2148  
                           ?_RtccWrOn 0028                        lcd_send_byte@n 002A  
                             ?___wmul 0028                         ?_RtccReadDate 0028  
                       ?_RtccReadTime 0028         __size_of_action_menu_selector 0158  
                        ?_Delay1KTCYx 0028                     __end_of_Write_RTC 15FE  
                          _lcd_comand 237E       __end_of_action_submenu_selector 19E2  
                          _lcd_gotoxy 22A6                               _RTCVALH 000F99  
                             _RTCVALL 000F98                             ?_lcd_init 0028  
                           ?_lcd_putc 0028                         _menu_selected 000F  
                       _menu_selector 0011                            ??_Read_RTC 003A  
                           ?_button_A 0028                             ?_button_B 0028  
                           ?_button_C 0028                             ?_button_D 0028  
                      ?_button_number 0028                               __Hparam 0000  
                             __Lparam 0000              __size_of_lcd_send_nibble 0076  
             __end_of_button_asterisk 237E                            ??_RtccWrOn 0028  
                      ??_RtccReadDate 002A                        ??_RtccReadTime 002A  
                             ___awdiv 19E2                     __end_of_lcd_putrs 201A  
                   __end_of_lcd_write 231C                       __size_of___wmul 0028  
                             ___lwdiv 1F6A                               ___lwmod 206C  
                        __psmallconst 0F00                           _RtccTimeVal 0078  
                             __pcinit 2104                               _fecha_d 0057  
                             _fecha_u 0092                               __ramtop 0F00  
                 _pin_input_validator 2362                               __ptext0 2282  
                             __ptext1 1D7A                               __ptext2 14AA  
                             __ptext3 19E2                               __ptext4 1744  
                             __ptext5 15FE                               __ptext6 231C  
                             __ptext7 1354                               __ptext8 2148  
                             __ptext9 2352          ?_activity_submenu_activation 0028  
                             _buffer1 007C               ?_activity_submenu_alarm 0028  
             ?_activity_submenu_clock 0028                             _T1CONbits 000FCD  
                             _dpowers 0F01                               _isdigit 22CA  
                             _segundo 0019                               _sprintf 0F98  
                          ??_lcd_init 002C                            ??_lcd_putc 002F  
                end_of_initialization 213E                  ?_pin_input_validator 0028  
                lcd_send_byte@address 002B                            ??_button_A 003A  
                       __Lmediumconst 0000                            ??_button_B 0038  
                          ??_button_C 0038                            ??_button_D 0038  
                    _keyboard_control 1354                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc2 000FDE                 __end_of_lcd_send_byte 2230  
      __end_of_activity_submenu_alarm 1F08        __end_of_activity_submenu_clock 1EA6  
                           _PORTAbits 000F80                             _PORTCbits 000F82  
                    __CFG_DSBOREN$OFF 000000                           ?_lcd_comand 0028  
                  _home_clock_refresh 1A78                      __CFG_CPUDIV$OSC1 000000  
                           _TRISBbits 000F93                __size_of_activity_home 002A  
              __size_of_activity_menu 007E                           ?_lcd_gotoxy 002C  
                     _LCD_INIT_STRING 0F0B                   ?_home_clock_refresh 0028  
               ??_pin_input_validator 0038                       ??_button_number 004B  
                    __CFG_IOL1WAY$OFF 000000             RtccWriteDate@tempDayMonth 0031  
                 __CFG_MSSP7B_EN$MSK7 000000                      ?_button_asterisk 0028  
                    Delay100TCYx@unit 0028                  ??_home_clock_refresh 004B  
                      __end_of___wmul 2282                         __pidataCOMRAM 238C  
           RtccWriteDate@tempHourWDay 0033                     ??_lcd_send_nibble 0028  
                __size_of_Delay1KTCYx 0012                      __CFG_DSWDTEN$OFF 000000  
                 start_initialization 2104                  __end_of_RtccReadDate 1B98  
                __end_of_RtccReadTime 1D7A                  RtccWriteTime@wasAlrm 002D  
                RtccWriteTime@wasWrEn 002E  __size_of_activity_submenu_activation 0062  
              __size_of_RtccWriteDate 0146                       RtccWriteDate@di 002A  
              __size_of_RtccWriteTime 010C                     __size_of_Read_RTC 00EA  
                       _activity_home 2230                         _activity_menu 1C18  
                 __size_of_lcd_comand 000E                   __size_of_lcd_gotoxy 0024  
                            ??___wmul 002C                     __size_of_RtccWrOn 0012  
                     RtccWriteTime@di 002A                      __CFG_LPT1OSC$OFF 000000  
        __end_of_activity_submenu_pin 1E44                           _ALRMCFGbits 000F91  
             __end_of_LCD_INIT_STRING 0F0F                         ??_button_hash 0038  
                         __pbssCOMRAM 0001                             _Write_RTC 14AA  
                        _isdigit$2107 0029          __end_of_action_menu_selector 1354  
                     Delay1KTCYx@unit 0028                     __size_of_lcd_init 0080  
                         sprintf@flag 0044                     __size_of_lcd_putc 004C  
                         sprintf@prec 0047              ?_action_submenu_selector 0028  
                           __pnvBANK0 0090                        ?_activity_home 0028  
                      ?_activity_menu 0028                     __size_of_button_A 003C  
                   __size_of_button_B 0052                     __size_of_button_C 0018  
                   __size_of_button_D 0006                      ___lwdiv@dividend 0028  
                       ?_Delay100TCYx 0028                              ?___awdiv 0028  
                            ?___lwdiv 0028                              ?___lwmod 002F  
             RtccWriteTime@tempMinSec 002F                             _lcd_putrs 1FC6  
                           _lcd_write 2304                      _submenu_selector 001D  
                       _RtccWriteDate 15FE                           __smallconst 0F00  
                       _RtccWriteTime 1744                              ?_isdigit 0028  
                __CFG_RTCOSC$T1OSCREF 000000              __end_of_keyboard_control 14AA  
                          ?_Write_RTC 0028                      ___lwdiv@quotient 002C  
                            ?_sprintf 0034                        __size_of_setup 0068  
                 __end_of_button_hash 2362                      _RtccAlrmTimeDate 0060  
                      ___wmul@product 002C                              _LATAbits 000F89  
                            _LATBbits 000F8A                             _pin_input 0017  
                            _PIE3bits 000FA3                             _segundo_d 005D  
                      ??_Delay100TCYx 0028                             _segundo_u 005E  
                    __CFG_WDTPS$32768 000000                    RtccWriteDate@wasOn 002C  
                  _Rtcc_read_TimeDate 0070                        ?_RtccWriteDate 0028  
                          ?_lcd_putrs 0030                            ?_lcd_write 0032  
                   ___wmul@multiplier 0028                        ?_RtccWriteTime 0028  
                           lcd_init@i 002C                 __size_of_RtccReadDate 008E  
                        ??_lcd_comand 002C                             lcd_putc@c 002F  
               __size_of_RtccReadTime 006E                          ??_lcd_gotoxy 002D  
                           copy_data0 2132                              _Read_RTC 1850  
                     ??_activity_home 0038                       ??_activity_menu 0038  
                _activity_submenu_pin 1DE2                       _lcd_send_nibble 1C96  
                            __Hrparam 0000                              _RtccDate 0020  
                            __Lrparam 0000                              _RtccTime 0024  
                            _RtccWrOn 231C                    __end_of_lcd_comand 238C  
                  __end_of_lcd_gotoxy 22CA                          _RtccReadDate 1B0A  
                    __size_of___awdiv 0096                          _RtccReadTime 1D0C  
                _action_menu_selector 11FC                      __size_of___lwdiv 005C  
                    __size_of___lwmod 004C                          _RtccTimeDate 0068  
                          sprintf@val 0045                           _button_hash 2352  
                       ?_activity_pin 0028                              _activity 0003  
         __end_of_pin_input_validator 2370                      __size_of_isdigit 0022  
                     ___lwdiv@divisor 002A                           ??_Write_RTC 0035  
                     ___lwdiv@counter 002E                              __ptext10 2362  
                            __ptext11 2370                              __ptext20 1F08  
                            __ptext12 2396                              __ptext21 2188  
                            __ptext13 2230                              __ptext30 22CA  
                            __ptext22 21C4                              __ptext14 22EC  
                            __ptext31 225A                              __ptext23 1B98  
                            __ptext15 1C18                              __ptext40 2340  
                            __ptext32 206C                              __ptext24 232E  
                            __ptext16 201A                              __ptext41 1850  
                            __ptext33 1F6A                              __ptext25 237E  
                            __ptext17 1DE2                              __ptext42 1D0C  
                            __ptext34 2304                              __ptext26 193A  
                            __ptext18 1E44                              __ptext43 1B0A  
                            __ptext35 1FC6                              __ptext27 11FC  
                            __ptext19 1EA6                              __ptext36 20B8  
                            __ptext28 1A78                              __ptext37 22A6  
                            __ptext29 0F98                              __ptext38 21FE  
                            __ptext39 1C96                              _lcd_init 1B98  
                            _lcd_putc 20B8                      __size_of_sprintf 0264  
              __size_of_lcd_send_byte 0032                              _button_A 2188  
                            _button_B 201A                              _button_C 22EC  
                            _button_D 2396                         __size_of_main 0024  
               __end_of_button_number 2188                 ?_activity_submenu_pin 0028  
                            _minuto_d 005B                              _minuto_u 005C  
               ?_action_menu_selector 0028                         ??_Delay1KTCYx 0028  
                     ??_RtccWriteDate 002B           __size_of_home_clock_refresh 0092  
                     ??_RtccWriteTime 002B   __end_of_activity_submenu_activation 1F6A  
         _activity_submenu_activation 1F08                           ??_lcd_putrs 0032  
                         ??_lcd_write 0038              __size_of_button_asterisk 000E  
                      ??_activity_pin 0038                           _OSCTUNEbits 000F9B  
                          _INTCONbits 000FF2                    RtccWriteTime@wasOn 002C  
                __end_of_Delay100TCYx 2352         ??_activity_submenu_activation 0038  
                            isdigit@c 002A                             sprintf@ap 0042  
             __end_of_lcd_send_nibble 1D0C                             sprintf@sp 0034  
                    ___lwmod@dividend 002F                            _OSCCONbits 000FD3  
            ??_activity_submenu_alarm 0038              ??_activity_submenu_clock 0038  
               RtccWriteDate@tempYear 002E                         _lcd_send_byte 21FE  
    __size_of_action_submenu_selector 00A8                            _RTCCFGbits 000F3F  
                            sprintf@c 004A                              sprintf@f 0036  
                     ___lwmod@divisor 0031                   __end_of_Delay1KTCYx 2340  
                     ___lwmod@counter 0033                  RtccWriteDate@wasAlrm 002D  
                RtccWriteDate@wasWrEn 0030                     ?_keyboard_control 0028  
                  ??_keyboard_control 004B                ??_activity_submenu_pin 0038  
               lcd_send_nibble@nibble 0029  
