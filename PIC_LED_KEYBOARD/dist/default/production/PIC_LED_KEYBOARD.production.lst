

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Sep 18 17:37:44 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           	psect	idataCOMRAM
    95  00E1FC                     __pidataCOMRAM:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _anio
    99  00E1FC  0010               	dw	16
   100                           
   101                           ;initializer for _dia
   102  00E1FE  0006               	dw	6
   103                           
   104                           ;initializer for _diasem
   105  00E200  0002               	dw	2
   106                           
   107                           ;initializer for _hora
   108  00E202  0012               	dw	18
   109                           
   110                           ;initializer for _mes
   111  00E204  0009               	dw	9
   112                           
   113                           	psect	mediumconst
   114  00FEEC                     __pmediumconst:
   115                           	opt stack 0
   116  00FEEC  00                 	db	0
   117  00FEED                     _dpowers:
   118                           	opt stack 0
   119  00FEED  0001               	dw	1
   120  00FEEF  000A               	dw	10
   121  00FEF1  0064               	dw	100
   122  00FEF3  03E8               	dw	1000
   123  00FEF5  2710               	dw	10000
   124  00FEF7                     __end_of_dpowers:
   125                           	opt stack 0
   126  00FEF7                     _LCD_INIT_STRING:
   127                           	opt stack 0
   128  00FEF7  28                 	db	40
   129  00FEF8  0C                 	db	12
   130  00FEF9  01                 	db	1
   131  00FEFA  06                 	db	6
   132  00FEFB                     __end_of_LCD_INIT_STRING:
   133                           	opt stack 0
   134  00FEFB                     STR_12:
   135                           
   136                           ; BSR set to: 15
   137  00FEFB  49                 	db	73	;'I'
   138  00FEFC  6E                 	db	110	;'n'
   139  00FEFD  67                 	db	103	;'g'
   140  00FEFE  72                 	db	114	;'r'
   141  00FEFF  65                 	db	101	;'e'
   142  00FF00  73                 	db	115	;'s'
   143  00FF01  65                 	db	101	;'e'
   144  00FF02  20                 	db	32
   145  00FF03  6C                 	db	108	;'l'
   146  00FF04  61                 	db	97	;'a'
   147  00FF05  20                 	db	32
   148  00FF06  66                 	db	102	;'f'
   149  00FF07  65                 	db	101	;'e'
   150  00FF08  63                 	db	99	;'c'
   151  00FF09  68                 	db	104	;'h'
   152  00FF0A  61                 	db	97	;'a'
   153  00FF0B  00                 	db	0
   154  00FF0C                     STR_48:
   155                           
   156                           ; BSR set to: 15
   157  00FF0C  49                 	db	73	;'I'
   158  00FF0D  6E                 	db	110	;'n'
   159  00FF0E  67                 	db	103	;'g'
   160  00FF0F  72                 	db	114	;'r'
   161  00FF10  65                 	db	101	;'e'
   162  00FF11  73                 	db	115	;'s'
   163  00FF12  65                 	db	101	;'e'
   164  00FF13  20                 	db	32
   165  00FF14  73                 	db	115	;'s'
   166  00FF15  75                 	db	117	;'u'
   167  00FF16  20                 	db	32
   168  00FF17  50                 	db	80	;'P'
   169  00FF18  49                 	db	73	;'I'
   170  00FF19  4E                 	db	78	;'N'
   171  00FF1A  3A                 	db	58	;':'
   172  00FF1B  00                 	db	0
   173  00FF1C                     STR_14:
   174                           
   175                           ; BSR set to: 15
   176  00FF1C  49                 	db	73	;'I'
   177  00FF1D  6E                 	db	110	;'n'
   178  00FF1E  67                 	db	103	;'g'
   179  00FF1F  72                 	db	114	;'r'
   180  00FF20  65                 	db	101	;'e'
   181  00FF21  73                 	db	115	;'s'
   182  00FF22  65                 	db	101	;'e'
   183  00FF23  20                 	db	32
   184  00FF24  6C                 	db	108	;'l'
   185  00FF25  61                 	db	97	;'a'
   186  00FF26  20                 	db	32
   187  00FF27  68                 	db	104	;'h'
   188  00FF28  6F                 	db	111	;'o'
   189  00FF29  72                 	db	114	;'r'
   190  00FF2A  61                 	db	97	;'a'
   191  00FF2B  00                 	db	0
   192  00FF2C                     STR_13:
   193                           
   194                           ; BSR set to: 15
   195  00FF2C  25                 	db	37
   196  00FF2D  30                 	db	48	;'0'
   197  00FF2E  32                 	db	50	;'2'
   198  00FF2F  75                 	db	117	;'u'
   199  00FF30  2F                 	db	47
   200  00FF31  25                 	db	37
   201  00FF32  30                 	db	48	;'0'
   202  00FF33  32                 	db	50	;'2'
   203  00FF34  75                 	db	117	;'u'
   204  00FF35  2F                 	db	47
   205  00FF36  25                 	db	37
   206  00FF37  30                 	db	48	;'0'
   207  00FF38  32                 	db	50	;'2'
   208  00FF39  75                 	db	117	;'u'
   209  00FF3A  00                 	db	0
   210  00FF3B                     STR_15:
   211                           
   212                           ; BSR set to: 15
   213  00FF3B  25                 	db	37
   214  00FF3C  30                 	db	48	;'0'
   215  00FF3D  32                 	db	50	;'2'
   216  00FF3E  75                 	db	117	;'u'
   217  00FF3F  3A                 	db	58	;':'
   218  00FF40  25                 	db	37
   219  00FF41  30                 	db	48	;'0'
   220  00FF42  32                 	db	50	;'2'
   221  00FF43  75                 	db	117	;'u'
   222  00FF44  3A                 	db	58	;':'
   223  00FF45  25                 	db	37
   224  00FF46  30                 	db	48	;'0'
   225  00FF47  32                 	db	50	;'2'
   226  00FF48  75                 	db	117	;'u'
   227  00FF49  00                 	db	0
   228  00FF4A                     STR_53:
   229                           
   230                           ; BSR set to: 15
   231  00FF4A  4E                 	db	78	;'N'
   232  00FF4B  75                 	db	117	;'u'
   233  00FF4C  65                 	db	101	;'e'
   234  00FF4D  76                 	db	118	;'v'
   235  00FF4E  6F                 	db	111	;'o'
   236  00FF4F  20                 	db	32
   237  00FF50  50                 	db	80	;'P'
   238  00FF51  49                 	db	73	;'I'
   239  00FF52  4E                 	db	78	;'N'
   240  00FF53  3A                 	db	58	;':'
   241  00FF54  00                 	db	0
   242  00FF55                     STR_50:
   243                           
   244                           ; BSR set to: 15
   245  00FF55  43                 	db	67	;'C'
   246  00FF56  61                 	db	97	;'a'
   247  00FF57  6D                 	db	109	;'m'
   248  00FF58  62                 	db	98	;'b'
   249  00FF59  69                 	db	105	;'i'
   250  00FF5A  61                 	db	97	;'a'
   251  00FF5B  72                 	db	114	;'r'
   252  00FF5C  00                 	db	0
   253  00FF5D                     STR_17:
   254                           
   255                           ; BSR set to: 15
   256  00FF5D  56                 	db	86	;'V'
   257  00FF5E  6F                 	db	111	;'o'
   258  00FF5F  6C                 	db	108	;'l'
   259  00FF60  75                 	db	117	;'u'
   260  00FF61  6D                 	db	109	;'m'
   261  00FF62  65                 	db	101	;'e'
   262  00FF63  6E                 	db	110	;'n'
   263  00FF64  00                 	db	0
   264  00FF65                     STR_2:
   265                           
   266                           ; BSR set to: 15
   267  00FF65  41                 	db	65	;'A'
   268  00FF66  63                 	db	99	;'c'
   269  00FF67  74                 	db	116	;'t'
   270  00FF68  69                 	db	105	;'i'
   271  00FF69  76                 	db	118	;'v'
   272  00FF6A  61                 	db	97	;'a'
   273  00FF6B  72                 	db	114	;'r'
   274  00FF6C  00                 	db	0
   275  00FF6D                     STR_23:
   276                           
   277                           ; BSR set to: 15
   278  00FF6D  42                 	db	66	;'B'
   279  00FF6E  65                 	db	101	;'e'
   280  00FF6F  65                 	db	101	;'e'
   281  00FF70  70                 	db	112	;'p'
   282  00FF71  20                 	db	32
   283  00FF72  31                 	db	49	;'1'
   284  00FF73  00                 	db	0
   285  00FF74                     STR_31:
   286                           
   287                           ; BSR set to: 15
   288  00FF74  54                 	db	84	;'T'
   289  00FF75  4F                 	db	79	;'O'
   290  00FF76  4E                 	db	78	;'N'
   291  00FF77  4F                 	db	79	;'O'
   292  00FF78  3A                 	db	58	;':'
   293  00FF79  31                 	db	49	;'1'
   294  00FF7A  00                 	db	0
   295  00FF7B                     STR_24:
   296                           
   297                           ; BSR set to: 15
   298  00FF7B  42                 	db	66	;'B'
   299  00FF7C  65                 	db	101	;'e'
   300  00FF7D  65                 	db	101	;'e'
   301  00FF7E  70                 	db	112	;'p'
   302  00FF7F  20                 	db	32
   303  00FF80  32                 	db	50	;'2'
   304  00FF81  00                 	db	0
   305  00FF82                     STR_32:
   306                           
   307                           ; BSR set to: 15
   308  00FF82  54                 	db	84	;'T'
   309  00FF83  4F                 	db	79	;'O'
   310  00FF84  4E                 	db	78	;'N'
   311  00FF85  4F                 	db	79	;'O'
   312  00FF86  3A                 	db	58	;':'
   313  00FF87  32                 	db	50	;'2'
   314  00FF88  00                 	db	0
   315  00FF89                     STR_29:
   316                           
   317                           ; BSR set to: 15
   318  00FF89  56                 	db	86	;'V'
   319  00FF8A  4F                 	db	79	;'O'
   320  00FF8B  4C                 	db	76	;'L'
   321  00FF8C  3A                 	db	58	;':'
   322  00FF8D  42                 	db	66	;'B'
   323  00FF8E  41                 	db	65	;'A'
   324  00FF8F  00                 	db	0
   325  00FF90                     STR_27:
   326                           
   327                           ; BSR set to: 15
   328  00FF90  41                 	db	65	;'A'
   329  00FF91  43                 	db	67	;'C'
   330  00FF92  54                 	db	84	;'T'
   331  00FF93  3A                 	db	58	;':'
   332  00FF94  53                 	db	83	;'S'
   333  00FF95  49                 	db	73	;'I'
   334  00FF96  00                 	db	0
   335  00FF97                     STR_30:
   336                           
   337                           ; BSR set to: 15
   338  00FF97  56                 	db	86	;'V'
   339  00FF98  4F                 	db	79	;'O'
   340  00FF99  4C                 	db	76	;'L'
   341  00FF9A  3A                 	db	58	;':'
   342  00FF9B  41                 	db	65	;'A'
   343  00FF9C  4C                 	db	76	;'L'
   344  00FF9D  00                 	db	0
   345  00FF9E                     STR_28:
   346                           
   347                           ; BSR set to: 15
   348  00FF9E  41                 	db	65	;'A'
   349  00FF9F  43                 	db	67	;'C'
   350  00FFA0  54                 	db	84	;'T'
   351  00FFA1  3A                 	db	58	;':'
   352  00FFA2  4E                 	db	78	;'N'
   353  00FFA3  4F                 	db	79	;'O'
   354  00FFA4  00                 	db	0
   355  00FFA5                     STR_5:
   356                           
   357                           ; BSR set to: 15
   358  00FFA5  41                 	db	65	;'A'
   359  00FFA6  6C                 	db	108	;'l'
   360  00FFA7  61                 	db	97	;'a'
   361  00FFA8  72                 	db	114	;'r'
   362  00FFA9  6D                 	db	109	;'m'
   363  00FFAA  61                 	db	97	;'a'
   364  00FFAB  00                 	db	0
   365  00FFAC                     STR_16:
   366                           
   367                           ; BSR set to: 15
   368  00FFAC  53                 	db	83	;'S'
   369  00FFAD  69                 	db	105	;'i'
   370  00FFAE  72                 	db	114	;'r'
   371  00FFAF  65                 	db	101	;'e'
   372  00FFB0  6E                 	db	110	;'n'
   373  00FFB1  61                 	db	97	;'a'
   374  00FFB2  00                 	db	0
   375  00FFB3                     STR_51:
   376                           
   377                           ; BSR set to: 15
   378  00FFB3  52                 	db	82	;'R'
   379  00FFB4  65                 	db	101	;'e'
   380  00FFB5  73                 	db	115	;'s'
   381  00FFB6  65                 	db	101	;'e'
   382  00FFB7  74                 	db	116	;'t'
   383  00FFB8  00                 	db	0
   384  00FFB9                     STR_10:
   385                           
   386                           ; BSR set to: 15
   387  00FFB9  46                 	db	70	;'F'
   388  00FFBA  65                 	db	101	;'e'
   389  00FFBB  63                 	db	99	;'c'
   390  00FFBC  68                 	db	104	;'h'
   391  00FFBD  61                 	db	97	;'a'
   392  00FFBE  00                 	db	0
   393  00FFBF                     STR_3:
   394                           
   395                           ; BSR set to: 15
   396  00FFBF  52                 	db	82	;'R'
   397  00FFC0  65                 	db	101	;'e'
   398  00FFC1  6C                 	db	108	;'l'
   399  00FFC2  6F                 	db	111	;'o'
   400  00FFC3  6A                 	db	106	;'j'
   401  00FFC4  00                 	db	0
   402  00FFC5                     STR_54:
   403                           
   404                           ; BSR set to: 15
   405  00FFC5  31                 	db	49	;'1'
   406  00FFC6  32                 	db	50	;'2'
   407  00FFC7  33                 	db	51	;'3'
   408  00FFC8  34                 	db	52	;'4'
   409  00FFC9  00                 	db	0
   410  00FFCA                     STR_11:
   411                           
   412                           ; BSR set to: 15
   413  00FFCA  48                 	db	72	;'H'
   414  00FFCB  6F                 	db	111	;'o'
   415  00FFCC  72                 	db	114	;'r'
   416  00FFCD  61                 	db	97	;'a'
   417  00FFCE  00                 	db	0
   418  00FFCF                     STR_20:
   419                           
   420                           ; BSR set to: 15
   421  00FFCF  42                 	db	66	;'B'
   422  00FFD0  61                 	db	97	;'a'
   423  00FFD1  6A                 	db	106	;'j'
   424  00FFD2  6F                 	db	111	;'o'
   425  00FFD3  00                 	db	0
   426  00FFD4                     STR_18:
   427                           
   428                           ; BSR set to: 15
   429  00FFD4  54                 	db	84	;'T'
   430  00FFD5  6F                 	db	111	;'o'
   431  00FFD6  6E                 	db	110	;'n'
   432  00FFD7  6F                 	db	111	;'o'
   433  00FFD8  00                 	db	0
   434  00FFD9                     STR_21:
   435                           
   436                           ; BSR set to: 15
   437  00FFD9  41                 	db	65	;'A'
   438  00FFDA  6C                 	db	108	;'l'
   439  00FFDB  74                 	db	116	;'t'
   440  00FFDC  6F                 	db	111	;'o'
   441  00FFDD  00                 	db	0
   442  00FFDE                     STR_33:
   443                           
   444                           ; BSR set to: 15
   445  00FFDE  25                 	db	37
   446  00FFDF  30                 	db	48	;'0'
   447  00FFE0  31                 	db	49	;'1'
   448  00FFE1  75                 	db	117	;'u'
   449  00FFE2  00                 	db	0
   450  00FFE3                     STR_1:
   451                           
   452                           ; BSR set to: 15
   453  00FFE3  58                 	db	88	;'X'
   454  00FFE4  32                 	db	50	;'2'
   455  00FFE5  38                 	db	56	;'8'
   456  00FFE6  00                 	db	0
   457  00FFE7                     STR_4:
   458                           
   459                           ; BSR set to: 15
   460  00FFE7  50                 	db	80	;'P'
   461  00FFE8  69                 	db	105	;'i'
   462  00FFE9  6E                 	db	110	;'n'
   463  00FFEA  00                 	db	0
   464  00FFEB                     STR_7:
   465                           
   466                           ; BSR set to: 15
   467  00FFEB  53                 	db	83	;'S'
   468  00FFEC  69                 	db	105	;'i'
   469  00FFED  00                 	db	0
   470  00FFEE                     STR_8:
   471                           
   472                           ; BSR set to: 15
   473  00FFEE  4E                 	db	78	;'N'
   474  00FFEF  6F                 	db	111	;'o'
   475  00FFF0  00                 	db	0
   476  00FFF1                     STR_36:
   477                           
   478                           ; BSR set to: 15
   479  00FFF1  20                 	db	32
   480  00FFF2  00                 	db	0
   481  00FFF3                     STR_35:
   482                           
   483                           ; BSR set to: 15
   484  00FFF3  3E                 	db	62	;'>'
   485  00FFF4  00                 	db	0
   486  00FFF5                     STR_34:
   487                           
   488                           ; BSR set to: 15
   489  00FFF5  2A                 	db	42
   490  00FFF6  00                 	db	0
   491  0000                     
   492                           ; #config settings
   493  00FFF7  00                 	db	0	; dummy byte at the end
   494  0000                     
   495                           	psect	nvCOMRAM
   496  000058                     __pnvCOMRAM:
   497                           	opt stack 0
   498  000058                     _anio_d:
   499                           	opt stack 0
   500  000058                     	ds	1
   501  000059                     _fecha_d:
   502                           	opt stack 0
   503  000059                     	ds	1
   504  00005A                     _hora_d:
   505                           	opt stack 0
   506  00005A                     	ds	1
   507  00005B                     _mes_d:
   508                           	opt stack 0
   509  00005B                     	ds	1
   510  00005C                     _minuto_d:
   511                           	opt stack 0
   512  00005C                     	ds	1
   513  00005D                     _segundo_d:
   514                           	opt stack 0
   515  00005D                     	ds	1
   516  00005E                     _segundo_u:
   517                           	opt stack 0
   518  00005E                     	ds	1
   519                           
   520                           	psect	nvBANK0
   521  0000A4                     __pnvBANK0:
   522                           	opt stack 0
   523  0000A4                     _anio_u:
   524                           	opt stack 0
   525  0000A4                     	ds	1
   526  0000A5                     _dia_semana:
   527                           	opt stack 0
   528  0000A5                     	ds	1
   529  0000A6                     _fecha_u:
   530                           	opt stack 0
   531  0000A6                     	ds	1
   532  0000A7                     _hora_u:
   533                           	opt stack 0
   534  0000A7                     	ds	1
   535  0000A8                     _mes_u:
   536                           	opt stack 0
   537  0000A8                     	ds	1
   538  0000A9                     _minuto_u:
   539                           	opt stack 0
   540  0000A9                     	ds	1
   541  0000                     _ANCON0	set	3912
   542  0000                     _ANCON1	set	3913
   543  0000                     _RTCCFG	set	3903
   544  0000                     _RTCCFGbits	set	3903
   545  0000                     _ADCON0	set	4034
   546  0000                     _ADCON1	set	4033
   547  0000                     _ALRMCFGbits	set	3985
   548  0000                     _EECON2	set	4007
   549  0000                     _INTCONbits	set	4082
   550  0000                     _LATAbits	set	3977
   551  0000                     _LATBbits	set	3978
   552  0000                     _OSCCONbits	set	4051
   553  0000                     _OSCTUNEbits	set	3995
   554  0000                     _PIE3bits	set	4003
   555  0000                     _PORTAbits	set	3968
   556  0000                     _PORTCbits	set	3970
   557  0000                     _RTCVALH	set	3993
   558  0000                     _RTCVALL	set	3992
   559  0000                     _T1CONbits	set	4045
   560  0000                     _TRISA	set	3986
   561  0000                     _TRISB	set	3987
   562  0000                     _TRISBbits	set	3987
   563  0000                     _TRISC	set	3988
   564                           
   565                           	psect	cinit
   566  00E76C                     __pcinit:
   567                           	opt stack 0
   568  00E76C                     start_initialization:
   569                           	opt stack 0
   570  00E76C                     __initialization:
   571                           	opt stack 0
   572                           
   573                           ; Clear objects allocated to BANK0 (68 bytes)
   574  00E76C  EE00  F060         	lfsr	0,__pbssBANK0
   575  00E770  0E44               	movlw	68
   576  00E772                     clear_0:
   577  00E772  6AEE               	clrf	postinc0,c
   578  00E774  06E8               	decf	wreg,f,c
   579  00E776  E1FD               	bnz	clear_0
   580                           
   581                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   582  00E778  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   583                           
   584                           ; Clear objects allocated to COMRAM (37 bytes)
   585  00E77A  EE00  F029         	lfsr	0,__pbssCOMRAM
   586  00E77E  0E25               	movlw	37
   587  00E780                     clear_1:
   588  00E780  6AEE               	clrf	postinc0,c
   589  00E782  06E8               	decf	wreg,f,c
   590  00E784  E1FD               	bnz	clear_1
   591                           
   592                           ; Initialize objects allocated to COMRAM (10 bytes)
   593                           ; load TBLPTR registers with __pidataCOMRAM
   594  00E786  0EFC               	movlw	low __pidataCOMRAM
   595  00E788  6EF6               	movwf	tblptrl,c
   596  00E78A  0EE1               	movlw	high __pidataCOMRAM
   597  00E78C  6EF7               	movwf	tblptrh,c
   598  00E78E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   599  00E790  6EF8               	movwf	tblptru,c
   600  00E792  EE00  F04E         	lfsr	0,__pdataCOMRAM
   601  00E796  EE10 F00A          	lfsr	1,10
   602  00E79A                     copy_data0:
   603  00E79A  0009               	tblrd		*+
   604  00E79C  CFF5 FFEE          	movff	tablat,postinc0
   605  00E7A0  50E5               	movf	postdec1,w,c
   606  00E7A2  50E1               	movf	fsr1l,w,c
   607  00E7A4  E1FA               	bnz	copy_data0
   608  00E7A6                     end_of_initialization:
   609                           	opt stack 0
   610  00E7A6                     __end_of__initialization:
   611                           	opt stack 0
   612  00E7A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   613  00E7A8  6EF8               	movwf	tblptru,c
   614  00E7AA  0100               	movlb	0
   615  00E7AC  EFC9  F071         	goto	_main	;jump to C main() function
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1l	equ	0xFE1
   624                           
   625                           	psect	bitbssCOMRAM
   626  0002F8                     __pbitbssCOMRAM:
   627                           	opt stack 0
   628  0002F8                     _flag:
   629                           	opt stack 0
   630  0002F8                     	ds	1
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           postdec1	equ	0xFE5
   638                           fsr1l	equ	0xFE1
   639                           
   640                           	psect	bssCOMRAM
   641  000029                     __pbssCOMRAM:
   642                           	opt stack 0
   643  000029                     _activity:
   644                           	opt stack 0
   645  000029                     	ds	2
   646  00002B                     _alarm_tone:
   647                           	opt stack 0
   648  00002B                     	ds	2
   649  00002D                     _alarm_volume:
   650                           	opt stack 0
   651  00002D                     	ds	2
   652  00002F                     _config_widget:
   653                           	opt stack 0
   654  00002F                     	ds	2
   655  000031                     _config_widget_time:
   656                           	opt stack 0
   657  000031                     	ds	2
   658  000033                     _cursor_horizontal_position:
   659                           	opt stack 0
   660  000033                     	ds	2
   661  000035                     _home_callback:
   662                           	opt stack 0
   663  000035                     	ds	2
   664  000037                     _home_callback_delay:
   665                           	opt stack 0
   666  000037                     	ds	2
   667  000039                     _i:
   668                           	opt stack 0
   669  000039                     	ds	2
   670  00003B                     _menu_selected:
   671                           	opt stack 0
   672  00003B                     	ds	2
   673  00003D                     _minuto:
   674                           	opt stack 0
   675  00003D                     	ds	2
   676  00003F                     _segundo:
   677                           	opt stack 0
   678  00003F                     	ds	2
   679  000041                     _state:
   680                           	opt stack 0
   681  000041                     	ds	2
   682  000043                     _submenu_selected:
   683                           	opt stack 0
   684  000043                     	ds	2
   685  000045                     _key:
   686                           	opt stack 0
   687  000045                     	ds	1
   688  000046                     _RtccDate:
   689                           	opt stack 0
   690  000046                     	ds	4
   691  00004A                     _RtccTime:
   692                           	opt stack 0
   693  00004A                     	ds	4
   694                           tblptru	equ	0xFF8
   695                           tblptrh	equ	0xFF7
   696                           tblptrl	equ	0xFF6
   697                           tablat	equ	0xFF5
   698                           postinc0	equ	0xFEE
   699                           wreg	equ	0xFE8
   700                           postdec1	equ	0xFE5
   701                           fsr1l	equ	0xFE1
   702                           
   703                           	psect	dataCOMRAM
   704  00004E                     __pdataCOMRAM:
   705                           	opt stack 0
   706  00004E                     _anio:
   707                           	opt stack 0
   708  00004E                     	ds	2
   709  000050                     _dia:
   710                           	opt stack 0
   711  000050                     	ds	2
   712  000052                     _diasem:
   713                           	opt stack 0
   714  000052                     	ds	2
   715  000054                     _hora:
   716                           	opt stack 0
   717  000054                     	ds	2
   718  000056                     _mes:
   719                           	opt stack 0
   720  000056                     	ds	2
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           postdec1	equ	0xFE5
   728                           fsr1l	equ	0xFE1
   729                           
   730                           	psect	bssBANK0
   731  000060                     __pbssBANK0:
   732                           	opt stack 0
   733  000060                     _RtccAlrmTimeDate:
   734                           	opt stack 0
   735  000060                     	ds	8
   736  000068                     _RtccTimeDate:
   737                           	opt stack 0
   738  000068                     	ds	8
   739  000070                     _Rtcc_read_TimeDate:
   740                           	opt stack 0
   741  000070                     	ds	8
   742  000078                     _RtccTimeVal:
   743                           	opt stack 0
   744  000078                     	ds	4
   745  00007C                     _a:
   746                           	opt stack 0
   747  00007C                     	ds	2
   748  00007E                     _b:
   749                           	opt stack 0
   750  00007E                     	ds	2
   751  000080                     _c:
   752                           	opt stack 0
   753  000080                     	ds	2
   754  000082                     _j:
   755                           	opt stack 0
   756  000082                     	ds	2
   757  000084                     _k:
   758                           	opt stack 0
   759  000084                     	ds	2
   760  000086                     _buffer1:
   761                           	opt stack 0
   762  000086                     	ds	20
   763  00009A                     _pin:
   764                           	opt stack 0
   765  00009A                     	ds	5
   766  00009F                     _pin_input:
   767                           	opt stack 0
   768  00009F                     	ds	5
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           
   778                           	psect	cstackCOMRAM
   779  000001                     __pcstackCOMRAM:
   780                           	opt stack 0
   781  000001                     ??_isdigit:
   782  000001                     ??_lcd_send_nibble:
   783  000001                     ?_strcmp:
   784                           	opt stack 0
   785  000001                     ?___wmul:
   786                           	opt stack 0
   787  000001                     ?___awdiv:
   788                           	opt stack 0
   789  000001                     ?___lwdiv:
   790                           	opt stack 0
   791  000001                     Delay100TCYx@unit:
   792                           	opt stack 0
   793  000001                     Delay1KTCYx@unit:
   794                           	opt stack 0
   795  000001                     RtccReadDate@pDt:
   796                           	opt stack 0
   797  000001                     RtccReadTime@pTm:
   798                           	opt stack 0
   799  000001                     RtccWriteDate@pDt:
   800                           	opt stack 0
   801  000001                     RtccWriteTime@pTm:
   802                           	opt stack 0
   803  000001                     ___wmul@multiplier:
   804                           	opt stack 0
   805  000001                     ___awdiv@dividend:
   806                           	opt stack 0
   807  000001                     ___lwdiv@dividend:
   808                           	opt stack 0
   809  000001                     strcat@to:
   810                           	opt stack 0
   811  000001                     strcmp@s1:
   812                           	opt stack 0
   813  000001                     strcpy@to:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x0
   817  000001                     	ds	1
   818  000002                     lcd_send_nibble@nibble:
   819                           	opt stack 0
   820  000002                     _isdigit$2259:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x1
   824  000002                     	ds	1
   825  000003                     lcd_send_byte@n:
   826                           	opt stack 0
   827  000003                     RtccWriteDate@di:
   828                           	opt stack 0
   829  000003                     RtccWriteTime@di:
   830                           	opt stack 0
   831  000003                     isdigit@c:
   832                           	opt stack 0
   833  000003                     ___wmul@multiplicand:
   834                           	opt stack 0
   835  000003                     ___awdiv@divisor:
   836                           	opt stack 0
   837  000003                     ___lwdiv@divisor:
   838                           	opt stack 0
   839  000003                     strcat@from:
   840                           	opt stack 0
   841  000003                     strcmp@s2:
   842                           	opt stack 0
   843  000003                     strcpy@from:
   844                           	opt stack 0
   845  000003                     RtccReadDate@rTD1:
   846                           	opt stack 0
   847  000003                     RtccReadTime@rTD1:
   848                           	opt stack 0
   849                           
   850                           ; 8 bytes @ 0x2
   851  000003                     	ds	1
   852  000004                     lcd_send_byte@address:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x3
   856  000004                     	ds	1
   857  000005                     ??_strcmp:
   858  000005                     lcd_init@i:
   859                           	opt stack 0
   860  000005                     lcd_gotoxy@y:
   861                           	opt stack 0
   862  000005                     lcd_comand@d:
   863                           	opt stack 0
   864  000005                     RtccWriteDate@wasOn:
   865                           	opt stack 0
   866  000005                     RtccWriteTime@wasOn:
   867                           	opt stack 0
   868  000005                     ___awdiv@counter:
   869                           	opt stack 0
   870  000005                     ___wmul@product:
   871                           	opt stack 0
   872  000005                     ___lwdiv@quotient:
   873                           	opt stack 0
   874  000005                     strcat@cp:
   875                           	opt stack 0
   876  000005                     strcpy@cp:
   877                           	opt stack 0
   878                           
   879                           ; 2 bytes @ 0x4
   880  000005                     	ds	1
   881  000006                     lcd_gotoxy@x:
   882                           	opt stack 0
   883  000006                     RtccWriteDate@wasAlrm:
   884                           	opt stack 0
   885  000006                     RtccWriteTime@wasAlrm:
   886                           	opt stack 0
   887  000006                     ___awdiv@sign:
   888                           	opt stack 0
   889  000006                     strcmp@r:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0x5
   893  000006                     	ds	1
   894  000007                     lcd_gotoxy@address:
   895                           	opt stack 0
   896  000007                     RtccWriteTime@wasWrEn:
   897                           	opt stack 0
   898  000007                     ___lwdiv@counter:
   899                           	opt stack 0
   900  000007                     RtccWriteDate@tempYear:
   901                           	opt stack 0
   902  000007                     ___awdiv@quotient:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x6
   906  000007                     	ds	1
   907  000008                     ??_cursor_displacement:
   908  000008                     ?___lwmod:
   909                           	opt stack 0
   910  000008                     lcd_putc@c:
   911                           	opt stack 0
   912  000008                     RtccWriteTime@tempMinSec:
   913                           	opt stack 0
   914  000008                     ___lwmod@dividend:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x7
   918  000008                     	ds	1
   919  000009                     RtccWriteDate@wasWrEn:
   920                           	opt stack 0
   921  000009                     lcd_putrs@ptr:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x8
   925  000009                     	ds	1
   926  00000A                     RtccWriteDate@tempDayMonth:
   927                           	opt stack 0
   928  00000A                     RtccWriteTime@tempHourWDay:
   929                           	opt stack 0
   930  00000A                     ___lwmod@divisor:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x9
   934  00000A                     	ds	1
   935  00000B                     lcd_write@column:
   936                           	opt stack 0
   937  00000B                     RtccReadDate@rTD0:
   938                           	opt stack 0
   939  00000B                     RtccReadTime@rTD0:
   940                           	opt stack 0
   941                           
   942                           ; 8 bytes @ 0xA
   943  00000B                     	ds	1
   944  00000C                     ___lwmod@counter:
   945                           	opt stack 0
   946  00000C                     RtccWriteDate@tempHourWDay:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0xB
   950  00000C                     	ds	1
   951  00000D                     ?_sprintf:
   952                           	opt stack 0
   953  00000D                     lcd_write@row:
   954                           	opt stack 0
   955  00000D                     sprintf@sp:
   956                           	opt stack 0
   957                           
   958                           ; 2 bytes @ 0xC
   959  00000D                     	ds	1
   960  00000E                     ??_date_set:
   961  00000E                     ??_time_set:
   962  00000E                     
   963                           ; 0 bytes @ 0xD
   964  00000E                     	ds	1
   965  00000F                     lcd_write@string:
   966                           	opt stack 0
   967  00000F                     sprintf@f:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0xE
   971  00000F                     	ds	2
   972  000011                     ??_menu_selector:
   973  000011                     ??_submenu_selector:
   974  000011                     ??_button_B_menu:
   975  000011                     ??_button_B_submenu_activation:
   976  000011                     ??_button_B_submenu_pin_config:
   977  000011                     ??_button_B_submenu_siren_config:
   978  000011                     ??_button_B_submenu_siren_volume:
   979  000011                     ??_button_B_submenu_siren_tone:
   980  000011                     
   981                           ; 0 bytes @ 0x10
   982  000011                     	ds	2
   983  000013                     ??_button_A:
   984                           
   985                           ; 0 bytes @ 0x12
   986  000013                     	ds	4
   987  000017                     ??_sprintf:
   988                           
   989                           ; 0 bytes @ 0x16
   990  000017                     	ds	4
   991  00001B                     sprintf@ap:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x1A
   995  00001B                     	ds	2
   996  00001D                     sprintf@flag:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x1C
  1000  00001D                     	ds	1
  1001  00001E                     sprintf@val:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x1D
  1005  00001E                     	ds	2
  1006  000020                     sprintf@prec:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x1F
  1010  000020                     	ds	1
  1011  000021                     sprintf@width:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x20
  1015  000021                     	ds	2
  1016  000023                     sprintf@c:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x22
  1020  000023                     	ds	1
  1021  000024                     ??_home_config_refresh:
  1022  000024                     ??_button_B_submenu_date_and_time_config:
  1023  000024                     
  1024                           ; 0 bytes @ 0x23
  1025  000024                     	ds	2
  1026  000026                     ??_button_B:
  1027                           
  1028                           ; 0 bytes @ 0x25
  1029  000026                     	ds	2
  1030  000028                     ??_keyboard_control:
  1031                           
  1032                           ; 0 bytes @ 0x27
  1033  000028                     	ds	1
  1034  000029                     tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           postdec1	equ	0xFE5
  1041                           fsr1l	equ	0xFE1
  1042                           
  1043                           ; 0 bytes @ 0x28
  1044 ;;
  1045 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1046 ;;
  1047 ;; *************** function _main *****************
  1048 ;; Defined at:
  1049 ;;		line 719 in file "main.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  2  460[None  ] int 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels required when called:   11
  1069 ;; This function calls:
  1070 ;;		_Read_RTC
  1071 ;;		_activity_home
  1072 ;;		_check_home_callback
  1073 ;;		_home_clock_refresh
  1074 ;;		_home_config_refresh
  1075 ;;		_keyboard_control
  1076 ;;		_setup
  1077 ;; This function is called by:
  1078 ;;		Startup code after reset
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text0
  1083  00E392                     __ptext0:
  1084                           	opt stack 0
  1085  00E392                     _main:
  1086                           	opt stack 20
  1087                           
  1088                           ;main.c: 721: setup();
  1089                           
  1090                           ; BSR set to: 15
  1091                           ;incstack = 0
  1092  00E392  EC3F  F079         	call	_setup	;wreg free
  1093                           
  1094                           ;main.c: 722: activity_home();
  1095  00E396  EC9F  F071         	call	_activity_home	;wreg free
  1096  00E39A  D000               	goto	l4313
  1097  00E39C                     l4313:
  1098                           
  1099                           ;main.c: 726: check_home_callback();
  1100  00E39C  EC57  F071         	call	_check_home_callback	;wreg free
  1101                           
  1102                           ;main.c: 727: Read_RTC();
  1103  00E3A0  EC47  F07B         	call	_Read_RTC	;wreg free
  1104                           
  1105                           ;main.c: 728: keyboard_control();
  1106  00E3A4  ECEB  F07C         	call	_keyboard_control	;wreg free
  1107                           
  1108                           ;main.c: 730: if(activity == 0){
  1109  00E3A8  5029               	movf	_activity,w,c
  1110  00E3AA  102A               	iorwf	_activity+1,w,c
  1111  00E3AC  A4D8               	btfss	status,2,c
  1112  00E3AE  D7F6               	goto	l4313
  1113                           
  1114                           ;main.c: 731: home_clock_refresh();
  1115  00E3B0  ECC8  F079         	call	_home_clock_refresh	;wreg free
  1116                           
  1117                           ;main.c: 732: home_config_refresh();
  1118  00E3B4  ECF4  F07A         	call	_home_config_refresh	;wreg free
  1119  00E3B8  D7F1               	goto	l4313
  1120                           
  1121                           ;main.c: 733: }
  1122                           ;main.c: 735: }
  1123                           ;main.c: 737: return 0;
  1124                           ;	Return value of _main is never used
  1125  00E3BA  EF00  F000         	goto	start
  1126  00E3BE                     __end_of_main:
  1127                           	opt stack 0
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1l	equ	0xFE1
  1136                           status	equ	0xFD8
  1137                           
  1138 ;; *************** function _setup *****************
  1139 ;; Defined at:
  1140 ;;		line 678 in file "main.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;		None               void
  1147 ;; Registers used:
  1148 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    3
  1161 ;; This function calls:
  1162 ;;		_Write_RTC
  1163 ;;		_lcd_comand
  1164 ;;		_lcd_init
  1165 ;;		_pin_reset
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text1
  1172  00F27E                     __ptext1:
  1173                           	opt stack 0
  1174  00F27E                     _setup:
  1175                           	opt stack 27
  1176                           
  1177                           ;main.c: 680: OSCTUNEbits.INTSRC=1;
  1178                           
  1179                           ;incstack = 0
  1180  00F27E  8E9B               	bsf	3995,7,c	;volatile
  1181                           
  1182                           ;main.c: 681: OSCTUNEbits.PLLEN=0;
  1183  00F280  9C9B               	bcf	3995,6,c	;volatile
  1184                           
  1185                           ;main.c: 682: OSCCONbits.IRCF0=1;
  1186  00F282  88D3               	bsf	4051,4,c	;volatile
  1187                           
  1188                           ;main.c: 683: OSCCONbits.IRCF1=1;
  1189  00F284  8AD3               	bsf	4051,5,c	;volatile
  1190                           
  1191                           ;main.c: 684: OSCCONbits.IRCF2=1;
  1192  00F286  8CD3               	bsf	4051,6,c	;volatile
  1193                           
  1194                           ;main.c: 685: OSCCONbits.SCS0=0;
  1195  00F288  90D3               	bcf	4051,0,c	;volatile
  1196                           
  1197                           ;main.c: 686: OSCCONbits.SCS1=0;
  1198  00F28A  92D3               	bcf	4051,1,c	;volatile
  1199                           
  1200                           ;main.c: 687: TRISA = 0b11110000;
  1201  00F28C  0EF0               	movlw	240
  1202  00F28E  6E92               	movwf	3986,c	;volatile
  1203                           
  1204                           ;main.c: 688: TRISB = 0;
  1205  00F290  0E00               	movlw	0
  1206  00F292  6E93               	movwf	3987,c	;volatile
  1207                           
  1208                           ;main.c: 689: TRISC = 0b00000111;
  1209  00F294  0E07               	movlw	7
  1210  00F296  6E94               	movwf	3988,c	;volatile
  1211                           
  1212                           ;main.c: 693: ANCON0=0b11111111;
  1213  00F298  010F               	movlb	15	; () banked
  1214  00F29A  6948               	setf	72,b	;volatile
  1215                           
  1216                           ; BSR set to: 15
  1217                           ;main.c: 695: ANCON1=0b11111111;
  1218  00F29C  010F               	movlb	15	; () banked
  1219  00F29E  6949               	setf	73,b	;volatile
  1220                           
  1221                           ;main.c: 696: ADCON0=0b00101101;
  1222  00F2A0  0E2D               	movlw	45
  1223  00F2A2  6EC2               	movwf	4034,c	;volatile
  1224                           
  1225                           ;main.c: 697: ADCON1=0b00010000;
  1226  00F2A4  0E10               	movlw	16
  1227  00F2A6  6EC1               	movwf	4033,c	;volatile
  1228                           
  1229                           ; BSR set to: 15
  1230                           ;main.c: 698: RTCCFGbits.RTCEN=1;
  1231  00F2A8  010F               	movlb	15	; () banked
  1232  00F2AA  8F3F               	bsf	63,7,b	;volatile
  1233                           
  1234                           ; BSR set to: 15
  1235                           ;main.c: 699: RTCCFGbits.RTCWREN=1;
  1236  00F2AC  010F               	movlb	15	; () banked
  1237  00F2AE  8B3F               	bsf	63,5,b	;volatile
  1238                           
  1239                           ; BSR set to: 15
  1240                           ;main.c: 700: T1CONbits.T1OSCEN=1;
  1241  00F2B0  86CD               	bsf	4045,3,c	;volatile
  1242                           
  1243                           ; BSR set to: 15
  1244                           ;main.c: 701: Write_RTC();
  1245  00F2B2  EC96  F07D         	call	_Write_RTC	;wreg free
  1246                           
  1247                           ;main.c: 702: lcd_init();
  1248  00F2B6  EC3C  F078         	call	_lcd_init	;wreg free
  1249                           
  1250                           ;main.c: 703: lcd_comand(0b00001100);
  1251  00F2BA  0E0C               	movlw	12
  1252  00F2BC  EC03  F071         	call	_lcd_comand
  1253                           
  1254                           ;main.c: 704: LATBbits.LATB1 = 1;;
  1255  00F2C0  828A               	bsf	3978,1,c	;volatile
  1256                           
  1257                           ;main.c: 705: LATBbits.LATB0 = 1;;
  1258  00F2C2  808A               	bsf	3978,0,c	;volatile
  1259                           
  1260                           ;main.c: 708: home_callback_delay = 50;
  1261  00F2C4  0E00               	movlw	0
  1262  00F2C6  6E38               	movwf	_home_callback_delay+1,c
  1263  00F2C8  0E32               	movlw	50
  1264  00F2CA  6E37               	movwf	_home_callback_delay,c
  1265                           
  1266                           ;main.c: 709: config_widget = 0;
  1267  00F2CC  0E00               	movlw	0
  1268  00F2CE  6E30               	movwf	_config_widget+1,c
  1269  00F2D0  0E00               	movlw	0
  1270  00F2D2  6E2F               	movwf	_config_widget,c
  1271                           
  1272                           ;main.c: 710: menu_selected = 0;
  1273  00F2D4  0E00               	movlw	0
  1274  00F2D6  6E3C               	movwf	_menu_selected+1,c
  1275  00F2D8  0E00               	movlw	0
  1276  00F2DA  6E3B               	movwf	_menu_selected,c
  1277                           
  1278                           ;main.c: 711: submenu_selected = 0;
  1279  00F2DC  0E00               	movlw	0
  1280  00F2DE  6E44               	movwf	_submenu_selected+1,c
  1281  00F2E0  0E00               	movlw	0
  1282  00F2E2  6E43               	movwf	_submenu_selected,c
  1283                           
  1284                           ;main.c: 712: cursor_horizontal_position = 1;
  1285  00F2E4  0E00               	movlw	0
  1286  00F2E6  6E34               	movwf	_cursor_horizontal_position+1,c
  1287  00F2E8  0E01               	movlw	1
  1288  00F2EA  6E33               	movwf	_cursor_horizontal_position,c
  1289                           
  1290                           ;main.c: 713: alarm_volume = 0;
  1291  00F2EC  0E00               	movlw	0
  1292  00F2EE  6E2E               	movwf	_alarm_volume+1,c
  1293  00F2F0  0E00               	movlw	0
  1294  00F2F2  6E2D               	movwf	_alarm_volume,c
  1295                           
  1296                           ;main.c: 714: alarm_tone = 0;
  1297  00F2F4  0E00               	movlw	0
  1298  00F2F6  6E2C               	movwf	_alarm_tone+1,c
  1299  00F2F8  0E00               	movlw	0
  1300  00F2FA  6E2B               	movwf	_alarm_tone,c
  1301                           
  1302                           ;main.c: 715: pin_reset();
  1303  00F2FC  EC25  F071         	call	_pin_reset	;wreg free
  1304  00F300  0012               	return		;funcret
  1305  00F302                     __end_of_setup:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           postdec1	equ	0xFE5
  1314                           fsr1l	equ	0xFE1
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _keyboard_control *****************
  1318 ;; Defined at:
  1319 ;;		line 640 in file "main.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;		None               void
  1326 ;; Registers used:
  1327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1337 ;;Total ram usage:        1 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:   10
  1340 ;; This function calls:
  1341 ;;		_button_A
  1342 ;;		_button_B
  1343 ;;		_button_C
  1344 ;;		_button_D
  1345 ;;		_button_asterisk
  1346 ;;		_button_hash
  1347 ;;		_button_number
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text2
  1354  00F9D6                     __ptext2:
  1355                           	opt stack 0
  1356  00F9D6                     _keyboard_control:
  1357                           	opt stack 20
  1358                           
  1359                           ;main.c: 642: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1360                           
  1361                           ;incstack = 0
  1362  00F9D6  8089               	bsf	3977,0,c	;volatile
  1363  00F9D8  9289               	bcf	3977,1,c	;volatile
  1364  00F9DA  9489               	bcf	3977,2,c	;volatile
  1365  00F9DC  9689               	bcf	3977,3,c	;volatile
  1366                           
  1367                           ;main.c: 643: {
  1368                           ;main.c: 644: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  1369  00F9DE  AA80               	btfss	3968,5,c	;volatile
  1370  00F9E0  D007               	goto	l391
  1371  00F9E2  0E01               	movlw	1
  1372  00F9E4  6E45               	movwf	_key,c
  1373  00F9E6  ECFE  F077         	call	_button_number	;wreg free
  1374  00F9EA  D000               	goto	l392
  1375  00F9EC                     l392:
  1376  00F9EC  BA80               	btfsc	3968,5,c	;volatile
  1377  00F9EE  D7FE               	goto	l392
  1378  00F9F0                     l391:
  1379                           
  1380                           ;main.c: 645: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  1381  00F9F0  AE80               	btfss	3968,7,c	;volatile
  1382  00F9F2  D007               	goto	l395
  1383  00F9F4  0E02               	movlw	2
  1384  00F9F6  6E45               	movwf	_key,c
  1385  00F9F8  ECFE  F077         	call	_button_number	;wreg free
  1386  00F9FC  D000               	goto	l396
  1387  00F9FE                     l396:
  1388  00F9FE  BE80               	btfsc	3968,7,c	;volatile
  1389  00FA00  D7FE               	goto	l396
  1390  00FA02                     l395:
  1391                           
  1392                           ;main.c: 646: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  1393  00FA02  AC80               	btfss	3968,6,c	;volatile
  1394  00FA04  D007               	goto	l399
  1395  00FA06  0E03               	movlw	3
  1396  00FA08  6E45               	movwf	_key,c
  1397  00FA0A  ECFE  F077         	call	_button_number	;wreg free
  1398  00FA0E  D000               	goto	l400
  1399  00FA10                     l400:
  1400  00FA10  BC80               	btfsc	3968,6,c	;volatile
  1401  00FA12  D7FE               	goto	l400
  1402  00FA14                     l399:
  1403                           
  1404                           ;main.c: 647: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  1405  00FA14  A482               	btfss	3970,2,c	;volatile
  1406  00FA16  D007               	goto	l403
  1407  00FA18  0E0B               	movlw	11
  1408  00FA1A  6E45               	movwf	_key,c
  1409  00FA1C  ECD0  F072         	call	_button_A	;wreg free
  1410  00FA20  D000               	goto	l404
  1411  00FA22                     l404:
  1412  00FA22  B482               	btfsc	3970,2,c	;volatile
  1413  00FA24  D7FE               	goto	l404
  1414  00FA26                     l403:
  1415                           
  1416                           ;main.c: 648: }
  1417                           ;main.c: 650: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1418  00FA26  9089               	bcf	3977,0,c	;volatile
  1419  00FA28  8289               	bsf	3977,1,c	;volatile
  1420  00FA2A  9489               	bcf	3977,2,c	;volatile
  1421  00FA2C  9689               	bcf	3977,3,c	;volatile
  1422                           
  1423                           ;main.c: 651: {
  1424                           ;main.c: 652: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  1425  00FA2E  AA80               	btfss	3968,5,c	;volatile
  1426  00FA30  D007               	goto	l407
  1427  00FA32  0E04               	movlw	4
  1428  00FA34  6E45               	movwf	_key,c
  1429  00FA36  ECFE  F077         	call	_button_number	;wreg free
  1430  00FA3A  D000               	goto	l408
  1431  00FA3C                     l408:
  1432  00FA3C  BA80               	btfsc	3968,5,c	;volatile
  1433  00FA3E  D7FE               	goto	l408
  1434  00FA40                     l407:
  1435                           
  1436                           ;main.c: 653: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  1437  00FA40  AE80               	btfss	3968,7,c	;volatile
  1438  00FA42  D007               	goto	l411
  1439  00FA44  0E05               	movlw	5
  1440  00FA46  6E45               	movwf	_key,c
  1441  00FA48  ECFE  F077         	call	_button_number	;wreg free
  1442  00FA4C  D000               	goto	l412
  1443  00FA4E                     l412:
  1444  00FA4E  BE80               	btfsc	3968,7,c	;volatile
  1445  00FA50  D7FE               	goto	l412
  1446  00FA52                     l411:
  1447                           
  1448                           ;main.c: 654: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  1449  00FA52  AC80               	btfss	3968,6,c	;volatile
  1450  00FA54  D007               	goto	l415
  1451  00FA56  0E06               	movlw	6
  1452  00FA58  6E45               	movwf	_key,c
  1453  00FA5A  ECFE  F077         	call	_button_number	;wreg free
  1454  00FA5E  D000               	goto	l416
  1455  00FA60                     l416:
  1456  00FA60  BC80               	btfsc	3968,6,c	;volatile
  1457  00FA62  D7FE               	goto	l416
  1458  00FA64                     l415:
  1459                           
  1460                           ;main.c: 655: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  1461  00FA64  A482               	btfss	3970,2,c	;volatile
  1462  00FA66  D007               	goto	l419
  1463  00FA68  0E0C               	movlw	12
  1464  00FA6A  6E45               	movwf	_key,c
  1465  00FA6C  EC8B  F077         	call	_button_B	;wreg free
  1466  00FA70  D000               	goto	l420
  1467  00FA72                     l420:
  1468  00FA72  B482               	btfsc	3970,2,c	;volatile
  1469  00FA74  D7FE               	goto	l420
  1470  00FA76                     l419:
  1471                           
  1472                           ;main.c: 656: }
  1473                           ;main.c: 658: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  1474  00FA76  9089               	bcf	3977,0,c	;volatile
  1475  00FA78  9289               	bcf	3977,1,c	;volatile
  1476  00FA7A  8489               	bsf	3977,2,c	;volatile
  1477  00FA7C  9689               	bcf	3977,3,c	;volatile
  1478                           
  1479                           ;main.c: 659: {
  1480                           ;main.c: 660: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  1481  00FA7E  AA80               	btfss	3968,5,c	;volatile
  1482  00FA80  D007               	goto	l423
  1483  00FA82  0E07               	movlw	7
  1484  00FA84  6E45               	movwf	_key,c
  1485  00FA86  ECFE  F077         	call	_button_number	;wreg free
  1486  00FA8A  D000               	goto	l424
  1487  00FA8C                     l424:
  1488  00FA8C  BA80               	btfsc	3968,5,c	;volatile
  1489  00FA8E  D7FE               	goto	l424
  1490  00FA90                     l423:
  1491                           
  1492                           ;main.c: 661: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  1493  00FA90  AE80               	btfss	3968,7,c	;volatile
  1494  00FA92  D007               	goto	l427
  1495  00FA94  0E08               	movlw	8
  1496  00FA96  6E45               	movwf	_key,c
  1497  00FA98  ECFE  F077         	call	_button_number	;wreg free
  1498  00FA9C  D000               	goto	l428
  1499  00FA9E                     l428:
  1500  00FA9E  BE80               	btfsc	3968,7,c	;volatile
  1501  00FAA0  D7FE               	goto	l428
  1502  00FAA2                     l427:
  1503                           
  1504                           ;main.c: 662: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  1505  00FAA2  AC80               	btfss	3968,6,c	;volatile
  1506  00FAA4  D007               	goto	l431
  1507  00FAA6  0E09               	movlw	9
  1508  00FAA8  6E45               	movwf	_key,c
  1509  00FAAA  ECFE  F077         	call	_button_number	;wreg free
  1510  00FAAE  D000               	goto	l432
  1511  00FAB0                     l432:
  1512  00FAB0  BC80               	btfsc	3968,6,c	;volatile
  1513  00FAB2  D7FE               	goto	l432
  1514  00FAB4                     l431:
  1515                           
  1516                           ;main.c: 663: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  1517  00FAB4  A482               	btfss	3970,2,c	;volatile
  1518  00FAB6  D007               	goto	l435
  1519  00FAB8  0E0D               	movlw	13
  1520  00FABA  6E45               	movwf	_key,c
  1521  00FABC  EC49  F071         	call	_button_C	;wreg free
  1522  00FAC0  D000               	goto	l436
  1523  00FAC2                     l436:
  1524  00FAC2  B482               	btfsc	3970,2,c	;volatile
  1525  00FAC4  D7FE               	goto	l436
  1526  00FAC6                     l435:
  1527                           
  1528                           ;main.c: 664: }
  1529                           ;main.c: 666: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  1530  00FAC6  9089               	bcf	3977,0,c	;volatile
  1531  00FAC8  9289               	bcf	3977,1,c	;volatile
  1532  00FACA  9489               	bcf	3977,2,c	;volatile
  1533  00FACC  8689               	bsf	3977,3,c	;volatile
  1534                           
  1535                           ;main.c: 667: {
  1536                           ;main.c: 668: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  1537  00FACE  AA80               	btfss	3968,5,c	;volatile
  1538  00FAD0  D007               	goto	l439
  1539  00FAD2  0E0E               	movlw	14
  1540  00FAD4  6E45               	movwf	_key,c
  1541  00FAD6  ECF1  F070         	call	_button_asterisk	;wreg free
  1542  00FADA  D000               	goto	l440
  1543  00FADC                     l440:
  1544  00FADC  BA80               	btfsc	3968,5,c	;volatile
  1545  00FADE  D7FE               	goto	l440
  1546  00FAE0                     l439:
  1547                           
  1548                           ;main.c: 669: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  1549  00FAE0  AE80               	btfss	3968,7,c	;volatile
  1550  00FAE2  D007               	goto	l443
  1551  00FAE4  0E00               	movlw	0
  1552  00FAE6  6E45               	movwf	_key,c
  1553  00FAE8  ECFE  F077         	call	_button_number	;wreg free
  1554  00FAEC  D000               	goto	l444
  1555  00FAEE                     l444:
  1556  00FAEE  BE80               	btfsc	3968,7,c	;volatile
  1557  00FAF0  D7FE               	goto	l444
  1558  00FAF2                     l443:
  1559                           
  1560                           ;main.c: 670: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  1561  00FAF2  AC80               	btfss	3968,6,c	;volatile
  1562  00FAF4  D007               	goto	l447
  1563  00FAF6  0E0F               	movlw	15
  1564  00FAF8  6E45               	movwf	_key,c
  1565  00FAFA  ECB1  F072         	call	_button_hash	;wreg free
  1566  00FAFE  D000               	goto	l448
  1567  00FB00                     l448:
  1568  00FB00  BC80               	btfsc	3968,6,c	;volatile
  1569  00FB02  D7FE               	goto	l448
  1570  00FB04                     l447:
  1571                           
  1572                           ;main.c: 671: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  1573  00FB04  A482               	btfss	3970,2,c	;volatile
  1574  00FB06  D009               	goto	l4265
  1575  00FB08  0E10               	movlw	16
  1576  00FB0A  6E45               	movwf	_key,c
  1577  00FB0C  ECF9  F070         	call	_button_D	;wreg free
  1578  00FB10  D000               	goto	l452
  1579  00FB12                     l452:
  1580  00FB12  A482               	btfss	3970,2,c	;volatile
  1581  00FB14  D002               	goto	l4265
  1582  00FB16  D7FD               	goto	l452
  1583  00FB18  D000               	goto	l4265
  1584  00FB1A                     l4265:
  1585                           
  1586                           ;main.c: 672: }
  1587                           ;main.c: 674: _delay((unsigned long)((98)*(8000000/4000.0)));
  1588  00FB1A  0EFF               	movlw	255
  1589  00FB1C  6E28               	movwf	??_keyboard_control& (0+255),c
  1590  00FB1E  0E8A               	movlw	138
  1591  00FB20                     u2717:
  1592  00FB20  2EE8               	decfsz	wreg,f,c
  1593  00FB22  D7FE               	goto	u2717
  1594  00FB24  2E28               	decfsz	??_keyboard_control& (0+255),f,c
  1595  00FB26  D7FC               	goto	u2717
  1596  00FB28  D000               	nop2	
  1597  00FB2A  0012               	return		;funcret
  1598  00FB2C                     __end_of_keyboard_control:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1l	equ	0xFE1
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function _button_number *****************
  1611 ;; Defined at:
  1612 ;;		line 618 in file "main.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;		None               void
  1619 ;; Registers used:
  1620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    5
  1633 ;; This function calls:
  1634 ;;		_cursor_displacement
  1635 ;;		_date_set
  1636 ;;		_lcd_putrs
  1637 ;;		_reset_home_callback
  1638 ;;		_sprintf
  1639 ;;		_strcat
  1640 ;;		_time_set
  1641 ;; This function is called by:
  1642 ;;		_keyboard_control
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text3
  1647  00EFFC                     __ptext3:
  1648                           	opt stack 0
  1649  00EFFC                     _button_number:
  1650                           	opt stack 24
  1651                           
  1652                           ;main.c: 620: reset_home_callback();
  1653                           
  1654                           ;incstack = 0
  1655  00EFFC  ECF4  F070         	call	_reset_home_callback	;wreg free
  1656                           
  1657                           ;main.c: 621: sprintf(buffer1, "%01u", key);
  1658  00F000  0E86               	movlw	low _buffer1
  1659  00F002  6E0D               	movwf	sprintf@sp,c
  1660  00F004  0E00               	movlw	high _buffer1
  1661  00F006  6E0E               	movwf	sprintf@sp+1,c
  1662  00F008  0EDE               	movlw	low STR_33
  1663  00F00A  6E0F               	movwf	sprintf@f,c
  1664  00F00C  0EFF               	movlw	high STR_33
  1665  00F00E  6E10               	movwf	sprintf@f+1,c
  1666  00F010  C045  F011         	movff	_key,?_sprintf+4
  1667  00F014  6A12               	clrf	?_sprintf+5,c
  1668  00F016  EC44  F07E         	call	_sprintf	;wreg free
  1669                           
  1670                           ;main.c: 623: if(activity == 1 || activity == 6){
  1671  00F01A  0429               	decf	_activity,w,c
  1672  00F01C  102A               	iorwf	_activity+1,w,c
  1673  00F01E  B4D8               	btfsc	status,2,c
  1674  00F020  D005               	goto	l4089
  1675  00F022  0E06               	movlw	6
  1676  00F024  1829               	xorwf	_activity,w,c
  1677  00F026  102A               	iorwf	_activity+1,w,c
  1678  00F028  A4D8               	btfss	status,2,c
  1679  00F02A  D011               	goto	l4093
  1680  00F02C                     l4089:
  1681                           
  1682                           ;main.c: 624: lcd_putrs("*");
  1683  00F02C  0EF5               	movlw	low STR_34
  1684  00F02E  6E09               	movwf	lcd_putrs@ptr,c
  1685  00F030  0EFF               	movlw	high STR_34
  1686  00F032  6E0A               	movwf	lcd_putrs@ptr+1,c
  1687  00F034  ECCA  F075         	call	_lcd_putrs	;wreg free
  1688                           
  1689                           ;main.c: 625: strcat(pin_input, buffer1);
  1690  00F038  0E9F               	movlw	low _pin_input
  1691  00F03A  6E01               	movwf	strcat@to,c
  1692  00F03C  0E00               	movlw	high _pin_input
  1693  00F03E  6E02               	movwf	strcat@to+1,c
  1694  00F040  0E86               	movlw	low _buffer1
  1695  00F042  6E03               	movwf	strcat@from,c
  1696  00F044  0E00               	movlw	high _buffer1
  1697  00F046  6E04               	movwf	strcat@from+1,c
  1698  00F048  EC43  F074         	call	_strcat	;wreg free
  1699                           
  1700                           ;main.c: 626: }
  1701  00F04C  0012               	return	
  1702  00F04E                     l4093:
  1703                           
  1704                           ;main.c: 627: else if (activity == 10){
  1705  00F04E  0E0A               	movlw	10
  1706  00F050  1829               	xorwf	_activity,w,c
  1707  00F052  102A               	iorwf	_activity+1,w,c
  1708  00F054  A4D8               	btfss	status,2,c
  1709  00F056  D005               	goto	l4099
  1710                           
  1711                           ;main.c: 628: date_set();
  1712  00F058  EC5C  F07A         	call	_date_set	;wreg free
  1713                           
  1714                           ;main.c: 629: cursor_displacement();
  1715  00F05C  EC28  F075         	call	_cursor_displacement	;wreg free
  1716                           
  1717                           ;main.c: 630: }
  1718  00F060  0012               	return	
  1719  00F062                     l4099:
  1720                           
  1721                           ;main.c: 631: else if (activity == 11){
  1722  00F062  0E0B               	movlw	11
  1723  00F064  1829               	xorwf	_activity,w,c
  1724  00F066  102A               	iorwf	_activity+1,w,c
  1725  00F068  A4D8               	btfss	status,2,c
  1726  00F06A  0012               	return	
  1727                           
  1728                           ;main.c: 632: time_set();
  1729  00F06C  ECA8  F07A         	call	_time_set	;wreg free
  1730                           
  1731                           ;main.c: 633: cursor_displacement();
  1732  00F070  EC28  F075         	call	_cursor_displacement	;wreg free
  1733  00F074  0012               	return	
  1734  00F076  0012               	return		;funcret
  1735  00F078                     __end_of_button_number:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1l	equ	0xFE1
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _time_set *****************
  1748 ;; Defined at:
  1749 ;;		line 231 in file "main.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;		None               void
  1756 ;; Registers used:
  1757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1767 ;;Total ram usage:        2 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    3
  1770 ;; This function calls:
  1771 ;;		_Write_RTC
  1772 ;; This function is called by:
  1773 ;;		_button_number
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text4
  1778  00F550                     __ptext4:
  1779                           	opt stack 0
  1780  00F550                     _time_set:
  1781                           	opt stack 25
  1782                           
  1783                           ;main.c: 233: switch(cursor_horizontal_position){
  1784                           
  1785                           ;incstack = 0
  1786  00F550  D024               	goto	l3757
  1787  00F552                     l3743:
  1788                           
  1789                           ;main.c: 236: hora = key*10;
  1790  00F552  5045               	movf	_key,w,c
  1791  00F554  0D0A               	mullw	10
  1792  00F556  CFF3 F054          	movff	prodl,_hora
  1793  00F55A  CFF4 F055          	movff	prodh,_hora+1
  1794                           
  1795                           ;main.c: 237: break;
  1796  00F55E  D039               	goto	l3759
  1797  00F560                     l3745:
  1798                           
  1799                           ;main.c: 240: hora += key;
  1800  00F560  5045               	movf	_key,w,c
  1801  00F562  2654               	addwf	_hora,f,c
  1802  00F564  0E00               	movlw	0
  1803  00F566  2255               	addwfc	_hora+1,f,c
  1804                           
  1805                           ;main.c: 241: break;
  1806  00F568  D034               	goto	l3759
  1807  00F56A                     l3747:
  1808                           
  1809                           ;main.c: 244: minuto = key*10;
  1810  00F56A  5045               	movf	_key,w,c
  1811  00F56C  0D0A               	mullw	10
  1812  00F56E  CFF3 F03D          	movff	prodl,_minuto
  1813  00F572  CFF4 F03E          	movff	prodh,_minuto+1
  1814                           
  1815                           ;main.c: 245: break;
  1816  00F576  D02D               	goto	l3759
  1817  00F578                     l3749:
  1818                           
  1819                           ;main.c: 248: minuto += key;
  1820  00F578  5045               	movf	_key,w,c
  1821  00F57A  263D               	addwf	_minuto,f,c
  1822  00F57C  0E00               	movlw	0
  1823  00F57E  223E               	addwfc	_minuto+1,f,c
  1824                           
  1825                           ;main.c: 249: break;
  1826  00F580  D028               	goto	l3759
  1827  00F582                     l3751:
  1828                           
  1829                           ;main.c: 252: segundo = key * 10;
  1830  00F582  5045               	movf	_key,w,c
  1831  00F584  0D0A               	mullw	10
  1832  00F586  CFF3 F03F          	movff	prodl,_segundo
  1833  00F58A  CFF4 F040          	movff	prodh,_segundo+1
  1834                           
  1835                           ;main.c: 253: break;
  1836  00F58E  D021               	goto	l3759
  1837  00F590                     l3753:
  1838                           
  1839                           ;main.c: 256: segundo += key;
  1840  00F590  5045               	movf	_key,w,c
  1841  00F592  263F               	addwf	_segundo,f,c
  1842  00F594  0E00               	movlw	0
  1843  00F596  2240               	addwfc	_segundo+1,f,c
  1844                           
  1845                           ;main.c: 259: }
  1846                           
  1847                           ;main.c: 257: break;
  1848  00F598  D01C               	goto	l3759
  1849  00F59A                     l3757:
  1850  00F59A  C033  F00E         	movff	_cursor_horizontal_position,??_time_set
  1851  00F59E  C034  F00F         	movff	_cursor_horizontal_position+1,??_time_set+1
  1852                           
  1853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1854                           ; Switch size 1, requested type "space"
  1855                           ; Number of cases is 1, Range of values is 0 to 0
  1856                           ; switch strategies available:
  1857                           ; Name         Instructions Cycles
  1858                           ; simple_byte            4     3 (average)
  1859                           ;	Chosen strategy is simple_byte
  1860  00F5A2  500F               	movf	??_time_set+1,w,c
  1861  00F5A4  0A00               	xorlw	0	; case 0
  1862  00F5A6  A4D8               	btfss	status,2,c
  1863  00F5A8  D014               	goto	l3759
  1864                           
  1865                           ; Switch size 1, requested type "space"
  1866                           ; Number of cases is 6, Range of values is 1 to 8
  1867                           ; switch strategies available:
  1868                           ; Name         Instructions Cycles
  1869                           ; simple_byte           19    10 (average)
  1870                           ;	Chosen strategy is simple_byte
  1871  00F5AA  500E               	movf	??_time_set,w,c
  1872  00F5AC  0A01               	xorlw	1	; case 1
  1873  00F5AE  B4D8               	btfsc	status,2,c
  1874  00F5B0  D7D0               	goto	l3743
  1875  00F5B2  0A03               	xorlw	3	; case 2
  1876  00F5B4  B4D8               	btfsc	status,2,c
  1877  00F5B6  D7D4               	goto	l3745
  1878  00F5B8  0A06               	xorlw	6	; case 4
  1879  00F5BA  B4D8               	btfsc	status,2,c
  1880  00F5BC  D7D6               	goto	l3747
  1881  00F5BE  0A01               	xorlw	1	; case 5
  1882  00F5C0  B4D8               	btfsc	status,2,c
  1883  00F5C2  D7DA               	goto	l3749
  1884  00F5C4  0A02               	xorlw	2	; case 7
  1885  00F5C6  B4D8               	btfsc	status,2,c
  1886  00F5C8  D7DC               	goto	l3751
  1887  00F5CA  0A0F               	xorlw	15	; case 8
  1888  00F5CC  B4D8               	btfsc	status,2,c
  1889  00F5CE  D7E0               	goto	l3753
  1890  00F5D0  D000               	goto	l3759
  1891  00F5D2                     l3759:
  1892                           
  1893                           ;main.c: 261: Write_RTC();
  1894  00F5D2  EC96  F07D         	call	_Write_RTC	;wreg free
  1895                           
  1896                           ;main.c: 262: _delay((unsigned long)((98)*(8000000/4000.0)));
  1897  00F5D6  0EFF               	movlw	255
  1898  00F5D8  6E0E               	movwf	??_time_set& (0+255),c
  1899  00F5DA  0E8A               	movlw	138
  1900  00F5DC                     u2727:
  1901  00F5DC  2EE8               	decfsz	wreg,f,c
  1902  00F5DE  D7FE               	goto	u2727
  1903  00F5E0  2E0E               	decfsz	??_time_set& (0+255),f,c
  1904  00F5E2  D7FC               	goto	u2727
  1905  00F5E4  D000               	nop2	
  1906  00F5E6  0012               	return		;funcret
  1907  00F5E8                     __end_of_time_set:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           prodh	equ	0xFF4
  1914                           prodl	equ	0xFF3
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1l	equ	0xFE1
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _strcat *****************
  1922 ;; Defined at:
  1923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  to              2    0[COMRAM] PTR unsigned char 
  1926 ;;		 -> pin_input(5), 
  1927 ;;  from            2    2[COMRAM] PTR const unsigned char 
  1928 ;;		 -> buffer1(20), 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  cp              2    4[COMRAM] PTR unsigned char 
  1931 ;;		 -> pin_input(5), 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  2    0[COMRAM] PTR unsigned char 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;Total ram usage:        6 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_button_number
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text5
  1955  00E886                     __ptext5:
  1956                           	opt stack 0
  1957  00E886                     _strcat:
  1958                           	opt stack 28
  1959                           
  1960                           ;incstack = 0
  1961  00E886  C001  F005         	movff	strcat@to,strcat@cp
  1962  00E88A  C002  F006         	movff	strcat@to+1,strcat@cp+1
  1963  00E88E  D003               	goto	l3923
  1964  00E890                     l3921:
  1965  00E890  4A05               	infsnz	strcat@cp,f,c
  1966  00E892  2A06               	incf	strcat@cp+1,f,c
  1967  00E894  D000               	goto	l3923
  1968  00E896                     l3923:
  1969  00E896  C005  FFD9         	movff	strcat@cp,fsr2l
  1970  00E89A  C006  FFDA         	movff	strcat@cp+1,fsr2h
  1971  00E89E  50DF               	movf	indf2,w,c
  1972  00E8A0  B4D8               	btfsc	status,2,c
  1973  00E8A2  D007               	goto	l3927
  1974  00E8A4  D7F5               	goto	l3921
  1975  00E8A6  D005               	goto	l3927
  1976  00E8A8                     l3925:
  1977  00E8A8  4A05               	infsnz	strcat@cp,f,c
  1978  00E8AA  2A06               	incf	strcat@cp+1,f,c
  1979  00E8AC  4A03               	infsnz	strcat@from,f,c
  1980  00E8AE  2A04               	incf	strcat@from+1,f,c
  1981  00E8B0  D000               	goto	l3927
  1982  00E8B2                     l3927:
  1983  00E8B2  C003  FFD9         	movff	strcat@from,fsr2l
  1984  00E8B6  C004  FFDA         	movff	strcat@from+1,fsr2h
  1985  00E8BA  C005  FFE1         	movff	strcat@cp,fsr1l
  1986  00E8BE  C006  FFE2         	movff	strcat@cp+1,fsr1h
  1987  00E8C2  CFDF FFE7          	movff	indf2,indf1
  1988  00E8C6  50E7               	movf	indf1,w,c
  1989  00E8C8  A4D8               	btfss	status,2,c
  1990  00E8CA  D7EE               	goto	l3925
  1991                           
  1992                           ;	Return value of _strcat is never used
  1993  00E8CC  0012               	return		;funcret
  1994  00E8CE                     __end_of_strcat:
  1995                           	opt stack 0
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           prodh	equ	0xFF4
  2001                           prodl	equ	0xFF3
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           indf1	equ	0xFE7
  2005                           postdec1	equ	0xFE5
  2006                           fsr1h	equ	0xFE2
  2007                           fsr1l	equ	0xFE1
  2008                           indf2	equ	0xFDF
  2009                           fsr2h	equ	0xFDA
  2010                           fsr2l	equ	0xFD9
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _date_set *****************
  2014 ;; Defined at:
  2015 ;;		line 196 in file "main.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;		None               void
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;Total ram usage:        2 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    3
  2036 ;; This function calls:
  2037 ;;		_Write_RTC
  2038 ;; This function is called by:
  2039 ;;		_button_number
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text6
  2044  00F4B8                     __ptext6:
  2045                           	opt stack 0
  2046  00F4B8                     _date_set:
  2047                           	opt stack 25
  2048                           
  2049                           ;main.c: 198: switch(cursor_horizontal_position){
  2050                           
  2051                           ;incstack = 0
  2052  00F4B8  D024               	goto	l3731
  2053  00F4BA                     l3717:
  2054                           
  2055                           ;main.c: 201: dia = key*10;
  2056  00F4BA  5045               	movf	_key,w,c
  2057  00F4BC  0D0A               	mullw	10
  2058  00F4BE  CFF3 F050          	movff	prodl,_dia
  2059  00F4C2  CFF4 F051          	movff	prodh,_dia+1
  2060                           
  2061                           ;main.c: 202: break;
  2062  00F4C6  D039               	goto	l3733
  2063  00F4C8                     l3719:
  2064                           
  2065                           ;main.c: 205: dia += key;
  2066  00F4C8  5045               	movf	_key,w,c
  2067  00F4CA  2650               	addwf	_dia,f,c
  2068  00F4CC  0E00               	movlw	0
  2069  00F4CE  2251               	addwfc	_dia+1,f,c
  2070                           
  2071                           ;main.c: 206: break;
  2072  00F4D0  D034               	goto	l3733
  2073  00F4D2                     l3721:
  2074                           
  2075                           ;main.c: 209: mes = key*10;
  2076  00F4D2  5045               	movf	_key,w,c
  2077  00F4D4  0D0A               	mullw	10
  2078  00F4D6  CFF3 F056          	movff	prodl,_mes
  2079  00F4DA  CFF4 F057          	movff	prodh,_mes+1
  2080                           
  2081                           ;main.c: 210: break;
  2082  00F4DE  D02D               	goto	l3733
  2083  00F4E0                     l3723:
  2084                           
  2085                           ;main.c: 213: mes += key;
  2086  00F4E0  5045               	movf	_key,w,c
  2087  00F4E2  2656               	addwf	_mes,f,c
  2088  00F4E4  0E00               	movlw	0
  2089  00F4E6  2257               	addwfc	_mes+1,f,c
  2090                           
  2091                           ;main.c: 214: break;
  2092  00F4E8  D028               	goto	l3733
  2093  00F4EA                     l3725:
  2094                           
  2095                           ;main.c: 217: anio = key * 10;
  2096  00F4EA  5045               	movf	_key,w,c
  2097  00F4EC  0D0A               	mullw	10
  2098  00F4EE  CFF3 F04E          	movff	prodl,_anio
  2099  00F4F2  CFF4 F04F          	movff	prodh,_anio+1
  2100                           
  2101                           ;main.c: 218: break;
  2102  00F4F6  D021               	goto	l3733
  2103  00F4F8                     l3727:
  2104                           
  2105                           ;main.c: 221: anio += key;
  2106  00F4F8  5045               	movf	_key,w,c
  2107  00F4FA  264E               	addwf	_anio,f,c
  2108  00F4FC  0E00               	movlw	0
  2109  00F4FE  224F               	addwfc	_anio+1,f,c
  2110                           
  2111                           ;main.c: 224: }
  2112                           
  2113                           ;main.c: 222: break;
  2114  00F500  D01C               	goto	l3733
  2115  00F502                     l3731:
  2116  00F502  C033  F00E         	movff	_cursor_horizontal_position,??_date_set
  2117  00F506  C034  F00F         	movff	_cursor_horizontal_position+1,??_date_set+1
  2118                           
  2119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2120                           ; Switch size 1, requested type "space"
  2121                           ; Number of cases is 1, Range of values is 0 to 0
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte            4     3 (average)
  2125                           ;	Chosen strategy is simple_byte
  2126  00F50A  500F               	movf	??_date_set+1,w,c
  2127  00F50C  0A00               	xorlw	0	; case 0
  2128  00F50E  A4D8               	btfss	status,2,c
  2129  00F510  D014               	goto	l3733
  2130                           
  2131                           ; Switch size 1, requested type "space"
  2132                           ; Number of cases is 6, Range of values is 1 to 8
  2133                           ; switch strategies available:
  2134                           ; Name         Instructions Cycles
  2135                           ; simple_byte           19    10 (average)
  2136                           ;	Chosen strategy is simple_byte
  2137  00F512  500E               	movf	??_date_set,w,c
  2138  00F514  0A01               	xorlw	1	; case 1
  2139  00F516  B4D8               	btfsc	status,2,c
  2140  00F518  D7D0               	goto	l3717
  2141  00F51A  0A03               	xorlw	3	; case 2
  2142  00F51C  B4D8               	btfsc	status,2,c
  2143  00F51E  D7D4               	goto	l3719
  2144  00F520  0A06               	xorlw	6	; case 4
  2145  00F522  B4D8               	btfsc	status,2,c
  2146  00F524  D7D6               	goto	l3721
  2147  00F526  0A01               	xorlw	1	; case 5
  2148  00F528  B4D8               	btfsc	status,2,c
  2149  00F52A  D7DA               	goto	l3723
  2150  00F52C  0A02               	xorlw	2	; case 7
  2151  00F52E  B4D8               	btfsc	status,2,c
  2152  00F530  D7DC               	goto	l3725
  2153  00F532  0A0F               	xorlw	15	; case 8
  2154  00F534  B4D8               	btfsc	status,2,c
  2155  00F536  D7E0               	goto	l3727
  2156  00F538  D000               	goto	l3733
  2157  00F53A                     l3733:
  2158                           
  2159                           ;main.c: 226: Write_RTC();
  2160  00F53A  EC96  F07D         	call	_Write_RTC	;wreg free
  2161                           
  2162                           ;main.c: 227: _delay((unsigned long)((98)*(8000000/4000.0)));
  2163  00F53E  0EFF               	movlw	255
  2164  00F540  6E0E               	movwf	??_date_set& (0+255),c
  2165  00F542  0E8A               	movlw	138
  2166  00F544                     u2737:
  2167  00F544  2EE8               	decfsz	wreg,f,c
  2168  00F546  D7FE               	goto	u2737
  2169  00F548  2E0E               	decfsz	??_date_set& (0+255),f,c
  2170  00F54A  D7FC               	goto	u2737
  2171  00F54C  D000               	nop2	
  2172  00F54E  0012               	return		;funcret
  2173  00F550                     __end_of_date_set:
  2174                           	opt stack 0
  2175                           tblptru	equ	0xFF8
  2176                           tblptrh	equ	0xFF7
  2177                           tblptrl	equ	0xFF6
  2178                           tablat	equ	0xFF5
  2179                           prodh	equ	0xFF4
  2180                           prodl	equ	0xFF3
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           indf1	equ	0xFE7
  2184                           postdec1	equ	0xFE5
  2185                           fsr1h	equ	0xFE2
  2186                           fsr1l	equ	0xFE1
  2187                           indf2	equ	0xFDF
  2188                           fsr2h	equ	0xFDA
  2189                           fsr2l	equ	0xFD9
  2190                           status	equ	0xFD8
  2191                           
  2192 ;; *************** function _Write_RTC *****************
  2193 ;; Defined at:
  2194 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;		None               void
  2201 ;; Registers used:
  2202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;Total ram usage:        0 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    2
  2215 ;; This function calls:
  2216 ;;		_RtccWrOn
  2217 ;;		_RtccWriteDate
  2218 ;;		_RtccWriteTime
  2219 ;;		___awdiv
  2220 ;; This function is called by:
  2221 ;;		_date_set
  2222 ;;		_time_set
  2223 ;;		_setup
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text7
  2228  00FB2C                     __ptext7:
  2229                           	opt stack 0
  2230  00FB2C                     _Write_RTC:
  2231                           	opt stack 27
  2232                           
  2233                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2234                           
  2235                           ;incstack = 0
  2236  00FB2C  EC1C  F071         	call	_RtccWrOn	;wreg free
  2237                           
  2238                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2239  00FB30  80A3               	bsf	4003,0,c	;volatile
  2240                           
  2241                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2242  00FB32  C03F  F001         	movff	_segundo,___awdiv@dividend
  2243  00FB36  C040  F002         	movff	_segundo+1,___awdiv@dividend+1
  2244  00FB3A  0E00               	movlw	0
  2245  00FB3C  6E04               	movwf	___awdiv@divisor+1,c
  2246  00FB3E  0E0A               	movlw	10
  2247  00FB40  6E03               	movwf	___awdiv@divisor,c
  2248  00FB42  EC11  F07A         	call	___awdiv	;wreg free
  2249  00FB46  5001               	movf	?___awdiv,w,c
  2250  00FB48  6E5D               	movwf	_segundo_d,c
  2251                           
  2252                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2253  00FB4A  505D               	movf	_segundo_d,w,c
  2254  00FB4C  0D0A               	mullw	10
  2255  00FB4E  50F3               	movf	prodl,w,c
  2256  00FB50  0800               	sublw	0
  2257  00FB52  243F               	addwf	_segundo,w,c
  2258  00FB54  6E5E               	movwf	_segundo_u,c
  2259                           
  2260                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2261  00FB56  505D               	movf	_segundo_d,w,c
  2262  00FB58  0D10               	mullw	16
  2263  00FB5A  50F3               	movf	prodl,w,c
  2264  00FB5C  245E               	addwf	_segundo_u,w,c
  2265  00FB5E  6E4B               	movwf	_RtccTime+1,c
  2266                           
  2267                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2268  00FB60  C03D  F001         	movff	_minuto,___awdiv@dividend
  2269  00FB64  C03E  F002         	movff	_minuto+1,___awdiv@dividend+1
  2270  00FB68  0E00               	movlw	0
  2271  00FB6A  6E04               	movwf	___awdiv@divisor+1,c
  2272  00FB6C  0E0A               	movlw	10
  2273  00FB6E  6E03               	movwf	___awdiv@divisor,c
  2274  00FB70  EC11  F07A         	call	___awdiv	;wreg free
  2275  00FB74  5001               	movf	?___awdiv,w,c
  2276  00FB76  6E5C               	movwf	_minuto_d,c
  2277                           
  2278                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2279  00FB78  505C               	movf	_minuto_d,w,c
  2280  00FB7A  0D0A               	mullw	10
  2281  00FB7C  50F3               	movf	prodl,w,c
  2282  00FB7E  0800               	sublw	0
  2283  00FB80  243D               	addwf	_minuto,w,c
  2284  00FB82  0100               	movlb	0	; () banked
  2285  00FB84  6FA9               	movwf	_minuto_u& (0+255),b
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2289  00FB86  505C               	movf	_minuto_d,w,c
  2290  00FB88  0D10               	mullw	16
  2291  00FB8A  50F3               	movf	prodl,w,c
  2292  00FB8C  0100               	movlb	0	; () banked
  2293  00FB8E  25A9               	addwf	_minuto_u& (0+255),w,b
  2294  00FB90  6E4C               	movwf	_RtccTime+2,c
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2298  00FB92  C054  F001         	movff	_hora,___awdiv@dividend
  2299  00FB96  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  2300  00FB9A  0E00               	movlw	0
  2301  00FB9C  6E04               	movwf	___awdiv@divisor+1,c
  2302  00FB9E  0E0A               	movlw	10
  2303  00FBA0  6E03               	movwf	___awdiv@divisor,c
  2304  00FBA2  EC11  F07A         	call	___awdiv	;wreg free
  2305  00FBA6  5001               	movf	?___awdiv,w,c
  2306  00FBA8  6E5A               	movwf	_hora_d,c
  2307                           
  2308                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2309  00FBAA  505A               	movf	_hora_d,w,c
  2310  00FBAC  0D0A               	mullw	10
  2311  00FBAE  50F3               	movf	prodl,w,c
  2312  00FBB0  0800               	sublw	0
  2313  00FBB2  2454               	addwf	_hora,w,c
  2314  00FBB4  0100               	movlb	0	; () banked
  2315  00FBB6  6FA7               	movwf	_hora_u& (0+255),b
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2319  00FBB8  505A               	movf	_hora_d,w,c
  2320  00FBBA  0D10               	mullw	16
  2321  00FBBC  50F3               	movf	prodl,w,c
  2322  00FBBE  0100               	movlb	0	; () banked
  2323  00FBC0  25A7               	addwf	_hora_u& (0+255),w,b
  2324  00FBC2  6E4D               	movwf	_RtccTime+3,c
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2328  00FBC4  C04E  F001         	movff	_anio,___awdiv@dividend
  2329  00FBC8  C04F  F002         	movff	_anio+1,___awdiv@dividend+1
  2330  00FBCC  0E00               	movlw	0
  2331  00FBCE  6E04               	movwf	___awdiv@divisor+1,c
  2332  00FBD0  0E0A               	movlw	10
  2333  00FBD2  6E03               	movwf	___awdiv@divisor,c
  2334  00FBD4  EC11  F07A         	call	___awdiv	;wreg free
  2335  00FBD8  5001               	movf	?___awdiv,w,c
  2336  00FBDA  6E58               	movwf	_anio_d,c
  2337                           
  2338                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  2339  00FBDC  5058               	movf	_anio_d,w,c
  2340  00FBDE  0D0A               	mullw	10
  2341  00FBE0  50F3               	movf	prodl,w,c
  2342  00FBE2  0800               	sublw	0
  2343  00FBE4  244E               	addwf	_anio,w,c
  2344  00FBE6  0100               	movlb	0	; () banked
  2345  00FBE8  6FA4               	movwf	_anio_u& (0+255),b
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  2349  00FBEA  5058               	movf	_anio_d,w,c
  2350  00FBEC  0D10               	mullw	16
  2351  00FBEE  50F3               	movf	prodl,w,c
  2352  00FBF0  0100               	movlb	0	; () banked
  2353  00FBF2  25A4               	addwf	_anio_u& (0+255),w,b
  2354  00FBF4  6E49               	movwf	_RtccDate+3,c
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  2358  00FBF6  C056  F001         	movff	_mes,___awdiv@dividend
  2359  00FBFA  C057  F002         	movff	_mes+1,___awdiv@dividend+1
  2360  00FBFE  0E00               	movlw	0
  2361  00FC00  6E04               	movwf	___awdiv@divisor+1,c
  2362  00FC02  0E0A               	movlw	10
  2363  00FC04  6E03               	movwf	___awdiv@divisor,c
  2364  00FC06  EC11  F07A         	call	___awdiv	;wreg free
  2365  00FC0A  5001               	movf	?___awdiv,w,c
  2366  00FC0C  6E5B               	movwf	_mes_d,c
  2367                           
  2368                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  2369  00FC0E  505B               	movf	_mes_d,w,c
  2370  00FC10  0D0A               	mullw	10
  2371  00FC12  50F3               	movf	prodl,w,c
  2372  00FC14  0800               	sublw	0
  2373  00FC16  2456               	addwf	_mes,w,c
  2374  00FC18  0100               	movlb	0	; () banked
  2375  00FC1A  6FA8               	movwf	_mes_u& (0+255),b
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  2379  00FC1C  505B               	movf	_mes_d,w,c
  2380  00FC1E  0D10               	mullw	16
  2381  00FC20  50F3               	movf	prodl,w,c
  2382  00FC22  0100               	movlb	0	; () banked
  2383  00FC24  25A8               	addwf	_mes_u& (0+255),w,b
  2384  00FC26  6E48               	movwf	_RtccDate+2,c
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  2388  00FC28  C050  F001         	movff	_dia,___awdiv@dividend
  2389  00FC2C  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  2390  00FC30  0E00               	movlw	0
  2391  00FC32  6E04               	movwf	___awdiv@divisor+1,c
  2392  00FC34  0E0A               	movlw	10
  2393  00FC36  6E03               	movwf	___awdiv@divisor,c
  2394  00FC38  EC11  F07A         	call	___awdiv	;wreg free
  2395  00FC3C  5001               	movf	?___awdiv,w,c
  2396  00FC3E  6E59               	movwf	_fecha_d,c
  2397                           
  2398                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  2399  00FC40  5059               	movf	_fecha_d,w,c
  2400  00FC42  0D0A               	mullw	10
  2401  00FC44  50F3               	movf	prodl,w,c
  2402  00FC46  0800               	sublw	0
  2403  00FC48  2450               	addwf	_dia,w,c
  2404  00FC4A  0100               	movlb	0	; () banked
  2405  00FC4C  6FA6               	movwf	_fecha_u& (0+255),b
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  2409  00FC4E  5059               	movf	_fecha_d,w,c
  2410  00FC50  0D10               	mullw	16
  2411  00FC52  50F3               	movf	prodl,w,c
  2412  00FC54  0100               	movlb	0	; () banked
  2413  00FC56  25A6               	addwf	_fecha_u& (0+255),w,b
  2414  00FC58  6E47               	movwf	_RtccDate+1,c
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  2418  00FC5A  C052  F0A5         	movff	_diasem,_dia_semana
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  2422  00FC5E  C052  F046         	movff	_diasem,_RtccDate
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  2426  00FC62  0E4A               	movlw	low _RtccTime
  2427  00FC64  6E01               	movwf	RtccWriteTime@pTm,c
  2428  00FC66  0E00               	movlw	high _RtccTime
  2429  00FC68  6E02               	movwf	RtccWriteTime@pTm+1,c
  2430  00FC6A  0E01               	movlw	1
  2431  00FC6C  6E03               	movwf	RtccWriteTime@di,c
  2432  00FC6E  ECC2  F07B         	call	_RtccWriteTime	;wreg free
  2433                           
  2434                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  2435  00FC72  0E46               	movlw	low _RtccDate
  2436  00FC74  6E01               	movwf	RtccWriteDate@pDt,c
  2437  00FC76  0E00               	movlw	high _RtccDate
  2438  00FC78  6E02               	movwf	RtccWriteDate@pDt+1,c
  2439  00FC7A  0E01               	movlw	1
  2440  00FC7C  6E03               	movwf	RtccWriteDate@di,c
  2441  00FC7E  EC48  F07C         	call	_RtccWriteDate	;wreg free
  2442                           
  2443                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  2444  00FC82  010F               	movlb	15	; () banked
  2445  00FC84  8F3F               	bsf	63,7,b	;volatile
  2446                           
  2447                           ; BSR set to: 15
  2448  00FC86  0012               	return		;funcret
  2449  00FC88                     __end_of_Write_RTC:
  2450                           	opt stack 0
  2451                           tblptru	equ	0xFF8
  2452                           tblptrh	equ	0xFF7
  2453                           tblptrl	equ	0xFF6
  2454                           tablat	equ	0xFF5
  2455                           prodh	equ	0xFF4
  2456                           prodl	equ	0xFF3
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           indf1	equ	0xFE7
  2460                           postdec1	equ	0xFE5
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           indf2	equ	0xFDF
  2464                           fsr2h	equ	0xFDA
  2465                           fsr2l	equ	0xFD9
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function ___awdiv *****************
  2469 ;; Defined at:
  2470 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  dividend        2    0[COMRAM] int 
  2473 ;;  divisor         2    2[COMRAM] int 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  quotient        2    6[COMRAM] int 
  2476 ;;  sign            1    5[COMRAM] unsigned char 
  2477 ;;  counter         1    4[COMRAM] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  2    0[COMRAM] int 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;Total ram usage:        8 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_Write_RTC
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text8
  2501  00F422                     __ptext8:
  2502                           	opt stack 0
  2503  00F422                     ___awdiv:
  2504                           	opt stack 28
  2505                           
  2506                           ; BSR set to: 15
  2507                           ;incstack = 0
  2508  00F422  0E00               	movlw	0
  2509  00F424  6E06               	movwf	___awdiv@sign,c
  2510  00F426  AE04               	btfss	___awdiv@divisor+1,7,c
  2511  00F428  D007               	goto	l3431
  2512  00F42A  6C03               	negf	___awdiv@divisor,c
  2513  00F42C  1E04               	comf	___awdiv@divisor+1,f,c
  2514  00F42E  B0D8               	btfsc	status,0,c
  2515  00F430  2A04               	incf	___awdiv@divisor+1,f,c
  2516  00F432  0E01               	movlw	1
  2517  00F434  6E06               	movwf	___awdiv@sign,c
  2518  00F436  D000               	goto	l3431
  2519  00F438                     l3431:
  2520  00F438  AE02               	btfss	___awdiv@dividend+1,7,c
  2521  00F43A  D007               	goto	l3437
  2522  00F43C  6C01               	negf	___awdiv@dividend,c
  2523  00F43E  1E02               	comf	___awdiv@dividend+1,f,c
  2524  00F440  B0D8               	btfsc	status,0,c
  2525  00F442  2A02               	incf	___awdiv@dividend+1,f,c
  2526  00F444  0E01               	movlw	1
  2527  00F446  1A06               	xorwf	___awdiv@sign,f,c
  2528  00F448  D000               	goto	l3437
  2529  00F44A                     l3437:
  2530  00F44A  0E00               	movlw	0
  2531  00F44C  6E08               	movwf	___awdiv@quotient+1,c
  2532  00F44E  0E00               	movlw	0
  2533  00F450  6E07               	movwf	___awdiv@quotient,c
  2534  00F452  5003               	movf	___awdiv@divisor,w,c
  2535  00F454  1004               	iorwf	___awdiv@divisor+1,w,c
  2536  00F456  B4D8               	btfsc	status,2,c
  2537  00F458  D021               	goto	l3459
  2538  00F45A  0E01               	movlw	1
  2539  00F45C  6E05               	movwf	___awdiv@counter,c
  2540  00F45E  D005               	goto	l3445
  2541  00F460                     l3443:
  2542  00F460  90D8               	bcf	status,0,c
  2543  00F462  3603               	rlcf	___awdiv@divisor,f,c
  2544  00F464  3604               	rlcf	___awdiv@divisor+1,f,c
  2545  00F466  2A05               	incf	___awdiv@counter,f,c
  2546  00F468  D000               	goto	l3445
  2547  00F46A                     l3445:
  2548  00F46A  BE04               	btfsc	___awdiv@divisor+1,7,c
  2549  00F46C  D002               	goto	l3447
  2550  00F46E  D7F8               	goto	l3443
  2551  00F470  D000               	goto	l3447
  2552  00F472                     l3447:
  2553  00F472  90D8               	bcf	status,0,c
  2554  00F474  3607               	rlcf	___awdiv@quotient,f,c
  2555  00F476  3608               	rlcf	___awdiv@quotient+1,f,c
  2556  00F478  5003               	movf	___awdiv@divisor,w,c
  2557  00F47A  5C01               	subwf	___awdiv@dividend,w,c
  2558  00F47C  5004               	movf	___awdiv@divisor+1,w,c
  2559  00F47E  5802               	subwfb	___awdiv@dividend+1,w,c
  2560  00F480  A0D8               	btfss	status,0,c
  2561  00F482  D006               	goto	l3455
  2562  00F484  5003               	movf	___awdiv@divisor,w,c
  2563  00F486  5E01               	subwf	___awdiv@dividend,f,c
  2564  00F488  5004               	movf	___awdiv@divisor+1,w,c
  2565  00F48A  5A02               	subwfb	___awdiv@dividend+1,f,c
  2566  00F48C  8007               	bsf	___awdiv@quotient,0,c
  2567  00F48E  D000               	goto	l3455
  2568  00F490                     l3455:
  2569  00F490  90D8               	bcf	status,0,c
  2570  00F492  3204               	rrcf	___awdiv@divisor+1,f,c
  2571  00F494  3203               	rrcf	___awdiv@divisor,f,c
  2572  00F496  2E05               	decfsz	___awdiv@counter,f,c
  2573  00F498  D7EC               	goto	l3447
  2574  00F49A  D000               	goto	l3459
  2575  00F49C                     l3459:
  2576  00F49C  5006               	movf	___awdiv@sign,w,c
  2577  00F49E  B4D8               	btfsc	status,2,c
  2578  00F4A0  D005               	goto	l3463
  2579  00F4A2  6C07               	negf	___awdiv@quotient,c
  2580  00F4A4  1E08               	comf	___awdiv@quotient+1,f,c
  2581  00F4A6  B0D8               	btfsc	status,0,c
  2582  00F4A8  2A08               	incf	___awdiv@quotient+1,f,c
  2583  00F4AA  D000               	goto	l3463
  2584  00F4AC                     l3463:
  2585  00F4AC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2586  00F4B0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2587  00F4B4  0012               	return	
  2588  00F4B6  0012               	return		;funcret
  2589  00F4B8                     __end_of___awdiv:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodh	equ	0xFF4
  2596                           prodl	equ	0xFF3
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           indf1	equ	0xFE7
  2600                           postdec1	equ	0xFE5
  2601                           fsr1h	equ	0xFE2
  2602                           fsr1l	equ	0xFE1
  2603                           indf2	equ	0xFDF
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _RtccWriteTime *****************
  2609 ;; Defined at:
  2610 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  pTm             2    0[COMRAM] PTR const struct .
  2613 ;;		 -> RtccTime(4), 
  2614 ;;  di              1    2[COMRAM] enum E7121
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  tempHourWDay    2    9[COMRAM] struct .
  2617 ;;  tempMinSec      2    7[COMRAM] struct .
  2618 ;;  wasWrEn         1    6[COMRAM] enum E7121
  2619 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2620 ;;  wasOn           1    4[COMRAM] enum E7121
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      enum E7481
  2623 ;; Registers used:
  2624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2630 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;Total ram usage:       11 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    1
  2637 ;; This function calls:
  2638 ;;		_RtccWrOn
  2639 ;; This function is called by:
  2640 ;;		_Write_RTC
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text9
  2645  00F784                     __ptext9:
  2646                           	opt stack 0
  2647  00F784                     _RtccWriteTime:
  2648                           	opt stack 27
  2649                           
  2650                           ;incstack = 0
  2651  00F784  0E00               	movlw	0
  2652  00F786  6E06               	movwf	RtccWriteTime@wasAlrm,c
  2653  00F788  EE20 F002          	lfsr	2,2
  2654  00F78C  5001               	movf	RtccWriteTime@pTm,w,c
  2655  00F78E  26D9               	addwf	fsr2l,f,c
  2656  00F790  5002               	movf	RtccWriteTime@pTm+1,w,c
  2657  00F792  22DA               	addwfc	fsr2h,f,c
  2658  00F794  0E5A               	movlw	90
  2659  00F796  60DF               	cpfslt	indf2,c
  2660  00F798  0012               	return	
  2661  00F79A  EE20 F001          	lfsr	2,1
  2662  00F79E  5001               	movf	RtccWriteTime@pTm,w,c
  2663  00F7A0  26D9               	addwf	fsr2l,f,c
  2664  00F7A2  5002               	movf	RtccWriteTime@pTm+1,w,c
  2665  00F7A4  22DA               	addwfc	fsr2h,f,c
  2666  00F7A6  0E5A               	movlw	90
  2667  00F7A8  60DF               	cpfslt	indf2,c
  2668  00F7AA  0012               	return	
  2669  00F7AC  EE20 F003          	lfsr	2,3
  2670  00F7B0  5001               	movf	RtccWriteTime@pTm,w,c
  2671  00F7B2  26D9               	addwf	fsr2l,f,c
  2672  00F7B4  5002               	movf	RtccWriteTime@pTm+1,w,c
  2673  00F7B6  22DA               	addwfc	fsr2h,f,c
  2674  00F7B8  0E24               	movlw	36
  2675  00F7BA  64DF               	cpfsgt	indf2,c
  2676  00F7BC  D002               	goto	l3153
  2677  00F7BE  0012               	return	
  2678                           
  2679                           ;	Return value of _RtccWriteTime is never used
  2680  00F7C0  0012               	return	
  2681  00F7C2                     l3153:
  2682  00F7C2  EE20 F002          	lfsr	2,2
  2683  00F7C6  5001               	movf	RtccWriteTime@pTm,w,c
  2684  00F7C8  26D9               	addwf	fsr2l,f,c
  2685  00F7CA  5002               	movf	RtccWriteTime@pTm+1,w,c
  2686  00F7CC  22DA               	addwfc	fsr2h,f,c
  2687  00F7CE  50DF               	movf	indf2,w,c
  2688  00F7D0  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  2689  00F7D2  EE20 F001          	lfsr	2,1
  2690  00F7D6  5001               	movf	RtccWriteTime@pTm,w,c
  2691  00F7D8  26D9               	addwf	fsr2l,f,c
  2692  00F7DA  5002               	movf	RtccWriteTime@pTm+1,w,c
  2693  00F7DC  22DA               	addwfc	fsr2h,f,c
  2694  00F7DE  50DF               	movf	indf2,w,c
  2695  00F7E0  6E08               	movwf	RtccWriteTime@tempMinSec,c
  2696  00F7E2  5003               	movf	RtccWriteTime@di,w,c
  2697  00F7E4  B4D8               	btfsc	status,2,c
  2698  00F7E6  D002               	goto	l3159
  2699  00F7E8  9CF2               	bcf	intcon,6,c	;volatile
  2700  00F7EA  D000               	goto	l3159
  2701  00F7EC                     l3159:
  2702  00F7EC  0E00               	movlw	0
  2703  00F7EE  BB3F               	btfsc	63,5,b	;volatile
  2704  00F7F0  0E01               	movlw	1
  2705  00F7F2  6E07               	movwf	RtccWriteTime@wasWrEn,c
  2706  00F7F4  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2707  00F7F6  A4D8               	btfss	status,2,c
  2708  00F7F8  D003               	goto	l3163
  2709  00F7FA  EC1C  F071         	call	_RtccWrOn	;wreg free
  2710  00F7FE  D000               	goto	l3163
  2711  00F800                     l3163:
  2712  00F800  0E00               	movlw	0
  2713  00F802  BF3F               	btfsc	63,7,b	;volatile
  2714  00F804  0E01               	movlw	1
  2715  00F806  6E05               	movwf	RtccWriteTime@wasOn,c
  2716  00F808  5005               	movf	RtccWriteTime@wasOn,w,c
  2717  00F80A  B4D8               	btfsc	status,2,c
  2718  00F80C  D007               	goto	l3169
  2719  00F80E  0E00               	movlw	0
  2720  00F810  BE91               	btfsc	3985,7,c	;volatile
  2721  00F812  0E01               	movlw	1
  2722  00F814  6E06               	movwf	RtccWriteTime@wasAlrm,c
  2723  00F816  010F               	movlb	15	; () banked
  2724  00F818  9F3F               	bcf	63,7,b	;volatile
  2725  00F81A  D000               	goto	l3169
  2726  00F81C                     l3169:
  2727  00F81C  0EFC               	movlw	252
  2728  00F81E  010F               	movlb	15	; () banked
  2729  00F820  173F               	andwf	63,f,b	;volatile
  2730  00F822  010F               	movlb	15	; () banked
  2731  00F824  813F               	bsf	63,0,b	;volatile
  2732                           
  2733                           ; BSR set to: 15
  2734  00F826  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  2735                           
  2736                           ; BSR set to: 15
  2737  00F82A  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  2738                           
  2739                           ; BSR set to: 15
  2740  00F82E  EE20 F003          	lfsr	2,3
  2741  00F832  5001               	movf	RtccWriteTime@pTm,w,c
  2742  00F834  26D9               	addwf	fsr2l,f,c
  2743  00F836  5002               	movf	RtccWriteTime@pTm+1,w,c
  2744  00F838  22DA               	addwfc	fsr2h,f,c
  2745  00F83A  50DF               	movf	indf2,w,c
  2746  00F83C  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  2747                           
  2748                           ; BSR set to: 15
  2749  00F83E  0EFC               	movlw	252
  2750  00F840  010F               	movlb	15	; () banked
  2751  00F842  173F               	andwf	63,f,b	;volatile
  2752                           
  2753                           ; BSR set to: 15
  2754  00F844  010F               	movlb	15	; () banked
  2755  00F846  813F               	bsf	63,0,b	;volatile
  2756                           
  2757                           ; BSR set to: 15
  2758  00F848  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  2759                           
  2760                           ; BSR set to: 15
  2761  00F84C  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  2762                           
  2763                           ; BSR set to: 15
  2764  00F850  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  2765                           
  2766                           ; BSR set to: 15
  2767  00F854  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  2768                           
  2769                           ; BSR set to: 15
  2770  00F858  5005               	movf	RtccWriteTime@wasOn,w,c
  2771  00F85A  B4D8               	btfsc	status,2,c
  2772  00F85C  D00D               	goto	l3201
  2773                           
  2774                           ; BSR set to: 15
  2775  00F85E  010F               	movlb	15	; () banked
  2776  00F860  8F3F               	bsf	63,7,b	;volatile
  2777                           
  2778                           ; BSR set to: 15
  2779  00F862  5006               	movf	RtccWriteTime@wasAlrm,w,c
  2780  00F864  B4D8               	btfsc	status,2,c
  2781  00F866  D002               	goto	l3197
  2782                           
  2783                           ; BSR set to: 15
  2784  00F868  8E91               	bsf	3985,7,c	;volatile
  2785  00F86A  D000               	goto	l3197
  2786  00F86C                     l3197:
  2787                           
  2788                           ; BSR set to: 15
  2789  00F86C  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2790  00F86E  B4D8               	btfsc	status,2,c
  2791  00F870  D009               	goto	l3205
  2792                           
  2793                           ; BSR set to: 15
  2794  00F872  EC1C  F071         	call	_RtccWrOn	;wreg free
  2795  00F876  D006               	goto	l3205
  2796  00F878                     l3201:
  2797  00F878  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2798  00F87A  A4D8               	btfss	status,2,c
  2799  00F87C  D003               	goto	l3205
  2800  00F87E  010F               	movlb	15	; () banked
  2801  00F880  9B3F               	bcf	63,5,b	;volatile
  2802                           
  2803                           ; BSR set to: 15
  2804  00F882  D000               	goto	l3205
  2805  00F884                     l3205:
  2806  00F884  5003               	movf	RtccWriteTime@di,w,c
  2807  00F886  B4D8               	btfsc	status,2,c
  2808  00F888  0012               	return	
  2809  00F88A  8CF2               	bsf	intcon,6,c	;volatile
  2810  00F88C  0012               	return	
  2811                           
  2812                           ;	Return value of _RtccWriteTime is never used
  2813  00F88E  0012               	return		;funcret
  2814  00F890                     __end_of_RtccWriteTime:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           intcon	equ	0xFF2
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           indf1	equ	0xFE7
  2826                           postdec1	equ	0xFE5
  2827                           fsr1h	equ	0xFE2
  2828                           fsr1l	equ	0xFE1
  2829                           indf2	equ	0xFDF
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function _RtccWriteDate *****************
  2835 ;; Defined at:
  2836 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  pDt             2    0[COMRAM] PTR const struct .
  2839 ;;		 -> RtccDate(4), 
  2840 ;;  di              1    2[COMRAM] enum E7121
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  tempHourWDay    2   11[COMRAM] struct .
  2843 ;;  tempDayMonth    2    9[COMRAM] struct .
  2844 ;;  tempYear        2    6[COMRAM] struct .
  2845 ;;  wasWrEn         1    8[COMRAM] enum E7121
  2846 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2847 ;;  wasOn           1    4[COMRAM] enum E7121
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      enum E7481
  2850 ;; Registers used:
  2851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2857 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2858 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2861 ;;Total ram usage:       13 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    1
  2864 ;; This function calls:
  2865 ;;		_RtccWrOn
  2866 ;; This function is called by:
  2867 ;;		_Write_RTC
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text10
  2872  00F890                     __ptext10:
  2873                           	opt stack 0
  2874  00F890                     _RtccWriteDate:
  2875                           	opt stack 27
  2876                           
  2877                           ;incstack = 0
  2878  00F890  0E00               	movlw	0
  2879  00F892  6E06               	movwf	RtccWriteDate@wasAlrm,c
  2880  00F894  EE20 F002          	lfsr	2,2
  2881  00F898  5001               	movf	RtccWriteDate@pDt,w,c
  2882  00F89A  26D9               	addwf	fsr2l,f,c
  2883  00F89C  5002               	movf	RtccWriteDate@pDt+1,w,c
  2884  00F89E  22DA               	addwfc	fsr2h,f,c
  2885  00F8A0  0E13               	movlw	19
  2886  00F8A2  60DF               	cpfslt	indf2,c
  2887  00F8A4  0012               	return	
  2888  00F8A6  EE20 F002          	lfsr	2,2
  2889  00F8AA  5001               	movf	RtccWriteDate@pDt,w,c
  2890  00F8AC  26D9               	addwf	fsr2l,f,c
  2891  00F8AE  5002               	movf	RtccWriteDate@pDt+1,w,c
  2892  00F8B0  22DA               	addwfc	fsr2h,f,c
  2893  00F8B2  50DF               	movf	indf2,w,c
  2894  00F8B4  B4D8               	btfsc	status,2,c
  2895  00F8B6  0012               	return	
  2896  00F8B8  EE20 F001          	lfsr	2,1
  2897  00F8BC  5001               	movf	RtccWriteDate@pDt,w,c
  2898  00F8BE  26D9               	addwf	fsr2l,f,c
  2899  00F8C0  5002               	movf	RtccWriteDate@pDt+1,w,c
  2900  00F8C2  22DA               	addwfc	fsr2h,f,c
  2901  00F8C4  0E32               	movlw	50
  2902  00F8C6  60DF               	cpfslt	indf2,c
  2903  00F8C8  0012               	return	
  2904  00F8CA  EE20 F001          	lfsr	2,1
  2905  00F8CE  5001               	movf	RtccWriteDate@pDt,w,c
  2906  00F8D0  26D9               	addwf	fsr2l,f,c
  2907  00F8D2  5002               	movf	RtccWriteDate@pDt+1,w,c
  2908  00F8D4  22DA               	addwfc	fsr2h,f,c
  2909  00F8D6  50DF               	movf	indf2,w,c
  2910  00F8D8  B4D8               	btfsc	status,2,c
  2911  00F8DA  0012               	return	
  2912  00F8DC  EE20 F003          	lfsr	2,3
  2913  00F8E0  5001               	movf	RtccWriteDate@pDt,w,c
  2914  00F8E2  26D9               	addwf	fsr2l,f,c
  2915  00F8E4  5002               	movf	RtccWriteDate@pDt+1,w,c
  2916  00F8E6  22DA               	addwfc	fsr2h,f,c
  2917  00F8E8  0E99               	movlw	153
  2918  00F8EA  64DF               	cpfsgt	indf2,c
  2919  00F8EC  D002               	goto	l3221
  2920  00F8EE  0012               	return	
  2921                           
  2922                           ;	Return value of _RtccWriteDate is never used
  2923  00F8F0  0012               	return	
  2924  00F8F2                     l3221:
  2925  00F8F2  EE20 F003          	lfsr	2,3
  2926  00F8F6  5001               	movf	RtccWriteDate@pDt,w,c
  2927  00F8F8  26D9               	addwf	fsr2l,f,c
  2928  00F8FA  5002               	movf	RtccWriteDate@pDt+1,w,c
  2929  00F8FC  22DA               	addwfc	fsr2h,f,c
  2930  00F8FE  50DF               	movf	indf2,w,c
  2931  00F900  6E07               	movwf	RtccWriteDate@tempYear,c
  2932  00F902  EE20 F001          	lfsr	2,1
  2933  00F906  5001               	movf	RtccWriteDate@pDt,w,c
  2934  00F908  26D9               	addwf	fsr2l,f,c
  2935  00F90A  5002               	movf	RtccWriteDate@pDt+1,w,c
  2936  00F90C  22DA               	addwfc	fsr2h,f,c
  2937  00F90E  50DF               	movf	indf2,w,c
  2938  00F910  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  2939  00F912  EE20 F002          	lfsr	2,2
  2940  00F916  5001               	movf	RtccWriteDate@pDt,w,c
  2941  00F918  26D9               	addwf	fsr2l,f,c
  2942  00F91A  5002               	movf	RtccWriteDate@pDt+1,w,c
  2943  00F91C  22DA               	addwfc	fsr2h,f,c
  2944  00F91E  50DF               	movf	indf2,w,c
  2945  00F920  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  2946  00F922  5003               	movf	RtccWriteDate@di,w,c
  2947  00F924  B4D8               	btfsc	status,2,c
  2948  00F926  D002               	goto	l3227
  2949  00F928  9CF2               	bcf	intcon,6,c	;volatile
  2950  00F92A  D000               	goto	l3227
  2951  00F92C                     l3227:
  2952  00F92C  0E00               	movlw	0
  2953  00F92E  BB3F               	btfsc	63,5,b	;volatile
  2954  00F930  0E01               	movlw	1
  2955  00F932  6E09               	movwf	RtccWriteDate@wasWrEn,c
  2956  00F934  5009               	movf	RtccWriteDate@wasWrEn,w,c
  2957  00F936  A4D8               	btfss	status,2,c
  2958  00F938  D003               	goto	l3231
  2959  00F93A  EC1C  F071         	call	_RtccWrOn	;wreg free
  2960  00F93E  D000               	goto	l3231
  2961  00F940                     l3231:
  2962  00F940  0E00               	movlw	0
  2963  00F942  BF3F               	btfsc	63,7,b	;volatile
  2964  00F944  0E01               	movlw	1
  2965  00F946  6E05               	movwf	RtccWriteDate@wasOn,c
  2966  00F948  5005               	movf	RtccWriteDate@wasOn,w,c
  2967  00F94A  B4D8               	btfsc	status,2,c
  2968  00F94C  D007               	goto	l3237
  2969  00F94E  0E00               	movlw	0
  2970  00F950  BE91               	btfsc	3985,7,c	;volatile
  2971  00F952  0E01               	movlw	1
  2972  00F954  6E06               	movwf	RtccWriteDate@wasAlrm,c
  2973  00F956  010F               	movlb	15	; () banked
  2974  00F958  9F3F               	bcf	63,7,b	;volatile
  2975  00F95A  D000               	goto	l3237
  2976  00F95C                     l3237:
  2977  00F95C  0EFC               	movlw	252
  2978  00F95E  010F               	movlb	15	; () banked
  2979  00F960  173F               	andwf	63,f,b	;volatile
  2980  00F962  010F               	movlb	15	; () banked
  2981  00F964  813F               	bsf	63,0,b	;volatile
  2982                           
  2983                           ; BSR set to: 15
  2984  00F966  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  2985                           
  2986                           ; BSR set to: 15
  2987  00F96A  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  2988                           
  2989                           ; BSR set to: 15
  2990  00F96E  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  2991  00F972  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  2992  00F976  50DF               	movf	indf2,w,c
  2993  00F978  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  2994                           
  2995                           ; BSR set to: 15
  2996  00F97A  0EFC               	movlw	252
  2997  00F97C  010F               	movlb	15	; () banked
  2998  00F97E  173F               	andwf	63,f,b	;volatile
  2999                           
  3000                           ; BSR set to: 15
  3001  00F980  0E03               	movlw	3
  3002  00F982  010F               	movlb	15	; () banked
  3003  00F984  133F               	iorwf	63,f,b	;volatile
  3004                           
  3005                           ; BSR set to: 15
  3006  00F986  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3007                           
  3008                           ; BSR set to: 15
  3009  00F98A  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3010                           
  3011                           ; BSR set to: 15
  3012  00F98E  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3013                           
  3014                           ; BSR set to: 15
  3015  00F992  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3016                           
  3017                           ; BSR set to: 15
  3018  00F996  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3019                           
  3020                           ; BSR set to: 15
  3021  00F99A  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3022                           
  3023                           ; BSR set to: 15
  3024  00F99E  5005               	movf	RtccWriteDate@wasOn,w,c
  3025  00F9A0  B4D8               	btfsc	status,2,c
  3026  00F9A2  D00D               	goto	l3273
  3027                           
  3028                           ; BSR set to: 15
  3029  00F9A4  010F               	movlb	15	; () banked
  3030  00F9A6  8F3F               	bsf	63,7,b	;volatile
  3031                           
  3032                           ; BSR set to: 15
  3033  00F9A8  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3034  00F9AA  B4D8               	btfsc	status,2,c
  3035  00F9AC  D002               	goto	l3269
  3036                           
  3037                           ; BSR set to: 15
  3038  00F9AE  8E91               	bsf	3985,7,c	;volatile
  3039  00F9B0  D000               	goto	l3269
  3040  00F9B2                     l3269:
  3041                           
  3042                           ; BSR set to: 15
  3043  00F9B2  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3044  00F9B4  B4D8               	btfsc	status,2,c
  3045  00F9B6  D009               	goto	l3277
  3046                           
  3047                           ; BSR set to: 15
  3048  00F9B8  EC1C  F071         	call	_RtccWrOn	;wreg free
  3049  00F9BC  D006               	goto	l3277
  3050  00F9BE                     l3273:
  3051  00F9BE  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3052  00F9C0  A4D8               	btfss	status,2,c
  3053  00F9C2  D003               	goto	l3277
  3054  00F9C4  010F               	movlb	15	; () banked
  3055  00F9C6  9B3F               	bcf	63,5,b	;volatile
  3056                           
  3057                           ; BSR set to: 15
  3058  00F9C8  D000               	goto	l3277
  3059  00F9CA                     l3277:
  3060  00F9CA  5003               	movf	RtccWriteDate@di,w,c
  3061  00F9CC  B4D8               	btfsc	status,2,c
  3062  00F9CE  0012               	return	
  3063  00F9D0  9CF2               	bcf	intcon,6,c	;volatile
  3064  00F9D2  0012               	return	
  3065                           
  3066                           ;	Return value of _RtccWriteDate is never used
  3067  00F9D4  0012               	return		;funcret
  3068  00F9D6                     __end_of_RtccWriteDate:
  3069                           	opt stack 0
  3070                           tblptru	equ	0xFF8
  3071                           tblptrh	equ	0xFF7
  3072                           tblptrl	equ	0xFF6
  3073                           tablat	equ	0xFF5
  3074                           prodh	equ	0xFF4
  3075                           prodl	equ	0xFF3
  3076                           intcon	equ	0xFF2
  3077                           postinc0	equ	0xFEE
  3078                           wreg	equ	0xFE8
  3079                           indf1	equ	0xFE7
  3080                           postdec1	equ	0xFE5
  3081                           fsr1h	equ	0xFE2
  3082                           fsr1l	equ	0xFE1
  3083                           indf2	equ	0xFDF
  3084                           fsr2h	equ	0xFDA
  3085                           fsr2l	equ	0xFD9
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _RtccWrOn *****************
  3089 ;; Defined at:
  3090 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  data            2    0        unsigned int 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_Write_RTC
  3114 ;;		_RtccWriteDate
  3115 ;;		_RtccWriteTime
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text11
  3120  00E238                     __ptext11:
  3121                           	opt stack 0
  3122  00E238                     _RtccWrOn:
  3123                           	opt stack 27
  3124                           
  3125                           ;incstack = 0
  3126  00E238  9CF2               	bcf	intcon,6,c	;volatile
  3127  00E23A  0E55               	movlw	85
  3128  00E23C  6EA7               	movwf	4007,c	;volatile
  3129  00E23E  0EAA               	movlw	170
  3130  00E240  6EA7               	movwf	4007,c	;volatile
  3131  00E242  010F               	movlb	15	; () banked
  3132  00E244  8B3F               	bsf	63,5,b	;volatile
  3133                           
  3134                           ; BSR set to: 15
  3135  00E246  8CF2               	bsf	intcon,6,c	;volatile
  3136                           
  3137                           ; BSR set to: 15
  3138  00E248  0012               	return		;funcret
  3139  00E24A                     __end_of_RtccWrOn:
  3140                           	opt stack 0
  3141                           tblptru	equ	0xFF8
  3142                           tblptrh	equ	0xFF7
  3143                           tblptrl	equ	0xFF6
  3144                           tablat	equ	0xFF5
  3145                           prodh	equ	0xFF4
  3146                           prodl	equ	0xFF3
  3147                           intcon	equ	0xFF2
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           indf1	equ	0xFE7
  3151                           postdec1	equ	0xFE5
  3152                           fsr1h	equ	0xFE2
  3153                           fsr1l	equ	0xFE1
  3154                           indf2	equ	0xFDF
  3155                           fsr2h	equ	0xFDA
  3156                           fsr2l	equ	0xFD9
  3157                           status	equ	0xFD8
  3158                           
  3159 ;; *************** function _cursor_displacement *****************
  3160 ;; Defined at:
  3161 ;;		line 181 in file "main.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;		None               void
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3179 ;;Total ram usage:        1 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    3
  3182 ;; This function calls:
  3183 ;;		_lcd_gotoxy
  3184 ;; This function is called by:
  3185 ;;		_button_number
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text12
  3190  00EA50                     __ptext12:
  3191                           	opt stack 0
  3192  00EA50                     _cursor_displacement:
  3193                           	opt stack 25
  3194                           
  3195                           ;main.c: 183: if(cursor_horizontal_position == 8){
  3196                           
  3197                           ; BSR set to: 15
  3198                           ;incstack = 0
  3199  00EA50  0E08               	movlw	8
  3200  00EA52  1833               	xorwf	_cursor_horizontal_position,w,c
  3201  00EA54  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3202  00EA56  A4D8               	btfss	status,2,c
  3203  00EA58  D005               	goto	l3705
  3204                           
  3205                           ;main.c: 184: cursor_horizontal_position = 0;
  3206  00EA5A  0E00               	movlw	0
  3207  00EA5C  6E34               	movwf	_cursor_horizontal_position+1,c
  3208  00EA5E  0E00               	movlw	0
  3209  00EA60  6E33               	movwf	_cursor_horizontal_position,c
  3210                           
  3211                           ;main.c: 185: }
  3212  00EA62  D00D               	goto	l220
  3213  00EA64                     l3705:
  3214                           
  3215                           ;main.c: 186: else if (cursor_horizontal_position == 2 || cursor_horizontal_position == 
      +                          5){
  3216  00EA64  0E02               	movlw	2
  3217  00EA66  1833               	xorwf	_cursor_horizontal_position,w,c
  3218  00EA68  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3219  00EA6A  B4D8               	btfsc	status,2,c
  3220  00EA6C  D005               	goto	l3709
  3221  00EA6E  0E05               	movlw	5
  3222  00EA70  1833               	xorwf	_cursor_horizontal_position,w,c
  3223  00EA72  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3224  00EA74  A4D8               	btfss	status,2,c
  3225  00EA76  D003               	goto	l220
  3226  00EA78                     l3709:
  3227                           
  3228                           ;main.c: 187: cursor_horizontal_position++;
  3229  00EA78  4A33               	infsnz	_cursor_horizontal_position,f,c
  3230  00EA7A  2A34               	incf	_cursor_horizontal_position+1,f,c
  3231  00EA7C  D000               	goto	l220
  3232  00EA7E                     l220:
  3233                           
  3234                           ;main.c: 188: }
  3235                           ;main.c: 190: cursor_horizontal_position++;
  3236  00EA7E  4A33               	infsnz	_cursor_horizontal_position,f,c
  3237  00EA80  2A34               	incf	_cursor_horizontal_position+1,f,c
  3238                           
  3239                           ;main.c: 191: lcd_gotoxy(cursor_horizontal_position, 2);
  3240  00EA82  0E02               	movlw	2
  3241  00EA84  6E05               	movwf	lcd_gotoxy@y,c
  3242  00EA86  5033               	movf	_cursor_horizontal_position,w,c
  3243  00EA88  EC79  F071         	call	_lcd_gotoxy
  3244                           
  3245                           ;main.c: 192: _delay((unsigned long)((98)*(8000000/4000.0)));
  3246  00EA8C  0EFF               	movlw	255
  3247  00EA8E  6E08               	movwf	??_cursor_displacement& (0+255),c
  3248  00EA90  0E8A               	movlw	138
  3249  00EA92                     u2747:
  3250  00EA92  2EE8               	decfsz	wreg,f,c
  3251  00EA94  D7FE               	goto	u2747
  3252  00EA96  2E08               	decfsz	??_cursor_displacement& (0+255),f,c
  3253  00EA98  D7FC               	goto	u2747
  3254  00EA9A  D000               	nop2	
  3255  00EA9C  0012               	return		;funcret
  3256  00EA9E                     __end_of_cursor_displacement:
  3257                           	opt stack 0
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           prodh	equ	0xFF4
  3263                           prodl	equ	0xFF3
  3264                           intcon	equ	0xFF2
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           indf1	equ	0xFE7
  3268                           postdec1	equ	0xFE5
  3269                           fsr1h	equ	0xFE2
  3270                           fsr1l	equ	0xFE1
  3271                           indf2	equ	0xFDF
  3272                           fsr2h	equ	0xFDA
  3273                           fsr2l	equ	0xFD9
  3274                           status	equ	0xFD8
  3275                           
  3276 ;; *************** function _button_hash *****************
  3277 ;; Defined at:
  3278 ;;		line 602 in file "main.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;		None               void
  3285 ;; Registers used:
  3286 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3296 ;;Total ram usage:        0 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    9
  3299 ;; This function calls:
  3300 ;;		_activity_home
  3301 ;;		_pin_input_validator
  3302 ;;		_pin_set
  3303 ;;		_reset_home_callback
  3304 ;; This function is called by:
  3305 ;;		_keyboard_control
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text13
  3310  00E562                     __ptext13:
  3311                           	opt stack 0
  3312  00E562                     _button_hash:
  3313                           	opt stack 20
  3314                           
  3315                           ;main.c: 604: reset_home_callback();
  3316                           
  3317                           ;incstack = 0
  3318  00E562  ECF4  F070         	call	_reset_home_callback	;wreg free
  3319                           
  3320                           ;main.c: 606: if(activity == 1){
  3321  00E566  0429               	decf	_activity,w,c
  3322  00E568  102A               	iorwf	_activity+1,w,c
  3323  00E56A  A4D8               	btfss	status,2,c
  3324  00E56C  D003               	goto	l4071
  3325                           
  3326                           ;main.c: 607: pin_input_validator();
  3327  00E56E  ECB4  F071         	call	_pin_input_validator	;wreg free
  3328                           
  3329                           ;main.c: 608: }
  3330  00E572  0012               	return	
  3331  00E574                     l4071:
  3332                           
  3333                           ;main.c: 609: else if(activity == 6){
  3334  00E574  0E06               	movlw	6
  3335  00E576  1829               	xorwf	_activity,w,c
  3336  00E578  102A               	iorwf	_activity+1,w,c
  3337  00E57A  A4D8               	btfss	status,2,c
  3338  00E57C  D003               	goto	l4075
  3339                           
  3340                           ;main.c: 610: pin_set();
  3341  00E57E  EC3C  F071         	call	_pin_set	;wreg free
  3342                           
  3343                           ;main.c: 611: }
  3344  00E582  0012               	return	
  3345  00E584                     l4075:
  3346                           
  3347                           ;main.c: 612: else if(activity == 10 || activity == 11){
  3348  00E584  0E0A               	movlw	10
  3349  00E586  1829               	xorwf	_activity,w,c
  3350  00E588  102A               	iorwf	_activity+1,w,c
  3351  00E58A  B4D8               	btfsc	status,2,c
  3352  00E58C  D005               	goto	l4079
  3353  00E58E  0E0B               	movlw	11
  3354  00E590  1829               	xorwf	_activity,w,c
  3355  00E592  102A               	iorwf	_activity+1,w,c
  3356  00E594  A4D8               	btfss	status,2,c
  3357  00E596  0012               	return	
  3358  00E598                     l4079:
  3359                           
  3360                           ;main.c: 613: activity_home();
  3361  00E598  EC9F  F071         	call	_activity_home	;wreg free
  3362  00E59C  0012               	return	
  3363  00E59E  0012               	return		;funcret
  3364  00E5A0                     __end_of_button_hash:
  3365                           	opt stack 0
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           prodh	equ	0xFF4
  3371                           prodl	equ	0xFF3
  3372                           intcon	equ	0xFF2
  3373                           postinc0	equ	0xFEE
  3374                           wreg	equ	0xFE8
  3375                           indf1	equ	0xFE7
  3376                           postdec1	equ	0xFE5
  3377                           fsr1h	equ	0xFE2
  3378                           fsr1l	equ	0xFE1
  3379                           indf2	equ	0xFDF
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           status	equ	0xFD8
  3383                           
  3384 ;; *************** function _pin_set *****************
  3385 ;; Defined at:
  3386 ;;		line 40 in file "Unimic/unmc_01/sources/pin.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    7
  3407 ;; This function calls:
  3408 ;;		_activity_home
  3409 ;;		_strcpy
  3410 ;; This function is called by:
  3411 ;;		_button_hash
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text14
  3416  00E278                     __ptext14:
  3417                           	opt stack 0
  3418  00E278                     _pin_set:
  3419                           	opt stack 21
  3420                           
  3421                           ;pin.c: 42: strcpy(pin, pin_input);
  3422                           
  3423                           ;incstack = 0
  3424  00E278  0E9A               	movlw	low _pin
  3425  00E27A  6E01               	movwf	strcpy@to,c
  3426  00E27C  0E00               	movlw	high _pin
  3427  00E27E  6E02               	movwf	strcpy@to+1,c
  3428  00E280  0E9F               	movlw	low _pin_input
  3429  00E282  6E03               	movwf	strcpy@from,c
  3430  00E284  0E00               	movlw	high _pin_input
  3431  00E286  6E04               	movwf	strcpy@from+1,c
  3432  00E288  ECD8  F073         	call	_strcpy	;wreg free
  3433                           
  3434                           ;pin.c: 43: activity_home();
  3435  00E28C  EC9F  F071         	call	_activity_home	;wreg free
  3436  00E290  0012               	return		;funcret
  3437  00E292                     __end_of_pin_set:
  3438                           	opt stack 0
  3439                           tblptru	equ	0xFF8
  3440                           tblptrh	equ	0xFF7
  3441                           tblptrl	equ	0xFF6
  3442                           tablat	equ	0xFF5
  3443                           prodh	equ	0xFF4
  3444                           prodl	equ	0xFF3
  3445                           intcon	equ	0xFF2
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           indf1	equ	0xFE7
  3449                           postdec1	equ	0xFE5
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           indf2	equ	0xFDF
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _pin_input_validator *****************
  3458 ;; Defined at:
  3459 ;;		line 47 in file "Unimic/unmc_01/sources/pin.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;		None               void
  3466 ;; Registers used:
  3467 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;Total ram usage:        0 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    8
  3480 ;; This function calls:
  3481 ;;		_activity_menu
  3482 ;;		_activity_pin
  3483 ;;		_strcmp
  3484 ;; This function is called by:
  3485 ;;		_button_hash
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text15
  3490  00E368                     __ptext15:
  3491                           	opt stack 0
  3492  00E368                     _pin_input_validator:
  3493                           	opt stack 20
  3494                           
  3495                           ;pin.c: 49: if( strcmp(pin, pin_input) == 0 ){
  3496                           
  3497                           ;incstack = 0
  3498  00E368  0E9A               	movlw	low _pin
  3499  00E36A  6E01               	movwf	strcmp@s1,c
  3500  00E36C  0E00               	movlw	high _pin
  3501  00E36E  6E02               	movwf	strcmp@s1+1,c
  3502  00E370  0E9F               	movlw	low _pin_input
  3503  00E372  6E03               	movwf	strcmp@s2,c
  3504  00E374  0E00               	movlw	high _pin_input
  3505  00E376  6E04               	movwf	strcmp@s2+1,c
  3506  00E378  EC01  F075         	call	_strcmp	;wreg free
  3507  00E37C  5001               	movf	?_strcmp,w,c
  3508  00E37E  1002               	iorwf	?_strcmp+1,w,c
  3509  00E380  A4D8               	btfss	status,2,c
  3510  00E382  D003               	goto	l3913
  3511                           
  3512                           ;pin.c: 50: activity_menu();
  3513  00E384  ECFE  F078         	call	_activity_menu	;wreg free
  3514                           
  3515                           ;pin.c: 51: }
  3516  00E388  0012               	return	
  3517  00E38A                     l3913:
  3518                           
  3519                           ;pin.c: 52: else {
  3520                           ;pin.c: 53: activity_pin();
  3521  00E38A  ECB3  F074         	call	_activity_pin	;wreg free
  3522  00E38E  0012               	return	
  3523  00E390  0012               	return		;funcret
  3524  00E392                     __end_of_pin_input_validator:
  3525                           	opt stack 0
  3526                           tblptru	equ	0xFF8
  3527                           tblptrh	equ	0xFF7
  3528                           tblptrl	equ	0xFF6
  3529                           tablat	equ	0xFF5
  3530                           prodh	equ	0xFF4
  3531                           prodl	equ	0xFF3
  3532                           intcon	equ	0xFF2
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           indf1	equ	0xFE7
  3536                           postdec1	equ	0xFE5
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           indf2	equ	0xFDF
  3540                           fsr2h	equ	0xFDA
  3541                           fsr2l	equ	0xFD9
  3542                           status	equ	0xFD8
  3543                           
  3544 ;; *************** function _strcmp *****************
  3545 ;; Defined at:
  3546 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  3549 ;;		 -> pin(5), 
  3550 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  3551 ;;		 -> pin_input(5), 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  r               1    5[COMRAM] char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  2    0[COMRAM] int 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;Total ram usage:        6 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_pin_input_validator
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text16
  3577  00EA02                     __ptext16:
  3578                           	opt stack 0
  3579  00EA02                     _strcmp:
  3580                           	opt stack 27
  3581                           
  3582                           ;incstack = 0
  3583  00EA02  D005               	goto	l3691
  3584  00EA04                     l3689:
  3585  00EA04  4A01               	infsnz	strcmp@s1,f,c
  3586  00EA06  2A02               	incf	strcmp@s1+1,f,c
  3587  00EA08  4A03               	infsnz	strcmp@s2,f,c
  3588  00EA0A  2A04               	incf	strcmp@s2+1,f,c
  3589  00EA0C  D000               	goto	l3691
  3590  00EA0E                     l3691:
  3591  00EA0E  C001  FFD9         	movff	strcmp@s1,fsr2l
  3592  00EA12  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  3593  00EA16  50DF               	movf	indf2,w,c
  3594  00EA18  6E05               	movwf	??_strcmp& (0+255),c
  3595  00EA1A  C003  FFD9         	movff	strcmp@s2,fsr2l
  3596  00EA1E  C004  FFDA         	movff	strcmp@s2+1,fsr2h
  3597  00EA22  50DF               	movf	indf2,w,c
  3598  00EA24  0800               	sublw	0
  3599  00EA26  2405               	addwf	??_strcmp,w,c
  3600  00EA28  6E06               	movwf	strcmp@r,c
  3601  00EA2A  5006               	movf	strcmp@r,w,c
  3602  00EA2C  A4D8               	btfss	status,2,c
  3603  00EA2E  D009               	goto	l3695
  3604  00EA30  C001  FFD9         	movff	strcmp@s1,fsr2l
  3605  00EA34  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  3606  00EA38  50DF               	movf	indf2,w,c
  3607  00EA3A  B4D8               	btfsc	status,2,c
  3608  00EA3C  D002               	goto	l3695
  3609  00EA3E  D7E2               	goto	l3689
  3610  00EA40  D000               	goto	l3695
  3611  00EA42                     l3695:
  3612  00EA42  5006               	movf	strcmp@r,w,c
  3613  00EA44  6E01               	movwf	?_strcmp,c
  3614  00EA46  6A02               	clrf	?_strcmp+1,c
  3615  00EA48  BE01               	btfsc	?_strcmp,7,c
  3616  00EA4A  0602               	decf	?_strcmp+1,f,c
  3617  00EA4C  0012               	return	
  3618  00EA4E  0012               	return		;funcret
  3619  00EA50                     __end_of_strcmp:
  3620                           	opt stack 0
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           prodh	equ	0xFF4
  3626                           prodl	equ	0xFF3
  3627                           intcon	equ	0xFF2
  3628                           postinc0	equ	0xFEE
  3629                           wreg	equ	0xFE8
  3630                           indf1	equ	0xFE7
  3631                           postdec1	equ	0xFE5
  3632                           fsr1h	equ	0xFE2
  3633                           fsr1l	equ	0xFE1
  3634                           indf2	equ	0xFDF
  3635                           fsr2h	equ	0xFDA
  3636                           fsr2l	equ	0xFD9
  3637                           status	equ	0xFD8
  3638                           
  3639 ;; *************** function _button_asterisk *****************
  3640 ;; Defined at:
  3641 ;;		line 595 in file "main.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;		None               void
  3648 ;; Registers used:
  3649 ;;		cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    1
  3662 ;; This function calls:
  3663 ;;		_reset_home_callback
  3664 ;; This function is called by:
  3665 ;;		_keyboard_control
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text17
  3670  00E1E2                     __ptext17:
  3671                           	opt stack 0
  3672  00E1E2                     _button_asterisk:
  3673                           	opt stack 28
  3674                           
  3675                           ;main.c: 597: reset_home_callback();
  3676                           
  3677                           ;incstack = 0
  3678  00E1E2  ECF4  F070         	call	_reset_home_callback	;wreg free
  3679  00E1E6  0012               	return		;funcret
  3680  00E1E8                     __end_of_button_asterisk:
  3681                           	opt stack 0
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           postinc0	equ	0xFEE
  3690                           wreg	equ	0xFE8
  3691                           indf1	equ	0xFE7
  3692                           postdec1	equ	0xFE5
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           indf2	equ	0xFDF
  3696                           fsr2h	equ	0xFDA
  3697                           fsr2l	equ	0xFD9
  3698                           status	equ	0xFD8
  3699                           
  3700 ;; *************** function _button_D *****************
  3701 ;; Defined at:
  3702 ;;		line 587 in file "main.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;		None               void
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    7
  3723 ;; This function calls:
  3724 ;;		_activity_home
  3725 ;;		_reset_home_callback
  3726 ;; This function is called by:
  3727 ;;		_keyboard_control
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text18
  3732  00E1F2                     __ptext18:
  3733                           	opt stack 0
  3734  00E1F2                     _button_D:
  3735                           	opt stack 22
  3736                           
  3737                           ;main.c: 590: reset_home_callback();
  3738                           
  3739                           ;incstack = 0
  3740  00E1F2  ECF4  F070         	call	_reset_home_callback	;wreg free
  3741                           
  3742                           ;main.c: 591: activity_home();
  3743  00E1F6  EC9F  F071         	call	_activity_home	;wreg free
  3744  00E1FA  0012               	return		;funcret
  3745  00E1FC                     __end_of_button_D:
  3746                           	opt stack 0
  3747                           tblptru	equ	0xFF8
  3748                           tblptrh	equ	0xFF7
  3749                           tblptrl	equ	0xFF6
  3750                           tablat	equ	0xFF5
  3751                           prodh	equ	0xFF4
  3752                           prodl	equ	0xFF3
  3753                           intcon	equ	0xFF2
  3754                           postinc0	equ	0xFEE
  3755                           wreg	equ	0xFE8
  3756                           indf1	equ	0xFE7
  3757                           postdec1	equ	0xFE5
  3758                           fsr1h	equ	0xFE2
  3759                           fsr1l	equ	0xFE1
  3760                           indf2	equ	0xFDF
  3761                           fsr2h	equ	0xFDA
  3762                           fsr2l	equ	0xFD9
  3763                           status	equ	0xFD8
  3764                           
  3765 ;; *************** function _button_C *****************
  3766 ;; Defined at:
  3767 ;;		line 576 in file "main.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;		None               void
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    8
  3788 ;; This function calls:
  3789 ;;		_activity_menu
  3790 ;;		_reset_home_callback
  3791 ;; This function is called by:
  3792 ;;		_keyboard_control
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text19
  3797  00E292                     __ptext19:
  3798                           	opt stack 0
  3799  00E292                     _button_C:
  3800                           	opt stack 21
  3801                           
  3802                           ;main.c: 579: reset_home_callback();
  3803                           
  3804                           ;incstack = 0
  3805  00E292  ECF4  F070         	call	_reset_home_callback	;wreg free
  3806                           
  3807                           ;main.c: 581: if(activity != 0 && activity != 1){
  3808  00E296  5029               	movf	_activity,w,c
  3809  00E298  102A               	iorwf	_activity+1,w,c
  3810  00E29A  B4D8               	btfsc	status,2,c
  3811  00E29C  0012               	return	
  3812  00E29E  0429               	decf	_activity,w,c
  3813  00E2A0  102A               	iorwf	_activity+1,w,c
  3814  00E2A2  B4D8               	btfsc	status,2,c
  3815  00E2A4  0012               	return	
  3816                           
  3817                           ;main.c: 582: activity_menu();
  3818  00E2A6  ECFE  F078         	call	_activity_menu	;wreg free
  3819  00E2AA  0012               	return	
  3820  00E2AC  0012               	return		;funcret
  3821  00E2AE                     __end_of_button_C:
  3822                           	opt stack 0
  3823                           tblptru	equ	0xFF8
  3824                           tblptrh	equ	0xFF7
  3825                           tblptrl	equ	0xFF6
  3826                           tablat	equ	0xFF5
  3827                           prodh	equ	0xFF4
  3828                           prodl	equ	0xFF3
  3829                           intcon	equ	0xFF2
  3830                           postinc0	equ	0xFEE
  3831                           wreg	equ	0xFE8
  3832                           indf1	equ	0xFE7
  3833                           postdec1	equ	0xFE5
  3834                           fsr1h	equ	0xFE2
  3835                           fsr1l	equ	0xFE1
  3836                           indf2	equ	0xFDF
  3837                           fsr2h	equ	0xFDA
  3838                           fsr2l	equ	0xFD9
  3839                           status	equ	0xFD8
  3840                           
  3841 ;; *************** function _activity_menu *****************
  3842 ;; Defined at:
  3843 ;;		line 117 in file "main.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;		None               void
  3850 ;; Registers used:
  3851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3861 ;;Total ram usage:        0 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    7
  3864 ;; This function calls:
  3865 ;;		_lcd_init
  3866 ;;		_lcd_write
  3867 ;;		_menu_selector_0
  3868 ;; This function is called by:
  3869 ;;		_button_C
  3870 ;;		_pin_input_validator
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text20
  3875  00F1FC                     __ptext20:
  3876                           	opt stack 0
  3877  00F1FC                     _activity_menu:
  3878                           	opt stack 20
  3879                           
  3880                           ;main.c: 119: activity = 2;
  3881                           
  3882                           ;incstack = 0
  3883  00F1FC  0E00               	movlw	0
  3884  00F1FE  6E2A               	movwf	_activity+1,c
  3885  00F200  0E02               	movlw	2
  3886  00F202  6E29               	movwf	_activity,c
  3887                           
  3888                           ;main.c: 120: lcd_init();
  3889  00F204  EC3C  F078         	call	_lcd_init	;wreg free
  3890                           
  3891                           ;main.c: 121: lcd_write(2,1,"Activar");
  3892  00F208  0E00               	movlw	0
  3893  00F20A  6E0C               	movwf	lcd_write@column+1,c
  3894  00F20C  0E02               	movlw	2
  3895  00F20E  6E0B               	movwf	lcd_write@column,c
  3896  00F210  0E00               	movlw	0
  3897  00F212  6E0E               	movwf	lcd_write@row+1,c
  3898  00F214  0E01               	movlw	1
  3899  00F216  6E0D               	movwf	lcd_write@row,c
  3900  00F218  0E65               	movlw	low STR_2
  3901  00F21A  6E0F               	movwf	lcd_write@string,c
  3902  00F21C  0EFF               	movlw	high STR_2
  3903  00F21E  6E10               	movwf	lcd_write@string+1,c
  3904  00F220  EC30  F071         	call	_lcd_write	;wreg free
  3905                           
  3906                           ;main.c: 122: lcd_write(2,2,"Reloj");
  3907  00F224  0E00               	movlw	0
  3908  00F226  6E0C               	movwf	lcd_write@column+1,c
  3909  00F228  0E02               	movlw	2
  3910  00F22A  6E0B               	movwf	lcd_write@column,c
  3911  00F22C  0E00               	movlw	0
  3912  00F22E  6E0E               	movwf	lcd_write@row+1,c
  3913  00F230  0E02               	movlw	2
  3914  00F232  6E0D               	movwf	lcd_write@row,c
  3915  00F234  0EBF               	movlw	low STR_3
  3916  00F236  6E0F               	movwf	lcd_write@string,c
  3917  00F238  0EFF               	movlw	high STR_3
  3918  00F23A  6E10               	movwf	lcd_write@string+1,c
  3919  00F23C  EC30  F071         	call	_lcd_write	;wreg free
  3920                           
  3921                           ;main.c: 123: lcd_write(10,1,"Pin");
  3922  00F240  0E00               	movlw	0
  3923  00F242  6E0C               	movwf	lcd_write@column+1,c
  3924  00F244  0E0A               	movlw	10
  3925  00F246  6E0B               	movwf	lcd_write@column,c
  3926  00F248  0E00               	movlw	0
  3927  00F24A  6E0E               	movwf	lcd_write@row+1,c
  3928  00F24C  0E01               	movlw	1
  3929  00F24E  6E0D               	movwf	lcd_write@row,c
  3930  00F250  0EE7               	movlw	low STR_4
  3931  00F252  6E0F               	movwf	lcd_write@string,c
  3932  00F254  0EFF               	movlw	high STR_4
  3933  00F256  6E10               	movwf	lcd_write@string+1,c
  3934  00F258  EC30  F071         	call	_lcd_write	;wreg free
  3935                           
  3936                           ;main.c: 124: lcd_write(10,2,"Alarma");
  3937  00F25C  0E00               	movlw	0
  3938  00F25E  6E0C               	movwf	lcd_write@column+1,c
  3939  00F260  0E0A               	movlw	10
  3940  00F262  6E0B               	movwf	lcd_write@column,c
  3941  00F264  0E00               	movlw	0
  3942  00F266  6E0E               	movwf	lcd_write@row+1,c
  3943  00F268  0E02               	movlw	2
  3944  00F26A  6E0D               	movwf	lcd_write@row,c
  3945  00F26C  0EA5               	movlw	low STR_5
  3946  00F26E  6E0F               	movwf	lcd_write@string,c
  3947  00F270  0EFF               	movlw	high STR_5
  3948  00F272  6E10               	movwf	lcd_write@string+1,c
  3949  00F274  EC30  F071         	call	_lcd_write	;wreg free
  3950                           
  3951                           ;main.c: 125: menu_selector_0();
  3952  00F278  ECF0  F072         	call	_menu_selector_0	;wreg free
  3953  00F27C  0012               	return		;funcret
  3954  00F27E                     __end_of_activity_menu:
  3955                           	opt stack 0
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           postinc0	equ	0xFEE
  3964                           wreg	equ	0xFE8
  3965                           indf1	equ	0xFE7
  3966                           postdec1	equ	0xFE5
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function _button_B *****************
  3975 ;; Defined at:
  3976 ;;		line 538 in file "main.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;		None               void
  3983 ;; Registers used:
  3984 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3994 ;;Total ram usage:        2 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    9
  3997 ;; This function calls:
  3998 ;;		_button_B_menu
  3999 ;;		_button_B_submenu_activation
  4000 ;;		_button_B_submenu_date_and_time_config
  4001 ;;		_button_B_submenu_pin_config
  4002 ;;		_button_B_submenu_siren_config
  4003 ;;		_button_B_submenu_siren_tone
  4004 ;;		_button_B_submenu_siren_volume
  4005 ;;		_reset_home_callback
  4006 ;; This function is called by:
  4007 ;;		_keyboard_control
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text21
  4012  00EF16                     __ptext21:
  4013                           	opt stack 0
  4014  00EF16                     _button_B:
  4015                           	opt stack 20
  4016                           
  4017                           ;main.c: 540: reset_home_callback();
  4018                           
  4019                           ;incstack = 0
  4020  00EF16  ECF4  F070         	call	_reset_home_callback	;wreg free
  4021                           
  4022                           ;main.c: 542: switch(activity){
  4023  00EF1A  D015               	goto	l4045
  4024  00EF1C                     l4029:
  4025                           
  4026                           ;main.c: 545: button_B_menu();
  4027  00EF1C  EC1F  F074         	call	_button_B_menu	;wreg free
  4028                           
  4029                           ;main.c: 546: break;
  4030  00EF20  0012               	return	
  4031  00EF22                     l4031:
  4032                           
  4033                           ;main.c: 549: button_B_submenu_date_and_time_config();
  4034  00EF22  ECF7  F071         	call	_button_B_submenu_date_and_time_config	;wreg free
  4035                           
  4036                           ;main.c: 550: break;
  4037  00EF26  0012               	return	
  4038  00EF28                     l4033:
  4039                           
  4040                           ;main.c: 553: button_B_submenu_activation();
  4041  00EF28  EC5A  F072         	call	_button_B_submenu_activation	;wreg free
  4042                           
  4043                           ;main.c: 554: break;
  4044  00EF2C  0012               	return	
  4045  00EF2E                     l4035:
  4046                           
  4047                           ;main.c: 557: button_B_submenu_pin_config();
  4048  00EF2E  EC40  F072         	call	_button_B_submenu_pin_config	;wreg free
  4049                           
  4050                           ;main.c: 558: break;
  4051  00EF32  0012               	return	
  4052  00EF34                     l4037:
  4053                           
  4054                           ;main.c: 561: button_B_submenu_siren_config();
  4055  00EF34  EC0F  F072         	call	_button_B_submenu_siren_config	;wreg free
  4056                           
  4057                           ;main.c: 562: break;
  4058  00EF38  0012               	return	
  4059  00EF3A                     l4039:
  4060                           
  4061                           ;main.c: 565: button_B_submenu_siren_volume();
  4062  00EF3A  EC94  F072         	call	_button_B_submenu_siren_volume	;wreg free
  4063                           
  4064                           ;main.c: 566: break;
  4065  00EF3E  0012               	return	
  4066  00EF40                     l4041:
  4067                           
  4068                           ;main.c: 569: button_B_submenu_siren_tone();
  4069  00EF40  EC77  F072         	call	_button_B_submenu_siren_tone	;wreg free
  4070                           
  4071                           ;main.c: 572: }
  4072                           
  4073                           ;main.c: 570: break;
  4074  00EF44  0012               	return	
  4075  00EF46                     l4045:
  4076  00EF46  C029  F026         	movff	_activity,??_button_B
  4077  00EF4A  C02A  F027         	movff	_activity+1,??_button_B+1
  4078                           
  4079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4080                           ; Switch size 1, requested type "space"
  4081                           ; Number of cases is 1, Range of values is 0 to 0
  4082                           ; switch strategies available:
  4083                           ; Name         Instructions Cycles
  4084                           ; simple_byte            4     3 (average)
  4085                           ;	Chosen strategy is simple_byte
  4086  00EF4E  5027               	movf	??_button_B+1,w,c
  4087  00EF50  0A00               	xorlw	0	; case 0
  4088  00EF52  A4D8               	btfss	status,2,c
  4089  00EF54  0012               	return	
  4090                           
  4091                           ; Switch size 1, requested type "space"
  4092                           ; Number of cases is 7, Range of values is 2 to 9
  4093                           ; switch strategies available:
  4094                           ; Name         Instructions Cycles
  4095                           ; simple_byte           22    12 (average)
  4096                           ;	Chosen strategy is simple_byte
  4097  00EF56  5026               	movf	??_button_B,w,c
  4098  00EF58  0A02               	xorlw	2	; case 2
  4099  00EF5A  B4D8               	btfsc	status,2,c
  4100  00EF5C  D7DF               	goto	l4029
  4101  00EF5E  0A01               	xorlw	1	; case 3
  4102  00EF60  B4D8               	btfsc	status,2,c
  4103  00EF62  D7DF               	goto	l4031
  4104  00EF64  0A07               	xorlw	7	; case 4
  4105  00EF66  B4D8               	btfsc	status,2,c
  4106  00EF68  D7DF               	goto	l4033
  4107  00EF6A  0A01               	xorlw	1	; case 5
  4108  00EF6C  B4D8               	btfsc	status,2,c
  4109  00EF6E  D7DF               	goto	l4035
  4110  00EF70  0A02               	xorlw	2	; case 7
  4111  00EF72  B4D8               	btfsc	status,2,c
  4112  00EF74  D7DF               	goto	l4037
  4113  00EF76  0A0F               	xorlw	15	; case 8
  4114  00EF78  B4D8               	btfsc	status,2,c
  4115  00EF7A  D7DF               	goto	l4039
  4116  00EF7C  0A01               	xorlw	1	; case 9
  4117  00EF7E  A4D8               	btfss	status,2,c
  4118  00EF80  0012               	return	
  4119  00EF82  D7DE               	goto	l4041
  4120  00EF84  0012               	return		;funcret
  4121  00EF86                     __end_of_button_B:
  4122                           	opt stack 0
  4123                           tblptru	equ	0xFF8
  4124                           tblptrh	equ	0xFF7
  4125                           tblptrl	equ	0xFF6
  4126                           tablat	equ	0xFF5
  4127                           prodh	equ	0xFF4
  4128                           prodl	equ	0xFF3
  4129                           intcon	equ	0xFF2
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           indf1	equ	0xFE7
  4133                           postdec1	equ	0xFE5
  4134                           fsr1h	equ	0xFE2
  4135                           fsr1l	equ	0xFE1
  4136                           indf2	equ	0xFDF
  4137                           fsr2h	equ	0xFDA
  4138                           fsr2l	equ	0xFD9
  4139                           status	equ	0xFD8
  4140                           
  4141 ;; *************** function _button_B_submenu_siren_volume *****************
  4142 ;; Defined at:
  4143 ;;		line 486 in file "main.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;		None               void
  4150 ;; Registers used:
  4151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4161 ;;Total ram usage:        2 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    7
  4164 ;; This function calls:
  4165 ;;		_activity_home
  4166 ;; This function is called by:
  4167 ;;		_button_B
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text22
  4172  00E528                     __ptext22:
  4173                           	opt stack 0
  4174  00E528                     _button_B_submenu_siren_volume:
  4175                           	opt stack 21
  4176                           
  4177                           ;main.c: 488: switch(submenu_selected){
  4178                           
  4179                           ;incstack = 0
  4180  00E528  D009               	goto	l3871
  4181  00E52A                     l3865:
  4182                           
  4183                           ;main.c: 491: alarm_volume = 0;
  4184  00E52A  0E00               	movlw	0
  4185  00E52C  6E2E               	movwf	_alarm_volume+1,c
  4186  00E52E  0E00               	movlw	0
  4187  00E530  D003               	goto	L1
  4188  00E532                     l3867:
  4189                           
  4190                           ;main.c: 495: alarm_volume = 1;
  4191  00E532  0E00               	movlw	0
  4192  00E534  6E2E               	movwf	_alarm_volume+1,c
  4193  00E536  0E01               	movlw	1
  4194  00E538                     L1:
  4195  00E538  6E2D               	movwf	_alarm_volume,c
  4196                           
  4197                           ;main.c: 498: }
  4198                           
  4199                           ;main.c: 496: break;
  4200  00E53A  D010               	goto	l3873
  4201  00E53C                     l3871:
  4202  00E53C  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_volume
  4203  00E540  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_volume+1
  4204                           
  4205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4206                           ; Switch size 1, requested type "space"
  4207                           ; Number of cases is 1, Range of values is 0 to 0
  4208                           ; switch strategies available:
  4209                           ; Name         Instructions Cycles
  4210                           ; simple_byte            4     3 (average)
  4211                           ;	Chosen strategy is simple_byte
  4212  00E544  5012               	movf	??_button_B_submenu_siren_volume+1,w,c
  4213  00E546  0A00               	xorlw	0	; case 0
  4214  00E548  A4D8               	btfss	status,2,c
  4215  00E54A  D008               	goto	l3873
  4216                           
  4217                           ; Switch size 1, requested type "space"
  4218                           ; Number of cases is 2, Range of values is 0 to 1
  4219                           ; switch strategies available:
  4220                           ; Name         Instructions Cycles
  4221                           ; simple_byte            7     4 (average)
  4222                           ;	Chosen strategy is simple_byte
  4223  00E54C  5011               	movf	??_button_B_submenu_siren_volume,w,c
  4224  00E54E  0A00               	xorlw	0	; case 0
  4225  00E550  B4D8               	btfsc	status,2,c
  4226  00E552  D7EB               	goto	l3865
  4227  00E554  0A01               	xorlw	1	; case 1
  4228  00E556  B4D8               	btfsc	status,2,c
  4229  00E558  D7EC               	goto	l3867
  4230  00E55A  D000               	goto	l3873
  4231  00E55C                     l3873:
  4232                           
  4233                           ;main.c: 500: activity_home();
  4234  00E55C  EC9F  F071         	call	_activity_home	;wreg free
  4235  00E560  0012               	return		;funcret
  4236  00E562                     __end_of_button_B_submenu_siren_volume:
  4237                           	opt stack 0
  4238                           tblptru	equ	0xFF8
  4239                           tblptrh	equ	0xFF7
  4240                           tblptrl	equ	0xFF6
  4241                           tablat	equ	0xFF5
  4242                           prodh	equ	0xFF4
  4243                           prodl	equ	0xFF3
  4244                           intcon	equ	0xFF2
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           indf1	equ	0xFE7
  4248                           postdec1	equ	0xFE5
  4249                           fsr1h	equ	0xFE2
  4250                           fsr1l	equ	0xFE1
  4251                           indf2	equ	0xFDF
  4252                           fsr2h	equ	0xFDA
  4253                           fsr2l	equ	0xFD9
  4254                           status	equ	0xFD8
  4255                           
  4256 ;; *************** function _button_B_submenu_siren_tone *****************
  4257 ;; Defined at:
  4258 ;;		line 504 in file "main.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;		None               void
  4265 ;; Registers used:
  4266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;Total ram usage:        2 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    7
  4279 ;; This function calls:
  4280 ;;		_activity_home
  4281 ;; This function is called by:
  4282 ;;		_button_B
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text23
  4287  00E4EE                     __ptext23:
  4288                           	opt stack 0
  4289  00E4EE                     _button_B_submenu_siren_tone:
  4290                           	opt stack 21
  4291                           
  4292                           ;main.c: 506: switch(submenu_selected){
  4293                           
  4294                           ;incstack = 0
  4295  00E4EE  D009               	goto	l3887
  4296  00E4F0                     l3881:
  4297                           
  4298                           ;main.c: 509: alarm_tone = 0;
  4299  00E4F0  0E00               	movlw	0
  4300  00E4F2  6E2C               	movwf	_alarm_tone+1,c
  4301  00E4F4  0E00               	movlw	0
  4302  00E4F6  D003               	goto	L2
  4303  00E4F8                     l3883:
  4304                           
  4305                           ;main.c: 513: alarm_tone = 1;
  4306  00E4F8  0E00               	movlw	0
  4307  00E4FA  6E2C               	movwf	_alarm_tone+1,c
  4308  00E4FC  0E01               	movlw	1
  4309  00E4FE                     L2:
  4310  00E4FE  6E2B               	movwf	_alarm_tone,c
  4311                           
  4312                           ;main.c: 516: }
  4313                           
  4314                           ;main.c: 514: break;
  4315  00E500  D010               	goto	l3889
  4316  00E502                     l3887:
  4317  00E502  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_tone
  4318  00E506  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_tone+1
  4319                           
  4320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4321                           ; Switch size 1, requested type "space"
  4322                           ; Number of cases is 1, Range of values is 0 to 0
  4323                           ; switch strategies available:
  4324                           ; Name         Instructions Cycles
  4325                           ; simple_byte            4     3 (average)
  4326                           ;	Chosen strategy is simple_byte
  4327  00E50A  5012               	movf	??_button_B_submenu_siren_tone+1,w,c
  4328  00E50C  0A00               	xorlw	0	; case 0
  4329  00E50E  A4D8               	btfss	status,2,c
  4330  00E510  D008               	goto	l3889
  4331                           
  4332                           ; Switch size 1, requested type "space"
  4333                           ; Number of cases is 2, Range of values is 0 to 1
  4334                           ; switch strategies available:
  4335                           ; Name         Instructions Cycles
  4336                           ; simple_byte            7     4 (average)
  4337                           ;	Chosen strategy is simple_byte
  4338  00E512  5011               	movf	??_button_B_submenu_siren_tone,w,c
  4339  00E514  0A00               	xorlw	0	; case 0
  4340  00E516  B4D8               	btfsc	status,2,c
  4341  00E518  D7EB               	goto	l3881
  4342  00E51A  0A01               	xorlw	1	; case 1
  4343  00E51C  B4D8               	btfsc	status,2,c
  4344  00E51E  D7EC               	goto	l3883
  4345  00E520  D000               	goto	l3889
  4346  00E522                     l3889:
  4347                           
  4348                           ;main.c: 518: activity_home();
  4349  00E522  EC9F  F071         	call	_activity_home	;wreg free
  4350  00E526  0012               	return		;funcret
  4351  00E528                     __end_of_button_B_submenu_siren_tone:
  4352                           	opt stack 0
  4353                           tblptru	equ	0xFF8
  4354                           tblptrh	equ	0xFF7
  4355                           tblptrl	equ	0xFF6
  4356                           tablat	equ	0xFF5
  4357                           prodh	equ	0xFF4
  4358                           prodl	equ	0xFF3
  4359                           intcon	equ	0xFF2
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           indf1	equ	0xFE7
  4363                           postdec1	equ	0xFE5
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           fsr2h	equ	0xFDA
  4368                           fsr2l	equ	0xFD9
  4369                           status	equ	0xFD8
  4370                           
  4371 ;; *************** function _button_B_submenu_siren_config *****************
  4372 ;; Defined at:
  4373 ;;		line 470 in file "main.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;		None               void
  4380 ;; Registers used:
  4381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;Total ram usage:        2 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    8
  4394 ;; This function calls:
  4395 ;;		_activity_submenu_siren_tone
  4396 ;;		_activity_submenu_siren_volume
  4397 ;; This function is called by:
  4398 ;;		_button_B
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text24
  4403  00E41E                     __ptext24:
  4404                           	opt stack 0
  4405  00E41E                     _button_B_submenu_siren_config:
  4406                           	opt stack 20
  4407                           
  4408                           ;main.c: 472: switch(submenu_selected){
  4409                           
  4410                           ;incstack = 0
  4411  00E41E  D006               	goto	l3857
  4412  00E420                     l3851:
  4413                           
  4414                           ;main.c: 475: activity_submenu_siren_volume();
  4415  00E420  EC21  F077         	call	_activity_submenu_siren_volume	;wreg free
  4416                           
  4417                           ;main.c: 476: break;
  4418  00E424  0012               	return	
  4419  00E426                     l3853:
  4420                           
  4421                           ;main.c: 479: activity_submenu_siren_tone();
  4422  00E426  ECEE  F076         	call	_activity_submenu_siren_tone	;wreg free
  4423                           
  4424                           ;main.c: 482: }
  4425                           
  4426                           ;main.c: 480: break;
  4427  00E42A  0012               	return	
  4428  00E42C                     l3857:
  4429  00E42C  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_config
  4430  00E430  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_config+1
  4431                           
  4432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4433                           ; Switch size 1, requested type "space"
  4434                           ; Number of cases is 1, Range of values is 0 to 0
  4435                           ; switch strategies available:
  4436                           ; Name         Instructions Cycles
  4437                           ; simple_byte            4     3 (average)
  4438                           ;	Chosen strategy is simple_byte
  4439  00E434  5012               	movf	??_button_B_submenu_siren_config+1,w,c
  4440  00E436  0A00               	xorlw	0	; case 0
  4441  00E438  A4D8               	btfss	status,2,c
  4442  00E43A  0012               	return	
  4443                           
  4444                           ; Switch size 1, requested type "space"
  4445                           ; Number of cases is 2, Range of values is 0 to 1
  4446                           ; switch strategies available:
  4447                           ; Name         Instructions Cycles
  4448                           ; simple_byte            7     4 (average)
  4449                           ;	Chosen strategy is simple_byte
  4450  00E43C  5011               	movf	??_button_B_submenu_siren_config,w,c
  4451  00E43E  0A00               	xorlw	0	; case 0
  4452  00E440  B4D8               	btfsc	status,2,c
  4453  00E442  D7EE               	goto	l3851
  4454  00E444  0A01               	xorlw	1	; case 1
  4455  00E446  A4D8               	btfss	status,2,c
  4456  00E448  0012               	return	
  4457  00E44A  D7ED               	goto	l3853
  4458  00E44C  0012               	return		;funcret
  4459  00E44E                     __end_of_button_B_submenu_siren_config:
  4460                           	opt stack 0
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           indf1	equ	0xFE7
  4471                           postdec1	equ	0xFE5
  4472                           fsr1h	equ	0xFE2
  4473                           fsr1l	equ	0xFE1
  4474                           indf2	equ	0xFDF
  4475                           fsr2h	equ	0xFDA
  4476                           fsr2l	equ	0xFD9
  4477                           status	equ	0xFD8
  4478                           
  4479 ;; *************** function _activity_submenu_siren_volume *****************
  4480 ;; Defined at:
  4481 ;;		line 279 in file "main.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;		None               void
  4488 ;; Registers used:
  4489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    7
  4502 ;; This function calls:
  4503 ;;		_lcd_init
  4504 ;;		_lcd_write
  4505 ;;		_submenu_selector_0
  4506 ;; This function is called by:
  4507 ;;		_button_B_submenu_siren_config
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text25
  4512  00EE42                     __ptext25:
  4513                           	opt stack 0
  4514  00EE42                     _activity_submenu_siren_volume:
  4515                           	opt stack 20
  4516                           
  4517                           ;main.c: 281: activity = 8;
  4518                           
  4519                           ;incstack = 0
  4520  00EE42  0E00               	movlw	0
  4521  00EE44  6E2A               	movwf	_activity+1,c
  4522  00EE46  0E08               	movlw	8
  4523  00EE48  6E29               	movwf	_activity,c
  4524                           
  4525                           ;main.c: 282: lcd_init();
  4526  00EE4A  EC3C  F078         	call	_lcd_init	;wreg free
  4527                           
  4528                           ;main.c: 283: lcd_write(1,1,"Volumen");
  4529  00EE4E  0E00               	movlw	0
  4530  00EE50  6E0C               	movwf	lcd_write@column+1,c
  4531  00EE52  0E01               	movlw	1
  4532  00EE54  6E0B               	movwf	lcd_write@column,c
  4533  00EE56  0E00               	movlw	0
  4534  00EE58  6E0E               	movwf	lcd_write@row+1,c
  4535  00EE5A  0E01               	movlw	1
  4536  00EE5C  6E0D               	movwf	lcd_write@row,c
  4537  00EE5E  0E5D               	movlw	low STR_17
  4538  00EE60  6E0F               	movwf	lcd_write@string,c
  4539  00EE62  0EFF               	movlw	high STR_17
  4540  00EE64  6E10               	movwf	lcd_write@string+1,c
  4541  00EE66  EC30  F071         	call	_lcd_write	;wreg free
  4542                           
  4543                           ;main.c: 284: lcd_write(10,1,"Bajo");
  4544  00EE6A  0E00               	movlw	0
  4545  00EE6C  6E0C               	movwf	lcd_write@column+1,c
  4546  00EE6E  0E0A               	movlw	10
  4547  00EE70  6E0B               	movwf	lcd_write@column,c
  4548  00EE72  0E00               	movlw	0
  4549  00EE74  6E0E               	movwf	lcd_write@row+1,c
  4550  00EE76  0E01               	movlw	1
  4551  00EE78  6E0D               	movwf	lcd_write@row,c
  4552  00EE7A  0ECF               	movlw	low STR_20
  4553  00EE7C  6E0F               	movwf	lcd_write@string,c
  4554  00EE7E  0EFF               	movlw	high STR_20
  4555  00EE80  6E10               	movwf	lcd_write@string+1,c
  4556  00EE82  EC30  F071         	call	_lcd_write	;wreg free
  4557                           
  4558                           ;main.c: 285: lcd_write(10,2,"Alto");
  4559  00EE86  0E00               	movlw	0
  4560  00EE88  6E0C               	movwf	lcd_write@column+1,c
  4561  00EE8A  0E0A               	movlw	10
  4562  00EE8C  6E0B               	movwf	lcd_write@column,c
  4563  00EE8E  0E00               	movlw	0
  4564  00EE90  6E0E               	movwf	lcd_write@row+1,c
  4565  00EE92  0E02               	movlw	2
  4566  00EE94  6E0D               	movwf	lcd_write@row,c
  4567  00EE96  0ED9               	movlw	low STR_21
  4568  00EE98  6E0F               	movwf	lcd_write@string,c
  4569  00EE9A  0EFF               	movlw	high STR_21
  4570  00EE9C  6E10               	movwf	lcd_write@string+1,c
  4571  00EE9E  EC30  F071         	call	_lcd_write	;wreg free
  4572                           
  4573                           ;main.c: 286: submenu_selector_0();
  4574  00EEA2  EC74  F073         	call	_submenu_selector_0	;wreg free
  4575  00EEA6  0012               	return		;funcret
  4576  00EEA8                     __end_of_activity_submenu_siren_volume:
  4577                           	opt stack 0
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           prodh	equ	0xFF4
  4583                           prodl	equ	0xFF3
  4584                           intcon	equ	0xFF2
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           indf1	equ	0xFE7
  4588                           postdec1	equ	0xFE5
  4589                           fsr1h	equ	0xFE2
  4590                           fsr1l	equ	0xFE1
  4591                           indf2	equ	0xFDF
  4592                           fsr2h	equ	0xFDA
  4593                           fsr2l	equ	0xFD9
  4594                           status	equ	0xFD8
  4595                           
  4596 ;; *************** function _activity_submenu_siren_tone *****************
  4597 ;; Defined at:
  4598 ;;		line 290 in file "main.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;		None               void
  4605 ;; Registers used:
  4606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    7
  4619 ;; This function calls:
  4620 ;;		_lcd_init
  4621 ;;		_lcd_write
  4622 ;;		_submenu_selector_0
  4623 ;; This function is called by:
  4624 ;;		_button_B_submenu_siren_config
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text26
  4629  00EDDC                     __ptext26:
  4630                           	opt stack 0
  4631  00EDDC                     _activity_submenu_siren_tone:
  4632                           	opt stack 20
  4633                           
  4634                           ;main.c: 292: activity = 9;
  4635                           
  4636                           ;incstack = 0
  4637  00EDDC  0E00               	movlw	0
  4638  00EDDE  6E2A               	movwf	_activity+1,c
  4639  00EDE0  0E09               	movlw	9
  4640  00EDE2  6E29               	movwf	_activity,c
  4641                           
  4642                           ;main.c: 293: lcd_init();
  4643  00EDE4  EC3C  F078         	call	_lcd_init	;wreg free
  4644                           
  4645                           ;main.c: 294: lcd_write(1,1,"Tono");
  4646  00EDE8  0E00               	movlw	0
  4647  00EDEA  6E0C               	movwf	lcd_write@column+1,c
  4648  00EDEC  0E01               	movlw	1
  4649  00EDEE  6E0B               	movwf	lcd_write@column,c
  4650  00EDF0  0E00               	movlw	0
  4651  00EDF2  6E0E               	movwf	lcd_write@row+1,c
  4652  00EDF4  0E01               	movlw	1
  4653  00EDF6  6E0D               	movwf	lcd_write@row,c
  4654  00EDF8  0ED4               	movlw	low STR_18
  4655  00EDFA  6E0F               	movwf	lcd_write@string,c
  4656  00EDFC  0EFF               	movlw	high STR_18
  4657  00EDFE  6E10               	movwf	lcd_write@string+1,c
  4658  00EE00  EC30  F071         	call	_lcd_write	;wreg free
  4659                           
  4660                           ;main.c: 295: lcd_write(10,1,"Beep 1");
  4661  00EE04  0E00               	movlw	0
  4662  00EE06  6E0C               	movwf	lcd_write@column+1,c
  4663  00EE08  0E0A               	movlw	10
  4664  00EE0A  6E0B               	movwf	lcd_write@column,c
  4665  00EE0C  0E00               	movlw	0
  4666  00EE0E  6E0E               	movwf	lcd_write@row+1,c
  4667  00EE10  0E01               	movlw	1
  4668  00EE12  6E0D               	movwf	lcd_write@row,c
  4669  00EE14  0E6D               	movlw	low STR_23
  4670  00EE16  6E0F               	movwf	lcd_write@string,c
  4671  00EE18  0EFF               	movlw	high STR_23
  4672  00EE1A  6E10               	movwf	lcd_write@string+1,c
  4673  00EE1C  EC30  F071         	call	_lcd_write	;wreg free
  4674                           
  4675                           ;main.c: 296: lcd_write(10,2,"Beep 2");
  4676  00EE20  0E00               	movlw	0
  4677  00EE22  6E0C               	movwf	lcd_write@column+1,c
  4678  00EE24  0E0A               	movlw	10
  4679  00EE26  6E0B               	movwf	lcd_write@column,c
  4680  00EE28  0E00               	movlw	0
  4681  00EE2A  6E0E               	movwf	lcd_write@row+1,c
  4682  00EE2C  0E02               	movlw	2
  4683  00EE2E  6E0D               	movwf	lcd_write@row,c
  4684  00EE30  0E7B               	movlw	low STR_24
  4685  00EE32  6E0F               	movwf	lcd_write@string,c
  4686  00EE34  0EFF               	movlw	high STR_24
  4687  00EE36  6E10               	movwf	lcd_write@string+1,c
  4688  00EE38  EC30  F071         	call	_lcd_write	;wreg free
  4689                           
  4690                           ;main.c: 297: submenu_selector_0();
  4691  00EE3C  EC74  F073         	call	_submenu_selector_0	;wreg free
  4692  00EE40  0012               	return		;funcret
  4693  00EE42                     __end_of_activity_submenu_siren_tone:
  4694                           	opt stack 0
  4695                           tblptru	equ	0xFF8
  4696                           tblptrh	equ	0xFF7
  4697                           tblptrl	equ	0xFF6
  4698                           tablat	equ	0xFF5
  4699                           prodh	equ	0xFF4
  4700                           prodl	equ	0xFF3
  4701                           intcon	equ	0xFF2
  4702                           postinc0	equ	0xFEE
  4703                           wreg	equ	0xFE8
  4704                           indf1	equ	0xFE7
  4705                           postdec1	equ	0xFE5
  4706                           fsr1h	equ	0xFE2
  4707                           fsr1l	equ	0xFE1
  4708                           indf2	equ	0xFDF
  4709                           fsr2h	equ	0xFDA
  4710                           fsr2l	equ	0xFD9
  4711                           status	equ	0xFD8
  4712                           
  4713 ;; *************** function _button_B_submenu_pin_config *****************
  4714 ;; Defined at:
  4715 ;;		line 453 in file "main.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;		None               void
  4722 ;; Registers used:
  4723 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;Total ram usage:        2 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    7
  4736 ;; This function calls:
  4737 ;;		_activity_home
  4738 ;;		_activity_submenu_pin_set
  4739 ;;		_pin_reset
  4740 ;; This function is called by:
  4741 ;;		_button_B
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text27
  4746  00E480                     __ptext27:
  4747                           	opt stack 0
  4748  00E480                     _button_B_submenu_pin_config:
  4749                           	opt stack 21
  4750                           
  4751                           ;main.c: 455: switch(submenu_selected){
  4752                           
  4753                           ;incstack = 0
  4754  00E480  D008               	goto	l3843
  4755  00E482                     l3835:
  4756                           
  4757                           ;main.c: 458: activity_submenu_pin_set();
  4758  00E482  ECDA  F074         	call	_activity_submenu_pin_set	;wreg free
  4759                           
  4760                           ;main.c: 459: break;
  4761  00E486  0012               	return	
  4762  00E488                     l3837:
  4763                           
  4764                           ;main.c: 462: pin_reset();
  4765  00E488  EC25  F071         	call	_pin_reset	;wreg free
  4766                           
  4767                           ;main.c: 463: activity_home();
  4768  00E48C  EC9F  F071         	call	_activity_home	;wreg free
  4769                           
  4770                           ;main.c: 466: }
  4771                           
  4772                           ;main.c: 464: break;
  4773  00E490  0012               	return	
  4774  00E492                     l3843:
  4775  00E492  C043  F011         	movff	_submenu_selected,??_button_B_submenu_pin_config
  4776  00E496  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_pin_config+1
  4777                           
  4778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4779                           ; Switch size 1, requested type "space"
  4780                           ; Number of cases is 1, Range of values is 0 to 0
  4781                           ; switch strategies available:
  4782                           ; Name         Instructions Cycles
  4783                           ; simple_byte            4     3 (average)
  4784                           ;	Chosen strategy is simple_byte
  4785  00E49A  5012               	movf	??_button_B_submenu_pin_config+1,w,c
  4786  00E49C  0A00               	xorlw	0	; case 0
  4787  00E49E  A4D8               	btfss	status,2,c
  4788  00E4A0  0012               	return	
  4789                           
  4790                           ; Switch size 1, requested type "space"
  4791                           ; Number of cases is 2, Range of values is 0 to 1
  4792                           ; switch strategies available:
  4793                           ; Name         Instructions Cycles
  4794                           ; simple_byte            7     4 (average)
  4795                           ;	Chosen strategy is simple_byte
  4796  00E4A2  5011               	movf	??_button_B_submenu_pin_config,w,c
  4797  00E4A4  0A00               	xorlw	0	; case 0
  4798  00E4A6  B4D8               	btfsc	status,2,c
  4799  00E4A8  D7EC               	goto	l3835
  4800  00E4AA  0A01               	xorlw	1	; case 1
  4801  00E4AC  A4D8               	btfss	status,2,c
  4802  00E4AE  0012               	return	
  4803  00E4B0  D7EB               	goto	l3837
  4804  00E4B2  0012               	return		;funcret
  4805  00E4B4                     __end_of_button_B_submenu_pin_config:
  4806                           	opt stack 0
  4807                           tblptru	equ	0xFF8
  4808                           tblptrh	equ	0xFF7
  4809                           tblptrl	equ	0xFF6
  4810                           tablat	equ	0xFF5
  4811                           prodh	equ	0xFF4
  4812                           prodl	equ	0xFF3
  4813                           intcon	equ	0xFF2
  4814                           postinc0	equ	0xFEE
  4815                           wreg	equ	0xFE8
  4816                           indf1	equ	0xFE7
  4817                           postdec1	equ	0xFE5
  4818                           fsr1h	equ	0xFE2
  4819                           fsr1l	equ	0xFE1
  4820                           indf2	equ	0xFDF
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _pin_reset *****************
  4826 ;; Defined at:
  4827 ;;		line 58 in file "Unimic/unmc_01/sources/pin.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;		None               void
  4834 ;; Registers used:
  4835 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4845 ;;Total ram usage:        0 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    1
  4848 ;; This function calls:
  4849 ;;		_strcpy
  4850 ;; This function is called by:
  4851 ;;		_button_B_submenu_pin_config
  4852 ;;		_setup
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text28
  4857  00E24A                     __ptext28:
  4858                           	opt stack 0
  4859  00E24A                     _pin_reset:
  4860                           	opt stack 28
  4861                           
  4862                           ;pin.c: 60: strcpy(pin, "1234");
  4863                           
  4864                           ;incstack = 0
  4865  00E24A  0E9A               	movlw	low _pin
  4866  00E24C  6E01               	movwf	strcpy@to,c
  4867  00E24E  0E00               	movlw	high _pin
  4868  00E250  6E02               	movwf	strcpy@to+1,c
  4869  00E252  0EC5               	movlw	low STR_54
  4870  00E254  6E03               	movwf	strcpy@from,c
  4871  00E256  0EFF               	movlw	high STR_54
  4872  00E258  6E04               	movwf	strcpy@from+1,c
  4873  00E25A  ECD8  F073         	call	_strcpy	;wreg free
  4874  00E25E  0012               	return		;funcret
  4875  00E260                     __end_of_pin_reset:
  4876                           	opt stack 0
  4877                           tblptru	equ	0xFF8
  4878                           tblptrh	equ	0xFF7
  4879                           tblptrl	equ	0xFF6
  4880                           tablat	equ	0xFF5
  4881                           prodh	equ	0xFF4
  4882                           prodl	equ	0xFF3
  4883                           intcon	equ	0xFF2
  4884                           postinc0	equ	0xFEE
  4885                           wreg	equ	0xFE8
  4886                           indf1	equ	0xFE7
  4887                           postdec1	equ	0xFE5
  4888                           fsr1h	equ	0xFE2
  4889                           fsr1l	equ	0xFE1
  4890                           indf2	equ	0xFDF
  4891                           fsr2h	equ	0xFDA
  4892                           fsr2l	equ	0xFD9
  4893                           status	equ	0xFD8
  4894                           
  4895 ;; *************** function _activity_submenu_pin_set *****************
  4896 ;; Defined at:
  4897 ;;		line 29 in file "Unimic/unmc_01/sources/pin.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;		None               void
  4904 ;; Registers used:
  4905 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4915 ;;Total ram usage:        0 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    6
  4918 ;; This function calls:
  4919 ;;		_lcd_comand
  4920 ;;		_lcd_gotoxy
  4921 ;;		_lcd_init
  4922 ;;		_lcd_write
  4923 ;;		_strcpy
  4924 ;; This function is called by:
  4925 ;;		_button_B_submenu_pin_config
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text29
  4930  00E9B4                     __ptext29:
  4931                           	opt stack 0
  4932  00E9B4                     _activity_submenu_pin_set:
  4933                           	opt stack 21
  4934                           
  4935                           ;pin.c: 31: activity = 6;
  4936                           
  4937                           ;incstack = 0
  4938  00E9B4  0E00               	movlw	0
  4939  00E9B6  6E2A               	movwf	_activity+1,c
  4940  00E9B8  0E06               	movlw	6
  4941  00E9BA  6E29               	movwf	_activity,c
  4942                           
  4943                           ;pin.c: 32: strcpy(pin_input, "");
  4944  00E9BC  0E9F               	movlw	low _pin_input
  4945  00E9BE  6E01               	movwf	strcpy@to,c
  4946  00E9C0  0E00               	movlw	high _pin_input
  4947  00E9C2  6E02               	movwf	strcpy@to+1,c
  4948  00E9C4  0EF2               	movlw	low (STR_36+1)
  4949  00E9C6  6E03               	movwf	strcpy@from,c
  4950  00E9C8  0EFF               	movlw	high (STR_36+1)
  4951  00E9CA  6E04               	movwf	strcpy@from+1,c
  4952  00E9CC  ECD8  F073         	call	_strcpy	;wreg free
  4953                           
  4954                           ;pin.c: 33: lcd_init();
  4955  00E9D0  EC3C  F078         	call	_lcd_init	;wreg free
  4956                           
  4957                           ;pin.c: 34: lcd_write(1,1,"Nuevo PIN:");
  4958  00E9D4  0E00               	movlw	0
  4959  00E9D6  6E0C               	movwf	lcd_write@column+1,c
  4960  00E9D8  0E01               	movlw	1
  4961  00E9DA  6E0B               	movwf	lcd_write@column,c
  4962  00E9DC  0E00               	movlw	0
  4963  00E9DE  6E0E               	movwf	lcd_write@row+1,c
  4964  00E9E0  0E01               	movlw	1
  4965  00E9E2  6E0D               	movwf	lcd_write@row,c
  4966  00E9E4  0E4A               	movlw	low STR_53
  4967  00E9E6  6E0F               	movwf	lcd_write@string,c
  4968  00E9E8  0EFF               	movlw	high STR_53
  4969  00E9EA  6E10               	movwf	lcd_write@string+1,c
  4970  00E9EC  EC30  F071         	call	_lcd_write	;wreg free
  4971                           
  4972                           ;pin.c: 35: lcd_gotoxy(1,2);
  4973  00E9F0  0E02               	movlw	2
  4974  00E9F2  6E05               	movwf	lcd_gotoxy@y,c
  4975  00E9F4  0E01               	movlw	1
  4976  00E9F6  EC79  F071         	call	_lcd_gotoxy
  4977                           
  4978                           ;pin.c: 36: lcd_comand(0b00001111);
  4979  00E9FA  0E0F               	movlw	15
  4980  00E9FC  EC03  F071         	call	_lcd_comand
  4981  00EA00  0012               	return		;funcret
  4982  00EA02                     __end_of_activity_submenu_pin_set:
  4983                           	opt stack 0
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           intcon	equ	0xFF2
  4991                           postinc0	equ	0xFEE
  4992                           wreg	equ	0xFE8
  4993                           indf1	equ	0xFE7
  4994                           postdec1	equ	0xFE5
  4995                           fsr1h	equ	0xFE2
  4996                           fsr1l	equ	0xFE1
  4997                           indf2	equ	0xFDF
  4998                           fsr2h	equ	0xFDA
  4999                           fsr2l	equ	0xFD9
  5000                           status	equ	0xFD8
  5001                           
  5002 ;; *************** function _button_B_submenu_date_and_time_config *****************
  5003 ;; Defined at:
  5004 ;;		line 522 in file "main.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;		None               void
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5022 ;;Total ram usage:        2 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    7
  5025 ;; This function calls:
  5026 ;;		_activity_submenu_date_config
  5027 ;;		_activity_submenu_time_config
  5028 ;; This function is called by:
  5029 ;;		_button_B
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text30
  5034  00E3EE                     __ptext30:
  5035                           	opt stack 0
  5036  00E3EE                     _button_B_submenu_date_and_time_config:
  5037                           	opt stack 21
  5038                           
  5039                           ;main.c: 524: switch(submenu_selected){
  5040                           
  5041                           ;incstack = 0
  5042  00E3EE  D006               	goto	l3903
  5043  00E3F0                     l3897:
  5044                           
  5045                           ;main.c: 527: activity_submenu_date_config();
  5046  00E3F0  EC7C  F078         	call	_activity_submenu_date_config	;wreg free
  5047                           
  5048                           ;main.c: 528: break;
  5049  00E3F4  0012               	return	
  5050  00E3F6                     l3899:
  5051                           
  5052                           ;main.c: 531: activity_submenu_time_config();
  5053  00E3F6  ECBD  F078         	call	_activity_submenu_time_config	;wreg free
  5054                           
  5055                           ;main.c: 534: }
  5056                           
  5057                           ;main.c: 532: break;
  5058  00E3FA  0012               	return	
  5059  00E3FC                     l3903:
  5060  00E3FC  C043  F024         	movff	_submenu_selected,??_button_B_submenu_date_and_time_config
  5061  00E400  C044  F025         	movff	_submenu_selected+1,??_button_B_submenu_date_and_time_config+1
  5062                           
  5063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5064                           ; Switch size 1, requested type "space"
  5065                           ; Number of cases is 1, Range of values is 0 to 0
  5066                           ; switch strategies available:
  5067                           ; Name         Instructions Cycles
  5068                           ; simple_byte            4     3 (average)
  5069                           ;	Chosen strategy is simple_byte
  5070  00E404  5025               	movf	??_button_B_submenu_date_and_time_config+1,w,c
  5071  00E406  0A00               	xorlw	0	; case 0
  5072  00E408  A4D8               	btfss	status,2,c
  5073  00E40A  0012               	return	
  5074                           
  5075                           ; Switch size 1, requested type "space"
  5076                           ; Number of cases is 2, Range of values is 0 to 1
  5077                           ; switch strategies available:
  5078                           ; Name         Instructions Cycles
  5079                           ; simple_byte            7     4 (average)
  5080                           ;	Chosen strategy is simple_byte
  5081  00E40C  5024               	movf	??_button_B_submenu_date_and_time_config,w,c
  5082  00E40E  0A00               	xorlw	0	; case 0
  5083  00E410  B4D8               	btfsc	status,2,c
  5084  00E412  D7EE               	goto	l3897
  5085  00E414  0A01               	xorlw	1	; case 1
  5086  00E416  A4D8               	btfss	status,2,c
  5087  00E418  0012               	return	
  5088  00E41A  D7ED               	goto	l3899
  5089  00E41C  0012               	return		;funcret
  5090  00E41E                     __end_of_button_B_submenu_date_and_time_config:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodh	equ	0xFF4
  5097                           prodl	equ	0xFF3
  5098                           intcon	equ	0xFF2
  5099                           postinc0	equ	0xFEE
  5100                           wreg	equ	0xFE8
  5101                           indf1	equ	0xFE7
  5102                           postdec1	equ	0xFE5
  5103                           fsr1h	equ	0xFE2
  5104                           fsr1l	equ	0xFE1
  5105                           indf2	equ	0xFDF
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110 ;; *************** function _activity_submenu_time_config *****************
  5111 ;; Defined at:
  5112 ;;		line 167 in file "main.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;		None               void
  5119 ;; Registers used:
  5120 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5130 ;;Total ram usage:        0 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    6
  5133 ;; This function calls:
  5134 ;;		_lcd_comand
  5135 ;;		_lcd_gotoxy
  5136 ;;		_lcd_init
  5137 ;;		_lcd_write
  5138 ;;		_sprintf
  5139 ;; This function is called by:
  5140 ;;		_button_B_submenu_date_and_time_config
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text31
  5145  00F17A                     __ptext31:
  5146                           	opt stack 0
  5147  00F17A                     _activity_submenu_time_config:
  5148                           	opt stack 21
  5149                           
  5150                           ;main.c: 169: activity = 11;
  5151                           
  5152                           ;incstack = 0
  5153  00F17A  0E00               	movlw	0
  5154  00F17C  6E2A               	movwf	_activity+1,c
  5155  00F17E  0E0B               	movlw	11
  5156  00F180  6E29               	movwf	_activity,c
  5157                           
  5158                           ;main.c: 170: lcd_init();
  5159  00F182  EC3C  F078         	call	_lcd_init	;wreg free
  5160                           
  5161                           ;main.c: 171: lcd_write(1,1,"Ingrese la hora");
  5162  00F186  0E00               	movlw	0
  5163  00F188  6E0C               	movwf	lcd_write@column+1,c
  5164  00F18A  0E01               	movlw	1
  5165  00F18C  6E0B               	movwf	lcd_write@column,c
  5166  00F18E  0E00               	movlw	0
  5167  00F190  6E0E               	movwf	lcd_write@row+1,c
  5168  00F192  0E01               	movlw	1
  5169  00F194  6E0D               	movwf	lcd_write@row,c
  5170  00F196  0E1C               	movlw	low STR_14
  5171  00F198  6E0F               	movwf	lcd_write@string,c
  5172  00F19A  0EFF               	movlw	high STR_14
  5173  00F19C  6E10               	movwf	lcd_write@string+1,c
  5174  00F19E  EC30  F071         	call	_lcd_write	;wreg free
  5175                           
  5176                           ;main.c: 172: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  5177  00F1A2  0E86               	movlw	low _buffer1
  5178  00F1A4  6E0D               	movwf	sprintf@sp,c
  5179  00F1A6  0E00               	movlw	high _buffer1
  5180  00F1A8  6E0E               	movwf	sprintf@sp+1,c
  5181  00F1AA  0E3B               	movlw	low STR_15
  5182  00F1AC  6E0F               	movwf	sprintf@f,c
  5183  00F1AE  0EFF               	movlw	high STR_15
  5184  00F1B0  6E10               	movwf	sprintf@f+1,c
  5185  00F1B2  C054  F011         	movff	_hora,?_sprintf+4
  5186  00F1B6  C055  F012         	movff	_hora+1,?_sprintf+5
  5187  00F1BA  C03D  F013         	movff	_minuto,?_sprintf+6
  5188  00F1BE  C03E  F014         	movff	_minuto+1,?_sprintf+7
  5189  00F1C2  C03F  F015         	movff	_segundo,?_sprintf+8
  5190  00F1C6  C040  F016         	movff	_segundo+1,?_sprintf+9
  5191  00F1CA  EC44  F07E         	call	_sprintf	;wreg free
  5192                           
  5193                           ;main.c: 173: lcd_write(1,2,buffer1);
  5194  00F1CE  0E00               	movlw	0
  5195  00F1D0  6E0C               	movwf	lcd_write@column+1,c
  5196  00F1D2  0E01               	movlw	1
  5197  00F1D4  6E0B               	movwf	lcd_write@column,c
  5198  00F1D6  0E00               	movlw	0
  5199  00F1D8  6E0E               	movwf	lcd_write@row+1,c
  5200  00F1DA  0E02               	movlw	2
  5201  00F1DC  6E0D               	movwf	lcd_write@row,c
  5202  00F1DE  0E86               	movlw	low _buffer1
  5203  00F1E0  6E0F               	movwf	lcd_write@string,c
  5204  00F1E2  0E00               	movlw	high _buffer1
  5205  00F1E4  6E10               	movwf	lcd_write@string+1,c
  5206  00F1E6  EC30  F071         	call	_lcd_write	;wreg free
  5207                           
  5208                           ;main.c: 174: lcd_gotoxy(1, 2);
  5209  00F1EA  0E02               	movlw	2
  5210  00F1EC  6E05               	movwf	lcd_gotoxy@y,c
  5211  00F1EE  0E01               	movlw	1
  5212  00F1F0  EC79  F071         	call	_lcd_gotoxy
  5213                           
  5214                           ;main.c: 175: lcd_comand(0b00001111);
  5215  00F1F4  0E0F               	movlw	15
  5216  00F1F6  EC03  F071         	call	_lcd_comand
  5217  00F1FA  0012               	return		;funcret
  5218  00F1FC                     __end_of_activity_submenu_time_config:
  5219                           	opt stack 0
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           prodh	equ	0xFF4
  5225                           prodl	equ	0xFF3
  5226                           intcon	equ	0xFF2
  5227                           postinc0	equ	0xFEE
  5228                           wreg	equ	0xFE8
  5229                           indf1	equ	0xFE7
  5230                           postdec1	equ	0xFE5
  5231                           fsr1h	equ	0xFE2
  5232                           fsr1l	equ	0xFE1
  5233                           indf2	equ	0xFDF
  5234                           fsr2h	equ	0xFDA
  5235                           fsr2l	equ	0xFD9
  5236                           status	equ	0xFD8
  5237                           
  5238 ;; *************** function _activity_submenu_date_config *****************
  5239 ;; Defined at:
  5240 ;;		line 155 in file "main.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;		None
  5245 ;; Return value:  Size  Location     Type
  5246 ;;		None               void
  5247 ;; Registers used:
  5248 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5258 ;;Total ram usage:        0 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    6
  5261 ;; This function calls:
  5262 ;;		_lcd_comand
  5263 ;;		_lcd_gotoxy
  5264 ;;		_lcd_init
  5265 ;;		_lcd_write
  5266 ;;		_sprintf
  5267 ;; This function is called by:
  5268 ;;		_button_B_submenu_date_and_time_config
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text32
  5273  00F0F8                     __ptext32:
  5274                           	opt stack 0
  5275  00F0F8                     _activity_submenu_date_config:
  5276                           	opt stack 21
  5277                           
  5278                           ;main.c: 157: activity = 10;
  5279                           
  5280                           ;incstack = 0
  5281  00F0F8  0E00               	movlw	0
  5282  00F0FA  6E2A               	movwf	_activity+1,c
  5283  00F0FC  0E0A               	movlw	10
  5284  00F0FE  6E29               	movwf	_activity,c
  5285                           
  5286                           ;main.c: 158: lcd_init();
  5287  00F100  EC3C  F078         	call	_lcd_init	;wreg free
  5288                           
  5289                           ;main.c: 159: lcd_write(1,1,"Ingrese la fecha");
  5290  00F104  0E00               	movlw	0
  5291  00F106  6E0C               	movwf	lcd_write@column+1,c
  5292  00F108  0E01               	movlw	1
  5293  00F10A  6E0B               	movwf	lcd_write@column,c
  5294  00F10C  0E00               	movlw	0
  5295  00F10E  6E0E               	movwf	lcd_write@row+1,c
  5296  00F110  0E01               	movlw	1
  5297  00F112  6E0D               	movwf	lcd_write@row,c
  5298  00F114  0EFB               	movlw	low STR_12
  5299  00F116  6E0F               	movwf	lcd_write@string,c
  5300  00F118  0EFE               	movlw	high STR_12
  5301  00F11A  6E10               	movwf	lcd_write@string+1,c
  5302  00F11C  EC30  F071         	call	_lcd_write	;wreg free
  5303                           
  5304                           ;main.c: 160: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  5305  00F120  0E86               	movlw	low _buffer1
  5306  00F122  6E0D               	movwf	sprintf@sp,c
  5307  00F124  0E00               	movlw	high _buffer1
  5308  00F126  6E0E               	movwf	sprintf@sp+1,c
  5309  00F128  0E2C               	movlw	low STR_13
  5310  00F12A  6E0F               	movwf	sprintf@f,c
  5311  00F12C  0EFF               	movlw	high STR_13
  5312  00F12E  6E10               	movwf	sprintf@f+1,c
  5313  00F130  C050  F011         	movff	_dia,?_sprintf+4
  5314  00F134  C051  F012         	movff	_dia+1,?_sprintf+5
  5315  00F138  C056  F013         	movff	_mes,?_sprintf+6
  5316  00F13C  C057  F014         	movff	_mes+1,?_sprintf+7
  5317  00F140  C04E  F015         	movff	_anio,?_sprintf+8
  5318  00F144  C04F  F016         	movff	_anio+1,?_sprintf+9
  5319  00F148  EC44  F07E         	call	_sprintf	;wreg free
  5320                           
  5321                           ;main.c: 161: lcd_write(1,2,buffer1);
  5322  00F14C  0E00               	movlw	0
  5323  00F14E  6E0C               	movwf	lcd_write@column+1,c
  5324  00F150  0E01               	movlw	1
  5325  00F152  6E0B               	movwf	lcd_write@column,c
  5326  00F154  0E00               	movlw	0
  5327  00F156  6E0E               	movwf	lcd_write@row+1,c
  5328  00F158  0E02               	movlw	2
  5329  00F15A  6E0D               	movwf	lcd_write@row,c
  5330  00F15C  0E86               	movlw	low _buffer1
  5331  00F15E  6E0F               	movwf	lcd_write@string,c
  5332  00F160  0E00               	movlw	high _buffer1
  5333  00F162  6E10               	movwf	lcd_write@string+1,c
  5334  00F164  EC30  F071         	call	_lcd_write	;wreg free
  5335                           
  5336                           ;main.c: 162: lcd_gotoxy(1, 2);
  5337  00F168  0E02               	movlw	2
  5338  00F16A  6E05               	movwf	lcd_gotoxy@y,c
  5339  00F16C  0E01               	movlw	1
  5340  00F16E  EC79  F071         	call	_lcd_gotoxy
  5341                           
  5342                           ;main.c: 163: lcd_comand(0b00001111);
  5343  00F172  0E0F               	movlw	15
  5344  00F174  EC03  F071         	call	_lcd_comand
  5345  00F178  0012               	return		;funcret
  5346  00F17A                     __end_of_activity_submenu_date_config:
  5347                           	opt stack 0
  5348                           tblptru	equ	0xFF8
  5349                           tblptrh	equ	0xFF7
  5350                           tblptrl	equ	0xFF6
  5351                           tablat	equ	0xFF5
  5352                           prodh	equ	0xFF4
  5353                           prodl	equ	0xFF3
  5354                           intcon	equ	0xFF2
  5355                           postinc0	equ	0xFEE
  5356                           wreg	equ	0xFE8
  5357                           indf1	equ	0xFE7
  5358                           postdec1	equ	0xFE5
  5359                           fsr1h	equ	0xFE2
  5360                           fsr1l	equ	0xFE1
  5361                           indf2	equ	0xFDF
  5362                           fsr2h	equ	0xFDA
  5363                           fsr2l	equ	0xFD9
  5364                           status	equ	0xFD8
  5365                           
  5366 ;; *************** function _button_B_submenu_activation *****************
  5367 ;; Defined at:
  5368 ;;		line 435 in file "main.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;		None               void
  5375 ;; Registers used:
  5376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5386 ;;Total ram usage:        2 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    7
  5389 ;; This function calls:
  5390 ;;		_activity_home
  5391 ;; This function is called by:
  5392 ;;		_button_B
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text33
  5397  00E4B4                     __ptext33:
  5398                           	opt stack 0
  5399  00E4B4                     _button_B_submenu_activation:
  5400                           	opt stack 21
  5401                           
  5402                           ;main.c: 437: switch(submenu_selected){
  5403                           
  5404                           ;incstack = 0
  5405  00E4B4  D009               	goto	l3825
  5406  00E4B6                     l3819:
  5407                           
  5408                           ;main.c: 440: state = 1;
  5409  00E4B6  0E00               	movlw	0
  5410  00E4B8  6E42               	movwf	_state+1,c
  5411  00E4BA  0E01               	movlw	1
  5412  00E4BC  D003               	goto	L3
  5413  00E4BE                     l3821:
  5414                           
  5415                           ;main.c: 444: state = 0;
  5416  00E4BE  0E00               	movlw	0
  5417  00E4C0  6E42               	movwf	_state+1,c
  5418  00E4C2  0E00               	movlw	0
  5419  00E4C4                     L3:
  5420  00E4C4  6E41               	movwf	_state,c
  5421                           
  5422                           ;main.c: 447: }
  5423                           
  5424                           ;main.c: 445: break;
  5425  00E4C6  D010               	goto	l3827
  5426  00E4C8                     l3825:
  5427  00E4C8  C043  F011         	movff	_submenu_selected,??_button_B_submenu_activation
  5428  00E4CC  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_activation+1
  5429                           
  5430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5431                           ; Switch size 1, requested type "space"
  5432                           ; Number of cases is 1, Range of values is 0 to 0
  5433                           ; switch strategies available:
  5434                           ; Name         Instructions Cycles
  5435                           ; simple_byte            4     3 (average)
  5436                           ;	Chosen strategy is simple_byte
  5437  00E4D0  5012               	movf	??_button_B_submenu_activation+1,w,c
  5438  00E4D2  0A00               	xorlw	0	; case 0
  5439  00E4D4  A4D8               	btfss	status,2,c
  5440  00E4D6  D008               	goto	l3827
  5441                           
  5442                           ; Switch size 1, requested type "space"
  5443                           ; Number of cases is 2, Range of values is 0 to 1
  5444                           ; switch strategies available:
  5445                           ; Name         Instructions Cycles
  5446                           ; simple_byte            7     4 (average)
  5447                           ;	Chosen strategy is simple_byte
  5448  00E4D8  5011               	movf	??_button_B_submenu_activation,w,c
  5449  00E4DA  0A00               	xorlw	0	; case 0
  5450  00E4DC  B4D8               	btfsc	status,2,c
  5451  00E4DE  D7EB               	goto	l3819
  5452  00E4E0  0A01               	xorlw	1	; case 1
  5453  00E4E2  B4D8               	btfsc	status,2,c
  5454  00E4E4  D7EC               	goto	l3821
  5455  00E4E6  D000               	goto	l3827
  5456  00E4E8                     l3827:
  5457                           
  5458                           ;main.c: 449: activity_home();
  5459  00E4E8  EC9F  F071         	call	_activity_home	;wreg free
  5460  00E4EC  0012               	return		;funcret
  5461  00E4EE                     __end_of_button_B_submenu_activation:
  5462                           	opt stack 0
  5463                           tblptru	equ	0xFF8
  5464                           tblptrh	equ	0xFF7
  5465                           tblptrl	equ	0xFF6
  5466                           tablat	equ	0xFF5
  5467                           prodh	equ	0xFF4
  5468                           prodl	equ	0xFF3
  5469                           intcon	equ	0xFF2
  5470                           postinc0	equ	0xFEE
  5471                           wreg	equ	0xFE8
  5472                           indf1	equ	0xFE7
  5473                           postdec1	equ	0xFE5
  5474                           fsr1h	equ	0xFE2
  5475                           fsr1l	equ	0xFE1
  5476                           indf2	equ	0xFDF
  5477                           fsr2h	equ	0xFDA
  5478                           fsr2l	equ	0xFD9
  5479                           status	equ	0xFD8
  5480                           
  5481 ;; *************** function _button_B_menu *****************
  5482 ;; Defined at:
  5483 ;;		line 411 in file "main.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;		None
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;		None               void
  5490 ;; Registers used:
  5491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;Total ram usage:        2 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    8
  5504 ;; This function calls:
  5505 ;;		_activity_submenu_activation
  5506 ;;		_activity_submenu_date_and_time
  5507 ;;		_activity_submenu_pin
  5508 ;;		_activity_submenu_siren
  5509 ;; This function is called by:
  5510 ;;		_button_B
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text34
  5515  00E83E                     __ptext34:
  5516                           	opt stack 0
  5517  00E83E                     _button_B_menu:
  5518                           	opt stack 20
  5519                           
  5520                           ;main.c: 413: switch(menu_selected){
  5521                           
  5522                           ;incstack = 0
  5523  00E83E  D00C               	goto	l3811
  5524  00E840                     l3801:
  5525                           
  5526                           ;main.c: 416: activity_submenu_activation();
  5527  00E840  EC22  F076         	call	_activity_submenu_activation	;wreg free
  5528                           
  5529                           ;main.c: 417: break;
  5530  00E844  0012               	return	
  5531  00E846                     l3803:
  5532                           
  5533                           ;main.c: 420: activity_submenu_date_and_time();
  5534  00E846  EC55  F076         	call	_activity_submenu_date_and_time	;wreg free
  5535                           
  5536                           ;main.c: 421: break;
  5537  00E84A  0012               	return	
  5538  00E84C                     l3805:
  5539                           
  5540                           ;main.c: 424: activity_submenu_pin();
  5541  00E84C  EC88  F076         	call	_activity_submenu_pin	;wreg free
  5542                           
  5543                           ;main.c: 425: break;
  5544  00E850  0012               	return	
  5545  00E852                     l3807:
  5546                           
  5547                           ;main.c: 428: activity_submenu_siren();
  5548  00E852  ECBB  F076         	call	_activity_submenu_siren	;wreg free
  5549                           
  5550                           ;main.c: 431: }
  5551                           
  5552                           ;main.c: 429: break;
  5553  00E856  0012               	return	
  5554  00E858                     l3811:
  5555  00E858  C03B  F011         	movff	_menu_selected,??_button_B_menu
  5556  00E85C  C03C  F012         	movff	_menu_selected+1,??_button_B_menu+1
  5557                           
  5558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5559                           ; Switch size 1, requested type "space"
  5560                           ; Number of cases is 1, Range of values is 0 to 0
  5561                           ; switch strategies available:
  5562                           ; Name         Instructions Cycles
  5563                           ; simple_byte            4     3 (average)
  5564                           ;	Chosen strategy is simple_byte
  5565  00E860  5012               	movf	??_button_B_menu+1,w,c
  5566  00E862  0A00               	xorlw	0	; case 0
  5567  00E864  A4D8               	btfss	status,2,c
  5568  00E866  0012               	return	
  5569                           
  5570                           ; Switch size 1, requested type "space"
  5571                           ; Number of cases is 4, Range of values is 0 to 3
  5572                           ; switch strategies available:
  5573                           ; Name         Instructions Cycles
  5574                           ; simple_byte           13     7 (average)
  5575                           ;	Chosen strategy is simple_byte
  5576  00E868  5011               	movf	??_button_B_menu,w,c
  5577  00E86A  0A00               	xorlw	0	; case 0
  5578  00E86C  B4D8               	btfsc	status,2,c
  5579  00E86E  D7E8               	goto	l3801
  5580  00E870  0A01               	xorlw	1	; case 1
  5581  00E872  B4D8               	btfsc	status,2,c
  5582  00E874  D7E8               	goto	l3803
  5583  00E876  0A03               	xorlw	3	; case 2
  5584  00E878  B4D8               	btfsc	status,2,c
  5585  00E87A  D7E8               	goto	l3805
  5586  00E87C  0A01               	xorlw	1	; case 3
  5587  00E87E  A4D8               	btfss	status,2,c
  5588  00E880  0012               	return	
  5589  00E882  D7E7               	goto	l3807
  5590  00E884  0012               	return		;funcret
  5591  00E886                     __end_of_button_B_menu:
  5592                           	opt stack 0
  5593                           tblptru	equ	0xFF8
  5594                           tblptrh	equ	0xFF7
  5595                           tblptrl	equ	0xFF6
  5596                           tablat	equ	0xFF5
  5597                           prodh	equ	0xFF4
  5598                           prodl	equ	0xFF3
  5599                           intcon	equ	0xFF2
  5600                           postinc0	equ	0xFEE
  5601                           wreg	equ	0xFE8
  5602                           indf1	equ	0xFE7
  5603                           postdec1	equ	0xFE5
  5604                           fsr1h	equ	0xFE2
  5605                           fsr1l	equ	0xFE1
  5606                           indf2	equ	0xFDF
  5607                           fsr2h	equ	0xFDA
  5608                           fsr2l	equ	0xFD9
  5609                           status	equ	0xFD8
  5610                           
  5611 ;; *************** function _activity_submenu_siren *****************
  5612 ;; Defined at:
  5613 ;;		line 268 in file "main.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;		None
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;		None               void
  5620 ;; Registers used:
  5621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;Total ram usage:        0 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    7
  5634 ;; This function calls:
  5635 ;;		_lcd_init
  5636 ;;		_lcd_write
  5637 ;;		_submenu_selector_0
  5638 ;; This function is called by:
  5639 ;;		_button_B_menu
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text35
  5644  00ED76                     __ptext35:
  5645                           	opt stack 0
  5646  00ED76                     _activity_submenu_siren:
  5647                           	opt stack 20
  5648                           
  5649                           ;main.c: 270: activity = 7;
  5650                           
  5651                           ;incstack = 0
  5652  00ED76  0E00               	movlw	0
  5653  00ED78  6E2A               	movwf	_activity+1,c
  5654  00ED7A  0E07               	movlw	7
  5655  00ED7C  6E29               	movwf	_activity,c
  5656                           
  5657                           ;main.c: 271: lcd_init();
  5658  00ED7E  EC3C  F078         	call	_lcd_init	;wreg free
  5659                           
  5660                           ;main.c: 272: lcd_write(1,1,"Sirena");
  5661  00ED82  0E00               	movlw	0
  5662  00ED84  6E0C               	movwf	lcd_write@column+1,c
  5663  00ED86  0E01               	movlw	1
  5664  00ED88  6E0B               	movwf	lcd_write@column,c
  5665  00ED8A  0E00               	movlw	0
  5666  00ED8C  6E0E               	movwf	lcd_write@row+1,c
  5667  00ED8E  0E01               	movlw	1
  5668  00ED90  6E0D               	movwf	lcd_write@row,c
  5669  00ED92  0EAC               	movlw	low STR_16
  5670  00ED94  6E0F               	movwf	lcd_write@string,c
  5671  00ED96  0EFF               	movlw	high STR_16
  5672  00ED98  6E10               	movwf	lcd_write@string+1,c
  5673  00ED9A  EC30  F071         	call	_lcd_write	;wreg free
  5674                           
  5675                           ;main.c: 273: lcd_write(10,1,"Volumen");
  5676  00ED9E  0E00               	movlw	0
  5677  00EDA0  6E0C               	movwf	lcd_write@column+1,c
  5678  00EDA2  0E0A               	movlw	10
  5679  00EDA4  6E0B               	movwf	lcd_write@column,c
  5680  00EDA6  0E00               	movlw	0
  5681  00EDA8  6E0E               	movwf	lcd_write@row+1,c
  5682  00EDAA  0E01               	movlw	1
  5683  00EDAC  6E0D               	movwf	lcd_write@row,c
  5684  00EDAE  0E5D               	movlw	low STR_17
  5685  00EDB0  6E0F               	movwf	lcd_write@string,c
  5686  00EDB2  0EFF               	movlw	high STR_17
  5687  00EDB4  6E10               	movwf	lcd_write@string+1,c
  5688  00EDB6  EC30  F071         	call	_lcd_write	;wreg free
  5689                           
  5690                           ;main.c: 274: lcd_write(10,2,"Tono");
  5691  00EDBA  0E00               	movlw	0
  5692  00EDBC  6E0C               	movwf	lcd_write@column+1,c
  5693  00EDBE  0E0A               	movlw	10
  5694  00EDC0  6E0B               	movwf	lcd_write@column,c
  5695  00EDC2  0E00               	movlw	0
  5696  00EDC4  6E0E               	movwf	lcd_write@row+1,c
  5697  00EDC6  0E02               	movlw	2
  5698  00EDC8  6E0D               	movwf	lcd_write@row,c
  5699  00EDCA  0ED4               	movlw	low STR_18
  5700  00EDCC  6E0F               	movwf	lcd_write@string,c
  5701  00EDCE  0EFF               	movlw	high STR_18
  5702  00EDD0  6E10               	movwf	lcd_write@string+1,c
  5703  00EDD2  EC30  F071         	call	_lcd_write	;wreg free
  5704                           
  5705                           ;main.c: 275: submenu_selector_0();
  5706  00EDD6  EC74  F073         	call	_submenu_selector_0	;wreg free
  5707  00EDDA  0012               	return		;funcret
  5708  00EDDC                     __end_of_activity_submenu_siren:
  5709                           	opt stack 0
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           prodh	equ	0xFF4
  5715                           prodl	equ	0xFF3
  5716                           intcon	equ	0xFF2
  5717                           postinc0	equ	0xFEE
  5718                           wreg	equ	0xFE8
  5719                           indf1	equ	0xFE7
  5720                           postdec1	equ	0xFE5
  5721                           fsr1h	equ	0xFE2
  5722                           fsr1l	equ	0xFE1
  5723                           indf2	equ	0xFDF
  5724                           fsr2h	equ	0xFDA
  5725                           fsr2l	equ	0xFD9
  5726                           status	equ	0xFD8
  5727                           
  5728 ;; *************** function _activity_submenu_pin *****************
  5729 ;; Defined at:
  5730 ;;		line 19 in file "Unimic/unmc_01/sources/pin.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;		None               void
  5737 ;; Registers used:
  5738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    7
  5751 ;; This function calls:
  5752 ;;		_lcd_init
  5753 ;;		_lcd_write
  5754 ;;		_submenu_selector_0
  5755 ;; This function is called by:
  5756 ;;		_button_B_menu
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text36
  5761  00ED10                     __ptext36:
  5762                           	opt stack 0
  5763  00ED10                     _activity_submenu_pin:
  5764                           	opt stack 20
  5765                           
  5766                           ;pin.c: 21: activity = 5;
  5767                           
  5768                           ;incstack = 0
  5769  00ED10  0E00               	movlw	0
  5770  00ED12  6E2A               	movwf	_activity+1,c
  5771  00ED14  0E05               	movlw	5
  5772  00ED16  6E29               	movwf	_activity,c
  5773                           
  5774                           ;pin.c: 22: lcd_init();
  5775  00ED18  EC3C  F078         	call	_lcd_init	;wreg free
  5776                           
  5777                           ;pin.c: 23: lcd_write(1,1,"Pin");
  5778  00ED1C  0E00               	movlw	0
  5779  00ED1E  6E0C               	movwf	lcd_write@column+1,c
  5780  00ED20  0E01               	movlw	1
  5781  00ED22  6E0B               	movwf	lcd_write@column,c
  5782  00ED24  0E00               	movlw	0
  5783  00ED26  6E0E               	movwf	lcd_write@row+1,c
  5784  00ED28  0E01               	movlw	1
  5785  00ED2A  6E0D               	movwf	lcd_write@row,c
  5786  00ED2C  0EE7               	movlw	low STR_4
  5787  00ED2E  6E0F               	movwf	lcd_write@string,c
  5788  00ED30  0EFF               	movlw	high STR_4
  5789  00ED32  6E10               	movwf	lcd_write@string+1,c
  5790  00ED34  EC30  F071         	call	_lcd_write	;wreg free
  5791                           
  5792                           ;pin.c: 24: lcd_write(10,1,"Cambiar");
  5793  00ED38  0E00               	movlw	0
  5794  00ED3A  6E0C               	movwf	lcd_write@column+1,c
  5795  00ED3C  0E0A               	movlw	10
  5796  00ED3E  6E0B               	movwf	lcd_write@column,c
  5797  00ED40  0E00               	movlw	0
  5798  00ED42  6E0E               	movwf	lcd_write@row+1,c
  5799  00ED44  0E01               	movlw	1
  5800  00ED46  6E0D               	movwf	lcd_write@row,c
  5801  00ED48  0E55               	movlw	low STR_50
  5802  00ED4A  6E0F               	movwf	lcd_write@string,c
  5803  00ED4C  0EFF               	movlw	high STR_50
  5804  00ED4E  6E10               	movwf	lcd_write@string+1,c
  5805  00ED50  EC30  F071         	call	_lcd_write	;wreg free
  5806                           
  5807                           ;pin.c: 25: lcd_write(10,2,"Reset");
  5808  00ED54  0E00               	movlw	0
  5809  00ED56  6E0C               	movwf	lcd_write@column+1,c
  5810  00ED58  0E0A               	movlw	10
  5811  00ED5A  6E0B               	movwf	lcd_write@column,c
  5812  00ED5C  0E00               	movlw	0
  5813  00ED5E  6E0E               	movwf	lcd_write@row+1,c
  5814  00ED60  0E02               	movlw	2
  5815  00ED62  6E0D               	movwf	lcd_write@row,c
  5816  00ED64  0EB3               	movlw	low STR_51
  5817  00ED66  6E0F               	movwf	lcd_write@string,c
  5818  00ED68  0EFF               	movlw	high STR_51
  5819  00ED6A  6E10               	movwf	lcd_write@string+1,c
  5820  00ED6C  EC30  F071         	call	_lcd_write	;wreg free
  5821                           
  5822                           ;pin.c: 26: submenu_selector_0();
  5823  00ED70  EC74  F073         	call	_submenu_selector_0	;wreg free
  5824  00ED74  0012               	return		;funcret
  5825  00ED76                     __end_of_activity_submenu_pin:
  5826                           	opt stack 0
  5827                           tblptru	equ	0xFF8
  5828                           tblptrh	equ	0xFF7
  5829                           tblptrl	equ	0xFF6
  5830                           tablat	equ	0xFF5
  5831                           prodh	equ	0xFF4
  5832                           prodl	equ	0xFF3
  5833                           intcon	equ	0xFF2
  5834                           postinc0	equ	0xFEE
  5835                           wreg	equ	0xFE8
  5836                           indf1	equ	0xFE7
  5837                           postdec1	equ	0xFE5
  5838                           fsr1h	equ	0xFE2
  5839                           fsr1l	equ	0xFE1
  5840                           indf2	equ	0xFDF
  5841                           fsr2h	equ	0xFDA
  5842                           fsr2l	equ	0xFD9
  5843                           status	equ	0xFD8
  5844                           
  5845 ;; *************** function _activity_submenu_date_and_time *****************
  5846 ;; Defined at:
  5847 ;;		line 144 in file "main.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;		None
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;		None               void
  5854 ;; Registers used:
  5855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5865 ;;Total ram usage:        0 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    7
  5868 ;; This function calls:
  5869 ;;		_lcd_init
  5870 ;;		_lcd_write
  5871 ;;		_submenu_selector_0
  5872 ;; This function is called by:
  5873 ;;		_button_B_menu
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text37
  5878  00ECAA                     __ptext37:
  5879                           	opt stack 0
  5880  00ECAA                     _activity_submenu_date_and_time:
  5881                           	opt stack 20
  5882                           
  5883                           ;main.c: 146: activity = 3;
  5884                           
  5885                           ;incstack = 0
  5886  00ECAA  0E00               	movlw	0
  5887  00ECAC  6E2A               	movwf	_activity+1,c
  5888  00ECAE  0E03               	movlw	3
  5889  00ECB0  6E29               	movwf	_activity,c
  5890                           
  5891                           ;main.c: 147: lcd_init();
  5892  00ECB2  EC3C  F078         	call	_lcd_init	;wreg free
  5893                           
  5894                           ;main.c: 148: lcd_write(1,1,"Reloj");
  5895  00ECB6  0E00               	movlw	0
  5896  00ECB8  6E0C               	movwf	lcd_write@column+1,c
  5897  00ECBA  0E01               	movlw	1
  5898  00ECBC  6E0B               	movwf	lcd_write@column,c
  5899  00ECBE  0E00               	movlw	0
  5900  00ECC0  6E0E               	movwf	lcd_write@row+1,c
  5901  00ECC2  0E01               	movlw	1
  5902  00ECC4  6E0D               	movwf	lcd_write@row,c
  5903  00ECC6  0EBF               	movlw	low STR_3
  5904  00ECC8  6E0F               	movwf	lcd_write@string,c
  5905  00ECCA  0EFF               	movlw	high STR_3
  5906  00ECCC  6E10               	movwf	lcd_write@string+1,c
  5907  00ECCE  EC30  F071         	call	_lcd_write	;wreg free
  5908                           
  5909                           ;main.c: 149: lcd_write(10,1,"Fecha");
  5910  00ECD2  0E00               	movlw	0
  5911  00ECD4  6E0C               	movwf	lcd_write@column+1,c
  5912  00ECD6  0E0A               	movlw	10
  5913  00ECD8  6E0B               	movwf	lcd_write@column,c
  5914  00ECDA  0E00               	movlw	0
  5915  00ECDC  6E0E               	movwf	lcd_write@row+1,c
  5916  00ECDE  0E01               	movlw	1
  5917  00ECE0  6E0D               	movwf	lcd_write@row,c
  5918  00ECE2  0EB9               	movlw	low STR_10
  5919  00ECE4  6E0F               	movwf	lcd_write@string,c
  5920  00ECE6  0EFF               	movlw	high STR_10
  5921  00ECE8  6E10               	movwf	lcd_write@string+1,c
  5922  00ECEA  EC30  F071         	call	_lcd_write	;wreg free
  5923                           
  5924                           ;main.c: 150: lcd_write(10,2,"Hora");
  5925  00ECEE  0E00               	movlw	0
  5926  00ECF0  6E0C               	movwf	lcd_write@column+1,c
  5927  00ECF2  0E0A               	movlw	10
  5928  00ECF4  6E0B               	movwf	lcd_write@column,c
  5929  00ECF6  0E00               	movlw	0
  5930  00ECF8  6E0E               	movwf	lcd_write@row+1,c
  5931  00ECFA  0E02               	movlw	2
  5932  00ECFC  6E0D               	movwf	lcd_write@row,c
  5933  00ECFE  0ECA               	movlw	low STR_11
  5934  00ED00  6E0F               	movwf	lcd_write@string,c
  5935  00ED02  0EFF               	movlw	high STR_11
  5936  00ED04  6E10               	movwf	lcd_write@string+1,c
  5937  00ED06  EC30  F071         	call	_lcd_write	;wreg free
  5938                           
  5939                           ;main.c: 151: submenu_selector_0();
  5940  00ED0A  EC74  F073         	call	_submenu_selector_0	;wreg free
  5941  00ED0E  0012               	return		;funcret
  5942  00ED10                     __end_of_activity_submenu_date_and_time:
  5943                           	opt stack 0
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           postinc0	equ	0xFEE
  5952                           wreg	equ	0xFE8
  5953                           indf1	equ	0xFE7
  5954                           postdec1	equ	0xFE5
  5955                           fsr1h	equ	0xFE2
  5956                           fsr1l	equ	0xFE1
  5957                           indf2	equ	0xFDF
  5958                           fsr2h	equ	0xFDA
  5959                           fsr2l	equ	0xFD9
  5960                           status	equ	0xFD8
  5961                           
  5962 ;; *************** function _activity_submenu_activation *****************
  5963 ;; Defined at:
  5964 ;;		line 131 in file "main.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;		None               void
  5971 ;; Registers used:
  5972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    7
  5985 ;; This function calls:
  5986 ;;		_lcd_init
  5987 ;;		_lcd_write
  5988 ;;		_submenu_selector_0
  5989 ;; This function is called by:
  5990 ;;		_button_B_menu
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text38
  5995  00EC44                     __ptext38:
  5996                           	opt stack 0
  5997  00EC44                     _activity_submenu_activation:
  5998                           	opt stack 20
  5999                           
  6000                           ;main.c: 133: activity = 4;
  6001                           
  6002                           ;incstack = 0
  6003  00EC44  0E00               	movlw	0
  6004  00EC46  6E2A               	movwf	_activity+1,c
  6005  00EC48  0E04               	movlw	4
  6006  00EC4A  6E29               	movwf	_activity,c
  6007                           
  6008                           ;main.c: 134: lcd_init();
  6009  00EC4C  EC3C  F078         	call	_lcd_init	;wreg free
  6010                           
  6011                           ;main.c: 135: lcd_write(1,1,"Activar");
  6012  00EC50  0E00               	movlw	0
  6013  00EC52  6E0C               	movwf	lcd_write@column+1,c
  6014  00EC54  0E01               	movlw	1
  6015  00EC56  6E0B               	movwf	lcd_write@column,c
  6016  00EC58  0E00               	movlw	0
  6017  00EC5A  6E0E               	movwf	lcd_write@row+1,c
  6018  00EC5C  0E01               	movlw	1
  6019  00EC5E  6E0D               	movwf	lcd_write@row,c
  6020  00EC60  0E65               	movlw	low STR_2
  6021  00EC62  6E0F               	movwf	lcd_write@string,c
  6022  00EC64  0EFF               	movlw	high STR_2
  6023  00EC66  6E10               	movwf	lcd_write@string+1,c
  6024  00EC68  EC30  F071         	call	_lcd_write	;wreg free
  6025                           
  6026                           ;main.c: 136: lcd_write(10,1,"Si");
  6027  00EC6C  0E00               	movlw	0
  6028  00EC6E  6E0C               	movwf	lcd_write@column+1,c
  6029  00EC70  0E0A               	movlw	10
  6030  00EC72  6E0B               	movwf	lcd_write@column,c
  6031  00EC74  0E00               	movlw	0
  6032  00EC76  6E0E               	movwf	lcd_write@row+1,c
  6033  00EC78  0E01               	movlw	1
  6034  00EC7A  6E0D               	movwf	lcd_write@row,c
  6035  00EC7C  0EEB               	movlw	low STR_7
  6036  00EC7E  6E0F               	movwf	lcd_write@string,c
  6037  00EC80  0EFF               	movlw	high STR_7
  6038  00EC82  6E10               	movwf	lcd_write@string+1,c
  6039  00EC84  EC30  F071         	call	_lcd_write	;wreg free
  6040                           
  6041                           ;main.c: 137: lcd_write(10,2,"No");
  6042  00EC88  0E00               	movlw	0
  6043  00EC8A  6E0C               	movwf	lcd_write@column+1,c
  6044  00EC8C  0E0A               	movlw	10
  6045  00EC8E  6E0B               	movwf	lcd_write@column,c
  6046  00EC90  0E00               	movlw	0
  6047  00EC92  6E0E               	movwf	lcd_write@row+1,c
  6048  00EC94  0E02               	movlw	2
  6049  00EC96  6E0D               	movwf	lcd_write@row,c
  6050  00EC98  0EEE               	movlw	low STR_8
  6051  00EC9A  6E0F               	movwf	lcd_write@string,c
  6052  00EC9C  0EFF               	movlw	high STR_8
  6053  00EC9E  6E10               	movwf	lcd_write@string+1,c
  6054  00ECA0  EC30  F071         	call	_lcd_write	;wreg free
  6055                           
  6056                           ;main.c: 138: submenu_selector_0();
  6057  00ECA4  EC74  F073         	call	_submenu_selector_0	;wreg free
  6058  00ECA8  0012               	return		;funcret
  6059  00ECAA                     __end_of_activity_submenu_activation:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           indf1	equ	0xFE7
  6071                           postdec1	equ	0xFE5
  6072                           fsr1h	equ	0xFE2
  6073                           fsr1l	equ	0xFE1
  6074                           indf2	equ	0xFDF
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function _button_A *****************
  6080 ;; Defined at:
  6081 ;;		line 387 in file "main.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;		None
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;		None               void
  6088 ;; Registers used:
  6089 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6099 ;;Total ram usage:        2 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    8
  6102 ;; This function calls:
  6103 ;;		_activity_pin
  6104 ;;		_menu_selector
  6105 ;;		_reset_home_callback
  6106 ;;		_submenu_selector
  6107 ;; This function is called by:
  6108 ;;		_keyboard_control
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text39
  6113  00E5A0                     __ptext39:
  6114                           	opt stack 0
  6115  00E5A0                     _button_A:
  6116                           	opt stack 21
  6117                           
  6118                           ;main.c: 389: reset_home_callback();
  6119                           
  6120                           ;incstack = 0
  6121  00E5A0  ECF4  F070         	call	_reset_home_callback	;wreg free
  6122                           
  6123                           ;main.c: 391: switch(activity){
  6124  00E5A4  D009               	goto	l4021
  6125  00E5A6                     l4013:
  6126                           
  6127                           ;main.c: 394: activity_pin();
  6128  00E5A6  ECB3  F074         	call	_activity_pin	;wreg free
  6129                           
  6130                           ;main.c: 398: break;
  6131                           
  6132                           ;main.c: 397: case 1:
  6133                           
  6134                           ;main.c: 395: break;
  6135  00E5AA  0012               	return	
  6136  00E5AC                     l4015:
  6137                           
  6138                           ;main.c: 401: menu_selector();
  6139  00E5AC  ECFB  F073         	call	_menu_selector	;wreg free
  6140                           
  6141                           ;main.c: 402: break;
  6142  00E5B0  0012               	return	
  6143  00E5B2                     l4017:
  6144                           
  6145                           ;main.c: 405: submenu_selector();
  6146  00E5B2  ECDF  F071         	call	_submenu_selector	;wreg free
  6147                           
  6148                           ;main.c: 407: }
  6149                           
  6150                           ;main.c: 406: break;
  6151  00E5B6  0012               	return	
  6152  00E5B8                     l4021:
  6153  00E5B8  C029  F013         	movff	_activity,??_button_A
  6154  00E5BC  C02A  F014         	movff	_activity+1,??_button_A+1
  6155                           
  6156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6157                           ; Switch size 1, requested type "space"
  6158                           ; Number of cases is 1, Range of values is 0 to 0
  6159                           ; switch strategies available:
  6160                           ; Name         Instructions Cycles
  6161                           ; simple_byte            4     3 (average)
  6162                           ;	Chosen strategy is simple_byte
  6163  00E5C0  5014               	movf	??_button_A+1,w,c
  6164  00E5C2  0A00               	xorlw	0	; case 0
  6165  00E5C4  A4D8               	btfss	status,2,c
  6166  00E5C6  D7F5               	goto	l4017
  6167                           
  6168                           ; Switch size 1, requested type "space"
  6169                           ; Number of cases is 3, Range of values is 0 to 2
  6170                           ; switch strategies available:
  6171                           ; Name         Instructions Cycles
  6172                           ; simple_byte           10     6 (average)
  6173                           ;	Chosen strategy is simple_byte
  6174  00E5C8  5013               	movf	??_button_A,w,c
  6175  00E5CA  0A00               	xorlw	0	; case 0
  6176  00E5CC  B4D8               	btfsc	status,2,c
  6177  00E5CE  D7EB               	goto	l4013
  6178  00E5D0  0A01               	xorlw	1	; case 1
  6179  00E5D2  B4D8               	btfsc	status,2,c
  6180  00E5D4  0012               	return	
  6181  00E5D6  0A03               	xorlw	3	; case 2
  6182  00E5D8  B4D8               	btfsc	status,2,c
  6183  00E5DA  D7E8               	goto	l4015
  6184  00E5DC  D7EA               	goto	l4017
  6185  00E5DE  0012               	return		;funcret
  6186  00E5E0                     __end_of_button_A:
  6187                           	opt stack 0
  6188                           tblptru	equ	0xFF8
  6189                           tblptrh	equ	0xFF7
  6190                           tblptrl	equ	0xFF6
  6191                           tablat	equ	0xFF5
  6192                           prodh	equ	0xFF4
  6193                           prodl	equ	0xFF3
  6194                           intcon	equ	0xFF2
  6195                           postinc0	equ	0xFEE
  6196                           wreg	equ	0xFE8
  6197                           indf1	equ	0xFE7
  6198                           postdec1	equ	0xFE5
  6199                           fsr1h	equ	0xFE2
  6200                           fsr1l	equ	0xFE1
  6201                           indf2	equ	0xFDF
  6202                           fsr2h	equ	0xFDA
  6203                           fsr2l	equ	0xFD9
  6204                           status	equ	0xFD8
  6205                           
  6206 ;; *************** function _submenu_selector *****************
  6207 ;; Defined at:
  6208 ;;		line 21 in file "Unimic/unmc_01/sources/submenu_selector.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;		None
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;		None               void
  6215 ;; Registers used:
  6216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6226 ;;Total ram usage:        2 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:    7
  6229 ;; This function calls:
  6230 ;;		_submenu_selector_0
  6231 ;;		_submenu_selector_1
  6232 ;; This function is called by:
  6233 ;;		_button_A
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text40
  6238  00E3BE                     __ptext40:
  6239                           	opt stack 0
  6240  00E3BE                     _submenu_selector:
  6241                           	opt stack 21
  6242                           
  6243                           ;submenu_selector.c: 23: switch(submenu_selected){
  6244                           
  6245                           ;incstack = 0
  6246  00E3BE  D006               	goto	l3793
  6247  00E3C0                     l3787:
  6248                           
  6249                           ;submenu_selector.c: 26: submenu_selector_1();
  6250  00E3C0  EC95  F073         	call	_submenu_selector_1	;wreg free
  6251                           
  6252                           ;submenu_selector.c: 27: break;
  6253  00E3C4  0012               	return	
  6254  00E3C6                     l3789:
  6255                           
  6256                           ;submenu_selector.c: 30: submenu_selector_0();
  6257  00E3C6  EC74  F073         	call	_submenu_selector_0	;wreg free
  6258                           
  6259                           ;submenu_selector.c: 32: }
  6260                           
  6261                           ;submenu_selector.c: 31: break;
  6262  00E3CA  0012               	return	
  6263  00E3CC                     l3793:
  6264  00E3CC  C043  F011         	movff	_submenu_selected,??_submenu_selector
  6265  00E3D0  C044  F012         	movff	_submenu_selected+1,??_submenu_selector+1
  6266                           
  6267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6268                           ; Switch size 1, requested type "space"
  6269                           ; Number of cases is 1, Range of values is 0 to 0
  6270                           ; switch strategies available:
  6271                           ; Name         Instructions Cycles
  6272                           ; simple_byte            4     3 (average)
  6273                           ;	Chosen strategy is simple_byte
  6274  00E3D4  5012               	movf	??_submenu_selector+1,w,c
  6275  00E3D6  0A00               	xorlw	0	; case 0
  6276  00E3D8  A4D8               	btfss	status,2,c
  6277  00E3DA  0012               	return	
  6278                           
  6279                           ; Switch size 1, requested type "space"
  6280                           ; Number of cases is 2, Range of values is 0 to 1
  6281                           ; switch strategies available:
  6282                           ; Name         Instructions Cycles
  6283                           ; simple_byte            7     4 (average)
  6284                           ;	Chosen strategy is simple_byte
  6285  00E3DC  5011               	movf	??_submenu_selector,w,c
  6286  00E3DE  0A00               	xorlw	0	; case 0
  6287  00E3E0  B4D8               	btfsc	status,2,c
  6288  00E3E2  D7EE               	goto	l3787
  6289  00E3E4  0A01               	xorlw	1	; case 1
  6290  00E3E6  A4D8               	btfss	status,2,c
  6291  00E3E8  0012               	return	
  6292  00E3EA  D7ED               	goto	l3789
  6293  00E3EC  0012               	return		;funcret
  6294  00E3EE                     __end_of_submenu_selector:
  6295                           	opt stack 0
  6296                           tblptru	equ	0xFF8
  6297                           tblptrh	equ	0xFF7
  6298                           tblptrl	equ	0xFF6
  6299                           tablat	equ	0xFF5
  6300                           prodh	equ	0xFF4
  6301                           prodl	equ	0xFF3
  6302                           intcon	equ	0xFF2
  6303                           postinc0	equ	0xFEE
  6304                           wreg	equ	0xFE8
  6305                           indf1	equ	0xFE7
  6306                           postdec1	equ	0xFE5
  6307                           fsr1h	equ	0xFE2
  6308                           fsr1l	equ	0xFE1
  6309                           indf2	equ	0xFDF
  6310                           fsr2h	equ	0xFDA
  6311                           fsr2l	equ	0xFD9
  6312                           status	equ	0xFD8
  6313                           
  6314 ;; *************** function _submenu_selector_1 *****************
  6315 ;; Defined at:
  6316 ;;		line 13 in file "Unimic/unmc_01/sources/submenu_selector.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;		None               void
  6323 ;; Registers used:
  6324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;Total ram usage:        0 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    6
  6337 ;; This function calls:
  6338 ;;		_lcd_write
  6339 ;; This function is called by:
  6340 ;;		_submenu_selector
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text41
  6345  00E72A                     __ptext41:
  6346                           	opt stack 0
  6347  00E72A                     _submenu_selector_1:
  6348                           	opt stack 21
  6349                           
  6350                           ;submenu_selector.c: 15: lcd_write(9,2,">");
  6351                           
  6352                           ;incstack = 0
  6353  00E72A  0E00               	movlw	0
  6354  00E72C  6E0C               	movwf	lcd_write@column+1,c
  6355  00E72E  0E09               	movlw	9
  6356  00E730  6E0B               	movwf	lcd_write@column,c
  6357  00E732  0E00               	movlw	0
  6358  00E734  6E0E               	movwf	lcd_write@row+1,c
  6359  00E736  0E02               	movlw	2
  6360  00E738  6E0D               	movwf	lcd_write@row,c
  6361  00E73A  0EF3               	movlw	low STR_35
  6362  00E73C  6E0F               	movwf	lcd_write@string,c
  6363  00E73E  0EFF               	movlw	high STR_35
  6364  00E740  6E10               	movwf	lcd_write@string+1,c
  6365  00E742  EC30  F071         	call	_lcd_write	;wreg free
  6366                           
  6367                           ;submenu_selector.c: 16: submenu_selected = 1;
  6368  00E746  0E00               	movlw	0
  6369  00E748  6E44               	movwf	_submenu_selected+1,c
  6370  00E74A  0E01               	movlw	1
  6371  00E74C  6E43               	movwf	_submenu_selected,c
  6372                           
  6373                           ;submenu_selector.c: 17: lcd_write(9,1," ");
  6374  00E74E  0E00               	movlw	0
  6375  00E750  6E0C               	movwf	lcd_write@column+1,c
  6376  00E752  0E09               	movlw	9
  6377  00E754  6E0B               	movwf	lcd_write@column,c
  6378  00E756  0E00               	movlw	0
  6379  00E758  6E0E               	movwf	lcd_write@row+1,c
  6380  00E75A  0E01               	movlw	1
  6381  00E75C  6E0D               	movwf	lcd_write@row,c
  6382  00E75E  0EF1               	movlw	low STR_36
  6383  00E760  6E0F               	movwf	lcd_write@string,c
  6384  00E762  0EFF               	movlw	high STR_36
  6385  00E764  6E10               	movwf	lcd_write@string+1,c
  6386  00E766  EC30  F071         	call	_lcd_write	;wreg free
  6387  00E76A  0012               	return		;funcret
  6388  00E76C                     __end_of_submenu_selector_1:
  6389                           	opt stack 0
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           prodh	equ	0xFF4
  6395                           prodl	equ	0xFF3
  6396                           intcon	equ	0xFF2
  6397                           postinc0	equ	0xFEE
  6398                           wreg	equ	0xFE8
  6399                           indf1	equ	0xFE7
  6400                           postdec1	equ	0xFE5
  6401                           fsr1h	equ	0xFE2
  6402                           fsr1l	equ	0xFE1
  6403                           indf2	equ	0xFDF
  6404                           fsr2h	equ	0xFDA
  6405                           fsr2l	equ	0xFD9
  6406                           status	equ	0xFD8
  6407                           
  6408 ;; *************** function _submenu_selector_0 *****************
  6409 ;; Defined at:
  6410 ;;		line 5 in file "Unimic/unmc_01/sources/submenu_selector.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;		None               void
  6417 ;; Registers used:
  6418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    6
  6431 ;; This function calls:
  6432 ;;		_lcd_write
  6433 ;; This function is called by:
  6434 ;;		_activity_submenu_activation
  6435 ;;		_activity_submenu_date_and_time
  6436 ;;		_activity_submenu_siren
  6437 ;;		_activity_submenu_siren_volume
  6438 ;;		_activity_submenu_siren_tone
  6439 ;;		_submenu_selector
  6440 ;;		_activity_submenu_pin
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text42
  6445  00E6E8                     __ptext42:
  6446                           	opt stack 0
  6447  00E6E8                     _submenu_selector_0:
  6448                           	opt stack 20
  6449                           
  6450                           ;submenu_selector.c: 7: lcd_write(9,1,">");
  6451                           
  6452                           ;incstack = 0
  6453  00E6E8  0E00               	movlw	0
  6454  00E6EA  6E0C               	movwf	lcd_write@column+1,c
  6455  00E6EC  0E09               	movlw	9
  6456  00E6EE  6E0B               	movwf	lcd_write@column,c
  6457  00E6F0  0E00               	movlw	0
  6458  00E6F2  6E0E               	movwf	lcd_write@row+1,c
  6459  00E6F4  0E01               	movlw	1
  6460  00E6F6  6E0D               	movwf	lcd_write@row,c
  6461  00E6F8  0EF3               	movlw	low STR_35
  6462  00E6FA  6E0F               	movwf	lcd_write@string,c
  6463  00E6FC  0EFF               	movlw	high STR_35
  6464  00E6FE  6E10               	movwf	lcd_write@string+1,c
  6465  00E700  EC30  F071         	call	_lcd_write	;wreg free
  6466                           
  6467                           ;submenu_selector.c: 8: submenu_selected = 0;
  6468  00E704  0E00               	movlw	0
  6469  00E706  6E44               	movwf	_submenu_selected+1,c
  6470  00E708  0E00               	movlw	0
  6471  00E70A  6E43               	movwf	_submenu_selected,c
  6472                           
  6473                           ;submenu_selector.c: 9: lcd_write(9,2," ");
  6474  00E70C  0E00               	movlw	0
  6475  00E70E  6E0C               	movwf	lcd_write@column+1,c
  6476  00E710  0E09               	movlw	9
  6477  00E712  6E0B               	movwf	lcd_write@column,c
  6478  00E714  0E00               	movlw	0
  6479  00E716  6E0E               	movwf	lcd_write@row+1,c
  6480  00E718  0E02               	movlw	2
  6481  00E71A  6E0D               	movwf	lcd_write@row,c
  6482  00E71C  0EF1               	movlw	low STR_36
  6483  00E71E  6E0F               	movwf	lcd_write@string,c
  6484  00E720  0EFF               	movlw	high STR_36
  6485  00E722  6E10               	movwf	lcd_write@string+1,c
  6486  00E724  EC30  F071         	call	_lcd_write	;wreg free
  6487  00E728  0012               	return		;funcret
  6488  00E72A                     __end_of_submenu_selector_0:
  6489                           	opt stack 0
  6490                           tblptru	equ	0xFF8
  6491                           tblptrh	equ	0xFF7
  6492                           tblptrl	equ	0xFF6
  6493                           tablat	equ	0xFF5
  6494                           prodh	equ	0xFF4
  6495                           prodl	equ	0xFF3
  6496                           intcon	equ	0xFF2
  6497                           postinc0	equ	0xFEE
  6498                           wreg	equ	0xFE8
  6499                           indf1	equ	0xFE7
  6500                           postdec1	equ	0xFE5
  6501                           fsr1h	equ	0xFE2
  6502                           fsr1l	equ	0xFE1
  6503                           indf2	equ	0xFDF
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8
  6507                           
  6508 ;; *************** function _menu_selector *****************
  6509 ;; Defined at:
  6510 ;;		line 37 in file "Unimic/unmc_01/sources/menu_selector.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;		None               void
  6517 ;; Registers used:
  6518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6528 ;;Total ram usage:        2 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    7
  6531 ;; This function calls:
  6532 ;;		_menu_selector_0
  6533 ;;		_menu_selector_1
  6534 ;;		_menu_selector_2
  6535 ;;		_menu_selector_3
  6536 ;; This function is called by:
  6537 ;;		_button_A
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           	psect	text43
  6542  00E7F6                     __ptext43:
  6543                           	opt stack 0
  6544  00E7F6                     _menu_selector:
  6545                           	opt stack 21
  6546                           
  6547                           ;menu_selector.c: 39: switch(menu_selected){
  6548                           
  6549                           ;incstack = 0
  6550  00E7F6  D00C               	goto	l3779
  6551  00E7F8                     l3769:
  6552                           
  6553                           ;menu_selector.c: 42: menu_selector_1();
  6554  00E7F8  EC11  F073         	call	_menu_selector_1	;wreg free
  6555                           
  6556                           ;menu_selector.c: 43: break;
  6557  00E7FC  0012               	return	
  6558  00E7FE                     l3771:
  6559                           
  6560                           ;menu_selector.c: 46: menu_selector_2();
  6561  00E7FE  EC32  F073         	call	_menu_selector_2	;wreg free
  6562                           
  6563                           ;menu_selector.c: 47: break;
  6564  00E802  0012               	return	
  6565  00E804                     l3773:
  6566                           
  6567                           ;menu_selector.c: 50: menu_selector_3();
  6568  00E804  EC53  F073         	call	_menu_selector_3	;wreg free
  6569                           
  6570                           ;menu_selector.c: 51: break;
  6571  00E808  0012               	return	
  6572  00E80A                     l3775:
  6573                           
  6574                           ;menu_selector.c: 54: menu_selector_0();
  6575  00E80A  ECF0  F072         	call	_menu_selector_0	;wreg free
  6576                           
  6577                           ;menu_selector.c: 57: }
  6578                           
  6579                           ;menu_selector.c: 55: break;
  6580  00E80E  0012               	return	
  6581  00E810                     l3779:
  6582  00E810  C03B  F011         	movff	_menu_selected,??_menu_selector
  6583  00E814  C03C  F012         	movff	_menu_selected+1,??_menu_selector+1
  6584                           
  6585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6586                           ; Switch size 1, requested type "space"
  6587                           ; Number of cases is 1, Range of values is 0 to 0
  6588                           ; switch strategies available:
  6589                           ; Name         Instructions Cycles
  6590                           ; simple_byte            4     3 (average)
  6591                           ;	Chosen strategy is simple_byte
  6592  00E818  5012               	movf	??_menu_selector+1,w,c
  6593  00E81A  0A00               	xorlw	0	; case 0
  6594  00E81C  A4D8               	btfss	status,2,c
  6595  00E81E  0012               	return	
  6596                           
  6597                           ; Switch size 1, requested type "space"
  6598                           ; Number of cases is 4, Range of values is 0 to 3
  6599                           ; switch strategies available:
  6600                           ; Name         Instructions Cycles
  6601                           ; simple_byte           13     7 (average)
  6602                           ;	Chosen strategy is simple_byte
  6603  00E820  5011               	movf	??_menu_selector,w,c
  6604  00E822  0A00               	xorlw	0	; case 0
  6605  00E824  B4D8               	btfsc	status,2,c
  6606  00E826  D7E8               	goto	l3769
  6607  00E828  0A01               	xorlw	1	; case 1
  6608  00E82A  B4D8               	btfsc	status,2,c
  6609  00E82C  D7E8               	goto	l3771
  6610  00E82E  0A03               	xorlw	3	; case 2
  6611  00E830  B4D8               	btfsc	status,2,c
  6612  00E832  D7E8               	goto	l3773
  6613  00E834  0A01               	xorlw	1	; case 3
  6614  00E836  A4D8               	btfss	status,2,c
  6615  00E838  0012               	return	
  6616  00E83A  D7E7               	goto	l3775
  6617  00E83C  0012               	return		;funcret
  6618  00E83E                     __end_of_menu_selector:
  6619                           	opt stack 0
  6620                           tblptru	equ	0xFF8
  6621                           tblptrh	equ	0xFF7
  6622                           tblptrl	equ	0xFF6
  6623                           tablat	equ	0xFF5
  6624                           prodh	equ	0xFF4
  6625                           prodl	equ	0xFF3
  6626                           intcon	equ	0xFF2
  6627                           postinc0	equ	0xFEE
  6628                           wreg	equ	0xFE8
  6629                           indf1	equ	0xFE7
  6630                           postdec1	equ	0xFE5
  6631                           fsr1h	equ	0xFE2
  6632                           fsr1l	equ	0xFE1
  6633                           indf2	equ	0xFDF
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function _menu_selector_3 *****************
  6639 ;; Defined at:
  6640 ;;		line 29 in file "Unimic/unmc_01/sources/menu_selector.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;		None               void
  6647 ;; Registers used:
  6648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6658 ;;Total ram usage:        0 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    6
  6661 ;; This function calls:
  6662 ;;		_lcd_write
  6663 ;; This function is called by:
  6664 ;;		_menu_selector
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text44
  6669  00E6A6                     __ptext44:
  6670                           	opt stack 0
  6671  00E6A6                     _menu_selector_3:
  6672                           	opt stack 21
  6673                           
  6674                           ;menu_selector.c: 31: lcd_write(9,2,">");
  6675                           
  6676                           ;incstack = 0
  6677  00E6A6  0E00               	movlw	0
  6678  00E6A8  6E0C               	movwf	lcd_write@column+1,c
  6679  00E6AA  0E09               	movlw	9
  6680  00E6AC  6E0B               	movwf	lcd_write@column,c
  6681  00E6AE  0E00               	movlw	0
  6682  00E6B0  6E0E               	movwf	lcd_write@row+1,c
  6683  00E6B2  0E02               	movlw	2
  6684  00E6B4  6E0D               	movwf	lcd_write@row,c
  6685  00E6B6  0EF3               	movlw	low STR_35
  6686  00E6B8  6E0F               	movwf	lcd_write@string,c
  6687  00E6BA  0EFF               	movlw	high STR_35
  6688  00E6BC  6E10               	movwf	lcd_write@string+1,c
  6689  00E6BE  EC30  F071         	call	_lcd_write	;wreg free
  6690                           
  6691                           ;menu_selector.c: 32: menu_selected = 3;
  6692  00E6C2  0E00               	movlw	0
  6693  00E6C4  6E3C               	movwf	_menu_selected+1,c
  6694  00E6C6  0E03               	movlw	3
  6695  00E6C8  6E3B               	movwf	_menu_selected,c
  6696                           
  6697                           ;menu_selector.c: 33: lcd_write(9,1," ");
  6698  00E6CA  0E00               	movlw	0
  6699  00E6CC  6E0C               	movwf	lcd_write@column+1,c
  6700  00E6CE  0E09               	movlw	9
  6701  00E6D0  6E0B               	movwf	lcd_write@column,c
  6702  00E6D2  0E00               	movlw	0
  6703  00E6D4  6E0E               	movwf	lcd_write@row+1,c
  6704  00E6D6  0E01               	movlw	1
  6705  00E6D8  6E0D               	movwf	lcd_write@row,c
  6706  00E6DA  0EF1               	movlw	low STR_36
  6707  00E6DC  6E0F               	movwf	lcd_write@string,c
  6708  00E6DE  0EFF               	movlw	high STR_36
  6709  00E6E0  6E10               	movwf	lcd_write@string+1,c
  6710  00E6E2  EC30  F071         	call	_lcd_write	;wreg free
  6711  00E6E6  0012               	return		;funcret
  6712  00E6E8                     __end_of_menu_selector_3:
  6713                           	opt stack 0
  6714                           tblptru	equ	0xFF8
  6715                           tblptrh	equ	0xFF7
  6716                           tblptrl	equ	0xFF6
  6717                           tablat	equ	0xFF5
  6718                           prodh	equ	0xFF4
  6719                           prodl	equ	0xFF3
  6720                           intcon	equ	0xFF2
  6721                           postinc0	equ	0xFEE
  6722                           wreg	equ	0xFE8
  6723                           indf1	equ	0xFE7
  6724                           postdec1	equ	0xFE5
  6725                           fsr1h	equ	0xFE2
  6726                           fsr1l	equ	0xFE1
  6727                           indf2	equ	0xFDF
  6728                           fsr2h	equ	0xFDA
  6729                           fsr2l	equ	0xFD9
  6730                           status	equ	0xFD8
  6731                           
  6732 ;; *************** function _menu_selector_2 *****************
  6733 ;; Defined at:
  6734 ;;		line 21 in file "Unimic/unmc_01/sources/menu_selector.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;		None
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;		None               void
  6741 ;; Registers used:
  6742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6752 ;;Total ram usage:        0 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    6
  6755 ;; This function calls:
  6756 ;;		_lcd_write
  6757 ;; This function is called by:
  6758 ;;		_menu_selector
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text45
  6763  00E664                     __ptext45:
  6764                           	opt stack 0
  6765  00E664                     _menu_selector_2:
  6766                           	opt stack 21
  6767                           
  6768                           ;menu_selector.c: 23: lcd_write(9,1,">");
  6769                           
  6770                           ;incstack = 0
  6771  00E664  0E00               	movlw	0
  6772  00E666  6E0C               	movwf	lcd_write@column+1,c
  6773  00E668  0E09               	movlw	9
  6774  00E66A  6E0B               	movwf	lcd_write@column,c
  6775  00E66C  0E00               	movlw	0
  6776  00E66E  6E0E               	movwf	lcd_write@row+1,c
  6777  00E670  0E01               	movlw	1
  6778  00E672  6E0D               	movwf	lcd_write@row,c
  6779  00E674  0EF3               	movlw	low STR_35
  6780  00E676  6E0F               	movwf	lcd_write@string,c
  6781  00E678  0EFF               	movlw	high STR_35
  6782  00E67A  6E10               	movwf	lcd_write@string+1,c
  6783  00E67C  EC30  F071         	call	_lcd_write	;wreg free
  6784                           
  6785                           ;menu_selector.c: 24: menu_selected = 2;
  6786  00E680  0E00               	movlw	0
  6787  00E682  6E3C               	movwf	_menu_selected+1,c
  6788  00E684  0E02               	movlw	2
  6789  00E686  6E3B               	movwf	_menu_selected,c
  6790                           
  6791                           ;menu_selector.c: 25: lcd_write(1,2," ");
  6792  00E688  0E00               	movlw	0
  6793  00E68A  6E0C               	movwf	lcd_write@column+1,c
  6794  00E68C  0E01               	movlw	1
  6795  00E68E  6E0B               	movwf	lcd_write@column,c
  6796  00E690  0E00               	movlw	0
  6797  00E692  6E0E               	movwf	lcd_write@row+1,c
  6798  00E694  0E02               	movlw	2
  6799  00E696  6E0D               	movwf	lcd_write@row,c
  6800  00E698  0EF1               	movlw	low STR_36
  6801  00E69A  6E0F               	movwf	lcd_write@string,c
  6802  00E69C  0EFF               	movlw	high STR_36
  6803  00E69E  6E10               	movwf	lcd_write@string+1,c
  6804  00E6A0  EC30  F071         	call	_lcd_write	;wreg free
  6805  00E6A4  0012               	return		;funcret
  6806  00E6A6                     __end_of_menu_selector_2:
  6807                           	opt stack 0
  6808                           tblptru	equ	0xFF8
  6809                           tblptrh	equ	0xFF7
  6810                           tblptrl	equ	0xFF6
  6811                           tablat	equ	0xFF5
  6812                           prodh	equ	0xFF4
  6813                           prodl	equ	0xFF3
  6814                           intcon	equ	0xFF2
  6815                           postinc0	equ	0xFEE
  6816                           wreg	equ	0xFE8
  6817                           indf1	equ	0xFE7
  6818                           postdec1	equ	0xFE5
  6819                           fsr1h	equ	0xFE2
  6820                           fsr1l	equ	0xFE1
  6821                           indf2	equ	0xFDF
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function _menu_selector_1 *****************
  6827 ;; Defined at:
  6828 ;;		line 13 in file "Unimic/unmc_01/sources/menu_selector.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;		None               void
  6835 ;; Registers used:
  6836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6846 ;;Total ram usage:        0 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    6
  6849 ;; This function calls:
  6850 ;;		_lcd_write
  6851 ;; This function is called by:
  6852 ;;		_menu_selector
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text46
  6857  00E622                     __ptext46:
  6858                           	opt stack 0
  6859  00E622                     _menu_selector_1:
  6860                           	opt stack 21
  6861                           
  6862                           ;menu_selector.c: 15: lcd_write(1,2,">");
  6863                           
  6864                           ;incstack = 0
  6865  00E622  0E00               	movlw	0
  6866  00E624  6E0C               	movwf	lcd_write@column+1,c
  6867  00E626  0E01               	movlw	1
  6868  00E628  6E0B               	movwf	lcd_write@column,c
  6869  00E62A  0E00               	movlw	0
  6870  00E62C  6E0E               	movwf	lcd_write@row+1,c
  6871  00E62E  0E02               	movlw	2
  6872  00E630  6E0D               	movwf	lcd_write@row,c
  6873  00E632  0EF3               	movlw	low STR_35
  6874  00E634  6E0F               	movwf	lcd_write@string,c
  6875  00E636  0EFF               	movlw	high STR_35
  6876  00E638  6E10               	movwf	lcd_write@string+1,c
  6877  00E63A  EC30  F071         	call	_lcd_write	;wreg free
  6878                           
  6879                           ;menu_selector.c: 16: menu_selected = 1;
  6880  00E63E  0E00               	movlw	0
  6881  00E640  6E3C               	movwf	_menu_selected+1,c
  6882  00E642  0E01               	movlw	1
  6883  00E644  6E3B               	movwf	_menu_selected,c
  6884                           
  6885                           ;menu_selector.c: 17: lcd_write(1,1," ");
  6886  00E646  0E00               	movlw	0
  6887  00E648  6E0C               	movwf	lcd_write@column+1,c
  6888  00E64A  0E01               	movlw	1
  6889  00E64C  6E0B               	movwf	lcd_write@column,c
  6890  00E64E  0E00               	movlw	0
  6891  00E650  6E0E               	movwf	lcd_write@row+1,c
  6892  00E652  0E01               	movlw	1
  6893  00E654  6E0D               	movwf	lcd_write@row,c
  6894  00E656  0EF1               	movlw	low STR_36
  6895  00E658  6E0F               	movwf	lcd_write@string,c
  6896  00E65A  0EFF               	movlw	high STR_36
  6897  00E65C  6E10               	movwf	lcd_write@string+1,c
  6898  00E65E  EC30  F071         	call	_lcd_write	;wreg free
  6899  00E662  0012               	return		;funcret
  6900  00E664                     __end_of_menu_selector_1:
  6901                           	opt stack 0
  6902                           tblptru	equ	0xFF8
  6903                           tblptrh	equ	0xFF7
  6904                           tblptrl	equ	0xFF6
  6905                           tablat	equ	0xFF5
  6906                           prodh	equ	0xFF4
  6907                           prodl	equ	0xFF3
  6908                           intcon	equ	0xFF2
  6909                           postinc0	equ	0xFEE
  6910                           wreg	equ	0xFE8
  6911                           indf1	equ	0xFE7
  6912                           postdec1	equ	0xFE5
  6913                           fsr1h	equ	0xFE2
  6914                           fsr1l	equ	0xFE1
  6915                           indf2	equ	0xFDF
  6916                           fsr2h	equ	0xFDA
  6917                           fsr2l	equ	0xFD9
  6918                           status	equ	0xFD8
  6919                           
  6920 ;; *************** function _menu_selector_0 *****************
  6921 ;; Defined at:
  6922 ;;		line 5 in file "Unimic/unmc_01/sources/menu_selector.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;		None
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;		None               void
  6929 ;; Registers used:
  6930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;Total ram usage:        0 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    6
  6943 ;; This function calls:
  6944 ;;		_lcd_write
  6945 ;; This function is called by:
  6946 ;;		_activity_menu
  6947 ;;		_menu_selector
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text47
  6952  00E5E0                     __ptext47:
  6953                           	opt stack 0
  6954  00E5E0                     _menu_selector_0:
  6955                           	opt stack 20
  6956                           
  6957                           ;menu_selector.c: 7: lcd_write(1,1,">");
  6958                           
  6959                           ;incstack = 0
  6960  00E5E0  0E00               	movlw	0
  6961  00E5E2  6E0C               	movwf	lcd_write@column+1,c
  6962  00E5E4  0E01               	movlw	1
  6963  00E5E6  6E0B               	movwf	lcd_write@column,c
  6964  00E5E8  0E00               	movlw	0
  6965  00E5EA  6E0E               	movwf	lcd_write@row+1,c
  6966  00E5EC  0E01               	movlw	1
  6967  00E5EE  6E0D               	movwf	lcd_write@row,c
  6968  00E5F0  0EF3               	movlw	low STR_35
  6969  00E5F2  6E0F               	movwf	lcd_write@string,c
  6970  00E5F4  0EFF               	movlw	high STR_35
  6971  00E5F6  6E10               	movwf	lcd_write@string+1,c
  6972  00E5F8  EC30  F071         	call	_lcd_write	;wreg free
  6973                           
  6974                           ;menu_selector.c: 8: menu_selected = 0;
  6975  00E5FC  0E00               	movlw	0
  6976  00E5FE  6E3C               	movwf	_menu_selected+1,c
  6977  00E600  0E00               	movlw	0
  6978  00E602  6E3B               	movwf	_menu_selected,c
  6979                           
  6980                           ;menu_selector.c: 9: lcd_write(9,2," ");
  6981  00E604  0E00               	movlw	0
  6982  00E606  6E0C               	movwf	lcd_write@column+1,c
  6983  00E608  0E09               	movlw	9
  6984  00E60A  6E0B               	movwf	lcd_write@column,c
  6985  00E60C  0E00               	movlw	0
  6986  00E60E  6E0E               	movwf	lcd_write@row+1,c
  6987  00E610  0E02               	movlw	2
  6988  00E612  6E0D               	movwf	lcd_write@row,c
  6989  00E614  0EF1               	movlw	low STR_36
  6990  00E616  6E0F               	movwf	lcd_write@string,c
  6991  00E618  0EFF               	movlw	high STR_36
  6992  00E61A  6E10               	movwf	lcd_write@string+1,c
  6993  00E61C  EC30  F071         	call	_lcd_write	;wreg free
  6994  00E620  0012               	return		;funcret
  6995  00E622                     __end_of_menu_selector_0:
  6996                           	opt stack 0
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           postinc0	equ	0xFEE
  7005                           wreg	equ	0xFE8
  7006                           indf1	equ	0xFE7
  7007                           postdec1	equ	0xFE5
  7008                           fsr1h	equ	0xFE2
  7009                           fsr1l	equ	0xFE1
  7010                           indf2	equ	0xFDF
  7011                           fsr2h	equ	0xFDA
  7012                           fsr2l	equ	0xFD9
  7013                           status	equ	0xFD8
  7014                           
  7015 ;; *************** function _activity_pin *****************
  7016 ;; Defined at:
  7017 ;;		line 8 in file "Unimic/unmc_01/sources/pin.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;		None
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;		None
  7022 ;; Return value:  Size  Location     Type
  7023 ;;		None               void
  7024 ;; Registers used:
  7025 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7035 ;;Total ram usage:        0 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; Hardware stack levels required when called:    6
  7038 ;; This function calls:
  7039 ;;		_lcd_comand
  7040 ;;		_lcd_gotoxy
  7041 ;;		_lcd_init
  7042 ;;		_lcd_write
  7043 ;;		_strcpy
  7044 ;; This function is called by:
  7045 ;;		_button_A
  7046 ;;		_pin_input_validator
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text48
  7051  00E966                     __ptext48:
  7052                           	opt stack 0
  7053  00E966                     _activity_pin:
  7054                           	opt stack 21
  7055                           
  7056                           ;pin.c: 10: activity = 1;
  7057                           
  7058                           ;incstack = 0
  7059  00E966  0E00               	movlw	0
  7060  00E968  6E2A               	movwf	_activity+1,c
  7061  00E96A  0E01               	movlw	1
  7062  00E96C  6E29               	movwf	_activity,c
  7063                           
  7064                           ;pin.c: 11: strcpy(pin_input, "");
  7065  00E96E  0E9F               	movlw	low _pin_input
  7066  00E970  6E01               	movwf	strcpy@to,c
  7067  00E972  0E00               	movlw	high _pin_input
  7068  00E974  6E02               	movwf	strcpy@to+1,c
  7069  00E976  0EF2               	movlw	low (STR_36+1)
  7070  00E978  6E03               	movwf	strcpy@from,c
  7071  00E97A  0EFF               	movlw	high (STR_36+1)
  7072  00E97C  6E04               	movwf	strcpy@from+1,c
  7073  00E97E  ECD8  F073         	call	_strcpy	;wreg free
  7074                           
  7075                           ;pin.c: 12: lcd_init();
  7076  00E982  EC3C  F078         	call	_lcd_init	;wreg free
  7077                           
  7078                           ;pin.c: 13: lcd_write(1,1,"Ingrese su PIN:");
  7079  00E986  0E00               	movlw	0
  7080  00E988  6E0C               	movwf	lcd_write@column+1,c
  7081  00E98A  0E01               	movlw	1
  7082  00E98C  6E0B               	movwf	lcd_write@column,c
  7083  00E98E  0E00               	movlw	0
  7084  00E990  6E0E               	movwf	lcd_write@row+1,c
  7085  00E992  0E01               	movlw	1
  7086  00E994  6E0D               	movwf	lcd_write@row,c
  7087  00E996  0E0C               	movlw	low STR_48
  7088  00E998  6E0F               	movwf	lcd_write@string,c
  7089  00E99A  0EFF               	movlw	high STR_48
  7090  00E99C  6E10               	movwf	lcd_write@string+1,c
  7091  00E99E  EC30  F071         	call	_lcd_write	;wreg free
  7092                           
  7093                           ;pin.c: 14: lcd_gotoxy(1,2);
  7094  00E9A2  0E02               	movlw	2
  7095  00E9A4  6E05               	movwf	lcd_gotoxy@y,c
  7096  00E9A6  0E01               	movlw	1
  7097  00E9A8  EC79  F071         	call	_lcd_gotoxy
  7098                           
  7099                           ;pin.c: 15: lcd_comand(0b00001111);
  7100  00E9AC  0E0F               	movlw	15
  7101  00E9AE  EC03  F071         	call	_lcd_comand
  7102  00E9B2  0012               	return		;funcret
  7103  00E9B4                     __end_of_activity_pin:
  7104                           	opt stack 0
  7105                           tblptru	equ	0xFF8
  7106                           tblptrh	equ	0xFF7
  7107                           tblptrl	equ	0xFF6
  7108                           tablat	equ	0xFF5
  7109                           prodh	equ	0xFF4
  7110                           prodl	equ	0xFF3
  7111                           intcon	equ	0xFF2
  7112                           postinc0	equ	0xFEE
  7113                           wreg	equ	0xFE8
  7114                           indf1	equ	0xFE7
  7115                           postdec1	equ	0xFE5
  7116                           fsr1h	equ	0xFE2
  7117                           fsr1l	equ	0xFE1
  7118                           indf2	equ	0xFDF
  7119                           fsr2h	equ	0xFDA
  7120                           fsr2l	equ	0xFD9
  7121                           status	equ	0xFD8
  7122                           
  7123 ;; *************** function _strcpy *****************
  7124 ;; Defined at:
  7125 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  to              2    0[COMRAM] PTR unsigned char 
  7128 ;;		 -> pin(5), pin_input(5), 
  7129 ;;  from            2    2[COMRAM] PTR const unsigned char 
  7130 ;;		 -> STR_54(5), STR_52(1), STR_47(1), pin_input(5), 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  cp              2    4[COMRAM] PTR unsigned char 
  7133 ;;		 -> pin(5), pin_input(5), 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  2    0[COMRAM] PTR unsigned char 
  7136 ;; Registers used:
  7137 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7143 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7146 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7147 ;;Total ram usage:        6 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_activity_pin
  7153 ;;		_activity_submenu_pin_set
  7154 ;;		_pin_set
  7155 ;;		_pin_reset
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text49
  7160  00E7B0                     __ptext49:
  7161                           	opt stack 0
  7162  00E7B0                     _strcpy:
  7163                           	opt stack 28
  7164                           
  7165                           ;incstack = 0
  7166  00E7B0  C001  F005         	movff	strcpy@to,strcpy@cp
  7167  00E7B4  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  7168  00E7B8  D005               	goto	l3421
  7169  00E7BA                     l3419:
  7170  00E7BA  4A05               	infsnz	strcpy@cp,f,c
  7171  00E7BC  2A06               	incf	strcpy@cp+1,f,c
  7172  00E7BE  4A03               	infsnz	strcpy@from,f,c
  7173  00E7C0  2A04               	incf	strcpy@from+1,f,c
  7174  00E7C2  D000               	goto	l3421
  7175  00E7C4                     l3421:
  7176  00E7C4  C003  FFF6         	movff	strcpy@from,tblptrl
  7177  00E7C8  C004  FFF7         	movff	strcpy@from+1,tblptrh
  7178  00E7CC  6AF8               	clrf	tblptru,c
  7179  00E7CE  C005  FFD9         	movff	strcpy@cp,fsr2l
  7180  00E7D2  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  7181  00E7D6  0E0E               	movlw	(high __ramtop+-1)
  7182  00E7D8  64F7               	cpfsgt	tblptrh,c
  7183  00E7DA  D003               	bra	u1997
  7184  00E7DC  0008               	tblrd		*
  7185  00E7DE  50F5               	movf	tablat,w,c
  7186  00E7E0  D005               	bra	u1990
  7187  00E7E2                     u1997:
  7188  00E7E2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7189  00E7E6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7190  00E7EA  50EF               	movf	indf0,w,c
  7191  00E7EC                     u1990:
  7192  00E7EC  6EDF               	movwf	indf2,c
  7193  00E7EE  50DF               	movf	indf2,w,c
  7194  00E7F0  A4D8               	btfss	status,2,c
  7195  00E7F2  D7E3               	goto	l3419
  7196                           
  7197                           ;	Return value of _strcpy is never used
  7198  00E7F4  0012               	return		;funcret
  7199  00E7F6                     __end_of_strcpy:
  7200                           	opt stack 0
  7201                           tblptru	equ	0xFF8
  7202                           tblptrh	equ	0xFF7
  7203                           tblptrl	equ	0xFF6
  7204                           tablat	equ	0xFF5
  7205                           prodh	equ	0xFF4
  7206                           prodl	equ	0xFF3
  7207                           intcon	equ	0xFF2
  7208                           indf0	equ	0xFEF
  7209                           postinc0	equ	0xFEE
  7210                           fsr0h	equ	0xFEA
  7211                           fsr0l	equ	0xFE9
  7212                           wreg	equ	0xFE8
  7213                           indf1	equ	0xFE7
  7214                           postdec1	equ	0xFE5
  7215                           fsr1h	equ	0xFE2
  7216                           fsr1l	equ	0xFE1
  7217                           indf2	equ	0xFDF
  7218                           fsr2h	equ	0xFDA
  7219                           fsr2l	equ	0xFD9
  7220                           status	equ	0xFD8
  7221                           
  7222 ;; *************** function _lcd_comand *****************
  7223 ;; Defined at:
  7224 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  d               1    wreg     unsigned char 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;  d               1    4[COMRAM] unsigned char 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;		None               void
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7242 ;;Total ram usage:        1 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    2
  7245 ;; This function calls:
  7246 ;;		_lcd_send_byte
  7247 ;; This function is called by:
  7248 ;;		_activity_submenu_date_config
  7249 ;;		_activity_submenu_time_config
  7250 ;;		_setup
  7251 ;;		_activity_pin
  7252 ;;		_activity_submenu_pin_set
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text50
  7257  00E206                     __ptext50:
  7258                           	opt stack 0
  7259  00E206                     _lcd_comand:
  7260                           	opt stack 27
  7261                           
  7262                           ;incstack = 0
  7263                           ;lcd_comand@d stored from wreg
  7264  00E206  6E05               	movwf	lcd_comand@d,c
  7265                           
  7266                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  7267  00E208  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  7268  00E20C  0E00               	movlw	0
  7269  00E20E  EC27  F072         	call	_lcd_send_byte
  7270  00E212  0012               	return		;funcret
  7271  00E214                     __end_of_lcd_comand:
  7272                           	opt stack 0
  7273                           tblptru	equ	0xFF8
  7274                           tblptrh	equ	0xFF7
  7275                           tblptrl	equ	0xFF6
  7276                           tablat	equ	0xFF5
  7277                           prodh	equ	0xFF4
  7278                           prodl	equ	0xFF3
  7279                           intcon	equ	0xFF2
  7280                           indf0	equ	0xFEF
  7281                           postinc0	equ	0xFEE
  7282                           fsr0h	equ	0xFEA
  7283                           fsr0l	equ	0xFE9
  7284                           wreg	equ	0xFE8
  7285                           indf1	equ	0xFE7
  7286                           postdec1	equ	0xFE5
  7287                           fsr1h	equ	0xFE2
  7288                           fsr1l	equ	0xFE1
  7289                           indf2	equ	0xFDF
  7290                           fsr2h	equ	0xFDA
  7291                           fsr2l	equ	0xFD9
  7292                           status	equ	0xFD8
  7293                           
  7294 ;; *************** function _home_config_refresh *****************
  7295 ;; Defined at:
  7296 ;;		line 348 in file "main.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;		None               void
  7303 ;; Registers used:
  7304 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7314 ;;Total ram usage:        2 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    7
  7317 ;; This function calls:
  7318 ;;		_home_state_refresh
  7319 ;;		_home_tone_refresh
  7320 ;;		_home_volume_refresh
  7321 ;; This function is called by:
  7322 ;;		_main
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text51
  7327  00F5E8                     __ptext51:
  7328                           	opt stack 0
  7329  00F5E8                     _home_config_refresh:
  7330                           	opt stack 23
  7331                           
  7332                           ;main.c: 350: if(state == 1){LATBbits.LATB1 = 1;;}
  7333                           
  7334                           ;incstack = 0
  7335  00F5E8  0441               	decf	_state,w,c
  7336  00F5EA  1042               	iorwf	_state+1,w,c
  7337  00F5EC  A4D8               	btfss	status,2,c
  7338  00F5EE  D002               	goto	l4167
  7339  00F5F0  828A               	bsf	3978,1,c	;volatile
  7340  00F5F2  D000               	goto	l4167
  7341  00F5F4                     l4167:
  7342                           
  7343                           ;main.c: 351: if(state == 0){LATBbits.LATB1 = 0;;}
  7344  00F5F4  5041               	movf	_state,w,c
  7345  00F5F6  1042               	iorwf	_state+1,w,c
  7346  00F5F8  A4D8               	btfss	status,2,c
  7347  00F5FA  D002               	goto	l4171
  7348  00F5FC  928A               	bcf	3978,1,c	;volatile
  7349  00F5FE  D000               	goto	l4171
  7350  00F600                     l4171:
  7351                           
  7352                           ;main.c: 353: config_widget_time++;
  7353  00F600  4A31               	infsnz	_config_widget_time,f,c
  7354  00F602  2A32               	incf	_config_widget_time+1,f,c
  7355                           
  7356                           ;main.c: 355: switch(config_widget){
  7357  00F604  D030               	goto	l4193
  7358  00F606                     l4173:
  7359                           
  7360                           ;main.c: 358: home_state_refresh();
  7361  00F606  EC4F  F075         	call	_home_state_refresh	;wreg free
  7362                           
  7363                           ;main.c: 359: if(config_widget_time == 5){
  7364  00F60A  0E05               	movlw	5
  7365  00F60C  1831               	xorwf	_config_widget_time,w,c
  7366  00F60E  1032               	iorwf	_config_widget_time+1,w,c
  7367  00F610  A4D8               	btfss	status,2,c
  7368  00F612  0012               	return	
  7369                           
  7370                           ;main.c: 360: config_widget_time = 0;
  7371  00F614  0E00               	movlw	0
  7372  00F616  6E32               	movwf	_config_widget_time+1,c
  7373  00F618  0E00               	movlw	0
  7374  00F61A  6E31               	movwf	_config_widget_time,c
  7375                           
  7376                           ;main.c: 361: config_widget = 1;
  7377  00F61C  0E00               	movlw	0
  7378  00F61E  6E30               	movwf	_config_widget+1,c
  7379  00F620  0E01               	movlw	1
  7380  00F622  6E2F               	movwf	_config_widget,c
  7381                           
  7382                           ;main.c: 362: }
  7383                           ;main.c: 363: break;
  7384  00F624  0012               	return	
  7385  00F626                     l4179:
  7386                           
  7387                           ;main.c: 366: home_volume_refresh();
  7388  00F626  ECA1  F075         	call	_home_volume_refresh	;wreg free
  7389                           
  7390                           ;main.c: 367: if(config_widget_time == 5){
  7391  00F62A  0E05               	movlw	5
  7392  00F62C  1831               	xorwf	_config_widget_time,w,c
  7393  00F62E  1032               	iorwf	_config_widget_time+1,w,c
  7394  00F630  A4D8               	btfss	status,2,c
  7395  00F632  0012               	return	
  7396                           
  7397                           ;main.c: 368: config_widget_time = 0;
  7398  00F634  0E00               	movlw	0
  7399  00F636  6E32               	movwf	_config_widget_time+1,c
  7400  00F638  0E00               	movlw	0
  7401  00F63A  6E31               	movwf	_config_widget_time,c
  7402                           
  7403                           ;main.c: 369: config_widget = 2;
  7404  00F63C  0E00               	movlw	0
  7405  00F63E  6E30               	movwf	_config_widget+1,c
  7406  00F640  0E02               	movlw	2
  7407  00F642  6E2F               	movwf	_config_widget,c
  7408                           
  7409                           ;main.c: 370: }
  7410                           ;main.c: 371: break;
  7411  00F644  0012               	return	
  7412  00F646                     l4185:
  7413                           
  7414                           ;main.c: 374: home_tone_refresh();
  7415  00F646  EC78  F075         	call	_home_tone_refresh	;wreg free
  7416                           
  7417                           ;main.c: 375: if(config_widget_time == 5){
  7418  00F64A  0E05               	movlw	5
  7419  00F64C  1831               	xorwf	_config_widget_time,w,c
  7420  00F64E  1032               	iorwf	_config_widget_time+1,w,c
  7421  00F650  A4D8               	btfss	status,2,c
  7422  00F652  0012               	return	
  7423                           
  7424                           ;main.c: 376: config_widget_time = 0;
  7425  00F654  0E00               	movlw	0
  7426  00F656  6E32               	movwf	_config_widget_time+1,c
  7427  00F658  0E00               	movlw	0
  7428  00F65A  6E31               	movwf	_config_widget_time,c
  7429                           
  7430                           ;main.c: 377: config_widget = 0;
  7431  00F65C  0E00               	movlw	0
  7432  00F65E  6E30               	movwf	_config_widget+1,c
  7433  00F660  0E00               	movlw	0
  7434  00F662  6E2F               	movwf	_config_widget,c
  7435                           
  7436                           ;main.c: 381: }
  7437                           
  7438                           ;main.c: 378: }
  7439                           ;main.c: 379: break;
  7440  00F664  0012               	return	
  7441  00F666                     l4193:
  7442  00F666  C02F  F024         	movff	_config_widget,??_home_config_refresh
  7443  00F66A  C030  F025         	movff	_config_widget+1,??_home_config_refresh+1
  7444                           
  7445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7446                           ; Switch size 1, requested type "space"
  7447                           ; Number of cases is 1, Range of values is 0 to 0
  7448                           ; switch strategies available:
  7449                           ; Name         Instructions Cycles
  7450                           ; simple_byte            4     3 (average)
  7451                           ;	Chosen strategy is simple_byte
  7452  00F66E  5025               	movf	??_home_config_refresh+1,w,c
  7453  00F670  0A00               	xorlw	0	; case 0
  7454  00F672  A4D8               	btfss	status,2,c
  7455  00F674  0012               	return	
  7456                           
  7457                           ; Switch size 1, requested type "space"
  7458                           ; Number of cases is 3, Range of values is 0 to 2
  7459                           ; switch strategies available:
  7460                           ; Name         Instructions Cycles
  7461                           ; simple_byte           10     6 (average)
  7462                           ;	Chosen strategy is simple_byte
  7463  00F676  5024               	movf	??_home_config_refresh,w,c
  7464  00F678  0A00               	xorlw	0	; case 0
  7465  00F67A  B4D8               	btfsc	status,2,c
  7466  00F67C  D7C4               	goto	l4173
  7467  00F67E  0A01               	xorlw	1	; case 1
  7468  00F680  B4D8               	btfsc	status,2,c
  7469  00F682  D7D1               	goto	l4179
  7470  00F684  0A03               	xorlw	3	; case 2
  7471  00F686  A4D8               	btfss	status,2,c
  7472  00F688  0012               	return	
  7473  00F68A  D7DD               	goto	l4185
  7474  00F68C  0012               	return		;funcret
  7475  00F68E                     __end_of_home_config_refresh:
  7476                           	opt stack 0
  7477                           tblptru	equ	0xFF8
  7478                           tblptrh	equ	0xFF7
  7479                           tblptrl	equ	0xFF6
  7480                           tablat	equ	0xFF5
  7481                           prodh	equ	0xFF4
  7482                           prodl	equ	0xFF3
  7483                           intcon	equ	0xFF2
  7484                           indf0	equ	0xFEF
  7485                           postinc0	equ	0xFEE
  7486                           fsr0h	equ	0xFEA
  7487                           fsr0l	equ	0xFE9
  7488                           wreg	equ	0xFE8
  7489                           indf1	equ	0xFE7
  7490                           postdec1	equ	0xFE5
  7491                           fsr1h	equ	0xFE2
  7492                           fsr1l	equ	0xFE1
  7493                           indf2	equ	0xFDF
  7494                           fsr2h	equ	0xFDA
  7495                           fsr2l	equ	0xFD9
  7496                           status	equ	0xFD8
  7497                           
  7498 ;; *************** function _home_volume_refresh *****************
  7499 ;; Defined at:
  7500 ;;		line 324 in file "main.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;		None
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;		None
  7505 ;; Return value:  Size  Location     Type
  7506 ;;		None               void
  7507 ;; Registers used:
  7508 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;Total ram usage:        0 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; Hardware stack levels required when called:    6
  7521 ;; This function calls:
  7522 ;;		_lcd_write
  7523 ;;		_sprintf
  7524 ;; This function is called by:
  7525 ;;		_home_config_refresh
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           	psect	text52
  7530  00EB42                     __ptext52:
  7531                           	opt stack 0
  7532  00EB42                     _home_volume_refresh:
  7533                           	opt stack 23
  7534                           
  7535                           ;main.c: 326: if(alarm_volume == 0){
  7536                           
  7537                           ;incstack = 0
  7538  00EB42  502D               	movf	_alarm_volume,w,c
  7539  00EB44  102E               	iorwf	_alarm_volume+1,w,c
  7540  00EB46  A4D8               	btfss	status,2,c
  7541  00EB48  D00B               	goto	l3999
  7542                           
  7543                           ;main.c: 327: sprintf(buffer1,"VOL:BA");
  7544  00EB4A  0E86               	movlw	low _buffer1
  7545  00EB4C  6E0D               	movwf	sprintf@sp,c
  7546  00EB4E  0E00               	movlw	high _buffer1
  7547  00EB50  6E0E               	movwf	sprintf@sp+1,c
  7548  00EB52  0E89               	movlw	low STR_29
  7549  00EB54  6E0F               	movwf	sprintf@f,c
  7550  00EB56  0EFF               	movlw	high STR_29
  7551  00EB58  6E10               	movwf	sprintf@f+1,c
  7552  00EB5A  EC44  F07E         	call	_sprintf	;wreg free
  7553                           
  7554                           ;main.c: 328: }
  7555  00EB5E  D00B               	goto	l4001
  7556  00EB60                     l3999:
  7557                           
  7558                           ;main.c: 329: else{
  7559                           ;main.c: 330: sprintf(buffer1,"VOL:AL");
  7560  00EB60  0E86               	movlw	low _buffer1
  7561  00EB62  6E0D               	movwf	sprintf@sp,c
  7562  00EB64  0E00               	movlw	high _buffer1
  7563  00EB66  6E0E               	movwf	sprintf@sp+1,c
  7564  00EB68  0E97               	movlw	low STR_30
  7565  00EB6A  6E0F               	movwf	sprintf@f,c
  7566  00EB6C  0EFF               	movlw	high STR_30
  7567  00EB6E  6E10               	movwf	sprintf@f+1,c
  7568  00EB70  EC44  F07E         	call	_sprintf	;wreg free
  7569  00EB74  D000               	goto	l4001
  7570  00EB76                     l4001:
  7571                           
  7572                           ;main.c: 331: }
  7573                           ;main.c: 332: lcd_write(1,2,buffer1);
  7574  00EB76  0E00               	movlw	0
  7575  00EB78  6E0C               	movwf	lcd_write@column+1,c
  7576  00EB7A  0E01               	movlw	1
  7577  00EB7C  6E0B               	movwf	lcd_write@column,c
  7578  00EB7E  0E00               	movlw	0
  7579  00EB80  6E0E               	movwf	lcd_write@row+1,c
  7580  00EB82  0E02               	movlw	2
  7581  00EB84  6E0D               	movwf	lcd_write@row,c
  7582  00EB86  0E86               	movlw	low _buffer1
  7583  00EB88  6E0F               	movwf	lcd_write@string,c
  7584  00EB8A  0E00               	movlw	high _buffer1
  7585  00EB8C  6E10               	movwf	lcd_write@string+1,c
  7586  00EB8E  EC30  F071         	call	_lcd_write	;wreg free
  7587  00EB92  0012               	return		;funcret
  7588  00EB94                     __end_of_home_volume_refresh:
  7589                           	opt stack 0
  7590                           tblptru	equ	0xFF8
  7591                           tblptrh	equ	0xFF7
  7592                           tblptrl	equ	0xFF6
  7593                           tablat	equ	0xFF5
  7594                           prodh	equ	0xFF4
  7595                           prodl	equ	0xFF3
  7596                           intcon	equ	0xFF2
  7597                           indf0	equ	0xFEF
  7598                           postinc0	equ	0xFEE
  7599                           fsr0h	equ	0xFEA
  7600                           fsr0l	equ	0xFE9
  7601                           wreg	equ	0xFE8
  7602                           indf1	equ	0xFE7
  7603                           postdec1	equ	0xFE5
  7604                           fsr1h	equ	0xFE2
  7605                           fsr1l	equ	0xFE1
  7606                           indf2	equ	0xFDF
  7607                           fsr2h	equ	0xFDA
  7608                           fsr2l	equ	0xFD9
  7609                           status	equ	0xFD8
  7610                           
  7611 ;; *************** function _home_tone_refresh *****************
  7612 ;; Defined at:
  7613 ;;		line 336 in file "main.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;		None
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;		None
  7618 ;; Return value:  Size  Location     Type
  7619 ;;		None               void
  7620 ;; Registers used:
  7621 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7631 ;;Total ram usage:        0 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    6
  7634 ;; This function calls:
  7635 ;;		_lcd_write
  7636 ;;		_sprintf
  7637 ;; This function is called by:
  7638 ;;		_home_config_refresh
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text53
  7643  00EAF0                     __ptext53:
  7644                           	opt stack 0
  7645  00EAF0                     _home_tone_refresh:
  7646                           	opt stack 23
  7647                           
  7648                           ;main.c: 338: if(alarm_tone == 0){
  7649                           
  7650                           ;incstack = 0
  7651  00EAF0  502B               	movf	_alarm_tone,w,c
  7652  00EAF2  102C               	iorwf	_alarm_tone+1,w,c
  7653  00EAF4  A4D8               	btfss	status,2,c
  7654  00EAF6  D00B               	goto	l4007
  7655                           
  7656                           ;main.c: 339: sprintf(buffer1,"TONO:1");
  7657  00EAF8  0E86               	movlw	low _buffer1
  7658  00EAFA  6E0D               	movwf	sprintf@sp,c
  7659  00EAFC  0E00               	movlw	high _buffer1
  7660  00EAFE  6E0E               	movwf	sprintf@sp+1,c
  7661  00EB00  0E74               	movlw	low STR_31
  7662  00EB02  6E0F               	movwf	sprintf@f,c
  7663  00EB04  0EFF               	movlw	high STR_31
  7664  00EB06  6E10               	movwf	sprintf@f+1,c
  7665  00EB08  EC44  F07E         	call	_sprintf	;wreg free
  7666                           
  7667                           ;main.c: 340: }
  7668  00EB0C  D00B               	goto	l4009
  7669  00EB0E                     l4007:
  7670                           
  7671                           ;main.c: 341: else{
  7672                           ;main.c: 342: sprintf(buffer1,"TONO:2");
  7673  00EB0E  0E86               	movlw	low _buffer1
  7674  00EB10  6E0D               	movwf	sprintf@sp,c
  7675  00EB12  0E00               	movlw	high _buffer1
  7676  00EB14  6E0E               	movwf	sprintf@sp+1,c
  7677  00EB16  0E82               	movlw	low STR_32
  7678  00EB18  6E0F               	movwf	sprintf@f,c
  7679  00EB1A  0EFF               	movlw	high STR_32
  7680  00EB1C  6E10               	movwf	sprintf@f+1,c
  7681  00EB1E  EC44  F07E         	call	_sprintf	;wreg free
  7682  00EB22  D000               	goto	l4009
  7683  00EB24                     l4009:
  7684                           
  7685                           ;main.c: 343: }
  7686                           ;main.c: 344: lcd_write(1,2,buffer1);
  7687  00EB24  0E00               	movlw	0
  7688  00EB26  6E0C               	movwf	lcd_write@column+1,c
  7689  00EB28  0E01               	movlw	1
  7690  00EB2A  6E0B               	movwf	lcd_write@column,c
  7691  00EB2C  0E00               	movlw	0
  7692  00EB2E  6E0E               	movwf	lcd_write@row+1,c
  7693  00EB30  0E02               	movlw	2
  7694  00EB32  6E0D               	movwf	lcd_write@row,c
  7695  00EB34  0E86               	movlw	low _buffer1
  7696  00EB36  6E0F               	movwf	lcd_write@string,c
  7697  00EB38  0E00               	movlw	high _buffer1
  7698  00EB3A  6E10               	movwf	lcd_write@string+1,c
  7699  00EB3C  EC30  F071         	call	_lcd_write	;wreg free
  7700  00EB40  0012               	return		;funcret
  7701  00EB42                     __end_of_home_tone_refresh:
  7702                           	opt stack 0
  7703                           tblptru	equ	0xFF8
  7704                           tblptrh	equ	0xFF7
  7705                           tblptrl	equ	0xFF6
  7706                           tablat	equ	0xFF5
  7707                           prodh	equ	0xFF4
  7708                           prodl	equ	0xFF3
  7709                           intcon	equ	0xFF2
  7710                           indf0	equ	0xFEF
  7711                           postinc0	equ	0xFEE
  7712                           fsr0h	equ	0xFEA
  7713                           fsr0l	equ	0xFE9
  7714                           wreg	equ	0xFE8
  7715                           indf1	equ	0xFE7
  7716                           postdec1	equ	0xFE5
  7717                           fsr1h	equ	0xFE2
  7718                           fsr1l	equ	0xFE1
  7719                           indf2	equ	0xFDF
  7720                           fsr2h	equ	0xFDA
  7721                           fsr2l	equ	0xFD9
  7722                           status	equ	0xFD8
  7723                           
  7724 ;; *************** function _home_state_refresh *****************
  7725 ;; Defined at:
  7726 ;;		line 312 in file "main.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;		None
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;		None               void
  7733 ;; Registers used:
  7734 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;Total ram usage:        0 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:    6
  7747 ;; This function calls:
  7748 ;;		_lcd_write
  7749 ;;		_sprintf
  7750 ;; This function is called by:
  7751 ;;		_home_config_refresh
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text54
  7756  00EA9E                     __ptext54:
  7757                           	opt stack 0
  7758  00EA9E                     _home_state_refresh:
  7759                           	opt stack 23
  7760                           
  7761                           ;main.c: 314: if(state == 1){
  7762                           
  7763                           ;incstack = 0
  7764  00EA9E  0441               	decf	_state,w,c
  7765  00EAA0  1042               	iorwf	_state+1,w,c
  7766  00EAA2  A4D8               	btfss	status,2,c
  7767  00EAA4  D00B               	goto	l3991
  7768                           
  7769                           ;main.c: 315: sprintf(buffer1,"ACT:SI");
  7770  00EAA6  0E86               	movlw	low _buffer1
  7771  00EAA8  6E0D               	movwf	sprintf@sp,c
  7772  00EAAA  0E00               	movlw	high _buffer1
  7773  00EAAC  6E0E               	movwf	sprintf@sp+1,c
  7774  00EAAE  0E90               	movlw	low STR_27
  7775  00EAB0  6E0F               	movwf	sprintf@f,c
  7776  00EAB2  0EFF               	movlw	high STR_27
  7777  00EAB4  6E10               	movwf	sprintf@f+1,c
  7778  00EAB6  EC44  F07E         	call	_sprintf	;wreg free
  7779                           
  7780                           ;main.c: 316: }
  7781  00EABA  D00B               	goto	l3993
  7782  00EABC                     l3991:
  7783                           
  7784                           ;main.c: 317: else{
  7785                           ;main.c: 318: sprintf(buffer1,"ACT:NO");
  7786  00EABC  0E86               	movlw	low _buffer1
  7787  00EABE  6E0D               	movwf	sprintf@sp,c
  7788  00EAC0  0E00               	movlw	high _buffer1
  7789  00EAC2  6E0E               	movwf	sprintf@sp+1,c
  7790  00EAC4  0E9E               	movlw	low STR_28
  7791  00EAC6  6E0F               	movwf	sprintf@f,c
  7792  00EAC8  0EFF               	movlw	high STR_28
  7793  00EACA  6E10               	movwf	sprintf@f+1,c
  7794  00EACC  EC44  F07E         	call	_sprintf	;wreg free
  7795  00EAD0  D000               	goto	l3993
  7796  00EAD2                     l3993:
  7797                           
  7798                           ;main.c: 319: }
  7799                           ;main.c: 320: lcd_write(1,2,buffer1);
  7800  00EAD2  0E00               	movlw	0
  7801  00EAD4  6E0C               	movwf	lcd_write@column+1,c
  7802  00EAD6  0E01               	movlw	1
  7803  00EAD8  6E0B               	movwf	lcd_write@column,c
  7804  00EADA  0E00               	movlw	0
  7805  00EADC  6E0E               	movwf	lcd_write@row+1,c
  7806  00EADE  0E02               	movlw	2
  7807  00EAE0  6E0D               	movwf	lcd_write@row,c
  7808  00EAE2  0E86               	movlw	low _buffer1
  7809  00EAE4  6E0F               	movwf	lcd_write@string,c
  7810  00EAE6  0E00               	movlw	high _buffer1
  7811  00EAE8  6E10               	movwf	lcd_write@string+1,c
  7812  00EAEA  EC30  F071         	call	_lcd_write	;wreg free
  7813  00EAEE  0012               	return		;funcret
  7814  00EAF0                     __end_of_home_state_refresh:
  7815                           	opt stack 0
  7816                           tblptru	equ	0xFF8
  7817                           tblptrh	equ	0xFF7
  7818                           tblptrl	equ	0xFF6
  7819                           tablat	equ	0xFF5
  7820                           prodh	equ	0xFF4
  7821                           prodl	equ	0xFF3
  7822                           intcon	equ	0xFF2
  7823                           indf0	equ	0xFEF
  7824                           postinc0	equ	0xFEE
  7825                           fsr0h	equ	0xFEA
  7826                           fsr0l	equ	0xFE9
  7827                           wreg	equ	0xFE8
  7828                           indf1	equ	0xFE7
  7829                           postdec1	equ	0xFE5
  7830                           fsr1h	equ	0xFE2
  7831                           fsr1l	equ	0xFE1
  7832                           indf2	equ	0xFDF
  7833                           fsr2h	equ	0xFDA
  7834                           fsr2l	equ	0xFD9
  7835                           status	equ	0xFD8
  7836                           
  7837 ;; *************** function _home_clock_refresh *****************
  7838 ;; Defined at:
  7839 ;;		line 303 in file "main.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;		None               void
  7846 ;; Registers used:
  7847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7857 ;;Total ram usage:        0 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    6
  7860 ;; This function calls:
  7861 ;;		_lcd_write
  7862 ;;		_sprintf
  7863 ;; This function is called by:
  7864 ;;		_main
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text55
  7869  00F390                     __ptext55:
  7870                           	opt stack 0
  7871  00F390                     _home_clock_refresh:
  7872                           	opt stack 24
  7873                           
  7874                           ;main.c: 305: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  7875                           
  7876                           ;incstack = 0
  7877  00F390  0E86               	movlw	low _buffer1
  7878  00F392  6E0D               	movwf	sprintf@sp,c
  7879  00F394  0E00               	movlw	high _buffer1
  7880  00F396  6E0E               	movwf	sprintf@sp+1,c
  7881  00F398  0E2C               	movlw	low STR_13
  7882  00F39A  6E0F               	movwf	sprintf@f,c
  7883  00F39C  0EFF               	movlw	high STR_13
  7884  00F39E  6E10               	movwf	sprintf@f+1,c
  7885  00F3A0  C050  F011         	movff	_dia,?_sprintf+4
  7886  00F3A4  C051  F012         	movff	_dia+1,?_sprintf+5
  7887  00F3A8  C056  F013         	movff	_mes,?_sprintf+6
  7888  00F3AC  C057  F014         	movff	_mes+1,?_sprintf+7
  7889  00F3B0  C04E  F015         	movff	_anio,?_sprintf+8
  7890  00F3B4  C04F  F016         	movff	_anio+1,?_sprintf+9
  7891  00F3B8  EC44  F07E         	call	_sprintf	;wreg free
  7892                           
  7893                           ;main.c: 306: lcd_write(9,1,buffer1);
  7894  00F3BC  0E00               	movlw	0
  7895  00F3BE  6E0C               	movwf	lcd_write@column+1,c
  7896  00F3C0  0E09               	movlw	9
  7897  00F3C2  6E0B               	movwf	lcd_write@column,c
  7898  00F3C4  0E00               	movlw	0
  7899  00F3C6  6E0E               	movwf	lcd_write@row+1,c
  7900  00F3C8  0E01               	movlw	1
  7901  00F3CA  6E0D               	movwf	lcd_write@row,c
  7902  00F3CC  0E86               	movlw	low _buffer1
  7903  00F3CE  6E0F               	movwf	lcd_write@string,c
  7904  00F3D0  0E00               	movlw	high _buffer1
  7905  00F3D2  6E10               	movwf	lcd_write@string+1,c
  7906  00F3D4  EC30  F071         	call	_lcd_write	;wreg free
  7907                           
  7908                           ;main.c: 307: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  7909  00F3D8  0E86               	movlw	low _buffer1
  7910  00F3DA  6E0D               	movwf	sprintf@sp,c
  7911  00F3DC  0E00               	movlw	high _buffer1
  7912  00F3DE  6E0E               	movwf	sprintf@sp+1,c
  7913  00F3E0  0E3B               	movlw	low STR_15
  7914  00F3E2  6E0F               	movwf	sprintf@f,c
  7915  00F3E4  0EFF               	movlw	high STR_15
  7916  00F3E6  6E10               	movwf	sprintf@f+1,c
  7917  00F3E8  C054  F011         	movff	_hora,?_sprintf+4
  7918  00F3EC  C055  F012         	movff	_hora+1,?_sprintf+5
  7919  00F3F0  C03D  F013         	movff	_minuto,?_sprintf+6
  7920  00F3F4  C03E  F014         	movff	_minuto+1,?_sprintf+7
  7921  00F3F8  C03F  F015         	movff	_segundo,?_sprintf+8
  7922  00F3FC  C040  F016         	movff	_segundo+1,?_sprintf+9
  7923  00F400  EC44  F07E         	call	_sprintf	;wreg free
  7924                           
  7925                           ;main.c: 308: lcd_write(9,2,buffer1);
  7926  00F404  0E00               	movlw	0
  7927  00F406  6E0C               	movwf	lcd_write@column+1,c
  7928  00F408  0E09               	movlw	9
  7929  00F40A  6E0B               	movwf	lcd_write@column,c
  7930  00F40C  0E00               	movlw	0
  7931  00F40E  6E0E               	movwf	lcd_write@row+1,c
  7932  00F410  0E02               	movlw	2
  7933  00F412  6E0D               	movwf	lcd_write@row,c
  7934  00F414  0E86               	movlw	low _buffer1
  7935  00F416  6E0F               	movwf	lcd_write@string,c
  7936  00F418  0E00               	movlw	high _buffer1
  7937  00F41A  6E10               	movwf	lcd_write@string+1,c
  7938  00F41C  EC30  F071         	call	_lcd_write	;wreg free
  7939  00F420  0012               	return		;funcret
  7940  00F422                     __end_of_home_clock_refresh:
  7941                           	opt stack 0
  7942                           tblptru	equ	0xFF8
  7943                           tblptrh	equ	0xFF7
  7944                           tblptrl	equ	0xFF6
  7945                           tablat	equ	0xFF5
  7946                           prodh	equ	0xFF4
  7947                           prodl	equ	0xFF3
  7948                           intcon	equ	0xFF2
  7949                           indf0	equ	0xFEF
  7950                           postinc0	equ	0xFEE
  7951                           fsr0h	equ	0xFEA
  7952                           fsr0l	equ	0xFE9
  7953                           wreg	equ	0xFE8
  7954                           indf1	equ	0xFE7
  7955                           postdec1	equ	0xFE5
  7956                           fsr1h	equ	0xFE2
  7957                           fsr1l	equ	0xFE1
  7958                           indf2	equ	0xFDF
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963 ;; *************** function _sprintf *****************
  7964 ;; Defined at:
  7965 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  sp              2   12[COMRAM] PTR unsigned char 
  7968 ;;		 -> buffer1(20), 
  7969 ;;  f               2   14[COMRAM] PTR const unsigned char 
  7970 ;;		 -> STR_33(5), STR_32(7), STR_31(7), STR_30(7), 
  7971 ;;		 -> STR_29(7), STR_28(7), STR_27(7), STR_26(15), 
  7972 ;;		 -> STR_25(15), STR_15(15), STR_13(15), 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;  tmpval          4    0        struct .
  7975 ;;  cp              3    0        PTR const unsigned char 
  7976 ;;  width           2   32[COMRAM] int 
  7977 ;;  val             2   29[COMRAM] unsigned int 
  7978 ;;  ap              2   26[COMRAM] PTR void [1]
  7979 ;;		 -> ?_sprintf(2), 
  7980 ;;  len             2    0        unsigned int 
  7981 ;;  c               1   34[COMRAM] char 
  7982 ;;  prec            1   31[COMRAM] char 
  7983 ;;  flag            1   28[COMRAM] unsigned char 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  2   12[COMRAM] int 
  7986 ;; Registers used:
  7987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7993 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;Total ram usage:       23 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    1
  8000 ;; This function calls:
  8001 ;;		___lwdiv
  8002 ;;		___lwmod
  8003 ;;		___wmul
  8004 ;;		_isdigit
  8005 ;; This function is called by:
  8006 ;;		_activity_submenu_date_config
  8007 ;;		_activity_submenu_time_config
  8008 ;;		_home_clock_refresh
  8009 ;;		_home_state_refresh
  8010 ;;		_home_volume_refresh
  8011 ;;		_home_tone_refresh
  8012 ;;		_button_number
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text56
  8017  00FC88                     __ptext56:
  8018                           	opt stack 0
  8019  00FC88                     _sprintf:
  8020                           	opt stack 27
  8021                           
  8022                           ;doprnt.c: 494: va_list ap;
  8023                           ;doprnt.c: 499: signed char c;
  8024                           ;doprnt.c: 501: int width;
  8025                           ;doprnt.c: 506: signed char prec;
  8026                           ;doprnt.c: 508: unsigned char flag;
  8027                           ;doprnt.c: 523: union {
  8028                           ;doprnt.c: 524: unsigned long vd;
  8029                           ;doprnt.c: 525: double integ;
  8030                           ;doprnt.c: 526: } tmpval;
  8031                           ;doprnt.c: 528: unsigned int val;
  8032                           ;doprnt.c: 529: unsigned len;
  8033                           ;doprnt.c: 530: const char * cp;
  8034                           ;doprnt.c: 533: *ap = __va_start();
  8035                           
  8036                           ;incstack = 0
  8037  00FC88  0E11               	movlw	low (?_sprintf+4)
  8038  00FC8A  6E1B               	movwf	sprintf@ap,c
  8039  00FC8C  0E00               	movlw	high (?_sprintf+4)
  8040  00FC8E  6E1C               	movwf	sprintf@ap+1,c
  8041                           
  8042                           ;doprnt.c: 536: while(c = *f++) {
  8043  00FC90  D117               	goto	l3409
  8044  00FC92                     l3327:
  8045                           
  8046                           ;doprnt.c: 538: if(c != '%')
  8047  00FC92  0E25               	movlw	37
  8048  00FC94  1823               	xorwf	sprintf@c,w,c
  8049  00FC96  B4D8               	btfsc	status,2,c
  8050  00FC98  D009               	goto	l3333
  8051                           
  8052                           ;doprnt.c: 540: {
  8053                           ;doprnt.c: 541: ((*sp++ = (c)));
  8054  00FC9A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8055  00FC9E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8056  00FCA2  C023  FFDF         	movff	sprintf@c,indf2
  8057  00FCA6  4A0D               	infsnz	sprintf@sp,f,c
  8058  00FCA8  2A0E               	incf	sprintf@sp+1,f,c
  8059                           
  8060                           ;doprnt.c: 542: continue;
  8061  00FCAA  D10A               	goto	l3409
  8062  00FCAC                     l3333:
  8063                           
  8064                           ;doprnt.c: 543: }
  8065                           ;doprnt.c: 546: width = 0;
  8066  00FCAC  0E00               	movlw	0
  8067  00FCAE  6E22               	movwf	sprintf@width+1,c
  8068  00FCB0  0E00               	movlw	0
  8069  00FCB2  6E21               	movwf	sprintf@width,c
  8070                           
  8071                           ;doprnt.c: 548: flag = 0;
  8072  00FCB4  0E00               	movlw	0
  8073  00FCB6  6E1D               	movwf	sprintf@flag,c
  8074                           
  8075                           ;doprnt.c: 551: switch(*f) {
  8076                           
  8077                           ;doprnt.c: 550: for(;;) {
  8078  00FCB8  D005               	goto	l3339
  8079  00FCBA                     l3335:
  8080                           
  8081                           ;doprnt.c: 580: flag |= 0x04;
  8082  00FCBA  841D               	bsf	sprintf@flag,2,c
  8083                           
  8084                           ;doprnt.c: 581: f++;
  8085  00FCBC  4A0F               	infsnz	sprintf@f,f,c
  8086  00FCBE  2A10               	incf	sprintf@f+1,f,c
  8087                           
  8088                           ;doprnt.c: 582: continue;
  8089  00FCC0  D001               	goto	l3339
  8090                           
  8091                           ;doprnt.c: 584: }
  8092  00FCC2  D00B               	goto	l3341
  8093  00FCC4                     l3339:
  8094  00FCC4  C00F  FFF6         	movff	sprintf@f,tblptrl
  8095  00FCC8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8096  00FCCC                     	if	0	;tblptru may be non-zero
  8097  00FCCC                     	endif
  8098  00FCCC                     	if	0	;tblptru may be non-zero
  8099  00FCCC                     	endif
  8100  00FCCC  0008               	tblrd		*
  8101  00FCCE  50F5               	movf	tablat,w,c
  8102                           
  8103                           ; Switch size 1, requested type "space"
  8104                           ; Number of cases is 1, Range of values is 48 to 48
  8105                           ; switch strategies available:
  8106                           ; Name         Instructions Cycles
  8107                           ; simple_byte            4     3 (average)
  8108                           ;	Chosen strategy is simple_byte
  8109  00FCD0  0A30               	xorlw	48	; case 48
  8110  00FCD2  B4D8               	btfsc	status,2,c
  8111  00FCD4  D7F2               	goto	l3335
  8112                           
  8113                           ;doprnt.c: 585: break;
  8114  00FCD6  D001               	goto	l3341
  8115                           
  8116                           ;doprnt.c: 586: }
  8117  00FCD8  D7F5               	goto	l3339
  8118  00FCDA                     l3341:
  8119                           
  8120                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8121  00FCDA  C00F  FFF6         	movff	sprintf@f,tblptrl
  8122  00FCDE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8123  00FCE2                     	if	0	;tblptru may be non-zero
  8124  00FCE2                     	endif
  8125  00FCE2                     	if	0	;tblptru may be non-zero
  8126  00FCE2                     	endif
  8127  00FCE2  0008               	tblrd		*
  8128  00FCE4  50F5               	movf	tablat,w,c
  8129  00FCE6  EC68  F071         	call	_isdigit
  8130  00FCEA  A0D8               	btfss	status,0,c
  8131  00FCEC  D03A               	goto	l3357
  8132                           
  8133                           ;doprnt.c: 598: width = 0;
  8134  00FCEE  0E00               	movlw	0
  8135  00FCF0  6E22               	movwf	sprintf@width+1,c
  8136  00FCF2  0E00               	movlw	0
  8137  00FCF4  6E21               	movwf	sprintf@width,c
  8138  00FCF6  D000               	goto	l3345
  8139  00FCF8                     l3345:
  8140                           
  8141                           ;doprnt.c: 600: width *= 10;
  8142  00FCF8  C021  F001         	movff	sprintf@width,___wmul@multiplier
  8143  00FCFC  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  8144  00FD00  0E00               	movlw	0
  8145  00FD02  6E04               	movwf	___wmul@multiplicand+1,c
  8146  00FD04  0E0A               	movlw	10
  8147  00FD06  6E03               	movwf	___wmul@multiplicand,c
  8148  00FD08  EC8B  F071         	call	___wmul	;wreg free
  8149  00FD0C  C001  F021         	movff	?___wmul,sprintf@width
  8150  00FD10  C002  F022         	movff	?___wmul+1,sprintf@width+1
  8151                           
  8152                           ;doprnt.c: 601: width += *f++ - '0';
  8153  00FD14  0ED0               	movlw	208
  8154  00FD16  6E17               	movwf	??_sprintf& (0+255),c
  8155  00FD18  0EFF               	movlw	255
  8156  00FD1A  6E18               	movwf	(??_sprintf+1)& (0+255),c
  8157  00FD1C  C00F  FFF6         	movff	sprintf@f,tblptrl
  8158  00FD20  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8159  00FD24                     	if	0	;tblptru may be non-zero
  8160  00FD24                     	endif
  8161  00FD24                     	if	0	;tblptru may be non-zero
  8162  00FD24                     	endif
  8163  00FD24  0008               	tblrd		*
  8164  00FD26  50F5               	movf	tablat,w,c
  8165  00FD28  6E19               	movwf	(??_sprintf+2)& (0+255),c
  8166  00FD2A  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  8167  00FD2C  5017               	movf	??_sprintf,w,c
  8168  00FD2E  2619               	addwf	??_sprintf+2,f,c
  8169  00FD30  5018               	movf	??_sprintf+1,w,c
  8170  00FD32  221A               	addwfc	??_sprintf+3,f,c
  8171  00FD34  5019               	movf	??_sprintf+2,w,c
  8172  00FD36  2621               	addwf	sprintf@width,f,c
  8173  00FD38  501A               	movf	??_sprintf+3,w,c
  8174  00FD3A  2222               	addwfc	sprintf@width+1,f,c
  8175  00FD3C  4A0F               	infsnz	sprintf@f,f,c
  8176  00FD3E  2A10               	incf	sprintf@f+1,f,c
  8177                           
  8178                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8179  00FD40  C00F  FFF6         	movff	sprintf@f,tblptrl
  8180  00FD44  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8181  00FD48                     	if	0	;tblptru may be non-zero
  8182  00FD48                     	endif
  8183  00FD48                     	if	0	;tblptru may be non-zero
  8184  00FD48                     	endif
  8185  00FD48  0008               	tblrd		*
  8186  00FD4A  50F5               	movf	tablat,w,c
  8187  00FD4C  EC68  F071         	call	_isdigit
  8188  00FD50  A0D8               	btfss	status,0,c
  8189  00FD52  D007               	goto	l3357
  8190  00FD54  D7D1               	goto	l3345
  8191                           
  8192                           ;doprnt.c: 608: }
  8193                           ;doprnt.c: 635: switch(c = *f++) {
  8194  00FD56  D005               	goto	l3357
  8195                           
  8196                           ;doprnt.c: 638: goto alldone;
  8197                           
  8198                           ;doprnt.c: 637: case 0:
  8199  00FD58  D0C1               	goto	l3411
  8200                           
  8201                           ;doprnt.c: 813: continue;
  8202                           
  8203                           ;doprnt.c: 802: default:
  8204  00FD5A  D0B2               	goto	l3409
  8205  00FD5C                     l3353:
  8206                           
  8207                           ;doprnt.c: 818: flag |= 0xC0;
  8208  00FD5C  0EC0               	movlw	192
  8209  00FD5E  121D               	iorwf	sprintf@flag,f,c
  8210                           
  8211                           ;doprnt.c: 822: }
  8212                           
  8213                           ;doprnt.c: 819: break;
  8214  00FD60  D011               	goto	l3359
  8215  00FD62                     l3357:
  8216  00FD62  C00F  FFF6         	movff	sprintf@f,tblptrl
  8217  00FD66  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8218  00FD6A  4A0F               	infsnz	sprintf@f,f,c
  8219  00FD6C  2A10               	incf	sprintf@f+1,f,c
  8220  00FD6E                     	if	0	;tblptru may be non-zero
  8221  00FD6E                     	endif
  8222  00FD6E                     	if	0	;tblptru may be non-zero
  8223  00FD6E                     	endif
  8224  00FD6E  0008               	tblrd		*
  8225  00FD70  CFF5 F023          	movff	tablat,sprintf@c
  8226  00FD74  5023               	movf	sprintf@c,w,c
  8227                           
  8228                           ; Switch size 1, requested type "space"
  8229                           ; Number of cases is 2, Range of values is 0 to 117
  8230                           ; switch strategies available:
  8231                           ; Name         Instructions Cycles
  8232                           ; simple_byte            7     4 (average)
  8233                           ;	Chosen strategy is simple_byte
  8234  00FD76  0A00               	xorlw	0	; case 0
  8235  00FD78  B4D8               	btfsc	status,2,c
  8236  00FD7A  D0B0               	goto	l3411
  8237  00FD7C  0A75               	xorlw	117	; case 117
  8238  00FD7E  B4D8               	btfsc	status,2,c
  8239  00FD80  D7ED               	goto	l3353
  8240  00FD82  D09E               	goto	l3409
  8241  00FD84                     l3359:
  8242                           
  8243                           ;doprnt.c: 1273: {
  8244                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8245  00FD84  C01B  FFD9         	movff	sprintf@ap,fsr2l
  8246  00FD88  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  8247  00FD8C  CFDE F01E          	movff	postinc2,sprintf@val
  8248  00FD90  CFDD F01F          	movff	postdec2,sprintf@val+1
  8249  00FD94  0E02               	movlw	2
  8250  00FD96  261B               	addwf	sprintf@ap,f,c
  8251  00FD98  0E00               	movlw	0
  8252  00FD9A  221C               	addwfc	sprintf@ap+1,f,c
  8253                           
  8254                           ;doprnt.c: 1287: }
  8255                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8256  00FD9C  0E01               	movlw	1
  8257  00FD9E  6E23               	movwf	sprintf@c,c
  8258  00FDA0                     l3365:
  8259  00FDA0  0E05               	movlw	5
  8260  00FDA2  1823               	xorwf	sprintf@c,w,c
  8261  00FDA4  B4D8               	btfsc	status,2,c
  8262  00FDA6  D016               	goto	l3377
  8263  00FDA8  D001               	goto	l3369
  8264  00FDAA  D014               	goto	l3377
  8265  00FDAC                     l3369:
  8266                           
  8267                           ;doprnt.c: 1306: if(val < dpowers[c])
  8268  00FDAC  5023               	movf	sprintf@c,w,c
  8269  00FDAE  0D02               	mullw	2
  8270  00FDB0  0EED               	movlw	low _dpowers
  8271  00FDB2  24F3               	addwf	prodl,w,c
  8272  00FDB4  6EF6               	movwf	tblptrl,c
  8273  00FDB6  0EFE               	movlw	high _dpowers
  8274  00FDB8  20F4               	addwfc	prodh,w,c
  8275  00FDBA  6EF7               	movwf	tblptrh,c
  8276  00FDBC                     	if	0	;There are less than 3 active tblptr bytes
  8277  00FDBC                     	endif
  8278  00FDBC  0009               	tblrd		*+
  8279  00FDBE  50F5               	movf	tablat,w,c
  8280  00FDC0  5C1E               	subwf	sprintf@val,w,c
  8281  00FDC2  0009               	tblrd		*+
  8282  00FDC4  50F5               	movf	tablat,w,c
  8283  00FDC6  581F               	subwfb	sprintf@val+1,w,c
  8284  00FDC8  A0D8               	btfss	status,0,c
  8285  00FDCA  D004               	goto	l3377
  8286  00FDCC  D001               	goto	l3373
  8287                           
  8288                           ;doprnt.c: 1307: break;
  8289  00FDCE  D002               	goto	l3377
  8290  00FDD0                     l3373:
  8291  00FDD0  2A23               	incf	sprintf@c,f,c
  8292  00FDD2  D7E6               	goto	l3365
  8293  00FDD4                     l3377:
  8294                           
  8295                           ;doprnt.c: 1381: if(width > c)
  8296  00FDD4  0E80               	movlw	128
  8297  00FDD6  BE23               	btfsc	sprintf@c,7,c
  8298  00FDD8  0E7F               	movlw	127
  8299  00FDDA  6E17               	movwf	??_sprintf& (0+255),c
  8300  00FDDC  5021               	movf	sprintf@width,w,c
  8301  00FDDE  5C23               	subwf	sprintf@c,w,c
  8302  00FDE0  5022               	movf	sprintf@width+1,w,c
  8303  00FDE2  0A80               	xorlw	128
  8304  00FDE4  5817               	subwfb	??_sprintf& (0+255),w,c
  8305  00FDE6  B0D8               	btfsc	status,0,c
  8306  00FDE8  D007               	goto	l3381
  8307                           
  8308                           ;doprnt.c: 1382: width -= c;
  8309  00FDEA  5023               	movf	sprintf@c,w,c
  8310  00FDEC  5E21               	subwf	sprintf@width,f,c
  8311  00FDEE  0E00               	movlw	0
  8312  00FDF0  BE23               	btfsc	sprintf@c,7,c
  8313  00FDF2  0EFF               	movlw	255
  8314  00FDF4  5A22               	subwfb	sprintf@width+1,f,c
  8315  00FDF6  D005               	goto	l3383
  8316  00FDF8                     l3381:
  8317                           
  8318                           ;doprnt.c: 1383: else
  8319                           ;doprnt.c: 1384: width = 0;
  8320  00FDF8  0E00               	movlw	0
  8321  00FDFA  6E22               	movwf	sprintf@width+1,c
  8322  00FDFC  0E00               	movlw	0
  8323  00FDFE  6E21               	movwf	sprintf@width,c
  8324  00FE00  D000               	goto	l3383
  8325  00FE02                     l3383:
  8326                           
  8327                           ;doprnt.c: 1387: if(flag & 0x04) {
  8328  00FE02  A41D               	btfss	sprintf@flag,2,c
  8329  00FE04  D015               	goto	l3393
  8330                           
  8331                           ;doprnt.c: 1415: if(width)
  8332  00FE06  5021               	movf	sprintf@width,w,c
  8333  00FE08  1022               	iorwf	sprintf@width+1,w,c
  8334  00FE0A  B4D8               	btfsc	status,2,c
  8335  00FE0C  D026               	goto	l655
  8336  00FE0E                     l3387:
  8337                           
  8338                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8339  00FE0E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8340  00FE12  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8341  00FE16  0E30               	movlw	48
  8342  00FE18  6EDF               	movwf	indf2,c
  8343  00FE1A  4A0D               	infsnz	sprintf@sp,f,c
  8344  00FE1C  2A0E               	incf	sprintf@sp+1,f,c
  8345                           
  8346                           ;doprnt.c: 1418: while(--width);
  8347  00FE1E  0621               	decf	sprintf@width,f,c
  8348  00FE20  A0D8               	btfss	status,0,c
  8349  00FE22  0622               	decf	sprintf@width+1,f,c
  8350  00FE24  5021               	movf	sprintf@width,w,c
  8351  00FE26  1022               	iorwf	sprintf@width+1,w,c
  8352  00FE28  B4D8               	btfsc	status,2,c
  8353  00FE2A  D017               	goto	l655
  8354  00FE2C  D7F0               	goto	l3387
  8355                           
  8356                           ;doprnt.c: 1420: } else
  8357  00FE2E  D015               	goto	l655
  8358  00FE30                     l3393:
  8359                           
  8360                           ;doprnt.c: 1422: {
  8361                           ;doprnt.c: 1424: if(width
  8362                           ;doprnt.c: 1428: )
  8363  00FE30  5021               	movf	sprintf@width,w,c
  8364  00FE32  1022               	iorwf	sprintf@width+1,w,c
  8365  00FE34  B4D8               	btfsc	status,2,c
  8366  00FE36  D011               	goto	l655
  8367  00FE38                     l3395:
  8368                           
  8369                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8370  00FE38  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8371  00FE3C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8372  00FE40  0E20               	movlw	32
  8373  00FE42  6EDF               	movwf	indf2,c
  8374  00FE44  4A0D               	infsnz	sprintf@sp,f,c
  8375  00FE46  2A0E               	incf	sprintf@sp+1,f,c
  8376                           
  8377                           ;doprnt.c: 1431: while(--width);
  8378  00FE48  0621               	decf	sprintf@width,f,c
  8379  00FE4A  A0D8               	btfss	status,0,c
  8380  00FE4C  0622               	decf	sprintf@width+1,f,c
  8381  00FE4E  5021               	movf	sprintf@width,w,c
  8382  00FE50  1022               	iorwf	sprintf@width+1,w,c
  8383  00FE52  B4D8               	btfsc	status,2,c
  8384  00FE54  D002               	goto	l655
  8385  00FE56  D7F0               	goto	l3395
  8386  00FE58  D000               	goto	l655
  8387  00FE5A                     l655:
  8388                           
  8389                           ;doprnt.c: 1469: }
  8390                           ;doprnt.c: 1472: prec = c;
  8391  00FE5A  C023  F020         	movff	sprintf@c,sprintf@prec
  8392                           
  8393                           ;doprnt.c: 1474: while(prec--) {
  8394  00FE5E  D02A               	goto	l3407
  8395  00FE60                     l3401:
  8396                           
  8397                           ;doprnt.c: 1478: {
  8398                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8399  00FE60  5020               	movf	sprintf@prec,w,c
  8400  00FE62  0D02               	mullw	2
  8401  00FE64  0EED               	movlw	low _dpowers
  8402  00FE66  24F3               	addwf	prodl,w,c
  8403  00FE68  6EF6               	movwf	tblptrl,c
  8404  00FE6A  0EFE               	movlw	high _dpowers
  8405  00FE6C  20F4               	addwfc	prodh,w,c
  8406  00FE6E  6EF7               	movwf	tblptrh,c
  8407  00FE70                     	if	0	;There are less than 3 active tblptr bytes
  8408  00FE70                     	endif
  8409  00FE70  0009               	tblrd		*+
  8410  00FE72  CFF5 F003          	movff	tablat,___lwdiv@divisor
  8411  00FE76  000A               	tblrd		*-
  8412  00FE78  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  8413  00FE7C  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  8414  00FE80  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  8415  00FE84  ECF4  F075         	call	___lwdiv	;wreg free
  8416  00FE88  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  8417  00FE8C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  8418  00FE90  0E00               	movlw	0
  8419  00FE92  6E0B               	movwf	___lwmod@divisor+1,c
  8420  00FE94  0E0A               	movlw	10
  8421  00FE96  6E0A               	movwf	___lwmod@divisor,c
  8422  00FE98  EC8D  F074         	call	___lwmod	;wreg free
  8423  00FE9C  5008               	movf	?___lwmod,w,c
  8424  00FE9E  0F30               	addlw	48
  8425  00FEA0  6E23               	movwf	sprintf@c,c
  8426                           
  8427                           ;doprnt.c: 1523: }
  8428                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8429  00FEA2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8430  00FEA6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8431  00FEAA  C023  FFDF         	movff	sprintf@c,indf2
  8432  00FEAE  4A0D               	infsnz	sprintf@sp,f,c
  8433  00FEB0  2A0E               	incf	sprintf@sp+1,f,c
  8434  00FEB2  D000               	goto	l3407
  8435  00FEB4                     l3407:
  8436  00FEB4  0620               	decf	sprintf@prec,f,c
  8437  00FEB6  2820               	incf	sprintf@prec,w,c
  8438  00FEB8  B4D8               	btfsc	status,2,c
  8439  00FEBA  D002               	goto	l3409
  8440  00FEBC  D7D1               	goto	l3401
  8441  00FEBE  D000               	goto	l3409
  8442  00FEC0                     l3409:
  8443  00FEC0  C00F  FFF6         	movff	sprintf@f,tblptrl
  8444  00FEC4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8445  00FEC8  4A0F               	infsnz	sprintf@f,f,c
  8446  00FECA  2A10               	incf	sprintf@f+1,f,c
  8447  00FECC                     	if	0	;tblptru may be non-zero
  8448  00FECC                     	endif
  8449  00FECC                     	if	0	;tblptru may be non-zero
  8450  00FECC                     	endif
  8451  00FECC  0008               	tblrd		*
  8452  00FECE  CFF5 F023          	movff	tablat,sprintf@c
  8453  00FED2  5023               	movf	sprintf@c,w,c
  8454  00FED4  B4D8               	btfsc	status,2,c
  8455  00FED6  D002               	goto	l3411
  8456  00FED8  D6DC               	goto	l3327
  8457  00FEDA  D000               	goto	l3411
  8458  00FEDC                     l3411:
  8459                           
  8460                           ;doprnt.c: 1538: *sp = 0;
  8461  00FEDC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8462  00FEE0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8463  00FEE4  0E00               	movlw	0
  8464  00FEE6  6EDF               	movwf	indf2,c
  8465  00FEE8  0012               	return	
  8466                           
  8467                           ;doprnt.c: 1540: return 0;
  8468                           ;	Return value of _sprintf is never used
  8469  00FEEA  0012               	return		;funcret
  8470  00FEEC                     __end_of_sprintf:
  8471                           	opt stack 0
  8472                           tblptru	equ	0xFF8
  8473                           tblptrh	equ	0xFF7
  8474                           tblptrl	equ	0xFF6
  8475                           tablat	equ	0xFF5
  8476                           prodh	equ	0xFF4
  8477                           prodl	equ	0xFF3
  8478                           intcon	equ	0xFF2
  8479                           indf0	equ	0xFEF
  8480                           postinc0	equ	0xFEE
  8481                           fsr0h	equ	0xFEA
  8482                           fsr0l	equ	0xFE9
  8483                           wreg	equ	0xFE8
  8484                           indf1	equ	0xFE7
  8485                           postdec1	equ	0xFE5
  8486                           fsr1h	equ	0xFE2
  8487                           fsr1l	equ	0xFE1
  8488                           indf2	equ	0xFDF
  8489                           postinc2	equ	0xFDE
  8490                           postdec2	equ	0xFDD
  8491                           fsr2h	equ	0xFDA
  8492                           fsr2l	equ	0xFD9
  8493                           status	equ	0xFD8
  8494                           
  8495 ;; *************** function _isdigit *****************
  8496 ;; Defined at:
  8497 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;  c               1    wreg     unsigned char 
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;  c               1    2[COMRAM] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;		None               void
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8514 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8515 ;;Total ram usage:        3 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; This function calls:
  8518 ;;		Nothing
  8519 ;; This function is called by:
  8520 ;;		_sprintf
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text57
  8525  00E2D0                     __ptext57:
  8526                           	opt stack 0
  8527  00E2D0                     _isdigit:
  8528                           	opt stack 27
  8529                           
  8530                           ;incstack = 0
  8531                           ;isdigit@c stored from wreg
  8532  00E2D0  6E03               	movwf	isdigit@c,c
  8533  00E2D2  0E00               	movlw	0
  8534  00E2D4  6E02               	movwf	_isdigit$2259,c
  8535  00E2D6  0E3A               	movlw	58
  8536  00E2D8  6003               	cpfslt	isdigit@c,c
  8537  00E2DA  D006               	goto	l3097
  8538  00E2DC  0E2F               	movlw	47
  8539  00E2DE  6403               	cpfsgt	isdigit@c,c
  8540  00E2E0  D003               	goto	l3097
  8541  00E2E2  0E01               	movlw	1
  8542  00E2E4  6E02               	movwf	_isdigit$2259,c
  8543  00E2E6  D000               	goto	l3097
  8544  00E2E8                     l3097:
  8545  00E2E8  C002  F001         	movff	_isdigit$2259,??_isdigit
  8546  00E2EC  3001               	rrcf	??_isdigit,w,c
  8547  00E2EE  0012               	return	
  8548  00E2F0  0012               	return		;funcret
  8549  00E2F2                     __end_of_isdigit:
  8550                           	opt stack 0
  8551                           tblptru	equ	0xFF8
  8552                           tblptrh	equ	0xFF7
  8553                           tblptrl	equ	0xFF6
  8554                           tablat	equ	0xFF5
  8555                           prodh	equ	0xFF4
  8556                           prodl	equ	0xFF3
  8557                           intcon	equ	0xFF2
  8558                           indf0	equ	0xFEF
  8559                           postinc0	equ	0xFEE
  8560                           fsr0h	equ	0xFEA
  8561                           fsr0l	equ	0xFE9
  8562                           wreg	equ	0xFE8
  8563                           indf1	equ	0xFE7
  8564                           postdec1	equ	0xFE5
  8565                           fsr1h	equ	0xFE2
  8566                           fsr1l	equ	0xFE1
  8567                           indf2	equ	0xFDF
  8568                           postinc2	equ	0xFDE
  8569                           postdec2	equ	0xFDD
  8570                           fsr2h	equ	0xFDA
  8571                           fsr2l	equ	0xFD9
  8572                           status	equ	0xFD8
  8573                           
  8574 ;; *************** function ___wmul *****************
  8575 ;; Defined at:
  8576 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  multiplier      2    0[COMRAM] unsigned int 
  8579 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  product         2    4[COMRAM] unsigned int 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  2    0[COMRAM] unsigned int 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2, status,0, prodl, prodh
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;Total ram usage:        6 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_sprintf
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text58
  8605  00E316                     __ptext58:
  8606                           	opt stack 0
  8607  00E316                     ___wmul:
  8608                           	opt stack 27
  8609                           
  8610                           ;incstack = 0
  8611  00E316  5001               	movf	___wmul@multiplier,w,c
  8612  00E318  0203               	mulwf	___wmul@multiplicand,c
  8613  00E31A  CFF3 F005          	movff	prodl,___wmul@product
  8614  00E31E  CFF4 F006          	movff	prodh,___wmul@product+1
  8615  00E322  5001               	movf	___wmul@multiplier,w,c
  8616  00E324  0204               	mulwf	___wmul@multiplicand+1,c
  8617  00E326  50F3               	movf	prodl,w,c
  8618  00E328  2606               	addwf	___wmul@product+1,f,c
  8619  00E32A  5002               	movf	___wmul@multiplier+1,w,c
  8620  00E32C  0203               	mulwf	___wmul@multiplicand,c
  8621  00E32E  50F3               	movf	prodl,w,c
  8622  00E330  2606               	addwf	___wmul@product+1,f,c
  8623  00E332  C005  F001         	movff	___wmul@product,?___wmul
  8624  00E336  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8625  00E33A  0012               	return	
  8626  00E33C  0012               	return		;funcret
  8627  00E33E                     __end_of___wmul:
  8628                           	opt stack 0
  8629                           tblptru	equ	0xFF8
  8630                           tblptrh	equ	0xFF7
  8631                           tblptrl	equ	0xFF6
  8632                           tablat	equ	0xFF5
  8633                           prodh	equ	0xFF4
  8634                           prodl	equ	0xFF3
  8635                           intcon	equ	0xFF2
  8636                           indf0	equ	0xFEF
  8637                           postinc0	equ	0xFEE
  8638                           fsr0h	equ	0xFEA
  8639                           fsr0l	equ	0xFE9
  8640                           wreg	equ	0xFE8
  8641                           indf1	equ	0xFE7
  8642                           postdec1	equ	0xFE5
  8643                           fsr1h	equ	0xFE2
  8644                           fsr1l	equ	0xFE1
  8645                           indf2	equ	0xFDF
  8646                           postinc2	equ	0xFDE
  8647                           postdec2	equ	0xFDD
  8648                           fsr2h	equ	0xFDA
  8649                           fsr2l	equ	0xFD9
  8650                           status	equ	0xFD8
  8651                           
  8652 ;; *************** function ___lwmod *****************
  8653 ;; Defined at:
  8654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;  dividend        2    7[COMRAM] unsigned int 
  8657 ;;  divisor         2    9[COMRAM] unsigned int 
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  counter         1   11[COMRAM] unsigned char 
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  2    7[COMRAM] unsigned int 
  8662 ;; Registers used:
  8663 ;;		wreg, status,2, status,0
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8672 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8673 ;;Total ram usage:        5 bytes
  8674 ;; Hardware stack levels used:    1
  8675 ;; This function calls:
  8676 ;;		Nothing
  8677 ;; This function is called by:
  8678 ;;		_sprintf
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text59
  8683  00E91A                     __ptext59:
  8684                           	opt stack 0
  8685  00E91A                     ___lwmod:
  8686                           	opt stack 27
  8687                           
  8688                           ;incstack = 0
  8689  00E91A  500A               	movf	___lwmod@divisor,w,c
  8690  00E91C  100B               	iorwf	___lwmod@divisor+1,w,c
  8691  00E91E  B4D8               	btfsc	status,2,c
  8692  00E920  D01D               	goto	l1309
  8693  00E922  0E01               	movlw	1
  8694  00E924  6E0C               	movwf	___lwmod@counter,c
  8695  00E926  D005               	goto	l3135
  8696  00E928                     l3133:
  8697  00E928  90D8               	bcf	status,0,c
  8698  00E92A  360A               	rlcf	___lwmod@divisor,f,c
  8699  00E92C  360B               	rlcf	___lwmod@divisor+1,f,c
  8700  00E92E  2A0C               	incf	___lwmod@counter,f,c
  8701  00E930  D000               	goto	l3135
  8702  00E932                     l3135:
  8703  00E932  BE0B               	btfsc	___lwmod@divisor+1,7,c
  8704  00E934  D002               	goto	l3137
  8705  00E936  D7F8               	goto	l3133
  8706  00E938  D000               	goto	l3137
  8707  00E93A                     l3137:
  8708  00E93A  500A               	movf	___lwmod@divisor,w,c
  8709  00E93C  5C08               	subwf	___lwmod@dividend,w,c
  8710  00E93E  500B               	movf	___lwmod@divisor+1,w,c
  8711  00E940  5809               	subwfb	___lwmod@dividend+1,w,c
  8712  00E942  A0D8               	btfss	status,0,c
  8713  00E944  D005               	goto	l3141
  8714  00E946  500A               	movf	___lwmod@divisor,w,c
  8715  00E948  5E08               	subwf	___lwmod@dividend,f,c
  8716  00E94A  500B               	movf	___lwmod@divisor+1,w,c
  8717  00E94C  5A09               	subwfb	___lwmod@dividend+1,f,c
  8718  00E94E  D000               	goto	l3141
  8719  00E950                     l3141:
  8720  00E950  90D8               	bcf	status,0,c
  8721  00E952  320B               	rrcf	___lwmod@divisor+1,f,c
  8722  00E954  320A               	rrcf	___lwmod@divisor,f,c
  8723  00E956  2E0C               	decfsz	___lwmod@counter,f,c
  8724  00E958  D7F0               	goto	l3137
  8725  00E95A  D000               	goto	l1309
  8726  00E95C                     l1309:
  8727  00E95C  C008  F008         	movff	___lwmod@dividend,?___lwmod
  8728  00E960  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  8729  00E964  0012               	return		;funcret
  8730  00E966                     __end_of___lwmod:
  8731                           	opt stack 0
  8732                           tblptru	equ	0xFF8
  8733                           tblptrh	equ	0xFF7
  8734                           tblptrl	equ	0xFF6
  8735                           tablat	equ	0xFF5
  8736                           prodh	equ	0xFF4
  8737                           prodl	equ	0xFF3
  8738                           intcon	equ	0xFF2
  8739                           indf0	equ	0xFEF
  8740                           postinc0	equ	0xFEE
  8741                           fsr0h	equ	0xFEA
  8742                           fsr0l	equ	0xFE9
  8743                           wreg	equ	0xFE8
  8744                           indf1	equ	0xFE7
  8745                           postdec1	equ	0xFE5
  8746                           fsr1h	equ	0xFE2
  8747                           fsr1l	equ	0xFE1
  8748                           indf2	equ	0xFDF
  8749                           postinc2	equ	0xFDE
  8750                           postdec2	equ	0xFDD
  8751                           fsr2h	equ	0xFDA
  8752                           fsr2l	equ	0xFD9
  8753                           status	equ	0xFD8
  8754                           
  8755 ;; *************** function ___lwdiv *****************
  8756 ;; Defined at:
  8757 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  dividend        2    0[COMRAM] unsigned int 
  8760 ;;  divisor         2    2[COMRAM] unsigned int 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  quotient        2    4[COMRAM] unsigned int 
  8763 ;;  counter         1    6[COMRAM] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  2    0[COMRAM] unsigned int 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8774 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8776 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8777 ;;Total ram usage:        7 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_sprintf
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text60
  8787  00EBE8                     __ptext60:
  8788                           	opt stack 0
  8789  00EBE8                     ___lwdiv:
  8790                           	opt stack 27
  8791                           
  8792                           ;incstack = 0
  8793  00EBE8  0E00               	movlw	0
  8794  00EBEA  6E06               	movwf	___lwdiv@quotient+1,c
  8795  00EBEC  0E00               	movlw	0
  8796  00EBEE  6E05               	movwf	___lwdiv@quotient,c
  8797  00EBF0  5003               	movf	___lwdiv@divisor,w,c
  8798  00EBF2  1004               	iorwf	___lwdiv@divisor+1,w,c
  8799  00EBF4  B4D8               	btfsc	status,2,c
  8800  00EBF6  D021               	goto	l1299
  8801  00EBF8  0E01               	movlw	1
  8802  00EBFA  6E07               	movwf	___lwdiv@counter,c
  8803  00EBFC  D005               	goto	l3115
  8804  00EBFE                     l3113:
  8805  00EBFE  90D8               	bcf	status,0,c
  8806  00EC00  3603               	rlcf	___lwdiv@divisor,f,c
  8807  00EC02  3604               	rlcf	___lwdiv@divisor+1,f,c
  8808  00EC04  2A07               	incf	___lwdiv@counter,f,c
  8809  00EC06  D000               	goto	l3115
  8810  00EC08                     l3115:
  8811  00EC08  BE04               	btfsc	___lwdiv@divisor+1,7,c
  8812  00EC0A  D002               	goto	l3117
  8813  00EC0C  D7F8               	goto	l3113
  8814  00EC0E  D000               	goto	l3117
  8815  00EC10                     l3117:
  8816  00EC10  90D8               	bcf	status,0,c
  8817  00EC12  3605               	rlcf	___lwdiv@quotient,f,c
  8818  00EC14  3606               	rlcf	___lwdiv@quotient+1,f,c
  8819  00EC16  5003               	movf	___lwdiv@divisor,w,c
  8820  00EC18  5C01               	subwf	___lwdiv@dividend,w,c
  8821  00EC1A  5004               	movf	___lwdiv@divisor+1,w,c
  8822  00EC1C  5802               	subwfb	___lwdiv@dividend+1,w,c
  8823  00EC1E  A0D8               	btfss	status,0,c
  8824  00EC20  D006               	goto	l3125
  8825  00EC22  5003               	movf	___lwdiv@divisor,w,c
  8826  00EC24  5E01               	subwf	___lwdiv@dividend,f,c
  8827  00EC26  5004               	movf	___lwdiv@divisor+1,w,c
  8828  00EC28  5A02               	subwfb	___lwdiv@dividend+1,f,c
  8829  00EC2A  8005               	bsf	___lwdiv@quotient,0,c
  8830  00EC2C  D000               	goto	l3125
  8831  00EC2E                     l3125:
  8832  00EC2E  90D8               	bcf	status,0,c
  8833  00EC30  3204               	rrcf	___lwdiv@divisor+1,f,c
  8834  00EC32  3203               	rrcf	___lwdiv@divisor,f,c
  8835  00EC34  2E07               	decfsz	___lwdiv@counter,f,c
  8836  00EC36  D7EC               	goto	l3117
  8837  00EC38  D000               	goto	l1299
  8838  00EC3A                     l1299:
  8839  00EC3A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  8840  00EC3E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8841  00EC42  0012               	return		;funcret
  8842  00EC44                     __end_of___lwdiv:
  8843                           	opt stack 0
  8844                           tblptru	equ	0xFF8
  8845                           tblptrh	equ	0xFF7
  8846                           tblptrl	equ	0xFF6
  8847                           tablat	equ	0xFF5
  8848                           prodh	equ	0xFF4
  8849                           prodl	equ	0xFF3
  8850                           intcon	equ	0xFF2
  8851                           indf0	equ	0xFEF
  8852                           postinc0	equ	0xFEE
  8853                           fsr0h	equ	0xFEA
  8854                           fsr0l	equ	0xFE9
  8855                           wreg	equ	0xFE8
  8856                           indf1	equ	0xFE7
  8857                           postdec1	equ	0xFE5
  8858                           fsr1h	equ	0xFE2
  8859                           fsr1l	equ	0xFE1
  8860                           indf2	equ	0xFDF
  8861                           postinc2	equ	0xFDE
  8862                           postdec2	equ	0xFDD
  8863                           fsr2h	equ	0xFDA
  8864                           fsr2l	equ	0xFD9
  8865                           status	equ	0xFD8
  8866                           
  8867 ;; *************** function _check_home_callback *****************
  8868 ;; Defined at:
  8869 ;;		line 99 in file "main.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;		None
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;		None
  8874 ;; Return value:  Size  Location     Type
  8875 ;;		None               void
  8876 ;; Registers used:
  8877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8887 ;;Total ram usage:        0 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; Hardware stack levels required when called:    7
  8890 ;; This function calls:
  8891 ;;		_activity_home
  8892 ;;		_reset_home_callback
  8893 ;; This function is called by:
  8894 ;;		_main
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           	psect	text61
  8899  00E2AE                     __ptext61:
  8900                           	opt stack 0
  8901  00E2AE                     _check_home_callback:
  8902                           	opt stack 23
  8903                           
  8904                           ;main.c: 101: if(activity != 0){
  8905                           
  8906                           ;incstack = 0
  8907  00E2AE  5029               	movf	_activity,w,c
  8908  00E2B0  102A               	iorwf	_activity+1,w,c
  8909  00E2B2  B4D8               	btfsc	status,2,c
  8910  00E2B4  0012               	return	
  8911                           
  8912                           ;main.c: 102: home_callback--;
  8913  00E2B6  0635               	decf	_home_callback,f,c
  8914  00E2B8  A0D8               	btfss	status,0,c
  8915  00E2BA  0636               	decf	_home_callback+1,f,c
  8916                           
  8917                           ;main.c: 104: if(home_callback == 0){
  8918  00E2BC  5035               	movf	_home_callback,w,c
  8919  00E2BE  1036               	iorwf	_home_callback+1,w,c
  8920  00E2C0  A4D8               	btfss	status,2,c
  8921  00E2C2  0012               	return	
  8922                           
  8923                           ;main.c: 105: reset_home_callback();
  8924  00E2C4  ECF4  F070         	call	_reset_home_callback	;wreg free
  8925                           
  8926                           ;main.c: 106: activity_home();
  8927  00E2C8  EC9F  F071         	call	_activity_home	;wreg free
  8928  00E2CC  0012               	return	
  8929  00E2CE  0012               	return		;funcret
  8930  00E2D0                     __end_of_check_home_callback:
  8931                           	opt stack 0
  8932                           tblptru	equ	0xFF8
  8933                           tblptrh	equ	0xFF7
  8934                           tblptrl	equ	0xFF6
  8935                           tablat	equ	0xFF5
  8936                           prodh	equ	0xFF4
  8937                           prodl	equ	0xFF3
  8938                           intcon	equ	0xFF2
  8939                           indf0	equ	0xFEF
  8940                           postinc0	equ	0xFEE
  8941                           fsr0h	equ	0xFEA
  8942                           fsr0l	equ	0xFE9
  8943                           wreg	equ	0xFE8
  8944                           indf1	equ	0xFE7
  8945                           postdec1	equ	0xFE5
  8946                           fsr1h	equ	0xFE2
  8947                           fsr1l	equ	0xFE1
  8948                           indf2	equ	0xFDF
  8949                           postinc2	equ	0xFDE
  8950                           postdec2	equ	0xFDD
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _reset_home_callback *****************
  8956 ;; Defined at:
  8957 ;;		line 93 in file "main.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;		None               void
  8964 ;; Registers used:
  8965 ;;		None
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; This function calls:
  8978 ;;		Nothing
  8979 ;; This function is called by:
  8980 ;;		_check_home_callback
  8981 ;;		_button_A
  8982 ;;		_button_B
  8983 ;;		_button_C
  8984 ;;		_button_D
  8985 ;;		_button_asterisk
  8986 ;;		_button_hash
  8987 ;;		_button_number
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text62
  8992  00E1E8                     __ptext62:
  8993                           	opt stack 0
  8994  00E1E8                     _reset_home_callback:
  8995                           	opt stack 28
  8996                           
  8997                           ;main.c: 95: home_callback = home_callback_delay;
  8998                           
  8999                           ;incstack = 0
  9000  00E1E8  C037  F035         	movff	_home_callback_delay,_home_callback
  9001  00E1EC  C038  F036         	movff	_home_callback_delay+1,_home_callback+1
  9002  00E1F0  0012               	return		;funcret
  9003  00E1F2                     __end_of_reset_home_callback:
  9004                           	opt stack 0
  9005                           tblptru	equ	0xFF8
  9006                           tblptrh	equ	0xFF7
  9007                           tblptrl	equ	0xFF6
  9008                           tablat	equ	0xFF5
  9009                           prodh	equ	0xFF4
  9010                           prodl	equ	0xFF3
  9011                           intcon	equ	0xFF2
  9012                           indf0	equ	0xFEF
  9013                           postinc0	equ	0xFEE
  9014                           fsr0h	equ	0xFEA
  9015                           fsr0l	equ	0xFE9
  9016                           wreg	equ	0xFE8
  9017                           indf1	equ	0xFE7
  9018                           postdec1	equ	0xFE5
  9019                           fsr1h	equ	0xFE2
  9020                           fsr1l	equ	0xFE1
  9021                           indf2	equ	0xFDF
  9022                           postinc2	equ	0xFDE
  9023                           postdec2	equ	0xFDD
  9024                           fsr2h	equ	0xFDA
  9025                           fsr2l	equ	0xFD9
  9026                           status	equ	0xFD8
  9027                           
  9028 ;; *************** function _activity_home *****************
  9029 ;; Defined at:
  9030 ;;		line 85 in file "main.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;		None
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;		None
  9035 ;; Return value:  Size  Location     Type
  9036 ;;		None               void
  9037 ;; Registers used:
  9038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;Total ram usage:        0 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; Hardware stack levels required when called:    6
  9051 ;; This function calls:
  9052 ;;		_lcd_init
  9053 ;;		_lcd_write
  9054 ;; This function is called by:
  9055 ;;		_check_home_callback
  9056 ;;		_button_B_submenu_activation
  9057 ;;		_button_B_submenu_pin_config
  9058 ;;		_button_B_submenu_siren_volume
  9059 ;;		_button_B_submenu_siren_tone
  9060 ;;		_button_D
  9061 ;;		_button_hash
  9062 ;;		_main
  9063 ;;		_pin_set
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           	psect	text63
  9068  00E33E                     __ptext63:
  9069                           	opt stack 0
  9070  00E33E                     _activity_home:
  9071                           	opt stack 21
  9072                           
  9073                           ;main.c: 87: activity = 0;
  9074                           
  9075                           ;incstack = 0
  9076  00E33E  0E00               	movlw	0
  9077  00E340  6E2A               	movwf	_activity+1,c
  9078  00E342  0E00               	movlw	0
  9079  00E344  6E29               	movwf	_activity,c
  9080                           
  9081                           ;main.c: 88: lcd_init();
  9082  00E346  EC3C  F078         	call	_lcd_init	;wreg free
  9083                           
  9084                           ;main.c: 89: lcd_write(1,1,"X28");
  9085  00E34A  0E00               	movlw	0
  9086  00E34C  6E0C               	movwf	lcd_write@column+1,c
  9087  00E34E  0E01               	movlw	1
  9088  00E350  6E0B               	movwf	lcd_write@column,c
  9089  00E352  0E00               	movlw	0
  9090  00E354  6E0E               	movwf	lcd_write@row+1,c
  9091  00E356  0E01               	movlw	1
  9092  00E358  6E0D               	movwf	lcd_write@row,c
  9093  00E35A  0EE3               	movlw	low STR_1
  9094  00E35C  6E0F               	movwf	lcd_write@string,c
  9095  00E35E  0EFF               	movlw	high STR_1
  9096  00E360  6E10               	movwf	lcd_write@string+1,c
  9097  00E362  EC30  F071         	call	_lcd_write	;wreg free
  9098  00E366  0012               	return		;funcret
  9099  00E368                     __end_of_activity_home:
  9100                           	opt stack 0
  9101                           tblptru	equ	0xFF8
  9102                           tblptrh	equ	0xFF7
  9103                           tblptrl	equ	0xFF6
  9104                           tablat	equ	0xFF5
  9105                           prodh	equ	0xFF4
  9106                           prodl	equ	0xFF3
  9107                           intcon	equ	0xFF2
  9108                           indf0	equ	0xFEF
  9109                           postinc0	equ	0xFEE
  9110                           fsr0h	equ	0xFEA
  9111                           fsr0l	equ	0xFE9
  9112                           wreg	equ	0xFE8
  9113                           indf1	equ	0xFE7
  9114                           postdec1	equ	0xFE5
  9115                           fsr1h	equ	0xFE2
  9116                           fsr1l	equ	0xFE1
  9117                           indf2	equ	0xFDF
  9118                           postinc2	equ	0xFDE
  9119                           postdec2	equ	0xFDD
  9120                           fsr2h	equ	0xFDA
  9121                           fsr2l	equ	0xFD9
  9122                           status	equ	0xFD8
  9123                           
  9124 ;; *************** function _lcd_write *****************
  9125 ;; Defined at:
  9126 ;;		line 4 in file "Unimic/unmc_01/sources/lcd_write.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  column          2   10[COMRAM] int 
  9129 ;;  row             2   12[COMRAM] int 
  9130 ;;  string          2   14[COMRAM] PTR const unsigned char 
  9131 ;;		 -> STR_53(11), STR_51(6), STR_50(8), STR_49(4), 
  9132 ;;		 -> STR_48(16), STR_46(2), STR_45(2), STR_44(2), 
  9133 ;;		 -> STR_43(2), STR_42(2), STR_41(2), STR_40(2), 
  9134 ;;		 -> STR_39(2), STR_38(2), STR_37(2), STR_36(2), 
  9135 ;;		 -> STR_35(2), STR_24(7), STR_23(7), STR_22(5), 
  9136 ;;		 -> STR_21(5), STR_20(5), STR_19(8), STR_18(5), 
  9137 ;;		 -> STR_17(8), STR_16(7), STR_14(16), buffer1(20), 
  9138 ;;		 -> STR_12(17), STR_11(5), STR_10(6), STR_9(6), 
  9139 ;;		 -> STR_8(3), STR_7(3), STR_6(8), STR_5(7), 
  9140 ;;		 -> STR_4(4), STR_3(6), STR_2(8), STR_1(4), 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;		None               void
  9145 ;; Registers used:
  9146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9152 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9155 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9156 ;;Total ram usage:        6 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    5
  9159 ;; This function calls:
  9160 ;;		_lcd_gotoxy
  9161 ;;		_lcd_putrs
  9162 ;; This function is called by:
  9163 ;;		_activity_home
  9164 ;;		_activity_menu
  9165 ;;		_activity_submenu_activation
  9166 ;;		_activity_submenu_date_and_time
  9167 ;;		_activity_submenu_date_config
  9168 ;;		_activity_submenu_time_config
  9169 ;;		_activity_submenu_siren
  9170 ;;		_activity_submenu_siren_volume
  9171 ;;		_activity_submenu_siren_tone
  9172 ;;		_home_clock_refresh
  9173 ;;		_home_state_refresh
  9174 ;;		_home_volume_refresh
  9175 ;;		_home_tone_refresh
  9176 ;;		_menu_selector_0
  9177 ;;		_menu_selector_1
  9178 ;;		_menu_selector_2
  9179 ;;		_menu_selector_3
  9180 ;;		_submenu_selector_0
  9181 ;;		_submenu_selector_1
  9182 ;;		_activity_pin
  9183 ;;		_activity_submenu_pin
  9184 ;;		_activity_submenu_pin_set
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text64
  9189  00E260                     __ptext64:
  9190                           	opt stack 0
  9191  00E260                     _lcd_write:
  9192                           	opt stack 21
  9193                           
  9194                           ;lcd_write.c: 6: lcd_gotoxy(column, row);
  9195                           
  9196                           ;incstack = 0
  9197  00E260  C00D  F005         	movff	lcd_write@row,lcd_gotoxy@y
  9198  00E264  500B               	movf	lcd_write@column,w,c
  9199  00E266  EC79  F071         	call	_lcd_gotoxy
  9200                           
  9201                           ;lcd_write.c: 7: lcd_putrs(string);
  9202  00E26A  C00F  F009         	movff	lcd_write@string,lcd_putrs@ptr
  9203  00E26E  C010  F00A         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  9204  00E272  ECCA  F075         	call	_lcd_putrs	;wreg free
  9205  00E276  0012               	return		;funcret
  9206  00E278                     __end_of_lcd_write:
  9207                           	opt stack 0
  9208                           tblptru	equ	0xFF8
  9209                           tblptrh	equ	0xFF7
  9210                           tblptrl	equ	0xFF6
  9211                           tablat	equ	0xFF5
  9212                           prodh	equ	0xFF4
  9213                           prodl	equ	0xFF3
  9214                           intcon	equ	0xFF2
  9215                           indf0	equ	0xFEF
  9216                           postinc0	equ	0xFEE
  9217                           fsr0h	equ	0xFEA
  9218                           fsr0l	equ	0xFE9
  9219                           wreg	equ	0xFE8
  9220                           indf1	equ	0xFE7
  9221                           postdec1	equ	0xFE5
  9222                           fsr1h	equ	0xFE2
  9223                           fsr1l	equ	0xFE1
  9224                           indf2	equ	0xFDF
  9225                           postinc2	equ	0xFDE
  9226                           postdec2	equ	0xFDD
  9227                           fsr2h	equ	0xFDA
  9228                           fsr2l	equ	0xFD9
  9229                           status	equ	0xFD8
  9230                           
  9231 ;; *************** function _lcd_putrs *****************
  9232 ;; Defined at:
  9233 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  9236 ;;		 -> STR_53(11), STR_51(6), STR_50(8), STR_49(4), 
  9237 ;;		 -> STR_48(16), STR_46(2), STR_45(2), STR_44(2), 
  9238 ;;		 -> STR_43(2), STR_42(2), STR_41(2), STR_40(2), 
  9239 ;;		 -> STR_39(2), STR_38(2), STR_37(2), STR_36(2), 
  9240 ;;		 -> STR_35(2), STR_34(2), STR_24(7), STR_23(7), 
  9241 ;;		 -> STR_22(5), STR_21(5), STR_20(5), STR_19(8), 
  9242 ;;		 -> STR_18(5), STR_17(8), STR_16(7), STR_14(16), 
  9243 ;;		 -> buffer1(20), STR_12(17), STR_11(5), STR_10(6), 
  9244 ;;		 -> STR_9(6), STR_8(3), STR_7(3), STR_6(8), 
  9245 ;;		 -> STR_5(7), STR_4(4), STR_3(6), STR_2(8), 
  9246 ;;		 -> STR_1(4), 
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;		None               void
  9251 ;; Registers used:
  9252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9262 ;;Total ram usage:        2 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:    4
  9265 ;; This function calls:
  9266 ;;		_lcd_putc
  9267 ;; This function is called by:
  9268 ;;		_button_number
  9269 ;;		_lcd_write
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text65
  9274  00EB94                     __ptext65:
  9275                           	opt stack 0
  9276  00EB94                     _lcd_putrs:
  9277                           	opt stack 24
  9278                           
  9279                           ;unmc_lcd_216.c: 223: while(*ptr){
  9280                           
  9281                           ;incstack = 0
  9282  00EB94  D015               	goto	l3071
  9283  00EB96                     l3067:
  9284                           
  9285                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  9286  00EB96  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9287  00EB9A  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9288  00EB9E  6AF8               	clrf	tblptru,c
  9289  00EBA0  0E0E               	movlw	(high __ramtop+-1)
  9290  00EBA2  64F7               	cpfsgt	tblptrh,c
  9291  00EBA4  D003               	bra	u1467
  9292  00EBA6  0008               	tblrd		*
  9293  00EBA8  50F5               	movf	tablat,w,c
  9294  00EBAA  D005               	bra	u1460
  9295  00EBAC                     u1467:
  9296  00EBAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  9297  00EBB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  9298  00EBB4  50EF               	movf	indf0,w,c
  9299  00EBB6                     u1460:
  9300  00EBB6  EC67  F074         	call	_lcd_putc
  9301  00EBBA  4A09               	infsnz	lcd_putrs@ptr,f,c
  9302  00EBBC  2A0A               	incf	lcd_putrs@ptr+1,f,c
  9303  00EBBE  D000               	goto	l3071
  9304  00EBC0                     l3071:
  9305  00EBC0  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9306  00EBC4  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9307  00EBC8  6AF8               	clrf	tblptru,c
  9308  00EBCA  0E0E               	movlw	(high __ramtop+-1)
  9309  00EBCC  64F7               	cpfsgt	tblptrh,c
  9310  00EBCE  D003               	bra	u1477
  9311  00EBD0  0008               	tblrd		*
  9312  00EBD2  50F5               	movf	tablat,w,c
  9313  00EBD4  D005               	bra	u1470
  9314  00EBD6                     u1477:
  9315  00EBD6  CFF6 FFE9          	movff	tblptrl,fsr0l
  9316  00EBDA  CFF7 FFEA          	movff	tblptrh,fsr0h
  9317  00EBDE  50EF               	movf	indf0,w,c
  9318  00EBE0                     u1470:
  9319  00EBE0  0900               	iorlw	0
  9320  00EBE2  A4D8               	btfss	status,2,c
  9321  00EBE4  D7D8               	goto	l3067
  9322  00EBE6  0012               	return		;funcret
  9323  00EBE8                     __end_of_lcd_putrs:
  9324                           	opt stack 0
  9325                           tblptru	equ	0xFF8
  9326                           tblptrh	equ	0xFF7
  9327                           tblptrl	equ	0xFF6
  9328                           tablat	equ	0xFF5
  9329                           prodh	equ	0xFF4
  9330                           prodl	equ	0xFF3
  9331                           intcon	equ	0xFF2
  9332                           indf0	equ	0xFEF
  9333                           postinc0	equ	0xFEE
  9334                           fsr0h	equ	0xFEA
  9335                           fsr0l	equ	0xFE9
  9336                           wreg	equ	0xFE8
  9337                           indf1	equ	0xFE7
  9338                           postdec1	equ	0xFE5
  9339                           fsr1h	equ	0xFE2
  9340                           fsr1l	equ	0xFE1
  9341                           indf2	equ	0xFDF
  9342                           postinc2	equ	0xFDE
  9343                           postdec2	equ	0xFDD
  9344                           fsr2h	equ	0xFDA
  9345                           fsr2l	equ	0xFD9
  9346                           status	equ	0xFD8
  9347                           
  9348 ;; *************** function _lcd_putc *****************
  9349 ;; Defined at:
  9350 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  c               1    wreg     unsigned char 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;  c               1    7[COMRAM] unsigned char 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;		None               void
  9357 ;; Registers used:
  9358 ;;		wreg, status,2, status,0, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9368 ;;Total ram usage:        1 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    3
  9371 ;; This function calls:
  9372 ;;		_lcd_gotoxy
  9373 ;;		_lcd_send_byte
  9374 ;; This function is called by:
  9375 ;;		_lcd_putrs
  9376 ;;		_lcd_puts
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text66
  9381  00E8CE                     __ptext66:
  9382                           	opt stack 0
  9383  00E8CE                     _lcd_putc:
  9384                           	opt stack 24
  9385                           
  9386                           ;incstack = 0
  9387                           ;lcd_putc@c stored from wreg
  9388  00E8CE  6E08               	movwf	lcd_putc@c,c
  9389                           
  9390                           ;unmc_lcd_216.c: 173: switch(c){
  9391  00E8D0  D018               	goto	l3063
  9392  00E8D2                     l3053:
  9393                           
  9394                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  9395  00E8D2  0E01               	movlw	1
  9396  00E8D4  6E03               	movwf	lcd_send_byte@n,c
  9397  00E8D6  0E00               	movlw	0
  9398  00E8D8  EC27  F072         	call	_lcd_send_byte
  9399                           
  9400                           ;unmc_lcd_216.c: 176: break;
  9401  00E8DC  0012               	return	
  9402  00E8DE                     l3055:
  9403                           
  9404                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  9405  00E8DE  0E02               	movlw	2
  9406  00E8E0  6E05               	movwf	lcd_gotoxy@y,c
  9407  00E8E2  0E01               	movlw	1
  9408  00E8E4  EC79  F071         	call	_lcd_gotoxy
  9409                           
  9410                           ;unmc_lcd_216.c: 179: break;
  9411  00E8E8  0012               	return	
  9412  00E8EA                     l3057:
  9413                           
  9414                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  9415  00E8EA  0E10               	movlw	16
  9416  00E8EC  6E03               	movwf	lcd_send_byte@n,c
  9417  00E8EE  0E00               	movlw	0
  9418  00E8F0  EC27  F072         	call	_lcd_send_byte
  9419                           
  9420                           ;unmc_lcd_216.c: 182: break;
  9421  00E8F4  0012               	return	
  9422  00E8F6                     l3059:
  9423                           
  9424                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  9425  00E8F6  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  9426  00E8FA  0E01               	movlw	1
  9427  00E8FC  EC27  F072         	call	_lcd_send_byte
  9428                           
  9429                           ;unmc_lcd_216.c: 186: }
  9430                           
  9431                           ;unmc_lcd_216.c: 185: break;
  9432  00E900  0012               	return	
  9433  00E902                     l3063:
  9434  00E902  5008               	movf	lcd_putc@c,w,c
  9435                           
  9436                           ; Switch size 1, requested type "space"
  9437                           ; Number of cases is 3, Range of values is 8 to 12
  9438                           ; switch strategies available:
  9439                           ; Name         Instructions Cycles
  9440                           ; simple_byte           10     6 (average)
  9441                           ;	Chosen strategy is simple_byte
  9442  00E904  0A08               	xorlw	8	; case 8
  9443  00E906  B4D8               	btfsc	status,2,c
  9444  00E908  D7F0               	goto	l3057
  9445  00E90A  0A02               	xorlw	2	; case 10
  9446  00E90C  B4D8               	btfsc	status,2,c
  9447  00E90E  D7E7               	goto	l3055
  9448  00E910  0A06               	xorlw	6	; case 12
  9449  00E912  B4D8               	btfsc	status,2,c
  9450  00E914  D7DE               	goto	l3053
  9451  00E916  D7EF               	goto	l3059
  9452  00E918  0012               	return		;funcret
  9453  00E91A                     __end_of_lcd_putc:
  9454                           	opt stack 0
  9455                           tblptru	equ	0xFF8
  9456                           tblptrh	equ	0xFF7
  9457                           tblptrl	equ	0xFF6
  9458                           tablat	equ	0xFF5
  9459                           prodh	equ	0xFF4
  9460                           prodl	equ	0xFF3
  9461                           intcon	equ	0xFF2
  9462                           indf0	equ	0xFEF
  9463                           postinc0	equ	0xFEE
  9464                           fsr0h	equ	0xFEA
  9465                           fsr0l	equ	0xFE9
  9466                           wreg	equ	0xFE8
  9467                           indf1	equ	0xFE7
  9468                           postdec1	equ	0xFE5
  9469                           fsr1h	equ	0xFE2
  9470                           fsr1l	equ	0xFE1
  9471                           indf2	equ	0xFDF
  9472                           postinc2	equ	0xFDE
  9473                           postdec2	equ	0xFDD
  9474                           fsr2h	equ	0xFDA
  9475                           fsr2l	equ	0xFD9
  9476                           status	equ	0xFD8
  9477                           
  9478 ;; *************** function _lcd_gotoxy *****************
  9479 ;; Defined at:
  9480 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  x               1    wreg     unsigned char 
  9483 ;;  y               1    4[COMRAM] unsigned char 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  x               1    5[COMRAM] unsigned char 
  9486 ;;  address         1    6[COMRAM] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;		None               void
  9489 ;; Registers used:
  9490 ;;		wreg, status,2, status,0, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9496 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9499 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;Total ram usage:        3 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    2
  9503 ;; This function calls:
  9504 ;;		_lcd_send_byte
  9505 ;; This function is called by:
  9506 ;;		_activity_submenu_date_config
  9507 ;;		_activity_submenu_time_config
  9508 ;;		_cursor_displacement
  9509 ;;		_lcd_putc
  9510 ;;		_lcd_write
  9511 ;;		_activity_pin
  9512 ;;		_activity_submenu_pin_set
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text67
  9517  00E2F2                     __ptext67:
  9518                           	opt stack 0
  9519  00E2F2                     _lcd_gotoxy:
  9520                           	opt stack 24
  9521                           
  9522                           ;incstack = 0
  9523                           ;lcd_gotoxy@x stored from wreg
  9524  00E2F2  6E06               	movwf	lcd_gotoxy@x,c
  9525                           
  9526                           ;unmc_lcd_216.c: 159: int8 address;
  9527                           ;unmc_lcd_216.c: 161: if(y != 1)
  9528  00E2F4  0405               	decf	lcd_gotoxy@y,w,c
  9529  00E2F6  B4D8               	btfsc	status,2,c
  9530  00E2F8  D002               	goto	l3045
  9531                           
  9532                           ;unmc_lcd_216.c: 162: address = 0x40;
  9533  00E2FA  0E40               	movlw	64
  9534  00E2FC  D001               	goto	L4
  9535  00E2FE                     l3045:
  9536                           
  9537                           ;unmc_lcd_216.c: 163: else
  9538                           ;unmc_lcd_216.c: 164: address=0;
  9539  00E2FE  0E00               	movlw	0
  9540  00E300                     L4:
  9541  00E300  6E07               	movwf	lcd_gotoxy@address,c
  9542  00E302  D000               	goto	l3047
  9543  00E304                     l3047:
  9544                           
  9545                           ;unmc_lcd_216.c: 166: address += x-1;
  9546  00E304  0406               	decf	lcd_gotoxy@x,w,c
  9547  00E306  2607               	addwf	lcd_gotoxy@address,f,c
  9548                           
  9549                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  9550  00E308  5007               	movf	lcd_gotoxy@address,w,c
  9551  00E30A  0980               	iorlw	128
  9552  00E30C  6E03               	movwf	lcd_send_byte@n,c
  9553  00E30E  0E00               	movlw	0
  9554  00E310  EC27  F072         	call	_lcd_send_byte
  9555  00E314  0012               	return		;funcret
  9556  00E316                     __end_of_lcd_gotoxy:
  9557                           	opt stack 0
  9558                           tblptru	equ	0xFF8
  9559                           tblptrh	equ	0xFF7
  9560                           tblptrl	equ	0xFF6
  9561                           tablat	equ	0xFF5
  9562                           prodh	equ	0xFF4
  9563                           prodl	equ	0xFF3
  9564                           intcon	equ	0xFF2
  9565                           indf0	equ	0xFEF
  9566                           postinc0	equ	0xFEE
  9567                           fsr0h	equ	0xFEA
  9568                           fsr0l	equ	0xFE9
  9569                           wreg	equ	0xFE8
  9570                           indf1	equ	0xFE7
  9571                           postdec1	equ	0xFE5
  9572                           fsr1h	equ	0xFE2
  9573                           fsr1l	equ	0xFE1
  9574                           indf2	equ	0xFDF
  9575                           postinc2	equ	0xFDE
  9576                           postdec2	equ	0xFDD
  9577                           fsr2h	equ	0xFDA
  9578                           fsr2l	equ	0xFD9
  9579                           status	equ	0xFD8
  9580                           
  9581 ;; *************** function _lcd_init *****************
  9582 ;; Defined at:
  9583 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;  i               1    4[COMRAM] unsigned char 
  9588 ;; Return value:  Size  Location     Type
  9589 ;;		None               void
  9590 ;; Registers used:
  9591 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9601 ;;Total ram usage:        1 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:    2
  9604 ;; This function calls:
  9605 ;;		_Delay1KTCYx
  9606 ;;		_lcd_send_byte
  9607 ;;		_lcd_send_nibble
  9608 ;; This function is called by:
  9609 ;;		_activity_home
  9610 ;;		_activity_menu
  9611 ;;		_activity_submenu_activation
  9612 ;;		_activity_submenu_date_and_time
  9613 ;;		_activity_submenu_date_config
  9614 ;;		_activity_submenu_time_config
  9615 ;;		_activity_submenu_siren
  9616 ;;		_activity_submenu_siren_volume
  9617 ;;		_activity_submenu_siren_tone
  9618 ;;		_setup
  9619 ;;		_activity_pin
  9620 ;;		_activity_submenu_pin
  9621 ;;		_activity_submenu_pin_set
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text68
  9626  00F078                     __ptext68:
  9627                           	opt stack 0
  9628  00F078                     _lcd_init:
  9629                           	opt stack 27
  9630                           
  9631                           ;unmc_lcd_216.c: 120: int8 i;
  9632                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  9633                           
  9634                           ;incstack = 0
  9635  00F078  9693               	bcf	3987,3,c	;volatile
  9636                           
  9637                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  9638  00F07A  9493               	bcf	3987,2,c	;volatile
  9639                           
  9640                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  9641  00F07C  968A               	bcf	3978,3,c	;volatile
  9642                           
  9643                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  9644  00F07E  948A               	bcf	3978,2,c	;volatile
  9645                           
  9646                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  9647  00F080  9893               	bcf	3987,4,c	;volatile
  9648                           
  9649                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  9650  00F082  9A93               	bcf	3987,5,c	;volatile
  9651                           
  9652                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  9653  00F084  9C93               	bcf	3987,6,c	;volatile
  9654                           
  9655                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  9656  00F086  9E93               	bcf	3987,7,c	;volatile
  9657                           
  9658                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  9659  00F088  0E0A               	movlw	10
  9660  00F08A  EC0A  F071         	call	_Delay1KTCYx
  9661                           
  9662                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  9663  00F08E  0E0A               	movlw	10
  9664  00F090  EC0A  F071         	call	_Delay1KTCYx
  9665                           
  9666                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  9667  00F094  0E0A               	movlw	10
  9668  00F096  EC0A  F071         	call	_Delay1KTCYx
  9669                           
  9670                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  9671  00F09A  0E00               	movlw	0
  9672  00F09C  6E05               	movwf	lcd_init@i,c
  9673  00F09E                     l3287:
  9674  00F09E  0E02               	movlw	2
  9675  00F0A0  6405               	cpfsgt	lcd_init@i,c
  9676  00F0A2  D001               	goto	l3291
  9677  00F0A4  D008               	goto	l3297
  9678  00F0A6                     l3291:
  9679                           
  9680                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  9681  00F0A6  0E03               	movlw	3
  9682  00F0A8  ECC3  F077         	call	_lcd_send_nibble
  9683                           
  9684                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  9685  00F0AC  0E0A               	movlw	10
  9686  00F0AE  EC0A  F071         	call	_Delay1KTCYx
  9687  00F0B2  2A05               	incf	lcd_init@i,f,c
  9688  00F0B4  D7F4               	goto	l3287
  9689  00F0B6                     l3297:
  9690                           
  9691                           ;unmc_lcd_216.c: 146: }
  9692                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  9693  00F0B6  0E02               	movlw	2
  9694  00F0B8  ECC3  F077         	call	_lcd_send_nibble
  9695                           
  9696                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  9697  00F0BC  0E00               	movlw	0
  9698  00F0BE  6E05               	movwf	lcd_init@i,c
  9699  00F0C0  0E03               	movlw	3
  9700  00F0C2  6405               	cpfsgt	lcd_init@i,c
  9701  00F0C4  D002               	goto	l3305
  9702  00F0C6  0012               	return	
  9703  00F0C8  0012               	return	
  9704  00F0CA                     l3305:
  9705                           
  9706                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  9707  00F0CA  5005               	movf	lcd_init@i,w,c
  9708  00F0CC  0D01               	mullw	1
  9709  00F0CE  0EF7               	movlw	low _LCD_INIT_STRING
  9710  00F0D0  24F3               	addwf	prodl,w,c
  9711  00F0D2  6EF6               	movwf	tblptrl,c
  9712  00F0D4  0EFE               	movlw	high _LCD_INIT_STRING
  9713  00F0D6  20F4               	addwfc	prodh,w,c
  9714  00F0D8  6EF7               	movwf	tblptrh,c
  9715  00F0DA                     	if	0	;There are less than 3 active tblptr bytes
  9716  00F0DA                     	endif
  9717  00F0DA  0008               	tblrd		*
  9718  00F0DC  CFF5 F003          	movff	tablat,lcd_send_byte@n
  9719  00F0E0  0E00               	movlw	0
  9720  00F0E2  EC27  F072         	call	_lcd_send_byte
  9721                           
  9722                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  9723  00F0E6  0E0A               	movlw	10
  9724  00F0E8  EC0A  F071         	call	_Delay1KTCYx
  9725  00F0EC  2A05               	incf	lcd_init@i,f,c
  9726  00F0EE  0E03               	movlw	3
  9727  00F0F0  6405               	cpfsgt	lcd_init@i,c
  9728  00F0F2  D7EB               	goto	l3305
  9729  00F0F4  0012               	return	
  9730  00F0F6  0012               	return		;funcret
  9731  00F0F8                     __end_of_lcd_init:
  9732                           	opt stack 0
  9733                           tblptru	equ	0xFF8
  9734                           tblptrh	equ	0xFF7
  9735                           tblptrl	equ	0xFF6
  9736                           tablat	equ	0xFF5
  9737                           prodh	equ	0xFF4
  9738                           prodl	equ	0xFF3
  9739                           intcon	equ	0xFF2
  9740                           indf0	equ	0xFEF
  9741                           postinc0	equ	0xFEE
  9742                           fsr0h	equ	0xFEA
  9743                           fsr0l	equ	0xFE9
  9744                           wreg	equ	0xFE8
  9745                           indf1	equ	0xFE7
  9746                           postdec1	equ	0xFE5
  9747                           fsr1h	equ	0xFE2
  9748                           fsr1l	equ	0xFE1
  9749                           indf2	equ	0xFDF
  9750                           postinc2	equ	0xFDE
  9751                           postdec2	equ	0xFDD
  9752                           fsr2h	equ	0xFDA
  9753                           fsr2l	equ	0xFD9
  9754                           status	equ	0xFD8
  9755                           
  9756 ;; *************** function _lcd_send_byte *****************
  9757 ;; Defined at:
  9758 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  address         1    wreg     unsigned char 
  9761 ;;  n               1    2[COMRAM] unsigned char 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;  address         1    3[COMRAM] unsigned char 
  9764 ;; Return value:  Size  Location     Type
  9765 ;;		None               void
  9766 ;; Registers used:
  9767 ;;		wreg, status,2, status,0, cstack
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9773 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;Total ram usage:        2 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:    1
  9780 ;; This function calls:
  9781 ;;		_Delay100TCYx
  9782 ;;		_lcd_send_nibble
  9783 ;; This function is called by:
  9784 ;;		_lcd_init
  9785 ;;		_lcd_gotoxy
  9786 ;;		_lcd_putc
  9787 ;;		_lcd_comand
  9788 ;;		_lcd_setcursor_vb
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text69
  9793  00E44E                     __ptext69:
  9794                           	opt stack 0
  9795  00E44E                     _lcd_send_byte:
  9796                           	opt stack 27
  9797                           
  9798                           ;incstack = 0
  9799                           ;lcd_send_byte@address stored from wreg
  9800  00E44E  6E04               	movwf	lcd_send_byte@address,c
  9801                           
  9802                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  9803  00E450  968A               	bcf	3978,3,c	;volatile
  9804                           
  9805                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  9806  00E452  0E02               	movlw	2
  9807  00E454  EC13  F071         	call	_Delay100TCYx
  9808                           
  9809                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  9810  00E458  9893               	bcf	3987,4,c	;volatile
  9811                           
  9812                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  9813  00E45A  9A93               	bcf	3987,5,c	;volatile
  9814                           
  9815                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  9816  00E45C  9C93               	bcf	3987,6,c	;volatile
  9817                           
  9818                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  9819  00E45E  9E93               	bcf	3987,7,c	;volatile
  9820                           
  9821                           ;unmc_lcd_216.c: 101: if(address)
  9822  00E460  5004               	movf	lcd_send_byte@address,w,c
  9823  00E462  B4D8               	btfsc	status,2,c
  9824  00E464  D002               	goto	l483
  9825                           
  9826                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  9827  00E466  868A               	bsf	3978,3,c	;volatile
  9828  00E468  D001               	goto	l484
  9829  00E46A                     l483:
  9830                           
  9831                           ;unmc_lcd_216.c: 103: else
  9832                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  9833  00E46A  968A               	bcf	3978,3,c	;volatile
  9834  00E46C                     l484:
  9835                           
  9836                           ;unmc_lcd_216.c: 106: __nop();
  9837  00E46C  F000               	nop	
  9838                           
  9839                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  9840  00E46E  3803               	swapf	lcd_send_byte@n,w,c
  9841  00E470  0B0F               	andlw	15
  9842  00E472  ECC3  F077         	call	_lcd_send_nibble
  9843                           
  9844                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  9845  00E476  5003               	movf	lcd_send_byte@n,w,c
  9846  00E478  0B0F               	andlw	15
  9847  00E47A  ECC3  F077         	call	_lcd_send_nibble
  9848  00E47E  0012               	return		;funcret
  9849  00E480                     __end_of_lcd_send_byte:
  9850                           	opt stack 0
  9851                           tblptru	equ	0xFF8
  9852                           tblptrh	equ	0xFF7
  9853                           tblptrl	equ	0xFF6
  9854                           tablat	equ	0xFF5
  9855                           prodh	equ	0xFF4
  9856                           prodl	equ	0xFF3
  9857                           intcon	equ	0xFF2
  9858                           indf0	equ	0xFEF
  9859                           postinc0	equ	0xFEE
  9860                           fsr0h	equ	0xFEA
  9861                           fsr0l	equ	0xFE9
  9862                           wreg	equ	0xFE8
  9863                           indf1	equ	0xFE7
  9864                           postdec1	equ	0xFE5
  9865                           fsr1h	equ	0xFE2
  9866                           fsr1l	equ	0xFE1
  9867                           indf2	equ	0xFDF
  9868                           postinc2	equ	0xFDE
  9869                           postdec2	equ	0xFDD
  9870                           fsr2h	equ	0xFDA
  9871                           fsr2l	equ	0xFD9
  9872                           status	equ	0xFD8
  9873                           
  9874 ;; *************** function _lcd_send_nibble *****************
  9875 ;; Defined at:
  9876 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  nibble          1    wreg     unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  nibble          1    1[COMRAM] unsigned char 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;		None               void
  9883 ;; Registers used:
  9884 ;;		wreg, status,2, status,0
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9894 ;;Total ram usage:        2 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_lcd_send_byte
  9900 ;;		_lcd_init
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           	psect	text70
  9905  00EF86                     __ptext70:
  9906                           	opt stack 0
  9907  00EF86                     _lcd_send_nibble:
  9908                           	opt stack 28
  9909                           
  9910                           ;incstack = 0
  9911                           ;lcd_send_nibble@nibble stored from wreg
  9912  00EF86  6E02               	movwf	lcd_send_nibble@nibble,c
  9913                           
  9914                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  9915  00EF88  A002               	btfss	lcd_send_nibble@nibble,0,c
  9916  00EF8A  D003               	goto	u1360
  9917  00EF8C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9918  00EF8E  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9919  00EF90  D001               	goto	u1378
  9920  00EF92                     u1360:
  9921  00EF92  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9922  00EF94                     u1378:
  9923  00EF94  3A01               	swapf	??_lcd_send_nibble,f,c
  9924  00EF96  508A               	movf	3978,w,c	;volatile
  9925  00EF98  1801               	xorwf	??_lcd_send_nibble,w,c
  9926  00EF9A  0BEF               	andlw	-17
  9927  00EF9C  1801               	xorwf	??_lcd_send_nibble,w,c
  9928  00EF9E  6E8A               	movwf	3978,c	;volatile
  9929                           
  9930                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  9931  00EFA0  A202               	btfss	lcd_send_nibble@nibble,1,c
  9932  00EFA2  D003               	goto	u1380
  9933  00EFA4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9934  00EFA6  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9935  00EFA8  D001               	goto	u1398
  9936  00EFAA                     u1380:
  9937  00EFAA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9938  00EFAC                     u1398:
  9939  00EFAC  3A01               	swapf	??_lcd_send_nibble,f,c
  9940  00EFAE  4601               	rlncf	??_lcd_send_nibble,f,c
  9941  00EFB0  508A               	movf	3978,w,c	;volatile
  9942  00EFB2  1801               	xorwf	??_lcd_send_nibble,w,c
  9943  00EFB4  0BDF               	andlw	-33
  9944  00EFB6  1801               	xorwf	??_lcd_send_nibble,w,c
  9945  00EFB8  6E8A               	movwf	3978,c	;volatile
  9946                           
  9947                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  9948  00EFBA  A402               	btfss	lcd_send_nibble@nibble,2,c
  9949  00EFBC  D003               	goto	u1400
  9950  00EFBE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9951  00EFC0  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9952  00EFC2  D001               	goto	u1418
  9953  00EFC4                     u1400:
  9954  00EFC4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9955  00EFC6                     u1418:
  9956  00EFC6  3A01               	swapf	??_lcd_send_nibble,f,c
  9957  00EFC8  4601               	rlncf	??_lcd_send_nibble,f,c
  9958  00EFCA  4601               	rlncf	??_lcd_send_nibble,f,c
  9959  00EFCC  508A               	movf	3978,w,c	;volatile
  9960  00EFCE  1801               	xorwf	??_lcd_send_nibble,w,c
  9961  00EFD0  0BBF               	andlw	-65
  9962  00EFD2  1801               	xorwf	??_lcd_send_nibble,w,c
  9963  00EFD4  6E8A               	movwf	3978,c	;volatile
  9964                           
  9965                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  9966  00EFD6  A602               	btfss	lcd_send_nibble@nibble,3,c
  9967  00EFD8  D003               	goto	u1420
  9968  00EFDA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9969  00EFDC  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9970  00EFDE  D001               	goto	u1438
  9971  00EFE0                     u1420:
  9972  00EFE0  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9973  00EFE2                     u1438:
  9974  00EFE2  3201               	rrcf	??_lcd_send_nibble,f,c
  9975  00EFE4  3201               	rrcf	??_lcd_send_nibble,f,c
  9976  00EFE6  508A               	movf	3978,w,c	;volatile
  9977  00EFE8  1801               	xorwf	??_lcd_send_nibble,w,c
  9978  00EFEA  0B7F               	andlw	-129
  9979  00EFEC  1801               	xorwf	??_lcd_send_nibble,w,c
  9980  00EFEE  6E8A               	movwf	3978,c	;volatile
  9981                           
  9982                           ;unmc_lcd_216.c: 32: __nop();
  9983  00EFF0  F000               	nop	
  9984                           
  9985                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  9986  00EFF2  848A               	bsf	3978,2,c	;volatile
  9987                           
  9988                           ;unmc_lcd_216.c: 34: __nop();__nop();
  9989  00EFF4  F000               	nop	
  9990  00EFF6  F000               	nop	
  9991                           
  9992                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  9993  00EFF8  948A               	bcf	3978,2,c	;volatile
  9994  00EFFA  0012               	return		;funcret
  9995  00EFFC                     __end_of_lcd_send_nibble:
  9996                           	opt stack 0
  9997                           tblptru	equ	0xFF8
  9998                           tblptrh	equ	0xFF7
  9999                           tblptrl	equ	0xFF6
 10000                           tablat	equ	0xFF5
 10001                           prodh	equ	0xFF4
 10002                           prodl	equ	0xFF3
 10003                           intcon	equ	0xFF2
 10004                           indf0	equ	0xFEF
 10005                           postinc0	equ	0xFEE
 10006                           fsr0h	equ	0xFEA
 10007                           fsr0l	equ	0xFE9
 10008                           wreg	equ	0xFE8
 10009                           indf1	equ	0xFE7
 10010                           postdec1	equ	0xFE5
 10011                           fsr1h	equ	0xFE2
 10012                           fsr1l	equ	0xFE1
 10013                           indf2	equ	0xFDF
 10014                           postinc2	equ	0xFDE
 10015                           postdec2	equ	0xFDD
 10016                           fsr2h	equ	0xFDA
 10017                           fsr2l	equ	0xFD9
 10018                           status	equ	0xFD8
 10019                           
 10020 ;; *************** function _Delay100TCYx *****************
 10021 ;; Defined at:
 10022 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  unit            1    wreg     unsigned char 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  unit            1    0[COMRAM] unsigned char 
 10027 ;; Return value:  Size  Location     Type
 10028 ;;		None               void
 10029 ;; Registers used:
 10030 ;;		wreg
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10040 ;;Total ram usage:        1 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; This function calls:
 10043 ;;		Nothing
 10044 ;; This function is called by:
 10045 ;;		_lcd_send_byte
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text71
 10050  00E226                     __ptext71:
 10051                           	opt stack 0
 10052  00E226                     _Delay100TCYx:
 10053                           	opt stack 27
 10054                           
 10055                           ;incstack = 0
 10056                           ;Delay100TCYx@unit stored from wreg
 10057  00E226  6E01               	movwf	Delay100TCYx@unit,c
 10058  00E228  0E21               	movlw	33
 10059  00E22A                     u2757:
 10060  00E22A  2EE8               	decfsz	wreg,f,c
 10061  00E22C  D7FE               	goto	u2757
 10062  00E22E  F000               	nop	
 10063  00E230  2E01               	decfsz	Delay100TCYx@unit,f,c
 10064  00E232  D7FA               	goto	l3019
 10065  00E234  0012               	return	
 10066  00E236  0012               	return		;funcret
 10067  00E238                     __end_of_Delay100TCYx:
 10068                           	opt stack 0
 10069                           tblptru	equ	0xFF8
 10070                           tblptrh	equ	0xFF7
 10071                           tblptrl	equ	0xFF6
 10072                           tablat	equ	0xFF5
 10073                           prodh	equ	0xFF4
 10074                           prodl	equ	0xFF3
 10075                           intcon	equ	0xFF2
 10076                           indf0	equ	0xFEF
 10077                           postinc0	equ	0xFEE
 10078                           fsr0h	equ	0xFEA
 10079                           fsr0l	equ	0xFE9
 10080                           wreg	equ	0xFE8
 10081                           indf1	equ	0xFE7
 10082                           postdec1	equ	0xFE5
 10083                           fsr1h	equ	0xFE2
 10084                           fsr1l	equ	0xFE1
 10085                           indf2	equ	0xFDF
 10086                           postinc2	equ	0xFDE
 10087                           postdec2	equ	0xFDD
 10088                           fsr2h	equ	0xFDA
 10089                           fsr2l	equ	0xFD9
 10090                           status	equ	0xFD8
 10091                           
 10092 ;; *************** function _Delay1KTCYx *****************
 10093 ;; Defined at:
 10094 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  unit            1    wreg     unsigned char 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;  unit            1    0[COMRAM] unsigned char 
 10099 ;; Return value:  Size  Location     Type
 10100 ;;		None               void
 10101 ;; Registers used:
 10102 ;;		wreg
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/0
 10105 ;;		On exit  : 0/0
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10112 ;;Total ram usage:        1 bytes
 10113 ;; Hardware stack levels used:    1
 10114 ;; This function calls:
 10115 ;;		Nothing
 10116 ;; This function is called by:
 10117 ;;		_lcd_init
 10118 ;;		_DelayPORXLCD
 10119 ;; This function uses a non-reentrant model
 10120 ;;
 10121                           
 10122                           	psect	text72
 10123  00E214                     __ptext72:
 10124                           	opt stack 0
 10125  00E214                     _Delay1KTCYx:
 10126                           	opt stack 28
 10127                           
 10128                           ;incstack = 0
 10129                           ;Delay1KTCYx@unit stored from wreg
 10130  00E214  6E01               	movwf	Delay1KTCYx@unit,c
 10131  00E216  0EFA               	movlw	250
 10132  00E218                     u2767:
 10133  00E218  F000               	nop	
 10134  00E21A  2EE8               	decfsz	wreg,f,c
 10135  00E21C  D7FD               	goto	u2767
 10136  00E21E  2E01               	decfsz	Delay1KTCYx@unit,f,c
 10137  00E220  D7FA               	goto	l3073
 10138  00E222  0012               	return	
 10139  00E224  0012               	return		;funcret
 10140  00E226                     __end_of_Delay1KTCYx:
 10141                           	opt stack 0
 10142                           tblptru	equ	0xFF8
 10143                           tblptrh	equ	0xFF7
 10144                           tblptrl	equ	0xFF6
 10145                           tablat	equ	0xFF5
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           intcon	equ	0xFF2
 10149                           indf0	equ	0xFEF
 10150                           postinc0	equ	0xFEE
 10151                           fsr0h	equ	0xFEA
 10152                           fsr0l	equ	0xFE9
 10153                           wreg	equ	0xFE8
 10154                           indf1	equ	0xFE7
 10155                           postdec1	equ	0xFE5
 10156                           fsr1h	equ	0xFE2
 10157                           fsr1l	equ	0xFE1
 10158                           indf2	equ	0xFDF
 10159                           postinc2	equ	0xFDE
 10160                           postdec2	equ	0xFDD
 10161                           fsr2h	equ	0xFDA
 10162                           fsr2l	equ	0xFD9
 10163                           status	equ	0xFD8
 10164                           
 10165 ;; *************** function _Read_RTC *****************
 10166 ;; Defined at:
 10167 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;		None
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;		None
 10172 ;; Return value:  Size  Location     Type
 10173 ;;		None               void
 10174 ;; Registers used:
 10175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10185 ;;Total ram usage:        0 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; Hardware stack levels required when called:    1
 10188 ;; This function calls:
 10189 ;;		_RtccReadDate
 10190 ;;		_RtccReadTime
 10191 ;; This function is called by:
 10192 ;;		_main
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text73
 10197  00F68E                     __ptext73:
 10198                           	opt stack 0
 10199  00F68E                     _Read_RTC:
 10200                           	opt stack 29
 10201                           
 10202                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
 10203                           
 10204                           ;incstack = 0
 10205  00F68E  0E4A               	movlw	low _RtccTime
 10206  00F690  6E01               	movwf	RtccReadTime@pTm,c
 10207  00F692  0E00               	movlw	high _RtccTime
 10208  00F694  6E02               	movwf	RtccReadTime@pTm+1,c
 10209  00F696  EC54  F077         	call	_RtccReadTime	;wreg free
 10210                           
 10211                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
 10212  00F69A  504B               	movf	_RtccTime+1,w,c
 10213  00F69C  0B0F               	andlw	15
 10214  00F69E  6E5E               	movwf	_segundo_u,c
 10215                           
 10216                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
 10217  00F6A0  384B               	swapf	_RtccTime+1,w,c
 10218  00F6A2  0B0F               	andlw	15
 10219  00F6A4  0B0F               	andlw	15
 10220  00F6A6  6E5D               	movwf	_segundo_d,c
 10221                           
 10222                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
 10223  00F6A8  504C               	movf	_RtccTime+2,w,c
 10224  00F6AA  0B0F               	andlw	15
 10225  00F6AC  0100               	movlb	0	; () banked
 10226  00F6AE  6FA9               	movwf	_minuto_u& (0+255),b
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
 10230  00F6B0  384C               	swapf	_RtccTime+2,w,c
 10231  00F6B2  0B0F               	andlw	15
 10232  00F6B4  0B0F               	andlw	15
 10233  00F6B6  6E5C               	movwf	_minuto_d,c
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
 10237  00F6B8  504D               	movf	_RtccTime+3,w,c
 10238  00F6BA  0B0F               	andlw	15
 10239  00F6BC  0100               	movlb	0	; () banked
 10240  00F6BE  6FA7               	movwf	_hora_u& (0+255),b
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
 10244  00F6C0  384D               	swapf	_RtccTime+3,w,c
 10245  00F6C2  0B0F               	andlw	15
 10246  00F6C4  0B0F               	andlw	15
 10247  00F6C6  6E5A               	movwf	_hora_d,c
 10248                           
 10249                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
 10250  00F6C8  0E46               	movlw	low _RtccDate
 10251  00F6CA  6E01               	movwf	RtccReadDate@pDt,c
 10252  00F6CC  0E00               	movlw	high _RtccDate
 10253  00F6CE  6E02               	movwf	RtccReadDate@pDt+1,c
 10254  00F6D0  EC81  F079         	call	_RtccReadDate	;wreg free
 10255                           
 10256                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
 10257  00F6D4  5047               	movf	_RtccDate+1,w,c
 10258  00F6D6  0B0F               	andlw	15
 10259  00F6D8  0100               	movlb	0	; () banked
 10260  00F6DA  6FA6               	movwf	_fecha_u& (0+255),b
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
 10264  00F6DC  3847               	swapf	_RtccDate+1,w,c
 10265  00F6DE  0B0F               	andlw	15
 10266  00F6E0  0B0F               	andlw	15
 10267  00F6E2  6E59               	movwf	_fecha_d,c
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
 10271  00F6E4  5048               	movf	_RtccDate+2,w,c
 10272  00F6E6  0B0F               	andlw	15
 10273  00F6E8  0100               	movlb	0	; () banked
 10274  00F6EA  6FA8               	movwf	_mes_u& (0+255),b
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
 10278  00F6EC  3848               	swapf	_RtccDate+2,w,c
 10279  00F6EE  0B0F               	andlw	15
 10280  00F6F0  0B0F               	andlw	15
 10281  00F6F2  6E5B               	movwf	_mes_d,c
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
 10285  00F6F4  C046  F0A5         	movff	_RtccDate,_dia_semana
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
 10289  00F6F8  5049               	movf	_RtccDate+3,w,c
 10290  00F6FA  0B0F               	andlw	15
 10291  00F6FC  0100               	movlb	0	; () banked
 10292  00F6FE  6FA4               	movwf	_anio_u& (0+255),b
 10293                           
 10294                           ; BSR set to: 0
 10295                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
 10296  00F700  3849               	swapf	_RtccDate+3,w,c
 10297  00F702  0B0F               	andlw	15
 10298  00F704  0B0F               	andlw	15
 10299  00F706  6E58               	movwf	_anio_d,c
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
 10303  00F708  505D               	movf	_segundo_d,w,c
 10304  00F70A  0D0A               	mullw	10
 10305  00F70C  505E               	movf	_segundo_u,w,c
 10306  00F70E  24F3               	addwf	prodl,w,c
 10307  00F710  6E3F               	movwf	_segundo,c
 10308  00F712  0E00               	movlw	0
 10309  00F714  20F4               	addwfc	prodh,w,c
 10310  00F716  6E40               	movwf	_segundo+1,c
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
 10314  00F718  505C               	movf	_minuto_d,w,c
 10315  00F71A  0D0A               	mullw	10
 10316  00F71C  0100               	movlb	0	; () banked
 10317  00F71E  51A9               	movf	_minuto_u& (0+255),w,b
 10318  00F720  24F3               	addwf	prodl,w,c
 10319  00F722  6E3D               	movwf	_minuto,c
 10320  00F724  0100               	movlb	0	; () banked
 10321  00F726  0E00               	movlw	0
 10322  00F728  20F4               	addwfc	prodh,w,c
 10323  00F72A  6E3E               	movwf	_minuto+1,c
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
 10327  00F72C  505A               	movf	_hora_d,w,c
 10328  00F72E  0D0A               	mullw	10
 10329  00F730  0100               	movlb	0	; () banked
 10330  00F732  51A7               	movf	_hora_u& (0+255),w,b
 10331  00F734  24F3               	addwf	prodl,w,c
 10332  00F736  6E54               	movwf	_hora,c
 10333  00F738  0100               	movlb	0	; () banked
 10334  00F73A  0E00               	movlw	0
 10335  00F73C  20F4               	addwfc	prodh,w,c
 10336  00F73E  6E55               	movwf	_hora+1,c
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
 10340  00F740  5059               	movf	_fecha_d,w,c
 10341  00F742  0D0A               	mullw	10
 10342  00F744  0100               	movlb	0	; () banked
 10343  00F746  51A6               	movf	_fecha_u& (0+255),w,b
 10344  00F748  24F3               	addwf	prodl,w,c
 10345  00F74A  6E50               	movwf	_dia,c
 10346  00F74C  0100               	movlb	0	; () banked
 10347  00F74E  0E00               	movlw	0
 10348  00F750  20F4               	addwfc	prodh,w,c
 10349  00F752  6E51               	movwf	_dia+1,c
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
 10353  00F754  C0A5  F052         	movff	_dia_semana,_diasem
 10354  00F758  6A53               	clrf	_diasem+1,c
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
 10358  00F75A  505B               	movf	_mes_d,w,c
 10359  00F75C  0D0A               	mullw	10
 10360  00F75E  0100               	movlb	0	; () banked
 10361  00F760  51A8               	movf	_mes_u& (0+255),w,b
 10362  00F762  24F3               	addwf	prodl,w,c
 10363  00F764  6E56               	movwf	_mes,c
 10364  00F766  0100               	movlb	0	; () banked
 10365  00F768  0E00               	movlw	0
 10366  00F76A  20F4               	addwfc	prodh,w,c
 10367  00F76C  6E57               	movwf	_mes+1,c
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
 10371  00F76E  5058               	movf	_anio_d,w,c
 10372  00F770  0D0A               	mullw	10
 10373  00F772  0100               	movlb	0	; () banked
 10374  00F774  51A4               	movf	_anio_u& (0+255),w,b
 10375  00F776  24F3               	addwf	prodl,w,c
 10376  00F778  6E4E               	movwf	_anio,c
 10377  00F77A  0100               	movlb	0	; () banked
 10378  00F77C  0E00               	movlw	0
 10379  00F77E  20F4               	addwfc	prodh,w,c
 10380  00F780  6E4F               	movwf	_anio+1,c
 10381                           
 10382                           ; BSR set to: 0
 10383  00F782  0012               	return		;funcret
 10384  00F784                     __end_of_Read_RTC:
 10385                           	opt stack 0
 10386                           tblptru	equ	0xFF8
 10387                           tblptrh	equ	0xFF7
 10388                           tblptrl	equ	0xFF6
 10389                           tablat	equ	0xFF5
 10390                           prodh	equ	0xFF4
 10391                           prodl	equ	0xFF3
 10392                           intcon	equ	0xFF2
 10393                           indf0	equ	0xFEF
 10394                           postinc0	equ	0xFEE
 10395                           fsr0h	equ	0xFEA
 10396                           fsr0l	equ	0xFE9
 10397                           wreg	equ	0xFE8
 10398                           indf1	equ	0xFE7
 10399                           postdec1	equ	0xFE5
 10400                           fsr1h	equ	0xFE2
 10401                           fsr1l	equ	0xFE1
 10402                           indf2	equ	0xFDF
 10403                           postinc2	equ	0xFDE
 10404                           postdec2	equ	0xFDD
 10405                           fsr2h	equ	0xFDA
 10406                           fsr2l	equ	0xFD9
 10407                           status	equ	0xFD8
 10408                           
 10409 ;; *************** function _RtccReadTime *****************
 10410 ;; Defined at:
 10411 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  pTm             2    0[COMRAM] PTR struct .
 10414 ;;		 -> RtccTime(4), 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  rTD0            8   10[COMRAM] struct .
 10417 ;;  rTD1            8    2[COMRAM] struct .
 10418 ;; Return value:  Size  Location     Type
 10419 ;;		None               void
 10420 ;; Registers used:
 10421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/0
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10431 ;;Total ram usage:       18 bytes
 10432 ;; Hardware stack levels used:    1
 10433 ;; This function calls:
 10434 ;;		Nothing
 10435 ;; This function is called by:
 10436 ;;		_Read_RTC
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           	psect	text74
 10441  00EEA8                     __ptext74:
 10442                           	opt stack 0
 10443  00EEA8                     _RtccReadTime:
 10444                           	opt stack 29
 10445  00EEA8  0EFC               	movlw	252
 10446  00EEAA  010F               	movlb	15	; () banked
 10447  00EEAC  173F               	andwf	63,f,b	;volatile
 10448                           
 10449                           ; BSR set to: 15
 10450  00EEAE  010F               	movlb	15	; () banked
 10451  00EEB0  813F               	bsf	63,0,b	;volatile
 10452                           
 10453                           ; BSR set to: 15
 10454  00EEB2  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
 10455                           
 10456                           ; BSR set to: 15
 10457  00EEB6  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
 10458                           
 10459                           ; BSR set to: 15
 10460  00EEBA  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
 10461                           
 10462                           ; BSR set to: 15
 10463  00EEBE  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
 10464                           
 10465                           ; BSR set to: 15
 10466  00EEC2  0EFC               	movlw	252
 10467  00EEC4  010F               	movlb	15	; () banked
 10468  00EEC6  173F               	andwf	63,f,b	;volatile
 10469  00EEC8  010F               	movlb	15	; () banked
 10470  00EECA  813F               	bsf	63,0,b	;volatile
 10471                           
 10472                           ; BSR set to: 15
 10473  00EECC  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
 10474                           
 10475                           ; BSR set to: 15
 10476  00EED0  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
 10477                           
 10478                           ; BSR set to: 15
 10479  00EED4  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
 10480                           
 10481                           ; BSR set to: 15
 10482  00EED8  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
 10483                           
 10484                           ; BSR set to: 15
 10485  00EEDC  5009               	movf	RtccReadTime@rTD1+6,w,c
 10486  00EEDE  1811               	xorwf	RtccReadTime@rTD0+6,w,c
 10487  00EEE0  A4D8               	btfss	status,2,c
 10488  00EEE2  D7E2               	goto	l3929
 10489                           
 10490                           ; BSR set to: 15
 10491                           
 10492                           ; BSR set to: 15
 10493  00EEE4  EE20 F003          	lfsr	2,3
 10494  00EEE8  5001               	movf	RtccReadTime@pTm,w,c
 10495  00EEEA  26D9               	addwf	fsr2l,f,c
 10496  00EEEC  5002               	movf	RtccReadTime@pTm+1,w,c
 10497  00EEEE  22DA               	addwfc	fsr2h,f,c
 10498  00EEF0  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 10499  00EEF4  EE20 F002          	lfsr	2,2
 10500  00EEF8  5001               	movf	RtccReadTime@pTm,w,c
 10501  00EEFA  26D9               	addwf	fsr2l,f,c
 10502  00EEFC  5002               	movf	RtccReadTime@pTm+1,w,c
 10503  00EEFE  22DA               	addwfc	fsr2h,f,c
 10504  00EF00  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 10505  00EF04  EE20 F001          	lfsr	2,1
 10506  00EF08  5001               	movf	RtccReadTime@pTm,w,c
 10507  00EF0A  26D9               	addwf	fsr2l,f,c
 10508  00EF0C  5002               	movf	RtccReadTime@pTm+1,w,c
 10509  00EF0E  22DA               	addwfc	fsr2h,f,c
 10510  00EF10  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 10511                           
 10512                           ; BSR set to: 15
 10513  00EF14  0012               	return		;funcret
 10514  00EF16                     __end_of_RtccReadTime:
 10515                           	opt stack 0
 10516                           tblptru	equ	0xFF8
 10517                           tblptrh	equ	0xFF7
 10518                           tblptrl	equ	0xFF6
 10519                           tablat	equ	0xFF5
 10520                           prodh	equ	0xFF4
 10521                           prodl	equ	0xFF3
 10522                           intcon	equ	0xFF2
 10523                           indf0	equ	0xFEF
 10524                           postinc0	equ	0xFEE
 10525                           fsr0h	equ	0xFEA
 10526                           fsr0l	equ	0xFE9
 10527                           wreg	equ	0xFE8
 10528                           indf1	equ	0xFE7
 10529                           postdec1	equ	0xFE5
 10530                           fsr1h	equ	0xFE2
 10531                           fsr1l	equ	0xFE1
 10532                           indf2	equ	0xFDF
 10533                           postinc2	equ	0xFDE
 10534                           postdec2	equ	0xFDD
 10535                           fsr2h	equ	0xFDA
 10536                           fsr2l	equ	0xFD9
 10537                           status	equ	0xFD8
 10538                           
 10539 ;; *************** function _RtccReadDate *****************
 10540 ;; Defined at:
 10541 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;  pDt             2    0[COMRAM] PTR struct .
 10544 ;;		 -> RtccDate(4), 
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;  rTD0            8   10[COMRAM] struct .
 10547 ;;  rTD1            8    2[COMRAM] struct .
 10548 ;; Return value:  Size  Location     Type
 10549 ;;		None               void
 10550 ;; Registers used:
 10551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10558 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10560 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10561 ;;Total ram usage:       18 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; This function calls:
 10564 ;;		Nothing
 10565 ;; This function is called by:
 10566 ;;		_Read_RTC
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text75
 10571  00F302                     __ptext75:
 10572                           	opt stack 0
 10573  00F302                     _RtccReadDate:
 10574                           	opt stack 29
 10575  00F302  0EFC               	movlw	252
 10576  00F304  010F               	movlb	15	; () banked
 10577  00F306  173F               	andwf	63,f,b	;volatile
 10578  00F308  0E03               	movlw	3
 10579  00F30A  010F               	movlb	15	; () banked
 10580  00F30C  133F               	iorwf	63,f,b	;volatile
 10581                           
 10582                           ; BSR set to: 15
 10583  00F30E  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
 10584                           
 10585                           ; BSR set to: 15
 10586  00F312  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
 10587                           
 10588                           ; BSR set to: 15
 10589  00F316  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
 10590                           
 10591                           ; BSR set to: 15
 10592  00F31A  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
 10593                           
 10594                           ; BSR set to: 15
 10595  00F31E  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
 10596                           
 10597                           ; BSR set to: 15
 10598  00F322  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
 10599  00F326  0EFC               	movlw	252
 10600  00F328  010F               	movlb	15	; () banked
 10601  00F32A  173F               	andwf	63,f,b	;volatile
 10602  00F32C  0E03               	movlw	3
 10603  00F32E  010F               	movlb	15	; () banked
 10604  00F330  133F               	iorwf	63,f,b	;volatile
 10605                           
 10606                           ; BSR set to: 15
 10607  00F332  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
 10608                           
 10609                           ; BSR set to: 15
 10610  00F336  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
 10611                           
 10612                           ; BSR set to: 15
 10613  00F33A  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
 10614                           
 10615                           ; BSR set to: 15
 10616  00F33E  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
 10617                           
 10618                           ; BSR set to: 15
 10619  00F342  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
 10620                           
 10621                           ; BSR set to: 15
 10622  00F346  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
 10623  00F34A  5005               	movf	RtccReadDate@rTD1+2,w,c
 10624  00F34C  180D               	xorwf	RtccReadDate@rTD0+2,w,c
 10625  00F34E  A4D8               	btfss	status,2,c
 10626  00F350  D7D8               	goto	l3955
 10627                           
 10628                           ; BSR set to: 15
 10629                           
 10630                           ; BSR set to: 15
 10631  00F352  EE20 F001          	lfsr	2,1
 10632  00F356  5001               	movf	RtccReadDate@pDt,w,c
 10633  00F358  26D9               	addwf	fsr2l,f,c
 10634  00F35A  5002               	movf	RtccReadDate@pDt+1,w,c
 10635  00F35C  22DA               	addwfc	fsr2h,f,c
 10636  00F35E  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 10637  00F362  EE20 F002          	lfsr	2,2
 10638  00F366  5001               	movf	RtccReadDate@pDt,w,c
 10639  00F368  26D9               	addwf	fsr2l,f,c
 10640  00F36A  5002               	movf	RtccReadDate@pDt+1,w,c
 10641  00F36C  22DA               	addwfc	fsr2h,f,c
 10642  00F36E  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 10643                           
 10644                           ; BSR set to: 15
 10645  00F372  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
 10646  00F376  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 10647  00F37A  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 10648                           
 10649                           ; BSR set to: 15
 10650  00F37E  EE20 F003          	lfsr	2,3
 10651  00F382  5001               	movf	RtccReadDate@pDt,w,c
 10652  00F384  26D9               	addwf	fsr2l,f,c
 10653  00F386  5002               	movf	RtccReadDate@pDt+1,w,c
 10654  00F388  22DA               	addwfc	fsr2h,f,c
 10655  00F38A  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
 10656                           
 10657                           ; BSR set to: 15
 10658  00F38E  0012               	return		;funcret
 10659  00F390                     __end_of_RtccReadDate:
 10660                           	opt stack 0
 10661                           tblptru	equ	0xFF8
 10662                           tblptrh	equ	0xFF7
 10663                           tblptrl	equ	0xFF6
 10664                           tablat	equ	0xFF5
 10665                           prodh	equ	0xFF4
 10666                           prodl	equ	0xFF3
 10667                           intcon	equ	0xFF2
 10668                           indf0	equ	0xFEF
 10669                           postinc0	equ	0xFEE
 10670                           fsr0h	equ	0xFEA
 10671                           fsr0l	equ	0xFE9
 10672                           wreg	equ	0xFE8
 10673                           indf1	equ	0xFE7
 10674                           postdec1	equ	0xFE5
 10675                           fsr1h	equ	0xFE2
 10676                           fsr1l	equ	0xFE1
 10677                           indf2	equ	0xFDF
 10678                           postinc2	equ	0xFDE
 10679                           postdec2	equ	0xFDD
 10680                           fsr2h	equ	0xFDA
 10681                           fsr2l	equ	0xFD9
 10682                           status	equ	0xFD8
 10683                           tblptru	equ	0xFF8
 10684                           tblptrh	equ	0xFF7
 10685                           tblptrl	equ	0xFF6
 10686                           tablat	equ	0xFF5
 10687                           prodh	equ	0xFF4
 10688                           prodl	equ	0xFF3
 10689                           intcon	equ	0xFF2
 10690                           indf0	equ	0xFEF
 10691                           postinc0	equ	0xFEE
 10692                           fsr0h	equ	0xFEA
 10693                           fsr0l	equ	0xFE9
 10694                           wreg	equ	0xFE8
 10695                           indf1	equ	0xFE7
 10696                           postdec1	equ	0xFE5
 10697                           fsr1h	equ	0xFE2
 10698                           fsr1l	equ	0xFE1
 10699                           indf2	equ	0xFDF
 10700                           postinc2	equ	0xFDE
 10701                           postdec2	equ	0xFDD
 10702                           fsr2h	equ	0xFDA
 10703                           fsr2l	equ	0xFD9
 10704                           status	equ	0xFD8
 10705                           
 10706                           	psect	rparam
 10707  0000                     tblptru	equ	0xFF8
 10708                           tblptrh	equ	0xFF7
 10709                           tblptrl	equ	0xFF6
 10710                           tablat	equ	0xFF5
 10711                           prodh	equ	0xFF4
 10712                           prodl	equ	0xFF3
 10713                           intcon	equ	0xFF2
 10714                           indf0	equ	0xFEF
 10715                           postinc0	equ	0xFEE
 10716                           fsr0h	equ	0xFEA
 10717                           fsr0l	equ	0xFE9
 10718                           wreg	equ	0xFE8
 10719                           indf1	equ	0xFE7
 10720                           postdec1	equ	0xFE5
 10721                           fsr1h	equ	0xFE2
 10722                           fsr1l	equ	0xFE1
 10723                           indf2	equ	0xFDF
 10724                           postinc2	equ	0xFDE
 10725                           postdec2	equ	0xFDD
 10726                           fsr2h	equ	0xFDA
 10727                           fsr2l	equ	0xFD9
 10728                           status	equ	0xFD8


Data Sizes:
    Strings     252
    Constant    14
    Data        10
    BSS         105
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      95
    BANK0           160      0      74
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_54(CODE[5]), STR_52(CODE[1]), STR_47(CODE[1]), pin_input(BANK0[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_33(CODE[5]), STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), 
		 -> STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), STR_26(CODE[15]), 
		 -> STR_25(CODE[15]), STR_15(CODE[15]), STR_13(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    lcd_write@string	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_53(CODE[11]), STR_51(CODE[6]), STR_50(CODE[8]), STR_49(CODE[4]), 
		 -> STR_48(CODE[16]), STR_46(CODE[2]), STR_45(CODE[2]), STR_44(CODE[2]), 
		 -> STR_43(CODE[2]), STR_42(CODE[2]), STR_41(CODE[2]), STR_40(CODE[2]), 
		 -> STR_39(CODE[2]), STR_38(CODE[2]), STR_37(CODE[2]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_24(CODE[7]), STR_23(CODE[7]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[8]), STR_18(CODE[5]), 
		 -> STR_17(CODE[8]), STR_16(CODE[7]), STR_14(CODE[16]), buffer1(BANK0[20]), 
		 -> STR_12(CODE[17]), STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[6]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[8]), STR_5(CODE[7]), 
		 -> STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[8]), STR_1(CODE[4]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_53(CODE[11]), STR_51(CODE[6]), STR_50(CODE[8]), STR_49(CODE[4]), 
		 -> STR_48(CODE[16]), STR_46(CODE[2]), STR_45(CODE[2]), STR_44(CODE[2]), 
		 -> STR_43(CODE[2]), STR_42(CODE[2]), STR_41(CODE[2]), STR_40(CODE[2]), 
		 -> STR_39(CODE[2]), STR_38(CODE[2]), STR_37(CODE[2]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_24(CODE[7]), STR_23(CODE[7]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[8]), 
		 -> STR_18(CODE[5]), STR_17(CODE[8]), STR_16(CODE[7]), STR_14(CODE[16]), 
		 -> buffer1(BANK0[20]), STR_12(CODE[17]), STR_11(CODE[5]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[8]), 
		 -> STR_5(CODE[7]), STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[8]), 
		 -> STR_1(CODE[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _keyboard_control->_button_B
    _button_number->_sprintf
    _Write_RTC->_RtccWriteDate
    _cursor_displacement->_lcd_gotoxy
    _activity_menu->_lcd_write
    _button_B->_button_B_submenu_date_and_time_config
    _activity_submenu_siren_volume->_lcd_write
    _activity_submenu_siren_tone->_lcd_write
    _pin_reset->_strcpy
    _activity_submenu_pin_set->_lcd_write
    _activity_submenu_time_config->_sprintf
    _activity_submenu_date_config->_sprintf
    _activity_submenu_siren->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_date_and_time->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_menu_selector
    _button_A->_submenu_selector
    _submenu_selector_1->_lcd_write
    _submenu_selector_0->_lcd_write
    _menu_selector_3->_lcd_write
    _menu_selector_2->_lcd_write
    _menu_selector_1->_lcd_write
    _menu_selector_0->_lcd_write
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _home_volume_refresh->_sprintf
    _home_tone_refresh->_sprintf
    _home_state_refresh->_sprintf
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  546290
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                _home_config_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4358
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                          _pin_reset
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  454870
                                             39 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0   10971
                _cursor_displacement
                           _date_set
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
                           _time_set
 ---------------------------------------------------------------------------------
 (3) _time_set                                             2     2      0    2277
                                             13 COMRAM     2     2      0
                          _Write_RTC
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _date_set                                             2     2      0    2277
                                             13 COMRAM     2     2      0
                          _Write_RTC
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (3) _cursor_displacement                                  1     1      0    1141
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   66677
                      _activity_home
                _pin_input_validator
                            _pin_set
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_set                                              0     0      0   13456
                      _activity_home
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  0     0      0   40352
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0       0
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0   12869
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   24890
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   24890
                           _lcd_init
                          _lcd_write
                    _menu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0  252094
                                             37 COMRAM     2     2      0
                      _button_B_menu
        _button_B_submenu_activation
_button_B_submenu_date_and_time_conf
        _button_B_submenu_pin_config
      _button_B_submenu_siren_config
        _button_B_submenu_siren_tone
      _button_B_submenu_siren_volume
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_volume                        2     2      0   12869
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_tone                          2     2      0   12869
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_config                        2     2      0   49780
                                             16 COMRAM     2     2      0
        _activity_submenu_siren_tone
      _activity_submenu_siren_volume
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_volume                        0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_tone                          0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_pin_config                          2     2      0   28699
                                             16 COMRAM     2     2      0
                      _activity_home
           _activity_submenu_pin_set
                          _pin_reset
 ---------------------------------------------------------------------------------
 (2) _pin_reset                                            0     0      0     587
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin_set                             0     0      0   15243
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_date_and_time_config                2     2      0   35448
                                             35 COMRAM     2     2      0
       _activity_submenu_date_config
       _activity_submenu_time_config
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_time_config                         0     0      0   17724
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_config                         0     0      0   17724
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_activation                          2     2      0   12869
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_menu                                        2     2      0   99560
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
     _activity_submenu_date_and_time
               _activity_submenu_pin
             _activity_submenu_siren
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren                               0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin                                 0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_and_time                       0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_activation                          0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   87369
                                             18 COMRAM     2     2      0
                       _activity_pin
                      _menu_selector
                _reset_home_callback
                   _submenu_selector
 ---------------------------------------------------------------------------------
 (3) _submenu_selector                                     2     2      0   24042
                                             16 COMRAM     2     2      0
                 _submenu_selector_0
                 _submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _submenu_selector_1                                   0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _submenu_selector_0                                   0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_selector                                        2     2      0   48084
                                             16 COMRAM     2     2      0
                    _menu_selector_0
                    _menu_selector_1
                    _menu_selector_2
                    _menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _menu_selector_3                                      0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_2                                      0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_1                                      0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _menu_selector_0                                      0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   15243
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _home_config_refresh                                  2     2      0   45267
                                             35 COMRAM     2     2      0
                 _home_state_refresh
                  _home_tone_refresh
                _home_volume_refresh
 ---------------------------------------------------------------------------------
 (2) _home_volume_refresh                                  0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_tone_refresh                                    0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_state_refresh                                   0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    3068
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0   12869
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _activity_home                                        0     0      0   12869
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6   12021
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1982
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1809
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    1141
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _home_config_refresh
     _home_state_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_tone_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_volume_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _keyboard_control
     _button_A
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _menu_selector
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
       _submenu_selector
         _submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
     _button_B
       _button_B_menu
         _activity_submenu_activation
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_date_and_time
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_pin
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_activation
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_date_and_time_config
         _activity_submenu_date_config
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _activity_submenu_time_config
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _button_B_submenu_pin_config
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin_set
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _pin_reset
           _strcpy
       _button_B_submenu_siren_config
         _activity_submenu_siren_tone
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren_volume
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_siren_tone
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_siren_volume
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_C
       _activity_menu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _reset_home_callback
     _button_hash
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _pin_input_validator
         _activity_menu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _pin_set
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_number
       _cursor_displacement
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _date_set
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
       _time_set
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _pin_reset
       _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      4A       5       46.3%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     28      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       6        0.0%
DATA                 0      0      A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Sep 18 17:37:44 2016

                                             _a 007C                                               _b 007E  
                                             _c 0080                                               _i 0039  
                                             _j 0082                                               _k 0084  
                                ?_lcd_send_byte 0003                                    ___awdiv@sign 0006  
                           ___wmul@multiplicand 0003                            ?_home_volume_refresh 0001  
                                   lcd_comand@d 0005                                    __CFG_CP0$OFF 000000  
                               lcd_write@column 000B                                             l220 EA7E  
                                           l400 FA10                                             l411 FA52  
                                           l403 FA26                                             l420 FA72  
                                           l412 FA4E                                             l404 FA22  
                                           l431 FAB4                                             l423 FA90  
                                           l415 FA64                                             l407 FA40  
                                           l440 FADC                                             l432 FAB0  
                                           l424 FA8C                                             l416 FA60  
                                           l408 FA3C                                             l443 FAF2  
                                           l435 FAC6                                             l427 FAA2  
                                           l419 FA76                                             l452 FB12  
                                           l444 FAEE                                             l436 FAC2  
                                           l428 FA9E                                             l447 FB04  
                                           l439 FAE0                                             l391 F9F0  
                                           l448 FB00                                             l392 F9EC  
                                           l483 E46A                                             l395 FA02  
                                           l484 E46C                                             l396 F9FE  
                                           l655 FE5A                                             l399 FA14  
                         ??_check_home_callback 0011                                             _dia 0050  
                                           _key 0045                                             _mes 0056  
                                           _pin 009A                                 lcd_write@string 000F  
                                           wreg 000FE8                                 RtccReadDate@pDt 0001  
                                   lcd_gotoxy@x 0006                                     lcd_gotoxy@y 0005  
                             ??_button_asterisk 0001                                            l1309 E95C  
                                          l3113 EBFE                                            l4001 EB76  
                                          l3201 F878                                            l3019 E228  
                                          l3115 EC08                                            l3045 E2FE  
                                          l3053 E8D2                                            l3125 EC2E  
                                          l3117 EC10                                            l3141 E950  
                                          l3133 E928                                            l4013 E5A6  
                                          l4021 E5B8                                            l3221 F8F2  
                                          l3205 F884                                            l3047 E304  
                                          l3055 E8DE                                            l3063 E902  
                                          l3071 EBC0                                            l3135 E932  
                                          l4007 EB0E                                            l4015 E5AC  
                                          l4031 EF22                                            l3231 F940  
                                          l3073 E216                                            l3305 F0CA  
                                          l3057 E8EA                                            l3137 E93A  
                                          l3401 FE60                                            l4009 EB24  
                                          l4017 E5B2                                            l4041 EF40  
                                          l4033 EF28                                            l3153 F7C2  
                                          l3059 E8F6                                            l3067 EB96  
                                          l1299 EC3A                                            l3411 FEDC  
                                          l4035 EF2E                                            l3227 F92C  
                                          l3163 F800                                            l3341 FCDA  
                                          l3333 FCAC                                            l3421 E7C4  
                                          l4037 EF34                                            l4029 EF1C  
                                          l4045 EF46                                            l3237 F95C  
                                          l3407 FEB4                                            l3335 FCBA  
                                          l3327 FC92                                            l4039 EF3A  
                                          l4071 E574                                            l3159 F7EC  
                                          l3431 F438                                            l3097 E2E8  
                                          l3353 FD5C                                            l3345 FCF8  
                                          l3409 FEC0                                            l3273 F9BE  
                                          l3169 F81C                                            l4313 E39C  
                                          l3291 F0A6                                            l3339 FCC4  
                                          l4171 F600                                            l3419 E7BA  
                                          l4075 E584                                            l3443 F460  
                                          l3381 FDF8                                            l3373 FDD0  
                                          l3365 FDA0                                            l3357 FD62  
                                          l4173 F606                                            l3277 F9CA  
                                          l3269 F9B2                                            l3197 F86C  
                                          l3445 F46A                                            l3437 F44A  
                                          l4093 F04E                                            l3287 F09E  
                                          l3383 FE02                                            l3359 FD84  
                                          l4167 F5F4                                            l4079 E598  
                                          l3463 F4AC                                            l3455 F490  
                                          l3447 F472                                            l3297 F0B6  
                                          l3393 FE30                                            l3377 FDD4  
                                          l3369 FDAC                                            l4185 F646  
                                          l4193 F666                                            l3801 E840  
                                          l3705 EA64                                            l3721 F4D2  
                                          l4089 F02C                                            l4265 FB1A  
                                          l3395 FE38                                            l3387 FE0E  
                                          l4179 F626                                            l3803 E846  
                                          l3811 E858                                            l3459 F49C  
                                          l3723 F4E0                                            l3731 F502  
                                          l4099 F062                                            l3805 E84C  
                                          l3821 E4BE                                            l3709 EA78  
                                          l3725 F4EA                                            l3733 F53A  
                                          l3717 F4BA                                            l3807 E852  
                                          l3903 E3FC                                            l3727 F4F8  
                                          l3719 F4C8                                            l3751 F582  
                                          l3743 F552                                            l3825 E4C8  
                                          l3913 E38A                                            l3921 E890  
                                          l3753 F590                                            l3745 F560  
                                          l3771 E7FE                                            l3827 E4E8  
                                          l3819 E4B6                                            l3835 E482  
                                          l3843 E492                                            l3851 E420  
                                          l3691 EA0E                                            l3923 E896  
                                          l3747 F56A                                            l3773 E804  
                                          l3837 E488                                            l3853 E426  
                                          l3925 E8A8                                            l3749 F578  
                                          l3757 F59A                                            l3775 E80A  
                                          l3871 E53C                                            l3695 EA42  
                                          l3927 E8B2                                            l3759 F5D2  
                                          l3929 EEA8                                            l3769 E7F8  
                                          l3793 E3CC                                            l3857 E42C  
                                          l3881 E4F0                                            l3873 E55C  
                                          l3865 E52A                                            l3689 EA04  
                                          l3955 F302                                            l3779 E810  
                                          l3787 E3C0                                            l3883 E4F8  
                                          l3867 E532                                            l3789 E3C6  
                                          l3991 EABC                                            l3887 E502  
                                          l3993 EAD2                                            l3897 E3F0  
                                          l3889 E522                                            l3899 E3F6  
                                          l3999 EB60                 ??_activity_submenu_siren_volume 0011  
                                          STR_1 FFE3                                            STR_2 FF65  
                                          STR_3 FFBF                                            STR_4 FFE7  
                                          STR_5 FFA5                                            STR_6 FF65  
                                          STR_7 FFEB            __size_of_button_B_submenu_pin_config 0034  
                                          STR_8 FFEE                                            STR_9 FFBF  
                                          u1400 EFC4                                            u1420 EFE0  
                                          u1360 EF92                                            u1418 EFC6  
                                          u1380 EFAA                                            u1460 EBB6  
                                          u1438 EFE2                                            u1470 EBE0  
                                          u1378 EF94                                            u1467 EBAC  
                                          u1477 EBD6                                            u1398 EFAC  
                                          u2717 FB20                                            u2727 F5DC  
                                          u2737 F544                                            u2747 EA92  
                                          u2757 E22A                                            u1990 E7EC  
                                          u2767 E218                                            u1997 E7E2  
           __end_of_activity_submenu_siren_tone EE42                     _activity_submenu_siren_tone EDDC  
                              ?_lcd_send_nibble 0001                                            _anio 004E  
                                          _flag 02F8                                            _main E392  
                                          _hora 0054                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr0l 000FE9                                            fsr2h 000FDA  
                                          indf1 000FE7                                            fsr1l 000FE1  
                                          indf2 000FDF                                            fsr2l 000FD9  
                    __size_of_home_tone_refresh 0052                                   __CFG_T1DIG$ON 000000  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                   __CFG_IESO$OFF 000000  
                              RtccReadDate@rTD0 000B                                RtccReadDate@rTD1 0003  
                          __end_of_activity_pin E9B4                   ??_activity_submenu_siren_tone 0011  
                                  ___param_bank 000010                                 RtccReadTime@pTm 0001  
                   __end_of_cursor_displacement EA9E                 __size_of_activity_submenu_siren 0066  
          __end_of_activity_submenu_time_config F1FC           __size_of_activity_submenu_time_config 0082  
                  _activity_submenu_time_config F17A                      _cursor_horizontal_position 0033  
                         ??_home_volume_refresh 0024                                     _Delay1KTCYx E214  
                                 __CFG_PLLDIV$1 000000                                           ?_main 0001  
                               __end_of___awdiv F4B8                                           STR_10 FFB9  
                                         STR_11 FFCA                                           STR_20 FFCF  
                                         STR_12 FEFB                                           STR_21 FFD9  
                                         STR_13 FF2C                                           STR_22 FFD4  
                                         STR_30 FF97                                           STR_14 FF1C  
                                         STR_31 FF74                                           STR_23 FF6D  
                                         STR_15 FF3B                                           STR_40 FFF1  
                                         STR_16 FFAC                                           STR_32 FF82  
                                         STR_24 FF7B                                           STR_41 FFF3  
                                         STR_25 FF2C                                           STR_33 FFDE  
                                         STR_17 FF5D                                           STR_42 FFF1  
                                         STR_26 FF3B                                           STR_34 FFF5  
                                         STR_18 FFD4                                           STR_50 FF55  
                                         STR_43 FFF3                                           STR_19 FF5D  
                                         STR_35 FFF3                                           STR_51 FFB3  
                                         STR_27 FF90                                           STR_52 FFF2  
                                         STR_44 FFF1                                           STR_36 FFF1  
                                         STR_28 FF9E                                           STR_45 FFF3  
                                         STR_37 FFF3                                           STR_29 FF89  
                                         STR_53 FF4A            __size_of_button_B_submenu_siren_tone 003A  
                                         STR_46 FFF1                                           STR_38 FFF1  
                                         STR_54 FFC5                                           STR_47 FFF2  
                                         STR_39 FFF3                                           STR_48 FF0C  
                                         STR_49 FFE7                           __size_of_Delay100TCYx 0012  
                               ___awdiv@divisor 0003                                 __end_of___lwdiv EC44  
                               __end_of___lwmod E966                                 ___awdiv@counter 0005  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                    ?_button_hash 0001  
                                __CFG_FCMEN$OFF 000000                                 __end_of_dpowers FEF7  
                                         _mes_d 005B                                           _mes_u 00A8  
                               __end_of_isdigit E2F2                                           _setup F27E  
                                         _state 0041                                 __end_of_pin_set E292  
         __end_of_button_B_submenu_siren_config E44E          __size_of_button_B_submenu_siren_config 0030  
                 _button_B_submenu_siren_config E41E                                  __pbitbssCOMRAM 02F8  
                                         tablat 000FF5                     __size_of_home_state_refresh 0052  
                           _reset_home_callback E1E8                                    lcd_putrs@ptr 0009  
                                         status 000FD8                                 __end_of_sprintf FEEC  
         __end_of_button_B_submenu_siren_volume E562          __size_of_button_B_submenu_siren_volume 003A  
                 _button_B_submenu_siren_volume E528                __end_of_activity_submenu_pin_set EA02  
                         __end_of_activity_home E368                           __end_of_activity_menu F27E  
                                  lcd_write@row 000D                        __size_of_menu_selector_0 0042  
                      __size_of_menu_selector_1 0042                        __size_of_menu_selector_2 0042  
                      __size_of_menu_selector_3 0042                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization E76C                                    _Delay100TCYx E226  
                                  __end_of_main E3BE                     __size_of_submenu_selector_0 0042  
                   __size_of_submenu_selector_1 0042                                 ??_lcd_send_byte 0004  
                              RtccReadTime@rTD0 000B                                RtccReadTime@rTD1 0003  
                              __end_of_Read_RTC F784                   ?_activity_submenu_time_config 0001  
                          ?_reset_home_callback 0001                                          ??_main 0029  
                                 __activetblptr 000002                                __end_of_RtccWrOn E24A  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                        _activity_submenu_siren ED76                                          _EECON2 000FA7  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                              ___awdiv@dividend 0001                                          ?_setup 0001  
                                __CFG_WDTEN$OFF 000000                    __size_of_pin_input_validator 002A  
                              RtccWriteDate@pDt 0001                                          _RTCCFG 000F3F  
                                __CFG_WPCFG$OFF 000000                                   _home_callback 0035  
         __end_of_activity_submenu_siren_volume EEA8          __size_of_activity_submenu_siren_volume 0066  
                 _activity_submenu_siren_volume EE42                                __end_of_date_set F550  
                                __CFG_WPDIS$OFF 000000                               ?_submenu_selector 0001  
                           _home_callback_delay 0037                                  __CFG_XINST$OFF 000000  
                           _home_config_refresh F5E8                          __size_of_button_B_menu 0048  
                            ??_submenu_selector 0011                                __end_of_lcd_init F0F8  
                    __end_of_home_clock_refresh F422                                __end_of_lcd_putc E91A  
                                        ___wmul E316                                       ??___awdiv 0005  
                                __CFG_STVREN$ON 000000                                          _diasem 0052  
                                        _anio_d 0058                                          _anio_u 00A4  
                                     ??___lwdiv 0005                                       ??___lwmod 000C  
                         ??_reset_home_callback 0001                                          _hora_d 005A  
                                        _hora_u 00A7                                __end_of_button_A E5E0  
                              __end_of_button_B EF86                                __end_of_button_C E2AE  
                              __end_of_button_D E1FC                                          clear_0 E772  
                                        clear_1 E780                                ___awdiv@quotient 0007  
                                        _minuto 003D             __end_of_button_B_submenu_activation E4EE  
                   _button_B_submenu_activation E4B4                           __end_of_RtccWriteDate F9D6  
                                        _strcat E886                                          _strcmp EA02  
                         __end_of_RtccWriteTime F890                                          _strcpy E7B0  
                              RtccWriteTime@pTm 0001                                    __pdataCOMRAM 004E  
                                     ??_isdigit 0001                          __size_of_button_number 007C  
                              __end_of_time_set F5E8                                    __mediumconst FEEC  
                                     ??_pin_set 0011                            ?_home_config_refresh 0001  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ??_sprintf 0017  
                         __size_of_activity_pin 004E                                      __accesstop 0060  
                       __end_of__initialization E7A6                              __size_of_Write_RTC 015C  
                                 ___rparam_used 000001                       __size_of_keyboard_control 0156  
                                __pcstackCOMRAM 0001                                   __end_of_setup F302  
                             ??_menu_selector_0 0011                               ??_menu_selector_1 0011  
                             ??_menu_selector_2 0011                               ??_menu_selector_3 0011  
                               __CFG_DSWDTPS$G2 000000                          __size_of_menu_selector 0048  
                               _button_asterisk E1E2               __size_of_activity_submenu_pin_set 004E  
                               __CFG_OSC$INTOSC 000000                           ??_home_config_refresh 0024  
                     ?_activity_submenu_pin_set 0001                                   _button_B_menu E83E  
                                  _activity_pin E966                                    _alarm_volume 002D  
                             lcd_gotoxy@address 0007                            __size_of_button_hash 003E  
                            __size_of_lcd_putrs 0054                              __size_of_lcd_write 0018  
                                  sprintf@width 0021                                         ??_setup 000E  
                                    __pbssBANK0 0060                                       ?_Read_RTC 0001  
                                    _dia_semana 00A5                       RtccWriteTime@tempHourWDay 000A  
                                    __pnvCOMRAM 0058                                      _alarm_tone 002B  
                 __size_of_activity_submenu_pin 0066                                   _button_number EFFC  
                                     ?_RtccWrOn 0001                                  lcd_send_byte@n 0003  
                ?_activity_submenu_siren_volume 0001             __end_of_button_B_submenu_pin_config E4B4  
                   _button_B_submenu_pin_config E480                                         ?___wmul 0001  
                                 ?_RtccReadDate 0001                     __end_of_check_home_callback E2D0  
                                 ?_RtccReadTime 0001                              __size_of_pin_reset 0016  
                                  ?_Delay1KTCYx 0001                ??_activity_submenu_date_and_time 0011  
               ?_activity_submenu_date_and_time 0001                                         ?_strcat 0001  
                                       ?_strcmp 0001                                         ?_strcpy 0001  
                             __end_of_Write_RTC FC88                                  ?_button_B_menu 0001  
                                    _lcd_comand E206                                       ?_date_set 0001  
                                    _lcd_gotoxy E2F2                                         _RTCVALH 000F99  
                                       _RTCVALL 000F98                                       ?_lcd_init 0001  
                                     ?_lcd_putc 0001                                   _menu_selected 003B  
                                 _menu_selector E7F6             __end_of_button_B_submenu_siren_tone E528  
                   _button_B_submenu_siren_tone E4EE                                      ??_Read_RTC 0013  
                                     ?_button_A 0001                                       ?_button_B 0001  
                                     ?_button_C 0001                                       ?_button_D 0001  
                                ?_button_number 0001                                         __Hparam 0000  
                ??_activity_submenu_date_config 0024                                         __Lparam 0000  
                   __end_of_home_volume_refresh EB94                        __size_of_lcd_send_nibble 0076  
                       __end_of_button_asterisk E1E8                                      ??_RtccWrOn 0001  
                                     ?_time_set 0001                                  ??_RtccReadDate 0003  
                                ??_RtccReadTime 0003                                         ___awdiv F422  
                             __end_of_lcd_putrs EBE8                               __end_of_lcd_write E278  
                               __size_of___wmul 0028                                         ___lwdiv EBE8  
                                       ___lwmod E91A                                     _RtccTimeVal 0078  
                                       __pcinit E76C                                         _fecha_d 0059  
                                       _fecha_u 00A6                                         __ramtop 0F00  
                           _pin_input_validator E368                                         __ptext0 E392  
                                       __ptext1 F27E                                         __ptext2 F9D6  
                                       __ptext3 EFFC                                         __ptext4 F550  
                                       __ptext5 E886                                         __ptext6 F4B8  
                                       __ptext7 FB2C                                         __ptext8 F422  
                                       __ptext9 F784                    ?_activity_submenu_activation 0001  
                                       _buffer1 0086                                 __size_of_strcat 0048  
                               __size_of_strcmp 004E                                 __size_of_strcpy 0046  
                  __size_of_cursor_displacement 004E                                       _T1CONbits 000FCD  
                                       _dpowers FEED                                         _isdigit E2D0  
                       ?_activity_submenu_siren 0001                                      ??_date_set 000E  
                                       _pin_set E278                                         _segundo 003F  
                    __end_of_home_state_refresh EAF0                                         _sprintf FC88  
                                    ??_lcd_init 0005                                      ??_lcd_putc 0008  
                          end_of_initialization E7A6                                  ?_menu_selector 0001  
                             __end_of_pin_reset E260                            ?_pin_input_validator 0001  
                          lcd_send_byte@address 0004                                      ??_button_A 0013  
                                 __Lmediumconst FEEC                                      ??_button_B 0026  
                                    ??_button_C 0011                                      ??_button_D 0011  
                    __end_of_submenu_selector_0 E72A                      __end_of_submenu_selector_1 E76C  
                              _keyboard_control F9D6                                      ??_time_set 000E  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                         __end_of_lcd_send_byte E480                                         strcmp@r 0006  
                                     _PORTAbits 000F80                                       _PORTCbits 000F82  
                               ??_button_B_menu 0011                  __end_of_activity_submenu_siren EDDC  
                              __CFG_DSBOREN$OFF 000000                       __size_of_submenu_selector 0030  
                                   ?_lcd_comand 0001                              _home_clock_refresh F390  
                              __CFG_CPUDIV$OSC1 000000                                       _TRISBbits 000F93  
                        __size_of_activity_home 002A                          __size_of_activity_menu 0082  
                                   ?_lcd_gotoxy 0005                                 _LCD_INIT_STRING FEF7  
                           ?_home_clock_refresh 0001                           ??_pin_input_validator 0011  
                               ??_button_number 0024                                 _menu_selector_0 E5E0  
                               _menu_selector_1 E622                                 _menu_selector_2 E664  
                               _menu_selector_3 E6A6                                __CFG_IOL1WAY$OFF 000000  
                     RtccWriteDate@tempDayMonth 000A                     __end_of_reset_home_callback E1F2  
                           __CFG_MSSP7B_EN$MSK7 000000                                ?_button_asterisk 0001  
                              Delay100TCYx@unit 0001                            ??_home_clock_refresh 0024  
                                __end_of___wmul E33E                                   __pidataCOMRAM E1FC  
                     RtccWriteDate@tempHourWDay 000C                               ??_lcd_send_nibble 0001  
                          __size_of_Delay1KTCYx 0012                                __CFG_DSWDTEN$OFF 000000  
                                __end_of_strcat E8CE                                  __end_of_strcmp EA50  
                                __end_of_strcpy E7F6                             start_initialization E76C  
                               ??_menu_selector 0011                            __end_of_RtccReadDate F390  
                          __end_of_RtccReadTime EF16                            RtccWriteTime@wasAlrm 0006  
                  ?_activity_submenu_siren_tone 0001                            RtccWriteTime@wasWrEn 0007  
          __size_of_activity_submenu_activation 0066                          __size_of_RtccWriteDate 0146  
                               RtccWriteDate@di 0003                          __size_of_RtccWriteTime 010C  
                             __size_of_Read_RTC 00F6                                   _activity_home E33E  
                                 _activity_menu F1FC                             __size_of_lcd_comand 000E  
                           __size_of_lcd_gotoxy 0024                                        ??___wmul 0005  
                             __size_of_RtccWrOn 0012                                 RtccWriteTime@di 0003  
                              __CFG_LPT1OSC$OFF 000000                     __end_of_home_config_refresh F68E  
                                      ??_strcat 0005                                        ??_strcmp 0005  
                                      ??_strcpy 0005                    __end_of_activity_submenu_pin ED76  
                                   _ALRMCFGbits 000F91                         __end_of_LCD_INIT_STRING FEFB  
                                 ??_button_hash 0011                                     __pbssCOMRAM 0029  
                                     _Write_RTC FB2C                                    _isdigit$2259 0002  
                       __end_of_menu_selector_0 E622                         __end_of_menu_selector_1 E664  
                       __end_of_menu_selector_2 E6A6                         __end_of_menu_selector_3 E6E8  
                             __size_of_date_set 0098          __end_of_activity_submenu_date_and_time ED10  
       __size_of_activity_submenu_date_and_time 0066                  _activity_submenu_date_and_time ECAA  
                               Delay1KTCYx@unit 0001                               __size_of_lcd_init 0080  
                                   sprintf@flag 001D                               __size_of_lcd_putc 004C  
                                   sprintf@prec 0020                             _cursor_displacement EA50  
                                     __pnvBANK0 00A4                                  ?_activity_home 0001  
                                ?_activity_menu 0001                               __size_of_button_A 0040  
                             __size_of_button_B 0070                               __size_of_button_C 001C  
                             __size_of_button_D 000A                                ___lwdiv@dividend 0001  
                                 ?_Delay100TCYx 0001                  ?_button_B_submenu_siren_config 0001  
                                 __pmediumconst FEEC                                        ?___awdiv 0001  
                                      ?___lwdiv 0001                                        ?___lwmod 0008  
                             __size_of_time_set 0098                  ?_button_B_submenu_siren_volume 0001  
                       RtccWriteTime@tempMinSec 0008                        _activity_submenu_pin_set E9B4  
                                     _lcd_putrs EB94                                       _lcd_write E260  
                              _submenu_selected 0043                                _submenu_selector E3BE  
                          ?_cursor_displacement 0001                                   _RtccWriteDate F890  
                                 _RtccWriteTime F784                    __size_of_check_home_callback 0022  
                                      ?_isdigit 0001                            __CFG_RTCOSC$T1OSCREF 000000  
                                      ?_pin_set 0001                        __end_of_keyboard_control FB2C  
                                    ?_Write_RTC 0001                                ___lwdiv@quotient 0005  
                ??_activity_submenu_time_config 0024                                        ?_sprintf 000D  
                                __size_of_setup 0084                             __end_of_button_hash E5A0  
                              _RtccAlrmTimeDate 0060                                  ___wmul@product 0005  
                                      _LATAbits 000F89                                        _LATBbits 000F8A  
                                     _pin_input 009F                                       _pin_reset E24A  
                                      _PIE3bits 000FA3                                       _segundo_d 005D  
                                ??_Delay100TCYx 0001                              _home_state_refresh EA9E  
                                     _segundo_u 005E                                __CFG_WDTPS$32768 000000  
                            RtccWriteDate@wasOn 0005                             ?_home_state_refresh 0001  
                            _Rtcc_read_TimeDate 0070                    __size_of_home_volume_refresh 0052  
          __size_of_activity_submenu_siren_tone 0066                                  ?_RtccWriteDate 0001  
                         ??_cursor_displacement 0008                                      ?_lcd_putrs 0009  
                                    ?_lcd_write 000B                               ___wmul@multiplier 0001  
                                ?_RtccWriteTime 0001                              _submenu_selector_0 E6E8  
                            _submenu_selector_1 E72A                    ?_button_B_submenu_activation 0001  
                                     lcd_init@i 0005                           __size_of_RtccReadDate 008E  
 __end_of_button_B_submenu_date_and_time_config E41E  __size_of_button_B_submenu_date_and_time_config 0030  
       ??_button_B_submenu_date_and_time_config 0024          ?_button_B_submenu_date_and_time_config 0001  
         _button_B_submenu_date_and_time_config E3EE                                    ??_lcd_comand 0005  
                                     lcd_putc@c 0008                           __size_of_RtccReadTime 006E  
          __end_of_activity_submenu_date_config F17A           __size_of_activity_submenu_date_config 0082  
                  _activity_submenu_date_config F0F8                                    ??_lcd_gotoxy 0006  
                           ?_submenu_selector_0 0001                             ?_submenu_selector_1 0001  
                              ?_menu_selector_0 0001                                ?_menu_selector_1 0001  
                              ?_menu_selector_2 0001                                ?_menu_selector_3 0001  
                                     copy_data0 E79A                            ??_home_state_refresh 0024  
                                      _Read_RTC F68E                                 ??_activity_home 0011  
                               ??_activity_menu 0011                                      ?_pin_reset 0001  
                          _activity_submenu_pin ED10                                 _lcd_send_nibble EF86  
                                      __Hrparam 0000                                        _RtccDate 0046  
                                      __Lrparam 0000                                        _RtccTime 004A  
                                      _RtccWrOn E238                            ??_submenu_selector_0 0011  
                          ??_submenu_selector_1 0011                              __end_of_lcd_comand E214  
                            __end_of_lcd_gotoxy E316                                    _RtccReadDate F302  
                              __size_of___awdiv 0096                                    _RtccReadTime EEA8  
                              __size_of___lwdiv 005C                                __size_of___lwmod 004C  
                                  _RtccTimeDate 0068                              _config_widget_time 0031  
                                    sprintf@val 001E                           __end_of_button_B_menu E886  
                 ??_button_B_submenu_activation 0011                                      strcat@from 0003  
                                   _button_hash E562                                   ?_activity_pin 0001  
                                      _activity 0029                                        _date_set F4B8  
                   __end_of_pin_input_validator E392                                __size_of_isdigit 0022  
                               ___lwdiv@divisor 0003                                     ??_Write_RTC 000E  
                              __size_of_pin_set 001A                                 ___lwdiv@counter 0007  
                                      __ptext10 F890                                        __ptext11 E238  
                                      __ptext20 F1FC                                        __ptext12 EA50  
                                      __ptext21 EF16                                        __ptext13 E562  
                                      __ptext30 E3EE                                        __ptext22 E528  
                                      __ptext14 E278                                        __ptext31 F17A  
                                      __ptext23 E4EE                                        __ptext15 E368  
                                      __ptext40 E3BE                                        __ptext32 F0F8  
                                      __ptext24 E41E                                        __ptext16 EA02  
                                      __ptext41 E72A                                        __ptext33 E4B4  
                                      __ptext25 EE42                                        __ptext17 E1E2  
                                      __ptext50 E206                                        __ptext42 E6E8  
                                      __ptext34 E83E                                        __ptext26 EDDC  
                                      __ptext18 E1F2                                        __ptext51 F5E8  
                                      __ptext43 E7F6                                        __ptext35 ED76  
                                      __ptext27 E480                                        __ptext19 E292  
                                      __ptext60 EBE8                                        __ptext52 EB42  
                                      __ptext44 E6A6                                        __ptext36 ED10  
                                      __ptext28 E24A                                        __ptext61 E2AE  
                                      __ptext53 EAF0                                        __ptext45 E664  
                                      __ptext37 ECAA                                        __ptext29 E9B4  
                                      __ptext70 EF86                                        __ptext62 E1E8  
                                      __ptext54 EA9E                                        __ptext46 E622  
                                      __ptext38 EC44                                        __ptext71 E226  
                                      __ptext63 E33E                                        __ptext55 F390  
                                      __ptext47 E5E0                                        __ptext39 E5A0  
                                      __ptext72 E214                                        __ptext64 E260  
                                      __ptext56 FC88                                        __ptext48 E966  
                                      __ptext73 F68E                                        __ptext65 EB94  
                                      __ptext57 E2D0                                        __ptext49 E7B0  
                                      __ptext74 EEA8                                        __ptext66 E8CE  
                                      __ptext58 E316                                        __ptext75 F302  
                                      __ptext67 E2F2                                        __ptext59 E91A  
                                      __ptext68 F078                                        __ptext69 E44E  
                 ?_activity_submenu_date_config 0001                                        _lcd_init F078  
                                      _lcd_putc E8CE                                __size_of_sprintf 0264  
                                    strcpy@from 0003                          __size_of_lcd_send_byte 0032  
                                      _button_A E5A0                                        _button_B EF16  
                                      _button_C E292                                        _button_D E1F2  
                                 __size_of_main 002C                           __end_of_button_number F078  
                         ?_activity_submenu_pin 0001                                        _minuto_d 005C  
                                      _minuto_u 00A9                               _home_tone_refresh EAF0  
                                      _time_set F550                              ?_home_tone_refresh 0001  
                  ?_button_B_submenu_pin_config 0001                                   ??_Delay1KTCYx 0001  
                               ??_RtccWriteDate 0004                     __size_of_home_clock_refresh 0092  
                               ??_RtccWriteTime 0004             __end_of_activity_submenu_activation ECAA  
                   _activity_submenu_activation EC44                    __size_of_reset_home_callback 000A  
                                   ??_lcd_putrs 000B                                     ??_lcd_write 0011  
                           ??_home_tone_refresh 0024                        __size_of_button_asterisk 0006  
                                ??_activity_pin 0011                                     _OSCTUNEbits 000F9B  
                                    _INTCONbits 000FF2                              RtccWriteTime@wasOn 0005  
                          __end_of_Delay100TCYx E238                   ??_activity_submenu_activation 0011  
                                      isdigit@c 0003                           __end_of_menu_selector E83E  
                                     sprintf@ap 001B                         __end_of_lcd_send_nibble EFFC  
                                     sprintf@sp 000D                                ___lwmod@dividend 0008  
                  ?_button_B_submenu_siren_tone 0001                       __end_of_home_tone_refresh EB42  
          __size_of_button_B_submenu_activation 003A                        __end_of_submenu_selector E3EE  
                                   ??_pin_reset 0007                             _check_home_callback E2AE  
                    ??_activity_submenu_pin_set 0011                                      _OSCCONbits 000FD3  
                                 _config_widget 002F                           RtccWriteDate@tempYear 0007  
                      ??_activity_submenu_siren 0011                                   _lcd_send_byte E44E  
                 ??_button_B_submenu_pin_config 0011                                      _RTCCFGbits 000F3F  
                                      sprintf@c 0023                                        sprintf@f 000F  
                                      strcat@cp 0005                                        strcat@to 0001  
                          ?_check_home_callback 0001                                        strcmp@s1 0001  
                                      strcmp@s2 0003                                 ___lwmod@divisor 000A  
                                      strcpy@cp 0005                                        strcpy@to 0001  
                           __end_of_Delay1KTCYx E226                                 ___lwmod@counter 000C  
               ??_button_B_submenu_siren_config 0011                    __size_of_home_config_refresh 00A6  
                          RtccWriteDate@wasAlrm 0006                            RtccWriteDate@wasWrEn 0009  
                             ?_keyboard_control 0001                 ??_button_B_submenu_siren_volume 0011  
                            ??_keyboard_control 0028                             _home_volume_refresh EB42  
                        ??_activity_submenu_pin 0011                   ??_button_B_submenu_siren_tone 0011  
                         lcd_send_nibble@nibble 0002  
