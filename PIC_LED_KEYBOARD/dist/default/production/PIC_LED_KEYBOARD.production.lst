

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Sep 18 17:51:30 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           	psect	idataCOMRAM
    95  00E202                     __pidataCOMRAM:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _anio
    99  00E202  0010               	dw	16
   100                           
   101                           ;initializer for _dia
   102  00E204  0006               	dw	6
   103                           
   104                           ;initializer for _diasem
   105  00E206  0002               	dw	2
   106                           
   107                           ;initializer for _hora
   108  00E208  0012               	dw	18
   109                           
   110                           ;initializer for _mes
   111  00E20A  0009               	dw	9
   112                           
   113                           	psect	mediumconst
   114  00FEF2                     __pmediumconst:
   115                           	opt stack 0
   116  00FEF2  00                 	db	0
   117  00FEF3                     _dpowers:
   118                           	opt stack 0
   119  00FEF3  0001               	dw	1
   120  00FEF5  000A               	dw	10
   121  00FEF7  0064               	dw	100
   122  00FEF9  03E8               	dw	1000
   123  00FEFB  2710               	dw	10000
   124  00FEFD                     __end_of_dpowers:
   125                           	opt stack 0
   126  00FEFD                     _LCD_INIT_STRING:
   127                           	opt stack 0
   128  00FEFD  28                 	db	40
   129  00FEFE  0C                 	db	12
   130  00FEFF  01                 	db	1
   131  00FF00  06                 	db	6
   132  00FF01                     __end_of_LCD_INIT_STRING:
   133                           	opt stack 0
   134  00FF01                     STR_9:
   135                           
   136                           ; BSR set to: 15
   137  00FF01  49                 	db	73	;'I'
   138  00FF02  6E                 	db	110	;'n'
   139  00FF03  67                 	db	103	;'g'
   140  00FF04  72                 	db	114	;'r'
   141  00FF05  65                 	db	101	;'e'
   142  00FF06  73                 	db	115	;'s'
   143  00FF07  65                 	db	101	;'e'
   144  00FF08  20                 	db	32
   145  00FF09  6C                 	db	108	;'l'
   146  00FF0A  61                 	db	97	;'a'
   147  00FF0B  20                 	db	32
   148  00FF0C  66                 	db	102	;'f'
   149  00FF0D  65                 	db	101	;'e'
   150  00FF0E  63                 	db	99	;'c'
   151  00FF0F  68                 	db	104	;'h'
   152  00FF10  61                 	db	97	;'a'
   153  00FF11  00                 	db	0
   154  00FF12                     STR_36:
   155                           
   156                           ; BSR set to: 15
   157  00FF12  49                 	db	73	;'I'
   158  00FF13  6E                 	db	110	;'n'
   159  00FF14  67                 	db	103	;'g'
   160  00FF15  72                 	db	114	;'r'
   161  00FF16  65                 	db	101	;'e'
   162  00FF17  73                 	db	115	;'s'
   163  00FF18  65                 	db	101	;'e'
   164  00FF19  20                 	db	32
   165  00FF1A  73                 	db	115	;'s'
   166  00FF1B  75                 	db	117	;'u'
   167  00FF1C  20                 	db	32
   168  00FF1D  50                 	db	80	;'P'
   169  00FF1E  49                 	db	73	;'I'
   170  00FF1F  4E                 	db	78	;'N'
   171  00FF20  3A                 	db	58	;':'
   172  00FF21  00                 	db	0
   173  00FF22                     STR_11:
   174                           
   175                           ; BSR set to: 15
   176  00FF22  49                 	db	73	;'I'
   177  00FF23  6E                 	db	110	;'n'
   178  00FF24  67                 	db	103	;'g'
   179  00FF25  72                 	db	114	;'r'
   180  00FF26  65                 	db	101	;'e'
   181  00FF27  73                 	db	115	;'s'
   182  00FF28  65                 	db	101	;'e'
   183  00FF29  20                 	db	32
   184  00FF2A  6C                 	db	108	;'l'
   185  00FF2B  61                 	db	97	;'a'
   186  00FF2C  20                 	db	32
   187  00FF2D  68                 	db	104	;'h'
   188  00FF2E  6F                 	db	111	;'o'
   189  00FF2F  72                 	db	114	;'r'
   190  00FF30  61                 	db	97	;'a'
   191  00FF31  00                 	db	0
   192  00FF32                     STR_10:
   193                           
   194                           ; BSR set to: 15
   195  00FF32  25                 	db	37
   196  00FF33  30                 	db	48	;'0'
   197  00FF34  32                 	db	50	;'2'
   198  00FF35  75                 	db	117	;'u'
   199  00FF36  2F                 	db	47
   200  00FF37  25                 	db	37
   201  00FF38  30                 	db	48	;'0'
   202  00FF39  32                 	db	50	;'2'
   203  00FF3A  75                 	db	117	;'u'
   204  00FF3B  2F                 	db	47
   205  00FF3C  25                 	db	37
   206  00FF3D  30                 	db	48	;'0'
   207  00FF3E  32                 	db	50	;'2'
   208  00FF3F  75                 	db	117	;'u'
   209  00FF40  00                 	db	0
   210  00FF41                     STR_12:
   211                           
   212                           ; BSR set to: 15
   213  00FF41  25                 	db	37
   214  00FF42  30                 	db	48	;'0'
   215  00FF43  32                 	db	50	;'2'
   216  00FF44  75                 	db	117	;'u'
   217  00FF45  3A                 	db	58	;':'
   218  00FF46  25                 	db	37
   219  00FF47  30                 	db	48	;'0'
   220  00FF48  32                 	db	50	;'2'
   221  00FF49  75                 	db	117	;'u'
   222  00FF4A  3A                 	db	58	;':'
   223  00FF4B  25                 	db	37
   224  00FF4C  30                 	db	48	;'0'
   225  00FF4D  32                 	db	50	;'2'
   226  00FF4E  75                 	db	117	;'u'
   227  00FF4F  00                 	db	0
   228  00FF50                     STR_41:
   229                           
   230                           ; BSR set to: 15
   231  00FF50  4E                 	db	78	;'N'
   232  00FF51  75                 	db	117	;'u'
   233  00FF52  65                 	db	101	;'e'
   234  00FF53  76                 	db	118	;'v'
   235  00FF54  6F                 	db	111	;'o'
   236  00FF55  20                 	db	32
   237  00FF56  50                 	db	80	;'P'
   238  00FF57  49                 	db	73	;'I'
   239  00FF58  4E                 	db	78	;'N'
   240  00FF59  3A                 	db	58	;':'
   241  00FF5A  00                 	db	0
   242  00FF5B                     STR_47:
   243                           
   244                           ; BSR set to: 15
   245  00FF5B  56                 	db	86	;'V'
   246  00FF5C  6F                 	db	111	;'o'
   247  00FF5D  6C                 	db	108	;'l'
   248  00FF5E  75                 	db	117	;'u'
   249  00FF5F  6D                 	db	109	;'m'
   250  00FF60  65                 	db	101	;'e'
   251  00FF61  6E                 	db	110	;'n'
   252  00FF62  00                 	db	0
   253  00FF63                     STR_38:
   254                           
   255                           ; BSR set to: 15
   256  00FF63  43                 	db	67	;'C'
   257  00FF64  61                 	db	97	;'a'
   258  00FF65  6D                 	db	109	;'m'
   259  00FF66  62                 	db	98	;'b'
   260  00FF67  69                 	db	105	;'i'
   261  00FF68  61                 	db	97	;'a'
   262  00FF69  72                 	db	114	;'r'
   263  00FF6A  00                 	db	0
   264  00FF6B                     STR_2:
   265                           
   266                           ; BSR set to: 15
   267  00FF6B  41                 	db	65	;'A'
   268  00FF6C  63                 	db	99	;'c'
   269  00FF6D  74                 	db	116	;'t'
   270  00FF6E  69                 	db	105	;'i'
   271  00FF6F  76                 	db	118	;'v'
   272  00FF70  61                 	db	97	;'a'
   273  00FF71  72                 	db	114	;'r'
   274  00FF72  00                 	db	0
   275  00FF73                     STR_53:
   276                           
   277                           ; BSR set to: 15
   278  00FF73  54                 	db	84	;'T'
   279  00FF74  6F                 	db	111	;'o'
   280  00FF75  6E                 	db	110	;'n'
   281  00FF76  6F                 	db	111	;'o'
   282  00FF77  20                 	db	32
   283  00FF78  31                 	db	49	;'1'
   284  00FF79  00                 	db	0
   285  00FF7A                     STR_54:
   286                           
   287                           ; BSR set to: 15
   288  00FF7A  54                 	db	84	;'T'
   289  00FF7B  6F                 	db	111	;'o'
   290  00FF7C  6E                 	db	110	;'n'
   291  00FF7D  6F                 	db	111	;'o'
   292  00FF7E  20                 	db	32
   293  00FF7F  32                 	db	50	;'2'
   294  00FF80  00                 	db	0
   295  00FF81                     STR_19:
   296                           
   297                           ; BSR set to: 15
   298  00FF81  54                 	db	84	;'T'
   299  00FF82  4F                 	db	79	;'O'
   300  00FF83  4E                 	db	78	;'N'
   301  00FF84  4F                 	db	79	;'O'
   302  00FF85  3A                 	db	58	;':'
   303  00FF86  31                 	db	49	;'1'
   304  00FF87  00                 	db	0
   305  00FF88                     STR_20:
   306                           
   307                           ; BSR set to: 15
   308  00FF88  54                 	db	84	;'T'
   309  00FF89  4F                 	db	79	;'O'
   310  00FF8A  4E                 	db	78	;'N'
   311  00FF8B  4F                 	db	79	;'O'
   312  00FF8C  3A                 	db	58	;':'
   313  00FF8D  32                 	db	50	;'2'
   314  00FF8E  00                 	db	0
   315  00FF8F                     STR_17:
   316                           
   317                           ; BSR set to: 15
   318  00FF8F  56                 	db	86	;'V'
   319  00FF90  4F                 	db	79	;'O'
   320  00FF91  4C                 	db	76	;'L'
   321  00FF92  3A                 	db	58	;':'
   322  00FF93  42                 	db	66	;'B'
   323  00FF94  41                 	db	65	;'A'
   324  00FF95  00                 	db	0
   325  00FF96                     STR_15:
   326                           
   327                           ; BSR set to: 15
   328  00FF96  41                 	db	65	;'A'
   329  00FF97  43                 	db	67	;'C'
   330  00FF98  54                 	db	84	;'T'
   331  00FF99  3A                 	db	58	;':'
   332  00FF9A  53                 	db	83	;'S'
   333  00FF9B  49                 	db	73	;'I'
   334  00FF9C  00                 	db	0
   335  00FF9D                     STR_18:
   336                           
   337                           ; BSR set to: 15
   338  00FF9D  56                 	db	86	;'V'
   339  00FF9E  4F                 	db	79	;'O'
   340  00FF9F  4C                 	db	76	;'L'
   341  00FFA0  3A                 	db	58	;':'
   342  00FFA1  41                 	db	65	;'A'
   343  00FFA2  4C                 	db	76	;'L'
   344  00FFA3  00                 	db	0
   345  00FFA4                     STR_16:
   346                           
   347                           ; BSR set to: 15
   348  00FFA4  41                 	db	65	;'A'
   349  00FFA5  43                 	db	67	;'C'
   350  00FFA6  54                 	db	84	;'T'
   351  00FFA7  3A                 	db	58	;':'
   352  00FFA8  4E                 	db	78	;'N'
   353  00FFA9  4F                 	db	79	;'O'
   354  00FFAA  00                 	db	0
   355  00FFAB                     STR_5:
   356                           
   357                           ; BSR set to: 15
   358  00FFAB  53                 	db	83	;'S'
   359  00FFAC  69                 	db	105	;'i'
   360  00FFAD  72                 	db	114	;'r'
   361  00FFAE  65                 	db	101	;'e'
   362  00FFAF  6E                 	db	110	;'n'
   363  00FFB0  61                 	db	97	;'a'
   364  00FFB1  00                 	db	0
   365  00FFB2                     STR_39:
   366                           
   367                           ; BSR set to: 15
   368  00FFB2  52                 	db	82	;'R'
   369  00FFB3  65                 	db	101	;'e'
   370  00FFB4  73                 	db	115	;'s'
   371  00FFB5  65                 	db	101	;'e'
   372  00FFB6  74                 	db	116	;'t'
   373  00FFB7  00                 	db	0
   374  00FFB8                     STR_7:
   375                           
   376                           ; BSR set to: 15
   377  00FFB8  46                 	db	70	;'F'
   378  00FFB9  65                 	db	101	;'e'
   379  00FFBA  63                 	db	99	;'c'
   380  00FFBB  68                 	db	104	;'h'
   381  00FFBC  61                 	db	97	;'a'
   382  00FFBD  00                 	db	0
   383  00FFBE                     STR_3:
   384                           
   385                           ; BSR set to: 15
   386  00FFBE  52                 	db	82	;'R'
   387  00FFBF  65                 	db	101	;'e'
   388  00FFC0  6C                 	db	108	;'l'
   389  00FFC1  6F                 	db	111	;'o'
   390  00FFC2  6A                 	db	106	;'j'
   391  00FFC3  00                 	db	0
   392  00FFC4                     STR_50:
   393                           
   394                           ; BSR set to: 15
   395  00FFC4  42                 	db	66	;'B'
   396  00FFC5  61                 	db	97	;'a'
   397  00FFC6  6A                 	db	106	;'j'
   398  00FFC7  6F                 	db	111	;'o'
   399  00FFC8  00                 	db	0
   400  00FFC9                     STR_48:
   401                           
   402                           ; BSR set to: 15
   403  00FFC9  54                 	db	84	;'T'
   404  00FFCA  6F                 	db	111	;'o'
   405  00FFCB  6E                 	db	110	;'n'
   406  00FFCC  6F                 	db	111	;'o'
   407  00FFCD  00                 	db	0
   408  00FFCE                     STR_51:
   409                           
   410                           ; BSR set to: 15
   411  00FFCE  41                 	db	65	;'A'
   412  00FFCF  6C                 	db	108	;'l'
   413  00FFD0  74                 	db	116	;'t'
   414  00FFD1  6F                 	db	111	;'o'
   415  00FFD2  00                 	db	0
   416  00FFD3                     STR_42:
   417                           
   418                           ; BSR set to: 15
   419  00FFD3  31                 	db	49	;'1'
   420  00FFD4  32                 	db	50	;'2'
   421  00FFD5  33                 	db	51	;'3'
   422  00FFD6  34                 	db	52	;'4'
   423  00FFD7  00                 	db	0
   424  00FFD8                     STR_8:
   425                           
   426                           ; BSR set to: 15
   427  00FFD8  48                 	db	72	;'H'
   428  00FFD9  6F                 	db	111	;'o'
   429  00FFDA  72                 	db	114	;'r'
   430  00FFDB  61                 	db	97	;'a'
   431  00FFDC  00                 	db	0
   432  00FFDD                     STR_21:
   433                           
   434                           ; BSR set to: 15
   435  00FFDD  25                 	db	37
   436  00FFDE  30                 	db	48	;'0'
   437  00FFDF  31                 	db	49	;'1'
   438  00FFE0  75                 	db	117	;'u'
   439  00FFE1  00                 	db	0
   440  00FFE2                     STR_1:
   441                           
   442                           ; BSR set to: 15
   443  00FFE2  58                 	db	88	;'X'
   444  00FFE3  32                 	db	50	;'2'
   445  00FFE4  38                 	db	56	;'8'
   446  00FFE5  00                 	db	0
   447  00FFE6                     STR_4:
   448                           
   449                           ; BSR set to: 15
   450  00FFE6  50                 	db	80	;'P'
   451  00FFE7  69                 	db	105	;'i'
   452  00FFE8  6E                 	db	110	;'n'
   453  00FFE9  00                 	db	0
   454  00FFEA                     STR_44:
   455                           
   456                           ; BSR set to: 15
   457  00FFEA  53                 	db	83	;'S'
   458  00FFEB  69                 	db	105	;'i'
   459  00FFEC  00                 	db	0
   460  00FFED                     STR_45:
   461                           
   462                           ; BSR set to: 15
   463  00FFED  4E                 	db	78	;'N'
   464  00FFEE  6F                 	db	111	;'o'
   465  00FFEF  00                 	db	0
   466  00FFF0                     STR_24:
   467                           
   468                           ; BSR set to: 15
   469  00FFF0  20                 	db	32
   470  00FFF1  00                 	db	0
   471  00FFF2                     STR_23:
   472                           
   473                           ; BSR set to: 15
   474  00FFF2  3E                 	db	62	;'>'
   475  00FFF3  00                 	db	0
   476  00FFF4                     STR_22:
   477                           
   478                           ; BSR set to: 15
   479  00FFF4  2A                 	db	42
   480  00FFF5  00                 	db	0
   481  0000                     
   482                           ; #config settings
   483  00FFF6  00                 	db	0	; dummy byte at the end
   484  0000                     
   485                           	psect	nvCOMRAM
   486  000058                     __pnvCOMRAM:
   487                           	opt stack 0
   488  000058                     _anio_d:
   489                           	opt stack 0
   490  000058                     	ds	1
   491  000059                     _fecha_d:
   492                           	opt stack 0
   493  000059                     	ds	1
   494  00005A                     _hora_d:
   495                           	opt stack 0
   496  00005A                     	ds	1
   497  00005B                     _mes_d:
   498                           	opt stack 0
   499  00005B                     	ds	1
   500  00005C                     _minuto_d:
   501                           	opt stack 0
   502  00005C                     	ds	1
   503  00005D                     _segundo_d:
   504                           	opt stack 0
   505  00005D                     	ds	1
   506  00005E                     _segundo_u:
   507                           	opt stack 0
   508  00005E                     	ds	1
   509                           
   510                           	psect	nvBANK0
   511  0000A4                     __pnvBANK0:
   512                           	opt stack 0
   513  0000A4                     _anio_u:
   514                           	opt stack 0
   515  0000A4                     	ds	1
   516  0000A5                     _dia_semana:
   517                           	opt stack 0
   518  0000A5                     	ds	1
   519  0000A6                     _fecha_u:
   520                           	opt stack 0
   521  0000A6                     	ds	1
   522  0000A7                     _hora_u:
   523                           	opt stack 0
   524  0000A7                     	ds	1
   525  0000A8                     _mes_u:
   526                           	opt stack 0
   527  0000A8                     	ds	1
   528  0000A9                     _minuto_u:
   529                           	opt stack 0
   530  0000A9                     	ds	1
   531  0000                     _ANCON0	set	3912
   532  0000                     _ANCON1	set	3913
   533  0000                     _RTCCFG	set	3903
   534  0000                     _RTCCFGbits	set	3903
   535  0000                     _ADCON0	set	4034
   536  0000                     _ADCON1	set	4033
   537  0000                     _ALRMCFGbits	set	3985
   538  0000                     _EECON2	set	4007
   539  0000                     _INTCONbits	set	4082
   540  0000                     _LATAbits	set	3977
   541  0000                     _LATBbits	set	3978
   542  0000                     _OSCCONbits	set	4051
   543  0000                     _OSCTUNEbits	set	3995
   544  0000                     _PIE3bits	set	4003
   545  0000                     _PORTAbits	set	3968
   546  0000                     _PORTCbits	set	3970
   547  0000                     _RTCVALH	set	3993
   548  0000                     _RTCVALL	set	3992
   549  0000                     _T1CONbits	set	4045
   550  0000                     _TRISA	set	3986
   551  0000                     _TRISB	set	3987
   552  0000                     _TRISBbits	set	3987
   553  0000                     _TRISC	set	3988
   554                           
   555                           	psect	cinit
   556  00E772                     __pcinit:
   557                           	opt stack 0
   558  00E772                     start_initialization:
   559                           	opt stack 0
   560  00E772                     __initialization:
   561                           	opt stack 0
   562                           
   563                           ; Clear objects allocated to BANK0 (68 bytes)
   564  00E772  EE00  F060         	lfsr	0,__pbssBANK0
   565  00E776  0E44               	movlw	68
   566  00E778                     clear_0:
   567  00E778  6AEE               	clrf	postinc0,c
   568  00E77A  06E8               	decf	wreg,f,c
   569  00E77C  E1FD               	bnz	clear_0
   570                           
   571                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   572  00E77E  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   573                           
   574                           ; Clear objects allocated to COMRAM (37 bytes)
   575  00E780  EE00  F029         	lfsr	0,__pbssCOMRAM
   576  00E784  0E25               	movlw	37
   577  00E786                     clear_1:
   578  00E786  6AEE               	clrf	postinc0,c
   579  00E788  06E8               	decf	wreg,f,c
   580  00E78A  E1FD               	bnz	clear_1
   581                           
   582                           ; Initialize objects allocated to COMRAM (10 bytes)
   583                           ; load TBLPTR registers with __pidataCOMRAM
   584  00E78C  0E02               	movlw	low __pidataCOMRAM
   585  00E78E  6EF6               	movwf	tblptrl,c
   586  00E790  0EE2               	movlw	high __pidataCOMRAM
   587  00E792  6EF7               	movwf	tblptrh,c
   588  00E794  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   589  00E796  6EF8               	movwf	tblptru,c
   590  00E798  EE00  F04E         	lfsr	0,__pdataCOMRAM
   591  00E79C  EE10 F00A          	lfsr	1,10
   592  00E7A0                     copy_data0:
   593  00E7A0  0009               	tblrd		*+
   594  00E7A2  CFF5 FFEE          	movff	tablat,postinc0
   595  00E7A6  50E5               	movf	postdec1,w,c
   596  00E7A8  50E1               	movf	fsr1l,w,c
   597  00E7AA  E1FA               	bnz	copy_data0
   598  00E7AC                     end_of_initialization:
   599                           	opt stack 0
   600  00E7AC                     __end_of__initialization:
   601                           	opt stack 0
   602  00E7AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   603  00E7AE  6EF8               	movwf	tblptru,c
   604  00E7B0  0100               	movlb	0
   605  00E7B2  EFCC  F071         	goto	_main	;jump to C main() function
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           postdec1	equ	0xFE5
   613                           fsr1l	equ	0xFE1
   614                           
   615                           	psect	bitbssCOMRAM
   616  0002F8                     __pbitbssCOMRAM:
   617                           	opt stack 0
   618  0002F8                     _flag:
   619                           	opt stack 0
   620  0002F8                     	ds	1
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1l	equ	0xFE1
   629                           
   630                           	psect	bssCOMRAM
   631  000029                     __pbssCOMRAM:
   632                           	opt stack 0
   633  000029                     _activity:
   634                           	opt stack 0
   635  000029                     	ds	2
   636  00002B                     _alarm_tone:
   637                           	opt stack 0
   638  00002B                     	ds	2
   639  00002D                     _alarm_volume:
   640                           	opt stack 0
   641  00002D                     	ds	2
   642  00002F                     _config_widget:
   643                           	opt stack 0
   644  00002F                     	ds	2
   645  000031                     _config_widget_time:
   646                           	opt stack 0
   647  000031                     	ds	2
   648  000033                     _cursor_horizontal_position:
   649                           	opt stack 0
   650  000033                     	ds	2
   651  000035                     _home_callback:
   652                           	opt stack 0
   653  000035                     	ds	2
   654  000037                     _home_callback_delay:
   655                           	opt stack 0
   656  000037                     	ds	2
   657  000039                     _i:
   658                           	opt stack 0
   659  000039                     	ds	2
   660  00003B                     _menu_selected:
   661                           	opt stack 0
   662  00003B                     	ds	2
   663  00003D                     _minuto:
   664                           	opt stack 0
   665  00003D                     	ds	2
   666  00003F                     _segundo:
   667                           	opt stack 0
   668  00003F                     	ds	2
   669  000041                     _state:
   670                           	opt stack 0
   671  000041                     	ds	2
   672  000043                     _submenu_selected:
   673                           	opt stack 0
   674  000043                     	ds	2
   675  000045                     _key:
   676                           	opt stack 0
   677  000045                     	ds	1
   678  000046                     _RtccDate:
   679                           	opt stack 0
   680  000046                     	ds	4
   681  00004A                     _RtccTime:
   682                           	opt stack 0
   683  00004A                     	ds	4
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           postdec1	equ	0xFE5
   691                           fsr1l	equ	0xFE1
   692                           
   693                           	psect	dataCOMRAM
   694  00004E                     __pdataCOMRAM:
   695                           	opt stack 0
   696  00004E                     _anio:
   697                           	opt stack 0
   698  00004E                     	ds	2
   699  000050                     _dia:
   700                           	opt stack 0
   701  000050                     	ds	2
   702  000052                     _diasem:
   703                           	opt stack 0
   704  000052                     	ds	2
   705  000054                     _hora:
   706                           	opt stack 0
   707  000054                     	ds	2
   708  000056                     _mes:
   709                           	opt stack 0
   710  000056                     	ds	2
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           postdec1	equ	0xFE5
   718                           fsr1l	equ	0xFE1
   719                           
   720                           	psect	bssBANK0
   721  000060                     __pbssBANK0:
   722                           	opt stack 0
   723  000060                     _RtccAlrmTimeDate:
   724                           	opt stack 0
   725  000060                     	ds	8
   726  000068                     _RtccTimeDate:
   727                           	opt stack 0
   728  000068                     	ds	8
   729  000070                     _Rtcc_read_TimeDate:
   730                           	opt stack 0
   731  000070                     	ds	8
   732  000078                     _RtccTimeVal:
   733                           	opt stack 0
   734  000078                     	ds	4
   735  00007C                     _a:
   736                           	opt stack 0
   737  00007C                     	ds	2
   738  00007E                     _b:
   739                           	opt stack 0
   740  00007E                     	ds	2
   741  000080                     _c:
   742                           	opt stack 0
   743  000080                     	ds	2
   744  000082                     _j:
   745                           	opt stack 0
   746  000082                     	ds	2
   747  000084                     _k:
   748                           	opt stack 0
   749  000084                     	ds	2
   750  000086                     _buffer1:
   751                           	opt stack 0
   752  000086                     	ds	20
   753  00009A                     _pin:
   754                           	opt stack 0
   755  00009A                     	ds	5
   756  00009F                     _pin_input:
   757                           	opt stack 0
   758  00009F                     	ds	5
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           postdec1	equ	0xFE5
   766                           fsr1l	equ	0xFE1
   767                           
   768                           	psect	cstackCOMRAM
   769  000001                     __pcstackCOMRAM:
   770                           	opt stack 0
   771  000001                     ??_isdigit:
   772  000001                     ??_lcd_send_nibble:
   773  000001                     ?_strcmp:
   774                           	opt stack 0
   775  000001                     ?___wmul:
   776                           	opt stack 0
   777  000001                     ?___awdiv:
   778                           	opt stack 0
   779  000001                     ?___lwdiv:
   780                           	opt stack 0
   781  000001                     Delay100TCYx@unit:
   782                           	opt stack 0
   783  000001                     Delay1KTCYx@unit:
   784                           	opt stack 0
   785  000001                     RtccReadDate@pDt:
   786                           	opt stack 0
   787  000001                     RtccReadTime@pTm:
   788                           	opt stack 0
   789  000001                     RtccWriteDate@pDt:
   790                           	opt stack 0
   791  000001                     RtccWriteTime@pTm:
   792                           	opt stack 0
   793  000001                     ___wmul@multiplier:
   794                           	opt stack 0
   795  000001                     ___awdiv@dividend:
   796                           	opt stack 0
   797  000001                     ___lwdiv@dividend:
   798                           	opt stack 0
   799  000001                     strcat@to:
   800                           	opt stack 0
   801  000001                     strcmp@s1:
   802                           	opt stack 0
   803  000001                     strcpy@to:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x0
   807  000001                     	ds	1
   808  000002                     lcd_send_nibble@nibble:
   809                           	opt stack 0
   810  000002                     _isdigit$2279:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x1
   814  000002                     	ds	1
   815  000003                     lcd_send_byte@n:
   816                           	opt stack 0
   817  000003                     RtccWriteDate@di:
   818                           	opt stack 0
   819  000003                     RtccWriteTime@di:
   820                           	opt stack 0
   821  000003                     isdigit@c:
   822                           	opt stack 0
   823  000003                     ___wmul@multiplicand:
   824                           	opt stack 0
   825  000003                     ___awdiv@divisor:
   826                           	opt stack 0
   827  000003                     ___lwdiv@divisor:
   828                           	opt stack 0
   829  000003                     strcat@from:
   830                           	opt stack 0
   831  000003                     strcmp@s2:
   832                           	opt stack 0
   833  000003                     strcpy@from:
   834                           	opt stack 0
   835  000003                     RtccReadDate@rTD1:
   836                           	opt stack 0
   837  000003                     RtccReadTime@rTD1:
   838                           	opt stack 0
   839                           
   840                           ; 8 bytes @ 0x2
   841  000003                     	ds	1
   842  000004                     lcd_send_byte@address:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x3
   846  000004                     	ds	1
   847  000005                     ??_strcmp:
   848  000005                     lcd_init@i:
   849                           	opt stack 0
   850  000005                     lcd_gotoxy@y:
   851                           	opt stack 0
   852  000005                     lcd_comand@d:
   853                           	opt stack 0
   854  000005                     RtccWriteDate@wasOn:
   855                           	opt stack 0
   856  000005                     RtccWriteTime@wasOn:
   857                           	opt stack 0
   858  000005                     ___awdiv@counter:
   859                           	opt stack 0
   860  000005                     ___wmul@product:
   861                           	opt stack 0
   862  000005                     ___lwdiv@quotient:
   863                           	opt stack 0
   864  000005                     strcat@cp:
   865                           	opt stack 0
   866  000005                     strcpy@cp:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x4
   870  000005                     	ds	1
   871  000006                     lcd_gotoxy@x:
   872                           	opt stack 0
   873  000006                     RtccWriteDate@wasAlrm:
   874                           	opt stack 0
   875  000006                     RtccWriteTime@wasAlrm:
   876                           	opt stack 0
   877  000006                     ___awdiv@sign:
   878                           	opt stack 0
   879  000006                     strcmp@r:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x5
   883  000006                     	ds	1
   884  000007                     lcd_gotoxy@address:
   885                           	opt stack 0
   886  000007                     RtccWriteTime@wasWrEn:
   887                           	opt stack 0
   888  000007                     ___lwdiv@counter:
   889                           	opt stack 0
   890  000007                     RtccWriteDate@tempYear:
   891                           	opt stack 0
   892  000007                     ___awdiv@quotient:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x6
   896  000007                     	ds	1
   897  000008                     ??_cursor_displacement:
   898  000008                     ?___lwmod:
   899                           	opt stack 0
   900  000008                     lcd_putc@c:
   901                           	opt stack 0
   902  000008                     RtccWriteTime@tempMinSec:
   903                           	opt stack 0
   904  000008                     ___lwmod@dividend:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x7
   908  000008                     	ds	1
   909  000009                     RtccWriteDate@wasWrEn:
   910                           	opt stack 0
   911  000009                     lcd_putrs@ptr:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x8
   915  000009                     	ds	1
   916  00000A                     RtccWriteDate@tempDayMonth:
   917                           	opt stack 0
   918  00000A                     RtccWriteTime@tempHourWDay:
   919                           	opt stack 0
   920  00000A                     ___lwmod@divisor:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x9
   924  00000A                     	ds	1
   925  00000B                     lcd_write@column:
   926                           	opt stack 0
   927  00000B                     RtccReadDate@rTD0:
   928                           	opt stack 0
   929  00000B                     RtccReadTime@rTD0:
   930                           	opt stack 0
   931                           
   932                           ; 8 bytes @ 0xA
   933  00000B                     	ds	1
   934  00000C                     ___lwmod@counter:
   935                           	opt stack 0
   936  00000C                     RtccWriteDate@tempHourWDay:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0xB
   940  00000C                     	ds	1
   941  00000D                     ?_sprintf:
   942                           	opt stack 0
   943  00000D                     lcd_write@row:
   944                           	opt stack 0
   945  00000D                     sprintf@sp:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0xC
   949  00000D                     	ds	1
   950  00000E                     ??_date_set:
   951  00000E                     ??_time_set:
   952  00000E                     
   953                           ; 0 bytes @ 0xD
   954  00000E                     	ds	1
   955  00000F                     lcd_write@string:
   956                           	opt stack 0
   957  00000F                     sprintf@f:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0xE
   961  00000F                     	ds	2
   962  000011                     ??_menu_selector:
   963  000011                     ??_submenu_selector:
   964  000011                     ??_button_B_menu:
   965  000011                     ??_button_B_submenu_activation:
   966  000011                     ??_button_B_submenu_pin_config:
   967  000011                     ??_button_B_submenu_siren_config:
   968  000011                     ??_button_B_submenu_siren_volume:
   969  000011                     ??_button_B_submenu_siren_tone:
   970  000011                     
   971                           ; 0 bytes @ 0x10
   972  000011                     	ds	2
   973  000013                     ??_button_A:
   974                           
   975                           ; 0 bytes @ 0x12
   976  000013                     	ds	4
   977  000017                     ??_sprintf:
   978                           
   979                           ; 0 bytes @ 0x16
   980  000017                     	ds	4
   981  00001B                     sprintf@ap:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x1A
   985  00001B                     	ds	2
   986  00001D                     sprintf@flag:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x1C
   990  00001D                     	ds	1
   991  00001E                     sprintf@val:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x1D
   995  00001E                     	ds	2
   996  000020                     sprintf@prec:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x1F
  1000  000020                     	ds	1
  1001  000021                     sprintf@width:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x20
  1005  000021                     	ds	2
  1006  000023                     sprintf@c:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x22
  1010  000023                     	ds	1
  1011  000024                     ??_home_config_refresh:
  1012  000024                     ??_button_B_submenu_date_and_time_config:
  1013  000024                     
  1014                           ; 0 bytes @ 0x23
  1015  000024                     	ds	2
  1016  000026                     ??_button_B:
  1017                           
  1018                           ; 0 bytes @ 0x25
  1019  000026                     	ds	2
  1020  000028                     ??_keyboard_control:
  1021                           
  1022                           ; 0 bytes @ 0x27
  1023  000028                     	ds	1
  1024  000029                     tblptru	equ	0xFF8
  1025                           tblptrh	equ	0xFF7
  1026                           tblptrl	equ	0xFF6
  1027                           tablat	equ	0xFF5
  1028                           postinc0	equ	0xFEE
  1029                           wreg	equ	0xFE8
  1030                           postdec1	equ	0xFE5
  1031                           fsr1l	equ	0xFE1
  1032                           
  1033                           ; 0 bytes @ 0x28
  1034 ;;
  1035 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1036 ;;
  1037 ;; *************** function _main *****************
  1038 ;; Defined at:
  1039 ;;		line 671 in file "main.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  2  456[None  ] int 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels required when called:   11
  1059 ;; This function calls:
  1060 ;;		_Read_RTC
  1061 ;;		_activity_home
  1062 ;;		_check_home_callback
  1063 ;;		_home_clock_refresh
  1064 ;;		_home_config_refresh
  1065 ;;		_keyboard_control
  1066 ;;		_setup
  1067 ;; This function is called by:
  1068 ;;		Startup code after reset
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text0
  1073  00E398                     __ptext0:
  1074                           	opt stack 0
  1075  00E398                     _main:
  1076                           	opt stack 20
  1077                           
  1078                           ;main.c: 673: setup();
  1079                           
  1080                           ; BSR set to: 15
  1081                           ;incstack = 0
  1082  00E398  EC42  F079         	call	_setup	;wreg free
  1083                           
  1084                           ;main.c: 674: activity_home();
  1085  00E39C  ECA2  F071         	call	_activity_home	;wreg free
  1086  00E3A0  D000               	goto	l4337
  1087  00E3A2                     l4337:
  1088                           
  1089                           ;main.c: 678: check_home_callback();
  1090  00E3A2  EC5A  F071         	call	_check_home_callback	;wreg free
  1091                           
  1092                           ;main.c: 679: Read_RTC();
  1093  00E3A6  EC4A  F07B         	call	_Read_RTC	;wreg free
  1094                           
  1095                           ;main.c: 680: keyboard_control();
  1096  00E3AA  ECEE  F07C         	call	_keyboard_control	;wreg free
  1097                           
  1098                           ;main.c: 682: if(activity == 0){
  1099  00E3AE  5029               	movf	_activity,w,c
  1100  00E3B0  102A               	iorwf	_activity+1,w,c
  1101  00E3B2  A4D8               	btfss	status,2,c
  1102  00E3B4  D7F6               	goto	l4337
  1103                           
  1104                           ;main.c: 683: home_clock_refresh();
  1105  00E3B6  ECCB  F079         	call	_home_clock_refresh	;wreg free
  1106                           
  1107                           ;main.c: 684: home_config_refresh();
  1108  00E3BA  ECF7  F07A         	call	_home_config_refresh	;wreg free
  1109  00E3BE  D7F1               	goto	l4337
  1110                           
  1111                           ;main.c: 685: }
  1112                           ;main.c: 687: }
  1113                           ;main.c: 689: return 0;
  1114                           ;	Return value of _main is never used
  1115  00E3C0  EF00  F000         	goto	start
  1116  00E3C4                     __end_of_main:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           postdec1	equ	0xFE5
  1125                           fsr1l	equ	0xFE1
  1126                           status	equ	0xFD8
  1127                           
  1128 ;; *************** function _setup *****************
  1129 ;; Defined at:
  1130 ;;		line 630 in file "main.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;		None               void
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    3
  1151 ;; This function calls:
  1152 ;;		_Write_RTC
  1153 ;;		_lcd_comand
  1154 ;;		_lcd_init
  1155 ;;		_pin_reset
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text1
  1162  00F284                     __ptext1:
  1163                           	opt stack 0
  1164  00F284                     _setup:
  1165                           	opt stack 27
  1166                           
  1167                           ;main.c: 632: OSCTUNEbits.INTSRC=1;
  1168                           
  1169                           ;incstack = 0
  1170  00F284  8E9B               	bsf	3995,7,c	;volatile
  1171                           
  1172                           ;main.c: 633: OSCTUNEbits.PLLEN=0;
  1173  00F286  9C9B               	bcf	3995,6,c	;volatile
  1174                           
  1175                           ;main.c: 634: OSCCONbits.IRCF0=1;
  1176  00F288  88D3               	bsf	4051,4,c	;volatile
  1177                           
  1178                           ;main.c: 635: OSCCONbits.IRCF1=1;
  1179  00F28A  8AD3               	bsf	4051,5,c	;volatile
  1180                           
  1181                           ;main.c: 636: OSCCONbits.IRCF2=1;
  1182  00F28C  8CD3               	bsf	4051,6,c	;volatile
  1183                           
  1184                           ;main.c: 637: OSCCONbits.SCS0=0;
  1185  00F28E  90D3               	bcf	4051,0,c	;volatile
  1186                           
  1187                           ;main.c: 638: OSCCONbits.SCS1=0;
  1188  00F290  92D3               	bcf	4051,1,c	;volatile
  1189                           
  1190                           ;main.c: 639: TRISA = 0b11110000;
  1191  00F292  0EF0               	movlw	240
  1192  00F294  6E92               	movwf	3986,c	;volatile
  1193                           
  1194                           ;main.c: 640: TRISB = 0;
  1195  00F296  0E00               	movlw	0
  1196  00F298  6E93               	movwf	3987,c	;volatile
  1197                           
  1198                           ;main.c: 641: TRISC = 0b00000111;
  1199  00F29A  0E07               	movlw	7
  1200  00F29C  6E94               	movwf	3988,c	;volatile
  1201                           
  1202                           ;main.c: 645: ANCON0=0b11111111;
  1203  00F29E  010F               	movlb	15	; () banked
  1204  00F2A0  6948               	setf	72,b	;volatile
  1205                           
  1206                           ; BSR set to: 15
  1207                           ;main.c: 647: ANCON1=0b11111111;
  1208  00F2A2  010F               	movlb	15	; () banked
  1209  00F2A4  6949               	setf	73,b	;volatile
  1210                           
  1211                           ;main.c: 648: ADCON0=0b00101101;
  1212  00F2A6  0E2D               	movlw	45
  1213  00F2A8  6EC2               	movwf	4034,c	;volatile
  1214                           
  1215                           ;main.c: 649: ADCON1=0b00010000;
  1216  00F2AA  0E10               	movlw	16
  1217  00F2AC  6EC1               	movwf	4033,c	;volatile
  1218                           
  1219                           ; BSR set to: 15
  1220                           ;main.c: 650: RTCCFGbits.RTCEN=1;
  1221  00F2AE  010F               	movlb	15	; () banked
  1222  00F2B0  8F3F               	bsf	63,7,b	;volatile
  1223                           
  1224                           ; BSR set to: 15
  1225                           ;main.c: 651: RTCCFGbits.RTCWREN=1;
  1226  00F2B2  010F               	movlb	15	; () banked
  1227  00F2B4  8B3F               	bsf	63,5,b	;volatile
  1228                           
  1229                           ; BSR set to: 15
  1230                           ;main.c: 652: T1CONbits.T1OSCEN=1;
  1231  00F2B6  86CD               	bsf	4045,3,c	;volatile
  1232                           
  1233                           ; BSR set to: 15
  1234                           ;main.c: 653: Write_RTC();
  1235  00F2B8  EC99  F07D         	call	_Write_RTC	;wreg free
  1236                           
  1237                           ;main.c: 654: lcd_init();
  1238  00F2BC  EC3F  F078         	call	_lcd_init	;wreg free
  1239                           
  1240                           ;main.c: 655: lcd_comand(0b00001100);
  1241  00F2C0  0E0C               	movlw	12
  1242  00F2C2  EC06  F071         	call	_lcd_comand
  1243                           
  1244                           ;main.c: 656: LATBbits.LATB1 = 1;;
  1245  00F2C6  828A               	bsf	3978,1,c	;volatile
  1246                           
  1247                           ;main.c: 657: LATBbits.LATB0 = 1;;
  1248  00F2C8  808A               	bsf	3978,0,c	;volatile
  1249                           
  1250                           ;main.c: 660: home_callback_delay = 50;
  1251  00F2CA  0E00               	movlw	0
  1252  00F2CC  6E38               	movwf	_home_callback_delay+1,c
  1253  00F2CE  0E32               	movlw	50
  1254  00F2D0  6E37               	movwf	_home_callback_delay,c
  1255                           
  1256                           ;main.c: 661: config_widget = 0;
  1257  00F2D2  0E00               	movlw	0
  1258  00F2D4  6E30               	movwf	_config_widget+1,c
  1259  00F2D6  0E00               	movlw	0
  1260  00F2D8  6E2F               	movwf	_config_widget,c
  1261                           
  1262                           ;main.c: 662: menu_selected = 0;
  1263  00F2DA  0E00               	movlw	0
  1264  00F2DC  6E3C               	movwf	_menu_selected+1,c
  1265  00F2DE  0E00               	movlw	0
  1266  00F2E0  6E3B               	movwf	_menu_selected,c
  1267                           
  1268                           ;main.c: 663: submenu_selected = 0;
  1269  00F2E2  0E00               	movlw	0
  1270  00F2E4  6E44               	movwf	_submenu_selected+1,c
  1271  00F2E6  0E00               	movlw	0
  1272  00F2E8  6E43               	movwf	_submenu_selected,c
  1273                           
  1274                           ;main.c: 664: cursor_horizontal_position = 1;
  1275  00F2EA  0E00               	movlw	0
  1276  00F2EC  6E34               	movwf	_cursor_horizontal_position+1,c
  1277  00F2EE  0E01               	movlw	1
  1278  00F2F0  6E33               	movwf	_cursor_horizontal_position,c
  1279                           
  1280                           ;main.c: 665: alarm_volume = 0;
  1281  00F2F2  0E00               	movlw	0
  1282  00F2F4  6E2E               	movwf	_alarm_volume+1,c
  1283  00F2F6  0E00               	movlw	0
  1284  00F2F8  6E2D               	movwf	_alarm_volume,c
  1285                           
  1286                           ;main.c: 666: alarm_tone = 0;
  1287  00F2FA  0E00               	movlw	0
  1288  00F2FC  6E2C               	movwf	_alarm_tone+1,c
  1289  00F2FE  0E00               	movlw	0
  1290  00F300  6E2B               	movwf	_alarm_tone,c
  1291                           
  1292                           ;main.c: 667: pin_reset();
  1293  00F302  EC28  F071         	call	_pin_reset	;wreg free
  1294  00F306  0012               	return		;funcret
  1295  00F308                     __end_of_setup:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           postinc0	equ	0xFEE
  1302                           wreg	equ	0xFE8
  1303                           postdec1	equ	0xFE5
  1304                           fsr1l	equ	0xFE1
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function _keyboard_control *****************
  1308 ;; Defined at:
  1309 ;;		line 592 in file "main.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;		None               void
  1316 ;; Registers used:
  1317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;Total ram usage:        1 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:   10
  1330 ;; This function calls:
  1331 ;;		_button_A
  1332 ;;		_button_B
  1333 ;;		_button_C
  1334 ;;		_button_D
  1335 ;;		_button_asterisk
  1336 ;;		_button_hash
  1337 ;;		_button_number
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text2
  1344  00F9DC                     __ptext2:
  1345                           	opt stack 0
  1346  00F9DC                     _keyboard_control:
  1347                           	opt stack 20
  1348                           
  1349                           ;main.c: 594: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1350                           
  1351                           ;incstack = 0
  1352  00F9DC  8089               	bsf	3977,0,c	;volatile
  1353  00F9DE  9289               	bcf	3977,1,c	;volatile
  1354  00F9E0  9489               	bcf	3977,2,c	;volatile
  1355  00F9E2  9689               	bcf	3977,3,c	;volatile
  1356                           
  1357                           ;main.c: 595: {
  1358                           ;main.c: 596: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  1359  00F9E4  AA80               	btfss	3968,5,c	;volatile
  1360  00F9E6  D007               	goto	l387
  1361  00F9E8  0E01               	movlw	1
  1362  00F9EA  6E45               	movwf	_key,c
  1363  00F9EC  EC01  F078         	call	_button_number	;wreg free
  1364  00F9F0  D000               	goto	l388
  1365  00F9F2                     l388:
  1366  00F9F2  BA80               	btfsc	3968,5,c	;volatile
  1367  00F9F4  D7FE               	goto	l388
  1368  00F9F6                     l387:
  1369                           
  1370                           ;main.c: 597: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  1371  00F9F6  AE80               	btfss	3968,7,c	;volatile
  1372  00F9F8  D007               	goto	l391
  1373  00F9FA  0E02               	movlw	2
  1374  00F9FC  6E45               	movwf	_key,c
  1375  00F9FE  EC01  F078         	call	_button_number	;wreg free
  1376  00FA02  D000               	goto	l392
  1377  00FA04                     l392:
  1378  00FA04  BE80               	btfsc	3968,7,c	;volatile
  1379  00FA06  D7FE               	goto	l392
  1380  00FA08                     l391:
  1381                           
  1382                           ;main.c: 598: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  1383  00FA08  AC80               	btfss	3968,6,c	;volatile
  1384  00FA0A  D007               	goto	l395
  1385  00FA0C  0E03               	movlw	3
  1386  00FA0E  6E45               	movwf	_key,c
  1387  00FA10  EC01  F078         	call	_button_number	;wreg free
  1388  00FA14  D000               	goto	l396
  1389  00FA16                     l396:
  1390  00FA16  BC80               	btfsc	3968,6,c	;volatile
  1391  00FA18  D7FE               	goto	l396
  1392  00FA1A                     l395:
  1393                           
  1394                           ;main.c: 599: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  1395  00FA1A  A482               	btfss	3970,2,c	;volatile
  1396  00FA1C  D007               	goto	l399
  1397  00FA1E  0E0B               	movlw	11
  1398  00FA20  6E45               	movwf	_key,c
  1399  00FA22  ECD3  F072         	call	_button_A	;wreg free
  1400  00FA26  D000               	goto	l400
  1401  00FA28                     l400:
  1402  00FA28  B482               	btfsc	3970,2,c	;volatile
  1403  00FA2A  D7FE               	goto	l400
  1404  00FA2C                     l399:
  1405                           
  1406                           ;main.c: 600: }
  1407                           ;main.c: 602: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1408  00FA2C  9089               	bcf	3977,0,c	;volatile
  1409  00FA2E  8289               	bsf	3977,1,c	;volatile
  1410  00FA30  9489               	bcf	3977,2,c	;volatile
  1411  00FA32  9689               	bcf	3977,3,c	;volatile
  1412                           
  1413                           ;main.c: 603: {
  1414                           ;main.c: 604: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  1415  00FA34  AA80               	btfss	3968,5,c	;volatile
  1416  00FA36  D007               	goto	l403
  1417  00FA38  0E04               	movlw	4
  1418  00FA3A  6E45               	movwf	_key,c
  1419  00FA3C  EC01  F078         	call	_button_number	;wreg free
  1420  00FA40  D000               	goto	l404
  1421  00FA42                     l404:
  1422  00FA42  BA80               	btfsc	3968,5,c	;volatile
  1423  00FA44  D7FE               	goto	l404
  1424  00FA46                     l403:
  1425                           
  1426                           ;main.c: 605: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  1427  00FA46  AE80               	btfss	3968,7,c	;volatile
  1428  00FA48  D007               	goto	l407
  1429  00FA4A  0E05               	movlw	5
  1430  00FA4C  6E45               	movwf	_key,c
  1431  00FA4E  EC01  F078         	call	_button_number	;wreg free
  1432  00FA52  D000               	goto	l408
  1433  00FA54                     l408:
  1434  00FA54  BE80               	btfsc	3968,7,c	;volatile
  1435  00FA56  D7FE               	goto	l408
  1436  00FA58                     l407:
  1437                           
  1438                           ;main.c: 606: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  1439  00FA58  AC80               	btfss	3968,6,c	;volatile
  1440  00FA5A  D007               	goto	l411
  1441  00FA5C  0E06               	movlw	6
  1442  00FA5E  6E45               	movwf	_key,c
  1443  00FA60  EC01  F078         	call	_button_number	;wreg free
  1444  00FA64  D000               	goto	l412
  1445  00FA66                     l412:
  1446  00FA66  BC80               	btfsc	3968,6,c	;volatile
  1447  00FA68  D7FE               	goto	l412
  1448  00FA6A                     l411:
  1449                           
  1450                           ;main.c: 607: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  1451  00FA6A  A482               	btfss	3970,2,c	;volatile
  1452  00FA6C  D007               	goto	l415
  1453  00FA6E  0E0C               	movlw	12
  1454  00FA70  6E45               	movwf	_key,c
  1455  00FA72  EC8E  F077         	call	_button_B	;wreg free
  1456  00FA76  D000               	goto	l416
  1457  00FA78                     l416:
  1458  00FA78  B482               	btfsc	3970,2,c	;volatile
  1459  00FA7A  D7FE               	goto	l416
  1460  00FA7C                     l415:
  1461                           
  1462                           ;main.c: 608: }
  1463                           ;main.c: 610: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  1464  00FA7C  9089               	bcf	3977,0,c	;volatile
  1465  00FA7E  9289               	bcf	3977,1,c	;volatile
  1466  00FA80  8489               	bsf	3977,2,c	;volatile
  1467  00FA82  9689               	bcf	3977,3,c	;volatile
  1468                           
  1469                           ;main.c: 611: {
  1470                           ;main.c: 612: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  1471  00FA84  AA80               	btfss	3968,5,c	;volatile
  1472  00FA86  D007               	goto	l419
  1473  00FA88  0E07               	movlw	7
  1474  00FA8A  6E45               	movwf	_key,c
  1475  00FA8C  EC01  F078         	call	_button_number	;wreg free
  1476  00FA90  D000               	goto	l420
  1477  00FA92                     l420:
  1478  00FA92  BA80               	btfsc	3968,5,c	;volatile
  1479  00FA94  D7FE               	goto	l420
  1480  00FA96                     l419:
  1481                           
  1482                           ;main.c: 613: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  1483  00FA96  AE80               	btfss	3968,7,c	;volatile
  1484  00FA98  D007               	goto	l423
  1485  00FA9A  0E08               	movlw	8
  1486  00FA9C  6E45               	movwf	_key,c
  1487  00FA9E  EC01  F078         	call	_button_number	;wreg free
  1488  00FAA2  D000               	goto	l424
  1489  00FAA4                     l424:
  1490  00FAA4  BE80               	btfsc	3968,7,c	;volatile
  1491  00FAA6  D7FE               	goto	l424
  1492  00FAA8                     l423:
  1493                           
  1494                           ;main.c: 614: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  1495  00FAA8  AC80               	btfss	3968,6,c	;volatile
  1496  00FAAA  D007               	goto	l427
  1497  00FAAC  0E09               	movlw	9
  1498  00FAAE  6E45               	movwf	_key,c
  1499  00FAB0  EC01  F078         	call	_button_number	;wreg free
  1500  00FAB4  D000               	goto	l428
  1501  00FAB6                     l428:
  1502  00FAB6  BC80               	btfsc	3968,6,c	;volatile
  1503  00FAB8  D7FE               	goto	l428
  1504  00FABA                     l427:
  1505                           
  1506                           ;main.c: 615: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  1507  00FABA  A482               	btfss	3970,2,c	;volatile
  1508  00FABC  D007               	goto	l431
  1509  00FABE  0E0D               	movlw	13
  1510  00FAC0  6E45               	movwf	_key,c
  1511  00FAC2  EC4C  F071         	call	_button_C	;wreg free
  1512  00FAC6  D000               	goto	l432
  1513  00FAC8                     l432:
  1514  00FAC8  B482               	btfsc	3970,2,c	;volatile
  1515  00FACA  D7FE               	goto	l432
  1516  00FACC                     l431:
  1517                           
  1518                           ;main.c: 616: }
  1519                           ;main.c: 618: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  1520  00FACC  9089               	bcf	3977,0,c	;volatile
  1521  00FACE  9289               	bcf	3977,1,c	;volatile
  1522  00FAD0  9489               	bcf	3977,2,c	;volatile
  1523  00FAD2  8689               	bsf	3977,3,c	;volatile
  1524                           
  1525                           ;main.c: 619: {
  1526                           ;main.c: 620: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  1527  00FAD4  AA80               	btfss	3968,5,c	;volatile
  1528  00FAD6  D007               	goto	l435
  1529  00FAD8  0E0E               	movlw	14
  1530  00FADA  6E45               	movwf	_key,c
  1531  00FADC  ECF4  F070         	call	_button_asterisk	;wreg free
  1532  00FAE0  D000               	goto	l436
  1533  00FAE2                     l436:
  1534  00FAE2  BA80               	btfsc	3968,5,c	;volatile
  1535  00FAE4  D7FE               	goto	l436
  1536  00FAE6                     l435:
  1537                           
  1538                           ;main.c: 621: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  1539  00FAE6  AE80               	btfss	3968,7,c	;volatile
  1540  00FAE8  D007               	goto	l439
  1541  00FAEA  0E00               	movlw	0
  1542  00FAEC  6E45               	movwf	_key,c
  1543  00FAEE  EC01  F078         	call	_button_number	;wreg free
  1544  00FAF2  D000               	goto	l440
  1545  00FAF4                     l440:
  1546  00FAF4  BE80               	btfsc	3968,7,c	;volatile
  1547  00FAF6  D7FE               	goto	l440
  1548  00FAF8                     l439:
  1549                           
  1550                           ;main.c: 622: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  1551  00FAF8  AC80               	btfss	3968,6,c	;volatile
  1552  00FAFA  D007               	goto	l443
  1553  00FAFC  0E0F               	movlw	15
  1554  00FAFE  6E45               	movwf	_key,c
  1555  00FB00  ECB4  F072         	call	_button_hash	;wreg free
  1556  00FB04  D000               	goto	l444
  1557  00FB06                     l444:
  1558  00FB06  BC80               	btfsc	3968,6,c	;volatile
  1559  00FB08  D7FE               	goto	l444
  1560  00FB0A                     l443:
  1561                           
  1562                           ;main.c: 623: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  1563  00FB0A  A482               	btfss	3970,2,c	;volatile
  1564  00FB0C  D009               	goto	l4289
  1565  00FB0E  0E10               	movlw	16
  1566  00FB10  6E45               	movwf	_key,c
  1567  00FB12  ECFC  F070         	call	_button_D	;wreg free
  1568  00FB16  D000               	goto	l448
  1569  00FB18                     l448:
  1570  00FB18  A482               	btfss	3970,2,c	;volatile
  1571  00FB1A  D002               	goto	l4289
  1572  00FB1C  D7FD               	goto	l448
  1573  00FB1E  D000               	goto	l4289
  1574  00FB20                     l4289:
  1575                           
  1576                           ;main.c: 624: }
  1577                           ;main.c: 626: _delay((unsigned long)((98)*(8000000/4000.0)));
  1578  00FB20  0EFF               	movlw	255
  1579  00FB22  6E28               	movwf	??_keyboard_control& (0+255),c
  1580  00FB24  0E8A               	movlw	138
  1581  00FB26                     u2717:
  1582  00FB26  2EE8               	decfsz	wreg,f,c
  1583  00FB28  D7FE               	goto	u2717
  1584  00FB2A  2E28               	decfsz	??_keyboard_control& (0+255),f,c
  1585  00FB2C  D7FC               	goto	u2717
  1586  00FB2E  D000               	nop2	
  1587  00FB30  0012               	return		;funcret
  1588  00FB32                     __end_of_keyboard_control:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           postinc0	equ	0xFEE
  1595                           wreg	equ	0xFE8
  1596                           postdec1	equ	0xFE5
  1597                           fsr1l	equ	0xFE1
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _button_number *****************
  1601 ;; Defined at:
  1602 ;;		line 570 in file "main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;		None               void
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    5
  1623 ;; This function calls:
  1624 ;;		_cursor_displacement
  1625 ;;		_date_set
  1626 ;;		_lcd_putrs
  1627 ;;		_reset_home_callback
  1628 ;;		_sprintf
  1629 ;;		_strcat
  1630 ;;		_time_set
  1631 ;; This function is called by:
  1632 ;;		_keyboard_control
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text3
  1637  00F002                     __ptext3:
  1638                           	opt stack 0
  1639  00F002                     _button_number:
  1640                           	opt stack 24
  1641                           
  1642                           ;main.c: 572: reset_home_callback();
  1643                           
  1644                           ;incstack = 0
  1645  00F002  ECF7  F070         	call	_reset_home_callback	;wreg free
  1646                           
  1647                           ;main.c: 573: sprintf(buffer1, "%01u", key);
  1648  00F006  0E86               	movlw	low _buffer1
  1649  00F008  6E0D               	movwf	sprintf@sp,c
  1650  00F00A  0E00               	movlw	high _buffer1
  1651  00F00C  6E0E               	movwf	sprintf@sp+1,c
  1652  00F00E  0EDD               	movlw	low STR_21
  1653  00F010  6E0F               	movwf	sprintf@f,c
  1654  00F012  0EFF               	movlw	high STR_21
  1655  00F014  6E10               	movwf	sprintf@f+1,c
  1656  00F016  C045  F011         	movff	_key,?_sprintf+4
  1657  00F01A  6A12               	clrf	?_sprintf+5,c
  1658  00F01C  EC47  F07E         	call	_sprintf	;wreg free
  1659                           
  1660                           ;main.c: 575: if(activity == 1 || activity == 6){
  1661  00F020  0429               	decf	_activity,w,c
  1662  00F022  102A               	iorwf	_activity+1,w,c
  1663  00F024  B4D8               	btfsc	status,2,c
  1664  00F026  D005               	goto	l4113
  1665  00F028  0E06               	movlw	6
  1666  00F02A  1829               	xorwf	_activity,w,c
  1667  00F02C  102A               	iorwf	_activity+1,w,c
  1668  00F02E  A4D8               	btfss	status,2,c
  1669  00F030  D011               	goto	l4117
  1670  00F032                     l4113:
  1671                           
  1672                           ;main.c: 576: lcd_putrs("*");
  1673  00F032  0EF4               	movlw	low STR_22
  1674  00F034  6E09               	movwf	lcd_putrs@ptr,c
  1675  00F036  0EFF               	movlw	high STR_22
  1676  00F038  6E0A               	movwf	lcd_putrs@ptr+1,c
  1677  00F03A  ECCD  F075         	call	_lcd_putrs	;wreg free
  1678                           
  1679                           ;main.c: 577: strcat(pin_input, buffer1);
  1680  00F03E  0E9F               	movlw	low _pin_input
  1681  00F040  6E01               	movwf	strcat@to,c
  1682  00F042  0E00               	movlw	high _pin_input
  1683  00F044  6E02               	movwf	strcat@to+1,c
  1684  00F046  0E86               	movlw	low _buffer1
  1685  00F048  6E03               	movwf	strcat@from,c
  1686  00F04A  0E00               	movlw	high _buffer1
  1687  00F04C  6E04               	movwf	strcat@from+1,c
  1688  00F04E  EC46  F074         	call	_strcat	;wreg free
  1689                           
  1690                           ;main.c: 578: }
  1691  00F052  0012               	return	
  1692  00F054                     l4117:
  1693                           
  1694                           ;main.c: 579: else if (activity == 10){
  1695  00F054  0E0A               	movlw	10
  1696  00F056  1829               	xorwf	_activity,w,c
  1697  00F058  102A               	iorwf	_activity+1,w,c
  1698  00F05A  A4D8               	btfss	status,2,c
  1699  00F05C  D005               	goto	l4123
  1700                           
  1701                           ;main.c: 580: date_set();
  1702  00F05E  EC5F  F07A         	call	_date_set	;wreg free
  1703                           
  1704                           ;main.c: 581: cursor_displacement();
  1705  00F062  EC2B  F075         	call	_cursor_displacement	;wreg free
  1706                           
  1707                           ;main.c: 582: }
  1708  00F066  0012               	return	
  1709  00F068                     l4123:
  1710                           
  1711                           ;main.c: 583: else if (activity == 11){
  1712  00F068  0E0B               	movlw	11
  1713  00F06A  1829               	xorwf	_activity,w,c
  1714  00F06C  102A               	iorwf	_activity+1,w,c
  1715  00F06E  A4D8               	btfss	status,2,c
  1716  00F070  0012               	return	
  1717                           
  1718                           ;main.c: 584: time_set();
  1719  00F072  ECAB  F07A         	call	_time_set	;wreg free
  1720                           
  1721                           ;main.c: 585: cursor_displacement();
  1722  00F076  EC2B  F075         	call	_cursor_displacement	;wreg free
  1723  00F07A  0012               	return	
  1724  00F07C  0012               	return		;funcret
  1725  00F07E                     __end_of_button_number:
  1726                           	opt stack 0
  1727                           tblptru	equ	0xFF8
  1728                           tblptrh	equ	0xFF7
  1729                           tblptrl	equ	0xFF6
  1730                           tablat	equ	0xFF5
  1731                           postinc0	equ	0xFEE
  1732                           wreg	equ	0xFE8
  1733                           postdec1	equ	0xFE5
  1734                           fsr1l	equ	0xFE1
  1735                           status	equ	0xFD8
  1736                           
  1737 ;; *************** function _time_set *****************
  1738 ;; Defined at:
  1739 ;;		line 218 in file "main.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;		None               void
  1746 ;; Registers used:
  1747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;Total ram usage:        2 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    3
  1760 ;; This function calls:
  1761 ;;		_Write_RTC
  1762 ;; This function is called by:
  1763 ;;		_button_number
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text4
  1768  00F556                     __ptext4:
  1769                           	opt stack 0
  1770  00F556                     _time_set:
  1771                           	opt stack 25
  1772                           
  1773                           ;main.c: 220: switch(cursor_horizontal_position){
  1774                           
  1775                           ;incstack = 0
  1776  00F556  D024               	goto	l3781
  1777  00F558                     l3767:
  1778                           
  1779                           ;main.c: 223: hora = key*10;
  1780  00F558  5045               	movf	_key,w,c
  1781  00F55A  0D0A               	mullw	10
  1782  00F55C  CFF3 F054          	movff	prodl,_hora
  1783  00F560  CFF4 F055          	movff	prodh,_hora+1
  1784                           
  1785                           ;main.c: 224: break;
  1786  00F564  D039               	goto	l3783
  1787  00F566                     l3769:
  1788                           
  1789                           ;main.c: 227: hora += key;
  1790  00F566  5045               	movf	_key,w,c
  1791  00F568  2654               	addwf	_hora,f,c
  1792  00F56A  0E00               	movlw	0
  1793  00F56C  2255               	addwfc	_hora+1,f,c
  1794                           
  1795                           ;main.c: 228: break;
  1796  00F56E  D034               	goto	l3783
  1797  00F570                     l3771:
  1798                           
  1799                           ;main.c: 231: minuto = key*10;
  1800  00F570  5045               	movf	_key,w,c
  1801  00F572  0D0A               	mullw	10
  1802  00F574  CFF3 F03D          	movff	prodl,_minuto
  1803  00F578  CFF4 F03E          	movff	prodh,_minuto+1
  1804                           
  1805                           ;main.c: 232: break;
  1806  00F57C  D02D               	goto	l3783
  1807  00F57E                     l3773:
  1808                           
  1809                           ;main.c: 235: minuto += key;
  1810  00F57E  5045               	movf	_key,w,c
  1811  00F580  263D               	addwf	_minuto,f,c
  1812  00F582  0E00               	movlw	0
  1813  00F584  223E               	addwfc	_minuto+1,f,c
  1814                           
  1815                           ;main.c: 236: break;
  1816  00F586  D028               	goto	l3783
  1817  00F588                     l3775:
  1818                           
  1819                           ;main.c: 239: segundo = key * 10;
  1820  00F588  5045               	movf	_key,w,c
  1821  00F58A  0D0A               	mullw	10
  1822  00F58C  CFF3 F03F          	movff	prodl,_segundo
  1823  00F590  CFF4 F040          	movff	prodh,_segundo+1
  1824                           
  1825                           ;main.c: 240: break;
  1826  00F594  D021               	goto	l3783
  1827  00F596                     l3777:
  1828                           
  1829                           ;main.c: 243: segundo += key;
  1830  00F596  5045               	movf	_key,w,c
  1831  00F598  263F               	addwf	_segundo,f,c
  1832  00F59A  0E00               	movlw	0
  1833  00F59C  2240               	addwfc	_segundo+1,f,c
  1834                           
  1835                           ;main.c: 246: }
  1836                           
  1837                           ;main.c: 244: break;
  1838  00F59E  D01C               	goto	l3783
  1839  00F5A0                     l3781:
  1840  00F5A0  C033  F00E         	movff	_cursor_horizontal_position,??_time_set
  1841  00F5A4  C034  F00F         	movff	_cursor_horizontal_position+1,??_time_set+1
  1842                           
  1843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1844                           ; Switch size 1, requested type "space"
  1845                           ; Number of cases is 1, Range of values is 0 to 0
  1846                           ; switch strategies available:
  1847                           ; Name         Instructions Cycles
  1848                           ; simple_byte            4     3 (average)
  1849                           ;	Chosen strategy is simple_byte
  1850  00F5A8  500F               	movf	??_time_set+1,w,c
  1851  00F5AA  0A00               	xorlw	0	; case 0
  1852  00F5AC  A4D8               	btfss	status,2,c
  1853  00F5AE  D014               	goto	l3783
  1854                           
  1855                           ; Switch size 1, requested type "space"
  1856                           ; Number of cases is 6, Range of values is 1 to 8
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte           19    10 (average)
  1860                           ;	Chosen strategy is simple_byte
  1861  00F5B0  500E               	movf	??_time_set,w,c
  1862  00F5B2  0A01               	xorlw	1	; case 1
  1863  00F5B4  B4D8               	btfsc	status,2,c
  1864  00F5B6  D7D0               	goto	l3767
  1865  00F5B8  0A03               	xorlw	3	; case 2
  1866  00F5BA  B4D8               	btfsc	status,2,c
  1867  00F5BC  D7D4               	goto	l3769
  1868  00F5BE  0A06               	xorlw	6	; case 4
  1869  00F5C0  B4D8               	btfsc	status,2,c
  1870  00F5C2  D7D6               	goto	l3771
  1871  00F5C4  0A01               	xorlw	1	; case 5
  1872  00F5C6  B4D8               	btfsc	status,2,c
  1873  00F5C8  D7DA               	goto	l3773
  1874  00F5CA  0A02               	xorlw	2	; case 7
  1875  00F5CC  B4D8               	btfsc	status,2,c
  1876  00F5CE  D7DC               	goto	l3775
  1877  00F5D0  0A0F               	xorlw	15	; case 8
  1878  00F5D2  B4D8               	btfsc	status,2,c
  1879  00F5D4  D7E0               	goto	l3777
  1880  00F5D6  D000               	goto	l3783
  1881  00F5D8                     l3783:
  1882                           
  1883                           ;main.c: 248: Write_RTC();
  1884  00F5D8  EC99  F07D         	call	_Write_RTC	;wreg free
  1885                           
  1886                           ;main.c: 249: _delay((unsigned long)((98)*(8000000/4000.0)));
  1887  00F5DC  0EFF               	movlw	255
  1888  00F5DE  6E0E               	movwf	??_time_set& (0+255),c
  1889  00F5E0  0E8A               	movlw	138
  1890  00F5E2                     u2727:
  1891  00F5E2  2EE8               	decfsz	wreg,f,c
  1892  00F5E4  D7FE               	goto	u2727
  1893  00F5E6  2E0E               	decfsz	??_time_set& (0+255),f,c
  1894  00F5E8  D7FC               	goto	u2727
  1895  00F5EA  D000               	nop2	
  1896  00F5EC  0012               	return		;funcret
  1897  00F5EE                     __end_of_time_set:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           prodh	equ	0xFF4
  1904                           prodl	equ	0xFF3
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1l	equ	0xFE1
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _strcat *****************
  1912 ;; Defined at:
  1913 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  to              2    0[COMRAM] PTR unsigned char 
  1916 ;;		 -> pin_input(5), 
  1917 ;;  from            2    2[COMRAM] PTR const unsigned char 
  1918 ;;		 -> buffer1(20), 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  cp              2    4[COMRAM] PTR unsigned char 
  1921 ;;		 -> pin_input(5), 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    0[COMRAM] PTR unsigned char 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;Total ram usage:        6 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_button_number
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text5
  1945  00E88C                     __ptext5:
  1946                           	opt stack 0
  1947  00E88C                     _strcat:
  1948                           	opt stack 28
  1949                           
  1950                           ;incstack = 0
  1951  00E88C  C001  F005         	movff	strcat@to,strcat@cp
  1952  00E890  C002  F006         	movff	strcat@to+1,strcat@cp+1
  1953  00E894  D003               	goto	l3947
  1954  00E896                     l3945:
  1955  00E896  4A05               	infsnz	strcat@cp,f,c
  1956  00E898  2A06               	incf	strcat@cp+1,f,c
  1957  00E89A  D000               	goto	l3947
  1958  00E89C                     l3947:
  1959  00E89C  C005  FFD9         	movff	strcat@cp,fsr2l
  1960  00E8A0  C006  FFDA         	movff	strcat@cp+1,fsr2h
  1961  00E8A4  50DF               	movf	indf2,w,c
  1962  00E8A6  B4D8               	btfsc	status,2,c
  1963  00E8A8  D007               	goto	l3951
  1964  00E8AA  D7F5               	goto	l3945
  1965  00E8AC  D005               	goto	l3951
  1966  00E8AE                     l3949:
  1967  00E8AE  4A05               	infsnz	strcat@cp,f,c
  1968  00E8B0  2A06               	incf	strcat@cp+1,f,c
  1969  00E8B2  4A03               	infsnz	strcat@from,f,c
  1970  00E8B4  2A04               	incf	strcat@from+1,f,c
  1971  00E8B6  D000               	goto	l3951
  1972  00E8B8                     l3951:
  1973  00E8B8  C003  FFD9         	movff	strcat@from,fsr2l
  1974  00E8BC  C004  FFDA         	movff	strcat@from+1,fsr2h
  1975  00E8C0  C005  FFE1         	movff	strcat@cp,fsr1l
  1976  00E8C4  C006  FFE2         	movff	strcat@cp+1,fsr1h
  1977  00E8C8  CFDF FFE7          	movff	indf2,indf1
  1978  00E8CC  50E7               	movf	indf1,w,c
  1979  00E8CE  A4D8               	btfss	status,2,c
  1980  00E8D0  D7EE               	goto	l3949
  1981                           
  1982                           ;	Return value of _strcat is never used
  1983  00E8D2  0012               	return		;funcret
  1984  00E8D4                     __end_of_strcat:
  1985                           	opt stack 0
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           prodh	equ	0xFF4
  1991                           prodl	equ	0xFF3
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           indf1	equ	0xFE7
  1995                           postdec1	equ	0xFE5
  1996                           fsr1h	equ	0xFE2
  1997                           fsr1l	equ	0xFE1
  1998                           indf2	equ	0xFDF
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _date_set *****************
  2004 ;; Defined at:
  2005 ;;		line 183 in file "main.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;		None               void
  2012 ;; Registers used:
  2013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;Total ram usage:        2 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    3
  2026 ;; This function calls:
  2027 ;;		_Write_RTC
  2028 ;; This function is called by:
  2029 ;;		_button_number
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text6
  2034  00F4BE                     __ptext6:
  2035                           	opt stack 0
  2036  00F4BE                     _date_set:
  2037                           	opt stack 25
  2038                           
  2039                           ;main.c: 185: switch(cursor_horizontal_position){
  2040                           
  2041                           ;incstack = 0
  2042  00F4BE  D024               	goto	l3755
  2043  00F4C0                     l3741:
  2044                           
  2045                           ;main.c: 188: dia = key*10;
  2046  00F4C0  5045               	movf	_key,w,c
  2047  00F4C2  0D0A               	mullw	10
  2048  00F4C4  CFF3 F050          	movff	prodl,_dia
  2049  00F4C8  CFF4 F051          	movff	prodh,_dia+1
  2050                           
  2051                           ;main.c: 189: break;
  2052  00F4CC  D039               	goto	l3757
  2053  00F4CE                     l3743:
  2054                           
  2055                           ;main.c: 192: dia += key;
  2056  00F4CE  5045               	movf	_key,w,c
  2057  00F4D0  2650               	addwf	_dia,f,c
  2058  00F4D2  0E00               	movlw	0
  2059  00F4D4  2251               	addwfc	_dia+1,f,c
  2060                           
  2061                           ;main.c: 193: break;
  2062  00F4D6  D034               	goto	l3757
  2063  00F4D8                     l3745:
  2064                           
  2065                           ;main.c: 196: mes = key*10;
  2066  00F4D8  5045               	movf	_key,w,c
  2067  00F4DA  0D0A               	mullw	10
  2068  00F4DC  CFF3 F056          	movff	prodl,_mes
  2069  00F4E0  CFF4 F057          	movff	prodh,_mes+1
  2070                           
  2071                           ;main.c: 197: break;
  2072  00F4E4  D02D               	goto	l3757
  2073  00F4E6                     l3747:
  2074                           
  2075                           ;main.c: 200: mes += key;
  2076  00F4E6  5045               	movf	_key,w,c
  2077  00F4E8  2656               	addwf	_mes,f,c
  2078  00F4EA  0E00               	movlw	0
  2079  00F4EC  2257               	addwfc	_mes+1,f,c
  2080                           
  2081                           ;main.c: 201: break;
  2082  00F4EE  D028               	goto	l3757
  2083  00F4F0                     l3749:
  2084                           
  2085                           ;main.c: 204: anio = key * 10;
  2086  00F4F0  5045               	movf	_key,w,c
  2087  00F4F2  0D0A               	mullw	10
  2088  00F4F4  CFF3 F04E          	movff	prodl,_anio
  2089  00F4F8  CFF4 F04F          	movff	prodh,_anio+1
  2090                           
  2091                           ;main.c: 205: break;
  2092  00F4FC  D021               	goto	l3757
  2093  00F4FE                     l3751:
  2094                           
  2095                           ;main.c: 208: anio += key;
  2096  00F4FE  5045               	movf	_key,w,c
  2097  00F500  264E               	addwf	_anio,f,c
  2098  00F502  0E00               	movlw	0
  2099  00F504  224F               	addwfc	_anio+1,f,c
  2100                           
  2101                           ;main.c: 211: }
  2102                           
  2103                           ;main.c: 209: break;
  2104  00F506  D01C               	goto	l3757
  2105  00F508                     l3755:
  2106  00F508  C033  F00E         	movff	_cursor_horizontal_position,??_date_set
  2107  00F50C  C034  F00F         	movff	_cursor_horizontal_position+1,??_date_set+1
  2108                           
  2109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2110                           ; Switch size 1, requested type "space"
  2111                           ; Number of cases is 1, Range of values is 0 to 0
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte            4     3 (average)
  2115                           ;	Chosen strategy is simple_byte
  2116  00F510  500F               	movf	??_date_set+1,w,c
  2117  00F512  0A00               	xorlw	0	; case 0
  2118  00F514  A4D8               	btfss	status,2,c
  2119  00F516  D014               	goto	l3757
  2120                           
  2121                           ; Switch size 1, requested type "space"
  2122                           ; Number of cases is 6, Range of values is 1 to 8
  2123                           ; switch strategies available:
  2124                           ; Name         Instructions Cycles
  2125                           ; simple_byte           19    10 (average)
  2126                           ;	Chosen strategy is simple_byte
  2127  00F518  500E               	movf	??_date_set,w,c
  2128  00F51A  0A01               	xorlw	1	; case 1
  2129  00F51C  B4D8               	btfsc	status,2,c
  2130  00F51E  D7D0               	goto	l3741
  2131  00F520  0A03               	xorlw	3	; case 2
  2132  00F522  B4D8               	btfsc	status,2,c
  2133  00F524  D7D4               	goto	l3743
  2134  00F526  0A06               	xorlw	6	; case 4
  2135  00F528  B4D8               	btfsc	status,2,c
  2136  00F52A  D7D6               	goto	l3745
  2137  00F52C  0A01               	xorlw	1	; case 5
  2138  00F52E  B4D8               	btfsc	status,2,c
  2139  00F530  D7DA               	goto	l3747
  2140  00F532  0A02               	xorlw	2	; case 7
  2141  00F534  B4D8               	btfsc	status,2,c
  2142  00F536  D7DC               	goto	l3749
  2143  00F538  0A0F               	xorlw	15	; case 8
  2144  00F53A  B4D8               	btfsc	status,2,c
  2145  00F53C  D7E0               	goto	l3751
  2146  00F53E  D000               	goto	l3757
  2147  00F540                     l3757:
  2148                           
  2149                           ;main.c: 213: Write_RTC();
  2150  00F540  EC99  F07D         	call	_Write_RTC	;wreg free
  2151                           
  2152                           ;main.c: 214: _delay((unsigned long)((98)*(8000000/4000.0)));
  2153  00F544  0EFF               	movlw	255
  2154  00F546  6E0E               	movwf	??_date_set& (0+255),c
  2155  00F548  0E8A               	movlw	138
  2156  00F54A                     u2737:
  2157  00F54A  2EE8               	decfsz	wreg,f,c
  2158  00F54C  D7FE               	goto	u2737
  2159  00F54E  2E0E               	decfsz	??_date_set& (0+255),f,c
  2160  00F550  D7FC               	goto	u2737
  2161  00F552  D000               	nop2	
  2162  00F554  0012               	return		;funcret
  2163  00F556                     __end_of_date_set:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           postinc0	equ	0xFEE
  2172                           wreg	equ	0xFE8
  2173                           indf1	equ	0xFE7
  2174                           postdec1	equ	0xFE5
  2175                           fsr1h	equ	0xFE2
  2176                           fsr1l	equ	0xFE1
  2177                           indf2	equ	0xFDF
  2178                           fsr2h	equ	0xFDA
  2179                           fsr2l	equ	0xFD9
  2180                           status	equ	0xFD8
  2181                           
  2182 ;; *************** function _Write_RTC *****************
  2183 ;; Defined at:
  2184 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    2
  2205 ;; This function calls:
  2206 ;;		_RtccWrOn
  2207 ;;		_RtccWriteDate
  2208 ;;		_RtccWriteTime
  2209 ;;		___awdiv
  2210 ;; This function is called by:
  2211 ;;		_date_set
  2212 ;;		_time_set
  2213 ;;		_setup
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text7
  2218  00FB32                     __ptext7:
  2219                           	opt stack 0
  2220  00FB32                     _Write_RTC:
  2221                           	opt stack 27
  2222                           
  2223                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2224                           
  2225                           ;incstack = 0
  2226  00FB32  EC1F  F071         	call	_RtccWrOn	;wreg free
  2227                           
  2228                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2229  00FB36  80A3               	bsf	4003,0,c	;volatile
  2230                           
  2231                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2232  00FB38  C03F  F001         	movff	_segundo,___awdiv@dividend
  2233  00FB3C  C040  F002         	movff	_segundo+1,___awdiv@dividend+1
  2234  00FB40  0E00               	movlw	0
  2235  00FB42  6E04               	movwf	___awdiv@divisor+1,c
  2236  00FB44  0E0A               	movlw	10
  2237  00FB46  6E03               	movwf	___awdiv@divisor,c
  2238  00FB48  EC14  F07A         	call	___awdiv	;wreg free
  2239  00FB4C  5001               	movf	?___awdiv,w,c
  2240  00FB4E  6E5D               	movwf	_segundo_d,c
  2241                           
  2242                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2243  00FB50  505D               	movf	_segundo_d,w,c
  2244  00FB52  0D0A               	mullw	10
  2245  00FB54  50F3               	movf	prodl,w,c
  2246  00FB56  0800               	sublw	0
  2247  00FB58  243F               	addwf	_segundo,w,c
  2248  00FB5A  6E5E               	movwf	_segundo_u,c
  2249                           
  2250                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2251  00FB5C  505D               	movf	_segundo_d,w,c
  2252  00FB5E  0D10               	mullw	16
  2253  00FB60  50F3               	movf	prodl,w,c
  2254  00FB62  245E               	addwf	_segundo_u,w,c
  2255  00FB64  6E4B               	movwf	_RtccTime+1,c
  2256                           
  2257                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2258  00FB66  C03D  F001         	movff	_minuto,___awdiv@dividend
  2259  00FB6A  C03E  F002         	movff	_minuto+1,___awdiv@dividend+1
  2260  00FB6E  0E00               	movlw	0
  2261  00FB70  6E04               	movwf	___awdiv@divisor+1,c
  2262  00FB72  0E0A               	movlw	10
  2263  00FB74  6E03               	movwf	___awdiv@divisor,c
  2264  00FB76  EC14  F07A         	call	___awdiv	;wreg free
  2265  00FB7A  5001               	movf	?___awdiv,w,c
  2266  00FB7C  6E5C               	movwf	_minuto_d,c
  2267                           
  2268                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2269  00FB7E  505C               	movf	_minuto_d,w,c
  2270  00FB80  0D0A               	mullw	10
  2271  00FB82  50F3               	movf	prodl,w,c
  2272  00FB84  0800               	sublw	0
  2273  00FB86  243D               	addwf	_minuto,w,c
  2274  00FB88  0100               	movlb	0	; () banked
  2275  00FB8A  6FA9               	movwf	_minuto_u& (0+255),b
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2279  00FB8C  505C               	movf	_minuto_d,w,c
  2280  00FB8E  0D10               	mullw	16
  2281  00FB90  50F3               	movf	prodl,w,c
  2282  00FB92  0100               	movlb	0	; () banked
  2283  00FB94  25A9               	addwf	_minuto_u& (0+255),w,b
  2284  00FB96  6E4C               	movwf	_RtccTime+2,c
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2288  00FB98  C054  F001         	movff	_hora,___awdiv@dividend
  2289  00FB9C  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  2290  00FBA0  0E00               	movlw	0
  2291  00FBA2  6E04               	movwf	___awdiv@divisor+1,c
  2292  00FBA4  0E0A               	movlw	10
  2293  00FBA6  6E03               	movwf	___awdiv@divisor,c
  2294  00FBA8  EC14  F07A         	call	___awdiv	;wreg free
  2295  00FBAC  5001               	movf	?___awdiv,w,c
  2296  00FBAE  6E5A               	movwf	_hora_d,c
  2297                           
  2298                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2299  00FBB0  505A               	movf	_hora_d,w,c
  2300  00FBB2  0D0A               	mullw	10
  2301  00FBB4  50F3               	movf	prodl,w,c
  2302  00FBB6  0800               	sublw	0
  2303  00FBB8  2454               	addwf	_hora,w,c
  2304  00FBBA  0100               	movlb	0	; () banked
  2305  00FBBC  6FA7               	movwf	_hora_u& (0+255),b
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2309  00FBBE  505A               	movf	_hora_d,w,c
  2310  00FBC0  0D10               	mullw	16
  2311  00FBC2  50F3               	movf	prodl,w,c
  2312  00FBC4  0100               	movlb	0	; () banked
  2313  00FBC6  25A7               	addwf	_hora_u& (0+255),w,b
  2314  00FBC8  6E4D               	movwf	_RtccTime+3,c
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2318  00FBCA  C04E  F001         	movff	_anio,___awdiv@dividend
  2319  00FBCE  C04F  F002         	movff	_anio+1,___awdiv@dividend+1
  2320  00FBD2  0E00               	movlw	0
  2321  00FBD4  6E04               	movwf	___awdiv@divisor+1,c
  2322  00FBD6  0E0A               	movlw	10
  2323  00FBD8  6E03               	movwf	___awdiv@divisor,c
  2324  00FBDA  EC14  F07A         	call	___awdiv	;wreg free
  2325  00FBDE  5001               	movf	?___awdiv,w,c
  2326  00FBE0  6E58               	movwf	_anio_d,c
  2327                           
  2328                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  2329  00FBE2  5058               	movf	_anio_d,w,c
  2330  00FBE4  0D0A               	mullw	10
  2331  00FBE6  50F3               	movf	prodl,w,c
  2332  00FBE8  0800               	sublw	0
  2333  00FBEA  244E               	addwf	_anio,w,c
  2334  00FBEC  0100               	movlb	0	; () banked
  2335  00FBEE  6FA4               	movwf	_anio_u& (0+255),b
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  2339  00FBF0  5058               	movf	_anio_d,w,c
  2340  00FBF2  0D10               	mullw	16
  2341  00FBF4  50F3               	movf	prodl,w,c
  2342  00FBF6  0100               	movlb	0	; () banked
  2343  00FBF8  25A4               	addwf	_anio_u& (0+255),w,b
  2344  00FBFA  6E49               	movwf	_RtccDate+3,c
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  2348  00FBFC  C056  F001         	movff	_mes,___awdiv@dividend
  2349  00FC00  C057  F002         	movff	_mes+1,___awdiv@dividend+1
  2350  00FC04  0E00               	movlw	0
  2351  00FC06  6E04               	movwf	___awdiv@divisor+1,c
  2352  00FC08  0E0A               	movlw	10
  2353  00FC0A  6E03               	movwf	___awdiv@divisor,c
  2354  00FC0C  EC14  F07A         	call	___awdiv	;wreg free
  2355  00FC10  5001               	movf	?___awdiv,w,c
  2356  00FC12  6E5B               	movwf	_mes_d,c
  2357                           
  2358                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  2359  00FC14  505B               	movf	_mes_d,w,c
  2360  00FC16  0D0A               	mullw	10
  2361  00FC18  50F3               	movf	prodl,w,c
  2362  00FC1A  0800               	sublw	0
  2363  00FC1C  2456               	addwf	_mes,w,c
  2364  00FC1E  0100               	movlb	0	; () banked
  2365  00FC20  6FA8               	movwf	_mes_u& (0+255),b
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  2369  00FC22  505B               	movf	_mes_d,w,c
  2370  00FC24  0D10               	mullw	16
  2371  00FC26  50F3               	movf	prodl,w,c
  2372  00FC28  0100               	movlb	0	; () banked
  2373  00FC2A  25A8               	addwf	_mes_u& (0+255),w,b
  2374  00FC2C  6E48               	movwf	_RtccDate+2,c
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  2378  00FC2E  C050  F001         	movff	_dia,___awdiv@dividend
  2379  00FC32  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  2380  00FC36  0E00               	movlw	0
  2381  00FC38  6E04               	movwf	___awdiv@divisor+1,c
  2382  00FC3A  0E0A               	movlw	10
  2383  00FC3C  6E03               	movwf	___awdiv@divisor,c
  2384  00FC3E  EC14  F07A         	call	___awdiv	;wreg free
  2385  00FC42  5001               	movf	?___awdiv,w,c
  2386  00FC44  6E59               	movwf	_fecha_d,c
  2387                           
  2388                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  2389  00FC46  5059               	movf	_fecha_d,w,c
  2390  00FC48  0D0A               	mullw	10
  2391  00FC4A  50F3               	movf	prodl,w,c
  2392  00FC4C  0800               	sublw	0
  2393  00FC4E  2450               	addwf	_dia,w,c
  2394  00FC50  0100               	movlb	0	; () banked
  2395  00FC52  6FA6               	movwf	_fecha_u& (0+255),b
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  2399  00FC54  5059               	movf	_fecha_d,w,c
  2400  00FC56  0D10               	mullw	16
  2401  00FC58  50F3               	movf	prodl,w,c
  2402  00FC5A  0100               	movlb	0	; () banked
  2403  00FC5C  25A6               	addwf	_fecha_u& (0+255),w,b
  2404  00FC5E  6E47               	movwf	_RtccDate+1,c
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  2408  00FC60  C052  F0A5         	movff	_diasem,_dia_semana
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  2412  00FC64  C052  F046         	movff	_diasem,_RtccDate
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  2416  00FC68  0E4A               	movlw	low _RtccTime
  2417  00FC6A  6E01               	movwf	RtccWriteTime@pTm,c
  2418  00FC6C  0E00               	movlw	high _RtccTime
  2419  00FC6E  6E02               	movwf	RtccWriteTime@pTm+1,c
  2420  00FC70  0E01               	movlw	1
  2421  00FC72  6E03               	movwf	RtccWriteTime@di,c
  2422  00FC74  ECC5  F07B         	call	_RtccWriteTime	;wreg free
  2423                           
  2424                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  2425  00FC78  0E46               	movlw	low _RtccDate
  2426  00FC7A  6E01               	movwf	RtccWriteDate@pDt,c
  2427  00FC7C  0E00               	movlw	high _RtccDate
  2428  00FC7E  6E02               	movwf	RtccWriteDate@pDt+1,c
  2429  00FC80  0E01               	movlw	1
  2430  00FC82  6E03               	movwf	RtccWriteDate@di,c
  2431  00FC84  EC4B  F07C         	call	_RtccWriteDate	;wreg free
  2432                           
  2433                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  2434  00FC88  010F               	movlb	15	; () banked
  2435  00FC8A  8F3F               	bsf	63,7,b	;volatile
  2436                           
  2437                           ; BSR set to: 15
  2438  00FC8C  0012               	return		;funcret
  2439  00FC8E                     __end_of_Write_RTC:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodh	equ	0xFF4
  2446                           prodl	equ	0xFF3
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           indf1	equ	0xFE7
  2450                           postdec1	equ	0xFE5
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           fsr2h	equ	0xFDA
  2455                           fsr2l	equ	0xFD9
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function ___awdiv *****************
  2459 ;; Defined at:
  2460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  dividend        2    0[COMRAM] int 
  2463 ;;  divisor         2    2[COMRAM] int 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  quotient        2    6[COMRAM] int 
  2466 ;;  sign            1    5[COMRAM] unsigned char 
  2467 ;;  counter         1    4[COMRAM] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2    0[COMRAM] int 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;Total ram usage:        8 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_Write_RTC
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text8
  2491  00F428                     __ptext8:
  2492                           	opt stack 0
  2493  00F428                     ___awdiv:
  2494                           	opt stack 28
  2495                           
  2496                           ; BSR set to: 15
  2497                           ;incstack = 0
  2498  00F428  0E00               	movlw	0
  2499  00F42A  6E06               	movwf	___awdiv@sign,c
  2500  00F42C  AE04               	btfss	___awdiv@divisor+1,7,c
  2501  00F42E  D007               	goto	l3455
  2502  00F430  6C03               	negf	___awdiv@divisor,c
  2503  00F432  1E04               	comf	___awdiv@divisor+1,f,c
  2504  00F434  B0D8               	btfsc	status,0,c
  2505  00F436  2A04               	incf	___awdiv@divisor+1,f,c
  2506  00F438  0E01               	movlw	1
  2507  00F43A  6E06               	movwf	___awdiv@sign,c
  2508  00F43C  D000               	goto	l3455
  2509  00F43E                     l3455:
  2510  00F43E  AE02               	btfss	___awdiv@dividend+1,7,c
  2511  00F440  D007               	goto	l3461
  2512  00F442  6C01               	negf	___awdiv@dividend,c
  2513  00F444  1E02               	comf	___awdiv@dividend+1,f,c
  2514  00F446  B0D8               	btfsc	status,0,c
  2515  00F448  2A02               	incf	___awdiv@dividend+1,f,c
  2516  00F44A  0E01               	movlw	1
  2517  00F44C  1A06               	xorwf	___awdiv@sign,f,c
  2518  00F44E  D000               	goto	l3461
  2519  00F450                     l3461:
  2520  00F450  0E00               	movlw	0
  2521  00F452  6E08               	movwf	___awdiv@quotient+1,c
  2522  00F454  0E00               	movlw	0
  2523  00F456  6E07               	movwf	___awdiv@quotient,c
  2524  00F458  5003               	movf	___awdiv@divisor,w,c
  2525  00F45A  1004               	iorwf	___awdiv@divisor+1,w,c
  2526  00F45C  B4D8               	btfsc	status,2,c
  2527  00F45E  D021               	goto	l3483
  2528  00F460  0E01               	movlw	1
  2529  00F462  6E05               	movwf	___awdiv@counter,c
  2530  00F464  D005               	goto	l3469
  2531  00F466                     l3467:
  2532  00F466  90D8               	bcf	status,0,c
  2533  00F468  3603               	rlcf	___awdiv@divisor,f,c
  2534  00F46A  3604               	rlcf	___awdiv@divisor+1,f,c
  2535  00F46C  2A05               	incf	___awdiv@counter,f,c
  2536  00F46E  D000               	goto	l3469
  2537  00F470                     l3469:
  2538  00F470  BE04               	btfsc	___awdiv@divisor+1,7,c
  2539  00F472  D002               	goto	l3471
  2540  00F474  D7F8               	goto	l3467
  2541  00F476  D000               	goto	l3471
  2542  00F478                     l3471:
  2543  00F478  90D8               	bcf	status,0,c
  2544  00F47A  3607               	rlcf	___awdiv@quotient,f,c
  2545  00F47C  3608               	rlcf	___awdiv@quotient+1,f,c
  2546  00F47E  5003               	movf	___awdiv@divisor,w,c
  2547  00F480  5C01               	subwf	___awdiv@dividend,w,c
  2548  00F482  5004               	movf	___awdiv@divisor+1,w,c
  2549  00F484  5802               	subwfb	___awdiv@dividend+1,w,c
  2550  00F486  A0D8               	btfss	status,0,c
  2551  00F488  D006               	goto	l3479
  2552  00F48A  5003               	movf	___awdiv@divisor,w,c
  2553  00F48C  5E01               	subwf	___awdiv@dividend,f,c
  2554  00F48E  5004               	movf	___awdiv@divisor+1,w,c
  2555  00F490  5A02               	subwfb	___awdiv@dividend+1,f,c
  2556  00F492  8007               	bsf	___awdiv@quotient,0,c
  2557  00F494  D000               	goto	l3479
  2558  00F496                     l3479:
  2559  00F496  90D8               	bcf	status,0,c
  2560  00F498  3204               	rrcf	___awdiv@divisor+1,f,c
  2561  00F49A  3203               	rrcf	___awdiv@divisor,f,c
  2562  00F49C  2E05               	decfsz	___awdiv@counter,f,c
  2563  00F49E  D7EC               	goto	l3471
  2564  00F4A0  D000               	goto	l3483
  2565  00F4A2                     l3483:
  2566  00F4A2  5006               	movf	___awdiv@sign,w,c
  2567  00F4A4  B4D8               	btfsc	status,2,c
  2568  00F4A6  D005               	goto	l3487
  2569  00F4A8  6C07               	negf	___awdiv@quotient,c
  2570  00F4AA  1E08               	comf	___awdiv@quotient+1,f,c
  2571  00F4AC  B0D8               	btfsc	status,0,c
  2572  00F4AE  2A08               	incf	___awdiv@quotient+1,f,c
  2573  00F4B0  D000               	goto	l3487
  2574  00F4B2                     l3487:
  2575  00F4B2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2576  00F4B6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2577  00F4BA  0012               	return	
  2578  00F4BC  0012               	return		;funcret
  2579  00F4BE                     __end_of___awdiv:
  2580                           	opt stack 0
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           prodh	equ	0xFF4
  2586                           prodl	equ	0xFF3
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           indf1	equ	0xFE7
  2590                           postdec1	equ	0xFE5
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           indf2	equ	0xFDF
  2594                           fsr2h	equ	0xFDA
  2595                           fsr2l	equ	0xFD9
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function _RtccWriteTime *****************
  2599 ;; Defined at:
  2600 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  pTm             2    0[COMRAM] PTR const struct .
  2603 ;;		 -> RtccTime(4), 
  2604 ;;  di              1    2[COMRAM] enum E7121
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  tempHourWDay    2    9[COMRAM] struct .
  2607 ;;  tempMinSec      2    7[COMRAM] struct .
  2608 ;;  wasWrEn         1    6[COMRAM] enum E7121
  2609 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2610 ;;  wasOn           1    4[COMRAM] enum E7121
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      enum E7481
  2613 ;; Registers used:
  2614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2620 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;Total ram usage:       11 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    1
  2627 ;; This function calls:
  2628 ;;		_RtccWrOn
  2629 ;; This function is called by:
  2630 ;;		_Write_RTC
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text9
  2635  00F78A                     __ptext9:
  2636                           	opt stack 0
  2637  00F78A                     _RtccWriteTime:
  2638                           	opt stack 27
  2639                           
  2640                           ;incstack = 0
  2641  00F78A  0E00               	movlw	0
  2642  00F78C  6E06               	movwf	RtccWriteTime@wasAlrm,c
  2643  00F78E  EE20 F002          	lfsr	2,2
  2644  00F792  5001               	movf	RtccWriteTime@pTm,w,c
  2645  00F794  26D9               	addwf	fsr2l,f,c
  2646  00F796  5002               	movf	RtccWriteTime@pTm+1,w,c
  2647  00F798  22DA               	addwfc	fsr2h,f,c
  2648  00F79A  0E5A               	movlw	90
  2649  00F79C  60DF               	cpfslt	indf2,c
  2650  00F79E  0012               	return	
  2651  00F7A0  EE20 F001          	lfsr	2,1
  2652  00F7A4  5001               	movf	RtccWriteTime@pTm,w,c
  2653  00F7A6  26D9               	addwf	fsr2l,f,c
  2654  00F7A8  5002               	movf	RtccWriteTime@pTm+1,w,c
  2655  00F7AA  22DA               	addwfc	fsr2h,f,c
  2656  00F7AC  0E5A               	movlw	90
  2657  00F7AE  60DF               	cpfslt	indf2,c
  2658  00F7B0  0012               	return	
  2659  00F7B2  EE20 F003          	lfsr	2,3
  2660  00F7B6  5001               	movf	RtccWriteTime@pTm,w,c
  2661  00F7B8  26D9               	addwf	fsr2l,f,c
  2662  00F7BA  5002               	movf	RtccWriteTime@pTm+1,w,c
  2663  00F7BC  22DA               	addwfc	fsr2h,f,c
  2664  00F7BE  0E24               	movlw	36
  2665  00F7C0  64DF               	cpfsgt	indf2,c
  2666  00F7C2  D002               	goto	l3177
  2667  00F7C4  0012               	return	
  2668                           
  2669                           ;	Return value of _RtccWriteTime is never used
  2670  00F7C6  0012               	return	
  2671  00F7C8                     l3177:
  2672  00F7C8  EE20 F002          	lfsr	2,2
  2673  00F7CC  5001               	movf	RtccWriteTime@pTm,w,c
  2674  00F7CE  26D9               	addwf	fsr2l,f,c
  2675  00F7D0  5002               	movf	RtccWriteTime@pTm+1,w,c
  2676  00F7D2  22DA               	addwfc	fsr2h,f,c
  2677  00F7D4  50DF               	movf	indf2,w,c
  2678  00F7D6  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  2679  00F7D8  EE20 F001          	lfsr	2,1
  2680  00F7DC  5001               	movf	RtccWriteTime@pTm,w,c
  2681  00F7DE  26D9               	addwf	fsr2l,f,c
  2682  00F7E0  5002               	movf	RtccWriteTime@pTm+1,w,c
  2683  00F7E2  22DA               	addwfc	fsr2h,f,c
  2684  00F7E4  50DF               	movf	indf2,w,c
  2685  00F7E6  6E08               	movwf	RtccWriteTime@tempMinSec,c
  2686  00F7E8  5003               	movf	RtccWriteTime@di,w,c
  2687  00F7EA  B4D8               	btfsc	status,2,c
  2688  00F7EC  D002               	goto	l3183
  2689  00F7EE  9CF2               	bcf	intcon,6,c	;volatile
  2690  00F7F0  D000               	goto	l3183
  2691  00F7F2                     l3183:
  2692  00F7F2  0E00               	movlw	0
  2693  00F7F4  BB3F               	btfsc	63,5,b	;volatile
  2694  00F7F6  0E01               	movlw	1
  2695  00F7F8  6E07               	movwf	RtccWriteTime@wasWrEn,c
  2696  00F7FA  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2697  00F7FC  A4D8               	btfss	status,2,c
  2698  00F7FE  D003               	goto	l3187
  2699  00F800  EC1F  F071         	call	_RtccWrOn	;wreg free
  2700  00F804  D000               	goto	l3187
  2701  00F806                     l3187:
  2702  00F806  0E00               	movlw	0
  2703  00F808  BF3F               	btfsc	63,7,b	;volatile
  2704  00F80A  0E01               	movlw	1
  2705  00F80C  6E05               	movwf	RtccWriteTime@wasOn,c
  2706  00F80E  5005               	movf	RtccWriteTime@wasOn,w,c
  2707  00F810  B4D8               	btfsc	status,2,c
  2708  00F812  D007               	goto	l3193
  2709  00F814  0E00               	movlw	0
  2710  00F816  BE91               	btfsc	3985,7,c	;volatile
  2711  00F818  0E01               	movlw	1
  2712  00F81A  6E06               	movwf	RtccWriteTime@wasAlrm,c
  2713  00F81C  010F               	movlb	15	; () banked
  2714  00F81E  9F3F               	bcf	63,7,b	;volatile
  2715  00F820  D000               	goto	l3193
  2716  00F822                     l3193:
  2717  00F822  0EFC               	movlw	252
  2718  00F824  010F               	movlb	15	; () banked
  2719  00F826  173F               	andwf	63,f,b	;volatile
  2720  00F828  010F               	movlb	15	; () banked
  2721  00F82A  813F               	bsf	63,0,b	;volatile
  2722                           
  2723                           ; BSR set to: 15
  2724  00F82C  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  2725                           
  2726                           ; BSR set to: 15
  2727  00F830  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  2728                           
  2729                           ; BSR set to: 15
  2730  00F834  EE20 F003          	lfsr	2,3
  2731  00F838  5001               	movf	RtccWriteTime@pTm,w,c
  2732  00F83A  26D9               	addwf	fsr2l,f,c
  2733  00F83C  5002               	movf	RtccWriteTime@pTm+1,w,c
  2734  00F83E  22DA               	addwfc	fsr2h,f,c
  2735  00F840  50DF               	movf	indf2,w,c
  2736  00F842  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  2737                           
  2738                           ; BSR set to: 15
  2739  00F844  0EFC               	movlw	252
  2740  00F846  010F               	movlb	15	; () banked
  2741  00F848  173F               	andwf	63,f,b	;volatile
  2742                           
  2743                           ; BSR set to: 15
  2744  00F84A  010F               	movlb	15	; () banked
  2745  00F84C  813F               	bsf	63,0,b	;volatile
  2746                           
  2747                           ; BSR set to: 15
  2748  00F84E  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  2749                           
  2750                           ; BSR set to: 15
  2751  00F852  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  2752                           
  2753                           ; BSR set to: 15
  2754  00F856  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  2755                           
  2756                           ; BSR set to: 15
  2757  00F85A  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  2758                           
  2759                           ; BSR set to: 15
  2760  00F85E  5005               	movf	RtccWriteTime@wasOn,w,c
  2761  00F860  B4D8               	btfsc	status,2,c
  2762  00F862  D00D               	goto	l3225
  2763                           
  2764                           ; BSR set to: 15
  2765  00F864  010F               	movlb	15	; () banked
  2766  00F866  8F3F               	bsf	63,7,b	;volatile
  2767                           
  2768                           ; BSR set to: 15
  2769  00F868  5006               	movf	RtccWriteTime@wasAlrm,w,c
  2770  00F86A  B4D8               	btfsc	status,2,c
  2771  00F86C  D002               	goto	l3221
  2772                           
  2773                           ; BSR set to: 15
  2774  00F86E  8E91               	bsf	3985,7,c	;volatile
  2775  00F870  D000               	goto	l3221
  2776  00F872                     l3221:
  2777                           
  2778                           ; BSR set to: 15
  2779  00F872  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2780  00F874  B4D8               	btfsc	status,2,c
  2781  00F876  D009               	goto	l3229
  2782                           
  2783                           ; BSR set to: 15
  2784  00F878  EC1F  F071         	call	_RtccWrOn	;wreg free
  2785  00F87C  D006               	goto	l3229
  2786  00F87E                     l3225:
  2787  00F87E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2788  00F880  A4D8               	btfss	status,2,c
  2789  00F882  D003               	goto	l3229
  2790  00F884  010F               	movlb	15	; () banked
  2791  00F886  9B3F               	bcf	63,5,b	;volatile
  2792                           
  2793                           ; BSR set to: 15
  2794  00F888  D000               	goto	l3229
  2795  00F88A                     l3229:
  2796  00F88A  5003               	movf	RtccWriteTime@di,w,c
  2797  00F88C  B4D8               	btfsc	status,2,c
  2798  00F88E  0012               	return	
  2799  00F890  8CF2               	bsf	intcon,6,c	;volatile
  2800  00F892  0012               	return	
  2801                           
  2802                           ;	Return value of _RtccWriteTime is never used
  2803  00F894  0012               	return		;funcret
  2804  00F896                     __end_of_RtccWriteTime:
  2805                           	opt stack 0
  2806                           tblptru	equ	0xFF8
  2807                           tblptrh	equ	0xFF7
  2808                           tblptrl	equ	0xFF6
  2809                           tablat	equ	0xFF5
  2810                           prodh	equ	0xFF4
  2811                           prodl	equ	0xFF3
  2812                           intcon	equ	0xFF2
  2813                           postinc0	equ	0xFEE
  2814                           wreg	equ	0xFE8
  2815                           indf1	equ	0xFE7
  2816                           postdec1	equ	0xFE5
  2817                           fsr1h	equ	0xFE2
  2818                           fsr1l	equ	0xFE1
  2819                           indf2	equ	0xFDF
  2820                           fsr2h	equ	0xFDA
  2821                           fsr2l	equ	0xFD9
  2822                           status	equ	0xFD8
  2823                           
  2824 ;; *************** function _RtccWriteDate *****************
  2825 ;; Defined at:
  2826 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  pDt             2    0[COMRAM] PTR const struct .
  2829 ;;		 -> RtccDate(4), 
  2830 ;;  di              1    2[COMRAM] enum E7121
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  tempHourWDay    2   11[COMRAM] struct .
  2833 ;;  tempDayMonth    2    9[COMRAM] struct .
  2834 ;;  tempYear        2    6[COMRAM] struct .
  2835 ;;  wasWrEn         1    8[COMRAM] enum E7121
  2836 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2837 ;;  wasOn           1    4[COMRAM] enum E7121
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      enum E7481
  2840 ;; Registers used:
  2841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2847 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;Total ram usage:       13 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    1
  2854 ;; This function calls:
  2855 ;;		_RtccWrOn
  2856 ;; This function is called by:
  2857 ;;		_Write_RTC
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text10
  2862  00F896                     __ptext10:
  2863                           	opt stack 0
  2864  00F896                     _RtccWriteDate:
  2865                           	opt stack 27
  2866                           
  2867                           ;incstack = 0
  2868  00F896  0E00               	movlw	0
  2869  00F898  6E06               	movwf	RtccWriteDate@wasAlrm,c
  2870  00F89A  EE20 F002          	lfsr	2,2
  2871  00F89E  5001               	movf	RtccWriteDate@pDt,w,c
  2872  00F8A0  26D9               	addwf	fsr2l,f,c
  2873  00F8A2  5002               	movf	RtccWriteDate@pDt+1,w,c
  2874  00F8A4  22DA               	addwfc	fsr2h,f,c
  2875  00F8A6  0E13               	movlw	19
  2876  00F8A8  60DF               	cpfslt	indf2,c
  2877  00F8AA  0012               	return	
  2878  00F8AC  EE20 F002          	lfsr	2,2
  2879  00F8B0  5001               	movf	RtccWriteDate@pDt,w,c
  2880  00F8B2  26D9               	addwf	fsr2l,f,c
  2881  00F8B4  5002               	movf	RtccWriteDate@pDt+1,w,c
  2882  00F8B6  22DA               	addwfc	fsr2h,f,c
  2883  00F8B8  50DF               	movf	indf2,w,c
  2884  00F8BA  B4D8               	btfsc	status,2,c
  2885  00F8BC  0012               	return	
  2886  00F8BE  EE20 F001          	lfsr	2,1
  2887  00F8C2  5001               	movf	RtccWriteDate@pDt,w,c
  2888  00F8C4  26D9               	addwf	fsr2l,f,c
  2889  00F8C6  5002               	movf	RtccWriteDate@pDt+1,w,c
  2890  00F8C8  22DA               	addwfc	fsr2h,f,c
  2891  00F8CA  0E32               	movlw	50
  2892  00F8CC  60DF               	cpfslt	indf2,c
  2893  00F8CE  0012               	return	
  2894  00F8D0  EE20 F001          	lfsr	2,1
  2895  00F8D4  5001               	movf	RtccWriteDate@pDt,w,c
  2896  00F8D6  26D9               	addwf	fsr2l,f,c
  2897  00F8D8  5002               	movf	RtccWriteDate@pDt+1,w,c
  2898  00F8DA  22DA               	addwfc	fsr2h,f,c
  2899  00F8DC  50DF               	movf	indf2,w,c
  2900  00F8DE  B4D8               	btfsc	status,2,c
  2901  00F8E0  0012               	return	
  2902  00F8E2  EE20 F003          	lfsr	2,3
  2903  00F8E6  5001               	movf	RtccWriteDate@pDt,w,c
  2904  00F8E8  26D9               	addwf	fsr2l,f,c
  2905  00F8EA  5002               	movf	RtccWriteDate@pDt+1,w,c
  2906  00F8EC  22DA               	addwfc	fsr2h,f,c
  2907  00F8EE  0E99               	movlw	153
  2908  00F8F0  64DF               	cpfsgt	indf2,c
  2909  00F8F2  D002               	goto	l3245
  2910  00F8F4  0012               	return	
  2911                           
  2912                           ;	Return value of _RtccWriteDate is never used
  2913  00F8F6  0012               	return	
  2914  00F8F8                     l3245:
  2915  00F8F8  EE20 F003          	lfsr	2,3
  2916  00F8FC  5001               	movf	RtccWriteDate@pDt,w,c
  2917  00F8FE  26D9               	addwf	fsr2l,f,c
  2918  00F900  5002               	movf	RtccWriteDate@pDt+1,w,c
  2919  00F902  22DA               	addwfc	fsr2h,f,c
  2920  00F904  50DF               	movf	indf2,w,c
  2921  00F906  6E07               	movwf	RtccWriteDate@tempYear,c
  2922  00F908  EE20 F001          	lfsr	2,1
  2923  00F90C  5001               	movf	RtccWriteDate@pDt,w,c
  2924  00F90E  26D9               	addwf	fsr2l,f,c
  2925  00F910  5002               	movf	RtccWriteDate@pDt+1,w,c
  2926  00F912  22DA               	addwfc	fsr2h,f,c
  2927  00F914  50DF               	movf	indf2,w,c
  2928  00F916  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  2929  00F918  EE20 F002          	lfsr	2,2
  2930  00F91C  5001               	movf	RtccWriteDate@pDt,w,c
  2931  00F91E  26D9               	addwf	fsr2l,f,c
  2932  00F920  5002               	movf	RtccWriteDate@pDt+1,w,c
  2933  00F922  22DA               	addwfc	fsr2h,f,c
  2934  00F924  50DF               	movf	indf2,w,c
  2935  00F926  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  2936  00F928  5003               	movf	RtccWriteDate@di,w,c
  2937  00F92A  B4D8               	btfsc	status,2,c
  2938  00F92C  D002               	goto	l3251
  2939  00F92E  9CF2               	bcf	intcon,6,c	;volatile
  2940  00F930  D000               	goto	l3251
  2941  00F932                     l3251:
  2942  00F932  0E00               	movlw	0
  2943  00F934  BB3F               	btfsc	63,5,b	;volatile
  2944  00F936  0E01               	movlw	1
  2945  00F938  6E09               	movwf	RtccWriteDate@wasWrEn,c
  2946  00F93A  5009               	movf	RtccWriteDate@wasWrEn,w,c
  2947  00F93C  A4D8               	btfss	status,2,c
  2948  00F93E  D003               	goto	l3255
  2949  00F940  EC1F  F071         	call	_RtccWrOn	;wreg free
  2950  00F944  D000               	goto	l3255
  2951  00F946                     l3255:
  2952  00F946  0E00               	movlw	0
  2953  00F948  BF3F               	btfsc	63,7,b	;volatile
  2954  00F94A  0E01               	movlw	1
  2955  00F94C  6E05               	movwf	RtccWriteDate@wasOn,c
  2956  00F94E  5005               	movf	RtccWriteDate@wasOn,w,c
  2957  00F950  B4D8               	btfsc	status,2,c
  2958  00F952  D007               	goto	l3261
  2959  00F954  0E00               	movlw	0
  2960  00F956  BE91               	btfsc	3985,7,c	;volatile
  2961  00F958  0E01               	movlw	1
  2962  00F95A  6E06               	movwf	RtccWriteDate@wasAlrm,c
  2963  00F95C  010F               	movlb	15	; () banked
  2964  00F95E  9F3F               	bcf	63,7,b	;volatile
  2965  00F960  D000               	goto	l3261
  2966  00F962                     l3261:
  2967  00F962  0EFC               	movlw	252
  2968  00F964  010F               	movlb	15	; () banked
  2969  00F966  173F               	andwf	63,f,b	;volatile
  2970  00F968  010F               	movlb	15	; () banked
  2971  00F96A  813F               	bsf	63,0,b	;volatile
  2972                           
  2973                           ; BSR set to: 15
  2974  00F96C  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  2975                           
  2976                           ; BSR set to: 15
  2977  00F970  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  2978                           
  2979                           ; BSR set to: 15
  2980  00F974  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  2981  00F978  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  2982  00F97C  50DF               	movf	indf2,w,c
  2983  00F97E  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  2984                           
  2985                           ; BSR set to: 15
  2986  00F980  0EFC               	movlw	252
  2987  00F982  010F               	movlb	15	; () banked
  2988  00F984  173F               	andwf	63,f,b	;volatile
  2989                           
  2990                           ; BSR set to: 15
  2991  00F986  0E03               	movlw	3
  2992  00F988  010F               	movlb	15	; () banked
  2993  00F98A  133F               	iorwf	63,f,b	;volatile
  2994                           
  2995                           ; BSR set to: 15
  2996  00F98C  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  2997                           
  2998                           ; BSR set to: 15
  2999  00F990  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3000                           
  3001                           ; BSR set to: 15
  3002  00F994  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3003                           
  3004                           ; BSR set to: 15
  3005  00F998  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3006                           
  3007                           ; BSR set to: 15
  3008  00F99C  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3009                           
  3010                           ; BSR set to: 15
  3011  00F9A0  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3012                           
  3013                           ; BSR set to: 15
  3014  00F9A4  5005               	movf	RtccWriteDate@wasOn,w,c
  3015  00F9A6  B4D8               	btfsc	status,2,c
  3016  00F9A8  D00D               	goto	l3297
  3017                           
  3018                           ; BSR set to: 15
  3019  00F9AA  010F               	movlb	15	; () banked
  3020  00F9AC  8F3F               	bsf	63,7,b	;volatile
  3021                           
  3022                           ; BSR set to: 15
  3023  00F9AE  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3024  00F9B0  B4D8               	btfsc	status,2,c
  3025  00F9B2  D002               	goto	l3293
  3026                           
  3027                           ; BSR set to: 15
  3028  00F9B4  8E91               	bsf	3985,7,c	;volatile
  3029  00F9B6  D000               	goto	l3293
  3030  00F9B8                     l3293:
  3031                           
  3032                           ; BSR set to: 15
  3033  00F9B8  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3034  00F9BA  B4D8               	btfsc	status,2,c
  3035  00F9BC  D009               	goto	l3301
  3036                           
  3037                           ; BSR set to: 15
  3038  00F9BE  EC1F  F071         	call	_RtccWrOn	;wreg free
  3039  00F9C2  D006               	goto	l3301
  3040  00F9C4                     l3297:
  3041  00F9C4  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3042  00F9C6  A4D8               	btfss	status,2,c
  3043  00F9C8  D003               	goto	l3301
  3044  00F9CA  010F               	movlb	15	; () banked
  3045  00F9CC  9B3F               	bcf	63,5,b	;volatile
  3046                           
  3047                           ; BSR set to: 15
  3048  00F9CE  D000               	goto	l3301
  3049  00F9D0                     l3301:
  3050  00F9D0  5003               	movf	RtccWriteDate@di,w,c
  3051  00F9D2  B4D8               	btfsc	status,2,c
  3052  00F9D4  0012               	return	
  3053  00F9D6  9CF2               	bcf	intcon,6,c	;volatile
  3054  00F9D8  0012               	return	
  3055                           
  3056                           ;	Return value of _RtccWriteDate is never used
  3057  00F9DA  0012               	return		;funcret
  3058  00F9DC                     __end_of_RtccWriteDate:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           prodh	equ	0xFF4
  3065                           prodl	equ	0xFF3
  3066                           intcon	equ	0xFF2
  3067                           postinc0	equ	0xFEE
  3068                           wreg	equ	0xFE8
  3069                           indf1	equ	0xFE7
  3070                           postdec1	equ	0xFE5
  3071                           fsr1h	equ	0xFE2
  3072                           fsr1l	equ	0xFE1
  3073                           indf2	equ	0xFDF
  3074                           fsr2h	equ	0xFDA
  3075                           fsr2l	equ	0xFD9
  3076                           status	equ	0xFD8
  3077                           
  3078 ;; *************** function _RtccWrOn *****************
  3079 ;; Defined at:
  3080 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  data            2    0        unsigned int 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg, status,2
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_Write_RTC
  3104 ;;		_RtccWriteDate
  3105 ;;		_RtccWriteTime
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text11
  3110  00E23E                     __ptext11:
  3111                           	opt stack 0
  3112  00E23E                     _RtccWrOn:
  3113                           	opt stack 27
  3114                           
  3115                           ;incstack = 0
  3116  00E23E  9CF2               	bcf	intcon,6,c	;volatile
  3117  00E240  0E55               	movlw	85
  3118  00E242  6EA7               	movwf	4007,c	;volatile
  3119  00E244  0EAA               	movlw	170
  3120  00E246  6EA7               	movwf	4007,c	;volatile
  3121  00E248  010F               	movlb	15	; () banked
  3122  00E24A  8B3F               	bsf	63,5,b	;volatile
  3123                           
  3124                           ; BSR set to: 15
  3125  00E24C  8CF2               	bsf	intcon,6,c	;volatile
  3126                           
  3127                           ; BSR set to: 15
  3128  00E24E  0012               	return		;funcret
  3129  00E250                     __end_of_RtccWrOn:
  3130                           	opt stack 0
  3131                           tblptru	equ	0xFF8
  3132                           tblptrh	equ	0xFF7
  3133                           tblptrl	equ	0xFF6
  3134                           tablat	equ	0xFF5
  3135                           prodh	equ	0xFF4
  3136                           prodl	equ	0xFF3
  3137                           intcon	equ	0xFF2
  3138                           postinc0	equ	0xFEE
  3139                           wreg	equ	0xFE8
  3140                           indf1	equ	0xFE7
  3141                           postdec1	equ	0xFE5
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           indf2	equ	0xFDF
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function _cursor_displacement *****************
  3150 ;; Defined at:
  3151 ;;		line 168 in file "main.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;		None               void
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3169 ;;Total ram usage:        1 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    3
  3172 ;; This function calls:
  3173 ;;		_lcd_gotoxy
  3174 ;; This function is called by:
  3175 ;;		_button_number
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text12
  3180  00EA56                     __ptext12:
  3181                           	opt stack 0
  3182  00EA56                     _cursor_displacement:
  3183                           	opt stack 25
  3184                           
  3185                           ;main.c: 170: if(cursor_horizontal_position == 8){
  3186                           
  3187                           ; BSR set to: 15
  3188                           ;incstack = 0
  3189  00EA56  0E08               	movlw	8
  3190  00EA58  1833               	xorwf	_cursor_horizontal_position,w,c
  3191  00EA5A  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3192  00EA5C  A4D8               	btfss	status,2,c
  3193  00EA5E  D005               	goto	l3729
  3194                           
  3195                           ;main.c: 171: cursor_horizontal_position = 0;
  3196  00EA60  0E00               	movlw	0
  3197  00EA62  6E34               	movwf	_cursor_horizontal_position+1,c
  3198  00EA64  0E00               	movlw	0
  3199  00EA66  6E33               	movwf	_cursor_horizontal_position,c
  3200                           
  3201                           ;main.c: 172: }
  3202  00EA68  D00D               	goto	l225
  3203  00EA6A                     l3729:
  3204                           
  3205                           ;main.c: 173: else if (cursor_horizontal_position == 2 || cursor_horizontal_position == 
      +                          5){
  3206  00EA6A  0E02               	movlw	2
  3207  00EA6C  1833               	xorwf	_cursor_horizontal_position,w,c
  3208  00EA6E  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3209  00EA70  B4D8               	btfsc	status,2,c
  3210  00EA72  D005               	goto	l3733
  3211  00EA74  0E05               	movlw	5
  3212  00EA76  1833               	xorwf	_cursor_horizontal_position,w,c
  3213  00EA78  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3214  00EA7A  A4D8               	btfss	status,2,c
  3215  00EA7C  D003               	goto	l225
  3216  00EA7E                     l3733:
  3217                           
  3218                           ;main.c: 174: cursor_horizontal_position++;
  3219  00EA7E  4A33               	infsnz	_cursor_horizontal_position,f,c
  3220  00EA80  2A34               	incf	_cursor_horizontal_position+1,f,c
  3221  00EA82  D000               	goto	l225
  3222  00EA84                     l225:
  3223                           
  3224                           ;main.c: 175: }
  3225                           ;main.c: 177: cursor_horizontal_position++;
  3226  00EA84  4A33               	infsnz	_cursor_horizontal_position,f,c
  3227  00EA86  2A34               	incf	_cursor_horizontal_position+1,f,c
  3228                           
  3229                           ;main.c: 178: lcd_gotoxy(cursor_horizontal_position, 2);
  3230  00EA88  0E02               	movlw	2
  3231  00EA8A  6E05               	movwf	lcd_gotoxy@y,c
  3232  00EA8C  5033               	movf	_cursor_horizontal_position,w,c
  3233  00EA8E  EC7C  F071         	call	_lcd_gotoxy
  3234                           
  3235                           ;main.c: 179: _delay((unsigned long)((98)*(8000000/4000.0)));
  3236  00EA92  0EFF               	movlw	255
  3237  00EA94  6E08               	movwf	??_cursor_displacement& (0+255),c
  3238  00EA96  0E8A               	movlw	138
  3239  00EA98                     u2747:
  3240  00EA98  2EE8               	decfsz	wreg,f,c
  3241  00EA9A  D7FE               	goto	u2747
  3242  00EA9C  2E08               	decfsz	??_cursor_displacement& (0+255),f,c
  3243  00EA9E  D7FC               	goto	u2747
  3244  00EAA0  D000               	nop2	
  3245  00EAA2  0012               	return		;funcret
  3246  00EAA4                     __end_of_cursor_displacement:
  3247                           	opt stack 0
  3248                           tblptru	equ	0xFF8
  3249                           tblptrh	equ	0xFF7
  3250                           tblptrl	equ	0xFF6
  3251                           tablat	equ	0xFF5
  3252                           prodh	equ	0xFF4
  3253                           prodl	equ	0xFF3
  3254                           intcon	equ	0xFF2
  3255                           postinc0	equ	0xFEE
  3256                           wreg	equ	0xFE8
  3257                           indf1	equ	0xFE7
  3258                           postdec1	equ	0xFE5
  3259                           fsr1h	equ	0xFE2
  3260                           fsr1l	equ	0xFE1
  3261                           indf2	equ	0xFDF
  3262                           fsr2h	equ	0xFDA
  3263                           fsr2l	equ	0xFD9
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _button_hash *****************
  3267 ;; Defined at:
  3268 ;;		line 554 in file "main.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;		None               void
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    9
  3289 ;; This function calls:
  3290 ;;		_activity_home
  3291 ;;		_pin_input_validator
  3292 ;;		_pin_set
  3293 ;;		_reset_home_callback
  3294 ;; This function is called by:
  3295 ;;		_keyboard_control
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text13
  3300  00E568                     __ptext13:
  3301                           	opt stack 0
  3302  00E568                     _button_hash:
  3303                           	opt stack 20
  3304                           
  3305                           ;main.c: 556: reset_home_callback();
  3306                           
  3307                           ;incstack = 0
  3308  00E568  ECF7  F070         	call	_reset_home_callback	;wreg free
  3309                           
  3310                           ;main.c: 558: if(activity == 1){
  3311  00E56C  0429               	decf	_activity,w,c
  3312  00E56E  102A               	iorwf	_activity+1,w,c
  3313  00E570  A4D8               	btfss	status,2,c
  3314  00E572  D003               	goto	l4095
  3315                           
  3316                           ;main.c: 559: pin_input_validator();
  3317  00E574  ECB7  F071         	call	_pin_input_validator	;wreg free
  3318                           
  3319                           ;main.c: 560: }
  3320  00E578  0012               	return	
  3321  00E57A                     l4095:
  3322                           
  3323                           ;main.c: 561: else if(activity == 6){
  3324  00E57A  0E06               	movlw	6
  3325  00E57C  1829               	xorwf	_activity,w,c
  3326  00E57E  102A               	iorwf	_activity+1,w,c
  3327  00E580  A4D8               	btfss	status,2,c
  3328  00E582  D003               	goto	l4099
  3329                           
  3330                           ;main.c: 562: pin_set();
  3331  00E584  EC3F  F071         	call	_pin_set	;wreg free
  3332                           
  3333                           ;main.c: 563: }
  3334  00E588  0012               	return	
  3335  00E58A                     l4099:
  3336                           
  3337                           ;main.c: 564: else if(activity == 10 || activity == 11){
  3338  00E58A  0E0A               	movlw	10
  3339  00E58C  1829               	xorwf	_activity,w,c
  3340  00E58E  102A               	iorwf	_activity+1,w,c
  3341  00E590  B4D8               	btfsc	status,2,c
  3342  00E592  D005               	goto	l4103
  3343  00E594  0E0B               	movlw	11
  3344  00E596  1829               	xorwf	_activity,w,c
  3345  00E598  102A               	iorwf	_activity+1,w,c
  3346  00E59A  A4D8               	btfss	status,2,c
  3347  00E59C  0012               	return	
  3348  00E59E                     l4103:
  3349                           
  3350                           ;main.c: 565: activity_home();
  3351  00E59E  ECA2  F071         	call	_activity_home	;wreg free
  3352  00E5A2  0012               	return	
  3353  00E5A4  0012               	return		;funcret
  3354  00E5A6                     __end_of_button_hash:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           tblptrh	equ	0xFF7
  3358                           tblptrl	equ	0xFF6
  3359                           tablat	equ	0xFF5
  3360                           prodh	equ	0xFF4
  3361                           prodl	equ	0xFF3
  3362                           intcon	equ	0xFF2
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           indf1	equ	0xFE7
  3366                           postdec1	equ	0xFE5
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           indf2	equ	0xFDF
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _pin_set *****************
  3375 ;; Defined at:
  3376 ;;		line 40 in file "Unimic/unmc_01/sources/pin.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;		None               void
  3383 ;; Registers used:
  3384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    7
  3397 ;; This function calls:
  3398 ;;		_activity_home
  3399 ;;		_strcpy
  3400 ;; This function is called by:
  3401 ;;		_button_hash
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text14
  3406  00E27E                     __ptext14:
  3407                           	opt stack 0
  3408  00E27E                     _pin_set:
  3409                           	opt stack 21
  3410                           
  3411                           ;pin.c: 42: strcpy(pin, pin_input);
  3412                           
  3413                           ;incstack = 0
  3414  00E27E  0E9A               	movlw	low _pin
  3415  00E280  6E01               	movwf	strcpy@to,c
  3416  00E282  0E00               	movlw	high _pin
  3417  00E284  6E02               	movwf	strcpy@to+1,c
  3418  00E286  0E9F               	movlw	low _pin_input
  3419  00E288  6E03               	movwf	strcpy@from,c
  3420  00E28A  0E00               	movlw	high _pin_input
  3421  00E28C  6E04               	movwf	strcpy@from+1,c
  3422  00E28E  ECDB  F073         	call	_strcpy	;wreg free
  3423                           
  3424                           ;pin.c: 43: activity_home();
  3425  00E292  ECA2  F071         	call	_activity_home	;wreg free
  3426  00E296  0012               	return		;funcret
  3427  00E298                     __end_of_pin_set:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           prodh	equ	0xFF4
  3434                           prodl	equ	0xFF3
  3435                           intcon	equ	0xFF2
  3436                           postinc0	equ	0xFEE
  3437                           wreg	equ	0xFE8
  3438                           indf1	equ	0xFE7
  3439                           postdec1	equ	0xFE5
  3440                           fsr1h	equ	0xFE2
  3441                           fsr1l	equ	0xFE1
  3442                           indf2	equ	0xFDF
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function _pin_input_validator *****************
  3448 ;; Defined at:
  3449 ;;		line 47 in file "Unimic/unmc_01/sources/pin.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;		None               void
  3456 ;; Registers used:
  3457 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    8
  3470 ;; This function calls:
  3471 ;;		_activity_menu
  3472 ;;		_activity_pin
  3473 ;;		_strcmp
  3474 ;; This function is called by:
  3475 ;;		_button_hash
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text15
  3480  00E36E                     __ptext15:
  3481                           	opt stack 0
  3482  00E36E                     _pin_input_validator:
  3483                           	opt stack 20
  3484                           
  3485                           ;pin.c: 49: if( strcmp(pin, pin_input) == 0 ){
  3486                           
  3487                           ;incstack = 0
  3488  00E36E  0E9A               	movlw	low _pin
  3489  00E370  6E01               	movwf	strcmp@s1,c
  3490  00E372  0E00               	movlw	high _pin
  3491  00E374  6E02               	movwf	strcmp@s1+1,c
  3492  00E376  0E9F               	movlw	low _pin_input
  3493  00E378  6E03               	movwf	strcmp@s2,c
  3494  00E37A  0E00               	movlw	high _pin_input
  3495  00E37C  6E04               	movwf	strcmp@s2+1,c
  3496  00E37E  EC04  F075         	call	_strcmp	;wreg free
  3497  00E382  5001               	movf	?_strcmp,w,c
  3498  00E384  1002               	iorwf	?_strcmp+1,w,c
  3499  00E386  A4D8               	btfss	status,2,c
  3500  00E388  D003               	goto	l3937
  3501                           
  3502                           ;pin.c: 50: activity_menu();
  3503  00E38A  EC01  F079         	call	_activity_menu	;wreg free
  3504                           
  3505                           ;pin.c: 51: }
  3506  00E38E  0012               	return	
  3507  00E390                     l3937:
  3508                           
  3509                           ;pin.c: 52: else {
  3510                           ;pin.c: 53: activity_pin();
  3511  00E390  ECB6  F074         	call	_activity_pin	;wreg free
  3512  00E394  0012               	return	
  3513  00E396  0012               	return		;funcret
  3514  00E398                     __end_of_pin_input_validator:
  3515                           	opt stack 0
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           prodh	equ	0xFF4
  3521                           prodl	equ	0xFF3
  3522                           intcon	equ	0xFF2
  3523                           postinc0	equ	0xFEE
  3524                           wreg	equ	0xFE8
  3525                           indf1	equ	0xFE7
  3526                           postdec1	equ	0xFE5
  3527                           fsr1h	equ	0xFE2
  3528                           fsr1l	equ	0xFE1
  3529                           indf2	equ	0xFDF
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _strcmp *****************
  3535 ;; Defined at:
  3536 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  3539 ;;		 -> pin(5), 
  3540 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  3541 ;;		 -> pin_input(5), 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  r               1    5[COMRAM] char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  2    0[COMRAM] int 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;Total ram usage:        6 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_pin_input_validator
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text16
  3567  00EA08                     __ptext16:
  3568                           	opt stack 0
  3569  00EA08                     _strcmp:
  3570                           	opt stack 27
  3571                           
  3572                           ;incstack = 0
  3573  00EA08  D005               	goto	l3715
  3574  00EA0A                     l3713:
  3575  00EA0A  4A01               	infsnz	strcmp@s1,f,c
  3576  00EA0C  2A02               	incf	strcmp@s1+1,f,c
  3577  00EA0E  4A03               	infsnz	strcmp@s2,f,c
  3578  00EA10  2A04               	incf	strcmp@s2+1,f,c
  3579  00EA12  D000               	goto	l3715
  3580  00EA14                     l3715:
  3581  00EA14  C001  FFD9         	movff	strcmp@s1,fsr2l
  3582  00EA18  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  3583  00EA1C  50DF               	movf	indf2,w,c
  3584  00EA1E  6E05               	movwf	??_strcmp& (0+255),c
  3585  00EA20  C003  FFD9         	movff	strcmp@s2,fsr2l
  3586  00EA24  C004  FFDA         	movff	strcmp@s2+1,fsr2h
  3587  00EA28  50DF               	movf	indf2,w,c
  3588  00EA2A  0800               	sublw	0
  3589  00EA2C  2405               	addwf	??_strcmp,w,c
  3590  00EA2E  6E06               	movwf	strcmp@r,c
  3591  00EA30  5006               	movf	strcmp@r,w,c
  3592  00EA32  A4D8               	btfss	status,2,c
  3593  00EA34  D009               	goto	l3719
  3594  00EA36  C001  FFD9         	movff	strcmp@s1,fsr2l
  3595  00EA3A  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  3596  00EA3E  50DF               	movf	indf2,w,c
  3597  00EA40  B4D8               	btfsc	status,2,c
  3598  00EA42  D002               	goto	l3719
  3599  00EA44  D7E2               	goto	l3713
  3600  00EA46  D000               	goto	l3719
  3601  00EA48                     l3719:
  3602  00EA48  5006               	movf	strcmp@r,w,c
  3603  00EA4A  6E01               	movwf	?_strcmp,c
  3604  00EA4C  6A02               	clrf	?_strcmp+1,c
  3605  00EA4E  BE01               	btfsc	?_strcmp,7,c
  3606  00EA50  0602               	decf	?_strcmp+1,f,c
  3607  00EA52  0012               	return	
  3608  00EA54  0012               	return		;funcret
  3609  00EA56                     __end_of_strcmp:
  3610                           	opt stack 0
  3611                           tblptru	equ	0xFF8
  3612                           tblptrh	equ	0xFF7
  3613                           tblptrl	equ	0xFF6
  3614                           tablat	equ	0xFF5
  3615                           prodh	equ	0xFF4
  3616                           prodl	equ	0xFF3
  3617                           intcon	equ	0xFF2
  3618                           postinc0	equ	0xFEE
  3619                           wreg	equ	0xFE8
  3620                           indf1	equ	0xFE7
  3621                           postdec1	equ	0xFE5
  3622                           fsr1h	equ	0xFE2
  3623                           fsr1l	equ	0xFE1
  3624                           indf2	equ	0xFDF
  3625                           fsr2h	equ	0xFDA
  3626                           fsr2l	equ	0xFD9
  3627                           status	equ	0xFD8
  3628                           
  3629 ;; *************** function _button_asterisk *****************
  3630 ;; Defined at:
  3631 ;;		line 547 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;		None               void
  3638 ;; Registers used:
  3639 ;;		cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    1
  3652 ;; This function calls:
  3653 ;;		_reset_home_callback
  3654 ;; This function is called by:
  3655 ;;		_keyboard_control
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text17
  3660  00E1E8                     __ptext17:
  3661                           	opt stack 0
  3662  00E1E8                     _button_asterisk:
  3663                           	opt stack 28
  3664                           
  3665                           ;main.c: 549: reset_home_callback();
  3666                           
  3667                           ;incstack = 0
  3668  00E1E8  ECF7  F070         	call	_reset_home_callback	;wreg free
  3669  00E1EC  0012               	return		;funcret
  3670  00E1EE                     __end_of_button_asterisk:
  3671                           	opt stack 0
  3672                           tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           prodh	equ	0xFF4
  3677                           prodl	equ	0xFF3
  3678                           intcon	equ	0xFF2
  3679                           postinc0	equ	0xFEE
  3680                           wreg	equ	0xFE8
  3681                           indf1	equ	0xFE7
  3682                           postdec1	equ	0xFE5
  3683                           fsr1h	equ	0xFE2
  3684                           fsr1l	equ	0xFE1
  3685                           indf2	equ	0xFDF
  3686                           fsr2h	equ	0xFDA
  3687                           fsr2l	equ	0xFD9
  3688                           status	equ	0xFD8
  3689                           
  3690 ;; *************** function _button_D *****************
  3691 ;; Defined at:
  3692 ;;		line 539 in file "main.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;		None               void
  3699 ;; Registers used:
  3700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;Total ram usage:        0 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    7
  3713 ;; This function calls:
  3714 ;;		_activity_home
  3715 ;;		_reset_home_callback
  3716 ;; This function is called by:
  3717 ;;		_keyboard_control
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text18
  3722  00E1F8                     __ptext18:
  3723                           	opt stack 0
  3724  00E1F8                     _button_D:
  3725                           	opt stack 22
  3726                           
  3727                           ;main.c: 542: reset_home_callback();
  3728                           
  3729                           ;incstack = 0
  3730  00E1F8  ECF7  F070         	call	_reset_home_callback	;wreg free
  3731                           
  3732                           ;main.c: 543: activity_home();
  3733  00E1FC  ECA2  F071         	call	_activity_home	;wreg free
  3734  00E200  0012               	return		;funcret
  3735  00E202                     __end_of_button_D:
  3736                           	opt stack 0
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           intcon	equ	0xFF2
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           indf1	equ	0xFE7
  3747                           postdec1	equ	0xFE5
  3748                           fsr1h	equ	0xFE2
  3749                           fsr1l	equ	0xFE1
  3750                           indf2	equ	0xFDF
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function _button_C *****************
  3756 ;; Defined at:
  3757 ;;		line 528 in file "main.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;		None               void
  3764 ;; Registers used:
  3765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;Total ram usage:        0 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    8
  3778 ;; This function calls:
  3779 ;;		_activity_menu
  3780 ;;		_reset_home_callback
  3781 ;; This function is called by:
  3782 ;;		_keyboard_control
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text19
  3787  00E298                     __ptext19:
  3788                           	opt stack 0
  3789  00E298                     _button_C:
  3790                           	opt stack 21
  3791                           
  3792                           ;main.c: 531: reset_home_callback();
  3793                           
  3794                           ;incstack = 0
  3795  00E298  ECF7  F070         	call	_reset_home_callback	;wreg free
  3796                           
  3797                           ;main.c: 533: if(activity != 0 && activity != 1){
  3798  00E29C  5029               	movf	_activity,w,c
  3799  00E29E  102A               	iorwf	_activity+1,w,c
  3800  00E2A0  B4D8               	btfsc	status,2,c
  3801  00E2A2  0012               	return	
  3802  00E2A4  0429               	decf	_activity,w,c
  3803  00E2A6  102A               	iorwf	_activity+1,w,c
  3804  00E2A8  B4D8               	btfsc	status,2,c
  3805  00E2AA  0012               	return	
  3806                           
  3807                           ;main.c: 534: activity_menu();
  3808  00E2AC  EC01  F079         	call	_activity_menu	;wreg free
  3809  00E2B0  0012               	return	
  3810  00E2B2  0012               	return		;funcret
  3811  00E2B4                     __end_of_button_C:
  3812                           	opt stack 0
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           prodh	equ	0xFF4
  3818                           prodl	equ	0xFF3
  3819                           intcon	equ	0xFF2
  3820                           postinc0	equ	0xFEE
  3821                           wreg	equ	0xFE8
  3822                           indf1	equ	0xFE7
  3823                           postdec1	equ	0xFE5
  3824                           fsr1h	equ	0xFE2
  3825                           fsr1l	equ	0xFE1
  3826                           indf2	equ	0xFDF
  3827                           fsr2h	equ	0xFDA
  3828                           fsr2l	equ	0xFD9
  3829                           status	equ	0xFD8
  3830                           
  3831 ;; *************** function _activity_menu *****************
  3832 ;; Defined at:
  3833 ;;		line 117 in file "main.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;		None               void
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3851 ;;Total ram usage:        0 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    7
  3854 ;; This function calls:
  3855 ;;		_lcd_init
  3856 ;;		_lcd_write
  3857 ;;		_menu_selector_0
  3858 ;; This function is called by:
  3859 ;;		_button_C
  3860 ;;		_pin_input_validator
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text20
  3865  00F202                     __ptext20:
  3866                           	opt stack 0
  3867  00F202                     _activity_menu:
  3868                           	opt stack 20
  3869                           
  3870                           ;main.c: 119: activity = 2;
  3871                           
  3872                           ;incstack = 0
  3873  00F202  0E00               	movlw	0
  3874  00F204  6E2A               	movwf	_activity+1,c
  3875  00F206  0E02               	movlw	2
  3876  00F208  6E29               	movwf	_activity,c
  3877                           
  3878                           ;main.c: 120: lcd_init();
  3879  00F20A  EC3F  F078         	call	_lcd_init	;wreg free
  3880                           
  3881                           ;main.c: 121: lcd_write(2,1,"Activar");
  3882  00F20E  0E00               	movlw	0
  3883  00F210  6E0C               	movwf	lcd_write@column+1,c
  3884  00F212  0E02               	movlw	2
  3885  00F214  6E0B               	movwf	lcd_write@column,c
  3886  00F216  0E00               	movlw	0
  3887  00F218  6E0E               	movwf	lcd_write@row+1,c
  3888  00F21A  0E01               	movlw	1
  3889  00F21C  6E0D               	movwf	lcd_write@row,c
  3890  00F21E  0E6B               	movlw	low STR_2
  3891  00F220  6E0F               	movwf	lcd_write@string,c
  3892  00F222  0EFF               	movlw	high STR_2
  3893  00F224  6E10               	movwf	lcd_write@string+1,c
  3894  00F226  EC33  F071         	call	_lcd_write	;wreg free
  3895                           
  3896                           ;main.c: 122: lcd_write(2,2,"Reloj");
  3897  00F22A  0E00               	movlw	0
  3898  00F22C  6E0C               	movwf	lcd_write@column+1,c
  3899  00F22E  0E02               	movlw	2
  3900  00F230  6E0B               	movwf	lcd_write@column,c
  3901  00F232  0E00               	movlw	0
  3902  00F234  6E0E               	movwf	lcd_write@row+1,c
  3903  00F236  0E02               	movlw	2
  3904  00F238  6E0D               	movwf	lcd_write@row,c
  3905  00F23A  0EBE               	movlw	low STR_3
  3906  00F23C  6E0F               	movwf	lcd_write@string,c
  3907  00F23E  0EFF               	movlw	high STR_3
  3908  00F240  6E10               	movwf	lcd_write@string+1,c
  3909  00F242  EC33  F071         	call	_lcd_write	;wreg free
  3910                           
  3911                           ;main.c: 123: lcd_write(10,1,"Pin");
  3912  00F246  0E00               	movlw	0
  3913  00F248  6E0C               	movwf	lcd_write@column+1,c
  3914  00F24A  0E0A               	movlw	10
  3915  00F24C  6E0B               	movwf	lcd_write@column,c
  3916  00F24E  0E00               	movlw	0
  3917  00F250  6E0E               	movwf	lcd_write@row+1,c
  3918  00F252  0E01               	movlw	1
  3919  00F254  6E0D               	movwf	lcd_write@row,c
  3920  00F256  0EE6               	movlw	low STR_4
  3921  00F258  6E0F               	movwf	lcd_write@string,c
  3922  00F25A  0EFF               	movlw	high STR_4
  3923  00F25C  6E10               	movwf	lcd_write@string+1,c
  3924  00F25E  EC33  F071         	call	_lcd_write	;wreg free
  3925                           
  3926                           ;main.c: 124: lcd_write(10,2,"Sirena");
  3927  00F262  0E00               	movlw	0
  3928  00F264  6E0C               	movwf	lcd_write@column+1,c
  3929  00F266  0E0A               	movlw	10
  3930  00F268  6E0B               	movwf	lcd_write@column,c
  3931  00F26A  0E00               	movlw	0
  3932  00F26C  6E0E               	movwf	lcd_write@row+1,c
  3933  00F26E  0E02               	movlw	2
  3934  00F270  6E0D               	movwf	lcd_write@row,c
  3935  00F272  0EAB               	movlw	low STR_5
  3936  00F274  6E0F               	movwf	lcd_write@string,c
  3937  00F276  0EFF               	movlw	high STR_5
  3938  00F278  6E10               	movwf	lcd_write@string+1,c
  3939  00F27A  EC33  F071         	call	_lcd_write	;wreg free
  3940                           
  3941                           ;main.c: 125: menu_selector_0();
  3942  00F27E  ECF3  F072         	call	_menu_selector_0	;wreg free
  3943  00F282  0012               	return		;funcret
  3944  00F284                     __end_of_activity_menu:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           postinc0	equ	0xFEE
  3954                           wreg	equ	0xFE8
  3955                           indf1	equ	0xFE7
  3956                           postdec1	equ	0xFE5
  3957                           fsr1h	equ	0xFE2
  3958                           fsr1l	equ	0xFE1
  3959                           indf2	equ	0xFDF
  3960                           fsr2h	equ	0xFDA
  3961                           fsr2l	equ	0xFD9
  3962                           status	equ	0xFD8
  3963                           
  3964 ;; *************** function _button_B *****************
  3965 ;; Defined at:
  3966 ;;		line 490 in file "main.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;		None               void
  3973 ;; Registers used:
  3974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3984 ;;Total ram usage:        2 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    9
  3987 ;; This function calls:
  3988 ;;		_button_B_menu
  3989 ;;		_button_B_submenu_activation
  3990 ;;		_button_B_submenu_date_and_time_config
  3991 ;;		_button_B_submenu_pin_config
  3992 ;;		_button_B_submenu_siren_config
  3993 ;;		_button_B_submenu_siren_tone
  3994 ;;		_button_B_submenu_siren_volume
  3995 ;;		_reset_home_callback
  3996 ;; This function is called by:
  3997 ;;		_keyboard_control
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text21
  4002  00EF1C                     __ptext21:
  4003                           	opt stack 0
  4004  00EF1C                     _button_B:
  4005                           	opt stack 20
  4006                           
  4007                           ;main.c: 492: reset_home_callback();
  4008                           
  4009                           ;incstack = 0
  4010  00EF1C  ECF7  F070         	call	_reset_home_callback	;wreg free
  4011                           
  4012                           ;main.c: 494: switch(activity){
  4013  00EF20  D015               	goto	l4069
  4014  00EF22                     l4053:
  4015                           
  4016                           ;main.c: 497: button_B_menu();
  4017  00EF22  EC22  F074         	call	_button_B_menu	;wreg free
  4018                           
  4019                           ;main.c: 498: break;
  4020  00EF26  0012               	return	
  4021  00EF28                     l4055:
  4022                           
  4023                           ;main.c: 501: button_B_submenu_date_and_time_config();
  4024  00EF28  ECFA  F071         	call	_button_B_submenu_date_and_time_config	;wreg free
  4025                           
  4026                           ;main.c: 502: break;
  4027  00EF2C  0012               	return	
  4028  00EF2E                     l4057:
  4029                           
  4030                           ;main.c: 505: button_B_submenu_activation();
  4031  00EF2E  EC5D  F072         	call	_button_B_submenu_activation	;wreg free
  4032                           
  4033                           ;main.c: 506: break;
  4034  00EF32  0012               	return	
  4035  00EF34                     l4059:
  4036                           
  4037                           ;main.c: 509: button_B_submenu_pin_config();
  4038  00EF34  EC43  F072         	call	_button_B_submenu_pin_config	;wreg free
  4039                           
  4040                           ;main.c: 510: break;
  4041  00EF38  0012               	return	
  4042  00EF3A                     l4061:
  4043                           
  4044                           ;main.c: 513: button_B_submenu_siren_config();
  4045  00EF3A  EC12  F072         	call	_button_B_submenu_siren_config	;wreg free
  4046                           
  4047                           ;main.c: 514: break;
  4048  00EF3E  0012               	return	
  4049  00EF40                     l4063:
  4050                           
  4051                           ;main.c: 517: button_B_submenu_siren_volume();
  4052  00EF40  EC97  F072         	call	_button_B_submenu_siren_volume	;wreg free
  4053                           
  4054                           ;main.c: 518: break;
  4055  00EF44  0012               	return	
  4056  00EF46                     l4065:
  4057                           
  4058                           ;main.c: 521: button_B_submenu_siren_tone();
  4059  00EF46  EC7A  F072         	call	_button_B_submenu_siren_tone	;wreg free
  4060                           
  4061                           ;main.c: 524: }
  4062                           
  4063                           ;main.c: 522: break;
  4064  00EF4A  0012               	return	
  4065  00EF4C                     l4069:
  4066  00EF4C  C029  F026         	movff	_activity,??_button_B
  4067  00EF50  C02A  F027         	movff	_activity+1,??_button_B+1
  4068                           
  4069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4070                           ; Switch size 1, requested type "space"
  4071                           ; Number of cases is 1, Range of values is 0 to 0
  4072                           ; switch strategies available:
  4073                           ; Name         Instructions Cycles
  4074                           ; simple_byte            4     3 (average)
  4075                           ;	Chosen strategy is simple_byte
  4076  00EF54  5027               	movf	??_button_B+1,w,c
  4077  00EF56  0A00               	xorlw	0	; case 0
  4078  00EF58  A4D8               	btfss	status,2,c
  4079  00EF5A  0012               	return	
  4080                           
  4081                           ; Switch size 1, requested type "space"
  4082                           ; Number of cases is 7, Range of values is 2 to 9
  4083                           ; switch strategies available:
  4084                           ; Name         Instructions Cycles
  4085                           ; simple_byte           22    12 (average)
  4086                           ;	Chosen strategy is simple_byte
  4087  00EF5C  5026               	movf	??_button_B,w,c
  4088  00EF5E  0A02               	xorlw	2	; case 2
  4089  00EF60  B4D8               	btfsc	status,2,c
  4090  00EF62  D7DF               	goto	l4053
  4091  00EF64  0A01               	xorlw	1	; case 3
  4092  00EF66  B4D8               	btfsc	status,2,c
  4093  00EF68  D7DF               	goto	l4055
  4094  00EF6A  0A07               	xorlw	7	; case 4
  4095  00EF6C  B4D8               	btfsc	status,2,c
  4096  00EF6E  D7DF               	goto	l4057
  4097  00EF70  0A01               	xorlw	1	; case 5
  4098  00EF72  B4D8               	btfsc	status,2,c
  4099  00EF74  D7DF               	goto	l4059
  4100  00EF76  0A02               	xorlw	2	; case 7
  4101  00EF78  B4D8               	btfsc	status,2,c
  4102  00EF7A  D7DF               	goto	l4061
  4103  00EF7C  0A0F               	xorlw	15	; case 8
  4104  00EF7E  B4D8               	btfsc	status,2,c
  4105  00EF80  D7DF               	goto	l4063
  4106  00EF82  0A01               	xorlw	1	; case 9
  4107  00EF84  A4D8               	btfss	status,2,c
  4108  00EF86  0012               	return	
  4109  00EF88  D7DE               	goto	l4065
  4110  00EF8A  0012               	return		;funcret
  4111  00EF8C                     __end_of_button_B:
  4112                           	opt stack 0
  4113                           tblptru	equ	0xFF8
  4114                           tblptrh	equ	0xFF7
  4115                           tblptrl	equ	0xFF6
  4116                           tablat	equ	0xFF5
  4117                           prodh	equ	0xFF4
  4118                           prodl	equ	0xFF3
  4119                           intcon	equ	0xFF2
  4120                           postinc0	equ	0xFEE
  4121                           wreg	equ	0xFE8
  4122                           indf1	equ	0xFE7
  4123                           postdec1	equ	0xFE5
  4124                           fsr1h	equ	0xFE2
  4125                           fsr1l	equ	0xFE1
  4126                           indf2	equ	0xFDF
  4127                           fsr2h	equ	0xFDA
  4128                           fsr2l	equ	0xFD9
  4129                           status	equ	0xFD8
  4130                           
  4131 ;; *************** function _button_B_submenu_siren_volume *****************
  4132 ;; Defined at:
  4133 ;;		line 438 in file "main.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;		None
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;		None               void
  4140 ;; Registers used:
  4141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;Total ram usage:        2 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    7
  4154 ;; This function calls:
  4155 ;;		_activity_home
  4156 ;; This function is called by:
  4157 ;;		_button_B
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text22
  4162  00E52E                     __ptext22:
  4163                           	opt stack 0
  4164  00E52E                     _button_B_submenu_siren_volume:
  4165                           	opt stack 21
  4166                           
  4167                           ;main.c: 440: switch(submenu_selected){
  4168                           
  4169                           ;incstack = 0
  4170  00E52E  D009               	goto	l3895
  4171  00E530                     l3889:
  4172                           
  4173                           ;main.c: 443: alarm_volume = 0;
  4174  00E530  0E00               	movlw	0
  4175  00E532  6E2E               	movwf	_alarm_volume+1,c
  4176  00E534  0E00               	movlw	0
  4177  00E536  D003               	goto	L1
  4178  00E538                     l3891:
  4179                           
  4180                           ;main.c: 447: alarm_volume = 1;
  4181  00E538  0E00               	movlw	0
  4182  00E53A  6E2E               	movwf	_alarm_volume+1,c
  4183  00E53C  0E01               	movlw	1
  4184  00E53E                     L1:
  4185  00E53E  6E2D               	movwf	_alarm_volume,c
  4186                           
  4187                           ;main.c: 450: }
  4188                           
  4189                           ;main.c: 448: break;
  4190  00E540  D010               	goto	l3897
  4191  00E542                     l3895:
  4192  00E542  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_volume
  4193  00E546  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_volume+1
  4194                           
  4195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4196                           ; Switch size 1, requested type "space"
  4197                           ; Number of cases is 1, Range of values is 0 to 0
  4198                           ; switch strategies available:
  4199                           ; Name         Instructions Cycles
  4200                           ; simple_byte            4     3 (average)
  4201                           ;	Chosen strategy is simple_byte
  4202  00E54A  5012               	movf	??_button_B_submenu_siren_volume+1,w,c
  4203  00E54C  0A00               	xorlw	0	; case 0
  4204  00E54E  A4D8               	btfss	status,2,c
  4205  00E550  D008               	goto	l3897
  4206                           
  4207                           ; Switch size 1, requested type "space"
  4208                           ; Number of cases is 2, Range of values is 0 to 1
  4209                           ; switch strategies available:
  4210                           ; Name         Instructions Cycles
  4211                           ; simple_byte            7     4 (average)
  4212                           ;	Chosen strategy is simple_byte
  4213  00E552  5011               	movf	??_button_B_submenu_siren_volume,w,c
  4214  00E554  0A00               	xorlw	0	; case 0
  4215  00E556  B4D8               	btfsc	status,2,c
  4216  00E558  D7EB               	goto	l3889
  4217  00E55A  0A01               	xorlw	1	; case 1
  4218  00E55C  B4D8               	btfsc	status,2,c
  4219  00E55E  D7EC               	goto	l3891
  4220  00E560  D000               	goto	l3897
  4221  00E562                     l3897:
  4222                           
  4223                           ;main.c: 452: activity_home();
  4224  00E562  ECA2  F071         	call	_activity_home	;wreg free
  4225  00E566  0012               	return		;funcret
  4226  00E568                     __end_of_button_B_submenu_siren_volume:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           prodh	equ	0xFF4
  4233                           prodl	equ	0xFF3
  4234                           intcon	equ	0xFF2
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           indf1	equ	0xFE7
  4238                           postdec1	equ	0xFE5
  4239                           fsr1h	equ	0xFE2
  4240                           fsr1l	equ	0xFE1
  4241                           indf2	equ	0xFDF
  4242                           fsr2h	equ	0xFDA
  4243                           fsr2l	equ	0xFD9
  4244                           status	equ	0xFD8
  4245                           
  4246 ;; *************** function _button_B_submenu_siren_tone *****************
  4247 ;; Defined at:
  4248 ;;		line 456 in file "main.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;		None               void
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;Total ram usage:        2 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    7
  4269 ;; This function calls:
  4270 ;;		_activity_home
  4271 ;; This function is called by:
  4272 ;;		_button_B
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text23
  4277  00E4F4                     __ptext23:
  4278                           	opt stack 0
  4279  00E4F4                     _button_B_submenu_siren_tone:
  4280                           	opt stack 21
  4281                           
  4282                           ;main.c: 458: switch(submenu_selected){
  4283                           
  4284                           ;incstack = 0
  4285  00E4F4  D009               	goto	l3911
  4286  00E4F6                     l3905:
  4287                           
  4288                           ;main.c: 461: alarm_tone = 0;
  4289  00E4F6  0E00               	movlw	0
  4290  00E4F8  6E2C               	movwf	_alarm_tone+1,c
  4291  00E4FA  0E00               	movlw	0
  4292  00E4FC  D003               	goto	L2
  4293  00E4FE                     l3907:
  4294                           
  4295                           ;main.c: 465: alarm_tone = 1;
  4296  00E4FE  0E00               	movlw	0
  4297  00E500  6E2C               	movwf	_alarm_tone+1,c
  4298  00E502  0E01               	movlw	1
  4299  00E504                     L2:
  4300  00E504  6E2B               	movwf	_alarm_tone,c
  4301                           
  4302                           ;main.c: 468: }
  4303                           
  4304                           ;main.c: 466: break;
  4305  00E506  D010               	goto	l3913
  4306  00E508                     l3911:
  4307  00E508  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_tone
  4308  00E50C  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_tone+1
  4309                           
  4310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4311                           ; Switch size 1, requested type "space"
  4312                           ; Number of cases is 1, Range of values is 0 to 0
  4313                           ; switch strategies available:
  4314                           ; Name         Instructions Cycles
  4315                           ; simple_byte            4     3 (average)
  4316                           ;	Chosen strategy is simple_byte
  4317  00E510  5012               	movf	??_button_B_submenu_siren_tone+1,w,c
  4318  00E512  0A00               	xorlw	0	; case 0
  4319  00E514  A4D8               	btfss	status,2,c
  4320  00E516  D008               	goto	l3913
  4321                           
  4322                           ; Switch size 1, requested type "space"
  4323                           ; Number of cases is 2, Range of values is 0 to 1
  4324                           ; switch strategies available:
  4325                           ; Name         Instructions Cycles
  4326                           ; simple_byte            7     4 (average)
  4327                           ;	Chosen strategy is simple_byte
  4328  00E518  5011               	movf	??_button_B_submenu_siren_tone,w,c
  4329  00E51A  0A00               	xorlw	0	; case 0
  4330  00E51C  B4D8               	btfsc	status,2,c
  4331  00E51E  D7EB               	goto	l3905
  4332  00E520  0A01               	xorlw	1	; case 1
  4333  00E522  B4D8               	btfsc	status,2,c
  4334  00E524  D7EC               	goto	l3907
  4335  00E526  D000               	goto	l3913
  4336  00E528                     l3913:
  4337                           
  4338                           ;main.c: 470: activity_home();
  4339  00E528  ECA2  F071         	call	_activity_home	;wreg free
  4340  00E52C  0012               	return		;funcret
  4341  00E52E                     __end_of_button_B_submenu_siren_tone:
  4342                           	opt stack 0
  4343                           tblptru	equ	0xFF8
  4344                           tblptrh	equ	0xFF7
  4345                           tblptrl	equ	0xFF6
  4346                           tablat	equ	0xFF5
  4347                           prodh	equ	0xFF4
  4348                           prodl	equ	0xFF3
  4349                           intcon	equ	0xFF2
  4350                           postinc0	equ	0xFEE
  4351                           wreg	equ	0xFE8
  4352                           indf1	equ	0xFE7
  4353                           postdec1	equ	0xFE5
  4354                           fsr1h	equ	0xFE2
  4355                           fsr1l	equ	0xFE1
  4356                           indf2	equ	0xFDF
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function _button_B_submenu_siren_config *****************
  4362 ;; Defined at:
  4363 ;;		line 422 in file "main.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;		None               void
  4370 ;; Registers used:
  4371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4381 ;;Total ram usage:        2 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    8
  4384 ;; This function calls:
  4385 ;;		_activity_submenu_siren_tone
  4386 ;;		_activity_submenu_siren_volume
  4387 ;; This function is called by:
  4388 ;;		_button_B
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text24
  4393  00E424                     __ptext24:
  4394                           	opt stack 0
  4395  00E424                     _button_B_submenu_siren_config:
  4396                           	opt stack 20
  4397                           
  4398                           ;main.c: 424: switch(submenu_selected){
  4399                           
  4400                           ;incstack = 0
  4401  00E424  D006               	goto	l3881
  4402  00E426                     l3875:
  4403                           
  4404                           ;main.c: 427: activity_submenu_siren_volume();
  4405  00E426  EC24  F077         	call	_activity_submenu_siren_volume	;wreg free
  4406                           
  4407                           ;main.c: 428: break;
  4408  00E42A  0012               	return	
  4409  00E42C                     l3877:
  4410                           
  4411                           ;main.c: 431: activity_submenu_siren_tone();
  4412  00E42C  ECF1  F076         	call	_activity_submenu_siren_tone	;wreg free
  4413                           
  4414                           ;main.c: 434: }
  4415                           
  4416                           ;main.c: 432: break;
  4417  00E430  0012               	return	
  4418  00E432                     l3881:
  4419  00E432  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_config
  4420  00E436  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_config+1
  4421                           
  4422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4423                           ; Switch size 1, requested type "space"
  4424                           ; Number of cases is 1, Range of values is 0 to 0
  4425                           ; switch strategies available:
  4426                           ; Name         Instructions Cycles
  4427                           ; simple_byte            4     3 (average)
  4428                           ;	Chosen strategy is simple_byte
  4429  00E43A  5012               	movf	??_button_B_submenu_siren_config+1,w,c
  4430  00E43C  0A00               	xorlw	0	; case 0
  4431  00E43E  A4D8               	btfss	status,2,c
  4432  00E440  0012               	return	
  4433                           
  4434                           ; Switch size 1, requested type "space"
  4435                           ; Number of cases is 2, Range of values is 0 to 1
  4436                           ; switch strategies available:
  4437                           ; Name         Instructions Cycles
  4438                           ; simple_byte            7     4 (average)
  4439                           ;	Chosen strategy is simple_byte
  4440  00E442  5011               	movf	??_button_B_submenu_siren_config,w,c
  4441  00E444  0A00               	xorlw	0	; case 0
  4442  00E446  B4D8               	btfsc	status,2,c
  4443  00E448  D7EE               	goto	l3875
  4444  00E44A  0A01               	xorlw	1	; case 1
  4445  00E44C  A4D8               	btfss	status,2,c
  4446  00E44E  0012               	return	
  4447  00E450  D7ED               	goto	l3877
  4448  00E452  0012               	return		;funcret
  4449  00E454                     __end_of_button_B_submenu_siren_config:
  4450                           	opt stack 0
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           indf1	equ	0xFE7
  4461                           postdec1	equ	0xFE5
  4462                           fsr1h	equ	0xFE2
  4463                           fsr1l	equ	0xFE1
  4464                           indf2	equ	0xFDF
  4465                           fsr2h	equ	0xFDA
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _activity_submenu_siren_volume *****************
  4470 ;; Defined at:
  4471 ;;		line 18 in file "Unimic/unmc_01/sources/siren.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    7
  4492 ;; This function calls:
  4493 ;;		_lcd_init
  4494 ;;		_lcd_write
  4495 ;;		_submenu_selector_0
  4496 ;; This function is called by:
  4497 ;;		_button_B_submenu_siren_config
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text25
  4502  00EE48                     __ptext25:
  4503                           	opt stack 0
  4504  00EE48                     _activity_submenu_siren_volume:
  4505                           	opt stack 20
  4506                           
  4507                           ;siren.c: 20: activity = 8;
  4508                           
  4509                           ;incstack = 0
  4510  00EE48  0E00               	movlw	0
  4511  00EE4A  6E2A               	movwf	_activity+1,c
  4512  00EE4C  0E08               	movlw	8
  4513  00EE4E  6E29               	movwf	_activity,c
  4514                           
  4515                           ;siren.c: 21: lcd_init();
  4516  00EE50  EC3F  F078         	call	_lcd_init	;wreg free
  4517                           
  4518                           ;siren.c: 22: lcd_write(1,1,"Volumen");
  4519  00EE54  0E00               	movlw	0
  4520  00EE56  6E0C               	movwf	lcd_write@column+1,c
  4521  00EE58  0E01               	movlw	1
  4522  00EE5A  6E0B               	movwf	lcd_write@column,c
  4523  00EE5C  0E00               	movlw	0
  4524  00EE5E  6E0E               	movwf	lcd_write@row+1,c
  4525  00EE60  0E01               	movlw	1
  4526  00EE62  6E0D               	movwf	lcd_write@row,c
  4527  00EE64  0E5B               	movlw	low STR_47
  4528  00EE66  6E0F               	movwf	lcd_write@string,c
  4529  00EE68  0EFF               	movlw	high STR_47
  4530  00EE6A  6E10               	movwf	lcd_write@string+1,c
  4531  00EE6C  EC33  F071         	call	_lcd_write	;wreg free
  4532                           
  4533                           ;siren.c: 23: lcd_write(10,1,"Bajo");
  4534  00EE70  0E00               	movlw	0
  4535  00EE72  6E0C               	movwf	lcd_write@column+1,c
  4536  00EE74  0E0A               	movlw	10
  4537  00EE76  6E0B               	movwf	lcd_write@column,c
  4538  00EE78  0E00               	movlw	0
  4539  00EE7A  6E0E               	movwf	lcd_write@row+1,c
  4540  00EE7C  0E01               	movlw	1
  4541  00EE7E  6E0D               	movwf	lcd_write@row,c
  4542  00EE80  0EC4               	movlw	low STR_50
  4543  00EE82  6E0F               	movwf	lcd_write@string,c
  4544  00EE84  0EFF               	movlw	high STR_50
  4545  00EE86  6E10               	movwf	lcd_write@string+1,c
  4546  00EE88  EC33  F071         	call	_lcd_write	;wreg free
  4547                           
  4548                           ;siren.c: 24: lcd_write(10,2,"Alto");
  4549  00EE8C  0E00               	movlw	0
  4550  00EE8E  6E0C               	movwf	lcd_write@column+1,c
  4551  00EE90  0E0A               	movlw	10
  4552  00EE92  6E0B               	movwf	lcd_write@column,c
  4553  00EE94  0E00               	movlw	0
  4554  00EE96  6E0E               	movwf	lcd_write@row+1,c
  4555  00EE98  0E02               	movlw	2
  4556  00EE9A  6E0D               	movwf	lcd_write@row,c
  4557  00EE9C  0ECE               	movlw	low STR_51
  4558  00EE9E  6E0F               	movwf	lcd_write@string,c
  4559  00EEA0  0EFF               	movlw	high STR_51
  4560  00EEA2  6E10               	movwf	lcd_write@string+1,c
  4561  00EEA4  EC33  F071         	call	_lcd_write	;wreg free
  4562                           
  4563                           ;siren.c: 25: submenu_selector_0();
  4564  00EEA8  EC77  F073         	call	_submenu_selector_0	;wreg free
  4565  00EEAC  0012               	return		;funcret
  4566  00EEAE                     __end_of_activity_submenu_siren_volume:
  4567                           	opt stack 0
  4568                           tblptru	equ	0xFF8
  4569                           tblptrh	equ	0xFF7
  4570                           tblptrl	equ	0xFF6
  4571                           tablat	equ	0xFF5
  4572                           prodh	equ	0xFF4
  4573                           prodl	equ	0xFF3
  4574                           intcon	equ	0xFF2
  4575                           postinc0	equ	0xFEE
  4576                           wreg	equ	0xFE8
  4577                           indf1	equ	0xFE7
  4578                           postdec1	equ	0xFE5
  4579                           fsr1h	equ	0xFE2
  4580                           fsr1l	equ	0xFE1
  4581                           indf2	equ	0xFDF
  4582                           fsr2h	equ	0xFDA
  4583                           fsr2l	equ	0xFD9
  4584                           status	equ	0xFD8
  4585                           
  4586 ;; *************** function _activity_submenu_siren_tone *****************
  4587 ;; Defined at:
  4588 ;;		line 29 in file "Unimic/unmc_01/sources/siren.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;		None               void
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4606 ;;Total ram usage:        0 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    7
  4609 ;; This function calls:
  4610 ;;		_lcd_init
  4611 ;;		_lcd_write
  4612 ;;		_submenu_selector_0
  4613 ;; This function is called by:
  4614 ;;		_button_B_submenu_siren_config
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text26
  4619  00EDE2                     __ptext26:
  4620                           	opt stack 0
  4621  00EDE2                     _activity_submenu_siren_tone:
  4622                           	opt stack 20
  4623                           
  4624                           ;siren.c: 31: activity = 9;
  4625                           
  4626                           ;incstack = 0
  4627  00EDE2  0E00               	movlw	0
  4628  00EDE4  6E2A               	movwf	_activity+1,c
  4629  00EDE6  0E09               	movlw	9
  4630  00EDE8  6E29               	movwf	_activity,c
  4631                           
  4632                           ;siren.c: 32: lcd_init();
  4633  00EDEA  EC3F  F078         	call	_lcd_init	;wreg free
  4634                           
  4635                           ;siren.c: 33: lcd_write(1,1,"Tono");
  4636  00EDEE  0E00               	movlw	0
  4637  00EDF0  6E0C               	movwf	lcd_write@column+1,c
  4638  00EDF2  0E01               	movlw	1
  4639  00EDF4  6E0B               	movwf	lcd_write@column,c
  4640  00EDF6  0E00               	movlw	0
  4641  00EDF8  6E0E               	movwf	lcd_write@row+1,c
  4642  00EDFA  0E01               	movlw	1
  4643  00EDFC  6E0D               	movwf	lcd_write@row,c
  4644  00EDFE  0EC9               	movlw	low STR_48
  4645  00EE00  6E0F               	movwf	lcd_write@string,c
  4646  00EE02  0EFF               	movlw	high STR_48
  4647  00EE04  6E10               	movwf	lcd_write@string+1,c
  4648  00EE06  EC33  F071         	call	_lcd_write	;wreg free
  4649                           
  4650                           ;siren.c: 34: lcd_write(10,1,"Tono 1");
  4651  00EE0A  0E00               	movlw	0
  4652  00EE0C  6E0C               	movwf	lcd_write@column+1,c
  4653  00EE0E  0E0A               	movlw	10
  4654  00EE10  6E0B               	movwf	lcd_write@column,c
  4655  00EE12  0E00               	movlw	0
  4656  00EE14  6E0E               	movwf	lcd_write@row+1,c
  4657  00EE16  0E01               	movlw	1
  4658  00EE18  6E0D               	movwf	lcd_write@row,c
  4659  00EE1A  0E73               	movlw	low STR_53
  4660  00EE1C  6E0F               	movwf	lcd_write@string,c
  4661  00EE1E  0EFF               	movlw	high STR_53
  4662  00EE20  6E10               	movwf	lcd_write@string+1,c
  4663  00EE22  EC33  F071         	call	_lcd_write	;wreg free
  4664                           
  4665                           ;siren.c: 35: lcd_write(10,2,"Tono 2");
  4666  00EE26  0E00               	movlw	0
  4667  00EE28  6E0C               	movwf	lcd_write@column+1,c
  4668  00EE2A  0E0A               	movlw	10
  4669  00EE2C  6E0B               	movwf	lcd_write@column,c
  4670  00EE2E  0E00               	movlw	0
  4671  00EE30  6E0E               	movwf	lcd_write@row+1,c
  4672  00EE32  0E02               	movlw	2
  4673  00EE34  6E0D               	movwf	lcd_write@row,c
  4674  00EE36  0E7A               	movlw	low STR_54
  4675  00EE38  6E0F               	movwf	lcd_write@string,c
  4676  00EE3A  0EFF               	movlw	high STR_54
  4677  00EE3C  6E10               	movwf	lcd_write@string+1,c
  4678  00EE3E  EC33  F071         	call	_lcd_write	;wreg free
  4679                           
  4680                           ;siren.c: 36: submenu_selector_0();
  4681  00EE42  EC77  F073         	call	_submenu_selector_0	;wreg free
  4682  00EE46  0012               	return		;funcret
  4683  00EE48                     __end_of_activity_submenu_siren_tone:
  4684                           	opt stack 0
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           intcon	equ	0xFF2
  4692                           postinc0	equ	0xFEE
  4693                           wreg	equ	0xFE8
  4694                           indf1	equ	0xFE7
  4695                           postdec1	equ	0xFE5
  4696                           fsr1h	equ	0xFE2
  4697                           fsr1l	equ	0xFE1
  4698                           indf2	equ	0xFDF
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function _button_B_submenu_pin_config *****************
  4704 ;; Defined at:
  4705 ;;		line 405 in file "main.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4723 ;;Total ram usage:        2 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    7
  4726 ;; This function calls:
  4727 ;;		_activity_home
  4728 ;;		_activity_submenu_pin_set
  4729 ;;		_pin_reset
  4730 ;; This function is called by:
  4731 ;;		_button_B
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text27
  4736  00E486                     __ptext27:
  4737                           	opt stack 0
  4738  00E486                     _button_B_submenu_pin_config:
  4739                           	opt stack 21
  4740                           
  4741                           ;main.c: 407: switch(submenu_selected){
  4742                           
  4743                           ;incstack = 0
  4744  00E486  D008               	goto	l3867
  4745  00E488                     l3859:
  4746                           
  4747                           ;main.c: 410: activity_submenu_pin_set();
  4748  00E488  ECDD  F074         	call	_activity_submenu_pin_set	;wreg free
  4749                           
  4750                           ;main.c: 411: break;
  4751  00E48C  0012               	return	
  4752  00E48E                     l3861:
  4753                           
  4754                           ;main.c: 414: pin_reset();
  4755  00E48E  EC28  F071         	call	_pin_reset	;wreg free
  4756                           
  4757                           ;main.c: 415: activity_home();
  4758  00E492  ECA2  F071         	call	_activity_home	;wreg free
  4759                           
  4760                           ;main.c: 418: }
  4761                           
  4762                           ;main.c: 416: break;
  4763  00E496  0012               	return	
  4764  00E498                     l3867:
  4765  00E498  C043  F011         	movff	_submenu_selected,??_button_B_submenu_pin_config
  4766  00E49C  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_pin_config+1
  4767                           
  4768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4769                           ; Switch size 1, requested type "space"
  4770                           ; Number of cases is 1, Range of values is 0 to 0
  4771                           ; switch strategies available:
  4772                           ; Name         Instructions Cycles
  4773                           ; simple_byte            4     3 (average)
  4774                           ;	Chosen strategy is simple_byte
  4775  00E4A0  5012               	movf	??_button_B_submenu_pin_config+1,w,c
  4776  00E4A2  0A00               	xorlw	0	; case 0
  4777  00E4A4  A4D8               	btfss	status,2,c
  4778  00E4A6  0012               	return	
  4779                           
  4780                           ; Switch size 1, requested type "space"
  4781                           ; Number of cases is 2, Range of values is 0 to 1
  4782                           ; switch strategies available:
  4783                           ; Name         Instructions Cycles
  4784                           ; simple_byte            7     4 (average)
  4785                           ;	Chosen strategy is simple_byte
  4786  00E4A8  5011               	movf	??_button_B_submenu_pin_config,w,c
  4787  00E4AA  0A00               	xorlw	0	; case 0
  4788  00E4AC  B4D8               	btfsc	status,2,c
  4789  00E4AE  D7EC               	goto	l3859
  4790  00E4B0  0A01               	xorlw	1	; case 1
  4791  00E4B2  A4D8               	btfss	status,2,c
  4792  00E4B4  0012               	return	
  4793  00E4B6  D7EB               	goto	l3861
  4794  00E4B8  0012               	return		;funcret
  4795  00E4BA                     __end_of_button_B_submenu_pin_config:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           intcon	equ	0xFF2
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           indf1	equ	0xFE7
  4807                           postdec1	equ	0xFE5
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           indf2	equ	0xFDF
  4811                           fsr2h	equ	0xFDA
  4812                           fsr2l	equ	0xFD9
  4813                           status	equ	0xFD8
  4814                           
  4815 ;; *************** function _pin_reset *****************
  4816 ;; Defined at:
  4817 ;;		line 58 in file "Unimic/unmc_01/sources/pin.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;		None               void
  4824 ;; Registers used:
  4825 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4835 ;;Total ram usage:        0 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    1
  4838 ;; This function calls:
  4839 ;;		_strcpy
  4840 ;; This function is called by:
  4841 ;;		_button_B_submenu_pin_config
  4842 ;;		_setup
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text28
  4847  00E250                     __ptext28:
  4848                           	opt stack 0
  4849  00E250                     _pin_reset:
  4850                           	opt stack 28
  4851                           
  4852                           ;pin.c: 60: strcpy(pin, "1234");
  4853                           
  4854                           ;incstack = 0
  4855  00E250  0E9A               	movlw	low _pin
  4856  00E252  6E01               	movwf	strcpy@to,c
  4857  00E254  0E00               	movlw	high _pin
  4858  00E256  6E02               	movwf	strcpy@to+1,c
  4859  00E258  0ED3               	movlw	low STR_42
  4860  00E25A  6E03               	movwf	strcpy@from,c
  4861  00E25C  0EFF               	movlw	high STR_42
  4862  00E25E  6E04               	movwf	strcpy@from+1,c
  4863  00E260  ECDB  F073         	call	_strcpy	;wreg free
  4864  00E264  0012               	return		;funcret
  4865  00E266                     __end_of_pin_reset:
  4866                           	opt stack 0
  4867                           tblptru	equ	0xFF8
  4868                           tblptrh	equ	0xFF7
  4869                           tblptrl	equ	0xFF6
  4870                           tablat	equ	0xFF5
  4871                           prodh	equ	0xFF4
  4872                           prodl	equ	0xFF3
  4873                           intcon	equ	0xFF2
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           indf1	equ	0xFE7
  4877                           postdec1	equ	0xFE5
  4878                           fsr1h	equ	0xFE2
  4879                           fsr1l	equ	0xFE1
  4880                           indf2	equ	0xFDF
  4881                           fsr2h	equ	0xFDA
  4882                           fsr2l	equ	0xFD9
  4883                           status	equ	0xFD8
  4884                           
  4885 ;; *************** function _activity_submenu_pin_set *****************
  4886 ;; Defined at:
  4887 ;;		line 29 in file "Unimic/unmc_01/sources/pin.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;		None               void
  4894 ;; Registers used:
  4895 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    6
  4908 ;; This function calls:
  4909 ;;		_lcd_comand
  4910 ;;		_lcd_gotoxy
  4911 ;;		_lcd_init
  4912 ;;		_lcd_write
  4913 ;;		_strcpy
  4914 ;; This function is called by:
  4915 ;;		_button_B_submenu_pin_config
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text29
  4920  00E9BA                     __ptext29:
  4921                           	opt stack 0
  4922  00E9BA                     _activity_submenu_pin_set:
  4923                           	opt stack 21
  4924                           
  4925                           ;pin.c: 31: activity = 6;
  4926                           
  4927                           ;incstack = 0
  4928  00E9BA  0E00               	movlw	0
  4929  00E9BC  6E2A               	movwf	_activity+1,c
  4930  00E9BE  0E06               	movlw	6
  4931  00E9C0  6E29               	movwf	_activity,c
  4932                           
  4933                           ;pin.c: 32: strcpy(pin_input, "");
  4934  00E9C2  0E9F               	movlw	low _pin_input
  4935  00E9C4  6E01               	movwf	strcpy@to,c
  4936  00E9C6  0E00               	movlw	high _pin_input
  4937  00E9C8  6E02               	movwf	strcpy@to+1,c
  4938  00E9CA  0EF1               	movlw	low (STR_24+1)
  4939  00E9CC  6E03               	movwf	strcpy@from,c
  4940  00E9CE  0EFF               	movlw	high (STR_24+1)
  4941  00E9D0  6E04               	movwf	strcpy@from+1,c
  4942  00E9D2  ECDB  F073         	call	_strcpy	;wreg free
  4943                           
  4944                           ;pin.c: 33: lcd_init();
  4945  00E9D6  EC3F  F078         	call	_lcd_init	;wreg free
  4946                           
  4947                           ;pin.c: 34: lcd_write(1,1,"Nuevo PIN:");
  4948  00E9DA  0E00               	movlw	0
  4949  00E9DC  6E0C               	movwf	lcd_write@column+1,c
  4950  00E9DE  0E01               	movlw	1
  4951  00E9E0  6E0B               	movwf	lcd_write@column,c
  4952  00E9E2  0E00               	movlw	0
  4953  00E9E4  6E0E               	movwf	lcd_write@row+1,c
  4954  00E9E6  0E01               	movlw	1
  4955  00E9E8  6E0D               	movwf	lcd_write@row,c
  4956  00E9EA  0E50               	movlw	low STR_41
  4957  00E9EC  6E0F               	movwf	lcd_write@string,c
  4958  00E9EE  0EFF               	movlw	high STR_41
  4959  00E9F0  6E10               	movwf	lcd_write@string+1,c
  4960  00E9F2  EC33  F071         	call	_lcd_write	;wreg free
  4961                           
  4962                           ;pin.c: 35: lcd_gotoxy(1,2);
  4963  00E9F6  0E02               	movlw	2
  4964  00E9F8  6E05               	movwf	lcd_gotoxy@y,c
  4965  00E9FA  0E01               	movlw	1
  4966  00E9FC  EC7C  F071         	call	_lcd_gotoxy
  4967                           
  4968                           ;pin.c: 36: lcd_comand(0b00001111);
  4969  00EA00  0E0F               	movlw	15
  4970  00EA02  EC06  F071         	call	_lcd_comand
  4971  00EA06  0012               	return		;funcret
  4972  00EA08                     __end_of_activity_submenu_pin_set:
  4973                           	opt stack 0
  4974                           tblptru	equ	0xFF8
  4975                           tblptrh	equ	0xFF7
  4976                           tblptrl	equ	0xFF6
  4977                           tablat	equ	0xFF5
  4978                           prodh	equ	0xFF4
  4979                           prodl	equ	0xFF3
  4980                           intcon	equ	0xFF2
  4981                           postinc0	equ	0xFEE
  4982                           wreg	equ	0xFE8
  4983                           indf1	equ	0xFE7
  4984                           postdec1	equ	0xFE5
  4985                           fsr1h	equ	0xFE2
  4986                           fsr1l	equ	0xFE1
  4987                           indf2	equ	0xFDF
  4988                           fsr2h	equ	0xFDA
  4989                           fsr2l	equ	0xFD9
  4990                           status	equ	0xFD8
  4991                           
  4992 ;; *************** function _button_B_submenu_date_and_time_config *****************
  4993 ;; Defined at:
  4994 ;;		line 474 in file "main.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;		None
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;		None               void
  5001 ;; Registers used:
  5002 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5012 ;;Total ram usage:        2 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:    7
  5015 ;; This function calls:
  5016 ;;		_activity_submenu_date_config
  5017 ;;		_activity_submenu_time_config
  5018 ;; This function is called by:
  5019 ;;		_button_B
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text30
  5024  00E3F4                     __ptext30:
  5025                           	opt stack 0
  5026  00E3F4                     _button_B_submenu_date_and_time_config:
  5027                           	opt stack 21
  5028                           
  5029                           ;main.c: 476: switch(submenu_selected){
  5030                           
  5031                           ;incstack = 0
  5032  00E3F4  D006               	goto	l3927
  5033  00E3F6                     l3921:
  5034                           
  5035                           ;main.c: 479: activity_submenu_date_config();
  5036  00E3F6  EC7F  F078         	call	_activity_submenu_date_config	;wreg free
  5037                           
  5038                           ;main.c: 480: break;
  5039  00E3FA  0012               	return	
  5040  00E3FC                     l3923:
  5041                           
  5042                           ;main.c: 483: activity_submenu_time_config();
  5043  00E3FC  ECC0  F078         	call	_activity_submenu_time_config	;wreg free
  5044                           
  5045                           ;main.c: 486: }
  5046                           
  5047                           ;main.c: 484: break;
  5048  00E400  0012               	return	
  5049  00E402                     l3927:
  5050  00E402  C043  F024         	movff	_submenu_selected,??_button_B_submenu_date_and_time_config
  5051  00E406  C044  F025         	movff	_submenu_selected+1,??_button_B_submenu_date_and_time_config+1
  5052                           
  5053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5054                           ; Switch size 1, requested type "space"
  5055                           ; Number of cases is 1, Range of values is 0 to 0
  5056                           ; switch strategies available:
  5057                           ; Name         Instructions Cycles
  5058                           ; simple_byte            4     3 (average)
  5059                           ;	Chosen strategy is simple_byte
  5060  00E40A  5025               	movf	??_button_B_submenu_date_and_time_config+1,w,c
  5061  00E40C  0A00               	xorlw	0	; case 0
  5062  00E40E  A4D8               	btfss	status,2,c
  5063  00E410  0012               	return	
  5064                           
  5065                           ; Switch size 1, requested type "space"
  5066                           ; Number of cases is 2, Range of values is 0 to 1
  5067                           ; switch strategies available:
  5068                           ; Name         Instructions Cycles
  5069                           ; simple_byte            7     4 (average)
  5070                           ;	Chosen strategy is simple_byte
  5071  00E412  5024               	movf	??_button_B_submenu_date_and_time_config,w,c
  5072  00E414  0A00               	xorlw	0	; case 0
  5073  00E416  B4D8               	btfsc	status,2,c
  5074  00E418  D7EE               	goto	l3921
  5075  00E41A  0A01               	xorlw	1	; case 1
  5076  00E41C  A4D8               	btfss	status,2,c
  5077  00E41E  0012               	return	
  5078  00E420  D7ED               	goto	l3923
  5079  00E422  0012               	return		;funcret
  5080  00E424                     __end_of_button_B_submenu_date_and_time_config:
  5081                           	opt stack 0
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           prodh	equ	0xFF4
  5087                           prodl	equ	0xFF3
  5088                           intcon	equ	0xFF2
  5089                           postinc0	equ	0xFEE
  5090                           wreg	equ	0xFE8
  5091                           indf1	equ	0xFE7
  5092                           postdec1	equ	0xFE5
  5093                           fsr1h	equ	0xFE2
  5094                           fsr1l	equ	0xFE1
  5095                           indf2	equ	0xFDF
  5096                           fsr2h	equ	0xFDA
  5097                           fsr2l	equ	0xFD9
  5098                           status	equ	0xFD8
  5099                           
  5100 ;; *************** function _activity_submenu_time_config *****************
  5101 ;; Defined at:
  5102 ;;		line 154 in file "main.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;		None
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;		None
  5107 ;; Return value:  Size  Location     Type
  5108 ;;		None               void
  5109 ;; Registers used:
  5110 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5120 ;;Total ram usage:        0 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    6
  5123 ;; This function calls:
  5124 ;;		_lcd_comand
  5125 ;;		_lcd_gotoxy
  5126 ;;		_lcd_init
  5127 ;;		_lcd_write
  5128 ;;		_sprintf
  5129 ;; This function is called by:
  5130 ;;		_button_B_submenu_date_and_time_config
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text31
  5135  00F180                     __ptext31:
  5136                           	opt stack 0
  5137  00F180                     _activity_submenu_time_config:
  5138                           	opt stack 21
  5139                           
  5140                           ;main.c: 156: activity = 11;
  5141                           
  5142                           ;incstack = 0
  5143  00F180  0E00               	movlw	0
  5144  00F182  6E2A               	movwf	_activity+1,c
  5145  00F184  0E0B               	movlw	11
  5146  00F186  6E29               	movwf	_activity,c
  5147                           
  5148                           ;main.c: 157: lcd_init();
  5149  00F188  EC3F  F078         	call	_lcd_init	;wreg free
  5150                           
  5151                           ;main.c: 158: lcd_write(1,1,"Ingrese la hora");
  5152  00F18C  0E00               	movlw	0
  5153  00F18E  6E0C               	movwf	lcd_write@column+1,c
  5154  00F190  0E01               	movlw	1
  5155  00F192  6E0B               	movwf	lcd_write@column,c
  5156  00F194  0E00               	movlw	0
  5157  00F196  6E0E               	movwf	lcd_write@row+1,c
  5158  00F198  0E01               	movlw	1
  5159  00F19A  6E0D               	movwf	lcd_write@row,c
  5160  00F19C  0E22               	movlw	low STR_11
  5161  00F19E  6E0F               	movwf	lcd_write@string,c
  5162  00F1A0  0EFF               	movlw	high STR_11
  5163  00F1A2  6E10               	movwf	lcd_write@string+1,c
  5164  00F1A4  EC33  F071         	call	_lcd_write	;wreg free
  5165                           
  5166                           ;main.c: 159: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  5167  00F1A8  0E86               	movlw	low _buffer1
  5168  00F1AA  6E0D               	movwf	sprintf@sp,c
  5169  00F1AC  0E00               	movlw	high _buffer1
  5170  00F1AE  6E0E               	movwf	sprintf@sp+1,c
  5171  00F1B0  0E41               	movlw	low STR_12
  5172  00F1B2  6E0F               	movwf	sprintf@f,c
  5173  00F1B4  0EFF               	movlw	high STR_12
  5174  00F1B6  6E10               	movwf	sprintf@f+1,c
  5175  00F1B8  C054  F011         	movff	_hora,?_sprintf+4
  5176  00F1BC  C055  F012         	movff	_hora+1,?_sprintf+5
  5177  00F1C0  C03D  F013         	movff	_minuto,?_sprintf+6
  5178  00F1C4  C03E  F014         	movff	_minuto+1,?_sprintf+7
  5179  00F1C8  C03F  F015         	movff	_segundo,?_sprintf+8
  5180  00F1CC  C040  F016         	movff	_segundo+1,?_sprintf+9
  5181  00F1D0  EC47  F07E         	call	_sprintf	;wreg free
  5182                           
  5183                           ;main.c: 160: lcd_write(1,2,buffer1);
  5184  00F1D4  0E00               	movlw	0
  5185  00F1D6  6E0C               	movwf	lcd_write@column+1,c
  5186  00F1D8  0E01               	movlw	1
  5187  00F1DA  6E0B               	movwf	lcd_write@column,c
  5188  00F1DC  0E00               	movlw	0
  5189  00F1DE  6E0E               	movwf	lcd_write@row+1,c
  5190  00F1E0  0E02               	movlw	2
  5191  00F1E2  6E0D               	movwf	lcd_write@row,c
  5192  00F1E4  0E86               	movlw	low _buffer1
  5193  00F1E6  6E0F               	movwf	lcd_write@string,c
  5194  00F1E8  0E00               	movlw	high _buffer1
  5195  00F1EA  6E10               	movwf	lcd_write@string+1,c
  5196  00F1EC  EC33  F071         	call	_lcd_write	;wreg free
  5197                           
  5198                           ;main.c: 161: lcd_gotoxy(1, 2);
  5199  00F1F0  0E02               	movlw	2
  5200  00F1F2  6E05               	movwf	lcd_gotoxy@y,c
  5201  00F1F4  0E01               	movlw	1
  5202  00F1F6  EC7C  F071         	call	_lcd_gotoxy
  5203                           
  5204                           ;main.c: 162: lcd_comand(0b00001111);
  5205  00F1FA  0E0F               	movlw	15
  5206  00F1FC  EC06  F071         	call	_lcd_comand
  5207  00F200  0012               	return		;funcret
  5208  00F202                     __end_of_activity_submenu_time_config:
  5209                           	opt stack 0
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           intcon	equ	0xFF2
  5217                           postinc0	equ	0xFEE
  5218                           wreg	equ	0xFE8
  5219                           indf1	equ	0xFE7
  5220                           postdec1	equ	0xFE5
  5221                           fsr1h	equ	0xFE2
  5222                           fsr1l	equ	0xFE1
  5223                           indf2	equ	0xFDF
  5224                           fsr2h	equ	0xFDA
  5225                           fsr2l	equ	0xFD9
  5226                           status	equ	0xFD8
  5227                           
  5228 ;; *************** function _activity_submenu_date_config *****************
  5229 ;; Defined at:
  5230 ;;		line 142 in file "main.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;		None
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;		None               void
  5237 ;; Registers used:
  5238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5248 ;;Total ram usage:        0 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    6
  5251 ;; This function calls:
  5252 ;;		_lcd_comand
  5253 ;;		_lcd_gotoxy
  5254 ;;		_lcd_init
  5255 ;;		_lcd_write
  5256 ;;		_sprintf
  5257 ;; This function is called by:
  5258 ;;		_button_B_submenu_date_and_time_config
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text32
  5263  00F0FE                     __ptext32:
  5264                           	opt stack 0
  5265  00F0FE                     _activity_submenu_date_config:
  5266                           	opt stack 21
  5267                           
  5268                           ;main.c: 144: activity = 10;
  5269                           
  5270                           ;incstack = 0
  5271  00F0FE  0E00               	movlw	0
  5272  00F100  6E2A               	movwf	_activity+1,c
  5273  00F102  0E0A               	movlw	10
  5274  00F104  6E29               	movwf	_activity,c
  5275                           
  5276                           ;main.c: 145: lcd_init();
  5277  00F106  EC3F  F078         	call	_lcd_init	;wreg free
  5278                           
  5279                           ;main.c: 146: lcd_write(1,1,"Ingrese la fecha");
  5280  00F10A  0E00               	movlw	0
  5281  00F10C  6E0C               	movwf	lcd_write@column+1,c
  5282  00F10E  0E01               	movlw	1
  5283  00F110  6E0B               	movwf	lcd_write@column,c
  5284  00F112  0E00               	movlw	0
  5285  00F114  6E0E               	movwf	lcd_write@row+1,c
  5286  00F116  0E01               	movlw	1
  5287  00F118  6E0D               	movwf	lcd_write@row,c
  5288  00F11A  0E01               	movlw	low STR_9
  5289  00F11C  6E0F               	movwf	lcd_write@string,c
  5290  00F11E  0EFF               	movlw	high STR_9
  5291  00F120  6E10               	movwf	lcd_write@string+1,c
  5292  00F122  EC33  F071         	call	_lcd_write	;wreg free
  5293                           
  5294                           ;main.c: 147: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  5295  00F126  0E86               	movlw	low _buffer1
  5296  00F128  6E0D               	movwf	sprintf@sp,c
  5297  00F12A  0E00               	movlw	high _buffer1
  5298  00F12C  6E0E               	movwf	sprintf@sp+1,c
  5299  00F12E  0E32               	movlw	low STR_10
  5300  00F130  6E0F               	movwf	sprintf@f,c
  5301  00F132  0EFF               	movlw	high STR_10
  5302  00F134  6E10               	movwf	sprintf@f+1,c
  5303  00F136  C050  F011         	movff	_dia,?_sprintf+4
  5304  00F13A  C051  F012         	movff	_dia+1,?_sprintf+5
  5305  00F13E  C056  F013         	movff	_mes,?_sprintf+6
  5306  00F142  C057  F014         	movff	_mes+1,?_sprintf+7
  5307  00F146  C04E  F015         	movff	_anio,?_sprintf+8
  5308  00F14A  C04F  F016         	movff	_anio+1,?_sprintf+9
  5309  00F14E  EC47  F07E         	call	_sprintf	;wreg free
  5310                           
  5311                           ;main.c: 148: lcd_write(1,2,buffer1);
  5312  00F152  0E00               	movlw	0
  5313  00F154  6E0C               	movwf	lcd_write@column+1,c
  5314  00F156  0E01               	movlw	1
  5315  00F158  6E0B               	movwf	lcd_write@column,c
  5316  00F15A  0E00               	movlw	0
  5317  00F15C  6E0E               	movwf	lcd_write@row+1,c
  5318  00F15E  0E02               	movlw	2
  5319  00F160  6E0D               	movwf	lcd_write@row,c
  5320  00F162  0E86               	movlw	low _buffer1
  5321  00F164  6E0F               	movwf	lcd_write@string,c
  5322  00F166  0E00               	movlw	high _buffer1
  5323  00F168  6E10               	movwf	lcd_write@string+1,c
  5324  00F16A  EC33  F071         	call	_lcd_write	;wreg free
  5325                           
  5326                           ;main.c: 149: lcd_gotoxy(1, 2);
  5327  00F16E  0E02               	movlw	2
  5328  00F170  6E05               	movwf	lcd_gotoxy@y,c
  5329  00F172  0E01               	movlw	1
  5330  00F174  EC7C  F071         	call	_lcd_gotoxy
  5331                           
  5332                           ;main.c: 150: lcd_comand(0b00001111);
  5333  00F178  0E0F               	movlw	15
  5334  00F17A  EC06  F071         	call	_lcd_comand
  5335  00F17E  0012               	return		;funcret
  5336  00F180                     __end_of_activity_submenu_date_config:
  5337                           	opt stack 0
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           intcon	equ	0xFF2
  5345                           postinc0	equ	0xFEE
  5346                           wreg	equ	0xFE8
  5347                           indf1	equ	0xFE7
  5348                           postdec1	equ	0xFE5
  5349                           fsr1h	equ	0xFE2
  5350                           fsr1l	equ	0xFE1
  5351                           indf2	equ	0xFDF
  5352                           fsr2h	equ	0xFDA
  5353                           fsr2l	equ	0xFD9
  5354                           status	equ	0xFD8
  5355                           
  5356 ;; *************** function _button_B_submenu_activation *****************
  5357 ;; Defined at:
  5358 ;;		line 387 in file "main.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;		None               void
  5365 ;; Registers used:
  5366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;Total ram usage:        2 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    7
  5379 ;; This function calls:
  5380 ;;		_activity_home
  5381 ;; This function is called by:
  5382 ;;		_button_B
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text33
  5387  00E4BA                     __ptext33:
  5388                           	opt stack 0
  5389  00E4BA                     _button_B_submenu_activation:
  5390                           	opt stack 21
  5391                           
  5392                           ;main.c: 389: switch(submenu_selected){
  5393                           
  5394                           ;incstack = 0
  5395  00E4BA  D009               	goto	l3849
  5396  00E4BC                     l3843:
  5397                           
  5398                           ;main.c: 392: state = 1;
  5399  00E4BC  0E00               	movlw	0
  5400  00E4BE  6E42               	movwf	_state+1,c
  5401  00E4C0  0E01               	movlw	1
  5402  00E4C2  D003               	goto	L3
  5403  00E4C4                     l3845:
  5404                           
  5405                           ;main.c: 396: state = 0;
  5406  00E4C4  0E00               	movlw	0
  5407  00E4C6  6E42               	movwf	_state+1,c
  5408  00E4C8  0E00               	movlw	0
  5409  00E4CA                     L3:
  5410  00E4CA  6E41               	movwf	_state,c
  5411                           
  5412                           ;main.c: 399: }
  5413                           
  5414                           ;main.c: 397: break;
  5415  00E4CC  D010               	goto	l3851
  5416  00E4CE                     l3849:
  5417  00E4CE  C043  F011         	movff	_submenu_selected,??_button_B_submenu_activation
  5418  00E4D2  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_activation+1
  5419                           
  5420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5421                           ; Switch size 1, requested type "space"
  5422                           ; Number of cases is 1, Range of values is 0 to 0
  5423                           ; switch strategies available:
  5424                           ; Name         Instructions Cycles
  5425                           ; simple_byte            4     3 (average)
  5426                           ;	Chosen strategy is simple_byte
  5427  00E4D6  5012               	movf	??_button_B_submenu_activation+1,w,c
  5428  00E4D8  0A00               	xorlw	0	; case 0
  5429  00E4DA  A4D8               	btfss	status,2,c
  5430  00E4DC  D008               	goto	l3851
  5431                           
  5432                           ; Switch size 1, requested type "space"
  5433                           ; Number of cases is 2, Range of values is 0 to 1
  5434                           ; switch strategies available:
  5435                           ; Name         Instructions Cycles
  5436                           ; simple_byte            7     4 (average)
  5437                           ;	Chosen strategy is simple_byte
  5438  00E4DE  5011               	movf	??_button_B_submenu_activation,w,c
  5439  00E4E0  0A00               	xorlw	0	; case 0
  5440  00E4E2  B4D8               	btfsc	status,2,c
  5441  00E4E4  D7EB               	goto	l3843
  5442  00E4E6  0A01               	xorlw	1	; case 1
  5443  00E4E8  B4D8               	btfsc	status,2,c
  5444  00E4EA  D7EC               	goto	l3845
  5445  00E4EC  D000               	goto	l3851
  5446  00E4EE                     l3851:
  5447                           
  5448                           ;main.c: 401: activity_home();
  5449  00E4EE  ECA2  F071         	call	_activity_home	;wreg free
  5450  00E4F2  0012               	return		;funcret
  5451  00E4F4                     __end_of_button_B_submenu_activation:
  5452                           	opt stack 0
  5453                           tblptru	equ	0xFF8
  5454                           tblptrh	equ	0xFF7
  5455                           tblptrl	equ	0xFF6
  5456                           tablat	equ	0xFF5
  5457                           prodh	equ	0xFF4
  5458                           prodl	equ	0xFF3
  5459                           intcon	equ	0xFF2
  5460                           postinc0	equ	0xFEE
  5461                           wreg	equ	0xFE8
  5462                           indf1	equ	0xFE7
  5463                           postdec1	equ	0xFE5
  5464                           fsr1h	equ	0xFE2
  5465                           fsr1l	equ	0xFE1
  5466                           indf2	equ	0xFDF
  5467                           fsr2h	equ	0xFDA
  5468                           fsr2l	equ	0xFD9
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _button_B_menu *****************
  5472 ;; Defined at:
  5473 ;;		line 363 in file "main.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;		None               void
  5480 ;; Registers used:
  5481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5491 ;;Total ram usage:        2 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    8
  5494 ;; This function calls:
  5495 ;;		_activity_submenu_activation
  5496 ;;		_activity_submenu_date_and_time
  5497 ;;		_activity_submenu_pin
  5498 ;;		_activity_submenu_siren
  5499 ;; This function is called by:
  5500 ;;		_button_B
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text34
  5505  00E844                     __ptext34:
  5506                           	opt stack 0
  5507  00E844                     _button_B_menu:
  5508                           	opt stack 20
  5509                           
  5510                           ;main.c: 365: switch(menu_selected){
  5511                           
  5512                           ;incstack = 0
  5513  00E844  D00C               	goto	l3835
  5514  00E846                     l3825:
  5515                           
  5516                           ;main.c: 368: activity_submenu_activation();
  5517  00E846  EC25  F076         	call	_activity_submenu_activation	;wreg free
  5518                           
  5519                           ;main.c: 369: break;
  5520  00E84A  0012               	return	
  5521  00E84C                     l3827:
  5522                           
  5523                           ;main.c: 372: activity_submenu_date_and_time();
  5524  00E84C  EC58  F076         	call	_activity_submenu_date_and_time	;wreg free
  5525                           
  5526                           ;main.c: 373: break;
  5527  00E850  0012               	return	
  5528  00E852                     l3829:
  5529                           
  5530                           ;main.c: 376: activity_submenu_pin();
  5531  00E852  EC8B  F076         	call	_activity_submenu_pin	;wreg free
  5532                           
  5533                           ;main.c: 377: break;
  5534  00E856  0012               	return	
  5535  00E858                     l3831:
  5536                           
  5537                           ;main.c: 380: activity_submenu_siren();
  5538  00E858  ECBE  F076         	call	_activity_submenu_siren	;wreg free
  5539                           
  5540                           ;main.c: 383: }
  5541                           
  5542                           ;main.c: 381: break;
  5543  00E85C  0012               	return	
  5544  00E85E                     l3835:
  5545  00E85E  C03B  F011         	movff	_menu_selected,??_button_B_menu
  5546  00E862  C03C  F012         	movff	_menu_selected+1,??_button_B_menu+1
  5547                           
  5548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5549                           ; Switch size 1, requested type "space"
  5550                           ; Number of cases is 1, Range of values is 0 to 0
  5551                           ; switch strategies available:
  5552                           ; Name         Instructions Cycles
  5553                           ; simple_byte            4     3 (average)
  5554                           ;	Chosen strategy is simple_byte
  5555  00E866  5012               	movf	??_button_B_menu+1,w,c
  5556  00E868  0A00               	xorlw	0	; case 0
  5557  00E86A  A4D8               	btfss	status,2,c
  5558  00E86C  0012               	return	
  5559                           
  5560                           ; Switch size 1, requested type "space"
  5561                           ; Number of cases is 4, Range of values is 0 to 3
  5562                           ; switch strategies available:
  5563                           ; Name         Instructions Cycles
  5564                           ; simple_byte           13     7 (average)
  5565                           ;	Chosen strategy is simple_byte
  5566  00E86E  5011               	movf	??_button_B_menu,w,c
  5567  00E870  0A00               	xorlw	0	; case 0
  5568  00E872  B4D8               	btfsc	status,2,c
  5569  00E874  D7E8               	goto	l3825
  5570  00E876  0A01               	xorlw	1	; case 1
  5571  00E878  B4D8               	btfsc	status,2,c
  5572  00E87A  D7E8               	goto	l3827
  5573  00E87C  0A03               	xorlw	3	; case 2
  5574  00E87E  B4D8               	btfsc	status,2,c
  5575  00E880  D7E8               	goto	l3829
  5576  00E882  0A01               	xorlw	1	; case 3
  5577  00E884  A4D8               	btfss	status,2,c
  5578  00E886  0012               	return	
  5579  00E888  D7E7               	goto	l3831
  5580  00E88A  0012               	return		;funcret
  5581  00E88C                     __end_of_button_B_menu:
  5582                           	opt stack 0
  5583                           tblptru	equ	0xFF8
  5584                           tblptrh	equ	0xFF7
  5585                           tblptrl	equ	0xFF6
  5586                           tablat	equ	0xFF5
  5587                           prodh	equ	0xFF4
  5588                           prodl	equ	0xFF3
  5589                           intcon	equ	0xFF2
  5590                           postinc0	equ	0xFEE
  5591                           wreg	equ	0xFE8
  5592                           indf1	equ	0xFE7
  5593                           postdec1	equ	0xFE5
  5594                           fsr1h	equ	0xFE2
  5595                           fsr1l	equ	0xFE1
  5596                           indf2	equ	0xFDF
  5597                           fsr2h	equ	0xFDA
  5598                           fsr2l	equ	0xFD9
  5599                           status	equ	0xFD8
  5600                           
  5601 ;; *************** function _activity_submenu_siren *****************
  5602 ;; Defined at:
  5603 ;;		line 7 in file "Unimic/unmc_01/sources/siren.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;		None               void
  5610 ;; Registers used:
  5611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5621 ;;Total ram usage:        0 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    7
  5624 ;; This function calls:
  5625 ;;		_lcd_init
  5626 ;;		_lcd_write
  5627 ;;		_submenu_selector_0
  5628 ;; This function is called by:
  5629 ;;		_button_B_menu
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text35
  5634  00ED7C                     __ptext35:
  5635                           	opt stack 0
  5636  00ED7C                     _activity_submenu_siren:
  5637                           	opt stack 20
  5638                           
  5639                           ;siren.c: 9: activity = 7;
  5640                           
  5641                           ;incstack = 0
  5642  00ED7C  0E00               	movlw	0
  5643  00ED7E  6E2A               	movwf	_activity+1,c
  5644  00ED80  0E07               	movlw	7
  5645  00ED82  6E29               	movwf	_activity,c
  5646                           
  5647                           ;siren.c: 10: lcd_init();
  5648  00ED84  EC3F  F078         	call	_lcd_init	;wreg free
  5649                           
  5650                           ;siren.c: 11: lcd_write(1,1,"Sirena");
  5651  00ED88  0E00               	movlw	0
  5652  00ED8A  6E0C               	movwf	lcd_write@column+1,c
  5653  00ED8C  0E01               	movlw	1
  5654  00ED8E  6E0B               	movwf	lcd_write@column,c
  5655  00ED90  0E00               	movlw	0
  5656  00ED92  6E0E               	movwf	lcd_write@row+1,c
  5657  00ED94  0E01               	movlw	1
  5658  00ED96  6E0D               	movwf	lcd_write@row,c
  5659  00ED98  0EAB               	movlw	low STR_5
  5660  00ED9A  6E0F               	movwf	lcd_write@string,c
  5661  00ED9C  0EFF               	movlw	high STR_5
  5662  00ED9E  6E10               	movwf	lcd_write@string+1,c
  5663  00EDA0  EC33  F071         	call	_lcd_write	;wreg free
  5664                           
  5665                           ;siren.c: 12: lcd_write(10,1,"Volumen");
  5666  00EDA4  0E00               	movlw	0
  5667  00EDA6  6E0C               	movwf	lcd_write@column+1,c
  5668  00EDA8  0E0A               	movlw	10
  5669  00EDAA  6E0B               	movwf	lcd_write@column,c
  5670  00EDAC  0E00               	movlw	0
  5671  00EDAE  6E0E               	movwf	lcd_write@row+1,c
  5672  00EDB0  0E01               	movlw	1
  5673  00EDB2  6E0D               	movwf	lcd_write@row,c
  5674  00EDB4  0E5B               	movlw	low STR_47
  5675  00EDB6  6E0F               	movwf	lcd_write@string,c
  5676  00EDB8  0EFF               	movlw	high STR_47
  5677  00EDBA  6E10               	movwf	lcd_write@string+1,c
  5678  00EDBC  EC33  F071         	call	_lcd_write	;wreg free
  5679                           
  5680                           ;siren.c: 13: lcd_write(10,2,"Tono");
  5681  00EDC0  0E00               	movlw	0
  5682  00EDC2  6E0C               	movwf	lcd_write@column+1,c
  5683  00EDC4  0E0A               	movlw	10
  5684  00EDC6  6E0B               	movwf	lcd_write@column,c
  5685  00EDC8  0E00               	movlw	0
  5686  00EDCA  6E0E               	movwf	lcd_write@row+1,c
  5687  00EDCC  0E02               	movlw	2
  5688  00EDCE  6E0D               	movwf	lcd_write@row,c
  5689  00EDD0  0EC9               	movlw	low STR_48
  5690  00EDD2  6E0F               	movwf	lcd_write@string,c
  5691  00EDD4  0EFF               	movlw	high STR_48
  5692  00EDD6  6E10               	movwf	lcd_write@string+1,c
  5693  00EDD8  EC33  F071         	call	_lcd_write	;wreg free
  5694                           
  5695                           ;siren.c: 14: submenu_selector_0();
  5696  00EDDC  EC77  F073         	call	_submenu_selector_0	;wreg free
  5697  00EDE0  0012               	return		;funcret
  5698  00EDE2                     __end_of_activity_submenu_siren:
  5699                           	opt stack 0
  5700                           tblptru	equ	0xFF8
  5701                           tblptrh	equ	0xFF7
  5702                           tblptrl	equ	0xFF6
  5703                           tablat	equ	0xFF5
  5704                           prodh	equ	0xFF4
  5705                           prodl	equ	0xFF3
  5706                           intcon	equ	0xFF2
  5707                           postinc0	equ	0xFEE
  5708                           wreg	equ	0xFE8
  5709                           indf1	equ	0xFE7
  5710                           postdec1	equ	0xFE5
  5711                           fsr1h	equ	0xFE2
  5712                           fsr1l	equ	0xFE1
  5713                           indf2	equ	0xFDF
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _activity_submenu_pin *****************
  5719 ;; Defined at:
  5720 ;;		line 19 in file "Unimic/unmc_01/sources/pin.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;		None               void
  5727 ;; Registers used:
  5728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    7
  5741 ;; This function calls:
  5742 ;;		_lcd_init
  5743 ;;		_lcd_write
  5744 ;;		_submenu_selector_0
  5745 ;; This function is called by:
  5746 ;;		_button_B_menu
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text36
  5751  00ED16                     __ptext36:
  5752                           	opt stack 0
  5753  00ED16                     _activity_submenu_pin:
  5754                           	opt stack 20
  5755                           
  5756                           ;pin.c: 21: activity = 5;
  5757                           
  5758                           ;incstack = 0
  5759  00ED16  0E00               	movlw	0
  5760  00ED18  6E2A               	movwf	_activity+1,c
  5761  00ED1A  0E05               	movlw	5
  5762  00ED1C  6E29               	movwf	_activity,c
  5763                           
  5764                           ;pin.c: 22: lcd_init();
  5765  00ED1E  EC3F  F078         	call	_lcd_init	;wreg free
  5766                           
  5767                           ;pin.c: 23: lcd_write(1,1,"Pin");
  5768  00ED22  0E00               	movlw	0
  5769  00ED24  6E0C               	movwf	lcd_write@column+1,c
  5770  00ED26  0E01               	movlw	1
  5771  00ED28  6E0B               	movwf	lcd_write@column,c
  5772  00ED2A  0E00               	movlw	0
  5773  00ED2C  6E0E               	movwf	lcd_write@row+1,c
  5774  00ED2E  0E01               	movlw	1
  5775  00ED30  6E0D               	movwf	lcd_write@row,c
  5776  00ED32  0EE6               	movlw	low STR_4
  5777  00ED34  6E0F               	movwf	lcd_write@string,c
  5778  00ED36  0EFF               	movlw	high STR_4
  5779  00ED38  6E10               	movwf	lcd_write@string+1,c
  5780  00ED3A  EC33  F071         	call	_lcd_write	;wreg free
  5781                           
  5782                           ;pin.c: 24: lcd_write(10,1,"Cambiar");
  5783  00ED3E  0E00               	movlw	0
  5784  00ED40  6E0C               	movwf	lcd_write@column+1,c
  5785  00ED42  0E0A               	movlw	10
  5786  00ED44  6E0B               	movwf	lcd_write@column,c
  5787  00ED46  0E00               	movlw	0
  5788  00ED48  6E0E               	movwf	lcd_write@row+1,c
  5789  00ED4A  0E01               	movlw	1
  5790  00ED4C  6E0D               	movwf	lcd_write@row,c
  5791  00ED4E  0E63               	movlw	low STR_38
  5792  00ED50  6E0F               	movwf	lcd_write@string,c
  5793  00ED52  0EFF               	movlw	high STR_38
  5794  00ED54  6E10               	movwf	lcd_write@string+1,c
  5795  00ED56  EC33  F071         	call	_lcd_write	;wreg free
  5796                           
  5797                           ;pin.c: 25: lcd_write(10,2,"Reset");
  5798  00ED5A  0E00               	movlw	0
  5799  00ED5C  6E0C               	movwf	lcd_write@column+1,c
  5800  00ED5E  0E0A               	movlw	10
  5801  00ED60  6E0B               	movwf	lcd_write@column,c
  5802  00ED62  0E00               	movlw	0
  5803  00ED64  6E0E               	movwf	lcd_write@row+1,c
  5804  00ED66  0E02               	movlw	2
  5805  00ED68  6E0D               	movwf	lcd_write@row,c
  5806  00ED6A  0EB2               	movlw	low STR_39
  5807  00ED6C  6E0F               	movwf	lcd_write@string,c
  5808  00ED6E  0EFF               	movlw	high STR_39
  5809  00ED70  6E10               	movwf	lcd_write@string+1,c
  5810  00ED72  EC33  F071         	call	_lcd_write	;wreg free
  5811                           
  5812                           ;pin.c: 26: submenu_selector_0();
  5813  00ED76  EC77  F073         	call	_submenu_selector_0	;wreg free
  5814  00ED7A  0012               	return		;funcret
  5815  00ED7C                     __end_of_activity_submenu_pin:
  5816                           	opt stack 0
  5817                           tblptru	equ	0xFF8
  5818                           tblptrh	equ	0xFF7
  5819                           tblptrl	equ	0xFF6
  5820                           tablat	equ	0xFF5
  5821                           prodh	equ	0xFF4
  5822                           prodl	equ	0xFF3
  5823                           intcon	equ	0xFF2
  5824                           postinc0	equ	0xFEE
  5825                           wreg	equ	0xFE8
  5826                           indf1	equ	0xFE7
  5827                           postdec1	equ	0xFE5
  5828                           fsr1h	equ	0xFE2
  5829                           fsr1l	equ	0xFE1
  5830                           indf2	equ	0xFDF
  5831                           fsr2h	equ	0xFDA
  5832                           fsr2l	equ	0xFD9
  5833                           status	equ	0xFD8
  5834                           
  5835 ;; *************** function _activity_submenu_date_and_time *****************
  5836 ;; Defined at:
  5837 ;;		line 131 in file "main.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;		None               void
  5844 ;; Registers used:
  5845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5855 ;;Total ram usage:        0 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    7
  5858 ;; This function calls:
  5859 ;;		_lcd_init
  5860 ;;		_lcd_write
  5861 ;;		_submenu_selector_0
  5862 ;; This function is called by:
  5863 ;;		_button_B_menu
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text37
  5868  00ECB0                     __ptext37:
  5869                           	opt stack 0
  5870  00ECB0                     _activity_submenu_date_and_time:
  5871                           	opt stack 20
  5872                           
  5873                           ;main.c: 133: activity = 3;
  5874                           
  5875                           ;incstack = 0
  5876  00ECB0  0E00               	movlw	0
  5877  00ECB2  6E2A               	movwf	_activity+1,c
  5878  00ECB4  0E03               	movlw	3
  5879  00ECB6  6E29               	movwf	_activity,c
  5880                           
  5881                           ;main.c: 134: lcd_init();
  5882  00ECB8  EC3F  F078         	call	_lcd_init	;wreg free
  5883                           
  5884                           ;main.c: 135: lcd_write(1,1,"Reloj");
  5885  00ECBC  0E00               	movlw	0
  5886  00ECBE  6E0C               	movwf	lcd_write@column+1,c
  5887  00ECC0  0E01               	movlw	1
  5888  00ECC2  6E0B               	movwf	lcd_write@column,c
  5889  00ECC4  0E00               	movlw	0
  5890  00ECC6  6E0E               	movwf	lcd_write@row+1,c
  5891  00ECC8  0E01               	movlw	1
  5892  00ECCA  6E0D               	movwf	lcd_write@row,c
  5893  00ECCC  0EBE               	movlw	low STR_3
  5894  00ECCE  6E0F               	movwf	lcd_write@string,c
  5895  00ECD0  0EFF               	movlw	high STR_3
  5896  00ECD2  6E10               	movwf	lcd_write@string+1,c
  5897  00ECD4  EC33  F071         	call	_lcd_write	;wreg free
  5898                           
  5899                           ;main.c: 136: lcd_write(10,1,"Fecha");
  5900  00ECD8  0E00               	movlw	0
  5901  00ECDA  6E0C               	movwf	lcd_write@column+1,c
  5902  00ECDC  0E0A               	movlw	10
  5903  00ECDE  6E0B               	movwf	lcd_write@column,c
  5904  00ECE0  0E00               	movlw	0
  5905  00ECE2  6E0E               	movwf	lcd_write@row+1,c
  5906  00ECE4  0E01               	movlw	1
  5907  00ECE6  6E0D               	movwf	lcd_write@row,c
  5908  00ECE8  0EB8               	movlw	low STR_7
  5909  00ECEA  6E0F               	movwf	lcd_write@string,c
  5910  00ECEC  0EFF               	movlw	high STR_7
  5911  00ECEE  6E10               	movwf	lcd_write@string+1,c
  5912  00ECF0  EC33  F071         	call	_lcd_write	;wreg free
  5913                           
  5914                           ;main.c: 137: lcd_write(10,2,"Hora");
  5915  00ECF4  0E00               	movlw	0
  5916  00ECF6  6E0C               	movwf	lcd_write@column+1,c
  5917  00ECF8  0E0A               	movlw	10
  5918  00ECFA  6E0B               	movwf	lcd_write@column,c
  5919  00ECFC  0E00               	movlw	0
  5920  00ECFE  6E0E               	movwf	lcd_write@row+1,c
  5921  00ED00  0E02               	movlw	2
  5922  00ED02  6E0D               	movwf	lcd_write@row,c
  5923  00ED04  0ED8               	movlw	low STR_8
  5924  00ED06  6E0F               	movwf	lcd_write@string,c
  5925  00ED08  0EFF               	movlw	high STR_8
  5926  00ED0A  6E10               	movwf	lcd_write@string+1,c
  5927  00ED0C  EC33  F071         	call	_lcd_write	;wreg free
  5928                           
  5929                           ;main.c: 138: submenu_selector_0();
  5930  00ED10  EC77  F073         	call	_submenu_selector_0	;wreg free
  5931  00ED14  0012               	return		;funcret
  5932  00ED16                     __end_of_activity_submenu_date_and_time:
  5933                           	opt stack 0
  5934                           tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           intcon	equ	0xFF2
  5941                           postinc0	equ	0xFEE
  5942                           wreg	equ	0xFE8
  5943                           indf1	equ	0xFE7
  5944                           postdec1	equ	0xFE5
  5945                           fsr1h	equ	0xFE2
  5946                           fsr1l	equ	0xFE1
  5947                           indf2	equ	0xFDF
  5948                           fsr2h	equ	0xFDA
  5949                           fsr2l	equ	0xFD9
  5950                           status	equ	0xFD8
  5951                           
  5952 ;; *************** function _activity_submenu_activation *****************
  5953 ;; Defined at:
  5954 ;;		line 6 in file "Unimic/unmc_01/sources/activation.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;		None
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;		None               void
  5961 ;; Registers used:
  5962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5972 ;;Total ram usage:        0 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    7
  5975 ;; This function calls:
  5976 ;;		_lcd_init
  5977 ;;		_lcd_write
  5978 ;;		_submenu_selector_0
  5979 ;; This function is called by:
  5980 ;;		_button_B_menu
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text38
  5985  00EC4A                     __ptext38:
  5986                           	opt stack 0
  5987  00EC4A                     _activity_submenu_activation:
  5988                           	opt stack 20
  5989                           
  5990                           ;activation.c: 8: activity = 4;
  5991                           
  5992                           ;incstack = 0
  5993  00EC4A  0E00               	movlw	0
  5994  00EC4C  6E2A               	movwf	_activity+1,c
  5995  00EC4E  0E04               	movlw	4
  5996  00EC50  6E29               	movwf	_activity,c
  5997                           
  5998                           ;activation.c: 9: lcd_init();
  5999  00EC52  EC3F  F078         	call	_lcd_init	;wreg free
  6000                           
  6001                           ;activation.c: 10: lcd_write(1,1,"Activar");
  6002  00EC56  0E00               	movlw	0
  6003  00EC58  6E0C               	movwf	lcd_write@column+1,c
  6004  00EC5A  0E01               	movlw	1
  6005  00EC5C  6E0B               	movwf	lcd_write@column,c
  6006  00EC5E  0E00               	movlw	0
  6007  00EC60  6E0E               	movwf	lcd_write@row+1,c
  6008  00EC62  0E01               	movlw	1
  6009  00EC64  6E0D               	movwf	lcd_write@row,c
  6010  00EC66  0E6B               	movlw	low STR_2
  6011  00EC68  6E0F               	movwf	lcd_write@string,c
  6012  00EC6A  0EFF               	movlw	high STR_2
  6013  00EC6C  6E10               	movwf	lcd_write@string+1,c
  6014  00EC6E  EC33  F071         	call	_lcd_write	;wreg free
  6015                           
  6016                           ;activation.c: 11: lcd_write(10,1,"Si");
  6017  00EC72  0E00               	movlw	0
  6018  00EC74  6E0C               	movwf	lcd_write@column+1,c
  6019  00EC76  0E0A               	movlw	10
  6020  00EC78  6E0B               	movwf	lcd_write@column,c
  6021  00EC7A  0E00               	movlw	0
  6022  00EC7C  6E0E               	movwf	lcd_write@row+1,c
  6023  00EC7E  0E01               	movlw	1
  6024  00EC80  6E0D               	movwf	lcd_write@row,c
  6025  00EC82  0EEA               	movlw	low STR_44
  6026  00EC84  6E0F               	movwf	lcd_write@string,c
  6027  00EC86  0EFF               	movlw	high STR_44
  6028  00EC88  6E10               	movwf	lcd_write@string+1,c
  6029  00EC8A  EC33  F071         	call	_lcd_write	;wreg free
  6030                           
  6031                           ;activation.c: 12: lcd_write(10,2,"No");
  6032  00EC8E  0E00               	movlw	0
  6033  00EC90  6E0C               	movwf	lcd_write@column+1,c
  6034  00EC92  0E0A               	movlw	10
  6035  00EC94  6E0B               	movwf	lcd_write@column,c
  6036  00EC96  0E00               	movlw	0
  6037  00EC98  6E0E               	movwf	lcd_write@row+1,c
  6038  00EC9A  0E02               	movlw	2
  6039  00EC9C  6E0D               	movwf	lcd_write@row,c
  6040  00EC9E  0EED               	movlw	low STR_45
  6041  00ECA0  6E0F               	movwf	lcd_write@string,c
  6042  00ECA2  0EFF               	movlw	high STR_45
  6043  00ECA4  6E10               	movwf	lcd_write@string+1,c
  6044  00ECA6  EC33  F071         	call	_lcd_write	;wreg free
  6045                           
  6046                           ;activation.c: 13: submenu_selector_0();
  6047  00ECAA  EC77  F073         	call	_submenu_selector_0	;wreg free
  6048  00ECAE  0012               	return		;funcret
  6049  00ECB0                     __end_of_activity_submenu_activation:
  6050                           	opt stack 0
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon	equ	0xFF2
  6058                           postinc0	equ	0xFEE
  6059                           wreg	equ	0xFE8
  6060                           indf1	equ	0xFE7
  6061                           postdec1	equ	0xFE5
  6062                           fsr1h	equ	0xFE2
  6063                           fsr1l	equ	0xFE1
  6064                           indf2	equ	0xFDF
  6065                           fsr2h	equ	0xFDA
  6066                           fsr2l	equ	0xFD9
  6067                           status	equ	0xFD8
  6068                           
  6069 ;; *************** function _button_A *****************
  6070 ;; Defined at:
  6071 ;;		line 339 in file "main.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;		None
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;		None               void
  6078 ;; Registers used:
  6079 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;Total ram usage:        2 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    8
  6092 ;; This function calls:
  6093 ;;		_activity_pin
  6094 ;;		_menu_selector
  6095 ;;		_reset_home_callback
  6096 ;;		_submenu_selector
  6097 ;; This function is called by:
  6098 ;;		_keyboard_control
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text39
  6103  00E5A6                     __ptext39:
  6104                           	opt stack 0
  6105  00E5A6                     _button_A:
  6106                           	opt stack 21
  6107                           
  6108                           ;main.c: 341: reset_home_callback();
  6109                           
  6110                           ;incstack = 0
  6111  00E5A6  ECF7  F070         	call	_reset_home_callback	;wreg free
  6112                           
  6113                           ;main.c: 343: switch(activity){
  6114  00E5AA  D009               	goto	l4045
  6115  00E5AC                     l4037:
  6116                           
  6117                           ;main.c: 346: activity_pin();
  6118  00E5AC  ECB6  F074         	call	_activity_pin	;wreg free
  6119                           
  6120                           ;main.c: 350: break;
  6121                           
  6122                           ;main.c: 349: case 1:
  6123                           
  6124                           ;main.c: 347: break;
  6125  00E5B0  0012               	return	
  6126  00E5B2                     l4039:
  6127                           
  6128                           ;main.c: 353: menu_selector();
  6129  00E5B2  ECFE  F073         	call	_menu_selector	;wreg free
  6130                           
  6131                           ;main.c: 354: break;
  6132  00E5B6  0012               	return	
  6133  00E5B8                     l4041:
  6134                           
  6135                           ;main.c: 357: submenu_selector();
  6136  00E5B8  ECE2  F071         	call	_submenu_selector	;wreg free
  6137                           
  6138                           ;main.c: 359: }
  6139                           
  6140                           ;main.c: 358: break;
  6141  00E5BC  0012               	return	
  6142  00E5BE                     l4045:
  6143  00E5BE  C029  F013         	movff	_activity,??_button_A
  6144  00E5C2  C02A  F014         	movff	_activity+1,??_button_A+1
  6145                           
  6146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6147                           ; Switch size 1, requested type "space"
  6148                           ; Number of cases is 1, Range of values is 0 to 0
  6149                           ; switch strategies available:
  6150                           ; Name         Instructions Cycles
  6151                           ; simple_byte            4     3 (average)
  6152                           ;	Chosen strategy is simple_byte
  6153  00E5C6  5014               	movf	??_button_A+1,w,c
  6154  00E5C8  0A00               	xorlw	0	; case 0
  6155  00E5CA  A4D8               	btfss	status,2,c
  6156  00E5CC  D7F5               	goto	l4041
  6157                           
  6158                           ; Switch size 1, requested type "space"
  6159                           ; Number of cases is 3, Range of values is 0 to 2
  6160                           ; switch strategies available:
  6161                           ; Name         Instructions Cycles
  6162                           ; simple_byte           10     6 (average)
  6163                           ;	Chosen strategy is simple_byte
  6164  00E5CE  5013               	movf	??_button_A,w,c
  6165  00E5D0  0A00               	xorlw	0	; case 0
  6166  00E5D2  B4D8               	btfsc	status,2,c
  6167  00E5D4  D7EB               	goto	l4037
  6168  00E5D6  0A01               	xorlw	1	; case 1
  6169  00E5D8  B4D8               	btfsc	status,2,c
  6170  00E5DA  0012               	return	
  6171  00E5DC  0A03               	xorlw	3	; case 2
  6172  00E5DE  B4D8               	btfsc	status,2,c
  6173  00E5E0  D7E8               	goto	l4039
  6174  00E5E2  D7EA               	goto	l4041
  6175  00E5E4  0012               	return		;funcret
  6176  00E5E6                     __end_of_button_A:
  6177                           	opt stack 0
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           intcon	equ	0xFF2
  6185                           postinc0	equ	0xFEE
  6186                           wreg	equ	0xFE8
  6187                           indf1	equ	0xFE7
  6188                           postdec1	equ	0xFE5
  6189                           fsr1h	equ	0xFE2
  6190                           fsr1l	equ	0xFE1
  6191                           indf2	equ	0xFDF
  6192                           fsr2h	equ	0xFDA
  6193                           fsr2l	equ	0xFD9
  6194                           status	equ	0xFD8
  6195                           
  6196 ;; *************** function _submenu_selector *****************
  6197 ;; Defined at:
  6198 ;;		line 21 in file "Unimic/unmc_01/sources/submenu_selector.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;		None               void
  6205 ;; Registers used:
  6206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;Total ram usage:        2 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    7
  6219 ;; This function calls:
  6220 ;;		_submenu_selector_0
  6221 ;;		_submenu_selector_1
  6222 ;; This function is called by:
  6223 ;;		_button_A
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text40
  6228  00E3C4                     __ptext40:
  6229                           	opt stack 0
  6230  00E3C4                     _submenu_selector:
  6231                           	opt stack 21
  6232                           
  6233                           ;submenu_selector.c: 23: switch(submenu_selected){
  6234                           
  6235                           ;incstack = 0
  6236  00E3C4  D006               	goto	l3817
  6237  00E3C6                     l3811:
  6238                           
  6239                           ;submenu_selector.c: 26: submenu_selector_1();
  6240  00E3C6  EC98  F073         	call	_submenu_selector_1	;wreg free
  6241                           
  6242                           ;submenu_selector.c: 27: break;
  6243  00E3CA  0012               	return	
  6244  00E3CC                     l3813:
  6245                           
  6246                           ;submenu_selector.c: 30: submenu_selector_0();
  6247  00E3CC  EC77  F073         	call	_submenu_selector_0	;wreg free
  6248                           
  6249                           ;submenu_selector.c: 32: }
  6250                           
  6251                           ;submenu_selector.c: 31: break;
  6252  00E3D0  0012               	return	
  6253  00E3D2                     l3817:
  6254  00E3D2  C043  F011         	movff	_submenu_selected,??_submenu_selector
  6255  00E3D6  C044  F012         	movff	_submenu_selected+1,??_submenu_selector+1
  6256                           
  6257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6258                           ; Switch size 1, requested type "space"
  6259                           ; Number of cases is 1, Range of values is 0 to 0
  6260                           ; switch strategies available:
  6261                           ; Name         Instructions Cycles
  6262                           ; simple_byte            4     3 (average)
  6263                           ;	Chosen strategy is simple_byte
  6264  00E3DA  5012               	movf	??_submenu_selector+1,w,c
  6265  00E3DC  0A00               	xorlw	0	; case 0
  6266  00E3DE  A4D8               	btfss	status,2,c
  6267  00E3E0  0012               	return	
  6268                           
  6269                           ; Switch size 1, requested type "space"
  6270                           ; Number of cases is 2, Range of values is 0 to 1
  6271                           ; switch strategies available:
  6272                           ; Name         Instructions Cycles
  6273                           ; simple_byte            7     4 (average)
  6274                           ;	Chosen strategy is simple_byte
  6275  00E3E2  5011               	movf	??_submenu_selector,w,c
  6276  00E3E4  0A00               	xorlw	0	; case 0
  6277  00E3E6  B4D8               	btfsc	status,2,c
  6278  00E3E8  D7EE               	goto	l3811
  6279  00E3EA  0A01               	xorlw	1	; case 1
  6280  00E3EC  A4D8               	btfss	status,2,c
  6281  00E3EE  0012               	return	
  6282  00E3F0  D7ED               	goto	l3813
  6283  00E3F2  0012               	return		;funcret
  6284  00E3F4                     __end_of_submenu_selector:
  6285                           	opt stack 0
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           postinc0	equ	0xFEE
  6294                           wreg	equ	0xFE8
  6295                           indf1	equ	0xFE7
  6296                           postdec1	equ	0xFE5
  6297                           fsr1h	equ	0xFE2
  6298                           fsr1l	equ	0xFE1
  6299                           indf2	equ	0xFDF
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function _submenu_selector_1 *****************
  6305 ;; Defined at:
  6306 ;;		line 13 in file "Unimic/unmc_01/sources/submenu_selector.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;		None               void
  6313 ;; Registers used:
  6314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;Total ram usage:        0 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    6
  6327 ;; This function calls:
  6328 ;;		_lcd_write
  6329 ;; This function is called by:
  6330 ;;		_submenu_selector
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text41
  6335  00E730                     __ptext41:
  6336                           	opt stack 0
  6337  00E730                     _submenu_selector_1:
  6338                           	opt stack 21
  6339                           
  6340                           ;submenu_selector.c: 15: lcd_write(9,2,">");
  6341                           
  6342                           ;incstack = 0
  6343  00E730  0E00               	movlw	0
  6344  00E732  6E0C               	movwf	lcd_write@column+1,c
  6345  00E734  0E09               	movlw	9
  6346  00E736  6E0B               	movwf	lcd_write@column,c
  6347  00E738  0E00               	movlw	0
  6348  00E73A  6E0E               	movwf	lcd_write@row+1,c
  6349  00E73C  0E02               	movlw	2
  6350  00E73E  6E0D               	movwf	lcd_write@row,c
  6351  00E740  0EF2               	movlw	low STR_23
  6352  00E742  6E0F               	movwf	lcd_write@string,c
  6353  00E744  0EFF               	movlw	high STR_23
  6354  00E746  6E10               	movwf	lcd_write@string+1,c
  6355  00E748  EC33  F071         	call	_lcd_write	;wreg free
  6356                           
  6357                           ;submenu_selector.c: 16: submenu_selected = 1;
  6358  00E74C  0E00               	movlw	0
  6359  00E74E  6E44               	movwf	_submenu_selected+1,c
  6360  00E750  0E01               	movlw	1
  6361  00E752  6E43               	movwf	_submenu_selected,c
  6362                           
  6363                           ;submenu_selector.c: 17: lcd_write(9,1," ");
  6364  00E754  0E00               	movlw	0
  6365  00E756  6E0C               	movwf	lcd_write@column+1,c
  6366  00E758  0E09               	movlw	9
  6367  00E75A  6E0B               	movwf	lcd_write@column,c
  6368  00E75C  0E00               	movlw	0
  6369  00E75E  6E0E               	movwf	lcd_write@row+1,c
  6370  00E760  0E01               	movlw	1
  6371  00E762  6E0D               	movwf	lcd_write@row,c
  6372  00E764  0EF0               	movlw	low STR_24
  6373  00E766  6E0F               	movwf	lcd_write@string,c
  6374  00E768  0EFF               	movlw	high STR_24
  6375  00E76A  6E10               	movwf	lcd_write@string+1,c
  6376  00E76C  EC33  F071         	call	_lcd_write	;wreg free
  6377  00E770  0012               	return		;funcret
  6378  00E772                     __end_of_submenu_selector_1:
  6379                           	opt stack 0
  6380                           tblptru	equ	0xFF8
  6381                           tblptrh	equ	0xFF7
  6382                           tblptrl	equ	0xFF6
  6383                           tablat	equ	0xFF5
  6384                           prodh	equ	0xFF4
  6385                           prodl	equ	0xFF3
  6386                           intcon	equ	0xFF2
  6387                           postinc0	equ	0xFEE
  6388                           wreg	equ	0xFE8
  6389                           indf1	equ	0xFE7
  6390                           postdec1	equ	0xFE5
  6391                           fsr1h	equ	0xFE2
  6392                           fsr1l	equ	0xFE1
  6393                           indf2	equ	0xFDF
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _submenu_selector_0 *****************
  6399 ;; Defined at:
  6400 ;;		line 5 in file "Unimic/unmc_01/sources/submenu_selector.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;		None               void
  6407 ;; Registers used:
  6408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6418 ;;Total ram usage:        0 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:    6
  6421 ;; This function calls:
  6422 ;;		_lcd_write
  6423 ;; This function is called by:
  6424 ;;		_activity_submenu_date_and_time
  6425 ;;		_submenu_selector
  6426 ;;		_activity_submenu_pin
  6427 ;;		_activity_submenu_activation
  6428 ;;		_activity_submenu_siren
  6429 ;;		_activity_submenu_siren_volume
  6430 ;;		_activity_submenu_siren_tone
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text42
  6435  00E6EE                     __ptext42:
  6436                           	opt stack 0
  6437  00E6EE                     _submenu_selector_0:
  6438                           	opt stack 20
  6439                           
  6440                           ;submenu_selector.c: 7: lcd_write(9,1,">");
  6441                           
  6442                           ;incstack = 0
  6443  00E6EE  0E00               	movlw	0
  6444  00E6F0  6E0C               	movwf	lcd_write@column+1,c
  6445  00E6F2  0E09               	movlw	9
  6446  00E6F4  6E0B               	movwf	lcd_write@column,c
  6447  00E6F6  0E00               	movlw	0
  6448  00E6F8  6E0E               	movwf	lcd_write@row+1,c
  6449  00E6FA  0E01               	movlw	1
  6450  00E6FC  6E0D               	movwf	lcd_write@row,c
  6451  00E6FE  0EF2               	movlw	low STR_23
  6452  00E700  6E0F               	movwf	lcd_write@string,c
  6453  00E702  0EFF               	movlw	high STR_23
  6454  00E704  6E10               	movwf	lcd_write@string+1,c
  6455  00E706  EC33  F071         	call	_lcd_write	;wreg free
  6456                           
  6457                           ;submenu_selector.c: 8: submenu_selected = 0;
  6458  00E70A  0E00               	movlw	0
  6459  00E70C  6E44               	movwf	_submenu_selected+1,c
  6460  00E70E  0E00               	movlw	0
  6461  00E710  6E43               	movwf	_submenu_selected,c
  6462                           
  6463                           ;submenu_selector.c: 9: lcd_write(9,2," ");
  6464  00E712  0E00               	movlw	0
  6465  00E714  6E0C               	movwf	lcd_write@column+1,c
  6466  00E716  0E09               	movlw	9
  6467  00E718  6E0B               	movwf	lcd_write@column,c
  6468  00E71A  0E00               	movlw	0
  6469  00E71C  6E0E               	movwf	lcd_write@row+1,c
  6470  00E71E  0E02               	movlw	2
  6471  00E720  6E0D               	movwf	lcd_write@row,c
  6472  00E722  0EF0               	movlw	low STR_24
  6473  00E724  6E0F               	movwf	lcd_write@string,c
  6474  00E726  0EFF               	movlw	high STR_24
  6475  00E728  6E10               	movwf	lcd_write@string+1,c
  6476  00E72A  EC33  F071         	call	_lcd_write	;wreg free
  6477  00E72E  0012               	return		;funcret
  6478  00E730                     __end_of_submenu_selector_0:
  6479                           	opt stack 0
  6480                           tblptru	equ	0xFF8
  6481                           tblptrh	equ	0xFF7
  6482                           tblptrl	equ	0xFF6
  6483                           tablat	equ	0xFF5
  6484                           prodh	equ	0xFF4
  6485                           prodl	equ	0xFF3
  6486                           intcon	equ	0xFF2
  6487                           postinc0	equ	0xFEE
  6488                           wreg	equ	0xFE8
  6489                           indf1	equ	0xFE7
  6490                           postdec1	equ	0xFE5
  6491                           fsr1h	equ	0xFE2
  6492                           fsr1l	equ	0xFE1
  6493                           indf2	equ	0xFDF
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8
  6497                           
  6498 ;; *************** function _menu_selector *****************
  6499 ;; Defined at:
  6500 ;;		line 37 in file "Unimic/unmc_01/sources/menu_selector.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;		None
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;		None               void
  6507 ;; Registers used:
  6508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6516 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6518 ;;Total ram usage:        2 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    7
  6521 ;; This function calls:
  6522 ;;		_menu_selector_0
  6523 ;;		_menu_selector_1
  6524 ;;		_menu_selector_2
  6525 ;;		_menu_selector_3
  6526 ;; This function is called by:
  6527 ;;		_button_A
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text43
  6532  00E7FC                     __ptext43:
  6533                           	opt stack 0
  6534  00E7FC                     _menu_selector:
  6535                           	opt stack 21
  6536                           
  6537                           ;menu_selector.c: 39: switch(menu_selected){
  6538                           
  6539                           ;incstack = 0
  6540  00E7FC  D00C               	goto	l3803
  6541  00E7FE                     l3793:
  6542                           
  6543                           ;menu_selector.c: 42: menu_selector_1();
  6544  00E7FE  EC14  F073         	call	_menu_selector_1	;wreg free
  6545                           
  6546                           ;menu_selector.c: 43: break;
  6547  00E802  0012               	return	
  6548  00E804                     l3795:
  6549                           
  6550                           ;menu_selector.c: 46: menu_selector_2();
  6551  00E804  EC35  F073         	call	_menu_selector_2	;wreg free
  6552                           
  6553                           ;menu_selector.c: 47: break;
  6554  00E808  0012               	return	
  6555  00E80A                     l3797:
  6556                           
  6557                           ;menu_selector.c: 50: menu_selector_3();
  6558  00E80A  EC56  F073         	call	_menu_selector_3	;wreg free
  6559                           
  6560                           ;menu_selector.c: 51: break;
  6561  00E80E  0012               	return	
  6562  00E810                     l3799:
  6563                           
  6564                           ;menu_selector.c: 54: menu_selector_0();
  6565  00E810  ECF3  F072         	call	_menu_selector_0	;wreg free
  6566                           
  6567                           ;menu_selector.c: 57: }
  6568                           
  6569                           ;menu_selector.c: 55: break;
  6570  00E814  0012               	return	
  6571  00E816                     l3803:
  6572  00E816  C03B  F011         	movff	_menu_selected,??_menu_selector
  6573  00E81A  C03C  F012         	movff	_menu_selected+1,??_menu_selector+1
  6574                           
  6575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6576                           ; Switch size 1, requested type "space"
  6577                           ; Number of cases is 1, Range of values is 0 to 0
  6578                           ; switch strategies available:
  6579                           ; Name         Instructions Cycles
  6580                           ; simple_byte            4     3 (average)
  6581                           ;	Chosen strategy is simple_byte
  6582  00E81E  5012               	movf	??_menu_selector+1,w,c
  6583  00E820  0A00               	xorlw	0	; case 0
  6584  00E822  A4D8               	btfss	status,2,c
  6585  00E824  0012               	return	
  6586                           
  6587                           ; Switch size 1, requested type "space"
  6588                           ; Number of cases is 4, Range of values is 0 to 3
  6589                           ; switch strategies available:
  6590                           ; Name         Instructions Cycles
  6591                           ; simple_byte           13     7 (average)
  6592                           ;	Chosen strategy is simple_byte
  6593  00E826  5011               	movf	??_menu_selector,w,c
  6594  00E828  0A00               	xorlw	0	; case 0
  6595  00E82A  B4D8               	btfsc	status,2,c
  6596  00E82C  D7E8               	goto	l3793
  6597  00E82E  0A01               	xorlw	1	; case 1
  6598  00E830  B4D8               	btfsc	status,2,c
  6599  00E832  D7E8               	goto	l3795
  6600  00E834  0A03               	xorlw	3	; case 2
  6601  00E836  B4D8               	btfsc	status,2,c
  6602  00E838  D7E8               	goto	l3797
  6603  00E83A  0A01               	xorlw	1	; case 3
  6604  00E83C  A4D8               	btfss	status,2,c
  6605  00E83E  0012               	return	
  6606  00E840  D7E7               	goto	l3799
  6607  00E842  0012               	return		;funcret
  6608  00E844                     __end_of_menu_selector:
  6609                           	opt stack 0
  6610                           tblptru	equ	0xFF8
  6611                           tblptrh	equ	0xFF7
  6612                           tblptrl	equ	0xFF6
  6613                           tablat	equ	0xFF5
  6614                           prodh	equ	0xFF4
  6615                           prodl	equ	0xFF3
  6616                           intcon	equ	0xFF2
  6617                           postinc0	equ	0xFEE
  6618                           wreg	equ	0xFE8
  6619                           indf1	equ	0xFE7
  6620                           postdec1	equ	0xFE5
  6621                           fsr1h	equ	0xFE2
  6622                           fsr1l	equ	0xFE1
  6623                           indf2	equ	0xFDF
  6624                           fsr2h	equ	0xFDA
  6625                           fsr2l	equ	0xFD9
  6626                           status	equ	0xFD8
  6627                           
  6628 ;; *************** function _menu_selector_3 *****************
  6629 ;; Defined at:
  6630 ;;		line 29 in file "Unimic/unmc_01/sources/menu_selector.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;		None
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;		None
  6635 ;; Return value:  Size  Location     Type
  6636 ;;		None               void
  6637 ;; Registers used:
  6638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6648 ;;Total ram usage:        0 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    6
  6651 ;; This function calls:
  6652 ;;		_lcd_write
  6653 ;; This function is called by:
  6654 ;;		_menu_selector
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text44
  6659  00E6AC                     __ptext44:
  6660                           	opt stack 0
  6661  00E6AC                     _menu_selector_3:
  6662                           	opt stack 21
  6663                           
  6664                           ;menu_selector.c: 31: lcd_write(9,2,">");
  6665                           
  6666                           ;incstack = 0
  6667  00E6AC  0E00               	movlw	0
  6668  00E6AE  6E0C               	movwf	lcd_write@column+1,c
  6669  00E6B0  0E09               	movlw	9
  6670  00E6B2  6E0B               	movwf	lcd_write@column,c
  6671  00E6B4  0E00               	movlw	0
  6672  00E6B6  6E0E               	movwf	lcd_write@row+1,c
  6673  00E6B8  0E02               	movlw	2
  6674  00E6BA  6E0D               	movwf	lcd_write@row,c
  6675  00E6BC  0EF2               	movlw	low STR_23
  6676  00E6BE  6E0F               	movwf	lcd_write@string,c
  6677  00E6C0  0EFF               	movlw	high STR_23
  6678  00E6C2  6E10               	movwf	lcd_write@string+1,c
  6679  00E6C4  EC33  F071         	call	_lcd_write	;wreg free
  6680                           
  6681                           ;menu_selector.c: 32: menu_selected = 3;
  6682  00E6C8  0E00               	movlw	0
  6683  00E6CA  6E3C               	movwf	_menu_selected+1,c
  6684  00E6CC  0E03               	movlw	3
  6685  00E6CE  6E3B               	movwf	_menu_selected,c
  6686                           
  6687                           ;menu_selector.c: 33: lcd_write(9,1," ");
  6688  00E6D0  0E00               	movlw	0
  6689  00E6D2  6E0C               	movwf	lcd_write@column+1,c
  6690  00E6D4  0E09               	movlw	9
  6691  00E6D6  6E0B               	movwf	lcd_write@column,c
  6692  00E6D8  0E00               	movlw	0
  6693  00E6DA  6E0E               	movwf	lcd_write@row+1,c
  6694  00E6DC  0E01               	movlw	1
  6695  00E6DE  6E0D               	movwf	lcd_write@row,c
  6696  00E6E0  0EF0               	movlw	low STR_24
  6697  00E6E2  6E0F               	movwf	lcd_write@string,c
  6698  00E6E4  0EFF               	movlw	high STR_24
  6699  00E6E6  6E10               	movwf	lcd_write@string+1,c
  6700  00E6E8  EC33  F071         	call	_lcd_write	;wreg free
  6701  00E6EC  0012               	return		;funcret
  6702  00E6EE                     __end_of_menu_selector_3:
  6703                           	opt stack 0
  6704                           tblptru	equ	0xFF8
  6705                           tblptrh	equ	0xFF7
  6706                           tblptrl	equ	0xFF6
  6707                           tablat	equ	0xFF5
  6708                           prodh	equ	0xFF4
  6709                           prodl	equ	0xFF3
  6710                           intcon	equ	0xFF2
  6711                           postinc0	equ	0xFEE
  6712                           wreg	equ	0xFE8
  6713                           indf1	equ	0xFE7
  6714                           postdec1	equ	0xFE5
  6715                           fsr1h	equ	0xFE2
  6716                           fsr1l	equ	0xFE1
  6717                           indf2	equ	0xFDF
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _menu_selector_2 *****************
  6723 ;; Defined at:
  6724 ;;		line 21 in file "Unimic/unmc_01/sources/menu_selector.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;		None               void
  6731 ;; Registers used:
  6732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6742 ;;Total ram usage:        0 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    6
  6745 ;; This function calls:
  6746 ;;		_lcd_write
  6747 ;; This function is called by:
  6748 ;;		_menu_selector
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text45
  6753  00E66A                     __ptext45:
  6754                           	opt stack 0
  6755  00E66A                     _menu_selector_2:
  6756                           	opt stack 21
  6757                           
  6758                           ;menu_selector.c: 23: lcd_write(9,1,">");
  6759                           
  6760                           ;incstack = 0
  6761  00E66A  0E00               	movlw	0
  6762  00E66C  6E0C               	movwf	lcd_write@column+1,c
  6763  00E66E  0E09               	movlw	9
  6764  00E670  6E0B               	movwf	lcd_write@column,c
  6765  00E672  0E00               	movlw	0
  6766  00E674  6E0E               	movwf	lcd_write@row+1,c
  6767  00E676  0E01               	movlw	1
  6768  00E678  6E0D               	movwf	lcd_write@row,c
  6769  00E67A  0EF2               	movlw	low STR_23
  6770  00E67C  6E0F               	movwf	lcd_write@string,c
  6771  00E67E  0EFF               	movlw	high STR_23
  6772  00E680  6E10               	movwf	lcd_write@string+1,c
  6773  00E682  EC33  F071         	call	_lcd_write	;wreg free
  6774                           
  6775                           ;menu_selector.c: 24: menu_selected = 2;
  6776  00E686  0E00               	movlw	0
  6777  00E688  6E3C               	movwf	_menu_selected+1,c
  6778  00E68A  0E02               	movlw	2
  6779  00E68C  6E3B               	movwf	_menu_selected,c
  6780                           
  6781                           ;menu_selector.c: 25: lcd_write(1,2," ");
  6782  00E68E  0E00               	movlw	0
  6783  00E690  6E0C               	movwf	lcd_write@column+1,c
  6784  00E692  0E01               	movlw	1
  6785  00E694  6E0B               	movwf	lcd_write@column,c
  6786  00E696  0E00               	movlw	0
  6787  00E698  6E0E               	movwf	lcd_write@row+1,c
  6788  00E69A  0E02               	movlw	2
  6789  00E69C  6E0D               	movwf	lcd_write@row,c
  6790  00E69E  0EF0               	movlw	low STR_24
  6791  00E6A0  6E0F               	movwf	lcd_write@string,c
  6792  00E6A2  0EFF               	movlw	high STR_24
  6793  00E6A4  6E10               	movwf	lcd_write@string+1,c
  6794  00E6A6  EC33  F071         	call	_lcd_write	;wreg free
  6795  00E6AA  0012               	return		;funcret
  6796  00E6AC                     __end_of_menu_selector_2:
  6797                           	opt stack 0
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           prodh	equ	0xFF4
  6803                           prodl	equ	0xFF3
  6804                           intcon	equ	0xFF2
  6805                           postinc0	equ	0xFEE
  6806                           wreg	equ	0xFE8
  6807                           indf1	equ	0xFE7
  6808                           postdec1	equ	0xFE5
  6809                           fsr1h	equ	0xFE2
  6810                           fsr1l	equ	0xFE1
  6811                           indf2	equ	0xFDF
  6812                           fsr2h	equ	0xFDA
  6813                           fsr2l	equ	0xFD9
  6814                           status	equ	0xFD8
  6815                           
  6816 ;; *************** function _menu_selector_1 *****************
  6817 ;; Defined at:
  6818 ;;		line 13 in file "Unimic/unmc_01/sources/menu_selector.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;		None               void
  6825 ;; Registers used:
  6826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    6
  6839 ;; This function calls:
  6840 ;;		_lcd_write
  6841 ;; This function is called by:
  6842 ;;		_menu_selector
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text46
  6847  00E628                     __ptext46:
  6848                           	opt stack 0
  6849  00E628                     _menu_selector_1:
  6850                           	opt stack 21
  6851                           
  6852                           ;menu_selector.c: 15: lcd_write(1,2,">");
  6853                           
  6854                           ;incstack = 0
  6855  00E628  0E00               	movlw	0
  6856  00E62A  6E0C               	movwf	lcd_write@column+1,c
  6857  00E62C  0E01               	movlw	1
  6858  00E62E  6E0B               	movwf	lcd_write@column,c
  6859  00E630  0E00               	movlw	0
  6860  00E632  6E0E               	movwf	lcd_write@row+1,c
  6861  00E634  0E02               	movlw	2
  6862  00E636  6E0D               	movwf	lcd_write@row,c
  6863  00E638  0EF2               	movlw	low STR_23
  6864  00E63A  6E0F               	movwf	lcd_write@string,c
  6865  00E63C  0EFF               	movlw	high STR_23
  6866  00E63E  6E10               	movwf	lcd_write@string+1,c
  6867  00E640  EC33  F071         	call	_lcd_write	;wreg free
  6868                           
  6869                           ;menu_selector.c: 16: menu_selected = 1;
  6870  00E644  0E00               	movlw	0
  6871  00E646  6E3C               	movwf	_menu_selected+1,c
  6872  00E648  0E01               	movlw	1
  6873  00E64A  6E3B               	movwf	_menu_selected,c
  6874                           
  6875                           ;menu_selector.c: 17: lcd_write(1,1," ");
  6876  00E64C  0E00               	movlw	0
  6877  00E64E  6E0C               	movwf	lcd_write@column+1,c
  6878  00E650  0E01               	movlw	1
  6879  00E652  6E0B               	movwf	lcd_write@column,c
  6880  00E654  0E00               	movlw	0
  6881  00E656  6E0E               	movwf	lcd_write@row+1,c
  6882  00E658  0E01               	movlw	1
  6883  00E65A  6E0D               	movwf	lcd_write@row,c
  6884  00E65C  0EF0               	movlw	low STR_24
  6885  00E65E  6E0F               	movwf	lcd_write@string,c
  6886  00E660  0EFF               	movlw	high STR_24
  6887  00E662  6E10               	movwf	lcd_write@string+1,c
  6888  00E664  EC33  F071         	call	_lcd_write	;wreg free
  6889  00E668  0012               	return		;funcret
  6890  00E66A                     __end_of_menu_selector_1:
  6891                           	opt stack 0
  6892                           tblptru	equ	0xFF8
  6893                           tblptrh	equ	0xFF7
  6894                           tblptrl	equ	0xFF6
  6895                           tablat	equ	0xFF5
  6896                           prodh	equ	0xFF4
  6897                           prodl	equ	0xFF3
  6898                           intcon	equ	0xFF2
  6899                           postinc0	equ	0xFEE
  6900                           wreg	equ	0xFE8
  6901                           indf1	equ	0xFE7
  6902                           postdec1	equ	0xFE5
  6903                           fsr1h	equ	0xFE2
  6904                           fsr1l	equ	0xFE1
  6905                           indf2	equ	0xFDF
  6906                           fsr2h	equ	0xFDA
  6907                           fsr2l	equ	0xFD9
  6908                           status	equ	0xFD8
  6909                           
  6910 ;; *************** function _menu_selector_0 *****************
  6911 ;; Defined at:
  6912 ;;		line 5 in file "Unimic/unmc_01/sources/menu_selector.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;		None               void
  6919 ;; Registers used:
  6920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6930 ;;Total ram usage:        0 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    6
  6933 ;; This function calls:
  6934 ;;		_lcd_write
  6935 ;; This function is called by:
  6936 ;;		_activity_menu
  6937 ;;		_menu_selector
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           	psect	text47
  6942  00E5E6                     __ptext47:
  6943                           	opt stack 0
  6944  00E5E6                     _menu_selector_0:
  6945                           	opt stack 20
  6946                           
  6947                           ;menu_selector.c: 7: lcd_write(1,1,">");
  6948                           
  6949                           ;incstack = 0
  6950  00E5E6  0E00               	movlw	0
  6951  00E5E8  6E0C               	movwf	lcd_write@column+1,c
  6952  00E5EA  0E01               	movlw	1
  6953  00E5EC  6E0B               	movwf	lcd_write@column,c
  6954  00E5EE  0E00               	movlw	0
  6955  00E5F0  6E0E               	movwf	lcd_write@row+1,c
  6956  00E5F2  0E01               	movlw	1
  6957  00E5F4  6E0D               	movwf	lcd_write@row,c
  6958  00E5F6  0EF2               	movlw	low STR_23
  6959  00E5F8  6E0F               	movwf	lcd_write@string,c
  6960  00E5FA  0EFF               	movlw	high STR_23
  6961  00E5FC  6E10               	movwf	lcd_write@string+1,c
  6962  00E5FE  EC33  F071         	call	_lcd_write	;wreg free
  6963                           
  6964                           ;menu_selector.c: 8: menu_selected = 0;
  6965  00E602  0E00               	movlw	0
  6966  00E604  6E3C               	movwf	_menu_selected+1,c
  6967  00E606  0E00               	movlw	0
  6968  00E608  6E3B               	movwf	_menu_selected,c
  6969                           
  6970                           ;menu_selector.c: 9: lcd_write(9,2," ");
  6971  00E60A  0E00               	movlw	0
  6972  00E60C  6E0C               	movwf	lcd_write@column+1,c
  6973  00E60E  0E09               	movlw	9
  6974  00E610  6E0B               	movwf	lcd_write@column,c
  6975  00E612  0E00               	movlw	0
  6976  00E614  6E0E               	movwf	lcd_write@row+1,c
  6977  00E616  0E02               	movlw	2
  6978  00E618  6E0D               	movwf	lcd_write@row,c
  6979  00E61A  0EF0               	movlw	low STR_24
  6980  00E61C  6E0F               	movwf	lcd_write@string,c
  6981  00E61E  0EFF               	movlw	high STR_24
  6982  00E620  6E10               	movwf	lcd_write@string+1,c
  6983  00E622  EC33  F071         	call	_lcd_write	;wreg free
  6984  00E626  0012               	return		;funcret
  6985  00E628                     __end_of_menu_selector_0:
  6986                           	opt stack 0
  6987                           tblptru	equ	0xFF8
  6988                           tblptrh	equ	0xFF7
  6989                           tblptrl	equ	0xFF6
  6990                           tablat	equ	0xFF5
  6991                           prodh	equ	0xFF4
  6992                           prodl	equ	0xFF3
  6993                           intcon	equ	0xFF2
  6994                           postinc0	equ	0xFEE
  6995                           wreg	equ	0xFE8
  6996                           indf1	equ	0xFE7
  6997                           postdec1	equ	0xFE5
  6998                           fsr1h	equ	0xFE2
  6999                           fsr1l	equ	0xFE1
  7000                           indf2	equ	0xFDF
  7001                           fsr2h	equ	0xFDA
  7002                           fsr2l	equ	0xFD9
  7003                           status	equ	0xFD8
  7004                           
  7005 ;; *************** function _activity_pin *****************
  7006 ;; Defined at:
  7007 ;;		line 8 in file "Unimic/unmc_01/sources/pin.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;		None
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;		None               void
  7014 ;; Registers used:
  7015 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7025 ;;Total ram usage:        0 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; Hardware stack levels required when called:    6
  7028 ;; This function calls:
  7029 ;;		_lcd_comand
  7030 ;;		_lcd_gotoxy
  7031 ;;		_lcd_init
  7032 ;;		_lcd_write
  7033 ;;		_strcpy
  7034 ;; This function is called by:
  7035 ;;		_button_A
  7036 ;;		_pin_input_validator
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text48
  7041  00E96C                     __ptext48:
  7042                           	opt stack 0
  7043  00E96C                     _activity_pin:
  7044                           	opt stack 21
  7045                           
  7046                           ;pin.c: 10: activity = 1;
  7047                           
  7048                           ;incstack = 0
  7049  00E96C  0E00               	movlw	0
  7050  00E96E  6E2A               	movwf	_activity+1,c
  7051  00E970  0E01               	movlw	1
  7052  00E972  6E29               	movwf	_activity,c
  7053                           
  7054                           ;pin.c: 11: strcpy(pin_input, "");
  7055  00E974  0E9F               	movlw	low _pin_input
  7056  00E976  6E01               	movwf	strcpy@to,c
  7057  00E978  0E00               	movlw	high _pin_input
  7058  00E97A  6E02               	movwf	strcpy@to+1,c
  7059  00E97C  0EF1               	movlw	low (STR_24+1)
  7060  00E97E  6E03               	movwf	strcpy@from,c
  7061  00E980  0EFF               	movlw	high (STR_24+1)
  7062  00E982  6E04               	movwf	strcpy@from+1,c
  7063  00E984  ECDB  F073         	call	_strcpy	;wreg free
  7064                           
  7065                           ;pin.c: 12: lcd_init();
  7066  00E988  EC3F  F078         	call	_lcd_init	;wreg free
  7067                           
  7068                           ;pin.c: 13: lcd_write(1,1,"Ingrese su PIN:");
  7069  00E98C  0E00               	movlw	0
  7070  00E98E  6E0C               	movwf	lcd_write@column+1,c
  7071  00E990  0E01               	movlw	1
  7072  00E992  6E0B               	movwf	lcd_write@column,c
  7073  00E994  0E00               	movlw	0
  7074  00E996  6E0E               	movwf	lcd_write@row+1,c
  7075  00E998  0E01               	movlw	1
  7076  00E99A  6E0D               	movwf	lcd_write@row,c
  7077  00E99C  0E12               	movlw	low STR_36
  7078  00E99E  6E0F               	movwf	lcd_write@string,c
  7079  00E9A0  0EFF               	movlw	high STR_36
  7080  00E9A2  6E10               	movwf	lcd_write@string+1,c
  7081  00E9A4  EC33  F071         	call	_lcd_write	;wreg free
  7082                           
  7083                           ;pin.c: 14: lcd_gotoxy(1,2);
  7084  00E9A8  0E02               	movlw	2
  7085  00E9AA  6E05               	movwf	lcd_gotoxy@y,c
  7086  00E9AC  0E01               	movlw	1
  7087  00E9AE  EC7C  F071         	call	_lcd_gotoxy
  7088                           
  7089                           ;pin.c: 15: lcd_comand(0b00001111);
  7090  00E9B2  0E0F               	movlw	15
  7091  00E9B4  EC06  F071         	call	_lcd_comand
  7092  00E9B8  0012               	return		;funcret
  7093  00E9BA                     __end_of_activity_pin:
  7094                           	opt stack 0
  7095                           tblptru	equ	0xFF8
  7096                           tblptrh	equ	0xFF7
  7097                           tblptrl	equ	0xFF6
  7098                           tablat	equ	0xFF5
  7099                           prodh	equ	0xFF4
  7100                           prodl	equ	0xFF3
  7101                           intcon	equ	0xFF2
  7102                           postinc0	equ	0xFEE
  7103                           wreg	equ	0xFE8
  7104                           indf1	equ	0xFE7
  7105                           postdec1	equ	0xFE5
  7106                           fsr1h	equ	0xFE2
  7107                           fsr1l	equ	0xFE1
  7108                           indf2	equ	0xFDF
  7109                           fsr2h	equ	0xFDA
  7110                           fsr2l	equ	0xFD9
  7111                           status	equ	0xFD8
  7112                           
  7113 ;; *************** function _strcpy *****************
  7114 ;; Defined at:
  7115 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  to              2    0[COMRAM] PTR unsigned char 
  7118 ;;		 -> pin(5), pin_input(5), 
  7119 ;;  from            2    2[COMRAM] PTR const unsigned char 
  7120 ;;		 -> STR_42(5), STR_40(1), STR_35(1), pin_input(5), 
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  cp              2    4[COMRAM] PTR unsigned char 
  7123 ;;		 -> pin(5), pin_input(5), 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  2    0[COMRAM] PTR unsigned char 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7137 ;;Total ram usage:        6 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_activity_pin
  7143 ;;		_activity_submenu_pin_set
  7144 ;;		_pin_set
  7145 ;;		_pin_reset
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text49
  7150  00E7B6                     __ptext49:
  7151                           	opt stack 0
  7152  00E7B6                     _strcpy:
  7153                           	opt stack 28
  7154                           
  7155                           ;incstack = 0
  7156  00E7B6  C001  F005         	movff	strcpy@to,strcpy@cp
  7157  00E7BA  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  7158  00E7BE  D005               	goto	l3445
  7159  00E7C0                     l3443:
  7160  00E7C0  4A05               	infsnz	strcpy@cp,f,c
  7161  00E7C2  2A06               	incf	strcpy@cp+1,f,c
  7162  00E7C4  4A03               	infsnz	strcpy@from,f,c
  7163  00E7C6  2A04               	incf	strcpy@from+1,f,c
  7164  00E7C8  D000               	goto	l3445
  7165  00E7CA                     l3445:
  7166  00E7CA  C003  FFF6         	movff	strcpy@from,tblptrl
  7167  00E7CE  C004  FFF7         	movff	strcpy@from+1,tblptrh
  7168  00E7D2  6AF8               	clrf	tblptru,c
  7169  00E7D4  C005  FFD9         	movff	strcpy@cp,fsr2l
  7170  00E7D8  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  7171  00E7DC  0E0E               	movlw	(high __ramtop+-1)
  7172  00E7DE  64F7               	cpfsgt	tblptrh,c
  7173  00E7E0  D003               	bra	u1997
  7174  00E7E2  0008               	tblrd		*
  7175  00E7E4  50F5               	movf	tablat,w,c
  7176  00E7E6  D005               	bra	u1990
  7177  00E7E8                     u1997:
  7178  00E7E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  7179  00E7EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  7180  00E7F0  50EF               	movf	indf0,w,c
  7181  00E7F2                     u1990:
  7182  00E7F2  6EDF               	movwf	indf2,c
  7183  00E7F4  50DF               	movf	indf2,w,c
  7184  00E7F6  A4D8               	btfss	status,2,c
  7185  00E7F8  D7E3               	goto	l3443
  7186                           
  7187                           ;	Return value of _strcpy is never used
  7188  00E7FA  0012               	return		;funcret
  7189  00E7FC                     __end_of_strcpy:
  7190                           	opt stack 0
  7191                           tblptru	equ	0xFF8
  7192                           tblptrh	equ	0xFF7
  7193                           tblptrl	equ	0xFF6
  7194                           tablat	equ	0xFF5
  7195                           prodh	equ	0xFF4
  7196                           prodl	equ	0xFF3
  7197                           intcon	equ	0xFF2
  7198                           indf0	equ	0xFEF
  7199                           postinc0	equ	0xFEE
  7200                           fsr0h	equ	0xFEA
  7201                           fsr0l	equ	0xFE9
  7202                           wreg	equ	0xFE8
  7203                           indf1	equ	0xFE7
  7204                           postdec1	equ	0xFE5
  7205                           fsr1h	equ	0xFE2
  7206                           fsr1l	equ	0xFE1
  7207                           indf2	equ	0xFDF
  7208                           fsr2h	equ	0xFDA
  7209                           fsr2l	equ	0xFD9
  7210                           status	equ	0xFD8
  7211                           
  7212 ;; *************** function _lcd_comand *****************
  7213 ;; Defined at:
  7214 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  d               1    wreg     unsigned char 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  d               1    4[COMRAM] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;		None               void
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;Total ram usage:        1 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    2
  7235 ;; This function calls:
  7236 ;;		_lcd_send_byte
  7237 ;; This function is called by:
  7238 ;;		_activity_submenu_date_config
  7239 ;;		_activity_submenu_time_config
  7240 ;;		_setup
  7241 ;;		_activity_pin
  7242 ;;		_activity_submenu_pin_set
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text50
  7247  00E20C                     __ptext50:
  7248                           	opt stack 0
  7249  00E20C                     _lcd_comand:
  7250                           	opt stack 27
  7251                           
  7252                           ;incstack = 0
  7253                           ;lcd_comand@d stored from wreg
  7254  00E20C  6E05               	movwf	lcd_comand@d,c
  7255                           
  7256                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  7257  00E20E  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  7258  00E212  0E00               	movlw	0
  7259  00E214  EC2A  F072         	call	_lcd_send_byte
  7260  00E218  0012               	return		;funcret
  7261  00E21A                     __end_of_lcd_comand:
  7262                           	opt stack 0
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           indf0	equ	0xFEF
  7271                           postinc0	equ	0xFEE
  7272                           fsr0h	equ	0xFEA
  7273                           fsr0l	equ	0xFE9
  7274                           wreg	equ	0xFE8
  7275                           indf1	equ	0xFE7
  7276                           postdec1	equ	0xFE5
  7277                           fsr1h	equ	0xFE2
  7278                           fsr1l	equ	0xFE1
  7279                           indf2	equ	0xFDF
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function _home_config_refresh *****************
  7285 ;; Defined at:
  7286 ;;		line 300 in file "main.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;		None               void
  7293 ;; Registers used:
  7294 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;Total ram usage:        2 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    7
  7307 ;; This function calls:
  7308 ;;		_home_state_refresh
  7309 ;;		_home_tone_refresh
  7310 ;;		_home_volume_refresh
  7311 ;; This function is called by:
  7312 ;;		_main
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text51
  7317  00F5EE                     __ptext51:
  7318                           	opt stack 0
  7319  00F5EE                     _home_config_refresh:
  7320                           	opt stack 23
  7321                           
  7322                           ;main.c: 302: if(state == 1){LATBbits.LATB1 = 1;;}
  7323                           
  7324                           ;incstack = 0
  7325  00F5EE  0441               	decf	_state,w,c
  7326  00F5F0  1042               	iorwf	_state+1,w,c
  7327  00F5F2  A4D8               	btfss	status,2,c
  7328  00F5F4  D002               	goto	l4191
  7329  00F5F6  828A               	bsf	3978,1,c	;volatile
  7330  00F5F8  D000               	goto	l4191
  7331  00F5FA                     l4191:
  7332                           
  7333                           ;main.c: 303: if(state == 0){LATBbits.LATB1 = 0;;}
  7334  00F5FA  5041               	movf	_state,w,c
  7335  00F5FC  1042               	iorwf	_state+1,w,c
  7336  00F5FE  A4D8               	btfss	status,2,c
  7337  00F600  D002               	goto	l4195
  7338  00F602  928A               	bcf	3978,1,c	;volatile
  7339  00F604  D000               	goto	l4195
  7340  00F606                     l4195:
  7341                           
  7342                           ;main.c: 305: config_widget_time++;
  7343  00F606  4A31               	infsnz	_config_widget_time,f,c
  7344  00F608  2A32               	incf	_config_widget_time+1,f,c
  7345                           
  7346                           ;main.c: 307: switch(config_widget){
  7347  00F60A  D030               	goto	l4217
  7348  00F60C                     l4197:
  7349                           
  7350                           ;main.c: 310: home_state_refresh();
  7351  00F60C  EC52  F075         	call	_home_state_refresh	;wreg free
  7352                           
  7353                           ;main.c: 311: if(config_widget_time == 5){
  7354  00F610  0E05               	movlw	5
  7355  00F612  1831               	xorwf	_config_widget_time,w,c
  7356  00F614  1032               	iorwf	_config_widget_time+1,w,c
  7357  00F616  A4D8               	btfss	status,2,c
  7358  00F618  0012               	return	
  7359                           
  7360                           ;main.c: 312: config_widget_time = 0;
  7361  00F61A  0E00               	movlw	0
  7362  00F61C  6E32               	movwf	_config_widget_time+1,c
  7363  00F61E  0E00               	movlw	0
  7364  00F620  6E31               	movwf	_config_widget_time,c
  7365                           
  7366                           ;main.c: 313: config_widget = 1;
  7367  00F622  0E00               	movlw	0
  7368  00F624  6E30               	movwf	_config_widget+1,c
  7369  00F626  0E01               	movlw	1
  7370  00F628  6E2F               	movwf	_config_widget,c
  7371                           
  7372                           ;main.c: 314: }
  7373                           ;main.c: 315: break;
  7374  00F62A  0012               	return	
  7375  00F62C                     l4203:
  7376                           
  7377                           ;main.c: 318: home_volume_refresh();
  7378  00F62C  ECA4  F075         	call	_home_volume_refresh	;wreg free
  7379                           
  7380                           ;main.c: 319: if(config_widget_time == 5){
  7381  00F630  0E05               	movlw	5
  7382  00F632  1831               	xorwf	_config_widget_time,w,c
  7383  00F634  1032               	iorwf	_config_widget_time+1,w,c
  7384  00F636  A4D8               	btfss	status,2,c
  7385  00F638  0012               	return	
  7386                           
  7387                           ;main.c: 320: config_widget_time = 0;
  7388  00F63A  0E00               	movlw	0
  7389  00F63C  6E32               	movwf	_config_widget_time+1,c
  7390  00F63E  0E00               	movlw	0
  7391  00F640  6E31               	movwf	_config_widget_time,c
  7392                           
  7393                           ;main.c: 321: config_widget = 2;
  7394  00F642  0E00               	movlw	0
  7395  00F644  6E30               	movwf	_config_widget+1,c
  7396  00F646  0E02               	movlw	2
  7397  00F648  6E2F               	movwf	_config_widget,c
  7398                           
  7399                           ;main.c: 322: }
  7400                           ;main.c: 323: break;
  7401  00F64A  0012               	return	
  7402  00F64C                     l4209:
  7403                           
  7404                           ;main.c: 326: home_tone_refresh();
  7405  00F64C  EC7B  F075         	call	_home_tone_refresh	;wreg free
  7406                           
  7407                           ;main.c: 327: if(config_widget_time == 5){
  7408  00F650  0E05               	movlw	5
  7409  00F652  1831               	xorwf	_config_widget_time,w,c
  7410  00F654  1032               	iorwf	_config_widget_time+1,w,c
  7411  00F656  A4D8               	btfss	status,2,c
  7412  00F658  0012               	return	
  7413                           
  7414                           ;main.c: 328: config_widget_time = 0;
  7415  00F65A  0E00               	movlw	0
  7416  00F65C  6E32               	movwf	_config_widget_time+1,c
  7417  00F65E  0E00               	movlw	0
  7418  00F660  6E31               	movwf	_config_widget_time,c
  7419                           
  7420                           ;main.c: 329: config_widget = 0;
  7421  00F662  0E00               	movlw	0
  7422  00F664  6E30               	movwf	_config_widget+1,c
  7423  00F666  0E00               	movlw	0
  7424  00F668  6E2F               	movwf	_config_widget,c
  7425                           
  7426                           ;main.c: 333: }
  7427                           
  7428                           ;main.c: 330: }
  7429                           ;main.c: 331: break;
  7430  00F66A  0012               	return	
  7431  00F66C                     l4217:
  7432  00F66C  C02F  F024         	movff	_config_widget,??_home_config_refresh
  7433  00F670  C030  F025         	movff	_config_widget+1,??_home_config_refresh+1
  7434                           
  7435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7436                           ; Switch size 1, requested type "space"
  7437                           ; Number of cases is 1, Range of values is 0 to 0
  7438                           ; switch strategies available:
  7439                           ; Name         Instructions Cycles
  7440                           ; simple_byte            4     3 (average)
  7441                           ;	Chosen strategy is simple_byte
  7442  00F674  5025               	movf	??_home_config_refresh+1,w,c
  7443  00F676  0A00               	xorlw	0	; case 0
  7444  00F678  A4D8               	btfss	status,2,c
  7445  00F67A  0012               	return	
  7446                           
  7447                           ; Switch size 1, requested type "space"
  7448                           ; Number of cases is 3, Range of values is 0 to 2
  7449                           ; switch strategies available:
  7450                           ; Name         Instructions Cycles
  7451                           ; simple_byte           10     6 (average)
  7452                           ;	Chosen strategy is simple_byte
  7453  00F67C  5024               	movf	??_home_config_refresh,w,c
  7454  00F67E  0A00               	xorlw	0	; case 0
  7455  00F680  B4D8               	btfsc	status,2,c
  7456  00F682  D7C4               	goto	l4197
  7457  00F684  0A01               	xorlw	1	; case 1
  7458  00F686  B4D8               	btfsc	status,2,c
  7459  00F688  D7D1               	goto	l4203
  7460  00F68A  0A03               	xorlw	3	; case 2
  7461  00F68C  A4D8               	btfss	status,2,c
  7462  00F68E  0012               	return	
  7463  00F690  D7DD               	goto	l4209
  7464  00F692  0012               	return		;funcret
  7465  00F694                     __end_of_home_config_refresh:
  7466                           	opt stack 0
  7467                           tblptru	equ	0xFF8
  7468                           tblptrh	equ	0xFF7
  7469                           tblptrl	equ	0xFF6
  7470                           tablat	equ	0xFF5
  7471                           prodh	equ	0xFF4
  7472                           prodl	equ	0xFF3
  7473                           intcon	equ	0xFF2
  7474                           indf0	equ	0xFEF
  7475                           postinc0	equ	0xFEE
  7476                           fsr0h	equ	0xFEA
  7477                           fsr0l	equ	0xFE9
  7478                           wreg	equ	0xFE8
  7479                           indf1	equ	0xFE7
  7480                           postdec1	equ	0xFE5
  7481                           fsr1h	equ	0xFE2
  7482                           fsr1l	equ	0xFE1
  7483                           indf2	equ	0xFDF
  7484                           fsr2h	equ	0xFDA
  7485                           fsr2l	equ	0xFD9
  7486                           status	equ	0xFD8
  7487                           
  7488 ;; *************** function _home_volume_refresh *****************
  7489 ;; Defined at:
  7490 ;;		line 276 in file "main.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;		None               void
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7508 ;;Total ram usage:        0 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    6
  7511 ;; This function calls:
  7512 ;;		_lcd_write
  7513 ;;		_sprintf
  7514 ;; This function is called by:
  7515 ;;		_home_config_refresh
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text52
  7520  00EB48                     __ptext52:
  7521                           	opt stack 0
  7522  00EB48                     _home_volume_refresh:
  7523                           	opt stack 23
  7524                           
  7525                           ;main.c: 278: if(alarm_volume == 0){
  7526                           
  7527                           ;incstack = 0
  7528  00EB48  502D               	movf	_alarm_volume,w,c
  7529  00EB4A  102E               	iorwf	_alarm_volume+1,w,c
  7530  00EB4C  A4D8               	btfss	status,2,c
  7531  00EB4E  D00B               	goto	l4023
  7532                           
  7533                           ;main.c: 279: sprintf(buffer1,"VOL:BA");
  7534  00EB50  0E86               	movlw	low _buffer1
  7535  00EB52  6E0D               	movwf	sprintf@sp,c
  7536  00EB54  0E00               	movlw	high _buffer1
  7537  00EB56  6E0E               	movwf	sprintf@sp+1,c
  7538  00EB58  0E8F               	movlw	low STR_17
  7539  00EB5A  6E0F               	movwf	sprintf@f,c
  7540  00EB5C  0EFF               	movlw	high STR_17
  7541  00EB5E  6E10               	movwf	sprintf@f+1,c
  7542  00EB60  EC47  F07E         	call	_sprintf	;wreg free
  7543                           
  7544                           ;main.c: 280: }
  7545  00EB64  D00B               	goto	l4025
  7546  00EB66                     l4023:
  7547                           
  7548                           ;main.c: 281: else{
  7549                           ;main.c: 282: sprintf(buffer1,"VOL:AL");
  7550  00EB66  0E86               	movlw	low _buffer1
  7551  00EB68  6E0D               	movwf	sprintf@sp,c
  7552  00EB6A  0E00               	movlw	high _buffer1
  7553  00EB6C  6E0E               	movwf	sprintf@sp+1,c
  7554  00EB6E  0E9D               	movlw	low STR_18
  7555  00EB70  6E0F               	movwf	sprintf@f,c
  7556  00EB72  0EFF               	movlw	high STR_18
  7557  00EB74  6E10               	movwf	sprintf@f+1,c
  7558  00EB76  EC47  F07E         	call	_sprintf	;wreg free
  7559  00EB7A  D000               	goto	l4025
  7560  00EB7C                     l4025:
  7561                           
  7562                           ;main.c: 283: }
  7563                           ;main.c: 284: lcd_write(1,2,buffer1);
  7564  00EB7C  0E00               	movlw	0
  7565  00EB7E  6E0C               	movwf	lcd_write@column+1,c
  7566  00EB80  0E01               	movlw	1
  7567  00EB82  6E0B               	movwf	lcd_write@column,c
  7568  00EB84  0E00               	movlw	0
  7569  00EB86  6E0E               	movwf	lcd_write@row+1,c
  7570  00EB88  0E02               	movlw	2
  7571  00EB8A  6E0D               	movwf	lcd_write@row,c
  7572  00EB8C  0E86               	movlw	low _buffer1
  7573  00EB8E  6E0F               	movwf	lcd_write@string,c
  7574  00EB90  0E00               	movlw	high _buffer1
  7575  00EB92  6E10               	movwf	lcd_write@string+1,c
  7576  00EB94  EC33  F071         	call	_lcd_write	;wreg free
  7577  00EB98  0012               	return		;funcret
  7578  00EB9A                     __end_of_home_volume_refresh:
  7579                           	opt stack 0
  7580                           tblptru	equ	0xFF8
  7581                           tblptrh	equ	0xFF7
  7582                           tblptrl	equ	0xFF6
  7583                           tablat	equ	0xFF5
  7584                           prodh	equ	0xFF4
  7585                           prodl	equ	0xFF3
  7586                           intcon	equ	0xFF2
  7587                           indf0	equ	0xFEF
  7588                           postinc0	equ	0xFEE
  7589                           fsr0h	equ	0xFEA
  7590                           fsr0l	equ	0xFE9
  7591                           wreg	equ	0xFE8
  7592                           indf1	equ	0xFE7
  7593                           postdec1	equ	0xFE5
  7594                           fsr1h	equ	0xFE2
  7595                           fsr1l	equ	0xFE1
  7596                           indf2	equ	0xFDF
  7597                           fsr2h	equ	0xFDA
  7598                           fsr2l	equ	0xFD9
  7599                           status	equ	0xFD8
  7600                           
  7601 ;; *************** function _home_tone_refresh *****************
  7602 ;; Defined at:
  7603 ;;		line 288 in file "main.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;		None               void
  7610 ;; Registers used:
  7611 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7621 ;;Total ram usage:        0 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    6
  7624 ;; This function calls:
  7625 ;;		_lcd_write
  7626 ;;		_sprintf
  7627 ;; This function is called by:
  7628 ;;		_home_config_refresh
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text53
  7633  00EAF6                     __ptext53:
  7634                           	opt stack 0
  7635  00EAF6                     _home_tone_refresh:
  7636                           	opt stack 23
  7637                           
  7638                           ;main.c: 290: if(alarm_tone == 0){
  7639                           
  7640                           ;incstack = 0
  7641  00EAF6  502B               	movf	_alarm_tone,w,c
  7642  00EAF8  102C               	iorwf	_alarm_tone+1,w,c
  7643  00EAFA  A4D8               	btfss	status,2,c
  7644  00EAFC  D00B               	goto	l4031
  7645                           
  7646                           ;main.c: 291: sprintf(buffer1,"TONO:1");
  7647  00EAFE  0E86               	movlw	low _buffer1
  7648  00EB00  6E0D               	movwf	sprintf@sp,c
  7649  00EB02  0E00               	movlw	high _buffer1
  7650  00EB04  6E0E               	movwf	sprintf@sp+1,c
  7651  00EB06  0E81               	movlw	low STR_19
  7652  00EB08  6E0F               	movwf	sprintf@f,c
  7653  00EB0A  0EFF               	movlw	high STR_19
  7654  00EB0C  6E10               	movwf	sprintf@f+1,c
  7655  00EB0E  EC47  F07E         	call	_sprintf	;wreg free
  7656                           
  7657                           ;main.c: 292: }
  7658  00EB12  D00B               	goto	l4033
  7659  00EB14                     l4031:
  7660                           
  7661                           ;main.c: 293: else{
  7662                           ;main.c: 294: sprintf(buffer1,"TONO:2");
  7663  00EB14  0E86               	movlw	low _buffer1
  7664  00EB16  6E0D               	movwf	sprintf@sp,c
  7665  00EB18  0E00               	movlw	high _buffer1
  7666  00EB1A  6E0E               	movwf	sprintf@sp+1,c
  7667  00EB1C  0E88               	movlw	low STR_20
  7668  00EB1E  6E0F               	movwf	sprintf@f,c
  7669  00EB20  0EFF               	movlw	high STR_20
  7670  00EB22  6E10               	movwf	sprintf@f+1,c
  7671  00EB24  EC47  F07E         	call	_sprintf	;wreg free
  7672  00EB28  D000               	goto	l4033
  7673  00EB2A                     l4033:
  7674                           
  7675                           ;main.c: 295: }
  7676                           ;main.c: 296: lcd_write(1,2,buffer1);
  7677  00EB2A  0E00               	movlw	0
  7678  00EB2C  6E0C               	movwf	lcd_write@column+1,c
  7679  00EB2E  0E01               	movlw	1
  7680  00EB30  6E0B               	movwf	lcd_write@column,c
  7681  00EB32  0E00               	movlw	0
  7682  00EB34  6E0E               	movwf	lcd_write@row+1,c
  7683  00EB36  0E02               	movlw	2
  7684  00EB38  6E0D               	movwf	lcd_write@row,c
  7685  00EB3A  0E86               	movlw	low _buffer1
  7686  00EB3C  6E0F               	movwf	lcd_write@string,c
  7687  00EB3E  0E00               	movlw	high _buffer1
  7688  00EB40  6E10               	movwf	lcd_write@string+1,c
  7689  00EB42  EC33  F071         	call	_lcd_write	;wreg free
  7690  00EB46  0012               	return		;funcret
  7691  00EB48                     __end_of_home_tone_refresh:
  7692                           	opt stack 0
  7693                           tblptru	equ	0xFF8
  7694                           tblptrh	equ	0xFF7
  7695                           tblptrl	equ	0xFF6
  7696                           tablat	equ	0xFF5
  7697                           prodh	equ	0xFF4
  7698                           prodl	equ	0xFF3
  7699                           intcon	equ	0xFF2
  7700                           indf0	equ	0xFEF
  7701                           postinc0	equ	0xFEE
  7702                           fsr0h	equ	0xFEA
  7703                           fsr0l	equ	0xFE9
  7704                           wreg	equ	0xFE8
  7705                           indf1	equ	0xFE7
  7706                           postdec1	equ	0xFE5
  7707                           fsr1h	equ	0xFE2
  7708                           fsr1l	equ	0xFE1
  7709                           indf2	equ	0xFDF
  7710                           fsr2h	equ	0xFDA
  7711                           fsr2l	equ	0xFD9
  7712                           status	equ	0xFD8
  7713                           
  7714 ;; *************** function _home_state_refresh *****************
  7715 ;; Defined at:
  7716 ;;		line 264 in file "main.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;		None
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;		None
  7721 ;; Return value:  Size  Location     Type
  7722 ;;		None               void
  7723 ;; Registers used:
  7724 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;Total ram usage:        0 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:    6
  7737 ;; This function calls:
  7738 ;;		_lcd_write
  7739 ;;		_sprintf
  7740 ;; This function is called by:
  7741 ;;		_home_config_refresh
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text54
  7746  00EAA4                     __ptext54:
  7747                           	opt stack 0
  7748  00EAA4                     _home_state_refresh:
  7749                           	opt stack 23
  7750                           
  7751                           ;main.c: 266: if(state == 1){
  7752                           
  7753                           ;incstack = 0
  7754  00EAA4  0441               	decf	_state,w,c
  7755  00EAA6  1042               	iorwf	_state+1,w,c
  7756  00EAA8  A4D8               	btfss	status,2,c
  7757  00EAAA  D00B               	goto	l4015
  7758                           
  7759                           ;main.c: 267: sprintf(buffer1,"ACT:SI");
  7760  00EAAC  0E86               	movlw	low _buffer1
  7761  00EAAE  6E0D               	movwf	sprintf@sp,c
  7762  00EAB0  0E00               	movlw	high _buffer1
  7763  00EAB2  6E0E               	movwf	sprintf@sp+1,c
  7764  00EAB4  0E96               	movlw	low STR_15
  7765  00EAB6  6E0F               	movwf	sprintf@f,c
  7766  00EAB8  0EFF               	movlw	high STR_15
  7767  00EABA  6E10               	movwf	sprintf@f+1,c
  7768  00EABC  EC47  F07E         	call	_sprintf	;wreg free
  7769                           
  7770                           ;main.c: 268: }
  7771  00EAC0  D00B               	goto	l4017
  7772  00EAC2                     l4015:
  7773                           
  7774                           ;main.c: 269: else{
  7775                           ;main.c: 270: sprintf(buffer1,"ACT:NO");
  7776  00EAC2  0E86               	movlw	low _buffer1
  7777  00EAC4  6E0D               	movwf	sprintf@sp,c
  7778  00EAC6  0E00               	movlw	high _buffer1
  7779  00EAC8  6E0E               	movwf	sprintf@sp+1,c
  7780  00EACA  0EA4               	movlw	low STR_16
  7781  00EACC  6E0F               	movwf	sprintf@f,c
  7782  00EACE  0EFF               	movlw	high STR_16
  7783  00EAD0  6E10               	movwf	sprintf@f+1,c
  7784  00EAD2  EC47  F07E         	call	_sprintf	;wreg free
  7785  00EAD6  D000               	goto	l4017
  7786  00EAD8                     l4017:
  7787                           
  7788                           ;main.c: 271: }
  7789                           ;main.c: 272: lcd_write(1,2,buffer1);
  7790  00EAD8  0E00               	movlw	0
  7791  00EADA  6E0C               	movwf	lcd_write@column+1,c
  7792  00EADC  0E01               	movlw	1
  7793  00EADE  6E0B               	movwf	lcd_write@column,c
  7794  00EAE0  0E00               	movlw	0
  7795  00EAE2  6E0E               	movwf	lcd_write@row+1,c
  7796  00EAE4  0E02               	movlw	2
  7797  00EAE6  6E0D               	movwf	lcd_write@row,c
  7798  00EAE8  0E86               	movlw	low _buffer1
  7799  00EAEA  6E0F               	movwf	lcd_write@string,c
  7800  00EAEC  0E00               	movlw	high _buffer1
  7801  00EAEE  6E10               	movwf	lcd_write@string+1,c
  7802  00EAF0  EC33  F071         	call	_lcd_write	;wreg free
  7803  00EAF4  0012               	return		;funcret
  7804  00EAF6                     __end_of_home_state_refresh:
  7805                           	opt stack 0
  7806                           tblptru	equ	0xFF8
  7807                           tblptrh	equ	0xFF7
  7808                           tblptrl	equ	0xFF6
  7809                           tablat	equ	0xFF5
  7810                           prodh	equ	0xFF4
  7811                           prodl	equ	0xFF3
  7812                           intcon	equ	0xFF2
  7813                           indf0	equ	0xFEF
  7814                           postinc0	equ	0xFEE
  7815                           fsr0h	equ	0xFEA
  7816                           fsr0l	equ	0xFE9
  7817                           wreg	equ	0xFE8
  7818                           indf1	equ	0xFE7
  7819                           postdec1	equ	0xFE5
  7820                           fsr1h	equ	0xFE2
  7821                           fsr1l	equ	0xFE1
  7822                           indf2	equ	0xFDF
  7823                           fsr2h	equ	0xFDA
  7824                           fsr2l	equ	0xFD9
  7825                           status	equ	0xFD8
  7826                           
  7827 ;; *************** function _home_clock_refresh *****************
  7828 ;; Defined at:
  7829 ;;		line 255 in file "main.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;		None
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;		None               void
  7836 ;; Registers used:
  7837 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7847 ;;Total ram usage:        0 bytes
  7848 ;; Hardware stack levels used:    1
  7849 ;; Hardware stack levels required when called:    6
  7850 ;; This function calls:
  7851 ;;		_lcd_write
  7852 ;;		_sprintf
  7853 ;; This function is called by:
  7854 ;;		_main
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text55
  7859  00F396                     __ptext55:
  7860                           	opt stack 0
  7861  00F396                     _home_clock_refresh:
  7862                           	opt stack 24
  7863                           
  7864                           ;main.c: 257: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  7865                           
  7866                           ;incstack = 0
  7867  00F396  0E86               	movlw	low _buffer1
  7868  00F398  6E0D               	movwf	sprintf@sp,c
  7869  00F39A  0E00               	movlw	high _buffer1
  7870  00F39C  6E0E               	movwf	sprintf@sp+1,c
  7871  00F39E  0E32               	movlw	low STR_10
  7872  00F3A0  6E0F               	movwf	sprintf@f,c
  7873  00F3A2  0EFF               	movlw	high STR_10
  7874  00F3A4  6E10               	movwf	sprintf@f+1,c
  7875  00F3A6  C050  F011         	movff	_dia,?_sprintf+4
  7876  00F3AA  C051  F012         	movff	_dia+1,?_sprintf+5
  7877  00F3AE  C056  F013         	movff	_mes,?_sprintf+6
  7878  00F3B2  C057  F014         	movff	_mes+1,?_sprintf+7
  7879  00F3B6  C04E  F015         	movff	_anio,?_sprintf+8
  7880  00F3BA  C04F  F016         	movff	_anio+1,?_sprintf+9
  7881  00F3BE  EC47  F07E         	call	_sprintf	;wreg free
  7882                           
  7883                           ;main.c: 258: lcd_write(9,1,buffer1);
  7884  00F3C2  0E00               	movlw	0
  7885  00F3C4  6E0C               	movwf	lcd_write@column+1,c
  7886  00F3C6  0E09               	movlw	9
  7887  00F3C8  6E0B               	movwf	lcd_write@column,c
  7888  00F3CA  0E00               	movlw	0
  7889  00F3CC  6E0E               	movwf	lcd_write@row+1,c
  7890  00F3CE  0E01               	movlw	1
  7891  00F3D0  6E0D               	movwf	lcd_write@row,c
  7892  00F3D2  0E86               	movlw	low _buffer1
  7893  00F3D4  6E0F               	movwf	lcd_write@string,c
  7894  00F3D6  0E00               	movlw	high _buffer1
  7895  00F3D8  6E10               	movwf	lcd_write@string+1,c
  7896  00F3DA  EC33  F071         	call	_lcd_write	;wreg free
  7897                           
  7898                           ;main.c: 259: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  7899  00F3DE  0E86               	movlw	low _buffer1
  7900  00F3E0  6E0D               	movwf	sprintf@sp,c
  7901  00F3E2  0E00               	movlw	high _buffer1
  7902  00F3E4  6E0E               	movwf	sprintf@sp+1,c
  7903  00F3E6  0E41               	movlw	low STR_12
  7904  00F3E8  6E0F               	movwf	sprintf@f,c
  7905  00F3EA  0EFF               	movlw	high STR_12
  7906  00F3EC  6E10               	movwf	sprintf@f+1,c
  7907  00F3EE  C054  F011         	movff	_hora,?_sprintf+4
  7908  00F3F2  C055  F012         	movff	_hora+1,?_sprintf+5
  7909  00F3F6  C03D  F013         	movff	_minuto,?_sprintf+6
  7910  00F3FA  C03E  F014         	movff	_minuto+1,?_sprintf+7
  7911  00F3FE  C03F  F015         	movff	_segundo,?_sprintf+8
  7912  00F402  C040  F016         	movff	_segundo+1,?_sprintf+9
  7913  00F406  EC47  F07E         	call	_sprintf	;wreg free
  7914                           
  7915                           ;main.c: 260: lcd_write(9,2,buffer1);
  7916  00F40A  0E00               	movlw	0
  7917  00F40C  6E0C               	movwf	lcd_write@column+1,c
  7918  00F40E  0E09               	movlw	9
  7919  00F410  6E0B               	movwf	lcd_write@column,c
  7920  00F412  0E00               	movlw	0
  7921  00F414  6E0E               	movwf	lcd_write@row+1,c
  7922  00F416  0E02               	movlw	2
  7923  00F418  6E0D               	movwf	lcd_write@row,c
  7924  00F41A  0E86               	movlw	low _buffer1
  7925  00F41C  6E0F               	movwf	lcd_write@string,c
  7926  00F41E  0E00               	movlw	high _buffer1
  7927  00F420  6E10               	movwf	lcd_write@string+1,c
  7928  00F422  EC33  F071         	call	_lcd_write	;wreg free
  7929  00F426  0012               	return		;funcret
  7930  00F428                     __end_of_home_clock_refresh:
  7931                           	opt stack 0
  7932                           tblptru	equ	0xFF8
  7933                           tblptrh	equ	0xFF7
  7934                           tblptrl	equ	0xFF6
  7935                           tablat	equ	0xFF5
  7936                           prodh	equ	0xFF4
  7937                           prodl	equ	0xFF3
  7938                           intcon	equ	0xFF2
  7939                           indf0	equ	0xFEF
  7940                           postinc0	equ	0xFEE
  7941                           fsr0h	equ	0xFEA
  7942                           fsr0l	equ	0xFE9
  7943                           wreg	equ	0xFE8
  7944                           indf1	equ	0xFE7
  7945                           postdec1	equ	0xFE5
  7946                           fsr1h	equ	0xFE2
  7947                           fsr1l	equ	0xFE1
  7948                           indf2	equ	0xFDF
  7949                           fsr2h	equ	0xFDA
  7950                           fsr2l	equ	0xFD9
  7951                           status	equ	0xFD8
  7952                           
  7953 ;; *************** function _sprintf *****************
  7954 ;; Defined at:
  7955 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  sp              2   12[COMRAM] PTR unsigned char 
  7958 ;;		 -> buffer1(20), 
  7959 ;;  f               2   14[COMRAM] PTR const unsigned char 
  7960 ;;		 -> STR_21(5), STR_20(7), STR_19(7), STR_18(7), 
  7961 ;;		 -> STR_17(7), STR_16(7), STR_15(7), STR_14(15), 
  7962 ;;		 -> STR_13(15), STR_12(15), STR_10(15), 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  tmpval          4    0        struct .
  7965 ;;  cp              3    0        PTR const unsigned char 
  7966 ;;  width           2   32[COMRAM] int 
  7967 ;;  val             2   29[COMRAM] unsigned int 
  7968 ;;  ap              2   26[COMRAM] PTR void [1]
  7969 ;;		 -> ?_sprintf(2), 
  7970 ;;  len             2    0        unsigned int 
  7971 ;;  c               1   34[COMRAM] char 
  7972 ;;  prec            1   31[COMRAM] char 
  7973 ;;  flag            1   28[COMRAM] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  2   12[COMRAM] int 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7983 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7984 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;Total ram usage:       23 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    1
  7990 ;; This function calls:
  7991 ;;		___lwdiv
  7992 ;;		___lwmod
  7993 ;;		___wmul
  7994 ;;		_isdigit
  7995 ;; This function is called by:
  7996 ;;		_activity_submenu_date_config
  7997 ;;		_activity_submenu_time_config
  7998 ;;		_home_clock_refresh
  7999 ;;		_home_state_refresh
  8000 ;;		_home_volume_refresh
  8001 ;;		_home_tone_refresh
  8002 ;;		_button_number
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           	psect	text56
  8007  00FC8E                     __ptext56:
  8008                           	opt stack 0
  8009  00FC8E                     _sprintf:
  8010                           	opt stack 27
  8011                           
  8012                           ;doprnt.c: 494: va_list ap;
  8013                           ;doprnt.c: 499: signed char c;
  8014                           ;doprnt.c: 501: int width;
  8015                           ;doprnt.c: 506: signed char prec;
  8016                           ;doprnt.c: 508: unsigned char flag;
  8017                           ;doprnt.c: 523: union {
  8018                           ;doprnt.c: 524: unsigned long vd;
  8019                           ;doprnt.c: 525: double integ;
  8020                           ;doprnt.c: 526: } tmpval;
  8021                           ;doprnt.c: 528: unsigned int val;
  8022                           ;doprnt.c: 529: unsigned len;
  8023                           ;doprnt.c: 530: const char * cp;
  8024                           ;doprnt.c: 533: *ap = __va_start();
  8025                           
  8026                           ;incstack = 0
  8027  00FC8E  0E11               	movlw	low (?_sprintf+4)
  8028  00FC90  6E1B               	movwf	sprintf@ap,c
  8029  00FC92  0E00               	movlw	high (?_sprintf+4)
  8030  00FC94  6E1C               	movwf	sprintf@ap+1,c
  8031                           
  8032                           ;doprnt.c: 536: while(c = *f++) {
  8033  00FC96  D117               	goto	l3433
  8034  00FC98                     l3351:
  8035                           
  8036                           ;doprnt.c: 538: if(c != '%')
  8037  00FC98  0E25               	movlw	37
  8038  00FC9A  1823               	xorwf	sprintf@c,w,c
  8039  00FC9C  B4D8               	btfsc	status,2,c
  8040  00FC9E  D009               	goto	l3357
  8041                           
  8042                           ;doprnt.c: 540: {
  8043                           ;doprnt.c: 541: ((*sp++ = (c)));
  8044  00FCA0  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8045  00FCA4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8046  00FCA8  C023  FFDF         	movff	sprintf@c,indf2
  8047  00FCAC  4A0D               	infsnz	sprintf@sp,f,c
  8048  00FCAE  2A0E               	incf	sprintf@sp+1,f,c
  8049                           
  8050                           ;doprnt.c: 542: continue;
  8051  00FCB0  D10A               	goto	l3433
  8052  00FCB2                     l3357:
  8053                           
  8054                           ;doprnt.c: 543: }
  8055                           ;doprnt.c: 546: width = 0;
  8056  00FCB2  0E00               	movlw	0
  8057  00FCB4  6E22               	movwf	sprintf@width+1,c
  8058  00FCB6  0E00               	movlw	0
  8059  00FCB8  6E21               	movwf	sprintf@width,c
  8060                           
  8061                           ;doprnt.c: 548: flag = 0;
  8062  00FCBA  0E00               	movlw	0
  8063  00FCBC  6E1D               	movwf	sprintf@flag,c
  8064                           
  8065                           ;doprnt.c: 551: switch(*f) {
  8066                           
  8067                           ;doprnt.c: 550: for(;;) {
  8068  00FCBE  D005               	goto	l3363
  8069  00FCC0                     l3359:
  8070                           
  8071                           ;doprnt.c: 580: flag |= 0x04;
  8072  00FCC0  841D               	bsf	sprintf@flag,2,c
  8073                           
  8074                           ;doprnt.c: 581: f++;
  8075  00FCC2  4A0F               	infsnz	sprintf@f,f,c
  8076  00FCC4  2A10               	incf	sprintf@f+1,f,c
  8077                           
  8078                           ;doprnt.c: 582: continue;
  8079  00FCC6  D001               	goto	l3363
  8080                           
  8081                           ;doprnt.c: 584: }
  8082  00FCC8  D00B               	goto	l3365
  8083  00FCCA                     l3363:
  8084  00FCCA  C00F  FFF6         	movff	sprintf@f,tblptrl
  8085  00FCCE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8086  00FCD2                     	if	0	;tblptru may be non-zero
  8087  00FCD2                     	endif
  8088  00FCD2                     	if	0	;tblptru may be non-zero
  8089  00FCD2                     	endif
  8090  00FCD2  0008               	tblrd		*
  8091  00FCD4  50F5               	movf	tablat,w,c
  8092                           
  8093                           ; Switch size 1, requested type "space"
  8094                           ; Number of cases is 1, Range of values is 48 to 48
  8095                           ; switch strategies available:
  8096                           ; Name         Instructions Cycles
  8097                           ; simple_byte            4     3 (average)
  8098                           ;	Chosen strategy is simple_byte
  8099  00FCD6  0A30               	xorlw	48	; case 48
  8100  00FCD8  B4D8               	btfsc	status,2,c
  8101  00FCDA  D7F2               	goto	l3359
  8102                           
  8103                           ;doprnt.c: 585: break;
  8104  00FCDC  D001               	goto	l3365
  8105                           
  8106                           ;doprnt.c: 586: }
  8107  00FCDE  D7F5               	goto	l3363
  8108  00FCE0                     l3365:
  8109                           
  8110                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8111  00FCE0  C00F  FFF6         	movff	sprintf@f,tblptrl
  8112  00FCE4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8113  00FCE8                     	if	0	;tblptru may be non-zero
  8114  00FCE8                     	endif
  8115  00FCE8                     	if	0	;tblptru may be non-zero
  8116  00FCE8                     	endif
  8117  00FCE8  0008               	tblrd		*
  8118  00FCEA  50F5               	movf	tablat,w,c
  8119  00FCEC  EC6B  F071         	call	_isdigit
  8120  00FCF0  A0D8               	btfss	status,0,c
  8121  00FCF2  D03A               	goto	l3381
  8122                           
  8123                           ;doprnt.c: 598: width = 0;
  8124  00FCF4  0E00               	movlw	0
  8125  00FCF6  6E22               	movwf	sprintf@width+1,c
  8126  00FCF8  0E00               	movlw	0
  8127  00FCFA  6E21               	movwf	sprintf@width,c
  8128  00FCFC  D000               	goto	l3369
  8129  00FCFE                     l3369:
  8130                           
  8131                           ;doprnt.c: 600: width *= 10;
  8132  00FCFE  C021  F001         	movff	sprintf@width,___wmul@multiplier
  8133  00FD02  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  8134  00FD06  0E00               	movlw	0
  8135  00FD08  6E04               	movwf	___wmul@multiplicand+1,c
  8136  00FD0A  0E0A               	movlw	10
  8137  00FD0C  6E03               	movwf	___wmul@multiplicand,c
  8138  00FD0E  EC8E  F071         	call	___wmul	;wreg free
  8139  00FD12  C001  F021         	movff	?___wmul,sprintf@width
  8140  00FD16  C002  F022         	movff	?___wmul+1,sprintf@width+1
  8141                           
  8142                           ;doprnt.c: 601: width += *f++ - '0';
  8143  00FD1A  0ED0               	movlw	208
  8144  00FD1C  6E17               	movwf	??_sprintf& (0+255),c
  8145  00FD1E  0EFF               	movlw	255
  8146  00FD20  6E18               	movwf	(??_sprintf+1)& (0+255),c
  8147  00FD22  C00F  FFF6         	movff	sprintf@f,tblptrl
  8148  00FD26  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8149  00FD2A                     	if	0	;tblptru may be non-zero
  8150  00FD2A                     	endif
  8151  00FD2A                     	if	0	;tblptru may be non-zero
  8152  00FD2A                     	endif
  8153  00FD2A  0008               	tblrd		*
  8154  00FD2C  50F5               	movf	tablat,w,c
  8155  00FD2E  6E19               	movwf	(??_sprintf+2)& (0+255),c
  8156  00FD30  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  8157  00FD32  5017               	movf	??_sprintf,w,c
  8158  00FD34  2619               	addwf	??_sprintf+2,f,c
  8159  00FD36  5018               	movf	??_sprintf+1,w,c
  8160  00FD38  221A               	addwfc	??_sprintf+3,f,c
  8161  00FD3A  5019               	movf	??_sprintf+2,w,c
  8162  00FD3C  2621               	addwf	sprintf@width,f,c
  8163  00FD3E  501A               	movf	??_sprintf+3,w,c
  8164  00FD40  2222               	addwfc	sprintf@width+1,f,c
  8165  00FD42  4A0F               	infsnz	sprintf@f,f,c
  8166  00FD44  2A10               	incf	sprintf@f+1,f,c
  8167                           
  8168                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8169  00FD46  C00F  FFF6         	movff	sprintf@f,tblptrl
  8170  00FD4A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8171  00FD4E                     	if	0	;tblptru may be non-zero
  8172  00FD4E                     	endif
  8173  00FD4E                     	if	0	;tblptru may be non-zero
  8174  00FD4E                     	endif
  8175  00FD4E  0008               	tblrd		*
  8176  00FD50  50F5               	movf	tablat,w,c
  8177  00FD52  EC6B  F071         	call	_isdigit
  8178  00FD56  A0D8               	btfss	status,0,c
  8179  00FD58  D007               	goto	l3381
  8180  00FD5A  D7D1               	goto	l3369
  8181                           
  8182                           ;doprnt.c: 608: }
  8183                           ;doprnt.c: 635: switch(c = *f++) {
  8184  00FD5C  D005               	goto	l3381
  8185                           
  8186                           ;doprnt.c: 638: goto alldone;
  8187                           
  8188                           ;doprnt.c: 637: case 0:
  8189  00FD5E  D0C1               	goto	l3435
  8190                           
  8191                           ;doprnt.c: 813: continue;
  8192                           
  8193                           ;doprnt.c: 802: default:
  8194  00FD60  D0B2               	goto	l3433
  8195  00FD62                     l3377:
  8196                           
  8197                           ;doprnt.c: 818: flag |= 0xC0;
  8198  00FD62  0EC0               	movlw	192
  8199  00FD64  121D               	iorwf	sprintf@flag,f,c
  8200                           
  8201                           ;doprnt.c: 822: }
  8202                           
  8203                           ;doprnt.c: 819: break;
  8204  00FD66  D011               	goto	l3383
  8205  00FD68                     l3381:
  8206  00FD68  C00F  FFF6         	movff	sprintf@f,tblptrl
  8207  00FD6C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8208  00FD70  4A0F               	infsnz	sprintf@f,f,c
  8209  00FD72  2A10               	incf	sprintf@f+1,f,c
  8210  00FD74                     	if	0	;tblptru may be non-zero
  8211  00FD74                     	endif
  8212  00FD74                     	if	0	;tblptru may be non-zero
  8213  00FD74                     	endif
  8214  00FD74  0008               	tblrd		*
  8215  00FD76  CFF5 F023          	movff	tablat,sprintf@c
  8216  00FD7A  5023               	movf	sprintf@c,w,c
  8217                           
  8218                           ; Switch size 1, requested type "space"
  8219                           ; Number of cases is 2, Range of values is 0 to 117
  8220                           ; switch strategies available:
  8221                           ; Name         Instructions Cycles
  8222                           ; simple_byte            7     4 (average)
  8223                           ;	Chosen strategy is simple_byte
  8224  00FD7C  0A00               	xorlw	0	; case 0
  8225  00FD7E  B4D8               	btfsc	status,2,c
  8226  00FD80  D0B0               	goto	l3435
  8227  00FD82  0A75               	xorlw	117	; case 117
  8228  00FD84  B4D8               	btfsc	status,2,c
  8229  00FD86  D7ED               	goto	l3377
  8230  00FD88  D09E               	goto	l3433
  8231  00FD8A                     l3383:
  8232                           
  8233                           ;doprnt.c: 1273: {
  8234                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8235  00FD8A  C01B  FFD9         	movff	sprintf@ap,fsr2l
  8236  00FD8E  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  8237  00FD92  CFDE F01E          	movff	postinc2,sprintf@val
  8238  00FD96  CFDD F01F          	movff	postdec2,sprintf@val+1
  8239  00FD9A  0E02               	movlw	2
  8240  00FD9C  261B               	addwf	sprintf@ap,f,c
  8241  00FD9E  0E00               	movlw	0
  8242  00FDA0  221C               	addwfc	sprintf@ap+1,f,c
  8243                           
  8244                           ;doprnt.c: 1287: }
  8245                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8246  00FDA2  0E01               	movlw	1
  8247  00FDA4  6E23               	movwf	sprintf@c,c
  8248  00FDA6                     l3389:
  8249  00FDA6  0E05               	movlw	5
  8250  00FDA8  1823               	xorwf	sprintf@c,w,c
  8251  00FDAA  B4D8               	btfsc	status,2,c
  8252  00FDAC  D016               	goto	l3401
  8253  00FDAE  D001               	goto	l3393
  8254  00FDB0  D014               	goto	l3401
  8255  00FDB2                     l3393:
  8256                           
  8257                           ;doprnt.c: 1306: if(val < dpowers[c])
  8258  00FDB2  5023               	movf	sprintf@c,w,c
  8259  00FDB4  0D02               	mullw	2
  8260  00FDB6  0EF3               	movlw	low _dpowers
  8261  00FDB8  24F3               	addwf	prodl,w,c
  8262  00FDBA  6EF6               	movwf	tblptrl,c
  8263  00FDBC  0EFE               	movlw	high _dpowers
  8264  00FDBE  20F4               	addwfc	prodh,w,c
  8265  00FDC0  6EF7               	movwf	tblptrh,c
  8266  00FDC2                     	if	0	;There are less than 3 active tblptr bytes
  8267  00FDC2                     	endif
  8268  00FDC2  0009               	tblrd		*+
  8269  00FDC4  50F5               	movf	tablat,w,c
  8270  00FDC6  5C1E               	subwf	sprintf@val,w,c
  8271  00FDC8  0009               	tblrd		*+
  8272  00FDCA  50F5               	movf	tablat,w,c
  8273  00FDCC  581F               	subwfb	sprintf@val+1,w,c
  8274  00FDCE  A0D8               	btfss	status,0,c
  8275  00FDD0  D004               	goto	l3401
  8276  00FDD2  D001               	goto	l3397
  8277                           
  8278                           ;doprnt.c: 1307: break;
  8279  00FDD4  D002               	goto	l3401
  8280  00FDD6                     l3397:
  8281  00FDD6  2A23               	incf	sprintf@c,f,c
  8282  00FDD8  D7E6               	goto	l3389
  8283  00FDDA                     l3401:
  8284                           
  8285                           ;doprnt.c: 1381: if(width > c)
  8286  00FDDA  0E80               	movlw	128
  8287  00FDDC  BE23               	btfsc	sprintf@c,7,c
  8288  00FDDE  0E7F               	movlw	127
  8289  00FDE0  6E17               	movwf	??_sprintf& (0+255),c
  8290  00FDE2  5021               	movf	sprintf@width,w,c
  8291  00FDE4  5C23               	subwf	sprintf@c,w,c
  8292  00FDE6  5022               	movf	sprintf@width+1,w,c
  8293  00FDE8  0A80               	xorlw	128
  8294  00FDEA  5817               	subwfb	??_sprintf& (0+255),w,c
  8295  00FDEC  B0D8               	btfsc	status,0,c
  8296  00FDEE  D007               	goto	l3405
  8297                           
  8298                           ;doprnt.c: 1382: width -= c;
  8299  00FDF0  5023               	movf	sprintf@c,w,c
  8300  00FDF2  5E21               	subwf	sprintf@width,f,c
  8301  00FDF4  0E00               	movlw	0
  8302  00FDF6  BE23               	btfsc	sprintf@c,7,c
  8303  00FDF8  0EFF               	movlw	255
  8304  00FDFA  5A22               	subwfb	sprintf@width+1,f,c
  8305  00FDFC  D005               	goto	l3407
  8306  00FDFE                     l3405:
  8307                           
  8308                           ;doprnt.c: 1383: else
  8309                           ;doprnt.c: 1384: width = 0;
  8310  00FDFE  0E00               	movlw	0
  8311  00FE00  6E22               	movwf	sprintf@width+1,c
  8312  00FE02  0E00               	movlw	0
  8313  00FE04  6E21               	movwf	sprintf@width,c
  8314  00FE06  D000               	goto	l3407
  8315  00FE08                     l3407:
  8316                           
  8317                           ;doprnt.c: 1387: if(flag & 0x04) {
  8318  00FE08  A41D               	btfss	sprintf@flag,2,c
  8319  00FE0A  D015               	goto	l3417
  8320                           
  8321                           ;doprnt.c: 1415: if(width)
  8322  00FE0C  5021               	movf	sprintf@width,w,c
  8323  00FE0E  1022               	iorwf	sprintf@width+1,w,c
  8324  00FE10  B4D8               	btfsc	status,2,c
  8325  00FE12  D026               	goto	l679
  8326  00FE14                     l3411:
  8327                           
  8328                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8329  00FE14  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8330  00FE18  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8331  00FE1C  0E30               	movlw	48
  8332  00FE1E  6EDF               	movwf	indf2,c
  8333  00FE20  4A0D               	infsnz	sprintf@sp,f,c
  8334  00FE22  2A0E               	incf	sprintf@sp+1,f,c
  8335                           
  8336                           ;doprnt.c: 1418: while(--width);
  8337  00FE24  0621               	decf	sprintf@width,f,c
  8338  00FE26  A0D8               	btfss	status,0,c
  8339  00FE28  0622               	decf	sprintf@width+1,f,c
  8340  00FE2A  5021               	movf	sprintf@width,w,c
  8341  00FE2C  1022               	iorwf	sprintf@width+1,w,c
  8342  00FE2E  B4D8               	btfsc	status,2,c
  8343  00FE30  D017               	goto	l679
  8344  00FE32  D7F0               	goto	l3411
  8345                           
  8346                           ;doprnt.c: 1420: } else
  8347  00FE34  D015               	goto	l679
  8348  00FE36                     l3417:
  8349                           
  8350                           ;doprnt.c: 1422: {
  8351                           ;doprnt.c: 1424: if(width
  8352                           ;doprnt.c: 1428: )
  8353  00FE36  5021               	movf	sprintf@width,w,c
  8354  00FE38  1022               	iorwf	sprintf@width+1,w,c
  8355  00FE3A  B4D8               	btfsc	status,2,c
  8356  00FE3C  D011               	goto	l679
  8357  00FE3E                     l3419:
  8358                           
  8359                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8360  00FE3E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8361  00FE42  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8362  00FE46  0E20               	movlw	32
  8363  00FE48  6EDF               	movwf	indf2,c
  8364  00FE4A  4A0D               	infsnz	sprintf@sp,f,c
  8365  00FE4C  2A0E               	incf	sprintf@sp+1,f,c
  8366                           
  8367                           ;doprnt.c: 1431: while(--width);
  8368  00FE4E  0621               	decf	sprintf@width,f,c
  8369  00FE50  A0D8               	btfss	status,0,c
  8370  00FE52  0622               	decf	sprintf@width+1,f,c
  8371  00FE54  5021               	movf	sprintf@width,w,c
  8372  00FE56  1022               	iorwf	sprintf@width+1,w,c
  8373  00FE58  B4D8               	btfsc	status,2,c
  8374  00FE5A  D002               	goto	l679
  8375  00FE5C  D7F0               	goto	l3419
  8376  00FE5E  D000               	goto	l679
  8377  00FE60                     l679:
  8378                           
  8379                           ;doprnt.c: 1469: }
  8380                           ;doprnt.c: 1472: prec = c;
  8381  00FE60  C023  F020         	movff	sprintf@c,sprintf@prec
  8382                           
  8383                           ;doprnt.c: 1474: while(prec--) {
  8384  00FE64  D02A               	goto	l3431
  8385  00FE66                     l3425:
  8386                           
  8387                           ;doprnt.c: 1478: {
  8388                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8389  00FE66  5020               	movf	sprintf@prec,w,c
  8390  00FE68  0D02               	mullw	2
  8391  00FE6A  0EF3               	movlw	low _dpowers
  8392  00FE6C  24F3               	addwf	prodl,w,c
  8393  00FE6E  6EF6               	movwf	tblptrl,c
  8394  00FE70  0EFE               	movlw	high _dpowers
  8395  00FE72  20F4               	addwfc	prodh,w,c
  8396  00FE74  6EF7               	movwf	tblptrh,c
  8397  00FE76                     	if	0	;There are less than 3 active tblptr bytes
  8398  00FE76                     	endif
  8399  00FE76  0009               	tblrd		*+
  8400  00FE78  CFF5 F003          	movff	tablat,___lwdiv@divisor
  8401  00FE7C  000A               	tblrd		*-
  8402  00FE7E  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  8403  00FE82  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  8404  00FE86  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  8405  00FE8A  ECF7  F075         	call	___lwdiv	;wreg free
  8406  00FE8E  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  8407  00FE92  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  8408  00FE96  0E00               	movlw	0
  8409  00FE98  6E0B               	movwf	___lwmod@divisor+1,c
  8410  00FE9A  0E0A               	movlw	10
  8411  00FE9C  6E0A               	movwf	___lwmod@divisor,c
  8412  00FE9E  EC90  F074         	call	___lwmod	;wreg free
  8413  00FEA2  5008               	movf	?___lwmod,w,c
  8414  00FEA4  0F30               	addlw	48
  8415  00FEA6  6E23               	movwf	sprintf@c,c
  8416                           
  8417                           ;doprnt.c: 1523: }
  8418                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8419  00FEA8  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8420  00FEAC  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8421  00FEB0  C023  FFDF         	movff	sprintf@c,indf2
  8422  00FEB4  4A0D               	infsnz	sprintf@sp,f,c
  8423  00FEB6  2A0E               	incf	sprintf@sp+1,f,c
  8424  00FEB8  D000               	goto	l3431
  8425  00FEBA                     l3431:
  8426  00FEBA  0620               	decf	sprintf@prec,f,c
  8427  00FEBC  2820               	incf	sprintf@prec,w,c
  8428  00FEBE  B4D8               	btfsc	status,2,c
  8429  00FEC0  D002               	goto	l3433
  8430  00FEC2  D7D1               	goto	l3425
  8431  00FEC4  D000               	goto	l3433
  8432  00FEC6                     l3433:
  8433  00FEC6  C00F  FFF6         	movff	sprintf@f,tblptrl
  8434  00FECA  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8435  00FECE  4A0F               	infsnz	sprintf@f,f,c
  8436  00FED0  2A10               	incf	sprintf@f+1,f,c
  8437  00FED2                     	if	0	;tblptru may be non-zero
  8438  00FED2                     	endif
  8439  00FED2                     	if	0	;tblptru may be non-zero
  8440  00FED2                     	endif
  8441  00FED2  0008               	tblrd		*
  8442  00FED4  CFF5 F023          	movff	tablat,sprintf@c
  8443  00FED8  5023               	movf	sprintf@c,w,c
  8444  00FEDA  B4D8               	btfsc	status,2,c
  8445  00FEDC  D002               	goto	l3435
  8446  00FEDE  D6DC               	goto	l3351
  8447  00FEE0  D000               	goto	l3435
  8448  00FEE2                     l3435:
  8449                           
  8450                           ;doprnt.c: 1538: *sp = 0;
  8451  00FEE2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8452  00FEE6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8453  00FEEA  0E00               	movlw	0
  8454  00FEEC  6EDF               	movwf	indf2,c
  8455  00FEEE  0012               	return	
  8456                           
  8457                           ;doprnt.c: 1540: return 0;
  8458                           ;	Return value of _sprintf is never used
  8459  00FEF0  0012               	return		;funcret
  8460  00FEF2                     __end_of_sprintf:
  8461                           	opt stack 0
  8462                           tblptru	equ	0xFF8
  8463                           tblptrh	equ	0xFF7
  8464                           tblptrl	equ	0xFF6
  8465                           tablat	equ	0xFF5
  8466                           prodh	equ	0xFF4
  8467                           prodl	equ	0xFF3
  8468                           intcon	equ	0xFF2
  8469                           indf0	equ	0xFEF
  8470                           postinc0	equ	0xFEE
  8471                           fsr0h	equ	0xFEA
  8472                           fsr0l	equ	0xFE9
  8473                           wreg	equ	0xFE8
  8474                           indf1	equ	0xFE7
  8475                           postdec1	equ	0xFE5
  8476                           fsr1h	equ	0xFE2
  8477                           fsr1l	equ	0xFE1
  8478                           indf2	equ	0xFDF
  8479                           postinc2	equ	0xFDE
  8480                           postdec2	equ	0xFDD
  8481                           fsr2h	equ	0xFDA
  8482                           fsr2l	equ	0xFD9
  8483                           status	equ	0xFD8
  8484                           
  8485 ;; *************** function _isdigit *****************
  8486 ;; Defined at:
  8487 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  c               1    wreg     unsigned char 
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  c               1    2[COMRAM] unsigned char 
  8492 ;; Return value:  Size  Location     Type
  8493 ;;		None               void
  8494 ;; Registers used:
  8495 ;;		wreg, status,2, status,0
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8504 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8505 ;;Total ram usage:        3 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_sprintf
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text57
  8515  00E2D6                     __ptext57:
  8516                           	opt stack 0
  8517  00E2D6                     _isdigit:
  8518                           	opt stack 27
  8519                           
  8520                           ;incstack = 0
  8521                           ;isdigit@c stored from wreg
  8522  00E2D6  6E03               	movwf	isdigit@c,c
  8523  00E2D8  0E00               	movlw	0
  8524  00E2DA  6E02               	movwf	_isdigit$2279,c
  8525  00E2DC  0E3A               	movlw	58
  8526  00E2DE  6003               	cpfslt	isdigit@c,c
  8527  00E2E0  D006               	goto	l3121
  8528  00E2E2  0E2F               	movlw	47
  8529  00E2E4  6403               	cpfsgt	isdigit@c,c
  8530  00E2E6  D003               	goto	l3121
  8531  00E2E8  0E01               	movlw	1
  8532  00E2EA  6E02               	movwf	_isdigit$2279,c
  8533  00E2EC  D000               	goto	l3121
  8534  00E2EE                     l3121:
  8535  00E2EE  C002  F001         	movff	_isdigit$2279,??_isdigit
  8536  00E2F2  3001               	rrcf	??_isdigit,w,c
  8537  00E2F4  0012               	return	
  8538  00E2F6  0012               	return		;funcret
  8539  00E2F8                     __end_of_isdigit:
  8540                           	opt stack 0
  8541                           tblptru	equ	0xFF8
  8542                           tblptrh	equ	0xFF7
  8543                           tblptrl	equ	0xFF6
  8544                           tablat	equ	0xFF5
  8545                           prodh	equ	0xFF4
  8546                           prodl	equ	0xFF3
  8547                           intcon	equ	0xFF2
  8548                           indf0	equ	0xFEF
  8549                           postinc0	equ	0xFEE
  8550                           fsr0h	equ	0xFEA
  8551                           fsr0l	equ	0xFE9
  8552                           wreg	equ	0xFE8
  8553                           indf1	equ	0xFE7
  8554                           postdec1	equ	0xFE5
  8555                           fsr1h	equ	0xFE2
  8556                           fsr1l	equ	0xFE1
  8557                           indf2	equ	0xFDF
  8558                           postinc2	equ	0xFDE
  8559                           postdec2	equ	0xFDD
  8560                           fsr2h	equ	0xFDA
  8561                           fsr2l	equ	0xFD9
  8562                           status	equ	0xFD8
  8563                           
  8564 ;; *************** function ___wmul *****************
  8565 ;; Defined at:
  8566 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  multiplier      2    0[COMRAM] unsigned int 
  8569 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;  product         2    4[COMRAM] unsigned int 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  2    0[COMRAM] unsigned int 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0, prodl, prodh
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8584 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8585 ;;Total ram usage:        6 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; This function calls:
  8588 ;;		Nothing
  8589 ;; This function is called by:
  8590 ;;		_sprintf
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text58
  8595  00E31C                     __ptext58:
  8596                           	opt stack 0
  8597  00E31C                     ___wmul:
  8598                           	opt stack 27
  8599                           
  8600                           ;incstack = 0
  8601  00E31C  5001               	movf	___wmul@multiplier,w,c
  8602  00E31E  0203               	mulwf	___wmul@multiplicand,c
  8603  00E320  CFF3 F005          	movff	prodl,___wmul@product
  8604  00E324  CFF4 F006          	movff	prodh,___wmul@product+1
  8605  00E328  5001               	movf	___wmul@multiplier,w,c
  8606  00E32A  0204               	mulwf	___wmul@multiplicand+1,c
  8607  00E32C  50F3               	movf	prodl,w,c
  8608  00E32E  2606               	addwf	___wmul@product+1,f,c
  8609  00E330  5002               	movf	___wmul@multiplier+1,w,c
  8610  00E332  0203               	mulwf	___wmul@multiplicand,c
  8611  00E334  50F3               	movf	prodl,w,c
  8612  00E336  2606               	addwf	___wmul@product+1,f,c
  8613  00E338  C005  F001         	movff	___wmul@product,?___wmul
  8614  00E33C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8615  00E340  0012               	return	
  8616  00E342  0012               	return		;funcret
  8617  00E344                     __end_of___wmul:
  8618                           	opt stack 0
  8619                           tblptru	equ	0xFF8
  8620                           tblptrh	equ	0xFF7
  8621                           tblptrl	equ	0xFF6
  8622                           tablat	equ	0xFF5
  8623                           prodh	equ	0xFF4
  8624                           prodl	equ	0xFF3
  8625                           intcon	equ	0xFF2
  8626                           indf0	equ	0xFEF
  8627                           postinc0	equ	0xFEE
  8628                           fsr0h	equ	0xFEA
  8629                           fsr0l	equ	0xFE9
  8630                           wreg	equ	0xFE8
  8631                           indf1	equ	0xFE7
  8632                           postdec1	equ	0xFE5
  8633                           fsr1h	equ	0xFE2
  8634                           fsr1l	equ	0xFE1
  8635                           indf2	equ	0xFDF
  8636                           postinc2	equ	0xFDE
  8637                           postdec2	equ	0xFDD
  8638                           fsr2h	equ	0xFDA
  8639                           fsr2l	equ	0xFD9
  8640                           status	equ	0xFD8
  8641                           
  8642 ;; *************** function ___lwmod *****************
  8643 ;; Defined at:
  8644 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  dividend        2    7[COMRAM] unsigned int 
  8647 ;;  divisor         2    9[COMRAM] unsigned int 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  counter         1   11[COMRAM] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  2    7[COMRAM] unsigned int 
  8652 ;; Registers used:
  8653 ;;		wreg, status,2, status,0
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8663 ;;Total ram usage:        5 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_sprintf
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           	psect	text59
  8673  00E920                     __ptext59:
  8674                           	opt stack 0
  8675  00E920                     ___lwmod:
  8676                           	opt stack 27
  8677                           
  8678                           ;incstack = 0
  8679  00E920  500A               	movf	___lwmod@divisor,w,c
  8680  00E922  100B               	iorwf	___lwmod@divisor+1,w,c
  8681  00E924  B4D8               	btfsc	status,2,c
  8682  00E926  D01D               	goto	l1333
  8683  00E928  0E01               	movlw	1
  8684  00E92A  6E0C               	movwf	___lwmod@counter,c
  8685  00E92C  D005               	goto	l3159
  8686  00E92E                     l3157:
  8687  00E92E  90D8               	bcf	status,0,c
  8688  00E930  360A               	rlcf	___lwmod@divisor,f,c
  8689  00E932  360B               	rlcf	___lwmod@divisor+1,f,c
  8690  00E934  2A0C               	incf	___lwmod@counter,f,c
  8691  00E936  D000               	goto	l3159
  8692  00E938                     l3159:
  8693  00E938  BE0B               	btfsc	___lwmod@divisor+1,7,c
  8694  00E93A  D002               	goto	l3161
  8695  00E93C  D7F8               	goto	l3157
  8696  00E93E  D000               	goto	l3161
  8697  00E940                     l3161:
  8698  00E940  500A               	movf	___lwmod@divisor,w,c
  8699  00E942  5C08               	subwf	___lwmod@dividend,w,c
  8700  00E944  500B               	movf	___lwmod@divisor+1,w,c
  8701  00E946  5809               	subwfb	___lwmod@dividend+1,w,c
  8702  00E948  A0D8               	btfss	status,0,c
  8703  00E94A  D005               	goto	l3165
  8704  00E94C  500A               	movf	___lwmod@divisor,w,c
  8705  00E94E  5E08               	subwf	___lwmod@dividend,f,c
  8706  00E950  500B               	movf	___lwmod@divisor+1,w,c
  8707  00E952  5A09               	subwfb	___lwmod@dividend+1,f,c
  8708  00E954  D000               	goto	l3165
  8709  00E956                     l3165:
  8710  00E956  90D8               	bcf	status,0,c
  8711  00E958  320B               	rrcf	___lwmod@divisor+1,f,c
  8712  00E95A  320A               	rrcf	___lwmod@divisor,f,c
  8713  00E95C  2E0C               	decfsz	___lwmod@counter,f,c
  8714  00E95E  D7F0               	goto	l3161
  8715  00E960  D000               	goto	l1333
  8716  00E962                     l1333:
  8717  00E962  C008  F008         	movff	___lwmod@dividend,?___lwmod
  8718  00E966  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  8719  00E96A  0012               	return		;funcret
  8720  00E96C                     __end_of___lwmod:
  8721                           	opt stack 0
  8722                           tblptru	equ	0xFF8
  8723                           tblptrh	equ	0xFF7
  8724                           tblptrl	equ	0xFF6
  8725                           tablat	equ	0xFF5
  8726                           prodh	equ	0xFF4
  8727                           prodl	equ	0xFF3
  8728                           intcon	equ	0xFF2
  8729                           indf0	equ	0xFEF
  8730                           postinc0	equ	0xFEE
  8731                           fsr0h	equ	0xFEA
  8732                           fsr0l	equ	0xFE9
  8733                           wreg	equ	0xFE8
  8734                           indf1	equ	0xFE7
  8735                           postdec1	equ	0xFE5
  8736                           fsr1h	equ	0xFE2
  8737                           fsr1l	equ	0xFE1
  8738                           indf2	equ	0xFDF
  8739                           postinc2	equ	0xFDE
  8740                           postdec2	equ	0xFDD
  8741                           fsr2h	equ	0xFDA
  8742                           fsr2l	equ	0xFD9
  8743                           status	equ	0xFD8
  8744                           
  8745 ;; *************** function ___lwdiv *****************
  8746 ;; Defined at:
  8747 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  8748 ;; Parameters:    Size  Location     Type
  8749 ;;  dividend        2    0[COMRAM] unsigned int 
  8750 ;;  divisor         2    2[COMRAM] unsigned int 
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;  quotient        2    4[COMRAM] unsigned int 
  8753 ;;  counter         1    6[COMRAM] unsigned char 
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  2    0[COMRAM] unsigned int 
  8756 ;; Registers used:
  8757 ;;		wreg, status,2, status,0
  8758 ;; Tracked objects:
  8759 ;;		On entry : 0/0
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8764 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8766 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;Total ram usage:        7 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; This function calls:
  8770 ;;		Nothing
  8771 ;; This function is called by:
  8772 ;;		_sprintf
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           
  8776                           	psect	text60
  8777  00EBEE                     __ptext60:
  8778                           	opt stack 0
  8779  00EBEE                     ___lwdiv:
  8780                           	opt stack 27
  8781                           
  8782                           ;incstack = 0
  8783  00EBEE  0E00               	movlw	0
  8784  00EBF0  6E06               	movwf	___lwdiv@quotient+1,c
  8785  00EBF2  0E00               	movlw	0
  8786  00EBF4  6E05               	movwf	___lwdiv@quotient,c
  8787  00EBF6  5003               	movf	___lwdiv@divisor,w,c
  8788  00EBF8  1004               	iorwf	___lwdiv@divisor+1,w,c
  8789  00EBFA  B4D8               	btfsc	status,2,c
  8790  00EBFC  D021               	goto	l1323
  8791  00EBFE  0E01               	movlw	1
  8792  00EC00  6E07               	movwf	___lwdiv@counter,c
  8793  00EC02  D005               	goto	l3139
  8794  00EC04                     l3137:
  8795  00EC04  90D8               	bcf	status,0,c
  8796  00EC06  3603               	rlcf	___lwdiv@divisor,f,c
  8797  00EC08  3604               	rlcf	___lwdiv@divisor+1,f,c
  8798  00EC0A  2A07               	incf	___lwdiv@counter,f,c
  8799  00EC0C  D000               	goto	l3139
  8800  00EC0E                     l3139:
  8801  00EC0E  BE04               	btfsc	___lwdiv@divisor+1,7,c
  8802  00EC10  D002               	goto	l3141
  8803  00EC12  D7F8               	goto	l3137
  8804  00EC14  D000               	goto	l3141
  8805  00EC16                     l3141:
  8806  00EC16  90D8               	bcf	status,0,c
  8807  00EC18  3605               	rlcf	___lwdiv@quotient,f,c
  8808  00EC1A  3606               	rlcf	___lwdiv@quotient+1,f,c
  8809  00EC1C  5003               	movf	___lwdiv@divisor,w,c
  8810  00EC1E  5C01               	subwf	___lwdiv@dividend,w,c
  8811  00EC20  5004               	movf	___lwdiv@divisor+1,w,c
  8812  00EC22  5802               	subwfb	___lwdiv@dividend+1,w,c
  8813  00EC24  A0D8               	btfss	status,0,c
  8814  00EC26  D006               	goto	l3149
  8815  00EC28  5003               	movf	___lwdiv@divisor,w,c
  8816  00EC2A  5E01               	subwf	___lwdiv@dividend,f,c
  8817  00EC2C  5004               	movf	___lwdiv@divisor+1,w,c
  8818  00EC2E  5A02               	subwfb	___lwdiv@dividend+1,f,c
  8819  00EC30  8005               	bsf	___lwdiv@quotient,0,c
  8820  00EC32  D000               	goto	l3149
  8821  00EC34                     l3149:
  8822  00EC34  90D8               	bcf	status,0,c
  8823  00EC36  3204               	rrcf	___lwdiv@divisor+1,f,c
  8824  00EC38  3203               	rrcf	___lwdiv@divisor,f,c
  8825  00EC3A  2E07               	decfsz	___lwdiv@counter,f,c
  8826  00EC3C  D7EC               	goto	l3141
  8827  00EC3E  D000               	goto	l1323
  8828  00EC40                     l1323:
  8829  00EC40  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  8830  00EC44  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8831  00EC48  0012               	return		;funcret
  8832  00EC4A                     __end_of___lwdiv:
  8833                           	opt stack 0
  8834                           tblptru	equ	0xFF8
  8835                           tblptrh	equ	0xFF7
  8836                           tblptrl	equ	0xFF6
  8837                           tablat	equ	0xFF5
  8838                           prodh	equ	0xFF4
  8839                           prodl	equ	0xFF3
  8840                           intcon	equ	0xFF2
  8841                           indf0	equ	0xFEF
  8842                           postinc0	equ	0xFEE
  8843                           fsr0h	equ	0xFEA
  8844                           fsr0l	equ	0xFE9
  8845                           wreg	equ	0xFE8
  8846                           indf1	equ	0xFE7
  8847                           postdec1	equ	0xFE5
  8848                           fsr1h	equ	0xFE2
  8849                           fsr1l	equ	0xFE1
  8850                           indf2	equ	0xFDF
  8851                           postinc2	equ	0xFDE
  8852                           postdec2	equ	0xFDD
  8853                           fsr2h	equ	0xFDA
  8854                           fsr2l	equ	0xFD9
  8855                           status	equ	0xFD8
  8856                           
  8857 ;; *************** function _check_home_callback *****************
  8858 ;; Defined at:
  8859 ;;		line 101 in file "main.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;		None
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;		None               void
  8866 ;; Registers used:
  8867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;Total ram usage:        0 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    7
  8880 ;; This function calls:
  8881 ;;		_activity_home
  8882 ;;		_reset_home_callback
  8883 ;; This function is called by:
  8884 ;;		_main
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text61
  8889  00E2B4                     __ptext61:
  8890                           	opt stack 0
  8891  00E2B4                     _check_home_callback:
  8892                           	opt stack 23
  8893                           
  8894                           ;main.c: 103: if(activity != 0){
  8895                           
  8896                           ;incstack = 0
  8897  00E2B4  5029               	movf	_activity,w,c
  8898  00E2B6  102A               	iorwf	_activity+1,w,c
  8899  00E2B8  B4D8               	btfsc	status,2,c
  8900  00E2BA  0012               	return	
  8901                           
  8902                           ;main.c: 104: home_callback--;
  8903  00E2BC  0635               	decf	_home_callback,f,c
  8904  00E2BE  A0D8               	btfss	status,0,c
  8905  00E2C0  0636               	decf	_home_callback+1,f,c
  8906                           
  8907                           ;main.c: 106: if(home_callback == 0){
  8908  00E2C2  5035               	movf	_home_callback,w,c
  8909  00E2C4  1036               	iorwf	_home_callback+1,w,c
  8910  00E2C6  A4D8               	btfss	status,2,c
  8911  00E2C8  0012               	return	
  8912                           
  8913                           ;main.c: 107: reset_home_callback();
  8914  00E2CA  ECF7  F070         	call	_reset_home_callback	;wreg free
  8915                           
  8916                           ;main.c: 108: activity_home();
  8917  00E2CE  ECA2  F071         	call	_activity_home	;wreg free
  8918  00E2D2  0012               	return	
  8919  00E2D4  0012               	return		;funcret
  8920  00E2D6                     __end_of_check_home_callback:
  8921                           	opt stack 0
  8922                           tblptru	equ	0xFF8
  8923                           tblptrh	equ	0xFF7
  8924                           tblptrl	equ	0xFF6
  8925                           tablat	equ	0xFF5
  8926                           prodh	equ	0xFF4
  8927                           prodl	equ	0xFF3
  8928                           intcon	equ	0xFF2
  8929                           indf0	equ	0xFEF
  8930                           postinc0	equ	0xFEE
  8931                           fsr0h	equ	0xFEA
  8932                           fsr0l	equ	0xFE9
  8933                           wreg	equ	0xFE8
  8934                           indf1	equ	0xFE7
  8935                           postdec1	equ	0xFE5
  8936                           fsr1h	equ	0xFE2
  8937                           fsr1l	equ	0xFE1
  8938                           indf2	equ	0xFDF
  8939                           postinc2	equ	0xFDE
  8940                           postdec2	equ	0xFDD
  8941                           fsr2h	equ	0xFDA
  8942                           fsr2l	equ	0xFD9
  8943                           status	equ	0xFD8
  8944                           
  8945 ;; *************** function _reset_home_callback *****************
  8946 ;; Defined at:
  8947 ;;		line 95 in file "main.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;		None
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;		None               void
  8954 ;; Registers used:
  8955 ;;		None
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;Total ram usage:        0 bytes
  8966 ;; Hardware stack levels used:    1
  8967 ;; This function calls:
  8968 ;;		Nothing
  8969 ;; This function is called by:
  8970 ;;		_check_home_callback
  8971 ;;		_button_A
  8972 ;;		_button_B
  8973 ;;		_button_C
  8974 ;;		_button_D
  8975 ;;		_button_asterisk
  8976 ;;		_button_hash
  8977 ;;		_button_number
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text62
  8982  00E1EE                     __ptext62:
  8983                           	opt stack 0
  8984  00E1EE                     _reset_home_callback:
  8985                           	opt stack 28
  8986                           
  8987                           ;main.c: 97: home_callback = home_callback_delay;
  8988                           
  8989                           ;incstack = 0
  8990  00E1EE  C037  F035         	movff	_home_callback_delay,_home_callback
  8991  00E1F2  C038  F036         	movff	_home_callback_delay+1,_home_callback+1
  8992  00E1F6  0012               	return		;funcret
  8993  00E1F8                     __end_of_reset_home_callback:
  8994                           	opt stack 0
  8995                           tblptru	equ	0xFF8
  8996                           tblptrh	equ	0xFF7
  8997                           tblptrl	equ	0xFF6
  8998                           tablat	equ	0xFF5
  8999                           prodh	equ	0xFF4
  9000                           prodl	equ	0xFF3
  9001                           intcon	equ	0xFF2
  9002                           indf0	equ	0xFEF
  9003                           postinc0	equ	0xFEE
  9004                           fsr0h	equ	0xFEA
  9005                           fsr0l	equ	0xFE9
  9006                           wreg	equ	0xFE8
  9007                           indf1	equ	0xFE7
  9008                           postdec1	equ	0xFE5
  9009                           fsr1h	equ	0xFE2
  9010                           fsr1l	equ	0xFE1
  9011                           indf2	equ	0xFDF
  9012                           postinc2	equ	0xFDE
  9013                           postdec2	equ	0xFDD
  9014                           fsr2h	equ	0xFDA
  9015                           fsr2l	equ	0xFD9
  9016                           status	equ	0xFD8
  9017                           
  9018 ;; *************** function _activity_home *****************
  9019 ;; Defined at:
  9020 ;;		line 87 in file "main.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;		None
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;		None
  9025 ;; Return value:  Size  Location     Type
  9026 ;;		None               void
  9027 ;; Registers used:
  9028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9038 ;;Total ram usage:        0 bytes
  9039 ;; Hardware stack levels used:    1
  9040 ;; Hardware stack levels required when called:    6
  9041 ;; This function calls:
  9042 ;;		_lcd_init
  9043 ;;		_lcd_write
  9044 ;; This function is called by:
  9045 ;;		_check_home_callback
  9046 ;;		_button_B_submenu_activation
  9047 ;;		_button_B_submenu_pin_config
  9048 ;;		_button_B_submenu_siren_volume
  9049 ;;		_button_B_submenu_siren_tone
  9050 ;;		_button_D
  9051 ;;		_button_hash
  9052 ;;		_main
  9053 ;;		_pin_set
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text63
  9058  00E344                     __ptext63:
  9059                           	opt stack 0
  9060  00E344                     _activity_home:
  9061                           	opt stack 21
  9062                           
  9063                           ;main.c: 89: activity = 0;
  9064                           
  9065                           ;incstack = 0
  9066  00E344  0E00               	movlw	0
  9067  00E346  6E2A               	movwf	_activity+1,c
  9068  00E348  0E00               	movlw	0
  9069  00E34A  6E29               	movwf	_activity,c
  9070                           
  9071                           ;main.c: 90: lcd_init();
  9072  00E34C  EC3F  F078         	call	_lcd_init	;wreg free
  9073                           
  9074                           ;main.c: 91: lcd_write(1,1,"X28");
  9075  00E350  0E00               	movlw	0
  9076  00E352  6E0C               	movwf	lcd_write@column+1,c
  9077  00E354  0E01               	movlw	1
  9078  00E356  6E0B               	movwf	lcd_write@column,c
  9079  00E358  0E00               	movlw	0
  9080  00E35A  6E0E               	movwf	lcd_write@row+1,c
  9081  00E35C  0E01               	movlw	1
  9082  00E35E  6E0D               	movwf	lcd_write@row,c
  9083  00E360  0EE2               	movlw	low STR_1
  9084  00E362  6E0F               	movwf	lcd_write@string,c
  9085  00E364  0EFF               	movlw	high STR_1
  9086  00E366  6E10               	movwf	lcd_write@string+1,c
  9087  00E368  EC33  F071         	call	_lcd_write	;wreg free
  9088  00E36C  0012               	return		;funcret
  9089  00E36E                     __end_of_activity_home:
  9090                           	opt stack 0
  9091                           tblptru	equ	0xFF8
  9092                           tblptrh	equ	0xFF7
  9093                           tblptrl	equ	0xFF6
  9094                           tablat	equ	0xFF5
  9095                           prodh	equ	0xFF4
  9096                           prodl	equ	0xFF3
  9097                           intcon	equ	0xFF2
  9098                           indf0	equ	0xFEF
  9099                           postinc0	equ	0xFEE
  9100                           fsr0h	equ	0xFEA
  9101                           fsr0l	equ	0xFE9
  9102                           wreg	equ	0xFE8
  9103                           indf1	equ	0xFE7
  9104                           postdec1	equ	0xFE5
  9105                           fsr1h	equ	0xFE2
  9106                           fsr1l	equ	0xFE1
  9107                           indf2	equ	0xFDF
  9108                           postinc2	equ	0xFDE
  9109                           postdec2	equ	0xFDD
  9110                           fsr2h	equ	0xFDA
  9111                           fsr2l	equ	0xFD9
  9112                           status	equ	0xFD8
  9113                           
  9114 ;; *************** function _lcd_write *****************
  9115 ;; Defined at:
  9116 ;;		line 4 in file "Unimic/unmc_01/sources/lcd_write.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  column          2   10[COMRAM] int 
  9119 ;;  row             2   12[COMRAM] int 
  9120 ;;  string          2   14[COMRAM] PTR const unsigned char 
  9121 ;;		 -> STR_54(7), STR_53(7), STR_52(5), STR_51(5), 
  9122 ;;		 -> STR_50(5), STR_49(8), STR_48(5), STR_47(8), 
  9123 ;;		 -> STR_46(7), STR_45(3), STR_44(3), STR_43(8), 
  9124 ;;		 -> STR_41(11), STR_39(6), STR_38(8), STR_37(4), 
  9125 ;;		 -> STR_36(16), STR_34(2), STR_33(2), STR_32(2), 
  9126 ;;		 -> STR_31(2), STR_30(2), STR_29(2), STR_28(2), 
  9127 ;;		 -> STR_27(2), STR_26(2), STR_25(2), STR_24(2), 
  9128 ;;		 -> STR_23(2), STR_11(16), buffer1(20), STR_9(17), 
  9129 ;;		 -> STR_8(5), STR_7(6), STR_6(6), STR_5(7), 
  9130 ;;		 -> STR_4(4), STR_3(6), STR_2(8), STR_1(4), 
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;		None
  9133 ;; Return value:  Size  Location     Type
  9134 ;;		None               void
  9135 ;; Registers used:
  9136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9142 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9146 ;;Total ram usage:        6 bytes
  9147 ;; Hardware stack levels used:    1
  9148 ;; Hardware stack levels required when called:    5
  9149 ;; This function calls:
  9150 ;;		_lcd_gotoxy
  9151 ;;		_lcd_putrs
  9152 ;; This function is called by:
  9153 ;;		_activity_home
  9154 ;;		_activity_menu
  9155 ;;		_activity_submenu_date_and_time
  9156 ;;		_activity_submenu_date_config
  9157 ;;		_activity_submenu_time_config
  9158 ;;		_home_clock_refresh
  9159 ;;		_home_state_refresh
  9160 ;;		_home_volume_refresh
  9161 ;;		_home_tone_refresh
  9162 ;;		_menu_selector_0
  9163 ;;		_menu_selector_1
  9164 ;;		_menu_selector_2
  9165 ;;		_menu_selector_3
  9166 ;;		_submenu_selector_0
  9167 ;;		_submenu_selector_1
  9168 ;;		_activity_pin
  9169 ;;		_activity_submenu_pin
  9170 ;;		_activity_submenu_pin_set
  9171 ;;		_activity_submenu_activation
  9172 ;;		_activity_submenu_siren
  9173 ;;		_activity_submenu_siren_volume
  9174 ;;		_activity_submenu_siren_tone
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text64
  9179  00E266                     __ptext64:
  9180                           	opt stack 0
  9181  00E266                     _lcd_write:
  9182                           	opt stack 21
  9183                           
  9184                           ;lcd_write.c: 6: lcd_gotoxy(column, row);
  9185                           
  9186                           ;incstack = 0
  9187  00E266  C00D  F005         	movff	lcd_write@row,lcd_gotoxy@y
  9188  00E26A  500B               	movf	lcd_write@column,w,c
  9189  00E26C  EC7C  F071         	call	_lcd_gotoxy
  9190                           
  9191                           ;lcd_write.c: 7: lcd_putrs(string);
  9192  00E270  C00F  F009         	movff	lcd_write@string,lcd_putrs@ptr
  9193  00E274  C010  F00A         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  9194  00E278  ECCD  F075         	call	_lcd_putrs	;wreg free
  9195  00E27C  0012               	return		;funcret
  9196  00E27E                     __end_of_lcd_write:
  9197                           	opt stack 0
  9198                           tblptru	equ	0xFF8
  9199                           tblptrh	equ	0xFF7
  9200                           tblptrl	equ	0xFF6
  9201                           tablat	equ	0xFF5
  9202                           prodh	equ	0xFF4
  9203                           prodl	equ	0xFF3
  9204                           intcon	equ	0xFF2
  9205                           indf0	equ	0xFEF
  9206                           postinc0	equ	0xFEE
  9207                           fsr0h	equ	0xFEA
  9208                           fsr0l	equ	0xFE9
  9209                           wreg	equ	0xFE8
  9210                           indf1	equ	0xFE7
  9211                           postdec1	equ	0xFE5
  9212                           fsr1h	equ	0xFE2
  9213                           fsr1l	equ	0xFE1
  9214                           indf2	equ	0xFDF
  9215                           postinc2	equ	0xFDE
  9216                           postdec2	equ	0xFDD
  9217                           fsr2h	equ	0xFDA
  9218                           fsr2l	equ	0xFD9
  9219                           status	equ	0xFD8
  9220                           
  9221 ;; *************** function _lcd_putrs *****************
  9222 ;; Defined at:
  9223 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  9226 ;;		 -> STR_54(7), STR_53(7), STR_52(5), STR_51(5), 
  9227 ;;		 -> STR_50(5), STR_49(8), STR_48(5), STR_47(8), 
  9228 ;;		 -> STR_46(7), STR_45(3), STR_44(3), STR_43(8), 
  9229 ;;		 -> STR_41(11), STR_39(6), STR_38(8), STR_37(4), 
  9230 ;;		 -> STR_36(16), STR_34(2), STR_33(2), STR_32(2), 
  9231 ;;		 -> STR_31(2), STR_30(2), STR_29(2), STR_28(2), 
  9232 ;;		 -> STR_27(2), STR_26(2), STR_25(2), STR_24(2), 
  9233 ;;		 -> STR_23(2), STR_22(2), STR_11(16), buffer1(20), 
  9234 ;;		 -> STR_9(17), STR_8(5), STR_7(6), STR_6(6), 
  9235 ;;		 -> STR_5(7), STR_4(4), STR_3(6), STR_2(8), 
  9236 ;;		 -> STR_1(4), 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;		None
  9239 ;; Return value:  Size  Location     Type
  9240 ;;		None               void
  9241 ;; Registers used:
  9242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9252 ;;Total ram usage:        2 bytes
  9253 ;; Hardware stack levels used:    1
  9254 ;; Hardware stack levels required when called:    4
  9255 ;; This function calls:
  9256 ;;		_lcd_putc
  9257 ;; This function is called by:
  9258 ;;		_button_number
  9259 ;;		_lcd_write
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text65
  9264  00EB9A                     __ptext65:
  9265                           	opt stack 0
  9266  00EB9A                     _lcd_putrs:
  9267                           	opt stack 24
  9268                           
  9269                           ;unmc_lcd_216.c: 223: while(*ptr){
  9270                           
  9271                           ;incstack = 0
  9272  00EB9A  D015               	goto	l3095
  9273  00EB9C                     l3091:
  9274                           
  9275                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  9276  00EB9C  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9277  00EBA0  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9278  00EBA4  6AF8               	clrf	tblptru,c
  9279  00EBA6  0E0E               	movlw	(high __ramtop+-1)
  9280  00EBA8  64F7               	cpfsgt	tblptrh,c
  9281  00EBAA  D003               	bra	u1467
  9282  00EBAC  0008               	tblrd		*
  9283  00EBAE  50F5               	movf	tablat,w,c
  9284  00EBB0  D005               	bra	u1460
  9285  00EBB2                     u1467:
  9286  00EBB2  CFF6 FFE9          	movff	tblptrl,fsr0l
  9287  00EBB6  CFF7 FFEA          	movff	tblptrh,fsr0h
  9288  00EBBA  50EF               	movf	indf0,w,c
  9289  00EBBC                     u1460:
  9290  00EBBC  EC6A  F074         	call	_lcd_putc
  9291  00EBC0  4A09               	infsnz	lcd_putrs@ptr,f,c
  9292  00EBC2  2A0A               	incf	lcd_putrs@ptr+1,f,c
  9293  00EBC4  D000               	goto	l3095
  9294  00EBC6                     l3095:
  9295  00EBC6  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9296  00EBCA  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9297  00EBCE  6AF8               	clrf	tblptru,c
  9298  00EBD0  0E0E               	movlw	(high __ramtop+-1)
  9299  00EBD2  64F7               	cpfsgt	tblptrh,c
  9300  00EBD4  D003               	bra	u1477
  9301  00EBD6  0008               	tblrd		*
  9302  00EBD8  50F5               	movf	tablat,w,c
  9303  00EBDA  D005               	bra	u1470
  9304  00EBDC                     u1477:
  9305  00EBDC  CFF6 FFE9          	movff	tblptrl,fsr0l
  9306  00EBE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  9307  00EBE4  50EF               	movf	indf0,w,c
  9308  00EBE6                     u1470:
  9309  00EBE6  0900               	iorlw	0
  9310  00EBE8  A4D8               	btfss	status,2,c
  9311  00EBEA  D7D8               	goto	l3091
  9312  00EBEC  0012               	return		;funcret
  9313  00EBEE                     __end_of_lcd_putrs:
  9314                           	opt stack 0
  9315                           tblptru	equ	0xFF8
  9316                           tblptrh	equ	0xFF7
  9317                           tblptrl	equ	0xFF6
  9318                           tablat	equ	0xFF5
  9319                           prodh	equ	0xFF4
  9320                           prodl	equ	0xFF3
  9321                           intcon	equ	0xFF2
  9322                           indf0	equ	0xFEF
  9323                           postinc0	equ	0xFEE
  9324                           fsr0h	equ	0xFEA
  9325                           fsr0l	equ	0xFE9
  9326                           wreg	equ	0xFE8
  9327                           indf1	equ	0xFE7
  9328                           postdec1	equ	0xFE5
  9329                           fsr1h	equ	0xFE2
  9330                           fsr1l	equ	0xFE1
  9331                           indf2	equ	0xFDF
  9332                           postinc2	equ	0xFDE
  9333                           postdec2	equ	0xFDD
  9334                           fsr2h	equ	0xFDA
  9335                           fsr2l	equ	0xFD9
  9336                           status	equ	0xFD8
  9337                           
  9338 ;; *************** function _lcd_putc *****************
  9339 ;; Defined at:
  9340 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  c               1    wreg     unsigned char 
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  c               1    7[COMRAM] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;		None               void
  9347 ;; Registers used:
  9348 ;;		wreg, status,2, status,0, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9358 ;;Total ram usage:        1 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; Hardware stack levels required when called:    3
  9361 ;; This function calls:
  9362 ;;		_lcd_gotoxy
  9363 ;;		_lcd_send_byte
  9364 ;; This function is called by:
  9365 ;;		_lcd_putrs
  9366 ;;		_lcd_puts
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text66
  9371  00E8D4                     __ptext66:
  9372                           	opt stack 0
  9373  00E8D4                     _lcd_putc:
  9374                           	opt stack 24
  9375                           
  9376                           ;incstack = 0
  9377                           ;lcd_putc@c stored from wreg
  9378  00E8D4  6E08               	movwf	lcd_putc@c,c
  9379                           
  9380                           ;unmc_lcd_216.c: 173: switch(c){
  9381  00E8D6  D018               	goto	l3087
  9382  00E8D8                     l3077:
  9383                           
  9384                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  9385  00E8D8  0E01               	movlw	1
  9386  00E8DA  6E03               	movwf	lcd_send_byte@n,c
  9387  00E8DC  0E00               	movlw	0
  9388  00E8DE  EC2A  F072         	call	_lcd_send_byte
  9389                           
  9390                           ;unmc_lcd_216.c: 176: break;
  9391  00E8E2  0012               	return	
  9392  00E8E4                     l3079:
  9393                           
  9394                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  9395  00E8E4  0E02               	movlw	2
  9396  00E8E6  6E05               	movwf	lcd_gotoxy@y,c
  9397  00E8E8  0E01               	movlw	1
  9398  00E8EA  EC7C  F071         	call	_lcd_gotoxy
  9399                           
  9400                           ;unmc_lcd_216.c: 179: break;
  9401  00E8EE  0012               	return	
  9402  00E8F0                     l3081:
  9403                           
  9404                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  9405  00E8F0  0E10               	movlw	16
  9406  00E8F2  6E03               	movwf	lcd_send_byte@n,c
  9407  00E8F4  0E00               	movlw	0
  9408  00E8F6  EC2A  F072         	call	_lcd_send_byte
  9409                           
  9410                           ;unmc_lcd_216.c: 182: break;
  9411  00E8FA  0012               	return	
  9412  00E8FC                     l3083:
  9413                           
  9414                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  9415  00E8FC  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  9416  00E900  0E01               	movlw	1
  9417  00E902  EC2A  F072         	call	_lcd_send_byte
  9418                           
  9419                           ;unmc_lcd_216.c: 186: }
  9420                           
  9421                           ;unmc_lcd_216.c: 185: break;
  9422  00E906  0012               	return	
  9423  00E908                     l3087:
  9424  00E908  5008               	movf	lcd_putc@c,w,c
  9425                           
  9426                           ; Switch size 1, requested type "space"
  9427                           ; Number of cases is 3, Range of values is 8 to 12
  9428                           ; switch strategies available:
  9429                           ; Name         Instructions Cycles
  9430                           ; simple_byte           10     6 (average)
  9431                           ;	Chosen strategy is simple_byte
  9432  00E90A  0A08               	xorlw	8	; case 8
  9433  00E90C  B4D8               	btfsc	status,2,c
  9434  00E90E  D7F0               	goto	l3081
  9435  00E910  0A02               	xorlw	2	; case 10
  9436  00E912  B4D8               	btfsc	status,2,c
  9437  00E914  D7E7               	goto	l3079
  9438  00E916  0A06               	xorlw	6	; case 12
  9439  00E918  B4D8               	btfsc	status,2,c
  9440  00E91A  D7DE               	goto	l3077
  9441  00E91C  D7EF               	goto	l3083
  9442  00E91E  0012               	return		;funcret
  9443  00E920                     __end_of_lcd_putc:
  9444                           	opt stack 0
  9445                           tblptru	equ	0xFF8
  9446                           tblptrh	equ	0xFF7
  9447                           tblptrl	equ	0xFF6
  9448                           tablat	equ	0xFF5
  9449                           prodh	equ	0xFF4
  9450                           prodl	equ	0xFF3
  9451                           intcon	equ	0xFF2
  9452                           indf0	equ	0xFEF
  9453                           postinc0	equ	0xFEE
  9454                           fsr0h	equ	0xFEA
  9455                           fsr0l	equ	0xFE9
  9456                           wreg	equ	0xFE8
  9457                           indf1	equ	0xFE7
  9458                           postdec1	equ	0xFE5
  9459                           fsr1h	equ	0xFE2
  9460                           fsr1l	equ	0xFE1
  9461                           indf2	equ	0xFDF
  9462                           postinc2	equ	0xFDE
  9463                           postdec2	equ	0xFDD
  9464                           fsr2h	equ	0xFDA
  9465                           fsr2l	equ	0xFD9
  9466                           status	equ	0xFD8
  9467                           
  9468 ;; *************** function _lcd_gotoxy *****************
  9469 ;; Defined at:
  9470 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;  x               1    wreg     unsigned char 
  9473 ;;  y               1    4[COMRAM] unsigned char 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  x               1    5[COMRAM] unsigned char 
  9476 ;;  address         1    6[COMRAM] unsigned char 
  9477 ;; Return value:  Size  Location     Type
  9478 ;;		None               void
  9479 ;; Registers used:
  9480 ;;		wreg, status,2, status,0, cstack
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9486 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9489 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9490 ;;Total ram usage:        3 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    2
  9493 ;; This function calls:
  9494 ;;		_lcd_send_byte
  9495 ;; This function is called by:
  9496 ;;		_activity_submenu_date_config
  9497 ;;		_activity_submenu_time_config
  9498 ;;		_cursor_displacement
  9499 ;;		_lcd_putc
  9500 ;;		_lcd_write
  9501 ;;		_activity_pin
  9502 ;;		_activity_submenu_pin_set
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text67
  9507  00E2F8                     __ptext67:
  9508                           	opt stack 0
  9509  00E2F8                     _lcd_gotoxy:
  9510                           	opt stack 24
  9511                           
  9512                           ;incstack = 0
  9513                           ;lcd_gotoxy@x stored from wreg
  9514  00E2F8  6E06               	movwf	lcd_gotoxy@x,c
  9515                           
  9516                           ;unmc_lcd_216.c: 159: int8 address;
  9517                           ;unmc_lcd_216.c: 161: if(y != 1)
  9518  00E2FA  0405               	decf	lcd_gotoxy@y,w,c
  9519  00E2FC  B4D8               	btfsc	status,2,c
  9520  00E2FE  D002               	goto	l3069
  9521                           
  9522                           ;unmc_lcd_216.c: 162: address = 0x40;
  9523  00E300  0E40               	movlw	64
  9524  00E302  D001               	goto	L4
  9525  00E304                     l3069:
  9526                           
  9527                           ;unmc_lcd_216.c: 163: else
  9528                           ;unmc_lcd_216.c: 164: address=0;
  9529  00E304  0E00               	movlw	0
  9530  00E306                     L4:
  9531  00E306  6E07               	movwf	lcd_gotoxy@address,c
  9532  00E308  D000               	goto	l3071
  9533  00E30A                     l3071:
  9534                           
  9535                           ;unmc_lcd_216.c: 166: address += x-1;
  9536  00E30A  0406               	decf	lcd_gotoxy@x,w,c
  9537  00E30C  2607               	addwf	lcd_gotoxy@address,f,c
  9538                           
  9539                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  9540  00E30E  5007               	movf	lcd_gotoxy@address,w,c
  9541  00E310  0980               	iorlw	128
  9542  00E312  6E03               	movwf	lcd_send_byte@n,c
  9543  00E314  0E00               	movlw	0
  9544  00E316  EC2A  F072         	call	_lcd_send_byte
  9545  00E31A  0012               	return		;funcret
  9546  00E31C                     __end_of_lcd_gotoxy:
  9547                           	opt stack 0
  9548                           tblptru	equ	0xFF8
  9549                           tblptrh	equ	0xFF7
  9550                           tblptrl	equ	0xFF6
  9551                           tablat	equ	0xFF5
  9552                           prodh	equ	0xFF4
  9553                           prodl	equ	0xFF3
  9554                           intcon	equ	0xFF2
  9555                           indf0	equ	0xFEF
  9556                           postinc0	equ	0xFEE
  9557                           fsr0h	equ	0xFEA
  9558                           fsr0l	equ	0xFE9
  9559                           wreg	equ	0xFE8
  9560                           indf1	equ	0xFE7
  9561                           postdec1	equ	0xFE5
  9562                           fsr1h	equ	0xFE2
  9563                           fsr1l	equ	0xFE1
  9564                           indf2	equ	0xFDF
  9565                           postinc2	equ	0xFDE
  9566                           postdec2	equ	0xFDD
  9567                           fsr2h	equ	0xFDA
  9568                           fsr2l	equ	0xFD9
  9569                           status	equ	0xFD8
  9570                           
  9571 ;; *************** function _lcd_init *****************
  9572 ;; Defined at:
  9573 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;		None
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  i               1    4[COMRAM] unsigned char 
  9578 ;; Return value:  Size  Location     Type
  9579 ;;		None               void
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9590 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9591 ;;Total ram usage:        1 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:    2
  9594 ;; This function calls:
  9595 ;;		_Delay1KTCYx
  9596 ;;		_lcd_send_byte
  9597 ;;		_lcd_send_nibble
  9598 ;; This function is called by:
  9599 ;;		_activity_home
  9600 ;;		_activity_menu
  9601 ;;		_activity_submenu_date_and_time
  9602 ;;		_activity_submenu_date_config
  9603 ;;		_activity_submenu_time_config
  9604 ;;		_setup
  9605 ;;		_activity_pin
  9606 ;;		_activity_submenu_pin
  9607 ;;		_activity_submenu_pin_set
  9608 ;;		_activity_submenu_activation
  9609 ;;		_activity_submenu_siren
  9610 ;;		_activity_submenu_siren_volume
  9611 ;;		_activity_submenu_siren_tone
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text68
  9616  00F07E                     __ptext68:
  9617                           	opt stack 0
  9618  00F07E                     _lcd_init:
  9619                           	opt stack 27
  9620                           
  9621                           ;unmc_lcd_216.c: 120: int8 i;
  9622                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  9623                           
  9624                           ;incstack = 0
  9625  00F07E  9693               	bcf	3987,3,c	;volatile
  9626                           
  9627                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  9628  00F080  9493               	bcf	3987,2,c	;volatile
  9629                           
  9630                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  9631  00F082  968A               	bcf	3978,3,c	;volatile
  9632                           
  9633                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  9634  00F084  948A               	bcf	3978,2,c	;volatile
  9635                           
  9636                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  9637  00F086  9893               	bcf	3987,4,c	;volatile
  9638                           
  9639                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  9640  00F088  9A93               	bcf	3987,5,c	;volatile
  9641                           
  9642                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  9643  00F08A  9C93               	bcf	3987,6,c	;volatile
  9644                           
  9645                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  9646  00F08C  9E93               	bcf	3987,7,c	;volatile
  9647                           
  9648                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  9649  00F08E  0E0A               	movlw	10
  9650  00F090  EC0D  F071         	call	_Delay1KTCYx
  9651                           
  9652                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  9653  00F094  0E0A               	movlw	10
  9654  00F096  EC0D  F071         	call	_Delay1KTCYx
  9655                           
  9656                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  9657  00F09A  0E0A               	movlw	10
  9658  00F09C  EC0D  F071         	call	_Delay1KTCYx
  9659                           
  9660                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  9661  00F0A0  0E00               	movlw	0
  9662  00F0A2  6E05               	movwf	lcd_init@i,c
  9663  00F0A4                     l3311:
  9664  00F0A4  0E02               	movlw	2
  9665  00F0A6  6405               	cpfsgt	lcd_init@i,c
  9666  00F0A8  D001               	goto	l3315
  9667  00F0AA  D008               	goto	l3321
  9668  00F0AC                     l3315:
  9669                           
  9670                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  9671  00F0AC  0E03               	movlw	3
  9672  00F0AE  ECC6  F077         	call	_lcd_send_nibble
  9673                           
  9674                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  9675  00F0B2  0E0A               	movlw	10
  9676  00F0B4  EC0D  F071         	call	_Delay1KTCYx
  9677  00F0B8  2A05               	incf	lcd_init@i,f,c
  9678  00F0BA  D7F4               	goto	l3311
  9679  00F0BC                     l3321:
  9680                           
  9681                           ;unmc_lcd_216.c: 146: }
  9682                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  9683  00F0BC  0E02               	movlw	2
  9684  00F0BE  ECC6  F077         	call	_lcd_send_nibble
  9685                           
  9686                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  9687  00F0C2  0E00               	movlw	0
  9688  00F0C4  6E05               	movwf	lcd_init@i,c
  9689  00F0C6  0E03               	movlw	3
  9690  00F0C8  6405               	cpfsgt	lcd_init@i,c
  9691  00F0CA  D002               	goto	l3329
  9692  00F0CC  0012               	return	
  9693  00F0CE  0012               	return	
  9694  00F0D0                     l3329:
  9695                           
  9696                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  9697  00F0D0  5005               	movf	lcd_init@i,w,c
  9698  00F0D2  0D01               	mullw	1
  9699  00F0D4  0EFD               	movlw	low _LCD_INIT_STRING
  9700  00F0D6  24F3               	addwf	prodl,w,c
  9701  00F0D8  6EF6               	movwf	tblptrl,c
  9702  00F0DA  0EFE               	movlw	high _LCD_INIT_STRING
  9703  00F0DC  20F4               	addwfc	prodh,w,c
  9704  00F0DE  6EF7               	movwf	tblptrh,c
  9705  00F0E0                     	if	0	;There are less than 3 active tblptr bytes
  9706  00F0E0                     	endif
  9707  00F0E0  0008               	tblrd		*
  9708  00F0E2  CFF5 F003          	movff	tablat,lcd_send_byte@n
  9709  00F0E6  0E00               	movlw	0
  9710  00F0E8  EC2A  F072         	call	_lcd_send_byte
  9711                           
  9712                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  9713  00F0EC  0E0A               	movlw	10
  9714  00F0EE  EC0D  F071         	call	_Delay1KTCYx
  9715  00F0F2  2A05               	incf	lcd_init@i,f,c
  9716  00F0F4  0E03               	movlw	3
  9717  00F0F6  6405               	cpfsgt	lcd_init@i,c
  9718  00F0F8  D7EB               	goto	l3329
  9719  00F0FA  0012               	return	
  9720  00F0FC  0012               	return		;funcret
  9721  00F0FE                     __end_of_lcd_init:
  9722                           	opt stack 0
  9723                           tblptru	equ	0xFF8
  9724                           tblptrh	equ	0xFF7
  9725                           tblptrl	equ	0xFF6
  9726                           tablat	equ	0xFF5
  9727                           prodh	equ	0xFF4
  9728                           prodl	equ	0xFF3
  9729                           intcon	equ	0xFF2
  9730                           indf0	equ	0xFEF
  9731                           postinc0	equ	0xFEE
  9732                           fsr0h	equ	0xFEA
  9733                           fsr0l	equ	0xFE9
  9734                           wreg	equ	0xFE8
  9735                           indf1	equ	0xFE7
  9736                           postdec1	equ	0xFE5
  9737                           fsr1h	equ	0xFE2
  9738                           fsr1l	equ	0xFE1
  9739                           indf2	equ	0xFDF
  9740                           postinc2	equ	0xFDE
  9741                           postdec2	equ	0xFDD
  9742                           fsr2h	equ	0xFDA
  9743                           fsr2l	equ	0xFD9
  9744                           status	equ	0xFD8
  9745                           
  9746 ;; *************** function _lcd_send_byte *****************
  9747 ;; Defined at:
  9748 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;  address         1    wreg     unsigned char 
  9751 ;;  n               1    2[COMRAM] unsigned char 
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;  address         1    3[COMRAM] unsigned char 
  9754 ;; Return value:  Size  Location     Type
  9755 ;;		None               void
  9756 ;; Registers used:
  9757 ;;		wreg, status,2, status,0, cstack
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9763 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9767 ;;Total ram usage:        2 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    1
  9770 ;; This function calls:
  9771 ;;		_Delay100TCYx
  9772 ;;		_lcd_send_nibble
  9773 ;; This function is called by:
  9774 ;;		_lcd_init
  9775 ;;		_lcd_gotoxy
  9776 ;;		_lcd_putc
  9777 ;;		_lcd_comand
  9778 ;;		_lcd_setcursor_vb
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           	psect	text69
  9783  00E454                     __ptext69:
  9784                           	opt stack 0
  9785  00E454                     _lcd_send_byte:
  9786                           	opt stack 27
  9787                           
  9788                           ;incstack = 0
  9789                           ;lcd_send_byte@address stored from wreg
  9790  00E454  6E04               	movwf	lcd_send_byte@address,c
  9791                           
  9792                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  9793  00E456  968A               	bcf	3978,3,c	;volatile
  9794                           
  9795                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  9796  00E458  0E02               	movlw	2
  9797  00E45A  EC16  F071         	call	_Delay100TCYx
  9798                           
  9799                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  9800  00E45E  9893               	bcf	3987,4,c	;volatile
  9801                           
  9802                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  9803  00E460  9A93               	bcf	3987,5,c	;volatile
  9804                           
  9805                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  9806  00E462  9C93               	bcf	3987,6,c	;volatile
  9807                           
  9808                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  9809  00E464  9E93               	bcf	3987,7,c	;volatile
  9810                           
  9811                           ;unmc_lcd_216.c: 101: if(address)
  9812  00E466  5004               	movf	lcd_send_byte@address,w,c
  9813  00E468  B4D8               	btfsc	status,2,c
  9814  00E46A  D002               	goto	l479
  9815                           
  9816                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  9817  00E46C  868A               	bsf	3978,3,c	;volatile
  9818  00E46E  D001               	goto	l480
  9819  00E470                     l479:
  9820                           
  9821                           ;unmc_lcd_216.c: 103: else
  9822                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  9823  00E470  968A               	bcf	3978,3,c	;volatile
  9824  00E472                     l480:
  9825                           
  9826                           ;unmc_lcd_216.c: 106: __nop();
  9827  00E472  F000               	nop	
  9828                           
  9829                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  9830  00E474  3803               	swapf	lcd_send_byte@n,w,c
  9831  00E476  0B0F               	andlw	15
  9832  00E478  ECC6  F077         	call	_lcd_send_nibble
  9833                           
  9834                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  9835  00E47C  5003               	movf	lcd_send_byte@n,w,c
  9836  00E47E  0B0F               	andlw	15
  9837  00E480  ECC6  F077         	call	_lcd_send_nibble
  9838  00E484  0012               	return		;funcret
  9839  00E486                     __end_of_lcd_send_byte:
  9840                           	opt stack 0
  9841                           tblptru	equ	0xFF8
  9842                           tblptrh	equ	0xFF7
  9843                           tblptrl	equ	0xFF6
  9844                           tablat	equ	0xFF5
  9845                           prodh	equ	0xFF4
  9846                           prodl	equ	0xFF3
  9847                           intcon	equ	0xFF2
  9848                           indf0	equ	0xFEF
  9849                           postinc0	equ	0xFEE
  9850                           fsr0h	equ	0xFEA
  9851                           fsr0l	equ	0xFE9
  9852                           wreg	equ	0xFE8
  9853                           indf1	equ	0xFE7
  9854                           postdec1	equ	0xFE5
  9855                           fsr1h	equ	0xFE2
  9856                           fsr1l	equ	0xFE1
  9857                           indf2	equ	0xFDF
  9858                           postinc2	equ	0xFDE
  9859                           postdec2	equ	0xFDD
  9860                           fsr2h	equ	0xFDA
  9861                           fsr2l	equ	0xFD9
  9862                           status	equ	0xFD8
  9863                           
  9864 ;; *************** function _lcd_send_nibble *****************
  9865 ;; Defined at:
  9866 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  nibble          1    wreg     unsigned char 
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;  nibble          1    1[COMRAM] unsigned char 
  9871 ;; Return value:  Size  Location     Type
  9872 ;;		None               void
  9873 ;; Registers used:
  9874 ;;		wreg, status,2, status,0
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9884 ;;Total ram usage:        2 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; This function calls:
  9887 ;;		Nothing
  9888 ;; This function is called by:
  9889 ;;		_lcd_send_byte
  9890 ;;		_lcd_init
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text70
  9895  00EF8C                     __ptext70:
  9896                           	opt stack 0
  9897  00EF8C                     _lcd_send_nibble:
  9898                           	opt stack 28
  9899                           
  9900                           ;incstack = 0
  9901                           ;lcd_send_nibble@nibble stored from wreg
  9902  00EF8C  6E02               	movwf	lcd_send_nibble@nibble,c
  9903                           
  9904                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  9905  00EF8E  A002               	btfss	lcd_send_nibble@nibble,0,c
  9906  00EF90  D003               	goto	u1360
  9907  00EF92  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9908  00EF94  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9909  00EF96  D001               	goto	u1378
  9910  00EF98                     u1360:
  9911  00EF98  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9912  00EF9A                     u1378:
  9913  00EF9A  3A01               	swapf	??_lcd_send_nibble,f,c
  9914  00EF9C  508A               	movf	3978,w,c	;volatile
  9915  00EF9E  1801               	xorwf	??_lcd_send_nibble,w,c
  9916  00EFA0  0BEF               	andlw	-17
  9917  00EFA2  1801               	xorwf	??_lcd_send_nibble,w,c
  9918  00EFA4  6E8A               	movwf	3978,c	;volatile
  9919                           
  9920                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  9921  00EFA6  A202               	btfss	lcd_send_nibble@nibble,1,c
  9922  00EFA8  D003               	goto	u1380
  9923  00EFAA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9924  00EFAC  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9925  00EFAE  D001               	goto	u1398
  9926  00EFB0                     u1380:
  9927  00EFB0  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9928  00EFB2                     u1398:
  9929  00EFB2  3A01               	swapf	??_lcd_send_nibble,f,c
  9930  00EFB4  4601               	rlncf	??_lcd_send_nibble,f,c
  9931  00EFB6  508A               	movf	3978,w,c	;volatile
  9932  00EFB8  1801               	xorwf	??_lcd_send_nibble,w,c
  9933  00EFBA  0BDF               	andlw	-33
  9934  00EFBC  1801               	xorwf	??_lcd_send_nibble,w,c
  9935  00EFBE  6E8A               	movwf	3978,c	;volatile
  9936                           
  9937                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  9938  00EFC0  A402               	btfss	lcd_send_nibble@nibble,2,c
  9939  00EFC2  D003               	goto	u1400
  9940  00EFC4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9941  00EFC6  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9942  00EFC8  D001               	goto	u1418
  9943  00EFCA                     u1400:
  9944  00EFCA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9945  00EFCC                     u1418:
  9946  00EFCC  3A01               	swapf	??_lcd_send_nibble,f,c
  9947  00EFCE  4601               	rlncf	??_lcd_send_nibble,f,c
  9948  00EFD0  4601               	rlncf	??_lcd_send_nibble,f,c
  9949  00EFD2  508A               	movf	3978,w,c	;volatile
  9950  00EFD4  1801               	xorwf	??_lcd_send_nibble,w,c
  9951  00EFD6  0BBF               	andlw	-65
  9952  00EFD8  1801               	xorwf	??_lcd_send_nibble,w,c
  9953  00EFDA  6E8A               	movwf	3978,c	;volatile
  9954                           
  9955                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  9956  00EFDC  A602               	btfss	lcd_send_nibble@nibble,3,c
  9957  00EFDE  D003               	goto	u1420
  9958  00EFE0  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9959  00EFE2  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9960  00EFE4  D001               	goto	u1438
  9961  00EFE6                     u1420:
  9962  00EFE6  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9963  00EFE8                     u1438:
  9964  00EFE8  3201               	rrcf	??_lcd_send_nibble,f,c
  9965  00EFEA  3201               	rrcf	??_lcd_send_nibble,f,c
  9966  00EFEC  508A               	movf	3978,w,c	;volatile
  9967  00EFEE  1801               	xorwf	??_lcd_send_nibble,w,c
  9968  00EFF0  0B7F               	andlw	-129
  9969  00EFF2  1801               	xorwf	??_lcd_send_nibble,w,c
  9970  00EFF4  6E8A               	movwf	3978,c	;volatile
  9971                           
  9972                           ;unmc_lcd_216.c: 32: __nop();
  9973  00EFF6  F000               	nop	
  9974                           
  9975                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  9976  00EFF8  848A               	bsf	3978,2,c	;volatile
  9977                           
  9978                           ;unmc_lcd_216.c: 34: __nop();__nop();
  9979  00EFFA  F000               	nop	
  9980  00EFFC  F000               	nop	
  9981                           
  9982                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  9983  00EFFE  948A               	bcf	3978,2,c	;volatile
  9984  00F000  0012               	return		;funcret
  9985  00F002                     __end_of_lcd_send_nibble:
  9986                           	opt stack 0
  9987                           tblptru	equ	0xFF8
  9988                           tblptrh	equ	0xFF7
  9989                           tblptrl	equ	0xFF6
  9990                           tablat	equ	0xFF5
  9991                           prodh	equ	0xFF4
  9992                           prodl	equ	0xFF3
  9993                           intcon	equ	0xFF2
  9994                           indf0	equ	0xFEF
  9995                           postinc0	equ	0xFEE
  9996                           fsr0h	equ	0xFEA
  9997                           fsr0l	equ	0xFE9
  9998                           wreg	equ	0xFE8
  9999                           indf1	equ	0xFE7
 10000                           postdec1	equ	0xFE5
 10001                           fsr1h	equ	0xFE2
 10002                           fsr1l	equ	0xFE1
 10003                           indf2	equ	0xFDF
 10004                           postinc2	equ	0xFDE
 10005                           postdec2	equ	0xFDD
 10006                           fsr2h	equ	0xFDA
 10007                           fsr2l	equ	0xFD9
 10008                           status	equ	0xFD8
 10009                           
 10010 ;; *************** function _Delay100TCYx *****************
 10011 ;; Defined at:
 10012 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  unit            1    wreg     unsigned char 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  unit            1    0[COMRAM] unsigned char 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;		None               void
 10019 ;; Registers used:
 10020 ;;		wreg
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10030 ;;Total ram usage:        1 bytes
 10031 ;; Hardware stack levels used:    1
 10032 ;; This function calls:
 10033 ;;		Nothing
 10034 ;; This function is called by:
 10035 ;;		_lcd_send_byte
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text71
 10040  00E22C                     __ptext71:
 10041                           	opt stack 0
 10042  00E22C                     _Delay100TCYx:
 10043                           	opt stack 27
 10044                           
 10045                           ;incstack = 0
 10046                           ;Delay100TCYx@unit stored from wreg
 10047  00E22C  6E01               	movwf	Delay100TCYx@unit,c
 10048  00E22E  0E21               	movlw	33
 10049  00E230                     u2757:
 10050  00E230  2EE8               	decfsz	wreg,f,c
 10051  00E232  D7FE               	goto	u2757
 10052  00E234  F000               	nop	
 10053  00E236  2E01               	decfsz	Delay100TCYx@unit,f,c
 10054  00E238  D7FA               	goto	l3043
 10055  00E23A  0012               	return	
 10056  00E23C  0012               	return		;funcret
 10057  00E23E                     __end_of_Delay100TCYx:
 10058                           	opt stack 0
 10059                           tblptru	equ	0xFF8
 10060                           tblptrh	equ	0xFF7
 10061                           tblptrl	equ	0xFF6
 10062                           tablat	equ	0xFF5
 10063                           prodh	equ	0xFF4
 10064                           prodl	equ	0xFF3
 10065                           intcon	equ	0xFF2
 10066                           indf0	equ	0xFEF
 10067                           postinc0	equ	0xFEE
 10068                           fsr0h	equ	0xFEA
 10069                           fsr0l	equ	0xFE9
 10070                           wreg	equ	0xFE8
 10071                           indf1	equ	0xFE7
 10072                           postdec1	equ	0xFE5
 10073                           fsr1h	equ	0xFE2
 10074                           fsr1l	equ	0xFE1
 10075                           indf2	equ	0xFDF
 10076                           postinc2	equ	0xFDE
 10077                           postdec2	equ	0xFDD
 10078                           fsr2h	equ	0xFDA
 10079                           fsr2l	equ	0xFD9
 10080                           status	equ	0xFD8
 10081                           
 10082 ;; *************** function _Delay1KTCYx *****************
 10083 ;; Defined at:
 10084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
 10085 ;; Parameters:    Size  Location     Type
 10086 ;;  unit            1    wreg     unsigned char 
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;  unit            1    0[COMRAM] unsigned char 
 10089 ;; Return value:  Size  Location     Type
 10090 ;;		None               void
 10091 ;; Registers used:
 10092 ;;		wreg
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10102 ;;Total ram usage:        1 bytes
 10103 ;; Hardware stack levels used:    1
 10104 ;; This function calls:
 10105 ;;		Nothing
 10106 ;; This function is called by:
 10107 ;;		_lcd_init
 10108 ;;		_DelayPORXLCD
 10109 ;; This function uses a non-reentrant model
 10110 ;;
 10111                           
 10112                           	psect	text72
 10113  00E21A                     __ptext72:
 10114                           	opt stack 0
 10115  00E21A                     _Delay1KTCYx:
 10116                           	opt stack 28
 10117                           
 10118                           ;incstack = 0
 10119                           ;Delay1KTCYx@unit stored from wreg
 10120  00E21A  6E01               	movwf	Delay1KTCYx@unit,c
 10121  00E21C  0EFA               	movlw	250
 10122  00E21E                     u2767:
 10123  00E21E  F000               	nop	
 10124  00E220  2EE8               	decfsz	wreg,f,c
 10125  00E222  D7FD               	goto	u2767
 10126  00E224  2E01               	decfsz	Delay1KTCYx@unit,f,c
 10127  00E226  D7FA               	goto	l3097
 10128  00E228  0012               	return	
 10129  00E22A  0012               	return		;funcret
 10130  00E22C                     __end_of_Delay1KTCYx:
 10131                           	opt stack 0
 10132                           tblptru	equ	0xFF8
 10133                           tblptrh	equ	0xFF7
 10134                           tblptrl	equ	0xFF6
 10135                           tablat	equ	0xFF5
 10136                           prodh	equ	0xFF4
 10137                           prodl	equ	0xFF3
 10138                           intcon	equ	0xFF2
 10139                           indf0	equ	0xFEF
 10140                           postinc0	equ	0xFEE
 10141                           fsr0h	equ	0xFEA
 10142                           fsr0l	equ	0xFE9
 10143                           wreg	equ	0xFE8
 10144                           indf1	equ	0xFE7
 10145                           postdec1	equ	0xFE5
 10146                           fsr1h	equ	0xFE2
 10147                           fsr1l	equ	0xFE1
 10148                           indf2	equ	0xFDF
 10149                           postinc2	equ	0xFDE
 10150                           postdec2	equ	0xFDD
 10151                           fsr2h	equ	0xFDA
 10152                           fsr2l	equ	0xFD9
 10153                           status	equ	0xFD8
 10154                           
 10155 ;; *************** function _Read_RTC *****************
 10156 ;; Defined at:
 10157 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;		None
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;		None
 10162 ;; Return value:  Size  Location     Type
 10163 ;;		None               void
 10164 ;; Registers used:
 10165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10175 ;;Total ram usage:        0 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    1
 10178 ;; This function calls:
 10179 ;;		_RtccReadDate
 10180 ;;		_RtccReadTime
 10181 ;; This function is called by:
 10182 ;;		_main
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           	psect	text73
 10187  00F694                     __ptext73:
 10188                           	opt stack 0
 10189  00F694                     _Read_RTC:
 10190                           	opt stack 29
 10191                           
 10192                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
 10193                           
 10194                           ;incstack = 0
 10195  00F694  0E4A               	movlw	low _RtccTime
 10196  00F696  6E01               	movwf	RtccReadTime@pTm,c
 10197  00F698  0E00               	movlw	high _RtccTime
 10198  00F69A  6E02               	movwf	RtccReadTime@pTm+1,c
 10199  00F69C  EC57  F077         	call	_RtccReadTime	;wreg free
 10200                           
 10201                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
 10202  00F6A0  504B               	movf	_RtccTime+1,w,c
 10203  00F6A2  0B0F               	andlw	15
 10204  00F6A4  6E5E               	movwf	_segundo_u,c
 10205                           
 10206                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
 10207  00F6A6  384B               	swapf	_RtccTime+1,w,c
 10208  00F6A8  0B0F               	andlw	15
 10209  00F6AA  0B0F               	andlw	15
 10210  00F6AC  6E5D               	movwf	_segundo_d,c
 10211                           
 10212                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
 10213  00F6AE  504C               	movf	_RtccTime+2,w,c
 10214  00F6B0  0B0F               	andlw	15
 10215  00F6B2  0100               	movlb	0	; () banked
 10216  00F6B4  6FA9               	movwf	_minuto_u& (0+255),b
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
 10220  00F6B6  384C               	swapf	_RtccTime+2,w,c
 10221  00F6B8  0B0F               	andlw	15
 10222  00F6BA  0B0F               	andlw	15
 10223  00F6BC  6E5C               	movwf	_minuto_d,c
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
 10227  00F6BE  504D               	movf	_RtccTime+3,w,c
 10228  00F6C0  0B0F               	andlw	15
 10229  00F6C2  0100               	movlb	0	; () banked
 10230  00F6C4  6FA7               	movwf	_hora_u& (0+255),b
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
 10234  00F6C6  384D               	swapf	_RtccTime+3,w,c
 10235  00F6C8  0B0F               	andlw	15
 10236  00F6CA  0B0F               	andlw	15
 10237  00F6CC  6E5A               	movwf	_hora_d,c
 10238                           
 10239                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
 10240  00F6CE  0E46               	movlw	low _RtccDate
 10241  00F6D0  6E01               	movwf	RtccReadDate@pDt,c
 10242  00F6D2  0E00               	movlw	high _RtccDate
 10243  00F6D4  6E02               	movwf	RtccReadDate@pDt+1,c
 10244  00F6D6  EC84  F079         	call	_RtccReadDate	;wreg free
 10245                           
 10246                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
 10247  00F6DA  5047               	movf	_RtccDate+1,w,c
 10248  00F6DC  0B0F               	andlw	15
 10249  00F6DE  0100               	movlb	0	; () banked
 10250  00F6E0  6FA6               	movwf	_fecha_u& (0+255),b
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
 10254  00F6E2  3847               	swapf	_RtccDate+1,w,c
 10255  00F6E4  0B0F               	andlw	15
 10256  00F6E6  0B0F               	andlw	15
 10257  00F6E8  6E59               	movwf	_fecha_d,c
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
 10261  00F6EA  5048               	movf	_RtccDate+2,w,c
 10262  00F6EC  0B0F               	andlw	15
 10263  00F6EE  0100               	movlb	0	; () banked
 10264  00F6F0  6FA8               	movwf	_mes_u& (0+255),b
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
 10268  00F6F2  3848               	swapf	_RtccDate+2,w,c
 10269  00F6F4  0B0F               	andlw	15
 10270  00F6F6  0B0F               	andlw	15
 10271  00F6F8  6E5B               	movwf	_mes_d,c
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
 10275  00F6FA  C046  F0A5         	movff	_RtccDate,_dia_semana
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
 10279  00F6FE  5049               	movf	_RtccDate+3,w,c
 10280  00F700  0B0F               	andlw	15
 10281  00F702  0100               	movlb	0	; () banked
 10282  00F704  6FA4               	movwf	_anio_u& (0+255),b
 10283                           
 10284                           ; BSR set to: 0
 10285                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
 10286  00F706  3849               	swapf	_RtccDate+3,w,c
 10287  00F708  0B0F               	andlw	15
 10288  00F70A  0B0F               	andlw	15
 10289  00F70C  6E58               	movwf	_anio_d,c
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
 10293  00F70E  505D               	movf	_segundo_d,w,c
 10294  00F710  0D0A               	mullw	10
 10295  00F712  505E               	movf	_segundo_u,w,c
 10296  00F714  24F3               	addwf	prodl,w,c
 10297  00F716  6E3F               	movwf	_segundo,c
 10298  00F718  0E00               	movlw	0
 10299  00F71A  20F4               	addwfc	prodh,w,c
 10300  00F71C  6E40               	movwf	_segundo+1,c
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
 10304  00F71E  505C               	movf	_minuto_d,w,c
 10305  00F720  0D0A               	mullw	10
 10306  00F722  0100               	movlb	0	; () banked
 10307  00F724  51A9               	movf	_minuto_u& (0+255),w,b
 10308  00F726  24F3               	addwf	prodl,w,c
 10309  00F728  6E3D               	movwf	_minuto,c
 10310  00F72A  0100               	movlb	0	; () banked
 10311  00F72C  0E00               	movlw	0
 10312  00F72E  20F4               	addwfc	prodh,w,c
 10313  00F730  6E3E               	movwf	_minuto+1,c
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
 10317  00F732  505A               	movf	_hora_d,w,c
 10318  00F734  0D0A               	mullw	10
 10319  00F736  0100               	movlb	0	; () banked
 10320  00F738  51A7               	movf	_hora_u& (0+255),w,b
 10321  00F73A  24F3               	addwf	prodl,w,c
 10322  00F73C  6E54               	movwf	_hora,c
 10323  00F73E  0100               	movlb	0	; () banked
 10324  00F740  0E00               	movlw	0
 10325  00F742  20F4               	addwfc	prodh,w,c
 10326  00F744  6E55               	movwf	_hora+1,c
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
 10330  00F746  5059               	movf	_fecha_d,w,c
 10331  00F748  0D0A               	mullw	10
 10332  00F74A  0100               	movlb	0	; () banked
 10333  00F74C  51A6               	movf	_fecha_u& (0+255),w,b
 10334  00F74E  24F3               	addwf	prodl,w,c
 10335  00F750  6E50               	movwf	_dia,c
 10336  00F752  0100               	movlb	0	; () banked
 10337  00F754  0E00               	movlw	0
 10338  00F756  20F4               	addwfc	prodh,w,c
 10339  00F758  6E51               	movwf	_dia+1,c
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
 10343  00F75A  C0A5  F052         	movff	_dia_semana,_diasem
 10344  00F75E  6A53               	clrf	_diasem+1,c
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
 10348  00F760  505B               	movf	_mes_d,w,c
 10349  00F762  0D0A               	mullw	10
 10350  00F764  0100               	movlb	0	; () banked
 10351  00F766  51A8               	movf	_mes_u& (0+255),w,b
 10352  00F768  24F3               	addwf	prodl,w,c
 10353  00F76A  6E56               	movwf	_mes,c
 10354  00F76C  0100               	movlb	0	; () banked
 10355  00F76E  0E00               	movlw	0
 10356  00F770  20F4               	addwfc	prodh,w,c
 10357  00F772  6E57               	movwf	_mes+1,c
 10358                           
 10359                           ; BSR set to: 0
 10360                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
 10361  00F774  5058               	movf	_anio_d,w,c
 10362  00F776  0D0A               	mullw	10
 10363  00F778  0100               	movlb	0	; () banked
 10364  00F77A  51A4               	movf	_anio_u& (0+255),w,b
 10365  00F77C  24F3               	addwf	prodl,w,c
 10366  00F77E  6E4E               	movwf	_anio,c
 10367  00F780  0100               	movlb	0	; () banked
 10368  00F782  0E00               	movlw	0
 10369  00F784  20F4               	addwfc	prodh,w,c
 10370  00F786  6E4F               	movwf	_anio+1,c
 10371                           
 10372                           ; BSR set to: 0
 10373  00F788  0012               	return		;funcret
 10374  00F78A                     __end_of_Read_RTC:
 10375                           	opt stack 0
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           intcon	equ	0xFF2
 10383                           indf0	equ	0xFEF
 10384                           postinc0	equ	0xFEE
 10385                           fsr0h	equ	0xFEA
 10386                           fsr0l	equ	0xFE9
 10387                           wreg	equ	0xFE8
 10388                           indf1	equ	0xFE7
 10389                           postdec1	equ	0xFE5
 10390                           fsr1h	equ	0xFE2
 10391                           fsr1l	equ	0xFE1
 10392                           indf2	equ	0xFDF
 10393                           postinc2	equ	0xFDE
 10394                           postdec2	equ	0xFDD
 10395                           fsr2h	equ	0xFDA
 10396                           fsr2l	equ	0xFD9
 10397                           status	equ	0xFD8
 10398                           
 10399 ;; *************** function _RtccReadTime *****************
 10400 ;; Defined at:
 10401 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  pTm             2    0[COMRAM] PTR struct .
 10404 ;;		 -> RtccTime(4), 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;  rTD0            8   10[COMRAM] struct .
 10407 ;;  rTD1            8    2[COMRAM] struct .
 10408 ;; Return value:  Size  Location     Type
 10409 ;;		None               void
 10410 ;; Registers used:
 10411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10418 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10420 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10421 ;;Total ram usage:       18 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; This function calls:
 10424 ;;		Nothing
 10425 ;; This function is called by:
 10426 ;;		_Read_RTC
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           	psect	text74
 10431  00EEAE                     __ptext74:
 10432                           	opt stack 0
 10433  00EEAE                     _RtccReadTime:
 10434                           	opt stack 29
 10435  00EEAE  0EFC               	movlw	252
 10436  00EEB0  010F               	movlb	15	; () banked
 10437  00EEB2  173F               	andwf	63,f,b	;volatile
 10438                           
 10439                           ; BSR set to: 15
 10440  00EEB4  010F               	movlb	15	; () banked
 10441  00EEB6  813F               	bsf	63,0,b	;volatile
 10442                           
 10443                           ; BSR set to: 15
 10444  00EEB8  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
 10445                           
 10446                           ; BSR set to: 15
 10447  00EEBC  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
 10448                           
 10449                           ; BSR set to: 15
 10450  00EEC0  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
 10451                           
 10452                           ; BSR set to: 15
 10453  00EEC4  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
 10454                           
 10455                           ; BSR set to: 15
 10456  00EEC8  0EFC               	movlw	252
 10457  00EECA  010F               	movlb	15	; () banked
 10458  00EECC  173F               	andwf	63,f,b	;volatile
 10459  00EECE  010F               	movlb	15	; () banked
 10460  00EED0  813F               	bsf	63,0,b	;volatile
 10461                           
 10462                           ; BSR set to: 15
 10463  00EED2  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
 10464                           
 10465                           ; BSR set to: 15
 10466  00EED6  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
 10467                           
 10468                           ; BSR set to: 15
 10469  00EEDA  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
 10470                           
 10471                           ; BSR set to: 15
 10472  00EEDE  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
 10473                           
 10474                           ; BSR set to: 15
 10475  00EEE2  5009               	movf	RtccReadTime@rTD1+6,w,c
 10476  00EEE4  1811               	xorwf	RtccReadTime@rTD0+6,w,c
 10477  00EEE6  A4D8               	btfss	status,2,c
 10478  00EEE8  D7E2               	goto	l3953
 10479                           
 10480                           ; BSR set to: 15
 10481                           
 10482                           ; BSR set to: 15
 10483  00EEEA  EE20 F003          	lfsr	2,3
 10484  00EEEE  5001               	movf	RtccReadTime@pTm,w,c
 10485  00EEF0  26D9               	addwf	fsr2l,f,c
 10486  00EEF2  5002               	movf	RtccReadTime@pTm+1,w,c
 10487  00EEF4  22DA               	addwfc	fsr2h,f,c
 10488  00EEF6  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 10489  00EEFA  EE20 F002          	lfsr	2,2
 10490  00EEFE  5001               	movf	RtccReadTime@pTm,w,c
 10491  00EF00  26D9               	addwf	fsr2l,f,c
 10492  00EF02  5002               	movf	RtccReadTime@pTm+1,w,c
 10493  00EF04  22DA               	addwfc	fsr2h,f,c
 10494  00EF06  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 10495  00EF0A  EE20 F001          	lfsr	2,1
 10496  00EF0E  5001               	movf	RtccReadTime@pTm,w,c
 10497  00EF10  26D9               	addwf	fsr2l,f,c
 10498  00EF12  5002               	movf	RtccReadTime@pTm+1,w,c
 10499  00EF14  22DA               	addwfc	fsr2h,f,c
 10500  00EF16  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 10501                           
 10502                           ; BSR set to: 15
 10503  00EF1A  0012               	return		;funcret
 10504  00EF1C                     __end_of_RtccReadTime:
 10505                           	opt stack 0
 10506                           tblptru	equ	0xFF8
 10507                           tblptrh	equ	0xFF7
 10508                           tblptrl	equ	0xFF6
 10509                           tablat	equ	0xFF5
 10510                           prodh	equ	0xFF4
 10511                           prodl	equ	0xFF3
 10512                           intcon	equ	0xFF2
 10513                           indf0	equ	0xFEF
 10514                           postinc0	equ	0xFEE
 10515                           fsr0h	equ	0xFEA
 10516                           fsr0l	equ	0xFE9
 10517                           wreg	equ	0xFE8
 10518                           indf1	equ	0xFE7
 10519                           postdec1	equ	0xFE5
 10520                           fsr1h	equ	0xFE2
 10521                           fsr1l	equ	0xFE1
 10522                           indf2	equ	0xFDF
 10523                           postinc2	equ	0xFDE
 10524                           postdec2	equ	0xFDD
 10525                           fsr2h	equ	0xFDA
 10526                           fsr2l	equ	0xFD9
 10527                           status	equ	0xFD8
 10528                           
 10529 ;; *************** function _RtccReadDate *****************
 10530 ;; Defined at:
 10531 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  pDt             2    0[COMRAM] PTR struct .
 10534 ;;		 -> RtccDate(4), 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  rTD0            8   10[COMRAM] struct .
 10537 ;;  rTD1            8    2[COMRAM] struct .
 10538 ;; Return value:  Size  Location     Type
 10539 ;;		None               void
 10540 ;; Registers used:
 10541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10548 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10550 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10551 ;;Total ram usage:       18 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; This function calls:
 10554 ;;		Nothing
 10555 ;; This function is called by:
 10556 ;;		_Read_RTC
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text75
 10561  00F308                     __ptext75:
 10562                           	opt stack 0
 10563  00F308                     _RtccReadDate:
 10564                           	opt stack 29
 10565  00F308  0EFC               	movlw	252
 10566  00F30A  010F               	movlb	15	; () banked
 10567  00F30C  173F               	andwf	63,f,b	;volatile
 10568  00F30E  0E03               	movlw	3
 10569  00F310  010F               	movlb	15	; () banked
 10570  00F312  133F               	iorwf	63,f,b	;volatile
 10571                           
 10572                           ; BSR set to: 15
 10573  00F314  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
 10574                           
 10575                           ; BSR set to: 15
 10576  00F318  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
 10577                           
 10578                           ; BSR set to: 15
 10579  00F31C  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
 10580                           
 10581                           ; BSR set to: 15
 10582  00F320  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
 10583                           
 10584                           ; BSR set to: 15
 10585  00F324  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
 10586                           
 10587                           ; BSR set to: 15
 10588  00F328  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
 10589  00F32C  0EFC               	movlw	252
 10590  00F32E  010F               	movlb	15	; () banked
 10591  00F330  173F               	andwf	63,f,b	;volatile
 10592  00F332  0E03               	movlw	3
 10593  00F334  010F               	movlb	15	; () banked
 10594  00F336  133F               	iorwf	63,f,b	;volatile
 10595                           
 10596                           ; BSR set to: 15
 10597  00F338  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
 10598                           
 10599                           ; BSR set to: 15
 10600  00F33C  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
 10601                           
 10602                           ; BSR set to: 15
 10603  00F340  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
 10604                           
 10605                           ; BSR set to: 15
 10606  00F344  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
 10607                           
 10608                           ; BSR set to: 15
 10609  00F348  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
 10610                           
 10611                           ; BSR set to: 15
 10612  00F34C  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
 10613  00F350  5005               	movf	RtccReadDate@rTD1+2,w,c
 10614  00F352  180D               	xorwf	RtccReadDate@rTD0+2,w,c
 10615  00F354  A4D8               	btfss	status,2,c
 10616  00F356  D7D8               	goto	l3979
 10617                           
 10618                           ; BSR set to: 15
 10619                           
 10620                           ; BSR set to: 15
 10621  00F358  EE20 F001          	lfsr	2,1
 10622  00F35C  5001               	movf	RtccReadDate@pDt,w,c
 10623  00F35E  26D9               	addwf	fsr2l,f,c
 10624  00F360  5002               	movf	RtccReadDate@pDt+1,w,c
 10625  00F362  22DA               	addwfc	fsr2h,f,c
 10626  00F364  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 10627  00F368  EE20 F002          	lfsr	2,2
 10628  00F36C  5001               	movf	RtccReadDate@pDt,w,c
 10629  00F36E  26D9               	addwf	fsr2l,f,c
 10630  00F370  5002               	movf	RtccReadDate@pDt+1,w,c
 10631  00F372  22DA               	addwfc	fsr2h,f,c
 10632  00F374  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 10633                           
 10634                           ; BSR set to: 15
 10635  00F378  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
 10636  00F37C  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 10637  00F380  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 10638                           
 10639                           ; BSR set to: 15
 10640  00F384  EE20 F003          	lfsr	2,3
 10641  00F388  5001               	movf	RtccReadDate@pDt,w,c
 10642  00F38A  26D9               	addwf	fsr2l,f,c
 10643  00F38C  5002               	movf	RtccReadDate@pDt+1,w,c
 10644  00F38E  22DA               	addwfc	fsr2h,f,c
 10645  00F390  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
 10646                           
 10647                           ; BSR set to: 15
 10648  00F394  0012               	return		;funcret
 10649  00F396                     __end_of_RtccReadDate:
 10650                           	opt stack 0
 10651                           tblptru	equ	0xFF8
 10652                           tblptrh	equ	0xFF7
 10653                           tblptrl	equ	0xFF6
 10654                           tablat	equ	0xFF5
 10655                           prodh	equ	0xFF4
 10656                           prodl	equ	0xFF3
 10657                           intcon	equ	0xFF2
 10658                           indf0	equ	0xFEF
 10659                           postinc0	equ	0xFEE
 10660                           fsr0h	equ	0xFEA
 10661                           fsr0l	equ	0xFE9
 10662                           wreg	equ	0xFE8
 10663                           indf1	equ	0xFE7
 10664                           postdec1	equ	0xFE5
 10665                           fsr1h	equ	0xFE2
 10666                           fsr1l	equ	0xFE1
 10667                           indf2	equ	0xFDF
 10668                           postinc2	equ	0xFDE
 10669                           postdec2	equ	0xFDD
 10670                           fsr2h	equ	0xFDA
 10671                           fsr2l	equ	0xFD9
 10672                           status	equ	0xFD8
 10673                           tblptru	equ	0xFF8
 10674                           tblptrh	equ	0xFF7
 10675                           tblptrl	equ	0xFF6
 10676                           tablat	equ	0xFF5
 10677                           prodh	equ	0xFF4
 10678                           prodl	equ	0xFF3
 10679                           intcon	equ	0xFF2
 10680                           indf0	equ	0xFEF
 10681                           postinc0	equ	0xFEE
 10682                           fsr0h	equ	0xFEA
 10683                           fsr0l	equ	0xFE9
 10684                           wreg	equ	0xFE8
 10685                           indf1	equ	0xFE7
 10686                           postdec1	equ	0xFE5
 10687                           fsr1h	equ	0xFE2
 10688                           fsr1l	equ	0xFE1
 10689                           indf2	equ	0xFDF
 10690                           postinc2	equ	0xFDE
 10691                           postdec2	equ	0xFDD
 10692                           fsr2h	equ	0xFDA
 10693                           fsr2l	equ	0xFD9
 10694                           status	equ	0xFD8
 10695                           
 10696                           	psect	rparam
 10697  0000                     tblptru	equ	0xFF8
 10698                           tblptrh	equ	0xFF7
 10699                           tblptrl	equ	0xFF6
 10700                           tablat	equ	0xFF5
 10701                           prodh	equ	0xFF4
 10702                           prodl	equ	0xFF3
 10703                           intcon	equ	0xFF2
 10704                           indf0	equ	0xFEF
 10705                           postinc0	equ	0xFEE
 10706                           fsr0h	equ	0xFEA
 10707                           fsr0l	equ	0xFE9
 10708                           wreg	equ	0xFE8
 10709                           indf1	equ	0xFE7
 10710                           postdec1	equ	0xFE5
 10711                           fsr1h	equ	0xFE2
 10712                           fsr1l	equ	0xFE1
 10713                           indf2	equ	0xFDF
 10714                           postinc2	equ	0xFDE
 10715                           postdec2	equ	0xFDD
 10716                           fsr2h	equ	0xFDA
 10717                           fsr2l	equ	0xFD9
 10718                           status	equ	0xFD8


Data Sizes:
    Strings     245
    Constant    14
    Data        10
    BSS         105
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      95
    BANK0           160      0      74
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_42(CODE[5]), STR_40(CODE[1]), STR_35(CODE[1]), pin_input(BANK0[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_21(CODE[5]), STR_20(CODE[7]), STR_19(CODE[7]), STR_18(CODE[7]), 
		 -> STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[15]), 
		 -> STR_13(CODE[15]), STR_12(CODE[15]), STR_10(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    lcd_write@string	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_54(CODE[7]), STR_53(CODE[7]), STR_52(CODE[5]), STR_51(CODE[5]), 
		 -> STR_50(CODE[5]), STR_49(CODE[8]), STR_48(CODE[5]), STR_47(CODE[8]), 
		 -> STR_46(CODE[7]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[8]), 
		 -> STR_41(CODE[11]), STR_39(CODE[6]), STR_38(CODE[8]), STR_37(CODE[4]), 
		 -> STR_36(CODE[16]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_11(CODE[16]), buffer1(BANK0[20]), STR_9(CODE[17]), 
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[8]), STR_1(CODE[4]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_54(CODE[7]), STR_53(CODE[7]), STR_52(CODE[5]), STR_51(CODE[5]), 
		 -> STR_50(CODE[5]), STR_49(CODE[8]), STR_48(CODE[5]), STR_47(CODE[8]), 
		 -> STR_46(CODE[7]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[8]), 
		 -> STR_41(CODE[11]), STR_39(CODE[6]), STR_38(CODE[8]), STR_37(CODE[4]), 
		 -> STR_36(CODE[16]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_11(CODE[16]), buffer1(BANK0[20]), 
		 -> STR_9(CODE[17]), STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_5(CODE[7]), STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[8]), 
		 -> STR_1(CODE[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _keyboard_control->_button_B
    _button_number->_sprintf
    _Write_RTC->_RtccWriteDate
    _cursor_displacement->_lcd_gotoxy
    _activity_menu->_lcd_write
    _button_B->_button_B_submenu_date_and_time_config
    _activity_submenu_siren_volume->_lcd_write
    _activity_submenu_siren_tone->_lcd_write
    _pin_reset->_strcpy
    _activity_submenu_pin_set->_lcd_write
    _activity_submenu_time_config->_sprintf
    _activity_submenu_date_config->_sprintf
    _activity_submenu_siren->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_date_and_time->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_menu_selector
    _button_A->_submenu_selector
    _submenu_selector_1->_lcd_write
    _submenu_selector_0->_lcd_write
    _menu_selector_3->_lcd_write
    _menu_selector_2->_lcd_write
    _menu_selector_1->_lcd_write
    _menu_selector_0->_lcd_write
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _home_volume_refresh->_sprintf
    _home_tone_refresh->_sprintf
    _home_state_refresh->_sprintf
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  546290
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                _home_config_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4358
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                          _pin_reset
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  454870
                                             39 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0   10971
                _cursor_displacement
                           _date_set
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
                           _time_set
 ---------------------------------------------------------------------------------
 (3) _time_set                                             2     2      0    2277
                                             13 COMRAM     2     2      0
                          _Write_RTC
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _date_set                                             2     2      0    2277
                                             13 COMRAM     2     2      0
                          _Write_RTC
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (3) _cursor_displacement                                  1     1      0    1141
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   66677
                      _activity_home
                _pin_input_validator
                            _pin_set
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_set                                              0     0      0   13456
                      _activity_home
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  0     0      0   40352
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0       0
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0   12869
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   24890
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   24890
                           _lcd_init
                          _lcd_write
                    _menu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0  252094
                                             37 COMRAM     2     2      0
                      _button_B_menu
        _button_B_submenu_activation
_button_B_submenu_date_and_time_conf
        _button_B_submenu_pin_config
      _button_B_submenu_siren_config
        _button_B_submenu_siren_tone
      _button_B_submenu_siren_volume
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_volume                        2     2      0   12869
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_tone                          2     2      0   12869
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_config                        2     2      0   49780
                                             16 COMRAM     2     2      0
        _activity_submenu_siren_tone
      _activity_submenu_siren_volume
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_volume                        0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_tone                          0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_pin_config                          2     2      0   28699
                                             16 COMRAM     2     2      0
                      _activity_home
           _activity_submenu_pin_set
                          _pin_reset
 ---------------------------------------------------------------------------------
 (2) _pin_reset                                            0     0      0     587
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin_set                             0     0      0   15243
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_date_and_time_config                2     2      0   35448
                                             35 COMRAM     2     2      0
       _activity_submenu_date_config
       _activity_submenu_time_config
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_time_config                         0     0      0   17724
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_config                         0     0      0   17724
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_activation                          2     2      0   12869
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_menu                                        2     2      0   99560
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
     _activity_submenu_date_and_time
               _activity_submenu_pin
             _activity_submenu_siren
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren                               0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin                                 0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_and_time                       0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_activation                          0     0      0   24890
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   87369
                                             18 COMRAM     2     2      0
                       _activity_pin
                      _menu_selector
                _reset_home_callback
                   _submenu_selector
 ---------------------------------------------------------------------------------
 (3) _submenu_selector                                     2     2      0   24042
                                             16 COMRAM     2     2      0
                 _submenu_selector_0
                 _submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _submenu_selector_1                                   0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _submenu_selector_0                                   0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_selector                                        2     2      0   48084
                                             16 COMRAM     2     2      0
                    _menu_selector_0
                    _menu_selector_1
                    _menu_selector_2
                    _menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _menu_selector_3                                      0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_2                                      0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_1                                      0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _menu_selector_0                                      0     0      0   12021
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   15243
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _home_config_refresh                                  2     2      0   45267
                                             35 COMRAM     2     2      0
                 _home_state_refresh
                  _home_tone_refresh
                _home_volume_refresh
 ---------------------------------------------------------------------------------
 (2) _home_volume_refresh                                  0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_tone_refresh                                    0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_state_refresh                                   0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    3068
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0   12869
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _activity_home                                        0     0      0   12869
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6   12021
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1982
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1809
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    1141
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _home_config_refresh
     _home_state_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_tone_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_volume_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _keyboard_control
     _button_A
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _menu_selector
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
       _submenu_selector
         _submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
     _button_B
       _button_B_menu
         _activity_submenu_activation
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_date_and_time
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_pin
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_activation
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_date_and_time_config
         _activity_submenu_date_config
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _activity_submenu_time_config
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _button_B_submenu_pin_config
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin_set
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _pin_reset
           _strcpy
       _button_B_submenu_siren_config
         _activity_submenu_siren_tone
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren_volume
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_siren_tone
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_siren_volume
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_C
       _activity_menu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _reset_home_callback
     _button_hash
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _pin_input_validator
         _activity_menu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _pin_set
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_number
       _cursor_displacement
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _date_set
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
       _time_set
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _pin_reset
       _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      4A       5       46.3%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     28      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       6        0.0%
DATA                 0      0      A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Sep 18 17:51:30 2016

                                             _a 007C                                               _b 007E  
                                             _c 0080                                               _i 0039  
                                             _j 0082                                               _k 0084  
                                ?_lcd_send_byte 0003                                    ___awdiv@sign 0006  
                           ___wmul@multiplicand 0003                            ?_home_volume_refresh 0001  
                                   lcd_comand@d 0005                                    __CFG_CP0$OFF 000000  
                               lcd_write@column 000B                                             l400 FA28  
                                           l225 EA84                                             l411 FA6A  
                                           l403 FA46                                             l420 FA92  
                                           l412 FA66                                             l404 FA42  
                                           l431 FACC                                             l423 FAA8  
                                           l415 FA7C                                             l407 FA58  
                                           l440 FAF4                                             l432 FAC8  
                                           l424 FAA4                                             l416 FA78  
                                           l408 FA54                                             l443 FB0A  
                                           l435 FAE6                                             l427 FABA  
                                           l419 FA96                                             l444 FB06  
                                           l436 FAE2                                             l428 FAB6  
                                           l439 FAF8                                             l391 FA08  
                                           l480 E472                                             l448 FB18  
                                           l392 FA04                                             l395 FA1A  
                                           l387 F9F6                                             l396 FA16  
                                           l388 F9F2                                             l479 E470  
                                           l399 FA2C                                             l679 FE60  
                         ??_check_home_callback 0011                                             _dia 0050  
                                           _key 0045                                             _mes 0056  
                                           _pin 009A                                 lcd_write@string 000F  
                                           wreg 000FE8                                 RtccReadDate@pDt 0001  
                                   lcd_gotoxy@x 0006                                     lcd_gotoxy@y 0005  
                             ??_button_asterisk 0001                                            l1323 EC40  
                                          l1333 E962                                            l3121 E2EE  
                                          l3043 E22E                                            l3141 EC16  
                                          l3301 F9D0                                            l3221 F872  
                                          l3311 F0A4                                            l3071 E30A  
                                          l4015 EAC2                                            l4031 EB14  
                                          l4023 EB66                                            l4103 E59E  
                                          l3321 F0BC                                            l3081 E8F0  
                                          l3137 EC04                                            l3161 E940  
                                          l3401 FDDA                                            l4017 EAD8  
                                          l4033 EB2A                                            l4025 EB7C  
                                          l4041 E5B8                                            l3225 F87E  
                                          l4113 F032                                            l3315 F0AC  
                                          l3083 E8FC                                            l3091 EB9C  
                                          l3139 EC0E                                            l3411 FE14  
                                          l4203 F62C                                            l3251 F932  
                                          l4123 F068                                            l3069 E304  
                                          l3077 E8D8                                            l3149 EC34  
                                          l3165 E956                                            l3157 E92E  
                                          l3405 FDFE                                            l4037 E5AC  
                                          l4045 E5BE                                            l4061 EF3A  
                                          l4053 EF22                                            l3261 F962  
                                          l3245 F8F8                                            l3229 F88A  
                                          l4117 F054                                            l3079 E8E4  
                                          l3087 E908                                            l3095 EBC6  
                                          l3159 E938                                            l3431 FEBA  
                                          l3407 FE08                                            l3351 FC98  
                                          l4039 E5B2                                            l4063 EF40  
                                          l4055 EF28                                            l3255 F946  
                                          l3183 F7F2                                            l3097 E21C  
                                          l3329 F0D0                                            l3425 FE66  
                                          l3417 FE36                                            l3433 FEC6  
                                          l4209 F64C                                            l4217 F66C  
                                          l4065 EF46                                            l4057 EF2E  
                                          l3193 F822                                            l3177 F7C8  
                                          l3419 FE3E                                            l3435 FEE2  
                                          l3363 FCCA                                            l3443 E7C0  
                                          l4059 EF34                                            l3187 F806  
                                          l3381 FD68                                            l3365 FCE0  
                                          l3357 FCB2                                            l3445 E7CA  
                                          l4069 EF4C                                            l3293 F9B8  
                                          l3461 F450                                            l3383 FD8A  
                                          l3359 FCC0                                            l4191 F5FA  
                                          l4095 E57A                                            l3471 F478  
                                          l3455 F43E                                            l3393 FDB2  
                                          l3377 FD62                                            l3369 FCFE  
                                          l3713 EA0A                                            l3297 F9C4  
                                          l4337 E3A2                                            l4195 F606  
                                          l3803 E816                                            l3811 E3C6  
                                          l3715 EA14                                            l4099 E58A  
                                          l3467 F466                                            l3483 F4A2  
                                          l3397 FDD6                                            l3389 FDA6  
                                          l4197 F60C                                            l3813 E3CC  
                                          l3733 EA7E                                            l3469 F470  
                                          l3741 F4C0                                            l3831 E858  
                                          l3911 E508                                            l3719 EA48  
                                          l3487 F4B2                                            l3479 F496  
                                          l3751 F4FE                                            l3743 F4CE  
                                          l3817 E3D2                                            l3825 E846  
                                          l3921 E3F6                                            l3913 E528  
                                          l3905 E4F6                                            l3729 EA6A  
                                          l3745 F4D8                                            l4289 FB20  
                                          l3827 E84C                                            l3835 E85E  
                                          l3851 E4EE                                            l3843 E4BC  
                                          l3923 E3FC                                            l3907 E4FE  
                                          l3747 F4E6                                            l3755 F508  
                                          l3771 F570                                            l3829 E852  
                                          l3845 E4C4                                            l3861 E48E  
                                          l3749 F4F0                                            l3757 F540  
                                          l3773 F57E                                            l3781 F5A0  
                                          l3927 E402                                            l3951 E8B8  
                                          l3775 F588                                            l3783 F5D8  
                                          l3767 F558                                            l3953 EEAE  
                                          l3793 E7FE                                            l3849 E4CE  
                                          l3881 E432                                            l3937 E390  
                                          l3945 E896                                            l3777 F596  
                                          l3769 F566                                            l3795 E804  
                                          l3859 E488                                            l3867 E498  
                                          l3875 E426                                            l3891 E538  
                                          l3947 E89C                                            l3797 E80A  
                                          l3877 E42C                                            l3949 E8AE  
                                          l3799 E810                                            l3895 E542  
                                          l3897 E562                                            l3889 E530  
                                          l3979 F308                 ??_activity_submenu_siren_volume 0011  
                                          STR_1 FFE2                                            STR_2 FF6B  
                                          STR_3 FFBE                                            STR_4 FFE6  
                                          STR_5 FFAB                                            STR_6 FFBE  
                                          STR_7 FFB8            __size_of_button_B_submenu_pin_config 0034  
                                          STR_8 FFD8                                            STR_9 FF01  
                                          u1400 EFCA                                            u1420 EFE6  
                                          u1360 EF98                                            u1418 EFCC  
                                          u1380 EFB0                                            u1460 EBBC  
                                          u1438 EFE8                                            u1470 EBE6  
                                          u1378 EF9A                                            u1467 EBB2  
                                          u1477 EBDC                                            u1398 EFB2  
                                          u2717 FB26                                            u2727 F5E2  
                                          u2737 F54A                                            u2747 EA98  
                                          u2757 E230                                            u1990 E7F2  
                                          u2767 E21E                                            u1997 E7E8  
           __end_of_activity_submenu_siren_tone EE48                     _activity_submenu_siren_tone EDE2  
                              ?_lcd_send_nibble 0001                                            _anio 004E  
                                          _flag 02F8                                            _main E398  
                                          _hora 0054                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr0l 000FE9                                            fsr2h 000FDA  
                                          indf1 000FE7                                            fsr1l 000FE1  
                                          indf2 000FDF                                            fsr2l 000FD9  
                    __size_of_home_tone_refresh 0052                                   __CFG_T1DIG$ON 000000  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                   __CFG_IESO$OFF 000000  
                              RtccReadDate@rTD0 000B                                RtccReadDate@rTD1 0003  
                          __end_of_activity_pin E9BA                   ??_activity_submenu_siren_tone 0011  
                                  ___param_bank 000010                                 RtccReadTime@pTm 0001  
                   __end_of_cursor_displacement EAA4                 __size_of_activity_submenu_siren 0066  
          __end_of_activity_submenu_time_config F202           __size_of_activity_submenu_time_config 0082  
                  _activity_submenu_time_config F180                      _cursor_horizontal_position 0033  
                         ??_home_volume_refresh 0024                                     _Delay1KTCYx E21A  
                                 __CFG_PLLDIV$1 000000                                           ?_main 0001  
                               __end_of___awdiv F4BE                                           STR_10 FF32  
                                         STR_11 FF22                                           STR_20 FF88  
                                         STR_12 FF41                                           STR_13 FF32  
                                         STR_21 FFDD                                           STR_30 FFF0  
                                         STR_14 FF41                                           STR_22 FFF4  
                                         STR_31 FFF2                                           STR_23 FFF2  
                                         STR_15 FF96                                           STR_40 FFF1  
                                         STR_32 FFF0                                           STR_24 FFF0  
                                         STR_16 FFA4                                           STR_33 FFF2  
                                         STR_25 FFF2                                           STR_17 FF8F  
                                         STR_41 FF50                                           STR_34 FFF0  
                                         STR_26 FFF0                                           STR_42 FFD3  
                                         STR_50 FFC4                                           STR_18 FF9D  
                                         STR_35 FFF1                                           STR_27 FFF2  
                                         STR_43 FF6B                                           STR_51 FFCE  
                                         STR_19 FF81                                           STR_28 FFF0  
                                         STR_52 FFC9                                           STR_44 FFEA  
                                         STR_36 FF12                                           STR_29 FFF2  
                                         STR_37 FFE6                                           STR_45 FFED  
                                         STR_53 FF73            __size_of_button_B_submenu_siren_tone 003A  
                                         STR_46 FFAB                                           STR_54 FF7A  
                                         STR_38 FF63                                           STR_39 FFB2  
                                         STR_47 FF5B                                           STR_48 FFC9  
                                         STR_49 FF5B                           __size_of_Delay100TCYx 0012  
                               ___awdiv@divisor 0003                                 __end_of___lwdiv EC4A  
                               __end_of___lwmod E96C                                 ___awdiv@counter 0005  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                    ?_button_hash 0001  
                                __CFG_FCMEN$OFF 000000                                 __end_of_dpowers FEFD  
                                         _mes_d 005B                                           _mes_u 00A8  
                               __end_of_isdigit E2F8                                           _setup F284  
                                         _state 0041                                 __end_of_pin_set E298  
         __end_of_button_B_submenu_siren_config E454          __size_of_button_B_submenu_siren_config 0030  
                 _button_B_submenu_siren_config E424                                  __pbitbssCOMRAM 02F8  
                                         tablat 000FF5                     __size_of_home_state_refresh 0052  
                           _reset_home_callback E1EE                                    lcd_putrs@ptr 0009  
                                         status 000FD8                                 __end_of_sprintf FEF2  
         __end_of_button_B_submenu_siren_volume E568          __size_of_button_B_submenu_siren_volume 003A  
                 _button_B_submenu_siren_volume E52E                __end_of_activity_submenu_pin_set EA08  
                         __end_of_activity_home E36E                           __end_of_activity_menu F284  
                                  lcd_write@row 000D                        __size_of_menu_selector_0 0042  
                      __size_of_menu_selector_1 0042                        __size_of_menu_selector_2 0042  
                      __size_of_menu_selector_3 0042                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization E772                                    _Delay100TCYx E22C  
                                  __end_of_main E3C4                     __size_of_submenu_selector_0 0042  
                   __size_of_submenu_selector_1 0042                                 ??_lcd_send_byte 0004  
                              RtccReadTime@rTD0 000B                                RtccReadTime@rTD1 0003  
                              __end_of_Read_RTC F78A                   ?_activity_submenu_time_config 0001  
                          ?_reset_home_callback 0001                                          ??_main 0029  
                                 __activetblptr 000002                                __end_of_RtccWrOn E250  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                        _activity_submenu_siren ED7C                                          _EECON2 000FA7  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                              ___awdiv@dividend 0001                                          ?_setup 0001  
                                __CFG_WDTEN$OFF 000000                    __size_of_pin_input_validator 002A  
                              RtccWriteDate@pDt 0001                                          _RTCCFG 000F3F  
                                __CFG_WPCFG$OFF 000000                                   _home_callback 0035  
         __end_of_activity_submenu_siren_volume EEAE          __size_of_activity_submenu_siren_volume 0066  
                 _activity_submenu_siren_volume EE48                                __end_of_date_set F556  
                                __CFG_WPDIS$OFF 000000                               ?_submenu_selector 0001  
                           _home_callback_delay 0037                                  __CFG_XINST$OFF 000000  
                           _home_config_refresh F5EE                          __size_of_button_B_menu 0048  
                            ??_submenu_selector 0011                                __end_of_lcd_init F0FE  
                    __end_of_home_clock_refresh F428                                __end_of_lcd_putc E920  
                                        ___wmul E31C                                       ??___awdiv 0005  
                                __CFG_STVREN$ON 000000                                          _diasem 0052  
                                        _anio_d 0058                                          _anio_u 00A4  
                                     ??___lwdiv 0005                                       ??___lwmod 000C  
                         ??_reset_home_callback 0001                                          _hora_d 005A  
                                        _hora_u 00A7                                __end_of_button_A E5E6  
                              __end_of_button_B EF8C                                __end_of_button_C E2B4  
                              __end_of_button_D E202                                          clear_0 E778  
                                        clear_1 E786                                ___awdiv@quotient 0007  
                                        _minuto 003D             __end_of_button_B_submenu_activation E4F4  
                   _button_B_submenu_activation E4BA                           __end_of_RtccWriteDate F9DC  
                                        _strcat E88C                                          _strcmp EA08  
                         __end_of_RtccWriteTime F896                                          _strcpy E7B6  
                              RtccWriteTime@pTm 0001                                    __pdataCOMRAM 004E  
                                     ??_isdigit 0001                          __size_of_button_number 007C  
                              __end_of_time_set F5EE                                    __mediumconst FEF2  
                                     ??_pin_set 0011                            ?_home_config_refresh 0001  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ??_sprintf 0017  
                         __size_of_activity_pin 004E                                      __accesstop 0060  
                       __end_of__initialization E7AC                              __size_of_Write_RTC 015C  
                                 ___rparam_used 000001                       __size_of_keyboard_control 0156  
                                __pcstackCOMRAM 0001                                   __end_of_setup F308  
                             ??_menu_selector_0 0011                               ??_menu_selector_1 0011  
                             ??_menu_selector_2 0011                               ??_menu_selector_3 0011  
                               __CFG_DSWDTPS$G2 000000                          __size_of_menu_selector 0048  
                               _button_asterisk E1E8               __size_of_activity_submenu_pin_set 004E  
                               __CFG_OSC$INTOSC 000000                           ??_home_config_refresh 0024  
                     ?_activity_submenu_pin_set 0001                                   _button_B_menu E844  
                                  _activity_pin E96C                                    _alarm_volume 002D  
                             lcd_gotoxy@address 0007                            __size_of_button_hash 003E  
                            __size_of_lcd_putrs 0054                              __size_of_lcd_write 0018  
                                  sprintf@width 0021                                         ??_setup 000E  
                                    __pbssBANK0 0060                                       ?_Read_RTC 0001  
                                    _dia_semana 00A5                       RtccWriteTime@tempHourWDay 000A  
                                    __pnvCOMRAM 0058                                      _alarm_tone 002B  
                 __size_of_activity_submenu_pin 0066                                   _button_number F002  
                                     ?_RtccWrOn 0001                                  lcd_send_byte@n 0003  
                ?_activity_submenu_siren_volume 0001             __end_of_button_B_submenu_pin_config E4BA  
                   _button_B_submenu_pin_config E486                                         ?___wmul 0001  
                                 ?_RtccReadDate 0001                     __end_of_check_home_callback E2D6  
                                 ?_RtccReadTime 0001                              __size_of_pin_reset 0016  
                                  ?_Delay1KTCYx 0001                ??_activity_submenu_date_and_time 0011  
               ?_activity_submenu_date_and_time 0001                                         ?_strcat 0001  
                                       ?_strcmp 0001                                         ?_strcpy 0001  
                             __end_of_Write_RTC FC8E                                  ?_button_B_menu 0001  
                                    _lcd_comand E20C                                       ?_date_set 0001  
                                    _lcd_gotoxy E2F8                                         _RTCVALH 000F99  
                                       _RTCVALL 000F98                                       ?_lcd_init 0001  
                                     ?_lcd_putc 0001                                   _menu_selected 003B  
                                 _menu_selector E7FC             __end_of_button_B_submenu_siren_tone E52E  
                   _button_B_submenu_siren_tone E4F4                                      ??_Read_RTC 0013  
                                     ?_button_A 0001                                       ?_button_B 0001  
                                     ?_button_C 0001                                       ?_button_D 0001  
                                ?_button_number 0001                                         __Hparam 0000  
                ??_activity_submenu_date_config 0024                                         __Lparam 0000  
                   __end_of_home_volume_refresh EB9A                        __size_of_lcd_send_nibble 0076  
                       __end_of_button_asterisk E1EE                                      ??_RtccWrOn 0001  
                                     ?_time_set 0001                                  ??_RtccReadDate 0003  
                                ??_RtccReadTime 0003                                         ___awdiv F428  
                             __end_of_lcd_putrs EBEE                               __end_of_lcd_write E27E  
                               __size_of___wmul 0028                                         ___lwdiv EBEE  
                                       ___lwmod E920                                     _RtccTimeVal 0078  
                                       __pcinit E772                                         _fecha_d 0059  
                                       _fecha_u 00A6                                         __ramtop 0F00  
                           _pin_input_validator E36E                                         __ptext0 E398  
                                       __ptext1 F284                                         __ptext2 F9DC  
                                       __ptext3 F002                                         __ptext4 F556  
                                       __ptext5 E88C                                         __ptext6 F4BE  
                                       __ptext7 FB32                                         __ptext8 F428  
                                       __ptext9 F78A                    ?_activity_submenu_activation 0001  
                                       _buffer1 0086                                 __size_of_strcat 0048  
                               __size_of_strcmp 004E                                 __size_of_strcpy 0046  
                  __size_of_cursor_displacement 004E                                       _T1CONbits 000FCD  
                                       _dpowers FEF3                                         _isdigit E2D6  
                       ?_activity_submenu_siren 0001                                      ??_date_set 000E  
                                       _pin_set E27E                                         _segundo 003F  
                    __end_of_home_state_refresh EAF6                                         _sprintf FC8E  
                                    ??_lcd_init 0005                                      ??_lcd_putc 0008  
                          end_of_initialization E7AC                                  ?_menu_selector 0001  
                             __end_of_pin_reset E266                            ?_pin_input_validator 0001  
                          lcd_send_byte@address 0004                                      ??_button_A 0013  
                                 __Lmediumconst FEF2                                      ??_button_B 0026  
                                    ??_button_C 0011                                      ??_button_D 0011  
                    __end_of_submenu_selector_0 E730                      __end_of_submenu_selector_1 E772  
                              _keyboard_control F9DC                                      ??_time_set 000E  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                         __end_of_lcd_send_byte E486                                         strcmp@r 0006  
                                     _PORTAbits 000F80                                       _PORTCbits 000F82  
                               ??_button_B_menu 0011                  __end_of_activity_submenu_siren EDE2  
                              __CFG_DSBOREN$OFF 000000                       __size_of_submenu_selector 0030  
                                   ?_lcd_comand 0001                              _home_clock_refresh F396  
                              __CFG_CPUDIV$OSC1 000000                                       _TRISBbits 000F93  
                        __size_of_activity_home 002A                          __size_of_activity_menu 0082  
                                   ?_lcd_gotoxy 0005                                 _LCD_INIT_STRING FEFD  
                           ?_home_clock_refresh 0001                           ??_pin_input_validator 0011  
                               ??_button_number 0024                                 _menu_selector_0 E5E6  
                               _menu_selector_1 E628                                 _menu_selector_2 E66A  
                               _menu_selector_3 E6AC                                __CFG_IOL1WAY$OFF 000000  
                     RtccWriteDate@tempDayMonth 000A                     __end_of_reset_home_callback E1F8  
                           __CFG_MSSP7B_EN$MSK7 000000                                ?_button_asterisk 0001  
                              Delay100TCYx@unit 0001                            ??_home_clock_refresh 0024  
                                __end_of___wmul E344                                   __pidataCOMRAM E202  
                     RtccWriteDate@tempHourWDay 000C                               ??_lcd_send_nibble 0001  
                          __size_of_Delay1KTCYx 0012                                __CFG_DSWDTEN$OFF 000000  
                                __end_of_strcat E8D4                                  __end_of_strcmp EA56  
                                __end_of_strcpy E7FC                             start_initialization E772  
                               ??_menu_selector 0011                            __end_of_RtccReadDate F396  
                          __end_of_RtccReadTime EF1C                            RtccWriteTime@wasAlrm 0006  
                  ?_activity_submenu_siren_tone 0001                            RtccWriteTime@wasWrEn 0007  
          __size_of_activity_submenu_activation 0066                          __size_of_RtccWriteDate 0146  
                               RtccWriteDate@di 0003                          __size_of_RtccWriteTime 010C  
                             __size_of_Read_RTC 00F6                                   _activity_home E344  
                                 _activity_menu F202                             __size_of_lcd_comand 000E  
                           __size_of_lcd_gotoxy 0024                                        ??___wmul 0005  
                             __size_of_RtccWrOn 0012                                 RtccWriteTime@di 0003  
                              __CFG_LPT1OSC$OFF 000000                     __end_of_home_config_refresh F694  
                                      ??_strcat 0005                                        ??_strcmp 0005  
                                      ??_strcpy 0005                    __end_of_activity_submenu_pin ED7C  
                                   _ALRMCFGbits 000F91                         __end_of_LCD_INIT_STRING FF01  
                                 ??_button_hash 0011                                     __pbssCOMRAM 0029  
                                     _Write_RTC FB32                                    _isdigit$2279 0002  
                       __end_of_menu_selector_0 E628                         __end_of_menu_selector_1 E66A  
                       __end_of_menu_selector_2 E6AC                         __end_of_menu_selector_3 E6EE  
                             __size_of_date_set 0098          __end_of_activity_submenu_date_and_time ED16  
       __size_of_activity_submenu_date_and_time 0066                  _activity_submenu_date_and_time ECB0  
                               Delay1KTCYx@unit 0001                               __size_of_lcd_init 0080  
                                   sprintf@flag 001D                               __size_of_lcd_putc 004C  
                                   sprintf@prec 0020                             _cursor_displacement EA56  
                                     __pnvBANK0 00A4                                  ?_activity_home 0001  
                                ?_activity_menu 0001                               __size_of_button_A 0040  
                             __size_of_button_B 0070                               __size_of_button_C 001C  
                             __size_of_button_D 000A                                ___lwdiv@dividend 0001  
                                 ?_Delay100TCYx 0001                  ?_button_B_submenu_siren_config 0001  
                                 __pmediumconst FEF2                                        ?___awdiv 0001  
                                      ?___lwdiv 0001                                        ?___lwmod 0008  
                             __size_of_time_set 0098                  ?_button_B_submenu_siren_volume 0001  
                       RtccWriteTime@tempMinSec 0008                        _activity_submenu_pin_set E9BA  
                                     _lcd_putrs EB9A                                       _lcd_write E266  
                              _submenu_selected 0043                                _submenu_selector E3C4  
                          ?_cursor_displacement 0001                                   _RtccWriteDate F896  
                                 _RtccWriteTime F78A                    __size_of_check_home_callback 0022  
                                      ?_isdigit 0001                            __CFG_RTCOSC$T1OSCREF 000000  
                                      ?_pin_set 0001                        __end_of_keyboard_control FB32  
                                    ?_Write_RTC 0001                                ___lwdiv@quotient 0005  
                ??_activity_submenu_time_config 0024                                        ?_sprintf 000D  
                                __size_of_setup 0084                             __end_of_button_hash E5A6  
                              _RtccAlrmTimeDate 0060                                  ___wmul@product 0005  
                                      _LATAbits 000F89                                        _LATBbits 000F8A  
                                     _pin_input 009F                                       _pin_reset E250  
                                      _PIE3bits 000FA3                                       _segundo_d 005D  
                                ??_Delay100TCYx 0001                              _home_state_refresh EAA4  
                                     _segundo_u 005E                                __CFG_WDTPS$32768 000000  
                            RtccWriteDate@wasOn 0005                             ?_home_state_refresh 0001  
                            _Rtcc_read_TimeDate 0070                    __size_of_home_volume_refresh 0052  
          __size_of_activity_submenu_siren_tone 0066                                  ?_RtccWriteDate 0001  
                         ??_cursor_displacement 0008                                      ?_lcd_putrs 0009  
                                    ?_lcd_write 000B                               ___wmul@multiplier 0001  
                                ?_RtccWriteTime 0001                              _submenu_selector_0 E6EE  
                            _submenu_selector_1 E730                    ?_button_B_submenu_activation 0001  
                                     lcd_init@i 0005                           __size_of_RtccReadDate 008E  
 __end_of_button_B_submenu_date_and_time_config E424  __size_of_button_B_submenu_date_and_time_config 0030  
       ??_button_B_submenu_date_and_time_config 0024          ?_button_B_submenu_date_and_time_config 0001  
         _button_B_submenu_date_and_time_config E3F4                                    ??_lcd_comand 0005  
                                     lcd_putc@c 0008                           __size_of_RtccReadTime 006E  
          __end_of_activity_submenu_date_config F180           __size_of_activity_submenu_date_config 0082  
                  _activity_submenu_date_config F0FE                                    ??_lcd_gotoxy 0006  
                           ?_submenu_selector_0 0001                             ?_submenu_selector_1 0001  
                              ?_menu_selector_0 0001                                ?_menu_selector_1 0001  
                              ?_menu_selector_2 0001                                ?_menu_selector_3 0001  
                                     copy_data0 E7A0                            ??_home_state_refresh 0024  
                                      _Read_RTC F694                                 ??_activity_home 0011  
                               ??_activity_menu 0011                                      ?_pin_reset 0001  
                          _activity_submenu_pin ED16                                 _lcd_send_nibble EF8C  
                                      __Hrparam 0000                                        _RtccDate 0046  
                                      __Lrparam 0000                                        _RtccTime 004A  
                                      _RtccWrOn E23E                            ??_submenu_selector_0 0011  
                          ??_submenu_selector_1 0011                              __end_of_lcd_comand E21A  
                            __end_of_lcd_gotoxy E31C                                    _RtccReadDate F308  
                              __size_of___awdiv 0096                                    _RtccReadTime EEAE  
                              __size_of___lwdiv 005C                                __size_of___lwmod 004C  
                                  _RtccTimeDate 0068                              _config_widget_time 0031  
                                    sprintf@val 001E                           __end_of_button_B_menu E88C  
                 ??_button_B_submenu_activation 0011                                      strcat@from 0003  
                                   _button_hash E568                                   ?_activity_pin 0001  
                                      _activity 0029                                        _date_set F4BE  
                   __end_of_pin_input_validator E398                                __size_of_isdigit 0022  
                               ___lwdiv@divisor 0003                                     ??_Write_RTC 000E  
                              __size_of_pin_set 001A                                 ___lwdiv@counter 0007  
                                      __ptext10 F896                                        __ptext11 E23E  
                                      __ptext20 F202                                        __ptext12 EA56  
                                      __ptext21 EF1C                                        __ptext13 E568  
                                      __ptext30 E3F4                                        __ptext22 E52E  
                                      __ptext14 E27E                                        __ptext31 F180  
                                      __ptext23 E4F4                                        __ptext15 E36E  
                                      __ptext40 E3C4                                        __ptext32 F0FE  
                                      __ptext24 E424                                        __ptext16 EA08  
                                      __ptext41 E730                                        __ptext33 E4BA  
                                      __ptext25 EE48                                        __ptext17 E1E8  
                                      __ptext50 E20C                                        __ptext42 E6EE  
                                      __ptext34 E844                                        __ptext26 EDE2  
                                      __ptext18 E1F8                                        __ptext51 F5EE  
                                      __ptext43 E7FC                                        __ptext35 ED7C  
                                      __ptext27 E486                                        __ptext19 E298  
                                      __ptext60 EBEE                                        __ptext52 EB48  
                                      __ptext44 E6AC                                        __ptext36 ED16  
                                      __ptext28 E250                                        __ptext61 E2B4  
                                      __ptext53 EAF6                                        __ptext45 E66A  
                                      __ptext37 ECB0                                        __ptext29 E9BA  
                                      __ptext70 EF8C                                        __ptext62 E1EE  
                                      __ptext54 EAA4                                        __ptext46 E628  
                                      __ptext38 EC4A                                        __ptext71 E22C  
                                      __ptext63 E344                                        __ptext55 F396  
                                      __ptext47 E5E6                                        __ptext39 E5A6  
                                      __ptext72 E21A                                        __ptext64 E266  
                                      __ptext56 FC8E                                        __ptext48 E96C  
                                      __ptext73 F694                                        __ptext65 EB9A  
                                      __ptext57 E2D6                                        __ptext49 E7B6  
                                      __ptext74 EEAE                                        __ptext66 E8D4  
                                      __ptext58 E31C                                        __ptext75 F308  
                                      __ptext67 E2F8                                        __ptext59 E920  
                                      __ptext68 F07E                                        __ptext69 E454  
                 ?_activity_submenu_date_config 0001                                        _lcd_init F07E  
                                      _lcd_putc E8D4                                __size_of_sprintf 0264  
                                    strcpy@from 0003                          __size_of_lcd_send_byte 0032  
                                      _button_A E5A6                                        _button_B EF1C  
                                      _button_C E298                                        _button_D E1F8  
                                 __size_of_main 002C                           __end_of_button_number F07E  
                         ?_activity_submenu_pin 0001                                        _minuto_d 005C  
                                      _minuto_u 00A9                               _home_tone_refresh EAF6  
                                      _time_set F556                              ?_home_tone_refresh 0001  
                  ?_button_B_submenu_pin_config 0001                                   ??_Delay1KTCYx 0001  
                               ??_RtccWriteDate 0004                     __size_of_home_clock_refresh 0092  
                               ??_RtccWriteTime 0004             __end_of_activity_submenu_activation ECB0  
                   _activity_submenu_activation EC4A                    __size_of_reset_home_callback 000A  
                                   ??_lcd_putrs 000B                                     ??_lcd_write 0011  
                           ??_home_tone_refresh 0024                        __size_of_button_asterisk 0006  
                                ??_activity_pin 0011                                     _OSCTUNEbits 000F9B  
                                    _INTCONbits 000FF2                              RtccWriteTime@wasOn 0005  
                          __end_of_Delay100TCYx E23E                   ??_activity_submenu_activation 0011  
                                      isdigit@c 0003                           __end_of_menu_selector E844  
                                     sprintf@ap 001B                         __end_of_lcd_send_nibble F002  
                                     sprintf@sp 000D                                ___lwmod@dividend 0008  
                  ?_button_B_submenu_siren_tone 0001                       __end_of_home_tone_refresh EB48  
          __size_of_button_B_submenu_activation 003A                        __end_of_submenu_selector E3F4  
                                   ??_pin_reset 0007                             _check_home_callback E2B4  
                    ??_activity_submenu_pin_set 0011                                      _OSCCONbits 000FD3  
                                 _config_widget 002F                           RtccWriteDate@tempYear 0007  
                      ??_activity_submenu_siren 0011                                   _lcd_send_byte E454  
                 ??_button_B_submenu_pin_config 0011                                      _RTCCFGbits 000F3F  
                                      sprintf@c 0023                                        sprintf@f 000F  
                                      strcat@cp 0005                                        strcat@to 0001  
                          ?_check_home_callback 0001                                        strcmp@s1 0001  
                                      strcmp@s2 0003                                 ___lwmod@divisor 000A  
                                      strcpy@cp 0005                                        strcpy@to 0001  
                           __end_of_Delay1KTCYx E22C                                 ___lwmod@counter 000C  
               ??_button_B_submenu_siren_config 0011                    __size_of_home_config_refresh 00A6  
                          RtccWriteDate@wasAlrm 0006                            RtccWriteDate@wasWrEn 0009  
                             ?_keyboard_control 0001                 ??_button_B_submenu_siren_volume 0011  
                            ??_keyboard_control 0028                             _home_volume_refresh EB48  
                        ??_activity_submenu_pin 0011                   ??_button_B_submenu_siren_tone 0011  
                         lcd_send_nibble@nibble 0002  
