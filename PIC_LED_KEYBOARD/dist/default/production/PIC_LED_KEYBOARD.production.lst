

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 27 19:30:42 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           	psect	idataCOMRAM
    96  00E110                     __pidataCOMRAM:
    97                           	opt stack 0
    98                           
    99                           ;initializer for _anio
   100  00E110  0010               	dw	16
   101                           
   102                           ;initializer for _dia
   103  00E112  0006               	dw	6
   104                           
   105                           ;initializer for _diasem
   106  00E114  0002               	dw	2
   107                           
   108                           ;initializer for _hora
   109  00E116  0012               	dw	18
   110                           
   111                           ;initializer for _mes
   112  00E118  0009               	dw	9
   113                           
   114                           	psect	mediumconst
   115  00FECC                     __pmediumconst:
   116                           	opt stack 0
   117  00FECC  00                 	db	0
   118  00FECD                     _dpowers:
   119                           	opt stack 0
   120  00FECD  0001               	dw	1
   121  00FECF  000A               	dw	10
   122  00FED1  0064               	dw	100
   123  00FED3  03E8               	dw	1000
   124  00FED5  2710               	dw	10000
   125  00FED7                     __end_of_dpowers:
   126                           	opt stack 0
   127  00FED7                     _LCD_INIT_STRING:
   128                           	opt stack 0
   129  00FED7  28                 	db	40
   130  00FED8  0C                 	db	12
   131  00FED9  01                 	db	1
   132  00FEDA  06                 	db	6
   133  00FEDB                     __end_of_LCD_INIT_STRING:
   134                           	opt stack 0
   135  00FEDB                     STR_2:
   136                           
   137                           ; BSR set to: 15
   138  00FEDB  20                 	db	32
   139  00FEDC  20                 	db	32
   140  00FEDD  20                 	db	32
   141  00FEDE  20                 	db	32
   142  00FEDF  41                 	db	65	;'A'
   143  00FEE0  54                 	db	84	;'T'
   144  00FEE1  45                 	db	69	;'E'
   145  00FEE2  4E                 	db	78	;'N'
   146  00FEE3  43                 	db	67	;'C'
   147  00FEE4  49                 	db	73	;'I'
   148  00FEE5  4F                 	db	79	;'O'
   149  00FEE6  4E                 	db	78	;'N'
   150  00FEE7  20                 	db	32
   151  00FEE8  20                 	db	32
   152  00FEE9  20                 	db	32
   153  00FEEA  20                 	db	32
   154  00FEEB  00                 	db	0
   155  00FEEC                     STR_3:
   156                           
   157                           ; BSR set to: 15
   158  00FEEC  41                 	db	65	;'A'
   159  00FEED  4C                 	db	76	;'L'
   160  00FEEE  41                 	db	65	;'A'
   161  00FEEF  52                 	db	82	;'R'
   162  00FEF0  4D                 	db	77	;'M'
   163  00FEF1  41                 	db	65	;'A'
   164  00FEF2  20                 	db	32
   165  00FEF3  44                 	db	68	;'D'
   166  00FEF4  49                 	db	73	;'I'
   167  00FEF5  53                 	db	83	;'S'
   168  00FEF6  50                 	db	80	;'P'
   169  00FEF7  41                 	db	65	;'A'
   170  00FEF8  52                 	db	82	;'R'
   171  00FEF9  41                 	db	65	;'A'
   172  00FEFA  44                 	db	68	;'D'
   173  00FEFB  41                 	db	65	;'A'
   174  00FEFC  00                 	db	0
   175  00FEFD                     STR_30:
   176                           
   177                           ; BSR set to: 15
   178  00FEFD  49                 	db	73	;'I'
   179  00FEFE  6E                 	db	110	;'n'
   180  00FEFF  67                 	db	103	;'g'
   181  00FF00  72                 	db	114	;'r'
   182  00FF01  65                 	db	101	;'e'
   183  00FF02  73                 	db	115	;'s'
   184  00FF03  65                 	db	101	;'e'
   185  00FF04  20                 	db	32
   186  00FF05  6C                 	db	108	;'l'
   187  00FF06  61                 	db	97	;'a'
   188  00FF07  20                 	db	32
   189  00FF08  66                 	db	102	;'f'
   190  00FF09  65                 	db	101	;'e'
   191  00FF0A  63                 	db	99	;'c'
   192  00FF0B  68                 	db	104	;'h'
   193  00FF0C  61                 	db	97	;'a'
   194  00FF0D  00                 	db	0
   195  00FF0E                     STR_17:
   196                           
   197                           ; BSR set to: 15
   198  00FF0E  49                 	db	73	;'I'
   199  00FF0F  6E                 	db	110	;'n'
   200  00FF10  67                 	db	103	;'g'
   201  00FF11  72                 	db	114	;'r'
   202  00FF12  65                 	db	101	;'e'
   203  00FF13  73                 	db	115	;'s'
   204  00FF14  65                 	db	101	;'e'
   205  00FF15  20                 	db	32
   206  00FF16  73                 	db	115	;'s'
   207  00FF17  75                 	db	117	;'u'
   208  00FF18  20                 	db	32
   209  00FF19  50                 	db	80	;'P'
   210  00FF1A  49                 	db	73	;'I'
   211  00FF1B  4E                 	db	78	;'N'
   212  00FF1C  3A                 	db	58	;':'
   213  00FF1D  00                 	db	0
   214  00FF1E                     STR_32:
   215                           
   216                           ; BSR set to: 15
   217  00FF1E  49                 	db	73	;'I'
   218  00FF1F  6E                 	db	110	;'n'
   219  00FF20  67                 	db	103	;'g'
   220  00FF21  72                 	db	114	;'r'
   221  00FF22  65                 	db	101	;'e'
   222  00FF23  73                 	db	115	;'s'
   223  00FF24  65                 	db	101	;'e'
   224  00FF25  20                 	db	32
   225  00FF26  6C                 	db	108	;'l'
   226  00FF27  61                 	db	97	;'a'
   227  00FF28  20                 	db	32
   228  00FF29  68                 	db	104	;'h'
   229  00FF2A  6F                 	db	111	;'o'
   230  00FF2B  72                 	db	114	;'r'
   231  00FF2C  61                 	db	97	;'a'
   232  00FF2D  00                 	db	0
   233  00FF2E                     STR_28:
   234                           
   235                           ; BSR set to: 15
   236  00FF2E  25                 	db	37
   237  00FF2F  30                 	db	48	;'0'
   238  00FF30  32                 	db	50	;'2'
   239  00FF31  75                 	db	117	;'u'
   240  00FF32  2F                 	db	47
   241  00FF33  25                 	db	37
   242  00FF34  30                 	db	48	;'0'
   243  00FF35  32                 	db	50	;'2'
   244  00FF36  75                 	db	117	;'u'
   245  00FF37  2F                 	db	47
   246  00FF38  25                 	db	37
   247  00FF39  30                 	db	48	;'0'
   248  00FF3A  32                 	db	50	;'2'
   249  00FF3B  75                 	db	117	;'u'
   250  00FF3C  00                 	db	0
   251  00FF3D                     STR_29:
   252                           
   253                           ; BSR set to: 15
   254  00FF3D  25                 	db	37
   255  00FF3E  30                 	db	48	;'0'
   256  00FF3F  32                 	db	50	;'2'
   257  00FF40  75                 	db	117	;'u'
   258  00FF41  3A                 	db	58	;':'
   259  00FF42  25                 	db	37
   260  00FF43  30                 	db	48	;'0'
   261  00FF44  32                 	db	50	;'2'
   262  00FF45  75                 	db	117	;'u'
   263  00FF46  3A                 	db	58	;':'
   264  00FF47  25                 	db	37
   265  00FF48  30                 	db	48	;'0'
   266  00FF49  32                 	db	50	;'2'
   267  00FF4A  75                 	db	117	;'u'
   268  00FF4B  00                 	db	0
   269  00FF4C                     STR_47:
   270                           
   271                           ; BSR set to: 15
   272  00FF4C  4E                 	db	78	;'N'
   273  00FF4D  75                 	db	117	;'u'
   274  00FF4E  65                 	db	101	;'e'
   275  00FF4F  76                 	db	118	;'v'
   276  00FF50  6F                 	db	111	;'o'
   277  00FF51  20                 	db	32
   278  00FF52  50                 	db	80	;'P'
   279  00FF53  49                 	db	73	;'I'
   280  00FF54  4E                 	db	78	;'N'
   281  00FF55  3A                 	db	58	;':'
   282  00FF56  00                 	db	0
   283  00FF57                     STR_35:
   284                           
   285                           ; BSR set to: 15
   286  00FF57  56                 	db	86	;'V'
   287  00FF58  6F                 	db	111	;'o'
   288  00FF59  6C                 	db	108	;'l'
   289  00FF5A  75                 	db	117	;'u'
   290  00FF5B  6D                 	db	109	;'m'
   291  00FF5C  65                 	db	101	;'e'
   292  00FF5D  6E                 	db	110	;'n'
   293  00FF5E  00                 	db	0
   294  00FF5F                     STR_44:
   295                           
   296                           ; BSR set to: 15
   297  00FF5F  43                 	db	67	;'C'
   298  00FF60  61                 	db	97	;'a'
   299  00FF61  6D                 	db	109	;'m'
   300  00FF62  62                 	db	98	;'b'
   301  00FF63  69                 	db	105	;'i'
   302  00FF64  61                 	db	97	;'a'
   303  00FF65  72                 	db	114	;'r'
   304  00FF66  00                 	db	0
   305  00FF67                     STR_18:
   306                           
   307                           ; BSR set to: 15
   308  00FF67  41                 	db	65	;'A'
   309  00FF68  63                 	db	99	;'c'
   310  00FF69  74                 	db	116	;'t'
   311  00FF6A  69                 	db	105	;'i'
   312  00FF6B  76                 	db	118	;'v'
   313  00FF6C  61                 	db	97	;'a'
   314  00FF6D  72                 	db	114	;'r'
   315  00FF6E  00                 	db	0
   316  00FF6F                     STR_41:
   317                           
   318                           ; BSR set to: 15
   319  00FF6F  42                 	db	66	;'B'
   320  00FF70  65                 	db	101	;'e'
   321  00FF71  65                 	db	101	;'e'
   322  00FF72  70                 	db	112	;'p'
   323  00FF73  20                 	db	32
   324  00FF74  31                 	db	49	;'1'
   325  00FF75  00                 	db	0
   326  00FF76                     STR_55:
   327                           
   328                           ; BSR set to: 15
   329  00FF76  54                 	db	84	;'T'
   330  00FF77  4F                 	db	79	;'O'
   331  00FF78  4E                 	db	78	;'N'
   332  00FF79  4F                 	db	79	;'O'
   333  00FF7A  3A                 	db	58	;':'
   334  00FF7B  31                 	db	49	;'1'
   335  00FF7C  00                 	db	0
   336  00FF7D                     STR_42:
   337                           
   338                           ; BSR set to: 15
   339  00FF7D  42                 	db	66	;'B'
   340  00FF7E  65                 	db	101	;'e'
   341  00FF7F  65                 	db	101	;'e'
   342  00FF80  70                 	db	112	;'p'
   343  00FF81  20                 	db	32
   344  00FF82  32                 	db	50	;'2'
   345  00FF83  00                 	db	0
   346  00FF84                     STR_56:
   347                           
   348                           ; BSR set to: 15
   349  00FF84  54                 	db	84	;'T'
   350  00FF85  4F                 	db	79	;'O'
   351  00FF86  4E                 	db	78	;'N'
   352  00FF87  4F                 	db	79	;'O'
   353  00FF88  3A                 	db	58	;':'
   354  00FF89  32                 	db	50	;'2'
   355  00FF8A  00                 	db	0
   356  00FF8B                     STR_53:
   357                           
   358                           ; BSR set to: 15
   359  00FF8B  56                 	db	86	;'V'
   360  00FF8C  4F                 	db	79	;'O'
   361  00FF8D  4C                 	db	76	;'L'
   362  00FF8E  3A                 	db	58	;':'
   363  00FF8F  42                 	db	66	;'B'
   364  00FF90  41                 	db	65	;'A'
   365  00FF91  00                 	db	0
   366  00FF92                     STR_51:
   367                           
   368                           ; BSR set to: 15
   369  00FF92  41                 	db	65	;'A'
   370  00FF93  43                 	db	67	;'C'
   371  00FF94  54                 	db	84	;'T'
   372  00FF95  3A                 	db	58	;':'
   373  00FF96  53                 	db	83	;'S'
   374  00FF97  49                 	db	73	;'I'
   375  00FF98  00                 	db	0
   376  00FF99                     STR_54:
   377                           
   378                           ; BSR set to: 15
   379  00FF99  56                 	db	86	;'V'
   380  00FF9A  4F                 	db	79	;'O'
   381  00FF9B  4C                 	db	76	;'L'
   382  00FF9C  3A                 	db	58	;':'
   383  00FF9D  41                 	db	65	;'A'
   384  00FF9E  4C                 	db	76	;'L'
   385  00FF9F  00                 	db	0
   386  00FFA0                     STR_52:
   387                           
   388                           ; BSR set to: 15
   389  00FFA0  41                 	db	65	;'A'
   390  00FFA1  43                 	db	67	;'C'
   391  00FFA2  54                 	db	84	;'T'
   392  00FFA3  3A                 	db	58	;':'
   393  00FFA4  4E                 	db	78	;'N'
   394  00FFA5  4F                 	db	79	;'O'
   395  00FFA6  00                 	db	0
   396  00FFA7                     STR_21:
   397                           
   398                           ; BSR set to: 15
   399  00FFA7  41                 	db	65	;'A'
   400  00FFA8  6C                 	db	108	;'l'
   401  00FFA9  61                 	db	97	;'a'
   402  00FFAA  72                 	db	114	;'r'
   403  00FFAB  6D                 	db	109	;'m'
   404  00FFAC  61                 	db	97	;'a'
   405  00FFAD  00                 	db	0
   406  00FFAE                     STR_34:
   407                           
   408                           ; BSR set to: 15
   409  00FFAE  53                 	db	83	;'S'
   410  00FFAF  69                 	db	105	;'i'
   411  00FFB0  72                 	db	114	;'r'
   412  00FFB1  65                 	db	101	;'e'
   413  00FFB2  6E                 	db	110	;'n'
   414  00FFB3  61                 	db	97	;'a'
   415  00FFB4  00                 	db	0
   416  00FFB5                     STR_26:
   417                           
   418                           ; BSR set to: 15
   419  00FFB5  46                 	db	70	;'F'
   420  00FFB6  65                 	db	101	;'e'
   421  00FFB7  63                 	db	99	;'c'
   422  00FFB8  68                 	db	104	;'h'
   423  00FFB9  61                 	db	97	;'a'
   424  00FFBA  00                 	db	0
   425  00FFBB                     STR_19:
   426                           
   427                           ; BSR set to: 15
   428  00FFBB  52                 	db	82	;'R'
   429  00FFBC  65                 	db	101	;'e'
   430  00FFBD  6C                 	db	108	;'l'
   431  00FFBE  6F                 	db	111	;'o'
   432  00FFBF  6A                 	db	106	;'j'
   433  00FFC0  00                 	db	0
   434  00FFC1                     STR_45:
   435                           
   436                           ; BSR set to: 15
   437  00FFC1  52                 	db	82	;'R'
   438  00FFC2  65                 	db	101	;'e'
   439  00FFC3  73                 	db	115	;'s'
   440  00FFC4  65                 	db	101	;'e'
   441  00FFC5  74                 	db	116	;'t'
   442  00FFC6  00                 	db	0
   443  00FFC7                     STR_48:
   444                           
   445                           ; BSR set to: 15
   446  00FFC7  31                 	db	49	;'1'
   447  00FFC8  32                 	db	50	;'2'
   448  00FFC9  33                 	db	51	;'3'
   449  00FFCA  34                 	db	52	;'4'
   450  00FFCB  00                 	db	0
   451  00FFCC                     STR_27:
   452                           
   453                           ; BSR set to: 15
   454  00FFCC  48                 	db	72	;'H'
   455  00FFCD  6F                 	db	111	;'o'
   456  00FFCE  72                 	db	114	;'r'
   457  00FFCF  61                 	db	97	;'a'
   458  00FFD0  00                 	db	0
   459  00FFD1                     STR_38:
   460                           
   461                           ; BSR set to: 15
   462  00FFD1  42                 	db	66	;'B'
   463  00FFD2  61                 	db	97	;'a'
   464  00FFD3  6A                 	db	106	;'j'
   465  00FFD4  6F                 	db	111	;'o'
   466  00FFD5  00                 	db	0
   467  00FFD6                     STR_36:
   468                           
   469                           ; BSR set to: 15
   470  00FFD6  54                 	db	84	;'T'
   471  00FFD7  6F                 	db	111	;'o'
   472  00FFD8  6E                 	db	110	;'n'
   473  00FFD9  6F                 	db	111	;'o'
   474  00FFDA  00                 	db	0
   475  00FFDB                     STR_39:
   476                           
   477                           ; BSR set to: 15
   478  00FFDB  41                 	db	65	;'A'
   479  00FFDC  6C                 	db	108	;'l'
   480  00FFDD  74                 	db	116	;'t'
   481  00FFDE  6F                 	db	111	;'o'
   482  00FFDF  00                 	db	0
   483  00FFE0                     STR_57:
   484                           
   485                           ; BSR set to: 15
   486  00FFE0  25                 	db	37
   487  00FFE1  30                 	db	48	;'0'
   488  00FFE2  31                 	db	49	;'1'
   489  00FFE3  75                 	db	117	;'u'
   490  00FFE4  00                 	db	0
   491  00FFE5                     STR_1:
   492                           
   493                           ; BSR set to: 15
   494  00FFE5  58                 	db	88	;'X'
   495  00FFE6  32                 	db	50	;'2'
   496  00FFE7  38                 	db	56	;'8'
   497  00FFE8  00                 	db	0
   498  00FFE9                     STR_20:
   499                           
   500                           ; BSR set to: 15
   501  00FFE9  50                 	db	80	;'P'
   502  00FFEA  69                 	db	105	;'i'
   503  00FFEB  6E                 	db	110	;'n'
   504  00FFEC  00                 	db	0
   505  00FFED                     STR_23:
   506                           
   507                           ; BSR set to: 15
   508  00FFED  53                 	db	83	;'S'
   509  00FFEE  69                 	db	105	;'i'
   510  00FFEF  00                 	db	0
   511  00FFF0                     STR_24:
   512                           
   513                           ; BSR set to: 15
   514  00FFF0  4E                 	db	78	;'N'
   515  00FFF1  6F                 	db	111	;'o'
   516  00FFF2  00                 	db	0
   517  00FFF3                     STR_58:
   518                           
   519                           ; BSR set to: 15
   520  00FFF3  2A                 	db	42
   521  00FFF4  00                 	db	0
   522  00FFF5                     STR_4:
   523                           
   524                           ; BSR set to: 15
   525  00FFF5  3E                 	db	62	;'>'
   526  00FFF6  00                 	db	0
   527  0000                     
   528                           ; #config settings
   529  00FFF7  00                 	db	0	; dummy byte at the end
   530  0000                     
   531                           	psect	nvCOMRAM
   532  000058                     __pnvCOMRAM:
   533                           	opt stack 0
   534  000058                     _anio_d:
   535                           	opt stack 0
   536  000058                     	ds	1
   537  000059                     _fecha_d:
   538                           	opt stack 0
   539  000059                     	ds	1
   540  00005A                     _hora_d:
   541                           	opt stack 0
   542  00005A                     	ds	1
   543  00005B                     _mes_d:
   544                           	opt stack 0
   545  00005B                     	ds	1
   546  00005C                     _minuto_d:
   547                           	opt stack 0
   548  00005C                     	ds	1
   549  00005D                     _segundo_d:
   550                           	opt stack 0
   551  00005D                     	ds	1
   552  00005E                     _segundo_u:
   553                           	opt stack 0
   554  00005E                     	ds	1
   555                           
   556                           	psect	nvBANK0
   557  0000A4                     __pnvBANK0:
   558                           	opt stack 0
   559  0000A4                     _anio_u:
   560                           	opt stack 0
   561  0000A4                     	ds	1
   562  0000A5                     _dia_semana:
   563                           	opt stack 0
   564  0000A5                     	ds	1
   565  0000A6                     _fecha_u:
   566                           	opt stack 0
   567  0000A6                     	ds	1
   568  0000A7                     _hora_u:
   569                           	opt stack 0
   570  0000A7                     	ds	1
   571  0000A8                     _mes_u:
   572                           	opt stack 0
   573  0000A8                     	ds	1
   574  0000A9                     _minuto_u:
   575                           	opt stack 0
   576  0000A9                     	ds	1
   577  0000                     _ANCON0	set	3912
   578  0000                     _ANCON1	set	3913
   579  0000                     _RTCCFG	set	3903
   580  0000                     _RTCCFGbits	set	3903
   581  0000                     _ADCON0	set	4034
   582  0000                     _ADCON1	set	4033
   583  0000                     _ALRMCFGbits	set	3985
   584  0000                     _EECON2	set	4007
   585  0000                     _INTCONbits	set	4082
   586  0000                     _LATAbits	set	3977
   587  0000                     _LATBbits	set	3978
   588  0000                     _LATCbits	set	3979
   589  0000                     _OSCCONbits	set	4051
   590  0000                     _OSCTUNEbits	set	3995
   591  0000                     _PIE3bits	set	4003
   592  0000                     _PORTAbits	set	3968
   593  0000                     _PORTCbits	set	3970
   594  0000                     _RTCVALH	set	3993
   595  0000                     _RTCVALL	set	3992
   596  0000                     _T1CONbits	set	4045
   597  0000                     _TRISA	set	3986
   598  0000                     _TRISB	set	3987
   599  0000                     _TRISBbits	set	3987
   600  0000                     _TRISC	set	3988
   601                           
   602                           	psect	cinit
   603  00E6B2                     __pcinit:
   604                           	opt stack 0
   605  00E6B2                     start_initialization:
   606                           	opt stack 0
   607  00E6B2                     __initialization:
   608                           	opt stack 0
   609                           
   610                           ; Clear objects allocated to BANK0 (68 bytes)
   611  00E6B2  EE00  F060         	lfsr	0,__pbssBANK0
   612  00E6B6  0E44               	movlw	68
   613  00E6B8                     clear_0:
   614  00E6B8  6AEE               	clrf	postinc0,c
   615  00E6BA  06E8               	decf	wreg,f,c
   616  00E6BC  E1FD               	bnz	clear_0
   617                           
   618                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   619  00E6BE  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   620                           
   621                           ; Clear objects allocated to COMRAM (37 bytes)
   622  00E6C0  EE00  F029         	lfsr	0,__pbssCOMRAM
   623  00E6C4  0E25               	movlw	37
   624  00E6C6                     clear_1:
   625  00E6C6  6AEE               	clrf	postinc0,c
   626  00E6C8  06E8               	decf	wreg,f,c
   627  00E6CA  E1FD               	bnz	clear_1
   628                           
   629                           ; Initialize objects allocated to COMRAM (10 bytes)
   630                           ; load TBLPTR registers with __pidataCOMRAM
   631  00E6CC  0E10               	movlw	low __pidataCOMRAM
   632  00E6CE  6EF6               	movwf	tblptrl,c
   633  00E6D0  0EE1               	movlw	high __pidataCOMRAM
   634  00E6D2  6EF7               	movwf	tblptrh,c
   635  00E6D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   636  00E6D6  6EF8               	movwf	tblptru,c
   637  00E6D8  EE00  F04E         	lfsr	0,__pdataCOMRAM
   638  00E6DC  EE10 F00A          	lfsr	1,10
   639  00E6E0                     copy_data0:
   640  00E6E0  0009               	tblrd		*+
   641  00E6E2  CFF5 FFEE          	movff	tablat,postinc0
   642  00E6E6  50E5               	movf	postdec1,w,c
   643  00E6E8  50E1               	movf	fsr1l,w,c
   644  00E6EA  E1FA               	bnz	copy_data0
   645  00E6EC                     end_of_initialization:
   646                           	opt stack 0
   647  00E6EC                     __end_of__initialization:
   648                           	opt stack 0
   649  00E6EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   650  00E6EE  6EF8               	movwf	tblptru,c
   651  00E6F0  0100               	movlb	0
   652  00E6F2  EF38  F073         	goto	_main	;jump to C main() function
   653                           tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           postinc0	equ	0xFEE
   658                           wreg	equ	0xFE8
   659                           postdec1	equ	0xFE5
   660                           fsr1l	equ	0xFE1
   661                           
   662                           	psect	bitbssCOMRAM
   663  0002F8                     __pbitbssCOMRAM:
   664                           	opt stack 0
   665  0002F8                     _flag:
   666                           	opt stack 0
   667  0002F8                     	ds	1
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           postdec1	equ	0xFE5
   675                           fsr1l	equ	0xFE1
   676                           
   677                           	psect	bssCOMRAM
   678  000029                     __pbssCOMRAM:
   679                           	opt stack 0
   680  000029                     _activity:
   681                           	opt stack 0
   682  000029                     	ds	2
   683  00002B                     _alarm_tone:
   684                           	opt stack 0
   685  00002B                     	ds	2
   686  00002D                     _alarm_volume:
   687                           	opt stack 0
   688  00002D                     	ds	2
   689  00002F                     _config_widget:
   690                           	opt stack 0
   691  00002F                     	ds	2
   692  000031                     _config_widget_time:
   693                           	opt stack 0
   694  000031                     	ds	2
   695  000033                     _cursor_horizontal_position:
   696                           	opt stack 0
   697  000033                     	ds	2
   698  000035                     _home_callback:
   699                           	opt stack 0
   700  000035                     	ds	2
   701  000037                     _home_callback_delay:
   702                           	opt stack 0
   703  000037                     	ds	2
   704  000039                     _i:
   705                           	opt stack 0
   706  000039                     	ds	2
   707  00003B                     _menu_selected:
   708                           	opt stack 0
   709  00003B                     	ds	2
   710  00003D                     _minuto:
   711                           	opt stack 0
   712  00003D                     	ds	2
   713  00003F                     _segundo:
   714                           	opt stack 0
   715  00003F                     	ds	2
   716  000041                     _state:
   717                           	opt stack 0
   718  000041                     	ds	2
   719  000043                     _submenu_selected:
   720                           	opt stack 0
   721  000043                     	ds	2
   722  000045                     _key:
   723                           	opt stack 0
   724  000045                     	ds	1
   725  000046                     _RtccDate:
   726                           	opt stack 0
   727  000046                     	ds	4
   728  00004A                     _RtccTime:
   729                           	opt stack 0
   730  00004A                     	ds	4
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           postdec1	equ	0xFE5
   738                           fsr1l	equ	0xFE1
   739                           
   740                           	psect	dataCOMRAM
   741  00004E                     __pdataCOMRAM:
   742                           	opt stack 0
   743  00004E                     _anio:
   744                           	opt stack 0
   745  00004E                     	ds	2
   746  000050                     _dia:
   747                           	opt stack 0
   748  000050                     	ds	2
   749  000052                     _diasem:
   750                           	opt stack 0
   751  000052                     	ds	2
   752  000054                     _hora:
   753                           	opt stack 0
   754  000054                     	ds	2
   755  000056                     _mes:
   756                           	opt stack 0
   757  000056                     	ds	2
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           postdec1	equ	0xFE5
   765                           fsr1l	equ	0xFE1
   766                           
   767                           	psect	bssBANK0
   768  000060                     __pbssBANK0:
   769                           	opt stack 0
   770  000060                     _RtccAlrmTimeDate:
   771                           	opt stack 0
   772  000060                     	ds	8
   773  000068                     _RtccTimeDate:
   774                           	opt stack 0
   775  000068                     	ds	8
   776  000070                     _Rtcc_read_TimeDate:
   777                           	opt stack 0
   778  000070                     	ds	8
   779  000078                     _RtccTimeVal:
   780                           	opt stack 0
   781  000078                     	ds	4
   782  00007C                     _a:
   783                           	opt stack 0
   784  00007C                     	ds	2
   785  00007E                     _b:
   786                           	opt stack 0
   787  00007E                     	ds	2
   788  000080                     _c:
   789                           	opt stack 0
   790  000080                     	ds	2
   791  000082                     _j:
   792                           	opt stack 0
   793  000082                     	ds	2
   794  000084                     _k:
   795                           	opt stack 0
   796  000084                     	ds	2
   797  000086                     _buffer1:
   798                           	opt stack 0
   799  000086                     	ds	20
   800  00009A                     _pin:
   801                           	opt stack 0
   802  00009A                     	ds	5
   803  00009F                     _pin_input:
   804                           	opt stack 0
   805  00009F                     	ds	5
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           postdec1	equ	0xFE5
   813                           fsr1l	equ	0xFE1
   814                           
   815                           	psect	cstackCOMRAM
   816  000001                     __pcstackCOMRAM:
   817                           	opt stack 0
   818  000001                     ??_isdigit:
   819  000001                     ??_lcd_send_nibble:
   820  000001                     ?_strcmp:
   821                           	opt stack 0
   822  000001                     ?___wmul:
   823                           	opt stack 0
   824  000001                     ?___awdiv:
   825                           	opt stack 0
   826  000001                     ?___lwdiv:
   827                           	opt stack 0
   828  000001                     Delay100TCYx@unit:
   829                           	opt stack 0
   830  000001                     Delay1KTCYx@unit:
   831                           	opt stack 0
   832  000001                     RtccReadDate@pDt:
   833                           	opt stack 0
   834  000001                     RtccReadTime@pTm:
   835                           	opt stack 0
   836  000001                     RtccWriteDate@pDt:
   837                           	opt stack 0
   838  000001                     RtccWriteTime@pTm:
   839                           	opt stack 0
   840  000001                     ___wmul@multiplier:
   841                           	opt stack 0
   842  000001                     ___awdiv@dividend:
   843                           	opt stack 0
   844  000001                     ___lwdiv@dividend:
   845                           	opt stack 0
   846  000001                     strcat@to:
   847                           	opt stack 0
   848  000001                     strcmp@s1:
   849                           	opt stack 0
   850  000001                     strcpy@to:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x0
   854  000001                     	ds	1
   855  000002                     lcd_send_nibble@nibble:
   856                           	opt stack 0
   857  000002                     _isdigit$2298:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x1
   861  000002                     	ds	1
   862  000003                     lcd_send_byte@n:
   863                           	opt stack 0
   864  000003                     RtccWriteDate@di:
   865                           	opt stack 0
   866  000003                     RtccWriteTime@di:
   867                           	opt stack 0
   868  000003                     isdigit@c:
   869                           	opt stack 0
   870  000003                     ___wmul@multiplicand:
   871                           	opt stack 0
   872  000003                     ___awdiv@divisor:
   873                           	opt stack 0
   874  000003                     ___lwdiv@divisor:
   875                           	opt stack 0
   876  000003                     strcat@from:
   877                           	opt stack 0
   878  000003                     strcmp@s2:
   879                           	opt stack 0
   880  000003                     strcpy@from:
   881                           	opt stack 0
   882  000003                     RtccReadDate@rTD1:
   883                           	opt stack 0
   884  000003                     RtccReadTime@rTD1:
   885                           	opt stack 0
   886                           
   887                           ; 8 bytes @ 0x2
   888  000003                     	ds	1
   889  000004                     lcd_send_byte@address:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0x3
   893  000004                     	ds	1
   894  000005                     ??_strcmp:
   895  000005                     lcd_init@i:
   896                           	opt stack 0
   897  000005                     lcd_gotoxy@y:
   898                           	opt stack 0
   899  000005                     lcd_comand@d:
   900                           	opt stack 0
   901  000005                     RtccWriteDate@wasOn:
   902                           	opt stack 0
   903  000005                     RtccWriteTime@wasOn:
   904                           	opt stack 0
   905  000005                     ___awdiv@counter:
   906                           	opt stack 0
   907  000005                     ___wmul@product:
   908                           	opt stack 0
   909  000005                     ___lwdiv@quotient:
   910                           	opt stack 0
   911  000005                     strcat@cp:
   912                           	opt stack 0
   913  000005                     strcpy@cp:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x4
   917  000005                     	ds	1
   918  000006                     lcd_gotoxy@x:
   919                           	opt stack 0
   920  000006                     RtccWriteDate@wasAlrm:
   921                           	opt stack 0
   922  000006                     RtccWriteTime@wasAlrm:
   923                           	opt stack 0
   924  000006                     ___awdiv@sign:
   925                           	opt stack 0
   926  000006                     strcmp@r:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x5
   930  000006                     	ds	1
   931  000007                     lcd_gotoxy@address:
   932                           	opt stack 0
   933  000007                     RtccWriteTime@wasWrEn:
   934                           	opt stack 0
   935  000007                     ___lwdiv@counter:
   936                           	opt stack 0
   937  000007                     RtccWriteDate@tempYear:
   938                           	opt stack 0
   939  000007                     ___awdiv@quotient:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x6
   943  000007                     	ds	1
   944  000008                     ??_cursor_displacement:
   945  000008                     ?___lwmod:
   946                           	opt stack 0
   947  000008                     lcd_putc@c:
   948                           	opt stack 0
   949  000008                     RtccWriteTime@tempMinSec:
   950                           	opt stack 0
   951  000008                     ___lwmod@dividend:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x7
   955  000008                     	ds	1
   956  000009                     RtccWriteDate@wasWrEn:
   957                           	opt stack 0
   958  000009                     lcd_putrs@ptr:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x8
   962  000009                     	ds	1
   963  00000A                     RtccWriteDate@tempDayMonth:
   964                           	opt stack 0
   965  00000A                     RtccWriteTime@tempHourWDay:
   966                           	opt stack 0
   967  00000A                     ___lwmod@divisor:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x9
   971  00000A                     	ds	1
   972  00000B                     lcd_write@column:
   973                           	opt stack 0
   974  00000B                     RtccReadDate@rTD0:
   975                           	opt stack 0
   976  00000B                     RtccReadTime@rTD0:
   977                           	opt stack 0
   978                           
   979                           ; 8 bytes @ 0xA
   980  00000B                     	ds	1
   981  00000C                     ___lwmod@counter:
   982                           	opt stack 0
   983  00000C                     RtccWriteDate@tempHourWDay:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0xB
   987  00000C                     	ds	1
   988  00000D                     ?_sprintf:
   989                           	opt stack 0
   990  00000D                     lcd_write@row:
   991                           	opt stack 0
   992  00000D                     sprintf@sp:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0xC
   996  00000D                     	ds	1
   997  00000E                     ??_date_set:
   998  00000E                     ??_time_set:
   999  00000E                     
  1000                           ; 0 bytes @ 0xD
  1001  00000E                     	ds	1
  1002  00000F                     lcd_write@string:
  1003                           	opt stack 0
  1004  00000F                     sprintf@f:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0xE
  1008  00000F                     	ds	2
  1009  000011                     ??_menu_selector:
  1010  000011                     ??_submenu_selector:
  1011  000011                     ??_button_B_menu:
  1012  000011                     ??_button_B_submenu_activation:
  1013  000011                     ??_button_B_submenu_pin_config:
  1014  000011                     ??_button_B_submenu_siren_config:
  1015  000011                     ??_button_B_submenu_siren_volume:
  1016  000011                     ??_button_B_submenu_siren_tone:
  1017  000011                     
  1018                           ; 0 bytes @ 0x10
  1019  000011                     	ds	2
  1020  000013                     ??_button_A:
  1021                           
  1022                           ; 0 bytes @ 0x12
  1023  000013                     	ds	4
  1024  000017                     ??_sprintf:
  1025                           
  1026                           ; 0 bytes @ 0x16
  1027  000017                     	ds	4
  1028  00001B                     sprintf@ap:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x1A
  1032  00001B                     	ds	2
  1033  00001D                     sprintf@flag:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x1C
  1037  00001D                     	ds	1
  1038  00001E                     sprintf@val:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x1D
  1042  00001E                     	ds	2
  1043  000020                     sprintf@prec:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0x1F
  1047  000020                     	ds	1
  1048  000021                     sprintf@width:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x20
  1052  000021                     	ds	2
  1053  000023                     sprintf@c:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x22
  1057  000023                     	ds	1
  1058  000024                     ??_home_config_refresh:
  1059  000024                     ??_button_B_submenu_date_and_time_config:
  1060  000024                     
  1061                           ; 0 bytes @ 0x23
  1062  000024                     	ds	2
  1063  000026                     ??_button_B:
  1064                           
  1065                           ; 0 bytes @ 0x25
  1066  000026                     	ds	2
  1067  000028                     ??_keyboard_control:
  1068                           
  1069                           ; 0 bytes @ 0x27
  1070  000028                     	ds	1
  1071  000029                     tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           
  1080                           ; 0 bytes @ 0x28
  1081 ;;
  1082 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1083 ;;
  1084 ;; *************** function _main *****************
  1085 ;; Defined at:
  1086 ;;		line 908 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  2  519[None  ] int 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels required when called:   11
  1106 ;; This function calls:
  1107 ;;		_Read_RTC
  1108 ;;		_activity_home
  1109 ;;		_check_home_callback
  1110 ;;		_home_clock_refresh
  1111 ;;		_home_config_refresh
  1112 ;;		_keyboard_control
  1113 ;;		_setup
  1114 ;; This function is called by:
  1115 ;;		Startup code after reset
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text0
  1120  00E670                     __ptext0:
  1121                           	opt stack 0
  1122  00E670                     _main:
  1123                           	opt stack 20
  1124                           
  1125                           ;main.c: 910: setup();
  1126                           
  1127                           ; BSR set to: 15
  1128                           ;incstack = 0
  1129  00E670  EC6E  F078         	call	_setup	;wreg free
  1130                           
  1131                           ;main.c: 911: activity_home();
  1132  00E674  EC24  F071         	call	_activity_home	;wreg free
  1133  00E678  D000               	goto	l4353
  1134  00E67A                     l4353:
  1135                           
  1136                           ;main.c: 915: check_home_callback();
  1137  00E67A  ECB0  F071         	call	_check_home_callback	;wreg free
  1138                           
  1139                           ;main.c: 916: Read_RTC();
  1140  00E67E  EC37  F07B         	call	_Read_RTC	;wreg free
  1141                           
  1142                           ;main.c: 917: keyboard_control();
  1143  00E682  ECDB  F07C         	call	_keyboard_control	;wreg free
  1144                           
  1145                           ;main.c: 919: if(activity == 0){
  1146  00E686  5029               	movf	_activity,w,c
  1147  00E688  102A               	iorwf	_activity+1,w,c
  1148  00E68A  A4D8               	btfss	status,2,c
  1149  00E68C  D005               	goto	l4363
  1150                           
  1151                           ;main.c: 920: home_clock_refresh();
  1152  00E68E  ECB8  F079         	call	_home_clock_refresh	;wreg free
  1153                           
  1154                           ;main.c: 921: home_config_refresh();
  1155  00E692  ECE4  F07A         	call	_home_config_refresh	;wreg free
  1156  00E696  D000               	goto	l4363
  1157  00E698                     l4363:
  1158                           
  1159                           ;main.c: 922: }
  1160                           ;main.c: 924: if (state == 2){
  1161  00E698  0E02               	movlw	2
  1162  00E69A  1841               	xorwf	_state,w,c
  1163  00E69C  1042               	iorwf	_state+1,w,c
  1164  00E69E  A4D8               	btfss	status,2,c
  1165  00E6A0  D003               	goto	l522
  1166                           
  1167                           ;main.c: 925: LATCbits.LATC7 = !LATCbits.LATC7;;
  1168  00E6A2  7E8B               	btg	3979,7,c	;volatile
  1169                           
  1170                           ;main.c: 926: LATBbits.LATB0 = !LATBbits.LATB0;;
  1171  00E6A4  708A               	btg	3978,0,c	;volatile
  1172                           
  1173                           ;main.c: 927: } else {
  1174  00E6A6  D7E9               	goto	l4353
  1175  00E6A8                     l522:
  1176                           
  1177                           ;main.c: 928: LATCbits.LATC7 = 0;;
  1178  00E6A8  9E8B               	bcf	3979,7,c	;volatile
  1179                           
  1180                           ;main.c: 929: LATBbits.LATB0 = 0;;
  1181  00E6AA  908A               	bcf	3978,0,c	;volatile
  1182  00E6AC  D7E6               	goto	l4353
  1183                           
  1184                           ;main.c: 930: }
  1185                           ;main.c: 934: }
  1186                           ;main.c: 936: return 0;
  1187                           ;	Return value of _main is never used
  1188  00E6AE  EF00  F000         	goto	start
  1189  00E6B2                     __end_of_main:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           postinc0	equ	0xFEE
  1196                           wreg	equ	0xFE8
  1197                           postdec1	equ	0xFE5
  1198                           fsr1l	equ	0xFE1
  1199                           status	equ	0xFD8
  1200                           
  1201 ;; *************** function _setup *****************
  1202 ;; Defined at:
  1203 ;;		line 869 in file "main.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;		None               void
  1210 ;; Registers used:
  1211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    3
  1224 ;; This function calls:
  1225 ;;		_Write_RTC
  1226 ;;		_lcd_comand
  1227 ;;		_lcd_init
  1228 ;;		_pin_reset
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text1
  1235  00F0DC                     __ptext1:
  1236                           	opt stack 0
  1237  00F0DC                     _setup:
  1238                           	opt stack 27
  1239                           
  1240                           ;main.c: 871: OSCTUNEbits.INTSRC=1;
  1241                           
  1242                           ;incstack = 0
  1243  00F0DC  8E9B               	bsf	3995,7,c	;volatile
  1244                           
  1245                           ;main.c: 872: OSCTUNEbits.PLLEN=0;
  1246  00F0DE  9C9B               	bcf	3995,6,c	;volatile
  1247                           
  1248                           ;main.c: 873: OSCCONbits.IRCF0=1;
  1249  00F0E0  88D3               	bsf	4051,4,c	;volatile
  1250                           
  1251                           ;main.c: 874: OSCCONbits.IRCF1=1;
  1252  00F0E2  8AD3               	bsf	4051,5,c	;volatile
  1253                           
  1254                           ;main.c: 875: OSCCONbits.IRCF2=1;
  1255  00F0E4  8CD3               	bsf	4051,6,c	;volatile
  1256                           
  1257                           ;main.c: 876: OSCCONbits.SCS0=0;
  1258  00F0E6  90D3               	bcf	4051,0,c	;volatile
  1259                           
  1260                           ;main.c: 877: OSCCONbits.SCS1=0;
  1261  00F0E8  92D3               	bcf	4051,1,c	;volatile
  1262                           
  1263                           ;main.c: 878: TRISA = 0b11110000;
  1264  00F0EA  0EF0               	movlw	240
  1265  00F0EC  6E92               	movwf	3986,c	;volatile
  1266                           
  1267                           ;main.c: 879: TRISB = 0;
  1268  00F0EE  0E00               	movlw	0
  1269  00F0F0  6E93               	movwf	3987,c	;volatile
  1270                           
  1271                           ;main.c: 880: TRISC = 0b00000111;
  1272  00F0F2  0E07               	movlw	7
  1273  00F0F4  6E94               	movwf	3988,c	;volatile
  1274                           
  1275                           ;main.c: 884: ANCON0=0b11111111;
  1276  00F0F6  010F               	movlb	15	; () banked
  1277  00F0F8  6948               	setf	72,b	;volatile
  1278                           
  1279                           ; BSR set to: 15
  1280                           ;main.c: 886: ANCON1=0b11111111;
  1281  00F0FA  010F               	movlb	15	; () banked
  1282  00F0FC  6949               	setf	73,b	;volatile
  1283                           
  1284                           ;main.c: 887: ADCON0=0b00101101;
  1285  00F0FE  0E2D               	movlw	45
  1286  00F100  6EC2               	movwf	4034,c	;volatile
  1287                           
  1288                           ;main.c: 888: ADCON1=0b00010000;
  1289  00F102  0E10               	movlw	16
  1290  00F104  6EC1               	movwf	4033,c	;volatile
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;main.c: 889: RTCCFGbits.RTCEN=1;
  1294  00F106  010F               	movlb	15	; () banked
  1295  00F108  8F3F               	bsf	63,7,b	;volatile
  1296                           
  1297                           ; BSR set to: 15
  1298                           ;main.c: 890: RTCCFGbits.RTCWREN=1;
  1299  00F10A  010F               	movlb	15	; () banked
  1300  00F10C  8B3F               	bsf	63,5,b	;volatile
  1301                           
  1302                           ; BSR set to: 15
  1303                           ;main.c: 891: T1CONbits.T1OSCEN=1;
  1304  00F10E  86CD               	bsf	4045,3,c	;volatile
  1305                           
  1306                           ; BSR set to: 15
  1307                           ;main.c: 892: Write_RTC();
  1308  00F110  EC86  F07D         	call	_Write_RTC	;wreg free
  1309                           
  1310                           ;main.c: 893: lcd_init();
  1311  00F114  EC2E  F078         	call	_lcd_init	;wreg free
  1312                           
  1313                           ;main.c: 894: lcd_comand(0b00001100);
  1314  00F118  0E0C               	movlw	12
  1315  00F11A  EC8D  F070         	call	_lcd_comand
  1316                           
  1317                           ;main.c: 897: home_callback_delay = 50;
  1318  00F11E  0E00               	movlw	0
  1319  00F120  6E38               	movwf	_home_callback_delay+1,c
  1320  00F122  0E32               	movlw	50
  1321  00F124  6E37               	movwf	_home_callback_delay,c
  1322                           
  1323                           ;main.c: 898: config_widget = 0;
  1324  00F126  0E00               	movlw	0
  1325  00F128  6E30               	movwf	_config_widget+1,c
  1326  00F12A  0E00               	movlw	0
  1327  00F12C  6E2F               	movwf	_config_widget,c
  1328                           
  1329                           ;main.c: 899: menu_selected = 0;
  1330  00F12E  0E00               	movlw	0
  1331  00F130  6E3C               	movwf	_menu_selected+1,c
  1332  00F132  0E00               	movlw	0
  1333  00F134  6E3B               	movwf	_menu_selected,c
  1334                           
  1335                           ;main.c: 900: submenu_selected = 0;
  1336  00F136  0E00               	movlw	0
  1337  00F138  6E44               	movwf	_submenu_selected+1,c
  1338  00F13A  0E00               	movlw	0
  1339  00F13C  6E43               	movwf	_submenu_selected,c
  1340                           
  1341                           ;main.c: 901: cursor_horizontal_position = 1;
  1342  00F13E  0E00               	movlw	0
  1343  00F140  6E34               	movwf	_cursor_horizontal_position+1,c
  1344  00F142  0E01               	movlw	1
  1345  00F144  6E33               	movwf	_cursor_horizontal_position,c
  1346                           
  1347                           ;main.c: 902: alarm_volume = 0;
  1348  00F146  0E00               	movlw	0
  1349  00F148  6E2E               	movwf	_alarm_volume+1,c
  1350  00F14A  0E00               	movlw	0
  1351  00F14C  6E2D               	movwf	_alarm_volume,c
  1352                           
  1353                           ;main.c: 903: alarm_tone = 0;
  1354  00F14E  0E00               	movlw	0
  1355  00F150  6E2C               	movwf	_alarm_tone+1,c
  1356  00F152  0E00               	movlw	0
  1357  00F154  6E2B               	movwf	_alarm_tone,c
  1358                           
  1359                           ;main.c: 904: pin_reset();
  1360  00F156  ECAF  F070         	call	_pin_reset	;wreg free
  1361  00F15A  0012               	return		;funcret
  1362  00F15C                     __end_of_setup:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           postdec1	equ	0xFE5
  1371                           fsr1l	equ	0xFE1
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _keyboard_control *****************
  1375 ;; Defined at:
  1376 ;;		line 831 in file "main.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;		None               void
  1383 ;; Registers used:
  1384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;Total ram usage:        1 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:   10
  1397 ;; This function calls:
  1398 ;;		_button_A
  1399 ;;		_button_B
  1400 ;;		_button_C
  1401 ;;		_button_D
  1402 ;;		_button_asterisk
  1403 ;;		_button_hash
  1404 ;;		_button_number
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text2
  1411  00F9B6                     __ptext2:
  1412                           	opt stack 0
  1413  00F9B6                     _keyboard_control:
  1414                           	opt stack 20
  1415                           
  1416                           ;main.c: 833: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1417                           
  1418                           ;incstack = 0
  1419  00F9B6  8089               	bsf	3977,0,c	;volatile
  1420  00F9B8  9289               	bcf	3977,1,c	;volatile
  1421  00F9BA  9489               	bcf	3977,2,c	;volatile
  1422  00F9BC  9689               	bcf	3977,3,c	;volatile
  1423                           
  1424                           ;main.c: 834: {
  1425                           ;main.c: 835: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  1426  00F9BE  AA80               	btfss	3968,5,c	;volatile
  1427  00F9C0  D007               	goto	l450
  1428  00F9C2  0E01               	movlw	1
  1429  00F9C4  6E45               	movwf	_key,c
  1430  00F9C6  ECF0  F077         	call	_button_number	;wreg free
  1431  00F9CA  D000               	goto	l451
  1432  00F9CC                     l451:
  1433  00F9CC  BA80               	btfsc	3968,5,c	;volatile
  1434  00F9CE  D7FE               	goto	l451
  1435  00F9D0                     l450:
  1436                           
  1437                           ;main.c: 836: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  1438  00F9D0  AE80               	btfss	3968,7,c	;volatile
  1439  00F9D2  D007               	goto	l454
  1440  00F9D4  0E02               	movlw	2
  1441  00F9D6  6E45               	movwf	_key,c
  1442  00F9D8  ECF0  F077         	call	_button_number	;wreg free
  1443  00F9DC  D000               	goto	l455
  1444  00F9DE                     l455:
  1445  00F9DE  BE80               	btfsc	3968,7,c	;volatile
  1446  00F9E0  D7FE               	goto	l455
  1447  00F9E2                     l454:
  1448                           
  1449                           ;main.c: 837: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  1450  00F9E2  AC80               	btfss	3968,6,c	;volatile
  1451  00F9E4  D007               	goto	l458
  1452  00F9E6  0E03               	movlw	3
  1453  00F9E8  6E45               	movwf	_key,c
  1454  00F9EA  ECF0  F077         	call	_button_number	;wreg free
  1455  00F9EE  D000               	goto	l459
  1456  00F9F0                     l459:
  1457  00F9F0  BC80               	btfsc	3968,6,c	;volatile
  1458  00F9F2  D7FE               	goto	l459
  1459  00F9F4                     l458:
  1460                           
  1461                           ;main.c: 838: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  1462  00F9F4  A482               	btfss	3970,2,c	;volatile
  1463  00F9F6  D007               	goto	l462
  1464  00F9F8  0E0B               	movlw	11
  1465  00F9FA  6E45               	movwf	_key,c
  1466  00F9FC  EC79  F074         	call	_button_A	;wreg free
  1467  00FA00  D000               	goto	l463
  1468  00FA02                     l463:
  1469  00FA02  B482               	btfsc	3970,2,c	;volatile
  1470  00FA04  D7FE               	goto	l463
  1471  00FA06                     l462:
  1472                           
  1473                           ;main.c: 839: }
  1474                           ;main.c: 841: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1475  00FA06  9089               	bcf	3977,0,c	;volatile
  1476  00FA08  8289               	bsf	3977,1,c	;volatile
  1477  00FA0A  9489               	bcf	3977,2,c	;volatile
  1478  00FA0C  9689               	bcf	3977,3,c	;volatile
  1479                           
  1480                           ;main.c: 842: {
  1481                           ;main.c: 843: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  1482  00FA0E  AA80               	btfss	3968,5,c	;volatile
  1483  00FA10  D007               	goto	l466
  1484  00FA12  0E04               	movlw	4
  1485  00FA14  6E45               	movwf	_key,c
  1486  00FA16  ECF0  F077         	call	_button_number	;wreg free
  1487  00FA1A  D000               	goto	l467
  1488  00FA1C                     l467:
  1489  00FA1C  BA80               	btfsc	3968,5,c	;volatile
  1490  00FA1E  D7FE               	goto	l467
  1491  00FA20                     l466:
  1492                           
  1493                           ;main.c: 844: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  1494  00FA20  AE80               	btfss	3968,7,c	;volatile
  1495  00FA22  D007               	goto	l470
  1496  00FA24  0E05               	movlw	5
  1497  00FA26  6E45               	movwf	_key,c
  1498  00FA28  ECF0  F077         	call	_button_number	;wreg free
  1499  00FA2C  D000               	goto	l471
  1500  00FA2E                     l471:
  1501  00FA2E  BE80               	btfsc	3968,7,c	;volatile
  1502  00FA30  D7FE               	goto	l471
  1503  00FA32                     l470:
  1504                           
  1505                           ;main.c: 845: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  1506  00FA32  AC80               	btfss	3968,6,c	;volatile
  1507  00FA34  D007               	goto	l474
  1508  00FA36  0E06               	movlw	6
  1509  00FA38  6E45               	movwf	_key,c
  1510  00FA3A  ECF0  F077         	call	_button_number	;wreg free
  1511  00FA3E  D000               	goto	l475
  1512  00FA40                     l475:
  1513  00FA40  BC80               	btfsc	3968,6,c	;volatile
  1514  00FA42  D7FE               	goto	l475
  1515  00FA44                     l474:
  1516                           
  1517                           ;main.c: 846: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  1518  00FA44  A482               	btfss	3970,2,c	;volatile
  1519  00FA46  D007               	goto	l478
  1520  00FA48  0E0C               	movlw	12
  1521  00FA4A  6E45               	movwf	_key,c
  1522  00FA4C  ECB2  F077         	call	_button_B	;wreg free
  1523  00FA50  D000               	goto	l479
  1524  00FA52                     l479:
  1525  00FA52  B482               	btfsc	3970,2,c	;volatile
  1526  00FA54  D7FE               	goto	l479
  1527  00FA56                     l478:
  1528                           
  1529                           ;main.c: 847: }
  1530                           ;main.c: 849: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  1531  00FA56  9089               	bcf	3977,0,c	;volatile
  1532  00FA58  9289               	bcf	3977,1,c	;volatile
  1533  00FA5A  8489               	bsf	3977,2,c	;volatile
  1534  00FA5C  9689               	bcf	3977,3,c	;volatile
  1535                           
  1536                           ;main.c: 850: {
  1537                           ;main.c: 851: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  1538  00FA5E  AA80               	btfss	3968,5,c	;volatile
  1539  00FA60  D007               	goto	l482
  1540  00FA62  0E07               	movlw	7
  1541  00FA64  6E45               	movwf	_key,c
  1542  00FA66  ECF0  F077         	call	_button_number	;wreg free
  1543  00FA6A  D000               	goto	l483
  1544  00FA6C                     l483:
  1545  00FA6C  BA80               	btfsc	3968,5,c	;volatile
  1546  00FA6E  D7FE               	goto	l483
  1547  00FA70                     l482:
  1548                           
  1549                           ;main.c: 852: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  1550  00FA70  AE80               	btfss	3968,7,c	;volatile
  1551  00FA72  D007               	goto	l486
  1552  00FA74  0E08               	movlw	8
  1553  00FA76  6E45               	movwf	_key,c
  1554  00FA78  ECF0  F077         	call	_button_number	;wreg free
  1555  00FA7C  D000               	goto	l487
  1556  00FA7E                     l487:
  1557  00FA7E  BE80               	btfsc	3968,7,c	;volatile
  1558  00FA80  D7FE               	goto	l487
  1559  00FA82                     l486:
  1560                           
  1561                           ;main.c: 853: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  1562  00FA82  AC80               	btfss	3968,6,c	;volatile
  1563  00FA84  D007               	goto	l490
  1564  00FA86  0E09               	movlw	9
  1565  00FA88  6E45               	movwf	_key,c
  1566  00FA8A  ECF0  F077         	call	_button_number	;wreg free
  1567  00FA8E  D000               	goto	l491
  1568  00FA90                     l491:
  1569  00FA90  BC80               	btfsc	3968,6,c	;volatile
  1570  00FA92  D7FE               	goto	l491
  1571  00FA94                     l490:
  1572                           
  1573                           ;main.c: 854: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  1574  00FA94  A482               	btfss	3970,2,c	;volatile
  1575  00FA96  D007               	goto	l494
  1576  00FA98  0E0D               	movlw	13
  1577  00FA9A  6E45               	movwf	_key,c
  1578  00FA9C  EC39  F071         	call	_button_C	;wreg free
  1579  00FAA0  D000               	goto	l495
  1580  00FAA2                     l495:
  1581  00FAA2  B482               	btfsc	3970,2,c	;volatile
  1582  00FAA4  D7FE               	goto	l495
  1583  00FAA6                     l494:
  1584                           
  1585                           ;main.c: 855: }
  1586                           ;main.c: 857: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  1587  00FAA6  9089               	bcf	3977,0,c	;volatile
  1588  00FAA8  9289               	bcf	3977,1,c	;volatile
  1589  00FAAA  9489               	bcf	3977,2,c	;volatile
  1590  00FAAC  8689               	bsf	3977,3,c	;volatile
  1591                           
  1592                           ;main.c: 858: {
  1593                           ;main.c: 859: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  1594  00FAAE  AA80               	btfss	3968,5,c	;volatile
  1595  00FAB0  D007               	goto	l498
  1596  00FAB2  0E0E               	movlw	14
  1597  00FAB4  6E45               	movwf	_key,c
  1598  00FAB6  ECC6  F070         	call	_button_asterisk	;wreg free
  1599  00FABA  D000               	goto	l499
  1600  00FABC                     l499:
  1601  00FABC  BA80               	btfsc	3968,5,c	;volatile
  1602  00FABE  D7FE               	goto	l499
  1603  00FAC0                     l498:
  1604                           
  1605                           ;main.c: 860: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  1606  00FAC0  AE80               	btfss	3968,7,c	;volatile
  1607  00FAC2  D007               	goto	l502
  1608  00FAC4  0E00               	movlw	0
  1609  00FAC6  6E45               	movwf	_key,c
  1610  00FAC8  ECF0  F077         	call	_button_number	;wreg free
  1611  00FACC  D000               	goto	l503
  1612  00FACE                     l503:
  1613  00FACE  BE80               	btfsc	3968,7,c	;volatile
  1614  00FAD0  D7FE               	goto	l503
  1615  00FAD2                     l502:
  1616                           
  1617                           ;main.c: 861: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  1618  00FAD2  AC80               	btfss	3968,6,c	;volatile
  1619  00FAD4  D007               	goto	l506
  1620  00FAD6  0E0F               	movlw	15
  1621  00FAD8  6E45               	movwf	_key,c
  1622  00FADA  EC53  F072         	call	_button_hash	;wreg free
  1623  00FADE  D000               	goto	l507
  1624  00FAE0                     l507:
  1625  00FAE0  BC80               	btfsc	3968,6,c	;volatile
  1626  00FAE2  D7FE               	goto	l507
  1627  00FAE4                     l506:
  1628                           
  1629                           ;main.c: 862: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  1630  00FAE4  A482               	btfss	3970,2,c	;volatile
  1631  00FAE6  D009               	goto	l4301
  1632  00FAE8  0E10               	movlw	16
  1633  00FAEA  6E45               	movwf	_key,c
  1634  00FAEC  ECDF  F070         	call	_button_D	;wreg free
  1635  00FAF0  D000               	goto	l511
  1636  00FAF2                     l511:
  1637  00FAF2  A482               	btfss	3970,2,c	;volatile
  1638  00FAF4  D002               	goto	l4301
  1639  00FAF6  D7FD               	goto	l511
  1640  00FAF8  D000               	goto	l4301
  1641  00FAFA                     l4301:
  1642                           
  1643                           ;main.c: 863: }
  1644                           ;main.c: 865: _delay((unsigned long)((98)*(8000000/4000.0)));
  1645  00FAFA  0EFF               	movlw	255
  1646  00FAFC  6E28               	movwf	??_keyboard_control& (0+255),c
  1647  00FAFE  0E8A               	movlw	138
  1648  00FB00                     u2817:
  1649  00FB00  2EE8               	decfsz	wreg,f,c
  1650  00FB02  D7FE               	goto	u2817
  1651  00FB04  2E28               	decfsz	??_keyboard_control& (0+255),f,c
  1652  00FB06  D7FC               	goto	u2817
  1653  00FB08  D000               	nop2	
  1654  00FB0A  0012               	return		;funcret
  1655  00FB0C                     __end_of_keyboard_control:
  1656                           	opt stack 0
  1657                           tblptru	equ	0xFF8
  1658                           tblptrh	equ	0xFF7
  1659                           tblptrl	equ	0xFF6
  1660                           tablat	equ	0xFF5
  1661                           postinc0	equ	0xFEE
  1662                           wreg	equ	0xFE8
  1663                           postdec1	equ	0xFE5
  1664                           fsr1l	equ	0xFE1
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _button_number *****************
  1668 ;; Defined at:
  1669 ;;		line 809 in file "main.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    5
  1690 ;; This function calls:
  1691 ;;		_cursor_displacement
  1692 ;;		_date_set
  1693 ;;		_lcd_putrs
  1694 ;;		_reset_home_callback
  1695 ;;		_sprintf
  1696 ;;		_strcat
  1697 ;;		_time_set
  1698 ;; This function is called by:
  1699 ;;		_keyboard_control
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text3
  1704  00EFE0                     __ptext3:
  1705                           	opt stack 0
  1706  00EFE0                     _button_number:
  1707                           	opt stack 24
  1708                           
  1709                           ;main.c: 811: reset_home_callback();
  1710                           
  1711                           ;incstack = 0
  1712  00EFE0  EC83  F070         	call	_reset_home_callback	;wreg free
  1713                           
  1714                           ;main.c: 812: sprintf(buffer1, "%01u", key);
  1715  00EFE4  0E86               	movlw	low _buffer1
  1716  00EFE6  6E0D               	movwf	sprintf@sp,c
  1717  00EFE8  0E00               	movlw	high _buffer1
  1718  00EFEA  6E0E               	movwf	sprintf@sp+1,c
  1719  00EFEC  0EE0               	movlw	low STR_57
  1720  00EFEE  6E0F               	movwf	sprintf@f,c
  1721  00EFF0  0EFF               	movlw	high STR_57
  1722  00EFF2  6E10               	movwf	sprintf@f+1,c
  1723  00EFF4  C045  F011         	movff	_key,?_sprintf+4
  1724  00EFF8  6A12               	clrf	?_sprintf+5,c
  1725  00EFFA  EC34  F07E         	call	_sprintf	;wreg free
  1726                           
  1727                           ;main.c: 814: if(activity == 1 || activity == 6){
  1728  00EFFE  0429               	decf	_activity,w,c
  1729  00F000  102A               	iorwf	_activity+1,w,c
  1730  00F002  B4D8               	btfsc	status,2,c
  1731  00F004  D005               	goto	l4121
  1732  00F006  0E06               	movlw	6
  1733  00F008  1829               	xorwf	_activity,w,c
  1734  00F00A  102A               	iorwf	_activity+1,w,c
  1735  00F00C  A4D8               	btfss	status,2,c
  1736  00F00E  D011               	goto	l4125
  1737  00F010                     l4121:
  1738                           
  1739                           ;main.c: 815: lcd_putrs("*");
  1740  00F010  0EF3               	movlw	low STR_58
  1741  00F012  6E09               	movwf	lcd_putrs@ptr,c
  1742  00F014  0EFF               	movlw	high STR_58
  1743  00F016  6E0A               	movwf	lcd_putrs@ptr+1,c
  1744  00F018  ECB6  F075         	call	_lcd_putrs	;wreg free
  1745                           
  1746                           ;main.c: 816: strcat(pin_input, buffer1);
  1747  00F01C  0E9F               	movlw	low _pin_input
  1748  00F01E  6E01               	movwf	strcat@to,c
  1749  00F020  0E00               	movlw	high _pin_input
  1750  00F022  6E02               	movwf	strcat@to+1,c
  1751  00F024  0E86               	movlw	low _buffer1
  1752  00F026  6E03               	movwf	strcat@from,c
  1753  00F028  0E00               	movlw	high _buffer1
  1754  00F02A  6E04               	movwf	strcat@from+1,c
  1755  00F02C  EC09  F074         	call	_strcat	;wreg free
  1756                           
  1757                           ;main.c: 817: }
  1758  00F030  0012               	return	
  1759  00F032                     l4125:
  1760                           
  1761                           ;main.c: 818: else if (activity == 10){
  1762  00F032  0E0A               	movlw	10
  1763  00F034  1829               	xorwf	_activity,w,c
  1764  00F036  102A               	iorwf	_activity+1,w,c
  1765  00F038  A4D8               	btfss	status,2,c
  1766  00F03A  D005               	goto	l4131
  1767                           
  1768                           ;main.c: 819: date_set();
  1769  00F03C  EC4C  F07A         	call	_date_set	;wreg free
  1770                           
  1771                           ;main.c: 820: cursor_displacement();
  1772  00F040  EC14  F075         	call	_cursor_displacement	;wreg free
  1773                           
  1774                           ;main.c: 821: }
  1775  00F044  0012               	return	
  1776  00F046                     l4131:
  1777                           
  1778                           ;main.c: 822: else if (activity == 11){
  1779  00F046  0E0B               	movlw	11
  1780  00F048  1829               	xorwf	_activity,w,c
  1781  00F04A  102A               	iorwf	_activity+1,w,c
  1782  00F04C  A4D8               	btfss	status,2,c
  1783  00F04E  0012               	return	
  1784                           
  1785                           ;main.c: 823: time_set();
  1786  00F050  EC98  F07A         	call	_time_set	;wreg free
  1787                           
  1788                           ;main.c: 824: cursor_displacement();
  1789  00F054  EC14  F075         	call	_cursor_displacement	;wreg free
  1790  00F058  0012               	return	
  1791  00F05A  0012               	return		;funcret
  1792  00F05C                     __end_of_button_number:
  1793                           	opt stack 0
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           fsr1l	equ	0xFE1
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function _time_set *****************
  1805 ;; Defined at:
  1806 ;;		line 353 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:        2 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    3
  1827 ;; This function calls:
  1828 ;;		_Write_RTC
  1829 ;; This function is called by:
  1830 ;;		_button_number
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text4
  1835  00F530                     __ptext4:
  1836                           	opt stack 0
  1837  00F530                     _time_set:
  1838                           	opt stack 25
  1839                           
  1840                           ;main.c: 355: switch(cursor_horizontal_position){
  1841                           
  1842                           ;incstack = 0
  1843  00F530  D024               	goto	l3803
  1844  00F532                     l3789:
  1845                           
  1846                           ;main.c: 358: hora = key*10;
  1847  00F532  5045               	movf	_key,w,c
  1848  00F534  0D0A               	mullw	10
  1849  00F536  CFF3 F054          	movff	prodl,_hora
  1850  00F53A  CFF4 F055          	movff	prodh,_hora+1
  1851                           
  1852                           ;main.c: 359: break;
  1853  00F53E  D039               	goto	l3805
  1854  00F540                     l3791:
  1855                           
  1856                           ;main.c: 362: hora += key;
  1857  00F540  5045               	movf	_key,w,c
  1858  00F542  2654               	addwf	_hora,f,c
  1859  00F544  0E00               	movlw	0
  1860  00F546  2255               	addwfc	_hora+1,f,c
  1861                           
  1862                           ;main.c: 363: break;
  1863  00F548  D034               	goto	l3805
  1864  00F54A                     l3793:
  1865                           
  1866                           ;main.c: 366: minuto = key*10;
  1867  00F54A  5045               	movf	_key,w,c
  1868  00F54C  0D0A               	mullw	10
  1869  00F54E  CFF3 F03D          	movff	prodl,_minuto
  1870  00F552  CFF4 F03E          	movff	prodh,_minuto+1
  1871                           
  1872                           ;main.c: 367: break;
  1873  00F556  D02D               	goto	l3805
  1874  00F558                     l3795:
  1875                           
  1876                           ;main.c: 370: minuto += key;
  1877  00F558  5045               	movf	_key,w,c
  1878  00F55A  263D               	addwf	_minuto,f,c
  1879  00F55C  0E00               	movlw	0
  1880  00F55E  223E               	addwfc	_minuto+1,f,c
  1881                           
  1882                           ;main.c: 371: break;
  1883  00F560  D028               	goto	l3805
  1884  00F562                     l3797:
  1885                           
  1886                           ;main.c: 374: segundo = key * 10;
  1887  00F562  5045               	movf	_key,w,c
  1888  00F564  0D0A               	mullw	10
  1889  00F566  CFF3 F03F          	movff	prodl,_segundo
  1890  00F56A  CFF4 F040          	movff	prodh,_segundo+1
  1891                           
  1892                           ;main.c: 375: break;
  1893  00F56E  D021               	goto	l3805
  1894  00F570                     l3799:
  1895                           
  1896                           ;main.c: 378: segundo += key;
  1897  00F570  5045               	movf	_key,w,c
  1898  00F572  263F               	addwf	_segundo,f,c
  1899  00F574  0E00               	movlw	0
  1900  00F576  2240               	addwfc	_segundo+1,f,c
  1901                           
  1902                           ;main.c: 381: }
  1903                           
  1904                           ;main.c: 379: break;
  1905  00F578  D01C               	goto	l3805
  1906  00F57A                     l3803:
  1907  00F57A  C033  F00E         	movff	_cursor_horizontal_position,??_time_set
  1908  00F57E  C034  F00F         	movff	_cursor_horizontal_position+1,??_time_set+1
  1909                           
  1910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1911                           ; Switch size 1, requested type "space"
  1912                           ; Number of cases is 1, Range of values is 0 to 0
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; simple_byte            4     3 (average)
  1916                           ;	Chosen strategy is simple_byte
  1917  00F582  500F               	movf	??_time_set+1,w,c
  1918  00F584  0A00               	xorlw	0	; case 0
  1919  00F586  A4D8               	btfss	status,2,c
  1920  00F588  D014               	goto	l3805
  1921                           
  1922                           ; Switch size 1, requested type "space"
  1923                           ; Number of cases is 6, Range of values is 1 to 8
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte           19    10 (average)
  1927                           ;	Chosen strategy is simple_byte
  1928  00F58A  500E               	movf	??_time_set,w,c
  1929  00F58C  0A01               	xorlw	1	; case 1
  1930  00F58E  B4D8               	btfsc	status,2,c
  1931  00F590  D7D0               	goto	l3789
  1932  00F592  0A03               	xorlw	3	; case 2
  1933  00F594  B4D8               	btfsc	status,2,c
  1934  00F596  D7D4               	goto	l3791
  1935  00F598  0A06               	xorlw	6	; case 4
  1936  00F59A  B4D8               	btfsc	status,2,c
  1937  00F59C  D7D6               	goto	l3793
  1938  00F59E  0A01               	xorlw	1	; case 5
  1939  00F5A0  B4D8               	btfsc	status,2,c
  1940  00F5A2  D7DA               	goto	l3795
  1941  00F5A4  0A02               	xorlw	2	; case 7
  1942  00F5A6  B4D8               	btfsc	status,2,c
  1943  00F5A8  D7DC               	goto	l3797
  1944  00F5AA  0A0F               	xorlw	15	; case 8
  1945  00F5AC  B4D8               	btfsc	status,2,c
  1946  00F5AE  D7E0               	goto	l3799
  1947  00F5B0  D000               	goto	l3805
  1948  00F5B2                     l3805:
  1949                           
  1950                           ;main.c: 383: Write_RTC();
  1951  00F5B2  EC86  F07D         	call	_Write_RTC	;wreg free
  1952                           
  1953                           ;main.c: 384: _delay((unsigned long)((98)*(8000000/4000.0)));
  1954  00F5B6  0EFF               	movlw	255
  1955  00F5B8  6E0E               	movwf	??_time_set& (0+255),c
  1956  00F5BA  0E8A               	movlw	138
  1957  00F5BC                     u2827:
  1958  00F5BC  2EE8               	decfsz	wreg,f,c
  1959  00F5BE  D7FE               	goto	u2827
  1960  00F5C0  2E0E               	decfsz	??_time_set& (0+255),f,c
  1961  00F5C2  D7FC               	goto	u2827
  1962  00F5C4  D000               	nop2	
  1963  00F5C6  0012               	return		;funcret
  1964  00F5C8                     __end_of_time_set:
  1965                           	opt stack 0
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           prodh	equ	0xFF4
  1971                           prodl	equ	0xFF3
  1972                           postinc0	equ	0xFEE
  1973                           wreg	equ	0xFE8
  1974                           postdec1	equ	0xFE5
  1975                           fsr1l	equ	0xFE1
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _strcat *****************
  1979 ;; Defined at:
  1980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  to              2    0[COMRAM] PTR unsigned char 
  1983 ;;		 -> pin_input(5), 
  1984 ;;  from            2    2[COMRAM] PTR const unsigned char 
  1985 ;;		 -> buffer1(20), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  cp              2    4[COMRAM] PTR unsigned char 
  1988 ;;		 -> pin_input(5), 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2    0[COMRAM] PTR unsigned char 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;Total ram usage:        6 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_button_number
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text5
  2012  00E812                     __ptext5:
  2013                           	opt stack 0
  2014  00E812                     _strcat:
  2015                           	opt stack 28
  2016                           
  2017                           ;incstack = 0
  2018  00E812  C001  F005         	movff	strcat@to,strcat@cp
  2019  00E816  C002  F006         	movff	strcat@to+1,strcat@cp+1
  2020  00E81A  D003               	goto	l3939
  2021  00E81C                     l3937:
  2022  00E81C  4A05               	infsnz	strcat@cp,f,c
  2023  00E81E  2A06               	incf	strcat@cp+1,f,c
  2024  00E820  D000               	goto	l3939
  2025  00E822                     l3939:
  2026  00E822  C005  FFD9         	movff	strcat@cp,fsr2l
  2027  00E826  C006  FFDA         	movff	strcat@cp+1,fsr2h
  2028  00E82A  50DF               	movf	indf2,w,c
  2029  00E82C  B4D8               	btfsc	status,2,c
  2030  00E82E  D007               	goto	l3943
  2031  00E830  D7F5               	goto	l3937
  2032  00E832  D005               	goto	l3943
  2033  00E834                     l3941:
  2034  00E834  4A05               	infsnz	strcat@cp,f,c
  2035  00E836  2A06               	incf	strcat@cp+1,f,c
  2036  00E838  4A03               	infsnz	strcat@from,f,c
  2037  00E83A  2A04               	incf	strcat@from+1,f,c
  2038  00E83C  D000               	goto	l3943
  2039  00E83E                     l3943:
  2040  00E83E  C003  FFD9         	movff	strcat@from,fsr2l
  2041  00E842  C004  FFDA         	movff	strcat@from+1,fsr2h
  2042  00E846  C005  FFE1         	movff	strcat@cp,fsr1l
  2043  00E84A  C006  FFE2         	movff	strcat@cp+1,fsr1h
  2044  00E84E  CFDF FFE7          	movff	indf2,indf1
  2045  00E852  50E7               	movf	indf1,w,c
  2046  00E854  A4D8               	btfss	status,2,c
  2047  00E856  D7EE               	goto	l3941
  2048                           
  2049                           ;	Return value of _strcat is never used
  2050  00E858  0012               	return		;funcret
  2051  00E85A                     __end_of_strcat:
  2052                           	opt stack 0
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           prodh	equ	0xFF4
  2058                           prodl	equ	0xFF3
  2059                           postinc0	equ	0xFEE
  2060                           wreg	equ	0xFE8
  2061                           indf1	equ	0xFE7
  2062                           postdec1	equ	0xFE5
  2063                           fsr1h	equ	0xFE2
  2064                           fsr1l	equ	0xFE1
  2065                           indf2	equ	0xFDF
  2066                           fsr2h	equ	0xFDA
  2067                           fsr2l	equ	0xFD9
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _date_set *****************
  2071 ;; Defined at:
  2072 ;;		line 318 in file "main.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;		None               void
  2079 ;; Registers used:
  2080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;Total ram usage:        2 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    3
  2093 ;; This function calls:
  2094 ;;		_Write_RTC
  2095 ;; This function is called by:
  2096 ;;		_button_number
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text6
  2101  00F498                     __ptext6:
  2102                           	opt stack 0
  2103  00F498                     _date_set:
  2104                           	opt stack 25
  2105                           
  2106                           ;main.c: 320: switch(cursor_horizontal_position){
  2107                           
  2108                           ;incstack = 0
  2109  00F498  D024               	goto	l3777
  2110  00F49A                     l3763:
  2111                           
  2112                           ;main.c: 323: dia = key*10;
  2113  00F49A  5045               	movf	_key,w,c
  2114  00F49C  0D0A               	mullw	10
  2115  00F49E  CFF3 F050          	movff	prodl,_dia
  2116  00F4A2  CFF4 F051          	movff	prodh,_dia+1
  2117                           
  2118                           ;main.c: 324: break;
  2119  00F4A6  D039               	goto	l3779
  2120  00F4A8                     l3765:
  2121                           
  2122                           ;main.c: 327: dia += key;
  2123  00F4A8  5045               	movf	_key,w,c
  2124  00F4AA  2650               	addwf	_dia,f,c
  2125  00F4AC  0E00               	movlw	0
  2126  00F4AE  2251               	addwfc	_dia+1,f,c
  2127                           
  2128                           ;main.c: 328: break;
  2129  00F4B0  D034               	goto	l3779
  2130  00F4B2                     l3767:
  2131                           
  2132                           ;main.c: 331: mes = key*10;
  2133  00F4B2  5045               	movf	_key,w,c
  2134  00F4B4  0D0A               	mullw	10
  2135  00F4B6  CFF3 F056          	movff	prodl,_mes
  2136  00F4BA  CFF4 F057          	movff	prodh,_mes+1
  2137                           
  2138                           ;main.c: 332: break;
  2139  00F4BE  D02D               	goto	l3779
  2140  00F4C0                     l3769:
  2141                           
  2142                           ;main.c: 335: mes += key;
  2143  00F4C0  5045               	movf	_key,w,c
  2144  00F4C2  2656               	addwf	_mes,f,c
  2145  00F4C4  0E00               	movlw	0
  2146  00F4C6  2257               	addwfc	_mes+1,f,c
  2147                           
  2148                           ;main.c: 336: break;
  2149  00F4C8  D028               	goto	l3779
  2150  00F4CA                     l3771:
  2151                           
  2152                           ;main.c: 339: anio = key * 10;
  2153  00F4CA  5045               	movf	_key,w,c
  2154  00F4CC  0D0A               	mullw	10
  2155  00F4CE  CFF3 F04E          	movff	prodl,_anio
  2156  00F4D2  CFF4 F04F          	movff	prodh,_anio+1
  2157                           
  2158                           ;main.c: 340: break;
  2159  00F4D6  D021               	goto	l3779
  2160  00F4D8                     l3773:
  2161                           
  2162                           ;main.c: 343: anio += key;
  2163  00F4D8  5045               	movf	_key,w,c
  2164  00F4DA  264E               	addwf	_anio,f,c
  2165  00F4DC  0E00               	movlw	0
  2166  00F4DE  224F               	addwfc	_anio+1,f,c
  2167                           
  2168                           ;main.c: 346: }
  2169                           
  2170                           ;main.c: 344: break;
  2171  00F4E0  D01C               	goto	l3779
  2172  00F4E2                     l3777:
  2173  00F4E2  C033  F00E         	movff	_cursor_horizontal_position,??_date_set
  2174  00F4E6  C034  F00F         	movff	_cursor_horizontal_position+1,??_date_set+1
  2175                           
  2176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2177                           ; Switch size 1, requested type "space"
  2178                           ; Number of cases is 1, Range of values is 0 to 0
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte            4     3 (average)
  2182                           ;	Chosen strategy is simple_byte
  2183  00F4EA  500F               	movf	??_date_set+1,w,c
  2184  00F4EC  0A00               	xorlw	0	; case 0
  2185  00F4EE  A4D8               	btfss	status,2,c
  2186  00F4F0  D014               	goto	l3779
  2187                           
  2188                           ; Switch size 1, requested type "space"
  2189                           ; Number of cases is 6, Range of values is 1 to 8
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte           19    10 (average)
  2193                           ;	Chosen strategy is simple_byte
  2194  00F4F2  500E               	movf	??_date_set,w,c
  2195  00F4F4  0A01               	xorlw	1	; case 1
  2196  00F4F6  B4D8               	btfsc	status,2,c
  2197  00F4F8  D7D0               	goto	l3763
  2198  00F4FA  0A03               	xorlw	3	; case 2
  2199  00F4FC  B4D8               	btfsc	status,2,c
  2200  00F4FE  D7D4               	goto	l3765
  2201  00F500  0A06               	xorlw	6	; case 4
  2202  00F502  B4D8               	btfsc	status,2,c
  2203  00F504  D7D6               	goto	l3767
  2204  00F506  0A01               	xorlw	1	; case 5
  2205  00F508  B4D8               	btfsc	status,2,c
  2206  00F50A  D7DA               	goto	l3769
  2207  00F50C  0A02               	xorlw	2	; case 7
  2208  00F50E  B4D8               	btfsc	status,2,c
  2209  00F510  D7DC               	goto	l3771
  2210  00F512  0A0F               	xorlw	15	; case 8
  2211  00F514  B4D8               	btfsc	status,2,c
  2212  00F516  D7E0               	goto	l3773
  2213  00F518  D000               	goto	l3779
  2214  00F51A                     l3779:
  2215                           
  2216                           ;main.c: 348: Write_RTC();
  2217  00F51A  EC86  F07D         	call	_Write_RTC	;wreg free
  2218                           
  2219                           ;main.c: 349: _delay((unsigned long)((98)*(8000000/4000.0)));
  2220  00F51E  0EFF               	movlw	255
  2221  00F520  6E0E               	movwf	??_date_set& (0+255),c
  2222  00F522  0E8A               	movlw	138
  2223  00F524                     u2837:
  2224  00F524  2EE8               	decfsz	wreg,f,c
  2225  00F526  D7FE               	goto	u2837
  2226  00F528  2E0E               	decfsz	??_date_set& (0+255),f,c
  2227  00F52A  D7FC               	goto	u2837
  2228  00F52C  D000               	nop2	
  2229  00F52E  0012               	return		;funcret
  2230  00F530                     __end_of_date_set:
  2231                           	opt stack 0
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           prodh	equ	0xFF4
  2237                           prodl	equ	0xFF3
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           indf1	equ	0xFE7
  2241                           postdec1	equ	0xFE5
  2242                           fsr1h	equ	0xFE2
  2243                           fsr1l	equ	0xFE1
  2244                           indf2	equ	0xFDF
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function _Write_RTC *****************
  2250 ;; Defined at:
  2251 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;		None               void
  2258 ;; Registers used:
  2259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    2
  2272 ;; This function calls:
  2273 ;;		_RtccWrOn
  2274 ;;		_RtccWriteDate
  2275 ;;		_RtccWriteTime
  2276 ;;		___awdiv
  2277 ;; This function is called by:
  2278 ;;		_date_set
  2279 ;;		_time_set
  2280 ;;		_setup
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text7
  2285  00FB0C                     __ptext7:
  2286                           	opt stack 0
  2287  00FB0C                     _Write_RTC:
  2288                           	opt stack 27
  2289                           
  2290                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2291                           
  2292                           ;incstack = 0
  2293  00FB0C  ECA6  F070         	call	_RtccWrOn	;wreg free
  2294                           
  2295                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2296  00FB10  80A3               	bsf	4003,0,c	;volatile
  2297                           
  2298                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2299  00FB12  C03F  F001         	movff	_segundo,___awdiv@dividend
  2300  00FB16  C040  F002         	movff	_segundo+1,___awdiv@dividend+1
  2301  00FB1A  0E00               	movlw	0
  2302  00FB1C  6E04               	movwf	___awdiv@divisor+1,c
  2303  00FB1E  0E0A               	movlw	10
  2304  00FB20  6E03               	movwf	___awdiv@divisor,c
  2305  00FB22  EC01  F07A         	call	___awdiv	;wreg free
  2306  00FB26  5001               	movf	?___awdiv,w,c
  2307  00FB28  6E5D               	movwf	_segundo_d,c
  2308                           
  2309                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2310  00FB2A  505D               	movf	_segundo_d,w,c
  2311  00FB2C  0D0A               	mullw	10
  2312  00FB2E  50F3               	movf	prodl,w,c
  2313  00FB30  0800               	sublw	0
  2314  00FB32  243F               	addwf	_segundo,w,c
  2315  00FB34  6E5E               	movwf	_segundo_u,c
  2316                           
  2317                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2318  00FB36  505D               	movf	_segundo_d,w,c
  2319  00FB38  0D10               	mullw	16
  2320  00FB3A  50F3               	movf	prodl,w,c
  2321  00FB3C  245E               	addwf	_segundo_u,w,c
  2322  00FB3E  6E4B               	movwf	_RtccTime+1,c
  2323                           
  2324                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2325  00FB40  C03D  F001         	movff	_minuto,___awdiv@dividend
  2326  00FB44  C03E  F002         	movff	_minuto+1,___awdiv@dividend+1
  2327  00FB48  0E00               	movlw	0
  2328  00FB4A  6E04               	movwf	___awdiv@divisor+1,c
  2329  00FB4C  0E0A               	movlw	10
  2330  00FB4E  6E03               	movwf	___awdiv@divisor,c
  2331  00FB50  EC01  F07A         	call	___awdiv	;wreg free
  2332  00FB54  5001               	movf	?___awdiv,w,c
  2333  00FB56  6E5C               	movwf	_minuto_d,c
  2334                           
  2335                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2336  00FB58  505C               	movf	_minuto_d,w,c
  2337  00FB5A  0D0A               	mullw	10
  2338  00FB5C  50F3               	movf	prodl,w,c
  2339  00FB5E  0800               	sublw	0
  2340  00FB60  243D               	addwf	_minuto,w,c
  2341  00FB62  0100               	movlb	0	; () banked
  2342  00FB64  6FA9               	movwf	_minuto_u& (0+255),b
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2346  00FB66  505C               	movf	_minuto_d,w,c
  2347  00FB68  0D10               	mullw	16
  2348  00FB6A  50F3               	movf	prodl,w,c
  2349  00FB6C  0100               	movlb	0	; () banked
  2350  00FB6E  25A9               	addwf	_minuto_u& (0+255),w,b
  2351  00FB70  6E4C               	movwf	_RtccTime+2,c
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2355  00FB72  C054  F001         	movff	_hora,___awdiv@dividend
  2356  00FB76  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  2357  00FB7A  0E00               	movlw	0
  2358  00FB7C  6E04               	movwf	___awdiv@divisor+1,c
  2359  00FB7E  0E0A               	movlw	10
  2360  00FB80  6E03               	movwf	___awdiv@divisor,c
  2361  00FB82  EC01  F07A         	call	___awdiv	;wreg free
  2362  00FB86  5001               	movf	?___awdiv,w,c
  2363  00FB88  6E5A               	movwf	_hora_d,c
  2364                           
  2365                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2366  00FB8A  505A               	movf	_hora_d,w,c
  2367  00FB8C  0D0A               	mullw	10
  2368  00FB8E  50F3               	movf	prodl,w,c
  2369  00FB90  0800               	sublw	0
  2370  00FB92  2454               	addwf	_hora,w,c
  2371  00FB94  0100               	movlb	0	; () banked
  2372  00FB96  6FA7               	movwf	_hora_u& (0+255),b
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2376  00FB98  505A               	movf	_hora_d,w,c
  2377  00FB9A  0D10               	mullw	16
  2378  00FB9C  50F3               	movf	prodl,w,c
  2379  00FB9E  0100               	movlb	0	; () banked
  2380  00FBA0  25A7               	addwf	_hora_u& (0+255),w,b
  2381  00FBA2  6E4D               	movwf	_RtccTime+3,c
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2385  00FBA4  C04E  F001         	movff	_anio,___awdiv@dividend
  2386  00FBA8  C04F  F002         	movff	_anio+1,___awdiv@dividend+1
  2387  00FBAC  0E00               	movlw	0
  2388  00FBAE  6E04               	movwf	___awdiv@divisor+1,c
  2389  00FBB0  0E0A               	movlw	10
  2390  00FBB2  6E03               	movwf	___awdiv@divisor,c
  2391  00FBB4  EC01  F07A         	call	___awdiv	;wreg free
  2392  00FBB8  5001               	movf	?___awdiv,w,c
  2393  00FBBA  6E58               	movwf	_anio_d,c
  2394                           
  2395                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  2396  00FBBC  5058               	movf	_anio_d,w,c
  2397  00FBBE  0D0A               	mullw	10
  2398  00FBC0  50F3               	movf	prodl,w,c
  2399  00FBC2  0800               	sublw	0
  2400  00FBC4  244E               	addwf	_anio,w,c
  2401  00FBC6  0100               	movlb	0	; () banked
  2402  00FBC8  6FA4               	movwf	_anio_u& (0+255),b
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  2406  00FBCA  5058               	movf	_anio_d,w,c
  2407  00FBCC  0D10               	mullw	16
  2408  00FBCE  50F3               	movf	prodl,w,c
  2409  00FBD0  0100               	movlb	0	; () banked
  2410  00FBD2  25A4               	addwf	_anio_u& (0+255),w,b
  2411  00FBD4  6E49               	movwf	_RtccDate+3,c
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  2415  00FBD6  C056  F001         	movff	_mes,___awdiv@dividend
  2416  00FBDA  C057  F002         	movff	_mes+1,___awdiv@dividend+1
  2417  00FBDE  0E00               	movlw	0
  2418  00FBE0  6E04               	movwf	___awdiv@divisor+1,c
  2419  00FBE2  0E0A               	movlw	10
  2420  00FBE4  6E03               	movwf	___awdiv@divisor,c
  2421  00FBE6  EC01  F07A         	call	___awdiv	;wreg free
  2422  00FBEA  5001               	movf	?___awdiv,w,c
  2423  00FBEC  6E5B               	movwf	_mes_d,c
  2424                           
  2425                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  2426  00FBEE  505B               	movf	_mes_d,w,c
  2427  00FBF0  0D0A               	mullw	10
  2428  00FBF2  50F3               	movf	prodl,w,c
  2429  00FBF4  0800               	sublw	0
  2430  00FBF6  2456               	addwf	_mes,w,c
  2431  00FBF8  0100               	movlb	0	; () banked
  2432  00FBFA  6FA8               	movwf	_mes_u& (0+255),b
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  2436  00FBFC  505B               	movf	_mes_d,w,c
  2437  00FBFE  0D10               	mullw	16
  2438  00FC00  50F3               	movf	prodl,w,c
  2439  00FC02  0100               	movlb	0	; () banked
  2440  00FC04  25A8               	addwf	_mes_u& (0+255),w,b
  2441  00FC06  6E48               	movwf	_RtccDate+2,c
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  2445  00FC08  C050  F001         	movff	_dia,___awdiv@dividend
  2446  00FC0C  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  2447  00FC10  0E00               	movlw	0
  2448  00FC12  6E04               	movwf	___awdiv@divisor+1,c
  2449  00FC14  0E0A               	movlw	10
  2450  00FC16  6E03               	movwf	___awdiv@divisor,c
  2451  00FC18  EC01  F07A         	call	___awdiv	;wreg free
  2452  00FC1C  5001               	movf	?___awdiv,w,c
  2453  00FC1E  6E59               	movwf	_fecha_d,c
  2454                           
  2455                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  2456  00FC20  5059               	movf	_fecha_d,w,c
  2457  00FC22  0D0A               	mullw	10
  2458  00FC24  50F3               	movf	prodl,w,c
  2459  00FC26  0800               	sublw	0
  2460  00FC28  2450               	addwf	_dia,w,c
  2461  00FC2A  0100               	movlb	0	; () banked
  2462  00FC2C  6FA6               	movwf	_fecha_u& (0+255),b
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  2466  00FC2E  5059               	movf	_fecha_d,w,c
  2467  00FC30  0D10               	mullw	16
  2468  00FC32  50F3               	movf	prodl,w,c
  2469  00FC34  0100               	movlb	0	; () banked
  2470  00FC36  25A6               	addwf	_fecha_u& (0+255),w,b
  2471  00FC38  6E47               	movwf	_RtccDate+1,c
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  2475  00FC3A  C052  F0A5         	movff	_diasem,_dia_semana
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  2479  00FC3E  C052  F046         	movff	_diasem,_RtccDate
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  2483  00FC42  0E4A               	movlw	low _RtccTime
  2484  00FC44  6E01               	movwf	RtccWriteTime@pTm,c
  2485  00FC46  0E00               	movlw	high _RtccTime
  2486  00FC48  6E02               	movwf	RtccWriteTime@pTm+1,c
  2487  00FC4A  0E01               	movlw	1
  2488  00FC4C  6E03               	movwf	RtccWriteTime@di,c
  2489  00FC4E  ECB2  F07B         	call	_RtccWriteTime	;wreg free
  2490                           
  2491                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  2492  00FC52  0E46               	movlw	low _RtccDate
  2493  00FC54  6E01               	movwf	RtccWriteDate@pDt,c
  2494  00FC56  0E00               	movlw	high _RtccDate
  2495  00FC58  6E02               	movwf	RtccWriteDate@pDt+1,c
  2496  00FC5A  0E01               	movlw	1
  2497  00FC5C  6E03               	movwf	RtccWriteDate@di,c
  2498  00FC5E  EC38  F07C         	call	_RtccWriteDate	;wreg free
  2499                           
  2500                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  2501  00FC62  010F               	movlb	15	; () banked
  2502  00FC64  8F3F               	bsf	63,7,b	;volatile
  2503                           
  2504                           ; BSR set to: 15
  2505  00FC66  0012               	return		;funcret
  2506  00FC68                     __end_of_Write_RTC:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           prodh	equ	0xFF4
  2513                           prodl	equ	0xFF3
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           indf1	equ	0xFE7
  2517                           postdec1	equ	0xFE5
  2518                           fsr1h	equ	0xFE2
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           fsr2h	equ	0xFDA
  2522                           fsr2l	equ	0xFD9
  2523                           status	equ	0xFD8
  2524                           
  2525 ;; *************** function ___awdiv *****************
  2526 ;; Defined at:
  2527 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  dividend        2    0[COMRAM] int 
  2530 ;;  divisor         2    2[COMRAM] int 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  quotient        2    6[COMRAM] int 
  2533 ;;  sign            1    5[COMRAM] unsigned char 
  2534 ;;  counter         1    4[COMRAM] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  2    0[COMRAM] int 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;Total ram usage:        8 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_Write_RTC
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text8
  2558  00F402                     __ptext8:
  2559                           	opt stack 0
  2560  00F402                     ___awdiv:
  2561                           	opt stack 28
  2562                           
  2563                           ; BSR set to: 15
  2564                           ;incstack = 0
  2565  00F402  0E00               	movlw	0
  2566  00F404  6E06               	movwf	___awdiv@sign,c
  2567  00F406  AE04               	btfss	___awdiv@divisor+1,7,c
  2568  00F408  D007               	goto	l3437
  2569  00F40A  6C03               	negf	___awdiv@divisor,c
  2570  00F40C  1E04               	comf	___awdiv@divisor+1,f,c
  2571  00F40E  B0D8               	btfsc	status,0,c
  2572  00F410  2A04               	incf	___awdiv@divisor+1,f,c
  2573  00F412  0E01               	movlw	1
  2574  00F414  6E06               	movwf	___awdiv@sign,c
  2575  00F416  D000               	goto	l3437
  2576  00F418                     l3437:
  2577  00F418  AE02               	btfss	___awdiv@dividend+1,7,c
  2578  00F41A  D007               	goto	l3443
  2579  00F41C  6C01               	negf	___awdiv@dividend,c
  2580  00F41E  1E02               	comf	___awdiv@dividend+1,f,c
  2581  00F420  B0D8               	btfsc	status,0,c
  2582  00F422  2A02               	incf	___awdiv@dividend+1,f,c
  2583  00F424  0E01               	movlw	1
  2584  00F426  1A06               	xorwf	___awdiv@sign,f,c
  2585  00F428  D000               	goto	l3443
  2586  00F42A                     l3443:
  2587  00F42A  0E00               	movlw	0
  2588  00F42C  6E08               	movwf	___awdiv@quotient+1,c
  2589  00F42E  0E00               	movlw	0
  2590  00F430  6E07               	movwf	___awdiv@quotient,c
  2591  00F432  5003               	movf	___awdiv@divisor,w,c
  2592  00F434  1004               	iorwf	___awdiv@divisor+1,w,c
  2593  00F436  B4D8               	btfsc	status,2,c
  2594  00F438  D021               	goto	l3465
  2595  00F43A  0E01               	movlw	1
  2596  00F43C  6E05               	movwf	___awdiv@counter,c
  2597  00F43E  D005               	goto	l3451
  2598  00F440                     l3449:
  2599  00F440  90D8               	bcf	status,0,c
  2600  00F442  3603               	rlcf	___awdiv@divisor,f,c
  2601  00F444  3604               	rlcf	___awdiv@divisor+1,f,c
  2602  00F446  2A05               	incf	___awdiv@counter,f,c
  2603  00F448  D000               	goto	l3451
  2604  00F44A                     l3451:
  2605  00F44A  BE04               	btfsc	___awdiv@divisor+1,7,c
  2606  00F44C  D002               	goto	l3453
  2607  00F44E  D7F8               	goto	l3449
  2608  00F450  D000               	goto	l3453
  2609  00F452                     l3453:
  2610  00F452  90D8               	bcf	status,0,c
  2611  00F454  3607               	rlcf	___awdiv@quotient,f,c
  2612  00F456  3608               	rlcf	___awdiv@quotient+1,f,c
  2613  00F458  5003               	movf	___awdiv@divisor,w,c
  2614  00F45A  5C01               	subwf	___awdiv@dividend,w,c
  2615  00F45C  5004               	movf	___awdiv@divisor+1,w,c
  2616  00F45E  5802               	subwfb	___awdiv@dividend+1,w,c
  2617  00F460  A0D8               	btfss	status,0,c
  2618  00F462  D006               	goto	l3461
  2619  00F464  5003               	movf	___awdiv@divisor,w,c
  2620  00F466  5E01               	subwf	___awdiv@dividend,f,c
  2621  00F468  5004               	movf	___awdiv@divisor+1,w,c
  2622  00F46A  5A02               	subwfb	___awdiv@dividend+1,f,c
  2623  00F46C  8007               	bsf	___awdiv@quotient,0,c
  2624  00F46E  D000               	goto	l3461
  2625  00F470                     l3461:
  2626  00F470  90D8               	bcf	status,0,c
  2627  00F472  3204               	rrcf	___awdiv@divisor+1,f,c
  2628  00F474  3203               	rrcf	___awdiv@divisor,f,c
  2629  00F476  2E05               	decfsz	___awdiv@counter,f,c
  2630  00F478  D7EC               	goto	l3453
  2631  00F47A  D000               	goto	l3465
  2632  00F47C                     l3465:
  2633  00F47C  5006               	movf	___awdiv@sign,w,c
  2634  00F47E  B4D8               	btfsc	status,2,c
  2635  00F480  D005               	goto	l3469
  2636  00F482  6C07               	negf	___awdiv@quotient,c
  2637  00F484  1E08               	comf	___awdiv@quotient+1,f,c
  2638  00F486  B0D8               	btfsc	status,0,c
  2639  00F488  2A08               	incf	___awdiv@quotient+1,f,c
  2640  00F48A  D000               	goto	l3469
  2641  00F48C                     l3469:
  2642  00F48C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2643  00F490  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2644  00F494  0012               	return	
  2645  00F496  0012               	return		;funcret
  2646  00F498                     __end_of___awdiv:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           postinc0	equ	0xFEE
  2655                           wreg	equ	0xFE8
  2656                           indf1	equ	0xFE7
  2657                           postdec1	equ	0xFE5
  2658                           fsr1h	equ	0xFE2
  2659                           fsr1l	equ	0xFE1
  2660                           indf2	equ	0xFDF
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _RtccWriteTime *****************
  2666 ;; Defined at:
  2667 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  pTm             2    0[COMRAM] PTR const struct .
  2670 ;;		 -> RtccTime(4), 
  2671 ;;  di              1    2[COMRAM] enum E7121
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  tempHourWDay    2    9[COMRAM] struct .
  2674 ;;  tempMinSec      2    7[COMRAM] struct .
  2675 ;;  wasWrEn         1    6[COMRAM] enum E7121
  2676 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2677 ;;  wasOn           1    4[COMRAM] enum E7121
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      enum E7481
  2680 ;; Registers used:
  2681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;Total ram usage:       11 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    1
  2694 ;; This function calls:
  2695 ;;		_RtccWrOn
  2696 ;; This function is called by:
  2697 ;;		_Write_RTC
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text9
  2702  00F764                     __ptext9:
  2703                           	opt stack 0
  2704  00F764                     _RtccWriteTime:
  2705                           	opt stack 27
  2706                           
  2707                           ;incstack = 0
  2708  00F764  0E00               	movlw	0
  2709  00F766  6E06               	movwf	RtccWriteTime@wasAlrm,c
  2710  00F768  EE20 F002          	lfsr	2,2
  2711  00F76C  5001               	movf	RtccWriteTime@pTm,w,c
  2712  00F76E  26D9               	addwf	fsr2l,f,c
  2713  00F770  5002               	movf	RtccWriteTime@pTm+1,w,c
  2714  00F772  22DA               	addwfc	fsr2h,f,c
  2715  00F774  0E5A               	movlw	90
  2716  00F776  60DF               	cpfslt	indf2,c
  2717  00F778  0012               	return	
  2718  00F77A  EE20 F001          	lfsr	2,1
  2719  00F77E  5001               	movf	RtccWriteTime@pTm,w,c
  2720  00F780  26D9               	addwf	fsr2l,f,c
  2721  00F782  5002               	movf	RtccWriteTime@pTm+1,w,c
  2722  00F784  22DA               	addwfc	fsr2h,f,c
  2723  00F786  0E5A               	movlw	90
  2724  00F788  60DF               	cpfslt	indf2,c
  2725  00F78A  0012               	return	
  2726  00F78C  EE20 F003          	lfsr	2,3
  2727  00F790  5001               	movf	RtccWriteTime@pTm,w,c
  2728  00F792  26D9               	addwf	fsr2l,f,c
  2729  00F794  5002               	movf	RtccWriteTime@pTm+1,w,c
  2730  00F796  22DA               	addwfc	fsr2h,f,c
  2731  00F798  0E24               	movlw	36
  2732  00F79A  64DF               	cpfsgt	indf2,c
  2733  00F79C  D002               	goto	l3159
  2734  00F79E  0012               	return	
  2735                           
  2736                           ;	Return value of _RtccWriteTime is never used
  2737  00F7A0  0012               	return	
  2738  00F7A2                     l3159:
  2739  00F7A2  EE20 F002          	lfsr	2,2
  2740  00F7A6  5001               	movf	RtccWriteTime@pTm,w,c
  2741  00F7A8  26D9               	addwf	fsr2l,f,c
  2742  00F7AA  5002               	movf	RtccWriteTime@pTm+1,w,c
  2743  00F7AC  22DA               	addwfc	fsr2h,f,c
  2744  00F7AE  50DF               	movf	indf2,w,c
  2745  00F7B0  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  2746  00F7B2  EE20 F001          	lfsr	2,1
  2747  00F7B6  5001               	movf	RtccWriteTime@pTm,w,c
  2748  00F7B8  26D9               	addwf	fsr2l,f,c
  2749  00F7BA  5002               	movf	RtccWriteTime@pTm+1,w,c
  2750  00F7BC  22DA               	addwfc	fsr2h,f,c
  2751  00F7BE  50DF               	movf	indf2,w,c
  2752  00F7C0  6E08               	movwf	RtccWriteTime@tempMinSec,c
  2753  00F7C2  5003               	movf	RtccWriteTime@di,w,c
  2754  00F7C4  B4D8               	btfsc	status,2,c
  2755  00F7C6  D002               	goto	l3165
  2756  00F7C8  9CF2               	bcf	intcon,6,c	;volatile
  2757  00F7CA  D000               	goto	l3165
  2758  00F7CC                     l3165:
  2759  00F7CC  0E00               	movlw	0
  2760  00F7CE  BB3F               	btfsc	63,5,b	;volatile
  2761  00F7D0  0E01               	movlw	1
  2762  00F7D2  6E07               	movwf	RtccWriteTime@wasWrEn,c
  2763  00F7D4  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2764  00F7D6  A4D8               	btfss	status,2,c
  2765  00F7D8  D003               	goto	l3169
  2766  00F7DA  ECA6  F070         	call	_RtccWrOn	;wreg free
  2767  00F7DE  D000               	goto	l3169
  2768  00F7E0                     l3169:
  2769  00F7E0  0E00               	movlw	0
  2770  00F7E2  BF3F               	btfsc	63,7,b	;volatile
  2771  00F7E4  0E01               	movlw	1
  2772  00F7E6  6E05               	movwf	RtccWriteTime@wasOn,c
  2773  00F7E8  5005               	movf	RtccWriteTime@wasOn,w,c
  2774  00F7EA  B4D8               	btfsc	status,2,c
  2775  00F7EC  D007               	goto	l3175
  2776  00F7EE  0E00               	movlw	0
  2777  00F7F0  BE91               	btfsc	3985,7,c	;volatile
  2778  00F7F2  0E01               	movlw	1
  2779  00F7F4  6E06               	movwf	RtccWriteTime@wasAlrm,c
  2780  00F7F6  010F               	movlb	15	; () banked
  2781  00F7F8  9F3F               	bcf	63,7,b	;volatile
  2782  00F7FA  D000               	goto	l3175
  2783  00F7FC                     l3175:
  2784  00F7FC  0EFC               	movlw	252
  2785  00F7FE  010F               	movlb	15	; () banked
  2786  00F800  173F               	andwf	63,f,b	;volatile
  2787  00F802  010F               	movlb	15	; () banked
  2788  00F804  813F               	bsf	63,0,b	;volatile
  2789                           
  2790                           ; BSR set to: 15
  2791  00F806  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  2792                           
  2793                           ; BSR set to: 15
  2794  00F80A  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  2795                           
  2796                           ; BSR set to: 15
  2797  00F80E  EE20 F003          	lfsr	2,3
  2798  00F812  5001               	movf	RtccWriteTime@pTm,w,c
  2799  00F814  26D9               	addwf	fsr2l,f,c
  2800  00F816  5002               	movf	RtccWriteTime@pTm+1,w,c
  2801  00F818  22DA               	addwfc	fsr2h,f,c
  2802  00F81A  50DF               	movf	indf2,w,c
  2803  00F81C  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  2804                           
  2805                           ; BSR set to: 15
  2806  00F81E  0EFC               	movlw	252
  2807  00F820  010F               	movlb	15	; () banked
  2808  00F822  173F               	andwf	63,f,b	;volatile
  2809                           
  2810                           ; BSR set to: 15
  2811  00F824  010F               	movlb	15	; () banked
  2812  00F826  813F               	bsf	63,0,b	;volatile
  2813                           
  2814                           ; BSR set to: 15
  2815  00F828  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  2816                           
  2817                           ; BSR set to: 15
  2818  00F82C  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  2819                           
  2820                           ; BSR set to: 15
  2821  00F830  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  2822                           
  2823                           ; BSR set to: 15
  2824  00F834  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  2825                           
  2826                           ; BSR set to: 15
  2827  00F838  5005               	movf	RtccWriteTime@wasOn,w,c
  2828  00F83A  B4D8               	btfsc	status,2,c
  2829  00F83C  D00D               	goto	l3207
  2830                           
  2831                           ; BSR set to: 15
  2832  00F83E  010F               	movlb	15	; () banked
  2833  00F840  8F3F               	bsf	63,7,b	;volatile
  2834                           
  2835                           ; BSR set to: 15
  2836  00F842  5006               	movf	RtccWriteTime@wasAlrm,w,c
  2837  00F844  B4D8               	btfsc	status,2,c
  2838  00F846  D002               	goto	l3203
  2839                           
  2840                           ; BSR set to: 15
  2841  00F848  8E91               	bsf	3985,7,c	;volatile
  2842  00F84A  D000               	goto	l3203
  2843  00F84C                     l3203:
  2844                           
  2845                           ; BSR set to: 15
  2846  00F84C  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2847  00F84E  B4D8               	btfsc	status,2,c
  2848  00F850  D009               	goto	l3211
  2849                           
  2850                           ; BSR set to: 15
  2851  00F852  ECA6  F070         	call	_RtccWrOn	;wreg free
  2852  00F856  D006               	goto	l3211
  2853  00F858                     l3207:
  2854  00F858  5007               	movf	RtccWriteTime@wasWrEn,w,c
  2855  00F85A  A4D8               	btfss	status,2,c
  2856  00F85C  D003               	goto	l3211
  2857  00F85E  010F               	movlb	15	; () banked
  2858  00F860  9B3F               	bcf	63,5,b	;volatile
  2859                           
  2860                           ; BSR set to: 15
  2861  00F862  D000               	goto	l3211
  2862  00F864                     l3211:
  2863  00F864  5003               	movf	RtccWriteTime@di,w,c
  2864  00F866  B4D8               	btfsc	status,2,c
  2865  00F868  0012               	return	
  2866  00F86A  8CF2               	bsf	intcon,6,c	;volatile
  2867  00F86C  0012               	return	
  2868                           
  2869                           ;	Return value of _RtccWriteTime is never used
  2870  00F86E  0012               	return		;funcret
  2871  00F870                     __end_of_RtccWriteTime:
  2872                           	opt stack 0
  2873                           tblptru	equ	0xFF8
  2874                           tblptrh	equ	0xFF7
  2875                           tblptrl	equ	0xFF6
  2876                           tablat	equ	0xFF5
  2877                           prodh	equ	0xFF4
  2878                           prodl	equ	0xFF3
  2879                           intcon	equ	0xFF2
  2880                           postinc0	equ	0xFEE
  2881                           wreg	equ	0xFE8
  2882                           indf1	equ	0xFE7
  2883                           postdec1	equ	0xFE5
  2884                           fsr1h	equ	0xFE2
  2885                           fsr1l	equ	0xFE1
  2886                           indf2	equ	0xFDF
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8
  2890                           
  2891 ;; *************** function _RtccWriteDate *****************
  2892 ;; Defined at:
  2893 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  pDt             2    0[COMRAM] PTR const struct .
  2896 ;;		 -> RtccDate(4), 
  2897 ;;  di              1    2[COMRAM] enum E7121
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  tempHourWDay    2   11[COMRAM] struct .
  2900 ;;  tempDayMonth    2    9[COMRAM] struct .
  2901 ;;  tempYear        2    6[COMRAM] struct .
  2902 ;;  wasWrEn         1    8[COMRAM] enum E7121
  2903 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2904 ;;  wasOn           1    4[COMRAM] enum E7121
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      enum E7481
  2907 ;; Registers used:
  2908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2914 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;Total ram usage:       13 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    1
  2921 ;; This function calls:
  2922 ;;		_RtccWrOn
  2923 ;; This function is called by:
  2924 ;;		_Write_RTC
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text10
  2929  00F870                     __ptext10:
  2930                           	opt stack 0
  2931  00F870                     _RtccWriteDate:
  2932                           	opt stack 27
  2933                           
  2934                           ;incstack = 0
  2935  00F870  0E00               	movlw	0
  2936  00F872  6E06               	movwf	RtccWriteDate@wasAlrm,c
  2937  00F874  EE20 F002          	lfsr	2,2
  2938  00F878  5001               	movf	RtccWriteDate@pDt,w,c
  2939  00F87A  26D9               	addwf	fsr2l,f,c
  2940  00F87C  5002               	movf	RtccWriteDate@pDt+1,w,c
  2941  00F87E  22DA               	addwfc	fsr2h,f,c
  2942  00F880  0E13               	movlw	19
  2943  00F882  60DF               	cpfslt	indf2,c
  2944  00F884  0012               	return	
  2945  00F886  EE20 F002          	lfsr	2,2
  2946  00F88A  5001               	movf	RtccWriteDate@pDt,w,c
  2947  00F88C  26D9               	addwf	fsr2l,f,c
  2948  00F88E  5002               	movf	RtccWriteDate@pDt+1,w,c
  2949  00F890  22DA               	addwfc	fsr2h,f,c
  2950  00F892  50DF               	movf	indf2,w,c
  2951  00F894  B4D8               	btfsc	status,2,c
  2952  00F896  0012               	return	
  2953  00F898  EE20 F001          	lfsr	2,1
  2954  00F89C  5001               	movf	RtccWriteDate@pDt,w,c
  2955  00F89E  26D9               	addwf	fsr2l,f,c
  2956  00F8A0  5002               	movf	RtccWriteDate@pDt+1,w,c
  2957  00F8A2  22DA               	addwfc	fsr2h,f,c
  2958  00F8A4  0E32               	movlw	50
  2959  00F8A6  60DF               	cpfslt	indf2,c
  2960  00F8A8  0012               	return	
  2961  00F8AA  EE20 F001          	lfsr	2,1
  2962  00F8AE  5001               	movf	RtccWriteDate@pDt,w,c
  2963  00F8B0  26D9               	addwf	fsr2l,f,c
  2964  00F8B2  5002               	movf	RtccWriteDate@pDt+1,w,c
  2965  00F8B4  22DA               	addwfc	fsr2h,f,c
  2966  00F8B6  50DF               	movf	indf2,w,c
  2967  00F8B8  B4D8               	btfsc	status,2,c
  2968  00F8BA  0012               	return	
  2969  00F8BC  EE20 F003          	lfsr	2,3
  2970  00F8C0  5001               	movf	RtccWriteDate@pDt,w,c
  2971  00F8C2  26D9               	addwf	fsr2l,f,c
  2972  00F8C4  5002               	movf	RtccWriteDate@pDt+1,w,c
  2973  00F8C6  22DA               	addwfc	fsr2h,f,c
  2974  00F8C8  0E99               	movlw	153
  2975  00F8CA  64DF               	cpfsgt	indf2,c
  2976  00F8CC  D002               	goto	l3227
  2977  00F8CE  0012               	return	
  2978                           
  2979                           ;	Return value of _RtccWriteDate is never used
  2980  00F8D0  0012               	return	
  2981  00F8D2                     l3227:
  2982  00F8D2  EE20 F003          	lfsr	2,3
  2983  00F8D6  5001               	movf	RtccWriteDate@pDt,w,c
  2984  00F8D8  26D9               	addwf	fsr2l,f,c
  2985  00F8DA  5002               	movf	RtccWriteDate@pDt+1,w,c
  2986  00F8DC  22DA               	addwfc	fsr2h,f,c
  2987  00F8DE  50DF               	movf	indf2,w,c
  2988  00F8E0  6E07               	movwf	RtccWriteDate@tempYear,c
  2989  00F8E2  EE20 F001          	lfsr	2,1
  2990  00F8E6  5001               	movf	RtccWriteDate@pDt,w,c
  2991  00F8E8  26D9               	addwf	fsr2l,f,c
  2992  00F8EA  5002               	movf	RtccWriteDate@pDt+1,w,c
  2993  00F8EC  22DA               	addwfc	fsr2h,f,c
  2994  00F8EE  50DF               	movf	indf2,w,c
  2995  00F8F0  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  2996  00F8F2  EE20 F002          	lfsr	2,2
  2997  00F8F6  5001               	movf	RtccWriteDate@pDt,w,c
  2998  00F8F8  26D9               	addwf	fsr2l,f,c
  2999  00F8FA  5002               	movf	RtccWriteDate@pDt+1,w,c
  3000  00F8FC  22DA               	addwfc	fsr2h,f,c
  3001  00F8FE  50DF               	movf	indf2,w,c
  3002  00F900  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3003  00F902  5003               	movf	RtccWriteDate@di,w,c
  3004  00F904  B4D8               	btfsc	status,2,c
  3005  00F906  D002               	goto	l3233
  3006  00F908  9CF2               	bcf	intcon,6,c	;volatile
  3007  00F90A  D000               	goto	l3233
  3008  00F90C                     l3233:
  3009  00F90C  0E00               	movlw	0
  3010  00F90E  BB3F               	btfsc	63,5,b	;volatile
  3011  00F910  0E01               	movlw	1
  3012  00F912  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3013  00F914  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3014  00F916  A4D8               	btfss	status,2,c
  3015  00F918  D003               	goto	l3237
  3016  00F91A  ECA6  F070         	call	_RtccWrOn	;wreg free
  3017  00F91E  D000               	goto	l3237
  3018  00F920                     l3237:
  3019  00F920  0E00               	movlw	0
  3020  00F922  BF3F               	btfsc	63,7,b	;volatile
  3021  00F924  0E01               	movlw	1
  3022  00F926  6E05               	movwf	RtccWriteDate@wasOn,c
  3023  00F928  5005               	movf	RtccWriteDate@wasOn,w,c
  3024  00F92A  B4D8               	btfsc	status,2,c
  3025  00F92C  D007               	goto	l3243
  3026  00F92E  0E00               	movlw	0
  3027  00F930  BE91               	btfsc	3985,7,c	;volatile
  3028  00F932  0E01               	movlw	1
  3029  00F934  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3030  00F936  010F               	movlb	15	; () banked
  3031  00F938  9F3F               	bcf	63,7,b	;volatile
  3032  00F93A  D000               	goto	l3243
  3033  00F93C                     l3243:
  3034  00F93C  0EFC               	movlw	252
  3035  00F93E  010F               	movlb	15	; () banked
  3036  00F940  173F               	andwf	63,f,b	;volatile
  3037  00F942  010F               	movlb	15	; () banked
  3038  00F944  813F               	bsf	63,0,b	;volatile
  3039                           
  3040                           ; BSR set to: 15
  3041  00F946  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3042                           
  3043                           ; BSR set to: 15
  3044  00F94A  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3045                           
  3046                           ; BSR set to: 15
  3047  00F94E  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3048  00F952  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3049  00F956  50DF               	movf	indf2,w,c
  3050  00F958  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  3051                           
  3052                           ; BSR set to: 15
  3053  00F95A  0EFC               	movlw	252
  3054  00F95C  010F               	movlb	15	; () banked
  3055  00F95E  173F               	andwf	63,f,b	;volatile
  3056                           
  3057                           ; BSR set to: 15
  3058  00F960  0E03               	movlw	3
  3059  00F962  010F               	movlb	15	; () banked
  3060  00F964  133F               	iorwf	63,f,b	;volatile
  3061                           
  3062                           ; BSR set to: 15
  3063  00F966  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3064                           
  3065                           ; BSR set to: 15
  3066  00F96A  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3067                           
  3068                           ; BSR set to: 15
  3069  00F96E  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3070                           
  3071                           ; BSR set to: 15
  3072  00F972  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3073                           
  3074                           ; BSR set to: 15
  3075  00F976  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3076                           
  3077                           ; BSR set to: 15
  3078  00F97A  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3079                           
  3080                           ; BSR set to: 15
  3081  00F97E  5005               	movf	RtccWriteDate@wasOn,w,c
  3082  00F980  B4D8               	btfsc	status,2,c
  3083  00F982  D00D               	goto	l3279
  3084                           
  3085                           ; BSR set to: 15
  3086  00F984  010F               	movlb	15	; () banked
  3087  00F986  8F3F               	bsf	63,7,b	;volatile
  3088                           
  3089                           ; BSR set to: 15
  3090  00F988  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3091  00F98A  B4D8               	btfsc	status,2,c
  3092  00F98C  D002               	goto	l3275
  3093                           
  3094                           ; BSR set to: 15
  3095  00F98E  8E91               	bsf	3985,7,c	;volatile
  3096  00F990  D000               	goto	l3275
  3097  00F992                     l3275:
  3098                           
  3099                           ; BSR set to: 15
  3100  00F992  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3101  00F994  B4D8               	btfsc	status,2,c
  3102  00F996  D009               	goto	l3283
  3103                           
  3104                           ; BSR set to: 15
  3105  00F998  ECA6  F070         	call	_RtccWrOn	;wreg free
  3106  00F99C  D006               	goto	l3283
  3107  00F99E                     l3279:
  3108  00F99E  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3109  00F9A0  A4D8               	btfss	status,2,c
  3110  00F9A2  D003               	goto	l3283
  3111  00F9A4  010F               	movlb	15	; () banked
  3112  00F9A6  9B3F               	bcf	63,5,b	;volatile
  3113                           
  3114                           ; BSR set to: 15
  3115  00F9A8  D000               	goto	l3283
  3116  00F9AA                     l3283:
  3117  00F9AA  5003               	movf	RtccWriteDate@di,w,c
  3118  00F9AC  B4D8               	btfsc	status,2,c
  3119  00F9AE  0012               	return	
  3120  00F9B0  9CF2               	bcf	intcon,6,c	;volatile
  3121  00F9B2  0012               	return	
  3122                           
  3123                           ;	Return value of _RtccWriteDate is never used
  3124  00F9B4  0012               	return		;funcret
  3125  00F9B6                     __end_of_RtccWriteDate:
  3126                           	opt stack 0
  3127                           tblptru	equ	0xFF8
  3128                           tblptrh	equ	0xFF7
  3129                           tblptrl	equ	0xFF6
  3130                           tablat	equ	0xFF5
  3131                           prodh	equ	0xFF4
  3132                           prodl	equ	0xFF3
  3133                           intcon	equ	0xFF2
  3134                           postinc0	equ	0xFEE
  3135                           wreg	equ	0xFE8
  3136                           indf1	equ	0xFE7
  3137                           postdec1	equ	0xFE5
  3138                           fsr1h	equ	0xFE2
  3139                           fsr1l	equ	0xFE1
  3140                           indf2	equ	0xFDF
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8
  3144                           
  3145 ;; *************** function _RtccWrOn *****************
  3146 ;; Defined at:
  3147 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  data            2    0        unsigned int 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;		None               void
  3154 ;; Registers used:
  3155 ;;		wreg, status,2
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_Write_RTC
  3171 ;;		_RtccWriteDate
  3172 ;;		_RtccWriteTime
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text11
  3177  00E14C                     __ptext11:
  3178                           	opt stack 0
  3179  00E14C                     _RtccWrOn:
  3180                           	opt stack 27
  3181                           
  3182                           ;incstack = 0
  3183  00E14C  9CF2               	bcf	intcon,6,c	;volatile
  3184  00E14E  0E55               	movlw	85
  3185  00E150  6EA7               	movwf	4007,c	;volatile
  3186  00E152  0EAA               	movlw	170
  3187  00E154  6EA7               	movwf	4007,c	;volatile
  3188  00E156  010F               	movlb	15	; () banked
  3189  00E158  8B3F               	bsf	63,5,b	;volatile
  3190                           
  3191                           ; BSR set to: 15
  3192  00E15A  8CF2               	bsf	intcon,6,c	;volatile
  3193                           
  3194                           ; BSR set to: 15
  3195  00E15C  0012               	return		;funcret
  3196  00E15E                     __end_of_RtccWrOn:
  3197                           	opt stack 0
  3198                           tblptru	equ	0xFF8
  3199                           tblptrh	equ	0xFF7
  3200                           tblptrl	equ	0xFF6
  3201                           tablat	equ	0xFF5
  3202                           prodh	equ	0xFF4
  3203                           prodl	equ	0xFF3
  3204                           intcon	equ	0xFF2
  3205                           postinc0	equ	0xFEE
  3206                           wreg	equ	0xFE8
  3207                           indf1	equ	0xFE7
  3208                           postdec1	equ	0xFE5
  3209                           fsr1h	equ	0xFE2
  3210                           fsr1l	equ	0xFE1
  3211                           indf2	equ	0xFDF
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _cursor_displacement *****************
  3217 ;; Defined at:
  3218 ;;		line 303 in file "main.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;Total ram usage:        1 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    3
  3239 ;; This function calls:
  3240 ;;		_lcd_gotoxy
  3241 ;; This function is called by:
  3242 ;;		_button_number
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text12
  3247  00EA28                     __ptext12:
  3248                           	opt stack 0
  3249  00EA28                     _cursor_displacement:
  3250                           	opt stack 25
  3251                           
  3252                           ;main.c: 305: if(cursor_horizontal_position == 8){
  3253                           
  3254                           ; BSR set to: 15
  3255                           ;incstack = 0
  3256  00EA28  0E08               	movlw	8
  3257  00EA2A  1833               	xorwf	_cursor_horizontal_position,w,c
  3258  00EA2C  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3259  00EA2E  A4D8               	btfss	status,2,c
  3260  00EA30  D005               	goto	l3751
  3261                           
  3262                           ;main.c: 306: cursor_horizontal_position = 0;
  3263  00EA32  0E00               	movlw	0
  3264  00EA34  6E34               	movwf	_cursor_horizontal_position+1,c
  3265  00EA36  0E00               	movlw	0
  3266  00EA38  6E33               	movwf	_cursor_horizontal_position,c
  3267                           
  3268                           ;main.c: 307: }
  3269  00EA3A  D00D               	goto	l255
  3270  00EA3C                     l3751:
  3271                           
  3272                           ;main.c: 308: else if (cursor_horizontal_position == 2 || cursor_horizontal_position == 
      +                          5){
  3273  00EA3C  0E02               	movlw	2
  3274  00EA3E  1833               	xorwf	_cursor_horizontal_position,w,c
  3275  00EA40  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3276  00EA42  B4D8               	btfsc	status,2,c
  3277  00EA44  D005               	goto	l3755
  3278  00EA46  0E05               	movlw	5
  3279  00EA48  1833               	xorwf	_cursor_horizontal_position,w,c
  3280  00EA4A  1034               	iorwf	_cursor_horizontal_position+1,w,c
  3281  00EA4C  A4D8               	btfss	status,2,c
  3282  00EA4E  D003               	goto	l255
  3283  00EA50                     l3755:
  3284                           
  3285                           ;main.c: 309: cursor_horizontal_position++;
  3286  00EA50  4A33               	infsnz	_cursor_horizontal_position,f,c
  3287  00EA52  2A34               	incf	_cursor_horizontal_position+1,f,c
  3288  00EA54  D000               	goto	l255
  3289  00EA56                     l255:
  3290                           
  3291                           ;main.c: 310: }
  3292                           ;main.c: 312: cursor_horizontal_position++;
  3293  00EA56  4A33               	infsnz	_cursor_horizontal_position,f,c
  3294  00EA58  2A34               	incf	_cursor_horizontal_position+1,f,c
  3295                           
  3296                           ;main.c: 313: lcd_gotoxy(cursor_horizontal_position, 2);
  3297  00EA5A  0E02               	movlw	2
  3298  00EA5C  6E05               	movwf	lcd_gotoxy@y,c
  3299  00EA5E  5033               	movf	_cursor_horizontal_position,w,c
  3300  00EA60  ECFE  F070         	call	_lcd_gotoxy
  3301                           
  3302                           ;main.c: 314: _delay((unsigned long)((98)*(8000000/4000.0)));
  3303  00EA64  0EFF               	movlw	255
  3304  00EA66  6E08               	movwf	??_cursor_displacement& (0+255),c
  3305  00EA68  0E8A               	movlw	138
  3306  00EA6A                     u2847:
  3307  00EA6A  2EE8               	decfsz	wreg,f,c
  3308  00EA6C  D7FE               	goto	u2847
  3309  00EA6E  2E08               	decfsz	??_cursor_displacement& (0+255),f,c
  3310  00EA70  D7FC               	goto	u2847
  3311  00EA72  D000               	nop2	
  3312  00EA74  0012               	return		;funcret
  3313  00EA76                     __end_of_cursor_displacement:
  3314                           	opt stack 0
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           prodh	equ	0xFF4
  3320                           prodl	equ	0xFF3
  3321                           intcon	equ	0xFF2
  3322                           postinc0	equ	0xFEE
  3323                           wreg	equ	0xFE8
  3324                           indf1	equ	0xFE7
  3325                           postdec1	equ	0xFE5
  3326                           fsr1h	equ	0xFE2
  3327                           fsr1l	equ	0xFE1
  3328                           indf2	equ	0xFDF
  3329                           fsr2h	equ	0xFDA
  3330                           fsr2l	equ	0xFD9
  3331                           status	equ	0xFD8
  3332                           
  3333 ;; *************** function _button_hash *****************
  3334 ;; Defined at:
  3335 ;;		line 793 in file "main.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;		None               void
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    9
  3356 ;; This function calls:
  3357 ;;		_activity_home
  3358 ;;		_pin_input_validator
  3359 ;;		_pin_set
  3360 ;;		_reset_home_callback
  3361 ;; This function is called by:
  3362 ;;		_keyboard_control
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text13
  3367  00E4A6                     __ptext13:
  3368                           	opt stack 0
  3369  00E4A6                     _button_hash:
  3370                           	opt stack 20
  3371                           
  3372                           ;main.c: 795: reset_home_callback();
  3373                           
  3374                           ;incstack = 0
  3375  00E4A6  EC83  F070         	call	_reset_home_callback	;wreg free
  3376                           
  3377                           ;main.c: 797: if(activity == 1){
  3378  00E4AA  0429               	decf	_activity,w,c
  3379  00E4AC  102A               	iorwf	_activity+1,w,c
  3380  00E4AE  A4D8               	btfss	status,2,c
  3381  00E4B0  D003               	goto	l4103
  3382                           
  3383                           ;main.c: 798: pin_input_validator();
  3384  00E4B2  ECC9  F071         	call	_pin_input_validator	;wreg free
  3385                           
  3386                           ;main.c: 799: }
  3387  00E4B6  0012               	return	
  3388  00E4B8                     l4103:
  3389                           
  3390                           ;main.c: 800: else if(activity == 6){
  3391  00E4B8  0E06               	movlw	6
  3392  00E4BA  1829               	xorwf	_activity,w,c
  3393  00E4BC  102A               	iorwf	_activity+1,w,c
  3394  00E4BE  A4D8               	btfss	status,2,c
  3395  00E4C0  D003               	goto	l4107
  3396                           
  3397                           ;main.c: 801: pin_set();
  3398  00E4C2  ECD2  F070         	call	_pin_set	;wreg free
  3399                           
  3400                           ;main.c: 802: }
  3401  00E4C6  0012               	return	
  3402  00E4C8                     l4107:
  3403                           
  3404                           ;main.c: 803: else if(activity == 10 || activity == 11){
  3405  00E4C8  0E0A               	movlw	10
  3406  00E4CA  1829               	xorwf	_activity,w,c
  3407  00E4CC  102A               	iorwf	_activity+1,w,c
  3408  00E4CE  B4D8               	btfsc	status,2,c
  3409  00E4D0  D005               	goto	l4111
  3410  00E4D2  0E0B               	movlw	11
  3411  00E4D4  1829               	xorwf	_activity,w,c
  3412  00E4D6  102A               	iorwf	_activity+1,w,c
  3413  00E4D8  A4D8               	btfss	status,2,c
  3414  00E4DA  0012               	return	
  3415  00E4DC                     l4111:
  3416                           
  3417                           ;main.c: 804: activity_home();
  3418  00E4DC  EC24  F071         	call	_activity_home	;wreg free
  3419  00E4E0  0012               	return	
  3420  00E4E2  0012               	return		;funcret
  3421  00E4E4                     __end_of_button_hash:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           prodh	equ	0xFF4
  3428                           prodl	equ	0xFF3
  3429                           intcon	equ	0xFF2
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           indf1	equ	0xFE7
  3433                           postdec1	equ	0xFE5
  3434                           fsr1h	equ	0xFE2
  3435                           fsr1l	equ	0xFE1
  3436                           indf2	equ	0xFDF
  3437                           fsr2h	equ	0xFDA
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8
  3440                           
  3441 ;; *************** function _pin_set *****************
  3442 ;; Defined at:
  3443 ;;		line 448 in file "main.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;		None               void
  3450 ;; Registers used:
  3451 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    7
  3464 ;; This function calls:
  3465 ;;		_activity_home
  3466 ;;		_strcpy
  3467 ;; This function is called by:
  3468 ;;		_button_hash
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text14
  3473  00E1A4                     __ptext14:
  3474                           	opt stack 0
  3475  00E1A4                     _pin_set:
  3476                           	opt stack 21
  3477                           
  3478                           ;main.c: 450: strcpy(pin, pin_input);
  3479                           
  3480                           ;incstack = 0
  3481  00E1A4  0E9A               	movlw	low _pin
  3482  00E1A6  6E01               	movwf	strcpy@to,c
  3483  00E1A8  0E00               	movlw	high _pin
  3484  00E1AA  6E02               	movwf	strcpy@to+1,c
  3485  00E1AC  0E9F               	movlw	low _pin_input
  3486  00E1AE  6E03               	movwf	strcpy@from,c
  3487  00E1B0  0E00               	movlw	high _pin_input
  3488  00E1B2  6E04               	movwf	strcpy@from+1,c
  3489  00E1B4  EC9E  F073         	call	_strcpy	;wreg free
  3490                           
  3491                           ;main.c: 451: activity_home();
  3492  00E1B8  EC24  F071         	call	_activity_home	;wreg free
  3493  00E1BC  0012               	return		;funcret
  3494  00E1BE                     __end_of_pin_set:
  3495                           	opt stack 0
  3496                           tblptru	equ	0xFF8
  3497                           tblptrh	equ	0xFF7
  3498                           tblptrl	equ	0xFF6
  3499                           tablat	equ	0xFF5
  3500                           prodh	equ	0xFF4
  3501                           prodl	equ	0xFF3
  3502                           intcon	equ	0xFF2
  3503                           postinc0	equ	0xFEE
  3504                           wreg	equ	0xFE8
  3505                           indf1	equ	0xFE7
  3506                           postdec1	equ	0xFE5
  3507                           fsr1h	equ	0xFE2
  3508                           fsr1l	equ	0xFE1
  3509                           indf2	equ	0xFDF
  3510                           fsr2h	equ	0xFDA
  3511                           fsr2l	equ	0xFD9
  3512                           status	equ	0xFD8
  3513                           
  3514 ;; *************** function _pin_input_validator *****************
  3515 ;; Defined at:
  3516 ;;		line 455 in file "main.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;		None               void
  3523 ;; Registers used:
  3524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3534 ;;Total ram usage:        0 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    8
  3537 ;; This function calls:
  3538 ;;		_activity_menu
  3539 ;;		_activity_pin
  3540 ;;		_strcmp
  3541 ;; This function is called by:
  3542 ;;		_button_hash
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text15
  3547  00E392                     __ptext15:
  3548                           	opt stack 0
  3549  00E392                     _pin_input_validator:
  3550                           	opt stack 20
  3551                           
  3552                           ;main.c: 457: if( strcmp(pin, pin_input) == 0 ){
  3553                           
  3554                           ;incstack = 0
  3555  00E392  0E9A               	movlw	low _pin
  3556  00E394  6E01               	movwf	strcmp@s1,c
  3557  00E396  0E00               	movlw	high _pin
  3558  00E398  6E02               	movwf	strcmp@s1+1,c
  3559  00E39A  0E9F               	movlw	low _pin_input
  3560  00E39C  6E03               	movwf	strcmp@s2,c
  3561  00E39E  0E00               	movlw	high _pin_input
  3562  00E3A0  6E04               	movwf	strcmp@s2+1,c
  3563  00E3A2  ECED  F074         	call	_strcmp	;wreg free
  3564  00E3A6  5001               	movf	?_strcmp,w,c
  3565  00E3A8  1002               	iorwf	?_strcmp+1,w,c
  3566  00E3AA  A4D8               	btfss	status,2,c
  3567  00E3AC  D007               	goto	l3823
  3568                           
  3569                           ;main.c: 458: state = 0;
  3570  00E3AE  0E00               	movlw	0
  3571  00E3B0  6E42               	movwf	_state+1,c
  3572  00E3B2  0E00               	movlw	0
  3573  00E3B4  6E41               	movwf	_state,c
  3574                           
  3575                           ;main.c: 459: activity_menu();
  3576  00E3B6  EC30  F079         	call	_activity_menu	;wreg free
  3577                           
  3578                           ;main.c: 460: }
  3579  00E3BA  0012               	return	
  3580  00E3BC                     l3823:
  3581                           
  3582                           ;main.c: 461: else {
  3583                           ;main.c: 462: activity_pin();
  3584  00E3BC  EC9F  F074         	call	_activity_pin	;wreg free
  3585  00E3C0  0012               	return	
  3586  00E3C2  0012               	return		;funcret
  3587  00E3C4                     __end_of_pin_input_validator:
  3588                           	opt stack 0
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           intcon	equ	0xFF2
  3596                           postinc0	equ	0xFEE
  3597                           wreg	equ	0xFE8
  3598                           indf1	equ	0xFE7
  3599                           postdec1	equ	0xFE5
  3600                           fsr1h	equ	0xFE2
  3601                           fsr1l	equ	0xFE1
  3602                           indf2	equ	0xFDF
  3603                           fsr2h	equ	0xFDA
  3604                           fsr2l	equ	0xFD9
  3605                           status	equ	0xFD8
  3606                           
  3607 ;; *************** function _strcmp *****************
  3608 ;; Defined at:
  3609 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  3612 ;;		 -> pin(5), 
  3613 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  3614 ;;		 -> pin_input(5), 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  r               1    5[COMRAM] char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2    0[COMRAM] int 
  3619 ;; Registers used:
  3620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3630 ;;Total ram usage:        6 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_pin_input_validator
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text16
  3640  00E9DA                     __ptext16:
  3641                           	opt stack 0
  3642  00E9DA                     _strcmp:
  3643                           	opt stack 27
  3644                           
  3645                           ;incstack = 0
  3646  00E9DA  D005               	goto	l3695
  3647  00E9DC                     l3693:
  3648  00E9DC  4A01               	infsnz	strcmp@s1,f,c
  3649  00E9DE  2A02               	incf	strcmp@s1+1,f,c
  3650  00E9E0  4A03               	infsnz	strcmp@s2,f,c
  3651  00E9E2  2A04               	incf	strcmp@s2+1,f,c
  3652  00E9E4  D000               	goto	l3695
  3653  00E9E6                     l3695:
  3654  00E9E6  C001  FFD9         	movff	strcmp@s1,fsr2l
  3655  00E9EA  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  3656  00E9EE  50DF               	movf	indf2,w,c
  3657  00E9F0  6E05               	movwf	??_strcmp& (0+255),c
  3658  00E9F2  C003  FFD9         	movff	strcmp@s2,fsr2l
  3659  00E9F6  C004  FFDA         	movff	strcmp@s2+1,fsr2h
  3660  00E9FA  50DF               	movf	indf2,w,c
  3661  00E9FC  0800               	sublw	0
  3662  00E9FE  2405               	addwf	??_strcmp,w,c
  3663  00EA00  6E06               	movwf	strcmp@r,c
  3664  00EA02  5006               	movf	strcmp@r,w,c
  3665  00EA04  A4D8               	btfss	status,2,c
  3666  00EA06  D009               	goto	l3699
  3667  00EA08  C001  FFD9         	movff	strcmp@s1,fsr2l
  3668  00EA0C  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  3669  00EA10  50DF               	movf	indf2,w,c
  3670  00EA12  B4D8               	btfsc	status,2,c
  3671  00EA14  D002               	goto	l3699
  3672  00EA16  D7E2               	goto	l3693
  3673  00EA18  D000               	goto	l3699
  3674  00EA1A                     l3699:
  3675  00EA1A  5006               	movf	strcmp@r,w,c
  3676  00EA1C  6E01               	movwf	?_strcmp,c
  3677  00EA1E  6A02               	clrf	?_strcmp+1,c
  3678  00EA20  BE01               	btfsc	?_strcmp,7,c
  3679  00EA22  0602               	decf	?_strcmp+1,f,c
  3680  00EA24  0012               	return	
  3681  00EA26  0012               	return		;funcret
  3682  00EA28                     __end_of_strcmp:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           indf1	equ	0xFE7
  3694                           postdec1	equ	0xFE5
  3695                           fsr1h	equ	0xFE2
  3696                           fsr1l	equ	0xFE1
  3697                           indf2	equ	0xFDF
  3698                           fsr2h	equ	0xFDA
  3699                           fsr2l	equ	0xFD9
  3700                           status	equ	0xFD8
  3701                           
  3702 ;; *************** function _button_asterisk *****************
  3703 ;; Defined at:
  3704 ;;		line 782 in file "main.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;		None               void
  3711 ;; Registers used:
  3712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    7
  3725 ;; This function calls:
  3726 ;;		_activity_triggered_alarm
  3727 ;; This function is called by:
  3728 ;;		_keyboard_control
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text17
  3733  00E18C                     __ptext17:
  3734                           	opt stack 0
  3735  00E18C                     _button_asterisk:
  3736                           	opt stack 22
  3737                           
  3738                           ;main.c: 784: if(state == 1){
  3739                           
  3740                           ;incstack = 0
  3741  00E18C  0441               	decf	_state,w,c
  3742  00E18E  1042               	iorwf	_state+1,w,c
  3743  00E190  A4D8               	btfss	status,2,c
  3744  00E192  0012               	return	
  3745                           
  3746                           ;main.c: 786: state = 2;
  3747  00E194  0E00               	movlw	0
  3748  00E196  6E42               	movwf	_state+1,c
  3749  00E198  0E02               	movlw	2
  3750  00E19A  6E41               	movwf	_state,c
  3751                           
  3752                           ;main.c: 787: activity_triggered_alarm();
  3753  00E19C  EC7B  F073         	call	_activity_triggered_alarm	;wreg free
  3754  00E1A0  0012               	return	
  3755  00E1A2  0012               	return		;funcret
  3756  00E1A4                     __end_of_button_asterisk:
  3757                           	opt stack 0
  3758                           tblptru	equ	0xFF8
  3759                           tblptrh	equ	0xFF7
  3760                           tblptrl	equ	0xFF6
  3761                           tablat	equ	0xFF5
  3762                           prodh	equ	0xFF4
  3763                           prodl	equ	0xFF3
  3764                           intcon	equ	0xFF2
  3765                           postinc0	equ	0xFEE
  3766                           wreg	equ	0xFE8
  3767                           indf1	equ	0xFE7
  3768                           postdec1	equ	0xFE5
  3769                           fsr1h	equ	0xFE2
  3770                           fsr1l	equ	0xFE1
  3771                           indf2	equ	0xFDF
  3772                           fsr2h	equ	0xFDA
  3773                           fsr2l	equ	0xFD9
  3774                           status	equ	0xFD8
  3775                           
  3776 ;; *************** function _button_D *****************
  3777 ;; Defined at:
  3778 ;;		line 770 in file "main.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;		None               void
  3785 ;; Registers used:
  3786 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    7
  3799 ;; This function calls:
  3800 ;;		_activity_home
  3801 ;;		_activity_pin
  3802 ;;		_reset_home_callback
  3803 ;; This function is called by:
  3804 ;;		_keyboard_control
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text18
  3809  00E1BE                     __ptext18:
  3810                           	opt stack 0
  3811  00E1BE                     _button_D:
  3812                           	opt stack 22
  3813                           
  3814                           ;main.c: 772: if(state == 2){
  3815                           
  3816                           ;incstack = 0
  3817  00E1BE  0E02               	movlw	2
  3818  00E1C0  1841               	xorwf	_state,w,c
  3819  00E1C2  1042               	iorwf	_state+1,w,c
  3820  00E1C4  A4D8               	btfss	status,2,c
  3821  00E1C6  D003               	goto	l4087
  3822                           
  3823                           ;main.c: 773: activity_pin();
  3824  00E1C8  EC9F  F074         	call	_activity_pin	;wreg free
  3825                           
  3826                           ;main.c: 774: } else{
  3827  00E1CC  0012               	return	
  3828  00E1CE                     l4087:
  3829                           
  3830                           ;main.c: 776: reset_home_callback();
  3831  00E1CE  EC83  F070         	call	_reset_home_callback	;wreg free
  3832                           
  3833                           ;main.c: 777: activity_home();
  3834  00E1D2  EC24  F071         	call	_activity_home	;wreg free
  3835  00E1D6  0012               	return	
  3836  00E1D8  0012               	return		;funcret
  3837  00E1DA                     __end_of_button_D:
  3838                           	opt stack 0
  3839                           tblptru	equ	0xFF8
  3840                           tblptrh	equ	0xFF7
  3841                           tblptrl	equ	0xFF6
  3842                           tablat	equ	0xFF5
  3843                           prodh	equ	0xFF4
  3844                           prodl	equ	0xFF3
  3845                           intcon	equ	0xFF2
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           indf1	equ	0xFE7
  3849                           postdec1	equ	0xFE5
  3850                           fsr1h	equ	0xFE2
  3851                           fsr1l	equ	0xFE1
  3852                           indf2	equ	0xFDF
  3853                           fsr2h	equ	0xFDA
  3854                           fsr2l	equ	0xFD9
  3855                           status	equ	0xFD8
  3856                           
  3857 ;; *************** function _button_C *****************
  3858 ;; Defined at:
  3859 ;;		line 756 in file "main.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;		None               void
  3866 ;; Registers used:
  3867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    8
  3880 ;; This function calls:
  3881 ;;		_activity_menu
  3882 ;;		_activity_pin
  3883 ;;		_reset_home_callback
  3884 ;; This function is called by:
  3885 ;;		_keyboard_control
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text19
  3890  00E272                     __ptext19:
  3891                           	opt stack 0
  3892  00E272                     _button_C:
  3893                           	opt stack 21
  3894                           
  3895                           ;main.c: 759: reset_home_callback();
  3896                           
  3897                           ;incstack = 0
  3898  00E272  EC83  F070         	call	_reset_home_callback	;wreg free
  3899                           
  3900                           ;main.c: 761: if(activity == 12){
  3901  00E276  0E0C               	movlw	12
  3902  00E278  1829               	xorwf	_activity,w,c
  3903  00E27A  102A               	iorwf	_activity+1,w,c
  3904  00E27C  A4D8               	btfss	status,2,c
  3905  00E27E  D003               	goto	l4077
  3906                           
  3907                           ;main.c: 762: activity_pin();
  3908  00E280  EC9F  F074         	call	_activity_pin	;wreg free
  3909                           
  3910                           ;main.c: 763: }
  3911  00E284  0012               	return	
  3912  00E286                     l4077:
  3913                           
  3914                           ;main.c: 764: else if (activity != 0 && activity != 1){
  3915  00E286  5029               	movf	_activity,w,c
  3916  00E288  102A               	iorwf	_activity+1,w,c
  3917  00E28A  B4D8               	btfsc	status,2,c
  3918  00E28C  0012               	return	
  3919  00E28E  0429               	decf	_activity,w,c
  3920  00E290  102A               	iorwf	_activity+1,w,c
  3921  00E292  B4D8               	btfsc	status,2,c
  3922  00E294  0012               	return	
  3923                           
  3924                           ;main.c: 765: activity_menu();
  3925  00E296  EC30  F079         	call	_activity_menu	;wreg free
  3926  00E29A  0012               	return	
  3927  00E29C  0012               	return		;funcret
  3928  00E29E                     __end_of_button_C:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           indf1	equ	0xFE7
  3940                           postdec1	equ	0xFE5
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _activity_menu *****************
  3949 ;; Defined at:
  3950 ;;		line 225 in file "main.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    7
  3971 ;; This function calls:
  3972 ;;		_lcd_init
  3973 ;;		_lcd_write
  3974 ;;		_menu_selector_0
  3975 ;; This function is called by:
  3976 ;;		_pin_input_validator
  3977 ;;		_button_C
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text20
  3982  00F260                     __ptext20:
  3983                           	opt stack 0
  3984  00F260                     _activity_menu:
  3985                           	opt stack 20
  3986                           
  3987                           ;main.c: 227: activity = 2;
  3988                           
  3989                           ;incstack = 0
  3990  00F260  0E00               	movlw	0
  3991  00F262  6E2A               	movwf	_activity+1,c
  3992  00F264  0E02               	movlw	2
  3993  00F266  6E29               	movwf	_activity,c
  3994                           
  3995                           ;main.c: 228: lcd_init();
  3996  00F268  EC2E  F078         	call	_lcd_init	;wreg free
  3997                           
  3998                           ;main.c: 229: lcd_write(2,1,"Activar");
  3999  00F26C  0E00               	movlw	0
  4000  00F26E  6E0C               	movwf	lcd_write@column+1,c
  4001  00F270  0E02               	movlw	2
  4002  00F272  6E0B               	movwf	lcd_write@column,c
  4003  00F274  0E00               	movlw	0
  4004  00F276  6E0E               	movwf	lcd_write@row+1,c
  4005  00F278  0E01               	movlw	1
  4006  00F27A  6E0D               	movwf	lcd_write@row,c
  4007  00F27C  0E67               	movlw	low STR_18
  4008  00F27E  6E0F               	movwf	lcd_write@string,c
  4009  00F280  0EFF               	movlw	high STR_18
  4010  00F282  6E10               	movwf	lcd_write@string+1,c
  4011  00F284  ECBA  F070         	call	_lcd_write	;wreg free
  4012                           
  4013                           ;main.c: 230: lcd_write(2,2,"Reloj");
  4014  00F288  0E00               	movlw	0
  4015  00F28A  6E0C               	movwf	lcd_write@column+1,c
  4016  00F28C  0E02               	movlw	2
  4017  00F28E  6E0B               	movwf	lcd_write@column,c
  4018  00F290  0E00               	movlw	0
  4019  00F292  6E0E               	movwf	lcd_write@row+1,c
  4020  00F294  0E02               	movlw	2
  4021  00F296  6E0D               	movwf	lcd_write@row,c
  4022  00F298  0EBB               	movlw	low STR_19
  4023  00F29A  6E0F               	movwf	lcd_write@string,c
  4024  00F29C  0EFF               	movlw	high STR_19
  4025  00F29E  6E10               	movwf	lcd_write@string+1,c
  4026  00F2A0  ECBA  F070         	call	_lcd_write	;wreg free
  4027                           
  4028                           ;main.c: 231: lcd_write(10,1,"Pin");
  4029  00F2A4  0E00               	movlw	0
  4030  00F2A6  6E0C               	movwf	lcd_write@column+1,c
  4031  00F2A8  0E0A               	movlw	10
  4032  00F2AA  6E0B               	movwf	lcd_write@column,c
  4033  00F2AC  0E00               	movlw	0
  4034  00F2AE  6E0E               	movwf	lcd_write@row+1,c
  4035  00F2B0  0E01               	movlw	1
  4036  00F2B2  6E0D               	movwf	lcd_write@row,c
  4037  00F2B4  0EE9               	movlw	low STR_20
  4038  00F2B6  6E0F               	movwf	lcd_write@string,c
  4039  00F2B8  0EFF               	movlw	high STR_20
  4040  00F2BA  6E10               	movwf	lcd_write@string+1,c
  4041  00F2BC  ECBA  F070         	call	_lcd_write	;wreg free
  4042                           
  4043                           ;main.c: 232: lcd_write(10,2,"Alarma");
  4044  00F2C0  0E00               	movlw	0
  4045  00F2C2  6E0C               	movwf	lcd_write@column+1,c
  4046  00F2C4  0E0A               	movlw	10
  4047  00F2C6  6E0B               	movwf	lcd_write@column,c
  4048  00F2C8  0E00               	movlw	0
  4049  00F2CA  6E0E               	movwf	lcd_write@row+1,c
  4050  00F2CC  0E02               	movlw	2
  4051  00F2CE  6E0D               	movwf	lcd_write@row,c
  4052  00F2D0  0EA7               	movlw	low STR_21
  4053  00F2D2  6E0F               	movwf	lcd_write@string,c
  4054  00F2D4  0EFF               	movlw	high STR_21
  4055  00F2D6  6E10               	movwf	lcd_write@string+1,c
  4056  00F2D8  ECBA  F070         	call	_lcd_write	;wreg free
  4057                           
  4058                           ;main.c: 233: menu_selector_0();
  4059  00F2DC  EC72  F072         	call	_menu_selector_0	;wreg free
  4060  00F2E0  0012               	return		;funcret
  4061  00F2E2                     __end_of_activity_menu:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           intcon	equ	0xFF2
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           indf1	equ	0xFE7
  4073                           postdec1	equ	0xFE5
  4074                           fsr1h	equ	0xFE2
  4075                           fsr1l	equ	0xFE1
  4076                           indf2	equ	0xFDF
  4077                           fsr2h	equ	0xFDA
  4078                           fsr2l	equ	0xFD9
  4079                           status	equ	0xFD8
  4080                           
  4081 ;; *************** function _button_B *****************
  4082 ;; Defined at:
  4083 ;;		line 714 in file "main.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;		None               void
  4090 ;; Registers used:
  4091 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4101 ;;Total ram usage:        2 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    9
  4104 ;; This function calls:
  4105 ;;		_activity_pin
  4106 ;;		_button_B_menu
  4107 ;;		_button_B_submenu_activation
  4108 ;;		_button_B_submenu_date_and_time_config
  4109 ;;		_button_B_submenu_pin_config
  4110 ;;		_button_B_submenu_siren_config
  4111 ;;		_button_B_submenu_siren_tone
  4112 ;;		_button_B_submenu_siren_volume
  4113 ;;		_reset_home_callback
  4114 ;; This function is called by:
  4115 ;;		_keyboard_control
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text21
  4120  00EF64                     __ptext21:
  4121                           	opt stack 0
  4122  00EF64                     _button_B:
  4123                           	opt stack 20
  4124                           
  4125                           ;main.c: 716: reset_home_callback();
  4126                           
  4127                           ;incstack = 0
  4128  00EF64  EC83  F070         	call	_reset_home_callback	;wreg free
  4129                           
  4130                           ;main.c: 718: switch(activity){
  4131  00EF68  D018               	goto	l4065
  4132  00EF6A                     l4047:
  4133                           
  4134                           ;main.c: 721: button_B_menu();
  4135  00EF6A  ECE5  F073         	call	_button_B_menu	;wreg free
  4136                           
  4137                           ;main.c: 722: break;
  4138  00EF6E  0012               	return	
  4139  00EF70                     l4049:
  4140                           
  4141                           ;main.c: 725: button_B_submenu_date_and_time_config();
  4142  00EF70  EC67  F071         	call	_button_B_submenu_date_and_time_config	;wreg free
  4143                           
  4144                           ;main.c: 726: break;
  4145  00EF74  0012               	return	
  4146  00EF76                     l4051:
  4147                           
  4148                           ;main.c: 729: button_B_submenu_activation();
  4149  00EF76  ECFC  F071         	call	_button_B_submenu_activation	;wreg free
  4150                           
  4151                           ;main.c: 730: break;
  4152  00EF7A  0012               	return	
  4153  00EF7C                     l4053:
  4154                           
  4155                           ;main.c: 733: button_B_submenu_pin_config();
  4156  00EF7C  ECE2  F071         	call	_button_B_submenu_pin_config	;wreg free
  4157                           
  4158                           ;main.c: 734: break;
  4159  00EF80  0012               	return	
  4160  00EF82                     l4055:
  4161                           
  4162                           ;main.c: 737: button_B_submenu_siren_config();
  4163  00EF82  EC7F  F071         	call	_button_B_submenu_siren_config	;wreg free
  4164                           
  4165                           ;main.c: 738: break;
  4166  00EF86  0012               	return	
  4167  00EF88                     l4057:
  4168                           
  4169                           ;main.c: 741: button_B_submenu_siren_volume();
  4170  00EF88  EC36  F072         	call	_button_B_submenu_siren_volume	;wreg free
  4171                           
  4172                           ;main.c: 742: break;
  4173  00EF8C  0012               	return	
  4174  00EF8E                     l4059:
  4175                           
  4176                           ;main.c: 745: button_B_submenu_siren_tone();
  4177  00EF8E  EC19  F072         	call	_button_B_submenu_siren_tone	;wreg free
  4178                           
  4179                           ;main.c: 746: break;
  4180  00EF92  0012               	return	
  4181  00EF94                     l4061:
  4182                           
  4183                           ;main.c: 749: activity_pin();
  4184  00EF94  EC9F  F074         	call	_activity_pin	;wreg free
  4185                           
  4186                           ;main.c: 752: }
  4187                           
  4188                           ;main.c: 750: break;
  4189  00EF98  0012               	return	
  4190  00EF9A                     l4065:
  4191  00EF9A  C029  F026         	movff	_activity,??_button_B
  4192  00EF9E  C02A  F027         	movff	_activity+1,??_button_B+1
  4193                           
  4194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4195                           ; Switch size 1, requested type "space"
  4196                           ; Number of cases is 1, Range of values is 0 to 0
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte            4     3 (average)
  4200                           ;	Chosen strategy is simple_byte
  4201  00EFA2  5027               	movf	??_button_B+1,w,c
  4202  00EFA4  0A00               	xorlw	0	; case 0
  4203  00EFA6  A4D8               	btfss	status,2,c
  4204  00EFA8  0012               	return	
  4205                           
  4206                           ; Switch size 1, requested type "space"
  4207                           ; Number of cases is 8, Range of values is 2 to 12
  4208                           ; switch strategies available:
  4209                           ; Name         Instructions Cycles
  4210                           ; simple_byte           25    13 (average)
  4211                           ;	Chosen strategy is simple_byte
  4212  00EFAA  5026               	movf	??_button_B,w,c
  4213  00EFAC  0A02               	xorlw	2	; case 2
  4214  00EFAE  B4D8               	btfsc	status,2,c
  4215  00EFB0  D7DC               	goto	l4047
  4216  00EFB2  0A01               	xorlw	1	; case 3
  4217  00EFB4  B4D8               	btfsc	status,2,c
  4218  00EFB6  D7DC               	goto	l4049
  4219  00EFB8  0A07               	xorlw	7	; case 4
  4220  00EFBA  B4D8               	btfsc	status,2,c
  4221  00EFBC  D7DC               	goto	l4051
  4222  00EFBE  0A01               	xorlw	1	; case 5
  4223  00EFC0  B4D8               	btfsc	status,2,c
  4224  00EFC2  D7DC               	goto	l4053
  4225  00EFC4  0A02               	xorlw	2	; case 7
  4226  00EFC6  B4D8               	btfsc	status,2,c
  4227  00EFC8  D7DC               	goto	l4055
  4228  00EFCA  0A0F               	xorlw	15	; case 8
  4229  00EFCC  B4D8               	btfsc	status,2,c
  4230  00EFCE  D7DC               	goto	l4057
  4231  00EFD0  0A01               	xorlw	1	; case 9
  4232  00EFD2  B4D8               	btfsc	status,2,c
  4233  00EFD4  D7DC               	goto	l4059
  4234  00EFD6  0A05               	xorlw	5	; case 12
  4235  00EFD8  A4D8               	btfss	status,2,c
  4236  00EFDA  0012               	return	
  4237  00EFDC  D7DB               	goto	l4061
  4238  00EFDE  0012               	return		;funcret
  4239  00EFE0                     __end_of_button_B:
  4240                           	opt stack 0
  4241                           tblptru	equ	0xFF8
  4242                           tblptrh	equ	0xFF7
  4243                           tblptrl	equ	0xFF6
  4244                           tablat	equ	0xFF5
  4245                           prodh	equ	0xFF4
  4246                           prodl	equ	0xFF3
  4247                           intcon	equ	0xFF2
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           indf1	equ	0xFE7
  4251                           postdec1	equ	0xFE5
  4252                           fsr1h	equ	0xFE2
  4253                           fsr1l	equ	0xFE1
  4254                           indf2	equ	0xFDF
  4255                           fsr2h	equ	0xFDA
  4256                           fsr2l	equ	0xFD9
  4257                           status	equ	0xFD8
  4258                           
  4259 ;; *************** function _button_B_submenu_siren_volume *****************
  4260 ;; Defined at:
  4261 ;;		line 662 in file "main.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;		None
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;		None               void
  4268 ;; Registers used:
  4269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4279 ;;Total ram usage:        2 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    7
  4282 ;; This function calls:
  4283 ;;		_activity_home
  4284 ;; This function is called by:
  4285 ;;		_button_B
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text22
  4290  00E46C                     __ptext22:
  4291                           	opt stack 0
  4292  00E46C                     _button_B_submenu_siren_volume:
  4293                           	opt stack 21
  4294                           
  4295                           ;main.c: 664: switch(submenu_selected){
  4296                           
  4297                           ;incstack = 0
  4298  00E46C  D009               	goto	l3897
  4299  00E46E                     l3891:
  4300                           
  4301                           ;main.c: 667: alarm_volume = 0;
  4302  00E46E  0E00               	movlw	0
  4303  00E470  6E2E               	movwf	_alarm_volume+1,c
  4304  00E472  0E00               	movlw	0
  4305  00E474  D003               	goto	L1
  4306  00E476                     l3893:
  4307                           
  4308                           ;main.c: 671: alarm_volume = 1;
  4309  00E476  0E00               	movlw	0
  4310  00E478  6E2E               	movwf	_alarm_volume+1,c
  4311  00E47A  0E01               	movlw	1
  4312  00E47C                     L1:
  4313  00E47C  6E2D               	movwf	_alarm_volume,c
  4314                           
  4315                           ;main.c: 674: }
  4316                           
  4317                           ;main.c: 672: break;
  4318  00E47E  D010               	goto	l3899
  4319  00E480                     l3897:
  4320  00E480  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_volume
  4321  00E484  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_volume+1
  4322                           
  4323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4324                           ; Switch size 1, requested type "space"
  4325                           ; Number of cases is 1, Range of values is 0 to 0
  4326                           ; switch strategies available:
  4327                           ; Name         Instructions Cycles
  4328                           ; simple_byte            4     3 (average)
  4329                           ;	Chosen strategy is simple_byte
  4330  00E488  5012               	movf	??_button_B_submenu_siren_volume+1,w,c
  4331  00E48A  0A00               	xorlw	0	; case 0
  4332  00E48C  A4D8               	btfss	status,2,c
  4333  00E48E  D008               	goto	l3899
  4334                           
  4335                           ; Switch size 1, requested type "space"
  4336                           ; Number of cases is 2, Range of values is 0 to 1
  4337                           ; switch strategies available:
  4338                           ; Name         Instructions Cycles
  4339                           ; simple_byte            7     4 (average)
  4340                           ;	Chosen strategy is simple_byte
  4341  00E490  5011               	movf	??_button_B_submenu_siren_volume,w,c
  4342  00E492  0A00               	xorlw	0	; case 0
  4343  00E494  B4D8               	btfsc	status,2,c
  4344  00E496  D7EB               	goto	l3891
  4345  00E498  0A01               	xorlw	1	; case 1
  4346  00E49A  B4D8               	btfsc	status,2,c
  4347  00E49C  D7EC               	goto	l3893
  4348  00E49E  D000               	goto	l3899
  4349  00E4A0                     l3899:
  4350                           
  4351                           ;main.c: 676: activity_home();
  4352  00E4A0  EC24  F071         	call	_activity_home	;wreg free
  4353  00E4A4  0012               	return		;funcret
  4354  00E4A6                     __end_of_button_B_submenu_siren_volume:
  4355                           	opt stack 0
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           prodh	equ	0xFF4
  4361                           prodl	equ	0xFF3
  4362                           intcon	equ	0xFF2
  4363                           postinc0	equ	0xFEE
  4364                           wreg	equ	0xFE8
  4365                           indf1	equ	0xFE7
  4366                           postdec1	equ	0xFE5
  4367                           fsr1h	equ	0xFE2
  4368                           fsr1l	equ	0xFE1
  4369                           indf2	equ	0xFDF
  4370                           fsr2h	equ	0xFDA
  4371                           fsr2l	equ	0xFD9
  4372                           status	equ	0xFD8
  4373                           
  4374 ;; *************** function _button_B_submenu_siren_tone *****************
  4375 ;; Defined at:
  4376 ;;		line 680 in file "main.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;		None               void
  4383 ;; Registers used:
  4384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4394 ;;Total ram usage:        2 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    7
  4397 ;; This function calls:
  4398 ;;		_activity_home
  4399 ;; This function is called by:
  4400 ;;		_button_B
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text23
  4405  00E432                     __ptext23:
  4406                           	opt stack 0
  4407  00E432                     _button_B_submenu_siren_tone:
  4408                           	opt stack 21
  4409                           
  4410                           ;main.c: 682: switch(submenu_selected){
  4411                           
  4412                           ;incstack = 0
  4413  00E432  D009               	goto	l3913
  4414  00E434                     l3907:
  4415                           
  4416                           ;main.c: 685: alarm_tone = 0;
  4417  00E434  0E00               	movlw	0
  4418  00E436  6E2C               	movwf	_alarm_tone+1,c
  4419  00E438  0E00               	movlw	0
  4420  00E43A  D003               	goto	L2
  4421  00E43C                     l3909:
  4422                           
  4423                           ;main.c: 689: alarm_tone = 1;
  4424  00E43C  0E00               	movlw	0
  4425  00E43E  6E2C               	movwf	_alarm_tone+1,c
  4426  00E440  0E01               	movlw	1
  4427  00E442                     L2:
  4428  00E442  6E2B               	movwf	_alarm_tone,c
  4429                           
  4430                           ;main.c: 692: }
  4431                           
  4432                           ;main.c: 690: break;
  4433  00E444  D010               	goto	l3915
  4434  00E446                     l3913:
  4435  00E446  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_tone
  4436  00E44A  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_tone+1
  4437                           
  4438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4439                           ; Switch size 1, requested type "space"
  4440                           ; Number of cases is 1, Range of values is 0 to 0
  4441                           ; switch strategies available:
  4442                           ; Name         Instructions Cycles
  4443                           ; simple_byte            4     3 (average)
  4444                           ;	Chosen strategy is simple_byte
  4445  00E44E  5012               	movf	??_button_B_submenu_siren_tone+1,w,c
  4446  00E450  0A00               	xorlw	0	; case 0
  4447  00E452  A4D8               	btfss	status,2,c
  4448  00E454  D008               	goto	l3915
  4449                           
  4450                           ; Switch size 1, requested type "space"
  4451                           ; Number of cases is 2, Range of values is 0 to 1
  4452                           ; switch strategies available:
  4453                           ; Name         Instructions Cycles
  4454                           ; simple_byte            7     4 (average)
  4455                           ;	Chosen strategy is simple_byte
  4456  00E456  5011               	movf	??_button_B_submenu_siren_tone,w,c
  4457  00E458  0A00               	xorlw	0	; case 0
  4458  00E45A  B4D8               	btfsc	status,2,c
  4459  00E45C  D7EB               	goto	l3907
  4460  00E45E  0A01               	xorlw	1	; case 1
  4461  00E460  B4D8               	btfsc	status,2,c
  4462  00E462  D7EC               	goto	l3909
  4463  00E464  D000               	goto	l3915
  4464  00E466                     l3915:
  4465                           
  4466                           ;main.c: 694: activity_home();
  4467  00E466  EC24  F071         	call	_activity_home	;wreg free
  4468  00E46A  0012               	return		;funcret
  4469  00E46C                     __end_of_button_B_submenu_siren_tone:
  4470                           	opt stack 0
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           prodh	equ	0xFF4
  4476                           prodl	equ	0xFF3
  4477                           intcon	equ	0xFF2
  4478                           postinc0	equ	0xFEE
  4479                           wreg	equ	0xFE8
  4480                           indf1	equ	0xFE7
  4481                           postdec1	equ	0xFE5
  4482                           fsr1h	equ	0xFE2
  4483                           fsr1l	equ	0xFE1
  4484                           indf2	equ	0xFDF
  4485                           fsr2h	equ	0xFDA
  4486                           fsr2l	equ	0xFD9
  4487                           status	equ	0xFD8
  4488                           
  4489 ;; *************** function _button_B_submenu_siren_config *****************
  4490 ;; Defined at:
  4491 ;;		line 646 in file "main.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;		None               void
  4498 ;; Registers used:
  4499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4509 ;;Total ram usage:        2 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    8
  4512 ;; This function calls:
  4513 ;;		_activity_submenu_siren_tone
  4514 ;;		_activity_submenu_siren_volume
  4515 ;; This function is called by:
  4516 ;;		_button_B
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text24
  4521  00E2FE                     __ptext24:
  4522                           	opt stack 0
  4523  00E2FE                     _button_B_submenu_siren_config:
  4524                           	opt stack 20
  4525                           
  4526                           ;main.c: 648: switch(submenu_selected){
  4527                           
  4528                           ;incstack = 0
  4529  00E2FE  D006               	goto	l3883
  4530  00E300                     l3877:
  4531                           
  4532                           ;main.c: 651: activity_submenu_siren_volume();
  4533  00E300  EC0D  F077         	call	_activity_submenu_siren_volume	;wreg free
  4534                           
  4535                           ;main.c: 652: break;
  4536  00E304  0012               	return	
  4537  00E306                     l3879:
  4538                           
  4539                           ;main.c: 655: activity_submenu_siren_tone();
  4540  00E306  ECDA  F076         	call	_activity_submenu_siren_tone	;wreg free
  4541                           
  4542                           ;main.c: 658: }
  4543                           
  4544                           ;main.c: 656: break;
  4545  00E30A  0012               	return	
  4546  00E30C                     l3883:
  4547  00E30C  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_config
  4548  00E310  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_config+1
  4549                           
  4550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4551                           ; Switch size 1, requested type "space"
  4552                           ; Number of cases is 1, Range of values is 0 to 0
  4553                           ; switch strategies available:
  4554                           ; Name         Instructions Cycles
  4555                           ; simple_byte            4     3 (average)
  4556                           ;	Chosen strategy is simple_byte
  4557  00E314  5012               	movf	??_button_B_submenu_siren_config+1,w,c
  4558  00E316  0A00               	xorlw	0	; case 0
  4559  00E318  A4D8               	btfss	status,2,c
  4560  00E31A  0012               	return	
  4561                           
  4562                           ; Switch size 1, requested type "space"
  4563                           ; Number of cases is 2, Range of values is 0 to 1
  4564                           ; switch strategies available:
  4565                           ; Name         Instructions Cycles
  4566                           ; simple_byte            7     4 (average)
  4567                           ;	Chosen strategy is simple_byte
  4568  00E31C  5011               	movf	??_button_B_submenu_siren_config,w,c
  4569  00E31E  0A00               	xorlw	0	; case 0
  4570  00E320  B4D8               	btfsc	status,2,c
  4571  00E322  D7EE               	goto	l3877
  4572  00E324  0A01               	xorlw	1	; case 1
  4573  00E326  A4D8               	btfss	status,2,c
  4574  00E328  0012               	return	
  4575  00E32A  D7ED               	goto	l3879
  4576  00E32C  0012               	return		;funcret
  4577  00E32E                     __end_of_button_B_submenu_siren_config:
  4578                           	opt stack 0
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           intcon	equ	0xFF2
  4586                           postinc0	equ	0xFEE
  4587                           wreg	equ	0xFE8
  4588                           indf1	equ	0xFE7
  4589                           postdec1	equ	0xFE5
  4590                           fsr1h	equ	0xFE2
  4591                           fsr1l	equ	0xFE1
  4592                           indf2	equ	0xFDF
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _activity_submenu_siren_volume *****************
  4598 ;; Defined at:
  4599 ;;		line 401 in file "main.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;		None               void
  4606 ;; Registers used:
  4607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    7
  4620 ;; This function calls:
  4621 ;;		_lcd_init
  4622 ;;		_lcd_write
  4623 ;;		_submenu_selector_0
  4624 ;; This function is called by:
  4625 ;;		_button_B_submenu_siren_config
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text25
  4630  00EE1A                     __ptext25:
  4631                           	opt stack 0
  4632  00EE1A                     _activity_submenu_siren_volume:
  4633                           	opt stack 20
  4634                           
  4635                           ;main.c: 403: activity = 8;
  4636                           
  4637                           ;incstack = 0
  4638  00EE1A  0E00               	movlw	0
  4639  00EE1C  6E2A               	movwf	_activity+1,c
  4640  00EE1E  0E08               	movlw	8
  4641  00EE20  6E29               	movwf	_activity,c
  4642                           
  4643                           ;main.c: 404: lcd_init();
  4644  00EE22  EC2E  F078         	call	_lcd_init	;wreg free
  4645                           
  4646                           ;main.c: 405: lcd_write(1,1,"Volumen");
  4647  00EE26  0E00               	movlw	0
  4648  00EE28  6E0C               	movwf	lcd_write@column+1,c
  4649  00EE2A  0E01               	movlw	1
  4650  00EE2C  6E0B               	movwf	lcd_write@column,c
  4651  00EE2E  0E00               	movlw	0
  4652  00EE30  6E0E               	movwf	lcd_write@row+1,c
  4653  00EE32  0E01               	movlw	1
  4654  00EE34  6E0D               	movwf	lcd_write@row,c
  4655  00EE36  0E57               	movlw	low STR_35
  4656  00EE38  6E0F               	movwf	lcd_write@string,c
  4657  00EE3A  0EFF               	movlw	high STR_35
  4658  00EE3C  6E10               	movwf	lcd_write@string+1,c
  4659  00EE3E  ECBA  F070         	call	_lcd_write	;wreg free
  4660                           
  4661                           ;main.c: 406: lcd_write(10,1,"Bajo");
  4662  00EE42  0E00               	movlw	0
  4663  00EE44  6E0C               	movwf	lcd_write@column+1,c
  4664  00EE46  0E0A               	movlw	10
  4665  00EE48  6E0B               	movwf	lcd_write@column,c
  4666  00EE4A  0E00               	movlw	0
  4667  00EE4C  6E0E               	movwf	lcd_write@row+1,c
  4668  00EE4E  0E01               	movlw	1
  4669  00EE50  6E0D               	movwf	lcd_write@row,c
  4670  00EE52  0ED1               	movlw	low STR_38
  4671  00EE54  6E0F               	movwf	lcd_write@string,c
  4672  00EE56  0EFF               	movlw	high STR_38
  4673  00EE58  6E10               	movwf	lcd_write@string+1,c
  4674  00EE5A  ECBA  F070         	call	_lcd_write	;wreg free
  4675                           
  4676                           ;main.c: 407: lcd_write(10,2,"Alto");
  4677  00EE5E  0E00               	movlw	0
  4678  00EE60  6E0C               	movwf	lcd_write@column+1,c
  4679  00EE62  0E0A               	movlw	10
  4680  00EE64  6E0B               	movwf	lcd_write@column,c
  4681  00EE66  0E00               	movlw	0
  4682  00EE68  6E0E               	movwf	lcd_write@row+1,c
  4683  00EE6A  0E02               	movlw	2
  4684  00EE6C  6E0D               	movwf	lcd_write@row,c
  4685  00EE6E  0EDB               	movlw	low STR_39
  4686  00EE70  6E0F               	movwf	lcd_write@string,c
  4687  00EE72  0EFF               	movlw	high STR_39
  4688  00EE74  6E10               	movwf	lcd_write@string+1,c
  4689  00EE76  ECBA  F070         	call	_lcd_write	;wreg free
  4690                           
  4691                           ;main.c: 408: submenu_selector_0();
  4692  00EE7A  ECF6  F072         	call	_submenu_selector_0	;wreg free
  4693  00EE7E  0012               	return		;funcret
  4694  00EE80                     __end_of_activity_submenu_siren_volume:
  4695                           	opt stack 0
  4696                           tblptru	equ	0xFF8
  4697                           tblptrh	equ	0xFF7
  4698                           tblptrl	equ	0xFF6
  4699                           tablat	equ	0xFF5
  4700                           prodh	equ	0xFF4
  4701                           prodl	equ	0xFF3
  4702                           intcon	equ	0xFF2
  4703                           postinc0	equ	0xFEE
  4704                           wreg	equ	0xFE8
  4705                           indf1	equ	0xFE7
  4706                           postdec1	equ	0xFE5
  4707                           fsr1h	equ	0xFE2
  4708                           fsr1l	equ	0xFE1
  4709                           indf2	equ	0xFDF
  4710                           fsr2h	equ	0xFDA
  4711                           fsr2l	equ	0xFD9
  4712                           status	equ	0xFD8
  4713                           
  4714 ;; *************** function _activity_submenu_siren_tone *****************
  4715 ;; Defined at:
  4716 ;;		line 412 in file "main.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;		None               void
  4723 ;; Registers used:
  4724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    7
  4737 ;; This function calls:
  4738 ;;		_lcd_init
  4739 ;;		_lcd_write
  4740 ;;		_submenu_selector_0
  4741 ;; This function is called by:
  4742 ;;		_button_B_submenu_siren_config
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           	psect	text26
  4747  00EDB4                     __ptext26:
  4748                           	opt stack 0
  4749  00EDB4                     _activity_submenu_siren_tone:
  4750                           	opt stack 20
  4751                           
  4752                           ;main.c: 414: activity = 9;
  4753                           
  4754                           ;incstack = 0
  4755  00EDB4  0E00               	movlw	0
  4756  00EDB6  6E2A               	movwf	_activity+1,c
  4757  00EDB8  0E09               	movlw	9
  4758  00EDBA  6E29               	movwf	_activity,c
  4759                           
  4760                           ;main.c: 415: lcd_init();
  4761  00EDBC  EC2E  F078         	call	_lcd_init	;wreg free
  4762                           
  4763                           ;main.c: 416: lcd_write(1,1,"Tono");
  4764  00EDC0  0E00               	movlw	0
  4765  00EDC2  6E0C               	movwf	lcd_write@column+1,c
  4766  00EDC4  0E01               	movlw	1
  4767  00EDC6  6E0B               	movwf	lcd_write@column,c
  4768  00EDC8  0E00               	movlw	0
  4769  00EDCA  6E0E               	movwf	lcd_write@row+1,c
  4770  00EDCC  0E01               	movlw	1
  4771  00EDCE  6E0D               	movwf	lcd_write@row,c
  4772  00EDD0  0ED6               	movlw	low STR_36
  4773  00EDD2  6E0F               	movwf	lcd_write@string,c
  4774  00EDD4  0EFF               	movlw	high STR_36
  4775  00EDD6  6E10               	movwf	lcd_write@string+1,c
  4776  00EDD8  ECBA  F070         	call	_lcd_write	;wreg free
  4777                           
  4778                           ;main.c: 417: lcd_write(10,1,"Beep 1");
  4779  00EDDC  0E00               	movlw	0
  4780  00EDDE  6E0C               	movwf	lcd_write@column+1,c
  4781  00EDE0  0E0A               	movlw	10
  4782  00EDE2  6E0B               	movwf	lcd_write@column,c
  4783  00EDE4  0E00               	movlw	0
  4784  00EDE6  6E0E               	movwf	lcd_write@row+1,c
  4785  00EDE8  0E01               	movlw	1
  4786  00EDEA  6E0D               	movwf	lcd_write@row,c
  4787  00EDEC  0E6F               	movlw	low STR_41
  4788  00EDEE  6E0F               	movwf	lcd_write@string,c
  4789  00EDF0  0EFF               	movlw	high STR_41
  4790  00EDF2  6E10               	movwf	lcd_write@string+1,c
  4791  00EDF4  ECBA  F070         	call	_lcd_write	;wreg free
  4792                           
  4793                           ;main.c: 418: lcd_write(10,2,"Beep 2");
  4794  00EDF8  0E00               	movlw	0
  4795  00EDFA  6E0C               	movwf	lcd_write@column+1,c
  4796  00EDFC  0E0A               	movlw	10
  4797  00EDFE  6E0B               	movwf	lcd_write@column,c
  4798  00EE00  0E00               	movlw	0
  4799  00EE02  6E0E               	movwf	lcd_write@row+1,c
  4800  00EE04  0E02               	movlw	2
  4801  00EE06  6E0D               	movwf	lcd_write@row,c
  4802  00EE08  0E7D               	movlw	low STR_42
  4803  00EE0A  6E0F               	movwf	lcd_write@string,c
  4804  00EE0C  0EFF               	movlw	high STR_42
  4805  00EE0E  6E10               	movwf	lcd_write@string+1,c
  4806  00EE10  ECBA  F070         	call	_lcd_write	;wreg free
  4807                           
  4808                           ;main.c: 419: submenu_selector_0();
  4809  00EE14  ECF6  F072         	call	_submenu_selector_0	;wreg free
  4810  00EE18  0012               	return		;funcret
  4811  00EE1A                     __end_of_activity_submenu_siren_tone:
  4812                           	opt stack 0
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           intcon	equ	0xFF2
  4820                           postinc0	equ	0xFEE
  4821                           wreg	equ	0xFE8
  4822                           indf1	equ	0xFE7
  4823                           postdec1	equ	0xFE5
  4824                           fsr1h	equ	0xFE2
  4825                           fsr1l	equ	0xFE1
  4826                           indf2	equ	0xFDF
  4827                           fsr2h	equ	0xFDA
  4828                           fsr2l	equ	0xFD9
  4829                           status	equ	0xFD8
  4830                           
  4831 ;; *************** function _button_B_submenu_pin_config *****************
  4832 ;; Defined at:
  4833 ;;		line 629 in file "main.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;		None
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;		None               void
  4840 ;; Registers used:
  4841 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4851 ;;Total ram usage:        2 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    7
  4854 ;; This function calls:
  4855 ;;		_activity_home
  4856 ;;		_activity_submenu_pin_set
  4857 ;;		_pin_reset
  4858 ;; This function is called by:
  4859 ;;		_button_B
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text27
  4864  00E3C4                     __ptext27:
  4865                           	opt stack 0
  4866  00E3C4                     _button_B_submenu_pin_config:
  4867                           	opt stack 21
  4868                           
  4869                           ;main.c: 631: switch(submenu_selected){
  4870                           
  4871                           ;incstack = 0
  4872  00E3C4  D008               	goto	l3869
  4873  00E3C6                     l3861:
  4874                           
  4875                           ;main.c: 634: activity_submenu_pin_set();
  4876  00E3C6  ECC6  F074         	call	_activity_submenu_pin_set	;wreg free
  4877                           
  4878                           ;main.c: 635: break;
  4879  00E3CA  0012               	return	
  4880  00E3CC                     l3863:
  4881                           
  4882                           ;main.c: 638: pin_reset();
  4883  00E3CC  ECAF  F070         	call	_pin_reset	;wreg free
  4884                           
  4885                           ;main.c: 639: activity_home();
  4886  00E3D0  EC24  F071         	call	_activity_home	;wreg free
  4887                           
  4888                           ;main.c: 642: }
  4889                           
  4890                           ;main.c: 640: break;
  4891  00E3D4  0012               	return	
  4892  00E3D6                     l3869:
  4893  00E3D6  C043  F011         	movff	_submenu_selected,??_button_B_submenu_pin_config
  4894  00E3DA  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_pin_config+1
  4895                           
  4896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4897                           ; Switch size 1, requested type "space"
  4898                           ; Number of cases is 1, Range of values is 0 to 0
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte            4     3 (average)
  4902                           ;	Chosen strategy is simple_byte
  4903  00E3DE  5012               	movf	??_button_B_submenu_pin_config+1,w,c
  4904  00E3E0  0A00               	xorlw	0	; case 0
  4905  00E3E2  A4D8               	btfss	status,2,c
  4906  00E3E4  0012               	return	
  4907                           
  4908                           ; Switch size 1, requested type "space"
  4909                           ; Number of cases is 2, Range of values is 0 to 1
  4910                           ; switch strategies available:
  4911                           ; Name         Instructions Cycles
  4912                           ; simple_byte            7     4 (average)
  4913                           ;	Chosen strategy is simple_byte
  4914  00E3E6  5011               	movf	??_button_B_submenu_pin_config,w,c
  4915  00E3E8  0A00               	xorlw	0	; case 0
  4916  00E3EA  B4D8               	btfsc	status,2,c
  4917  00E3EC  D7EC               	goto	l3861
  4918  00E3EE  0A01               	xorlw	1	; case 1
  4919  00E3F0  A4D8               	btfss	status,2,c
  4920  00E3F2  0012               	return	
  4921  00E3F4  D7EB               	goto	l3863
  4922  00E3F6  0012               	return		;funcret
  4923  00E3F8                     __end_of_button_B_submenu_pin_config:
  4924                           	opt stack 0
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           prodh	equ	0xFF4
  4930                           prodl	equ	0xFF3
  4931                           intcon	equ	0xFF2
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           indf1	equ	0xFE7
  4935                           postdec1	equ	0xFE5
  4936                           fsr1h	equ	0xFE2
  4937                           fsr1l	equ	0xFE1
  4938                           indf2	equ	0xFDF
  4939                           fsr2h	equ	0xFDA
  4940                           fsr2l	equ	0xFD9
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _pin_reset *****************
  4944 ;; Defined at:
  4945 ;;		line 467 in file "main.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;		None               void
  4952 ;; Registers used:
  4953 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    1
  4966 ;; This function calls:
  4967 ;;		_strcpy
  4968 ;; This function is called by:
  4969 ;;		_button_B_submenu_pin_config
  4970 ;;		_setup
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text28
  4975  00E15E                     __ptext28:
  4976                           	opt stack 0
  4977  00E15E                     _pin_reset:
  4978                           	opt stack 28
  4979                           
  4980                           ;main.c: 469: strcpy(pin, "1234");
  4981                           
  4982                           ;incstack = 0
  4983  00E15E  0E9A               	movlw	low _pin
  4984  00E160  6E01               	movwf	strcpy@to,c
  4985  00E162  0E00               	movlw	high _pin
  4986  00E164  6E02               	movwf	strcpy@to+1,c
  4987  00E166  0EC7               	movlw	low STR_48
  4988  00E168  6E03               	movwf	strcpy@from,c
  4989  00E16A  0EFF               	movlw	high STR_48
  4990  00E16C  6E04               	movwf	strcpy@from+1,c
  4991  00E16E  EC9E  F073         	call	_strcpy	;wreg free
  4992  00E172  0012               	return		;funcret
  4993  00E174                     __end_of_pin_reset:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           postinc0	equ	0xFEE
  5003                           wreg	equ	0xFE8
  5004                           indf1	equ	0xFE7
  5005                           postdec1	equ	0xFE5
  5006                           fsr1h	equ	0xFE2
  5007                           fsr1l	equ	0xFE1
  5008                           indf2	equ	0xFDF
  5009                           fsr2h	equ	0xFDA
  5010                           fsr2l	equ	0xFD9
  5011                           status	equ	0xFD8
  5012                           
  5013 ;; *************** function _activity_submenu_pin_set *****************
  5014 ;; Defined at:
  5015 ;;		line 435 in file "main.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;		None               void
  5022 ;; Registers used:
  5023 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    6
  5036 ;; This function calls:
  5037 ;;		_lcd_comand
  5038 ;;		_lcd_gotoxy
  5039 ;;		_lcd_init
  5040 ;;		_lcd_write
  5041 ;;		_strcpy
  5042 ;; This function is called by:
  5043 ;;		_button_B_submenu_pin_config
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text29
  5048  00E98C                     __ptext29:
  5049                           	opt stack 0
  5050  00E98C                     _activity_submenu_pin_set:
  5051                           	opt stack 21
  5052                           
  5053                           ;main.c: 437: activity = 6;
  5054                           
  5055                           ;incstack = 0
  5056  00E98C  0E00               	movlw	0
  5057  00E98E  6E2A               	movwf	_activity+1,c
  5058  00E990  0E06               	movlw	6
  5059  00E992  6E29               	movwf	_activity,c
  5060                           
  5061                           ;main.c: 438: strcpy(pin_input, "");
  5062  00E994  0E9F               	movlw	low _pin_input
  5063  00E996  6E01               	movwf	strcpy@to,c
  5064  00E998  0E00               	movlw	high _pin_input
  5065  00E99A  6E02               	movwf	strcpy@to+1,c
  5066  00E99C  0EEB               	movlw	low (STR_2+16)
  5067  00E99E  6E03               	movwf	strcpy@from,c
  5068  00E9A0  0EFE               	movlw	high (STR_2+16)
  5069  00E9A2  6E04               	movwf	strcpy@from+1,c
  5070  00E9A4  EC9E  F073         	call	_strcpy	;wreg free
  5071                           
  5072                           ;main.c: 439: lcd_init();
  5073  00E9A8  EC2E  F078         	call	_lcd_init	;wreg free
  5074                           
  5075                           ;main.c: 440: lcd_write(1,1,"Nuevo PIN:");
  5076  00E9AC  0E00               	movlw	0
  5077  00E9AE  6E0C               	movwf	lcd_write@column+1,c
  5078  00E9B0  0E01               	movlw	1
  5079  00E9B2  6E0B               	movwf	lcd_write@column,c
  5080  00E9B4  0E00               	movlw	0
  5081  00E9B6  6E0E               	movwf	lcd_write@row+1,c
  5082  00E9B8  0E01               	movlw	1
  5083  00E9BA  6E0D               	movwf	lcd_write@row,c
  5084  00E9BC  0E4C               	movlw	low STR_47
  5085  00E9BE  6E0F               	movwf	lcd_write@string,c
  5086  00E9C0  0EFF               	movlw	high STR_47
  5087  00E9C2  6E10               	movwf	lcd_write@string+1,c
  5088  00E9C4  ECBA  F070         	call	_lcd_write	;wreg free
  5089                           
  5090                           ;main.c: 441: lcd_gotoxy(1,2);
  5091  00E9C8  0E02               	movlw	2
  5092  00E9CA  6E05               	movwf	lcd_gotoxy@y,c
  5093  00E9CC  0E01               	movlw	1
  5094  00E9CE  ECFE  F070         	call	_lcd_gotoxy
  5095                           
  5096                           ;main.c: 442: lcd_comand(0b00001111);
  5097  00E9D2  0E0F               	movlw	15
  5098  00E9D4  EC8D  F070         	call	_lcd_comand
  5099  00E9D8  0012               	return		;funcret
  5100  00E9DA                     __end_of_activity_submenu_pin_set:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           prodh	equ	0xFF4
  5107                           prodl	equ	0xFF3
  5108                           intcon	equ	0xFF2
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           indf1	equ	0xFE7
  5112                           postdec1	equ	0xFE5
  5113                           fsr1h	equ	0xFE2
  5114                           fsr1l	equ	0xFE1
  5115                           indf2	equ	0xFDF
  5116                           fsr2h	equ	0xFDA
  5117                           fsr2l	equ	0xFD9
  5118                           status	equ	0xFD8
  5119                           
  5120 ;; *************** function _button_B_submenu_date_and_time_config *****************
  5121 ;; Defined at:
  5122 ;;		line 698 in file "main.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;		None               void
  5129 ;; Registers used:
  5130 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5140 ;;Total ram usage:        2 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    7
  5143 ;; This function calls:
  5144 ;;		_activity_submenu_date_config
  5145 ;;		_activity_submenu_time_config
  5146 ;; This function is called by:
  5147 ;;		_button_B
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text30
  5152  00E2CE                     __ptext30:
  5153                           	opt stack 0
  5154  00E2CE                     _button_B_submenu_date_and_time_config:
  5155                           	opt stack 21
  5156                           
  5157                           ;main.c: 700: switch(submenu_selected){
  5158                           
  5159                           ;incstack = 0
  5160  00E2CE  D006               	goto	l3929
  5161  00E2D0                     l3923:
  5162                           
  5163                           ;main.c: 703: activity_submenu_date_config();
  5164  00E2D0  ECAE  F078         	call	_activity_submenu_date_config	;wreg free
  5165                           
  5166                           ;main.c: 704: break;
  5167  00E2D4  0012               	return	
  5168  00E2D6                     l3925:
  5169                           
  5170                           ;main.c: 707: activity_submenu_time_config();
  5171  00E2D6  ECEF  F078         	call	_activity_submenu_time_config	;wreg free
  5172                           
  5173                           ;main.c: 710: }
  5174                           
  5175                           ;main.c: 708: break;
  5176  00E2DA  0012               	return	
  5177  00E2DC                     l3929:
  5178  00E2DC  C043  F024         	movff	_submenu_selected,??_button_B_submenu_date_and_time_config
  5179  00E2E0  C044  F025         	movff	_submenu_selected+1,??_button_B_submenu_date_and_time_config+1
  5180                           
  5181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5182                           ; Switch size 1, requested type "space"
  5183                           ; Number of cases is 1, Range of values is 0 to 0
  5184                           ; switch strategies available:
  5185                           ; Name         Instructions Cycles
  5186                           ; simple_byte            4     3 (average)
  5187                           ;	Chosen strategy is simple_byte
  5188  00E2E4  5025               	movf	??_button_B_submenu_date_and_time_config+1,w,c
  5189  00E2E6  0A00               	xorlw	0	; case 0
  5190  00E2E8  A4D8               	btfss	status,2,c
  5191  00E2EA  0012               	return	
  5192                           
  5193                           ; Switch size 1, requested type "space"
  5194                           ; Number of cases is 2, Range of values is 0 to 1
  5195                           ; switch strategies available:
  5196                           ; Name         Instructions Cycles
  5197                           ; simple_byte            7     4 (average)
  5198                           ;	Chosen strategy is simple_byte
  5199  00E2EC  5024               	movf	??_button_B_submenu_date_and_time_config,w,c
  5200  00E2EE  0A00               	xorlw	0	; case 0
  5201  00E2F0  B4D8               	btfsc	status,2,c
  5202  00E2F2  D7EE               	goto	l3923
  5203  00E2F4  0A01               	xorlw	1	; case 1
  5204  00E2F6  A4D8               	btfss	status,2,c
  5205  00E2F8  0012               	return	
  5206  00E2FA  D7ED               	goto	l3925
  5207  00E2FC  0012               	return		;funcret
  5208  00E2FE                     __end_of_button_B_submenu_date_and_time_config:
  5209                           	opt stack 0
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           intcon	equ	0xFF2
  5217                           postinc0	equ	0xFEE
  5218                           wreg	equ	0xFE8
  5219                           indf1	equ	0xFE7
  5220                           postdec1	equ	0xFE5
  5221                           fsr1h	equ	0xFE2
  5222                           fsr1l	equ	0xFE1
  5223                           indf2	equ	0xFDF
  5224                           fsr2h	equ	0xFDA
  5225                           fsr2l	equ	0xFD9
  5226                           status	equ	0xFD8
  5227                           
  5228 ;; *************** function _activity_submenu_time_config *****************
  5229 ;; Defined at:
  5230 ;;		line 289 in file "main.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;		None
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;		None               void
  5237 ;; Registers used:
  5238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5248 ;;Total ram usage:        0 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    6
  5251 ;; This function calls:
  5252 ;;		_lcd_comand
  5253 ;;		_lcd_gotoxy
  5254 ;;		_lcd_init
  5255 ;;		_lcd_write
  5256 ;;		_sprintf
  5257 ;; This function is called by:
  5258 ;;		_button_B_submenu_date_and_time_config
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text31
  5263  00F1DE                     __ptext31:
  5264                           	opt stack 0
  5265  00F1DE                     _activity_submenu_time_config:
  5266                           	opt stack 21
  5267                           
  5268                           ;main.c: 291: activity = 11;
  5269                           
  5270                           ;incstack = 0
  5271  00F1DE  0E00               	movlw	0
  5272  00F1E0  6E2A               	movwf	_activity+1,c
  5273  00F1E2  0E0B               	movlw	11
  5274  00F1E4  6E29               	movwf	_activity,c
  5275                           
  5276                           ;main.c: 292: lcd_init();
  5277  00F1E6  EC2E  F078         	call	_lcd_init	;wreg free
  5278                           
  5279                           ;main.c: 293: lcd_write(1,1,"Ingrese la hora");
  5280  00F1EA  0E00               	movlw	0
  5281  00F1EC  6E0C               	movwf	lcd_write@column+1,c
  5282  00F1EE  0E01               	movlw	1
  5283  00F1F0  6E0B               	movwf	lcd_write@column,c
  5284  00F1F2  0E00               	movlw	0
  5285  00F1F4  6E0E               	movwf	lcd_write@row+1,c
  5286  00F1F6  0E01               	movlw	1
  5287  00F1F8  6E0D               	movwf	lcd_write@row,c
  5288  00F1FA  0E1E               	movlw	low STR_32
  5289  00F1FC  6E0F               	movwf	lcd_write@string,c
  5290  00F1FE  0EFF               	movlw	high STR_32
  5291  00F200  6E10               	movwf	lcd_write@string+1,c
  5292  00F202  ECBA  F070         	call	_lcd_write	;wreg free
  5293                           
  5294                           ;main.c: 294: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  5295  00F206  0E86               	movlw	low _buffer1
  5296  00F208  6E0D               	movwf	sprintf@sp,c
  5297  00F20A  0E00               	movlw	high _buffer1
  5298  00F20C  6E0E               	movwf	sprintf@sp+1,c
  5299  00F20E  0E3D               	movlw	low STR_29
  5300  00F210  6E0F               	movwf	sprintf@f,c
  5301  00F212  0EFF               	movlw	high STR_29
  5302  00F214  6E10               	movwf	sprintf@f+1,c
  5303  00F216  C054  F011         	movff	_hora,?_sprintf+4
  5304  00F21A  C055  F012         	movff	_hora+1,?_sprintf+5
  5305  00F21E  C03D  F013         	movff	_minuto,?_sprintf+6
  5306  00F222  C03E  F014         	movff	_minuto+1,?_sprintf+7
  5307  00F226  C03F  F015         	movff	_segundo,?_sprintf+8
  5308  00F22A  C040  F016         	movff	_segundo+1,?_sprintf+9
  5309  00F22E  EC34  F07E         	call	_sprintf	;wreg free
  5310                           
  5311                           ;main.c: 295: lcd_write(1,2,buffer1);
  5312  00F232  0E00               	movlw	0
  5313  00F234  6E0C               	movwf	lcd_write@column+1,c
  5314  00F236  0E01               	movlw	1
  5315  00F238  6E0B               	movwf	lcd_write@column,c
  5316  00F23A  0E00               	movlw	0
  5317  00F23C  6E0E               	movwf	lcd_write@row+1,c
  5318  00F23E  0E02               	movlw	2
  5319  00F240  6E0D               	movwf	lcd_write@row,c
  5320  00F242  0E86               	movlw	low _buffer1
  5321  00F244  6E0F               	movwf	lcd_write@string,c
  5322  00F246  0E00               	movlw	high _buffer1
  5323  00F248  6E10               	movwf	lcd_write@string+1,c
  5324  00F24A  ECBA  F070         	call	_lcd_write	;wreg free
  5325                           
  5326                           ;main.c: 296: lcd_gotoxy(1, 2);
  5327  00F24E  0E02               	movlw	2
  5328  00F250  6E05               	movwf	lcd_gotoxy@y,c
  5329  00F252  0E01               	movlw	1
  5330  00F254  ECFE  F070         	call	_lcd_gotoxy
  5331                           
  5332                           ;main.c: 297: lcd_comand(0b00001111);
  5333  00F258  0E0F               	movlw	15
  5334  00F25A  EC8D  F070         	call	_lcd_comand
  5335  00F25E  0012               	return		;funcret
  5336  00F260                     __end_of_activity_submenu_time_config:
  5337                           	opt stack 0
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           intcon	equ	0xFF2
  5345                           postinc0	equ	0xFEE
  5346                           wreg	equ	0xFE8
  5347                           indf1	equ	0xFE7
  5348                           postdec1	equ	0xFE5
  5349                           fsr1h	equ	0xFE2
  5350                           fsr1l	equ	0xFE1
  5351                           indf2	equ	0xFDF
  5352                           fsr2h	equ	0xFDA
  5353                           fsr2l	equ	0xFD9
  5354                           status	equ	0xFD8
  5355                           
  5356 ;; *************** function _activity_submenu_date_config *****************
  5357 ;; Defined at:
  5358 ;;		line 277 in file "main.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;		None               void
  5365 ;; Registers used:
  5366 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;Total ram usage:        0 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    6
  5379 ;; This function calls:
  5380 ;;		_lcd_comand
  5381 ;;		_lcd_gotoxy
  5382 ;;		_lcd_init
  5383 ;;		_lcd_write
  5384 ;;		_sprintf
  5385 ;; This function is called by:
  5386 ;;		_button_B_submenu_date_and_time_config
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text32
  5391  00F15C                     __ptext32:
  5392                           	opt stack 0
  5393  00F15C                     _activity_submenu_date_config:
  5394                           	opt stack 21
  5395                           
  5396                           ;main.c: 279: activity = 10;
  5397                           
  5398                           ;incstack = 0
  5399  00F15C  0E00               	movlw	0
  5400  00F15E  6E2A               	movwf	_activity+1,c
  5401  00F160  0E0A               	movlw	10
  5402  00F162  6E29               	movwf	_activity,c
  5403                           
  5404                           ;main.c: 280: lcd_init();
  5405  00F164  EC2E  F078         	call	_lcd_init	;wreg free
  5406                           
  5407                           ;main.c: 281: lcd_write(1,1,"Ingrese la fecha");
  5408  00F168  0E00               	movlw	0
  5409  00F16A  6E0C               	movwf	lcd_write@column+1,c
  5410  00F16C  0E01               	movlw	1
  5411  00F16E  6E0B               	movwf	lcd_write@column,c
  5412  00F170  0E00               	movlw	0
  5413  00F172  6E0E               	movwf	lcd_write@row+1,c
  5414  00F174  0E01               	movlw	1
  5415  00F176  6E0D               	movwf	lcd_write@row,c
  5416  00F178  0EFD               	movlw	low STR_30
  5417  00F17A  6E0F               	movwf	lcd_write@string,c
  5418  00F17C  0EFE               	movlw	high STR_30
  5419  00F17E  6E10               	movwf	lcd_write@string+1,c
  5420  00F180  ECBA  F070         	call	_lcd_write	;wreg free
  5421                           
  5422                           ;main.c: 282: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  5423  00F184  0E86               	movlw	low _buffer1
  5424  00F186  6E0D               	movwf	sprintf@sp,c
  5425  00F188  0E00               	movlw	high _buffer1
  5426  00F18A  6E0E               	movwf	sprintf@sp+1,c
  5427  00F18C  0E2E               	movlw	low STR_28
  5428  00F18E  6E0F               	movwf	sprintf@f,c
  5429  00F190  0EFF               	movlw	high STR_28
  5430  00F192  6E10               	movwf	sprintf@f+1,c
  5431  00F194  C050  F011         	movff	_dia,?_sprintf+4
  5432  00F198  C051  F012         	movff	_dia+1,?_sprintf+5
  5433  00F19C  C056  F013         	movff	_mes,?_sprintf+6
  5434  00F1A0  C057  F014         	movff	_mes+1,?_sprintf+7
  5435  00F1A4  C04E  F015         	movff	_anio,?_sprintf+8
  5436  00F1A8  C04F  F016         	movff	_anio+1,?_sprintf+9
  5437  00F1AC  EC34  F07E         	call	_sprintf	;wreg free
  5438                           
  5439                           ;main.c: 283: lcd_write(1,2,buffer1);
  5440  00F1B0  0E00               	movlw	0
  5441  00F1B2  6E0C               	movwf	lcd_write@column+1,c
  5442  00F1B4  0E01               	movlw	1
  5443  00F1B6  6E0B               	movwf	lcd_write@column,c
  5444  00F1B8  0E00               	movlw	0
  5445  00F1BA  6E0E               	movwf	lcd_write@row+1,c
  5446  00F1BC  0E02               	movlw	2
  5447  00F1BE  6E0D               	movwf	lcd_write@row,c
  5448  00F1C0  0E86               	movlw	low _buffer1
  5449  00F1C2  6E0F               	movwf	lcd_write@string,c
  5450  00F1C4  0E00               	movlw	high _buffer1
  5451  00F1C6  6E10               	movwf	lcd_write@string+1,c
  5452  00F1C8  ECBA  F070         	call	_lcd_write	;wreg free
  5453                           
  5454                           ;main.c: 284: lcd_gotoxy(1, 2);
  5455  00F1CC  0E02               	movlw	2
  5456  00F1CE  6E05               	movwf	lcd_gotoxy@y,c
  5457  00F1D0  0E01               	movlw	1
  5458  00F1D2  ECFE  F070         	call	_lcd_gotoxy
  5459                           
  5460                           ;main.c: 285: lcd_comand(0b00001111);
  5461  00F1D6  0E0F               	movlw	15
  5462  00F1D8  EC8D  F070         	call	_lcd_comand
  5463  00F1DC  0012               	return		;funcret
  5464  00F1DE                     __end_of_activity_submenu_date_config:
  5465                           	opt stack 0
  5466                           tblptru	equ	0xFF8
  5467                           tblptrh	equ	0xFF7
  5468                           tblptrl	equ	0xFF6
  5469                           tablat	equ	0xFF5
  5470                           prodh	equ	0xFF4
  5471                           prodl	equ	0xFF3
  5472                           intcon	equ	0xFF2
  5473                           postinc0	equ	0xFEE
  5474                           wreg	equ	0xFE8
  5475                           indf1	equ	0xFE7
  5476                           postdec1	equ	0xFE5
  5477                           fsr1h	equ	0xFE2
  5478                           fsr1l	equ	0xFE1
  5479                           indf2	equ	0xFDF
  5480                           fsr2h	equ	0xFDA
  5481                           fsr2l	equ	0xFD9
  5482                           status	equ	0xFD8
  5483                           
  5484 ;; *************** function _button_B_submenu_activation *****************
  5485 ;; Defined at:
  5486 ;;		line 611 in file "main.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;		None
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;		None               void
  5493 ;; Registers used:
  5494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;Total ram usage:        2 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    7
  5507 ;; This function calls:
  5508 ;;		_activity_home
  5509 ;; This function is called by:
  5510 ;;		_button_B
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text33
  5515  00E3F8                     __ptext33:
  5516                           	opt stack 0
  5517  00E3F8                     _button_B_submenu_activation:
  5518                           	opt stack 21
  5519                           
  5520                           ;main.c: 613: switch(submenu_selected){
  5521                           
  5522                           ;incstack = 0
  5523  00E3F8  D009               	goto	l3851
  5524  00E3FA                     l3845:
  5525                           
  5526                           ;main.c: 616: state = 1;
  5527  00E3FA  0E00               	movlw	0
  5528  00E3FC  6E42               	movwf	_state+1,c
  5529  00E3FE  0E01               	movlw	1
  5530  00E400  D003               	goto	L3
  5531  00E402                     l3847:
  5532                           
  5533                           ;main.c: 620: state = 0;
  5534  00E402  0E00               	movlw	0
  5535  00E404  6E42               	movwf	_state+1,c
  5536  00E406  0E00               	movlw	0
  5537  00E408                     L3:
  5538  00E408  6E41               	movwf	_state,c
  5539                           
  5540                           ;main.c: 623: }
  5541                           
  5542                           ;main.c: 621: break;
  5543  00E40A  D010               	goto	l3853
  5544  00E40C                     l3851:
  5545  00E40C  C043  F011         	movff	_submenu_selected,??_button_B_submenu_activation
  5546  00E410  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_activation+1
  5547                           
  5548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5549                           ; Switch size 1, requested type "space"
  5550                           ; Number of cases is 1, Range of values is 0 to 0
  5551                           ; switch strategies available:
  5552                           ; Name         Instructions Cycles
  5553                           ; simple_byte            4     3 (average)
  5554                           ;	Chosen strategy is simple_byte
  5555  00E414  5012               	movf	??_button_B_submenu_activation+1,w,c
  5556  00E416  0A00               	xorlw	0	; case 0
  5557  00E418  A4D8               	btfss	status,2,c
  5558  00E41A  D008               	goto	l3853
  5559                           
  5560                           ; Switch size 1, requested type "space"
  5561                           ; Number of cases is 2, Range of values is 0 to 1
  5562                           ; switch strategies available:
  5563                           ; Name         Instructions Cycles
  5564                           ; simple_byte            7     4 (average)
  5565                           ;	Chosen strategy is simple_byte
  5566  00E41C  5011               	movf	??_button_B_submenu_activation,w,c
  5567  00E41E  0A00               	xorlw	0	; case 0
  5568  00E420  B4D8               	btfsc	status,2,c
  5569  00E422  D7EB               	goto	l3845
  5570  00E424  0A01               	xorlw	1	; case 1
  5571  00E426  B4D8               	btfsc	status,2,c
  5572  00E428  D7EC               	goto	l3847
  5573  00E42A  D000               	goto	l3853
  5574  00E42C                     l3853:
  5575                           
  5576                           ;main.c: 625: activity_home();
  5577  00E42C  EC24  F071         	call	_activity_home	;wreg free
  5578  00E430  0012               	return		;funcret
  5579  00E432                     __end_of_button_B_submenu_activation:
  5580                           	opt stack 0
  5581                           tblptru	equ	0xFF8
  5582                           tblptrh	equ	0xFF7
  5583                           tblptrl	equ	0xFF6
  5584                           tablat	equ	0xFF5
  5585                           prodh	equ	0xFF4
  5586                           prodl	equ	0xFF3
  5587                           intcon	equ	0xFF2
  5588                           postinc0	equ	0xFEE
  5589                           wreg	equ	0xFE8
  5590                           indf1	equ	0xFE7
  5591                           postdec1	equ	0xFE5
  5592                           fsr1h	equ	0xFE2
  5593                           fsr1l	equ	0xFE1
  5594                           indf2	equ	0xFDF
  5595                           fsr2h	equ	0xFDA
  5596                           fsr2l	equ	0xFD9
  5597                           status	equ	0xFD8
  5598                           
  5599 ;; *************** function _button_B_menu *****************
  5600 ;; Defined at:
  5601 ;;		line 587 in file "main.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;		None               void
  5608 ;; Registers used:
  5609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5619 ;;Total ram usage:        2 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    8
  5622 ;; This function calls:
  5623 ;;		_activity_submenu_activation
  5624 ;;		_activity_submenu_date_and_time
  5625 ;;		_activity_submenu_pin
  5626 ;;		_activity_submenu_siren
  5627 ;; This function is called by:
  5628 ;;		_button_B
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text34
  5633  00E7CA                     __ptext34:
  5634                           	opt stack 0
  5635  00E7CA                     _button_B_menu:
  5636                           	opt stack 20
  5637                           
  5638                           ;main.c: 589: switch(menu_selected){
  5639                           
  5640                           ;incstack = 0
  5641  00E7CA  D00C               	goto	l3837
  5642  00E7CC                     l3827:
  5643                           
  5644                           ;main.c: 592: activity_submenu_activation();
  5645  00E7CC  EC0E  F076         	call	_activity_submenu_activation	;wreg free
  5646                           
  5647                           ;main.c: 593: break;
  5648  00E7D0  0012               	return	
  5649  00E7D2                     l3829:
  5650                           
  5651                           ;main.c: 596: activity_submenu_date_and_time();
  5652  00E7D2  EC41  F076         	call	_activity_submenu_date_and_time	;wreg free
  5653                           
  5654                           ;main.c: 597: break;
  5655  00E7D6  0012               	return	
  5656  00E7D8                     l3831:
  5657                           
  5658                           ;main.c: 600: activity_submenu_pin();
  5659  00E7D8  EC74  F076         	call	_activity_submenu_pin	;wreg free
  5660                           
  5661                           ;main.c: 601: break;
  5662  00E7DC  0012               	return	
  5663  00E7DE                     l3833:
  5664                           
  5665                           ;main.c: 604: activity_submenu_siren();
  5666  00E7DE  ECA7  F076         	call	_activity_submenu_siren	;wreg free
  5667                           
  5668                           ;main.c: 607: }
  5669                           
  5670                           ;main.c: 605: break;
  5671  00E7E2  0012               	return	
  5672  00E7E4                     l3837:
  5673  00E7E4  C03B  F011         	movff	_menu_selected,??_button_B_menu
  5674  00E7E8  C03C  F012         	movff	_menu_selected+1,??_button_B_menu+1
  5675                           
  5676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5677                           ; Switch size 1, requested type "space"
  5678                           ; Number of cases is 1, Range of values is 0 to 0
  5679                           ; switch strategies available:
  5680                           ; Name         Instructions Cycles
  5681                           ; simple_byte            4     3 (average)
  5682                           ;	Chosen strategy is simple_byte
  5683  00E7EC  5012               	movf	??_button_B_menu+1,w,c
  5684  00E7EE  0A00               	xorlw	0	; case 0
  5685  00E7F0  A4D8               	btfss	status,2,c
  5686  00E7F2  0012               	return	
  5687                           
  5688                           ; Switch size 1, requested type "space"
  5689                           ; Number of cases is 4, Range of values is 0 to 3
  5690                           ; switch strategies available:
  5691                           ; Name         Instructions Cycles
  5692                           ; simple_byte           13     7 (average)
  5693                           ;	Chosen strategy is simple_byte
  5694  00E7F4  5011               	movf	??_button_B_menu,w,c
  5695  00E7F6  0A00               	xorlw	0	; case 0
  5696  00E7F8  B4D8               	btfsc	status,2,c
  5697  00E7FA  D7E8               	goto	l3827
  5698  00E7FC  0A01               	xorlw	1	; case 1
  5699  00E7FE  B4D8               	btfsc	status,2,c
  5700  00E800  D7E8               	goto	l3829
  5701  00E802  0A03               	xorlw	3	; case 2
  5702  00E804  B4D8               	btfsc	status,2,c
  5703  00E806  D7E8               	goto	l3831
  5704  00E808  0A01               	xorlw	1	; case 3
  5705  00E80A  A4D8               	btfss	status,2,c
  5706  00E80C  0012               	return	
  5707  00E80E  D7E7               	goto	l3833
  5708  00E810  0012               	return		;funcret
  5709  00E812                     __end_of_button_B_menu:
  5710                           	opt stack 0
  5711                           tblptru	equ	0xFF8
  5712                           tblptrh	equ	0xFF7
  5713                           tblptrl	equ	0xFF6
  5714                           tablat	equ	0xFF5
  5715                           prodh	equ	0xFF4
  5716                           prodl	equ	0xFF3
  5717                           intcon	equ	0xFF2
  5718                           postinc0	equ	0xFEE
  5719                           wreg	equ	0xFE8
  5720                           indf1	equ	0xFE7
  5721                           postdec1	equ	0xFE5
  5722                           fsr1h	equ	0xFE2
  5723                           fsr1l	equ	0xFE1
  5724                           indf2	equ	0xFDF
  5725                           fsr2h	equ	0xFDA
  5726                           fsr2l	equ	0xFD9
  5727                           status	equ	0xFD8
  5728                           
  5729 ;; *************** function _activity_submenu_siren *****************
  5730 ;; Defined at:
  5731 ;;		line 390 in file "main.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;		None               void
  5738 ;; Registers used:
  5739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5749 ;;Total ram usage:        0 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    7
  5752 ;; This function calls:
  5753 ;;		_lcd_init
  5754 ;;		_lcd_write
  5755 ;;		_submenu_selector_0
  5756 ;; This function is called by:
  5757 ;;		_button_B_menu
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text35
  5762  00ED4E                     __ptext35:
  5763                           	opt stack 0
  5764  00ED4E                     _activity_submenu_siren:
  5765                           	opt stack 20
  5766                           
  5767                           ;main.c: 392: activity = 7;
  5768                           
  5769                           ;incstack = 0
  5770  00ED4E  0E00               	movlw	0
  5771  00ED50  6E2A               	movwf	_activity+1,c
  5772  00ED52  0E07               	movlw	7
  5773  00ED54  6E29               	movwf	_activity,c
  5774                           
  5775                           ;main.c: 393: lcd_init();
  5776  00ED56  EC2E  F078         	call	_lcd_init	;wreg free
  5777                           
  5778                           ;main.c: 394: lcd_write(1,1,"Sirena");
  5779  00ED5A  0E00               	movlw	0
  5780  00ED5C  6E0C               	movwf	lcd_write@column+1,c
  5781  00ED5E  0E01               	movlw	1
  5782  00ED60  6E0B               	movwf	lcd_write@column,c
  5783  00ED62  0E00               	movlw	0
  5784  00ED64  6E0E               	movwf	lcd_write@row+1,c
  5785  00ED66  0E01               	movlw	1
  5786  00ED68  6E0D               	movwf	lcd_write@row,c
  5787  00ED6A  0EAE               	movlw	low STR_34
  5788  00ED6C  6E0F               	movwf	lcd_write@string,c
  5789  00ED6E  0EFF               	movlw	high STR_34
  5790  00ED70  6E10               	movwf	lcd_write@string+1,c
  5791  00ED72  ECBA  F070         	call	_lcd_write	;wreg free
  5792                           
  5793                           ;main.c: 395: lcd_write(10,1,"Volumen");
  5794  00ED76  0E00               	movlw	0
  5795  00ED78  6E0C               	movwf	lcd_write@column+1,c
  5796  00ED7A  0E0A               	movlw	10
  5797  00ED7C  6E0B               	movwf	lcd_write@column,c
  5798  00ED7E  0E00               	movlw	0
  5799  00ED80  6E0E               	movwf	lcd_write@row+1,c
  5800  00ED82  0E01               	movlw	1
  5801  00ED84  6E0D               	movwf	lcd_write@row,c
  5802  00ED86  0E57               	movlw	low STR_35
  5803  00ED88  6E0F               	movwf	lcd_write@string,c
  5804  00ED8A  0EFF               	movlw	high STR_35
  5805  00ED8C  6E10               	movwf	lcd_write@string+1,c
  5806  00ED8E  ECBA  F070         	call	_lcd_write	;wreg free
  5807                           
  5808                           ;main.c: 396: lcd_write(10,2,"Tono");
  5809  00ED92  0E00               	movlw	0
  5810  00ED94  6E0C               	movwf	lcd_write@column+1,c
  5811  00ED96  0E0A               	movlw	10
  5812  00ED98  6E0B               	movwf	lcd_write@column,c
  5813  00ED9A  0E00               	movlw	0
  5814  00ED9C  6E0E               	movwf	lcd_write@row+1,c
  5815  00ED9E  0E02               	movlw	2
  5816  00EDA0  6E0D               	movwf	lcd_write@row,c
  5817  00EDA2  0ED6               	movlw	low STR_36
  5818  00EDA4  6E0F               	movwf	lcd_write@string,c
  5819  00EDA6  0EFF               	movlw	high STR_36
  5820  00EDA8  6E10               	movwf	lcd_write@string+1,c
  5821  00EDAA  ECBA  F070         	call	_lcd_write	;wreg free
  5822                           
  5823                           ;main.c: 397: submenu_selector_0();
  5824  00EDAE  ECF6  F072         	call	_submenu_selector_0	;wreg free
  5825  00EDB2  0012               	return		;funcret
  5826  00EDB4                     __end_of_activity_submenu_siren:
  5827                           	opt stack 0
  5828                           tblptru	equ	0xFF8
  5829                           tblptrh	equ	0xFF7
  5830                           tblptrl	equ	0xFF6
  5831                           tablat	equ	0xFF5
  5832                           prodh	equ	0xFF4
  5833                           prodl	equ	0xFF3
  5834                           intcon	equ	0xFF2
  5835                           postinc0	equ	0xFEE
  5836                           wreg	equ	0xFE8
  5837                           indf1	equ	0xFE7
  5838                           postdec1	equ	0xFE5
  5839                           fsr1h	equ	0xFE2
  5840                           fsr1l	equ	0xFE1
  5841                           indf2	equ	0xFDF
  5842                           fsr2h	equ	0xFDA
  5843                           fsr2l	equ	0xFD9
  5844                           status	equ	0xFD8
  5845                           
  5846 ;; *************** function _activity_submenu_pin *****************
  5847 ;; Defined at:
  5848 ;;		line 425 in file "main.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;		None
  5853 ;; Return value:  Size  Location     Type
  5854 ;;		None               void
  5855 ;; Registers used:
  5856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;Total ram usage:        0 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    7
  5869 ;; This function calls:
  5870 ;;		_lcd_init
  5871 ;;		_lcd_write
  5872 ;;		_submenu_selector_0
  5873 ;; This function is called by:
  5874 ;;		_button_B_menu
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text36
  5879  00ECE8                     __ptext36:
  5880                           	opt stack 0
  5881  00ECE8                     _activity_submenu_pin:
  5882                           	opt stack 20
  5883                           
  5884                           ;main.c: 427: activity = 5;
  5885                           
  5886                           ;incstack = 0
  5887  00ECE8  0E00               	movlw	0
  5888  00ECEA  6E2A               	movwf	_activity+1,c
  5889  00ECEC  0E05               	movlw	5
  5890  00ECEE  6E29               	movwf	_activity,c
  5891                           
  5892                           ;main.c: 428: lcd_init();
  5893  00ECF0  EC2E  F078         	call	_lcd_init	;wreg free
  5894                           
  5895                           ;main.c: 429: lcd_write(1,1,"Pin");
  5896  00ECF4  0E00               	movlw	0
  5897  00ECF6  6E0C               	movwf	lcd_write@column+1,c
  5898  00ECF8  0E01               	movlw	1
  5899  00ECFA  6E0B               	movwf	lcd_write@column,c
  5900  00ECFC  0E00               	movlw	0
  5901  00ECFE  6E0E               	movwf	lcd_write@row+1,c
  5902  00ED00  0E01               	movlw	1
  5903  00ED02  6E0D               	movwf	lcd_write@row,c
  5904  00ED04  0EE9               	movlw	low STR_20
  5905  00ED06  6E0F               	movwf	lcd_write@string,c
  5906  00ED08  0EFF               	movlw	high STR_20
  5907  00ED0A  6E10               	movwf	lcd_write@string+1,c
  5908  00ED0C  ECBA  F070         	call	_lcd_write	;wreg free
  5909                           
  5910                           ;main.c: 430: lcd_write(10,1,"Cambiar");
  5911  00ED10  0E00               	movlw	0
  5912  00ED12  6E0C               	movwf	lcd_write@column+1,c
  5913  00ED14  0E0A               	movlw	10
  5914  00ED16  6E0B               	movwf	lcd_write@column,c
  5915  00ED18  0E00               	movlw	0
  5916  00ED1A  6E0E               	movwf	lcd_write@row+1,c
  5917  00ED1C  0E01               	movlw	1
  5918  00ED1E  6E0D               	movwf	lcd_write@row,c
  5919  00ED20  0E5F               	movlw	low STR_44
  5920  00ED22  6E0F               	movwf	lcd_write@string,c
  5921  00ED24  0EFF               	movlw	high STR_44
  5922  00ED26  6E10               	movwf	lcd_write@string+1,c
  5923  00ED28  ECBA  F070         	call	_lcd_write	;wreg free
  5924                           
  5925                           ;main.c: 431: lcd_write(10,2,"Reset");
  5926  00ED2C  0E00               	movlw	0
  5927  00ED2E  6E0C               	movwf	lcd_write@column+1,c
  5928  00ED30  0E0A               	movlw	10
  5929  00ED32  6E0B               	movwf	lcd_write@column,c
  5930  00ED34  0E00               	movlw	0
  5931  00ED36  6E0E               	movwf	lcd_write@row+1,c
  5932  00ED38  0E02               	movlw	2
  5933  00ED3A  6E0D               	movwf	lcd_write@row,c
  5934  00ED3C  0EC1               	movlw	low STR_45
  5935  00ED3E  6E0F               	movwf	lcd_write@string,c
  5936  00ED40  0EFF               	movlw	high STR_45
  5937  00ED42  6E10               	movwf	lcd_write@string+1,c
  5938  00ED44  ECBA  F070         	call	_lcd_write	;wreg free
  5939                           
  5940                           ;main.c: 432: submenu_selector_0();
  5941  00ED48  ECF6  F072         	call	_submenu_selector_0	;wreg free
  5942  00ED4C  0012               	return		;funcret
  5943  00ED4E                     __end_of_activity_submenu_pin:
  5944                           	opt stack 0
  5945                           tblptru	equ	0xFF8
  5946                           tblptrh	equ	0xFF7
  5947                           tblptrl	equ	0xFF6
  5948                           tablat	equ	0xFF5
  5949                           prodh	equ	0xFF4
  5950                           prodl	equ	0xFF3
  5951                           intcon	equ	0xFF2
  5952                           postinc0	equ	0xFEE
  5953                           wreg	equ	0xFE8
  5954                           indf1	equ	0xFE7
  5955                           postdec1	equ	0xFE5
  5956                           fsr1h	equ	0xFE2
  5957                           fsr1l	equ	0xFE1
  5958                           indf2	equ	0xFDF
  5959                           fsr2h	equ	0xFDA
  5960                           fsr2l	equ	0xFD9
  5961                           status	equ	0xFD8
  5962                           
  5963 ;; *************** function _activity_submenu_date_and_time *****************
  5964 ;; Defined at:
  5965 ;;		line 252 in file "main.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;		None               void
  5972 ;; Registers used:
  5973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;Total ram usage:        0 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    7
  5986 ;; This function calls:
  5987 ;;		_lcd_init
  5988 ;;		_lcd_write
  5989 ;;		_submenu_selector_0
  5990 ;; This function is called by:
  5991 ;;		_button_B_menu
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text37
  5996  00EC82                     __ptext37:
  5997                           	opt stack 0
  5998  00EC82                     _activity_submenu_date_and_time:
  5999                           	opt stack 20
  6000                           
  6001                           ;main.c: 254: activity = 3;
  6002                           
  6003                           ;incstack = 0
  6004  00EC82  0E00               	movlw	0
  6005  00EC84  6E2A               	movwf	_activity+1,c
  6006  00EC86  0E03               	movlw	3
  6007  00EC88  6E29               	movwf	_activity,c
  6008                           
  6009                           ;main.c: 255: lcd_init();
  6010  00EC8A  EC2E  F078         	call	_lcd_init	;wreg free
  6011                           
  6012                           ;main.c: 256: lcd_write(1,1,"Reloj");
  6013  00EC8E  0E00               	movlw	0
  6014  00EC90  6E0C               	movwf	lcd_write@column+1,c
  6015  00EC92  0E01               	movlw	1
  6016  00EC94  6E0B               	movwf	lcd_write@column,c
  6017  00EC96  0E00               	movlw	0
  6018  00EC98  6E0E               	movwf	lcd_write@row+1,c
  6019  00EC9A  0E01               	movlw	1
  6020  00EC9C  6E0D               	movwf	lcd_write@row,c
  6021  00EC9E  0EBB               	movlw	low STR_19
  6022  00ECA0  6E0F               	movwf	lcd_write@string,c
  6023  00ECA2  0EFF               	movlw	high STR_19
  6024  00ECA4  6E10               	movwf	lcd_write@string+1,c
  6025  00ECA6  ECBA  F070         	call	_lcd_write	;wreg free
  6026                           
  6027                           ;main.c: 257: lcd_write(10,1,"Fecha");
  6028  00ECAA  0E00               	movlw	0
  6029  00ECAC  6E0C               	movwf	lcd_write@column+1,c
  6030  00ECAE  0E0A               	movlw	10
  6031  00ECB0  6E0B               	movwf	lcd_write@column,c
  6032  00ECB2  0E00               	movlw	0
  6033  00ECB4  6E0E               	movwf	lcd_write@row+1,c
  6034  00ECB6  0E01               	movlw	1
  6035  00ECB8  6E0D               	movwf	lcd_write@row,c
  6036  00ECBA  0EB5               	movlw	low STR_26
  6037  00ECBC  6E0F               	movwf	lcd_write@string,c
  6038  00ECBE  0EFF               	movlw	high STR_26
  6039  00ECC0  6E10               	movwf	lcd_write@string+1,c
  6040  00ECC2  ECBA  F070         	call	_lcd_write	;wreg free
  6041                           
  6042                           ;main.c: 258: lcd_write(10,2,"Hora");
  6043  00ECC6  0E00               	movlw	0
  6044  00ECC8  6E0C               	movwf	lcd_write@column+1,c
  6045  00ECCA  0E0A               	movlw	10
  6046  00ECCC  6E0B               	movwf	lcd_write@column,c
  6047  00ECCE  0E00               	movlw	0
  6048  00ECD0  6E0E               	movwf	lcd_write@row+1,c
  6049  00ECD2  0E02               	movlw	2
  6050  00ECD4  6E0D               	movwf	lcd_write@row,c
  6051  00ECD6  0ECC               	movlw	low STR_27
  6052  00ECD8  6E0F               	movwf	lcd_write@string,c
  6053  00ECDA  0EFF               	movlw	high STR_27
  6054  00ECDC  6E10               	movwf	lcd_write@string+1,c
  6055  00ECDE  ECBA  F070         	call	_lcd_write	;wreg free
  6056                           
  6057                           ;main.c: 259: submenu_selector_0();
  6058  00ECE2  ECF6  F072         	call	_submenu_selector_0	;wreg free
  6059  00ECE6  0012               	return		;funcret
  6060  00ECE8                     __end_of_activity_submenu_date_and_time:
  6061                           	opt stack 0
  6062                           tblptru	equ	0xFF8
  6063                           tblptrh	equ	0xFF7
  6064                           tblptrl	equ	0xFF6
  6065                           tablat	equ	0xFF5
  6066                           prodh	equ	0xFF4
  6067                           prodl	equ	0xFF3
  6068                           intcon	equ	0xFF2
  6069                           postinc0	equ	0xFEE
  6070                           wreg	equ	0xFE8
  6071                           indf1	equ	0xFE7
  6072                           postdec1	equ	0xFE5
  6073                           fsr1h	equ	0xFE2
  6074                           fsr1l	equ	0xFE1
  6075                           indf2	equ	0xFDF
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8
  6079                           
  6080 ;; *************** function _activity_submenu_activation *****************
  6081 ;; Defined at:
  6082 ;;		line 239 in file "main.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;		None
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;		None               void
  6089 ;; Registers used:
  6090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;Total ram usage:        0 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    7
  6103 ;; This function calls:
  6104 ;;		_lcd_init
  6105 ;;		_lcd_write
  6106 ;;		_submenu_selector_0
  6107 ;; This function is called by:
  6108 ;;		_button_B_menu
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text38
  6113  00EC1C                     __ptext38:
  6114                           	opt stack 0
  6115  00EC1C                     _activity_submenu_activation:
  6116                           	opt stack 20
  6117                           
  6118                           ;main.c: 241: activity = 4;
  6119                           
  6120                           ;incstack = 0
  6121  00EC1C  0E00               	movlw	0
  6122  00EC1E  6E2A               	movwf	_activity+1,c
  6123  00EC20  0E04               	movlw	4
  6124  00EC22  6E29               	movwf	_activity,c
  6125                           
  6126                           ;main.c: 242: lcd_init();
  6127  00EC24  EC2E  F078         	call	_lcd_init	;wreg free
  6128                           
  6129                           ;main.c: 243: lcd_write(1,1,"Activar");
  6130  00EC28  0E00               	movlw	0
  6131  00EC2A  6E0C               	movwf	lcd_write@column+1,c
  6132  00EC2C  0E01               	movlw	1
  6133  00EC2E  6E0B               	movwf	lcd_write@column,c
  6134  00EC30  0E00               	movlw	0
  6135  00EC32  6E0E               	movwf	lcd_write@row+1,c
  6136  00EC34  0E01               	movlw	1
  6137  00EC36  6E0D               	movwf	lcd_write@row,c
  6138  00EC38  0E67               	movlw	low STR_18
  6139  00EC3A  6E0F               	movwf	lcd_write@string,c
  6140  00EC3C  0EFF               	movlw	high STR_18
  6141  00EC3E  6E10               	movwf	lcd_write@string+1,c
  6142  00EC40  ECBA  F070         	call	_lcd_write	;wreg free
  6143                           
  6144                           ;main.c: 244: lcd_write(10,1,"Si");
  6145  00EC44  0E00               	movlw	0
  6146  00EC46  6E0C               	movwf	lcd_write@column+1,c
  6147  00EC48  0E0A               	movlw	10
  6148  00EC4A  6E0B               	movwf	lcd_write@column,c
  6149  00EC4C  0E00               	movlw	0
  6150  00EC4E  6E0E               	movwf	lcd_write@row+1,c
  6151  00EC50  0E01               	movlw	1
  6152  00EC52  6E0D               	movwf	lcd_write@row,c
  6153  00EC54  0EED               	movlw	low STR_23
  6154  00EC56  6E0F               	movwf	lcd_write@string,c
  6155  00EC58  0EFF               	movlw	high STR_23
  6156  00EC5A  6E10               	movwf	lcd_write@string+1,c
  6157  00EC5C  ECBA  F070         	call	_lcd_write	;wreg free
  6158                           
  6159                           ;main.c: 245: lcd_write(10,2,"No");
  6160  00EC60  0E00               	movlw	0
  6161  00EC62  6E0C               	movwf	lcd_write@column+1,c
  6162  00EC64  0E0A               	movlw	10
  6163  00EC66  6E0B               	movwf	lcd_write@column,c
  6164  00EC68  0E00               	movlw	0
  6165  00EC6A  6E0E               	movwf	lcd_write@row+1,c
  6166  00EC6C  0E02               	movlw	2
  6167  00EC6E  6E0D               	movwf	lcd_write@row,c
  6168  00EC70  0EF0               	movlw	low STR_24
  6169  00EC72  6E0F               	movwf	lcd_write@string,c
  6170  00EC74  0EFF               	movlw	high STR_24
  6171  00EC76  6E10               	movwf	lcd_write@string+1,c
  6172  00EC78  ECBA  F070         	call	_lcd_write	;wreg free
  6173                           
  6174                           ;main.c: 246: submenu_selector_0();
  6175  00EC7C  ECF6  F072         	call	_submenu_selector_0	;wreg free
  6176  00EC80  0012               	return		;funcret
  6177  00EC82                     __end_of_activity_submenu_activation:
  6178                           	opt stack 0
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           prodh	equ	0xFF4
  6184                           prodl	equ	0xFF3
  6185                           intcon	equ	0xFF2
  6186                           postinc0	equ	0xFEE
  6187                           wreg	equ	0xFE8
  6188                           indf1	equ	0xFE7
  6189                           postdec1	equ	0xFE5
  6190                           fsr1h	equ	0xFE2
  6191                           fsr1l	equ	0xFE1
  6192                           indf2	equ	0xFDF
  6193                           fsr2h	equ	0xFDA
  6194                           fsr2l	equ	0xFD9
  6195                           status	equ	0xFD8
  6196                           
  6197 ;; *************** function _button_A *****************
  6198 ;; Defined at:
  6199 ;;		line 559 in file "main.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;		None               void
  6206 ;; Registers used:
  6207 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;Total ram usage:        2 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    8
  6220 ;; This function calls:
  6221 ;;		_activity_pin
  6222 ;;		_menu_selector
  6223 ;;		_reset_home_callback
  6224 ;;		_submenu_selector
  6225 ;; This function is called by:
  6226 ;;		_keyboard_control
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text39
  6231  00E8F2                     __ptext39:
  6232                           	opt stack 0
  6233  00E8F2                     _button_A:
  6234                           	opt stack 21
  6235                           
  6236                           ;main.c: 561: reset_home_callback();
  6237                           
  6238                           ;incstack = 0
  6239  00E8F2  EC83  F070         	call	_reset_home_callback	;wreg free
  6240                           
  6241                           ;main.c: 563: switch(activity){
  6242  00E8F6  D00C               	goto	l4039
  6243  00E8F8                     l4029:
  6244                           
  6245                           ;main.c: 566: activity_pin();
  6246  00E8F8  EC9F  F074         	call	_activity_pin	;wreg free
  6247                           
  6248                           ;main.c: 570: break;
  6249                           
  6250                           ;main.c: 569: case 1:
  6251                           
  6252                           ;main.c: 567: break;
  6253  00E8FC  0012               	return	
  6254  00E8FE                     l4031:
  6255                           
  6256                           ;main.c: 573: menu_selector();
  6257  00E8FE  ECC1  F073         	call	_menu_selector	;wreg free
  6258                           
  6259                           ;main.c: 574: break;
  6260  00E902  0012               	return	
  6261  00E904                     l4033:
  6262                           
  6263                           ;main.c: 577: activity_pin();
  6264  00E904  EC9F  F074         	call	_activity_pin	;wreg free
  6265                           
  6266                           ;main.c: 578: break;
  6267  00E908  0012               	return	
  6268  00E90A                     l4035:
  6269                           
  6270                           ;main.c: 581: submenu_selector();
  6271  00E90A  EC4F  F071         	call	_submenu_selector	;wreg free
  6272                           
  6273                           ;main.c: 583: }
  6274                           
  6275                           ;main.c: 582: break;
  6276  00E90E  0012               	return	
  6277  00E910                     l4039:
  6278  00E910  C029  F013         	movff	_activity,??_button_A
  6279  00E914  C02A  F014         	movff	_activity+1,??_button_A+1
  6280                           
  6281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6282                           ; Switch size 1, requested type "space"
  6283                           ; Number of cases is 1, Range of values is 0 to 0
  6284                           ; switch strategies available:
  6285                           ; Name         Instructions Cycles
  6286                           ; simple_byte            4     3 (average)
  6287                           ;	Chosen strategy is simple_byte
  6288  00E918  5014               	movf	??_button_A+1,w,c
  6289  00E91A  0A00               	xorlw	0	; case 0
  6290  00E91C  A4D8               	btfss	status,2,c
  6291  00E91E  D7F5               	goto	l4035
  6292                           
  6293                           ; Switch size 1, requested type "space"
  6294                           ; Number of cases is 4, Range of values is 0 to 12
  6295                           ; switch strategies available:
  6296                           ; Name         Instructions Cycles
  6297                           ; simple_byte           13     7 (average)
  6298                           ;	Chosen strategy is simple_byte
  6299  00E920  5013               	movf	??_button_A,w,c
  6300  00E922  0A00               	xorlw	0	; case 0
  6301  00E924  B4D8               	btfsc	status,2,c
  6302  00E926  D7E8               	goto	l4029
  6303  00E928  0A01               	xorlw	1	; case 1
  6304  00E92A  B4D8               	btfsc	status,2,c
  6305  00E92C  0012               	return	
  6306  00E92E  0A03               	xorlw	3	; case 2
  6307  00E930  B4D8               	btfsc	status,2,c
  6308  00E932  D7E5               	goto	l4031
  6309  00E934  0A0E               	xorlw	14	; case 12
  6310  00E936  B4D8               	btfsc	status,2,c
  6311  00E938  D7E5               	goto	l4033
  6312  00E93A  D7E7               	goto	l4035
  6313  00E93C  0012               	return		;funcret
  6314  00E93E                     __end_of_button_A:
  6315                           	opt stack 0
  6316                           tblptru	equ	0xFF8
  6317                           tblptrh	equ	0xFF7
  6318                           tblptrl	equ	0xFF6
  6319                           tablat	equ	0xFF5
  6320                           prodh	equ	0xFF4
  6321                           prodl	equ	0xFF3
  6322                           intcon	equ	0xFF2
  6323                           postinc0	equ	0xFEE
  6324                           wreg	equ	0xFE8
  6325                           indf1	equ	0xFE7
  6326                           postdec1	equ	0xFE5
  6327                           fsr1h	equ	0xFE2
  6328                           fsr1l	equ	0xFE1
  6329                           indf2	equ	0xFDF
  6330                           fsr2h	equ	0xFDA
  6331                           fsr2l	equ	0xFD9
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function _submenu_selector *****************
  6335 ;; Defined at:
  6336 ;;		line 197 in file "main.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;		None               void
  6343 ;; Registers used:
  6344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;Total ram usage:        2 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    7
  6357 ;; This function calls:
  6358 ;;		_submenu_selector_0
  6359 ;;		_submenu_selector_1
  6360 ;; This function is called by:
  6361 ;;		_button_A
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text40
  6366  00E29E                     __ptext40:
  6367                           	opt stack 0
  6368  00E29E                     _submenu_selector:
  6369                           	opt stack 21
  6370                           
  6371                           ;main.c: 199: switch(submenu_selected){
  6372                           
  6373                           ;incstack = 0
  6374  00E29E  D006               	goto	l3741
  6375  00E2A0                     l3735:
  6376                           
  6377                           ;main.c: 202: submenu_selector_1();
  6378  00E2A0  EC17  F073         	call	_submenu_selector_1	;wreg free
  6379                           
  6380                           ;main.c: 203: break;
  6381  00E2A4  0012               	return	
  6382  00E2A6                     l3737:
  6383                           
  6384                           ;main.c: 206: submenu_selector_0();
  6385  00E2A6  ECF6  F072         	call	_submenu_selector_0	;wreg free
  6386                           
  6387                           ;main.c: 208: }
  6388                           
  6389                           ;main.c: 207: break;
  6390  00E2AA  0012               	return	
  6391  00E2AC                     l3741:
  6392  00E2AC  C043  F011         	movff	_submenu_selected,??_submenu_selector
  6393  00E2B0  C044  F012         	movff	_submenu_selected+1,??_submenu_selector+1
  6394                           
  6395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6396                           ; Switch size 1, requested type "space"
  6397                           ; Number of cases is 1, Range of values is 0 to 0
  6398                           ; switch strategies available:
  6399                           ; Name         Instructions Cycles
  6400                           ; simple_byte            4     3 (average)
  6401                           ;	Chosen strategy is simple_byte
  6402  00E2B4  5012               	movf	??_submenu_selector+1,w,c
  6403  00E2B6  0A00               	xorlw	0	; case 0
  6404  00E2B8  A4D8               	btfss	status,2,c
  6405  00E2BA  0012               	return	
  6406                           
  6407                           ; Switch size 1, requested type "space"
  6408                           ; Number of cases is 2, Range of values is 0 to 1
  6409                           ; switch strategies available:
  6410                           ; Name         Instructions Cycles
  6411                           ; simple_byte            7     4 (average)
  6412                           ;	Chosen strategy is simple_byte
  6413  00E2BC  5011               	movf	??_submenu_selector,w,c
  6414  00E2BE  0A00               	xorlw	0	; case 0
  6415  00E2C0  B4D8               	btfsc	status,2,c
  6416  00E2C2  D7EE               	goto	l3735
  6417  00E2C4  0A01               	xorlw	1	; case 1
  6418  00E2C6  A4D8               	btfss	status,2,c
  6419  00E2C8  0012               	return	
  6420  00E2CA  D7ED               	goto	l3737
  6421  00E2CC  0012               	return		;funcret
  6422  00E2CE                     __end_of_submenu_selector:
  6423                           	opt stack 0
  6424                           tblptru	equ	0xFF8
  6425                           tblptrh	equ	0xFF7
  6426                           tblptrl	equ	0xFF6
  6427                           tablat	equ	0xFF5
  6428                           prodh	equ	0xFF4
  6429                           prodl	equ	0xFF3
  6430                           intcon	equ	0xFF2
  6431                           postinc0	equ	0xFEE
  6432                           wreg	equ	0xFE8
  6433                           indf1	equ	0xFE7
  6434                           postdec1	equ	0xFE5
  6435                           fsr1h	equ	0xFE2
  6436                           fsr1l	equ	0xFE1
  6437                           indf2	equ	0xFDF
  6438                           fsr2h	equ	0xFDA
  6439                           fsr2l	equ	0xFD9
  6440                           status	equ	0xFD8
  6441                           
  6442 ;; *************** function _submenu_selector_1 *****************
  6443 ;; Defined at:
  6444 ;;		line 189 in file "main.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;		None               void
  6451 ;; Registers used:
  6452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    6
  6465 ;; This function calls:
  6466 ;;		_lcd_write
  6467 ;; This function is called by:
  6468 ;;		_submenu_selector
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text41
  6473  00E62E                     __ptext41:
  6474                           	opt stack 0
  6475  00E62E                     _submenu_selector_1:
  6476                           	opt stack 21
  6477                           
  6478                           ;main.c: 191: lcd_write(9,2,">");
  6479                           
  6480                           ;incstack = 0
  6481  00E62E  0E00               	movlw	0
  6482  00E630  6E0C               	movwf	lcd_write@column+1,c
  6483  00E632  0E09               	movlw	9
  6484  00E634  6E0B               	movwf	lcd_write@column,c
  6485  00E636  0E00               	movlw	0
  6486  00E638  6E0E               	movwf	lcd_write@row+1,c
  6487  00E63A  0E02               	movlw	2
  6488  00E63C  6E0D               	movwf	lcd_write@row,c
  6489  00E63E  0EF5               	movlw	low STR_4
  6490  00E640  6E0F               	movwf	lcd_write@string,c
  6491  00E642  0EFF               	movlw	high STR_4
  6492  00E644  6E10               	movwf	lcd_write@string+1,c
  6493  00E646  ECBA  F070         	call	_lcd_write	;wreg free
  6494                           
  6495                           ;main.c: 192: submenu_selected = 1;
  6496  00E64A  0E00               	movlw	0
  6497  00E64C  6E44               	movwf	_submenu_selected+1,c
  6498  00E64E  0E01               	movlw	1
  6499  00E650  6E43               	movwf	_submenu_selected,c
  6500                           
  6501                           ;main.c: 193: lcd_write(9,1," ");
  6502  00E652  0E00               	movlw	0
  6503  00E654  6E0C               	movwf	lcd_write@column+1,c
  6504  00E656  0E09               	movlw	9
  6505  00E658  6E0B               	movwf	lcd_write@column,c
  6506  00E65A  0E00               	movlw	0
  6507  00E65C  6E0E               	movwf	lcd_write@row+1,c
  6508  00E65E  0E01               	movlw	1
  6509  00E660  6E0D               	movwf	lcd_write@row,c
  6510  00E662  0EEA               	movlw	low (STR_2+15)
  6511  00E664  6E0F               	movwf	lcd_write@string,c
  6512  00E666  0EFE               	movlw	high (STR_2+15)
  6513  00E668  6E10               	movwf	lcd_write@string+1,c
  6514  00E66A  ECBA  F070         	call	_lcd_write	;wreg free
  6515  00E66E  0012               	return		;funcret
  6516  00E670                     __end_of_submenu_selector_1:
  6517                           	opt stack 0
  6518                           tblptru	equ	0xFF8
  6519                           tblptrh	equ	0xFF7
  6520                           tblptrl	equ	0xFF6
  6521                           tablat	equ	0xFF5
  6522                           prodh	equ	0xFF4
  6523                           prodl	equ	0xFF3
  6524                           intcon	equ	0xFF2
  6525                           postinc0	equ	0xFEE
  6526                           wreg	equ	0xFE8
  6527                           indf1	equ	0xFE7
  6528                           postdec1	equ	0xFE5
  6529                           fsr1h	equ	0xFE2
  6530                           fsr1l	equ	0xFE1
  6531                           indf2	equ	0xFDF
  6532                           fsr2h	equ	0xFDA
  6533                           fsr2l	equ	0xFD9
  6534                           status	equ	0xFD8
  6535                           
  6536 ;; *************** function _submenu_selector_0 *****************
  6537 ;; Defined at:
  6538 ;;		line 181 in file "main.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;		None               void
  6545 ;; Registers used:
  6546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    6
  6559 ;; This function calls:
  6560 ;;		_lcd_write
  6561 ;; This function is called by:
  6562 ;;		_submenu_selector
  6563 ;;		_activity_submenu_activation
  6564 ;;		_activity_submenu_date_and_time
  6565 ;;		_activity_submenu_siren
  6566 ;;		_activity_submenu_siren_volume
  6567 ;;		_activity_submenu_siren_tone
  6568 ;;		_activity_submenu_pin
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text42
  6573  00E5EC                     __ptext42:
  6574                           	opt stack 0
  6575  00E5EC                     _submenu_selector_0:
  6576                           	opt stack 20
  6577                           
  6578                           ;main.c: 183: lcd_write(9,1,">");
  6579                           
  6580                           ;incstack = 0
  6581  00E5EC  0E00               	movlw	0
  6582  00E5EE  6E0C               	movwf	lcd_write@column+1,c
  6583  00E5F0  0E09               	movlw	9
  6584  00E5F2  6E0B               	movwf	lcd_write@column,c
  6585  00E5F4  0E00               	movlw	0
  6586  00E5F6  6E0E               	movwf	lcd_write@row+1,c
  6587  00E5F8  0E01               	movlw	1
  6588  00E5FA  6E0D               	movwf	lcd_write@row,c
  6589  00E5FC  0EF5               	movlw	low STR_4
  6590  00E5FE  6E0F               	movwf	lcd_write@string,c
  6591  00E600  0EFF               	movlw	high STR_4
  6592  00E602  6E10               	movwf	lcd_write@string+1,c
  6593  00E604  ECBA  F070         	call	_lcd_write	;wreg free
  6594                           
  6595                           ;main.c: 184: submenu_selected = 0;
  6596  00E608  0E00               	movlw	0
  6597  00E60A  6E44               	movwf	_submenu_selected+1,c
  6598  00E60C  0E00               	movlw	0
  6599  00E60E  6E43               	movwf	_submenu_selected,c
  6600                           
  6601                           ;main.c: 185: lcd_write(9,2," ");
  6602  00E610  0E00               	movlw	0
  6603  00E612  6E0C               	movwf	lcd_write@column+1,c
  6604  00E614  0E09               	movlw	9
  6605  00E616  6E0B               	movwf	lcd_write@column,c
  6606  00E618  0E00               	movlw	0
  6607  00E61A  6E0E               	movwf	lcd_write@row+1,c
  6608  00E61C  0E02               	movlw	2
  6609  00E61E  6E0D               	movwf	lcd_write@row,c
  6610  00E620  0EEA               	movlw	low (STR_2+15)
  6611  00E622  6E0F               	movwf	lcd_write@string,c
  6612  00E624  0EFE               	movlw	high (STR_2+15)
  6613  00E626  6E10               	movwf	lcd_write@string+1,c
  6614  00E628  ECBA  F070         	call	_lcd_write	;wreg free
  6615  00E62C  0012               	return		;funcret
  6616  00E62E                     __end_of_submenu_selector_0:
  6617                           	opt stack 0
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodh	equ	0xFF4
  6623                           prodl	equ	0xFF3
  6624                           intcon	equ	0xFF2
  6625                           postinc0	equ	0xFEE
  6626                           wreg	equ	0xFE8
  6627                           indf1	equ	0xFE7
  6628                           postdec1	equ	0xFE5
  6629                           fsr1h	equ	0xFE2
  6630                           fsr1l	equ	0xFE1
  6631                           indf2	equ	0xFDF
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _menu_selector *****************
  6637 ;; Defined at:
  6638 ;;		line 155 in file "main.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;		None               void
  6645 ;; Registers used:
  6646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;Total ram usage:        2 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    7
  6659 ;; This function calls:
  6660 ;;		_menu_selector_0
  6661 ;;		_menu_selector_1
  6662 ;;		_menu_selector_2
  6663 ;;		_menu_selector_3
  6664 ;; This function is called by:
  6665 ;;		_button_A
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text43
  6670  00E782                     __ptext43:
  6671                           	opt stack 0
  6672  00E782                     _menu_selector:
  6673                           	opt stack 21
  6674                           
  6675                           ;main.c: 157: switch(menu_selected){
  6676                           
  6677                           ;incstack = 0
  6678  00E782  D00C               	goto	l3727
  6679  00E784                     l3717:
  6680                           
  6681                           ;main.c: 160: menu_selector_1();
  6682  00E784  EC93  F072         	call	_menu_selector_1	;wreg free
  6683                           
  6684                           ;main.c: 161: break;
  6685  00E788  0012               	return	
  6686  00E78A                     l3719:
  6687                           
  6688                           ;main.c: 164: menu_selector_2();
  6689  00E78A  ECB4  F072         	call	_menu_selector_2	;wreg free
  6690                           
  6691                           ;main.c: 165: break;
  6692  00E78E  0012               	return	
  6693  00E790                     l3721:
  6694                           
  6695                           ;main.c: 168: menu_selector_3();
  6696  00E790  ECD5  F072         	call	_menu_selector_3	;wreg free
  6697                           
  6698                           ;main.c: 169: break;
  6699  00E794  0012               	return	
  6700  00E796                     l3723:
  6701                           
  6702                           ;main.c: 172: menu_selector_0();
  6703  00E796  EC72  F072         	call	_menu_selector_0	;wreg free
  6704                           
  6705                           ;main.c: 175: }
  6706                           
  6707                           ;main.c: 173: break;
  6708  00E79A  0012               	return	
  6709  00E79C                     l3727:
  6710  00E79C  C03B  F011         	movff	_menu_selected,??_menu_selector
  6711  00E7A0  C03C  F012         	movff	_menu_selected+1,??_menu_selector+1
  6712                           
  6713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6714                           ; Switch size 1, requested type "space"
  6715                           ; Number of cases is 1, Range of values is 0 to 0
  6716                           ; switch strategies available:
  6717                           ; Name         Instructions Cycles
  6718                           ; simple_byte            4     3 (average)
  6719                           ;	Chosen strategy is simple_byte
  6720  00E7A4  5012               	movf	??_menu_selector+1,w,c
  6721  00E7A6  0A00               	xorlw	0	; case 0
  6722  00E7A8  A4D8               	btfss	status,2,c
  6723  00E7AA  0012               	return	
  6724                           
  6725                           ; Switch size 1, requested type "space"
  6726                           ; Number of cases is 4, Range of values is 0 to 3
  6727                           ; switch strategies available:
  6728                           ; Name         Instructions Cycles
  6729                           ; simple_byte           13     7 (average)
  6730                           ;	Chosen strategy is simple_byte
  6731  00E7AC  5011               	movf	??_menu_selector,w,c
  6732  00E7AE  0A00               	xorlw	0	; case 0
  6733  00E7B0  B4D8               	btfsc	status,2,c
  6734  00E7B2  D7E8               	goto	l3717
  6735  00E7B4  0A01               	xorlw	1	; case 1
  6736  00E7B6  B4D8               	btfsc	status,2,c
  6737  00E7B8  D7E8               	goto	l3719
  6738  00E7BA  0A03               	xorlw	3	; case 2
  6739  00E7BC  B4D8               	btfsc	status,2,c
  6740  00E7BE  D7E8               	goto	l3721
  6741  00E7C0  0A01               	xorlw	1	; case 3
  6742  00E7C2  A4D8               	btfss	status,2,c
  6743  00E7C4  0012               	return	
  6744  00E7C6  D7E7               	goto	l3723
  6745  00E7C8  0012               	return		;funcret
  6746  00E7CA                     __end_of_menu_selector:
  6747                           	opt stack 0
  6748                           tblptru	equ	0xFF8
  6749                           tblptrh	equ	0xFF7
  6750                           tblptrl	equ	0xFF6
  6751                           tablat	equ	0xFF5
  6752                           prodh	equ	0xFF4
  6753                           prodl	equ	0xFF3
  6754                           intcon	equ	0xFF2
  6755                           postinc0	equ	0xFEE
  6756                           wreg	equ	0xFE8
  6757                           indf1	equ	0xFE7
  6758                           postdec1	equ	0xFE5
  6759                           fsr1h	equ	0xFE2
  6760                           fsr1l	equ	0xFE1
  6761                           indf2	equ	0xFDF
  6762                           fsr2h	equ	0xFDA
  6763                           fsr2l	equ	0xFD9
  6764                           status	equ	0xFD8
  6765                           
  6766 ;; *************** function _menu_selector_3 *****************
  6767 ;; Defined at:
  6768 ;;		line 147 in file "main.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;		None
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;		None
  6773 ;; Return value:  Size  Location     Type
  6774 ;;		None               void
  6775 ;; Registers used:
  6776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;Total ram usage:        0 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    6
  6789 ;; This function calls:
  6790 ;;		_lcd_write
  6791 ;; This function is called by:
  6792 ;;		_menu_selector
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           	psect	text44
  6797  00E5AA                     __ptext44:
  6798                           	opt stack 0
  6799  00E5AA                     _menu_selector_3:
  6800                           	opt stack 21
  6801                           
  6802                           ;main.c: 149: lcd_write(9,2,">");
  6803                           
  6804                           ;incstack = 0
  6805  00E5AA  0E00               	movlw	0
  6806  00E5AC  6E0C               	movwf	lcd_write@column+1,c
  6807  00E5AE  0E09               	movlw	9
  6808  00E5B0  6E0B               	movwf	lcd_write@column,c
  6809  00E5B2  0E00               	movlw	0
  6810  00E5B4  6E0E               	movwf	lcd_write@row+1,c
  6811  00E5B6  0E02               	movlw	2
  6812  00E5B8  6E0D               	movwf	lcd_write@row,c
  6813  00E5BA  0EF5               	movlw	low STR_4
  6814  00E5BC  6E0F               	movwf	lcd_write@string,c
  6815  00E5BE  0EFF               	movlw	high STR_4
  6816  00E5C0  6E10               	movwf	lcd_write@string+1,c
  6817  00E5C2  ECBA  F070         	call	_lcd_write	;wreg free
  6818                           
  6819                           ;main.c: 150: menu_selected = 3;
  6820  00E5C6  0E00               	movlw	0
  6821  00E5C8  6E3C               	movwf	_menu_selected+1,c
  6822  00E5CA  0E03               	movlw	3
  6823  00E5CC  6E3B               	movwf	_menu_selected,c
  6824                           
  6825                           ;main.c: 151: lcd_write(9,1," ");
  6826  00E5CE  0E00               	movlw	0
  6827  00E5D0  6E0C               	movwf	lcd_write@column+1,c
  6828  00E5D2  0E09               	movlw	9
  6829  00E5D4  6E0B               	movwf	lcd_write@column,c
  6830  00E5D6  0E00               	movlw	0
  6831  00E5D8  6E0E               	movwf	lcd_write@row+1,c
  6832  00E5DA  0E01               	movlw	1
  6833  00E5DC  6E0D               	movwf	lcd_write@row,c
  6834  00E5DE  0EEA               	movlw	low (STR_2+15)
  6835  00E5E0  6E0F               	movwf	lcd_write@string,c
  6836  00E5E2  0EFE               	movlw	high (STR_2+15)
  6837  00E5E4  6E10               	movwf	lcd_write@string+1,c
  6838  00E5E6  ECBA  F070         	call	_lcd_write	;wreg free
  6839  00E5EA  0012               	return		;funcret
  6840  00E5EC                     __end_of_menu_selector_3:
  6841                           	opt stack 0
  6842                           tblptru	equ	0xFF8
  6843                           tblptrh	equ	0xFF7
  6844                           tblptrl	equ	0xFF6
  6845                           tablat	equ	0xFF5
  6846                           prodh	equ	0xFF4
  6847                           prodl	equ	0xFF3
  6848                           intcon	equ	0xFF2
  6849                           postinc0	equ	0xFEE
  6850                           wreg	equ	0xFE8
  6851                           indf1	equ	0xFE7
  6852                           postdec1	equ	0xFE5
  6853                           fsr1h	equ	0xFE2
  6854                           fsr1l	equ	0xFE1
  6855                           indf2	equ	0xFDF
  6856                           fsr2h	equ	0xFDA
  6857                           fsr2l	equ	0xFD9
  6858                           status	equ	0xFD8
  6859                           
  6860 ;; *************** function _menu_selector_2 *****************
  6861 ;; Defined at:
  6862 ;;		line 139 in file "main.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;		None               void
  6869 ;; Registers used:
  6870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    6
  6883 ;; This function calls:
  6884 ;;		_lcd_write
  6885 ;; This function is called by:
  6886 ;;		_menu_selector
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text45
  6891  00E568                     __ptext45:
  6892                           	opt stack 0
  6893  00E568                     _menu_selector_2:
  6894                           	opt stack 21
  6895                           
  6896                           ;main.c: 141: lcd_write(9,1,">");
  6897                           
  6898                           ;incstack = 0
  6899  00E568  0E00               	movlw	0
  6900  00E56A  6E0C               	movwf	lcd_write@column+1,c
  6901  00E56C  0E09               	movlw	9
  6902  00E56E  6E0B               	movwf	lcd_write@column,c
  6903  00E570  0E00               	movlw	0
  6904  00E572  6E0E               	movwf	lcd_write@row+1,c
  6905  00E574  0E01               	movlw	1
  6906  00E576  6E0D               	movwf	lcd_write@row,c
  6907  00E578  0EF5               	movlw	low STR_4
  6908  00E57A  6E0F               	movwf	lcd_write@string,c
  6909  00E57C  0EFF               	movlw	high STR_4
  6910  00E57E  6E10               	movwf	lcd_write@string+1,c
  6911  00E580  ECBA  F070         	call	_lcd_write	;wreg free
  6912                           
  6913                           ;main.c: 142: menu_selected = 2;
  6914  00E584  0E00               	movlw	0
  6915  00E586  6E3C               	movwf	_menu_selected+1,c
  6916  00E588  0E02               	movlw	2
  6917  00E58A  6E3B               	movwf	_menu_selected,c
  6918                           
  6919                           ;main.c: 143: lcd_write(1,2," ");
  6920  00E58C  0E00               	movlw	0
  6921  00E58E  6E0C               	movwf	lcd_write@column+1,c
  6922  00E590  0E01               	movlw	1
  6923  00E592  6E0B               	movwf	lcd_write@column,c
  6924  00E594  0E00               	movlw	0
  6925  00E596  6E0E               	movwf	lcd_write@row+1,c
  6926  00E598  0E02               	movlw	2
  6927  00E59A  6E0D               	movwf	lcd_write@row,c
  6928  00E59C  0EEA               	movlw	low (STR_2+15)
  6929  00E59E  6E0F               	movwf	lcd_write@string,c
  6930  00E5A0  0EFE               	movlw	high (STR_2+15)
  6931  00E5A2  6E10               	movwf	lcd_write@string+1,c
  6932  00E5A4  ECBA  F070         	call	_lcd_write	;wreg free
  6933  00E5A8  0012               	return		;funcret
  6934  00E5AA                     __end_of_menu_selector_2:
  6935                           	opt stack 0
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           prodh	equ	0xFF4
  6941                           prodl	equ	0xFF3
  6942                           intcon	equ	0xFF2
  6943                           postinc0	equ	0xFEE
  6944                           wreg	equ	0xFE8
  6945                           indf1	equ	0xFE7
  6946                           postdec1	equ	0xFE5
  6947                           fsr1h	equ	0xFE2
  6948                           fsr1l	equ	0xFE1
  6949                           indf2	equ	0xFDF
  6950                           fsr2h	equ	0xFDA
  6951                           fsr2l	equ	0xFD9
  6952                           status	equ	0xFD8
  6953                           
  6954 ;; *************** function _menu_selector_1 *****************
  6955 ;; Defined at:
  6956 ;;		line 131 in file "main.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;		None
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;		None               void
  6963 ;; Registers used:
  6964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6974 ;;Total ram usage:        0 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    6
  6977 ;; This function calls:
  6978 ;;		_lcd_write
  6979 ;; This function is called by:
  6980 ;;		_menu_selector
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text46
  6985  00E526                     __ptext46:
  6986                           	opt stack 0
  6987  00E526                     _menu_selector_1:
  6988                           	opt stack 21
  6989                           
  6990                           ;main.c: 133: lcd_write(1,2,">");
  6991                           
  6992                           ;incstack = 0
  6993  00E526  0E00               	movlw	0
  6994  00E528  6E0C               	movwf	lcd_write@column+1,c
  6995  00E52A  0E01               	movlw	1
  6996  00E52C  6E0B               	movwf	lcd_write@column,c
  6997  00E52E  0E00               	movlw	0
  6998  00E530  6E0E               	movwf	lcd_write@row+1,c
  6999  00E532  0E02               	movlw	2
  7000  00E534  6E0D               	movwf	lcd_write@row,c
  7001  00E536  0EF5               	movlw	low STR_4
  7002  00E538  6E0F               	movwf	lcd_write@string,c
  7003  00E53A  0EFF               	movlw	high STR_4
  7004  00E53C  6E10               	movwf	lcd_write@string+1,c
  7005  00E53E  ECBA  F070         	call	_lcd_write	;wreg free
  7006                           
  7007                           ;main.c: 134: menu_selected = 1;
  7008  00E542  0E00               	movlw	0
  7009  00E544  6E3C               	movwf	_menu_selected+1,c
  7010  00E546  0E01               	movlw	1
  7011  00E548  6E3B               	movwf	_menu_selected,c
  7012                           
  7013                           ;main.c: 135: lcd_write(1,1," ");
  7014  00E54A  0E00               	movlw	0
  7015  00E54C  6E0C               	movwf	lcd_write@column+1,c
  7016  00E54E  0E01               	movlw	1
  7017  00E550  6E0B               	movwf	lcd_write@column,c
  7018  00E552  0E00               	movlw	0
  7019  00E554  6E0E               	movwf	lcd_write@row+1,c
  7020  00E556  0E01               	movlw	1
  7021  00E558  6E0D               	movwf	lcd_write@row,c
  7022  00E55A  0EEA               	movlw	low (STR_2+15)
  7023  00E55C  6E0F               	movwf	lcd_write@string,c
  7024  00E55E  0EFE               	movlw	high (STR_2+15)
  7025  00E560  6E10               	movwf	lcd_write@string+1,c
  7026  00E562  ECBA  F070         	call	_lcd_write	;wreg free
  7027  00E566  0012               	return		;funcret
  7028  00E568                     __end_of_menu_selector_1:
  7029                           	opt stack 0
  7030                           tblptru	equ	0xFF8
  7031                           tblptrh	equ	0xFF7
  7032                           tblptrl	equ	0xFF6
  7033                           tablat	equ	0xFF5
  7034                           prodh	equ	0xFF4
  7035                           prodl	equ	0xFF3
  7036                           intcon	equ	0xFF2
  7037                           postinc0	equ	0xFEE
  7038                           wreg	equ	0xFE8
  7039                           indf1	equ	0xFE7
  7040                           postdec1	equ	0xFE5
  7041                           fsr1h	equ	0xFE2
  7042                           fsr1l	equ	0xFE1
  7043                           indf2	equ	0xFDF
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function _menu_selector_0 *****************
  7049 ;; Defined at:
  7050 ;;		line 123 in file "main.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;		None               void
  7057 ;; Registers used:
  7058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    6
  7071 ;; This function calls:
  7072 ;;		_lcd_write
  7073 ;; This function is called by:
  7074 ;;		_menu_selector
  7075 ;;		_activity_menu
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text47
  7080  00E4E4                     __ptext47:
  7081                           	opt stack 0
  7082  00E4E4                     _menu_selector_0:
  7083                           	opt stack 20
  7084                           
  7085                           ;main.c: 125: lcd_write(1,1,">");
  7086                           
  7087                           ;incstack = 0
  7088  00E4E4  0E00               	movlw	0
  7089  00E4E6  6E0C               	movwf	lcd_write@column+1,c
  7090  00E4E8  0E01               	movlw	1
  7091  00E4EA  6E0B               	movwf	lcd_write@column,c
  7092  00E4EC  0E00               	movlw	0
  7093  00E4EE  6E0E               	movwf	lcd_write@row+1,c
  7094  00E4F0  0E01               	movlw	1
  7095  00E4F2  6E0D               	movwf	lcd_write@row,c
  7096  00E4F4  0EF5               	movlw	low STR_4
  7097  00E4F6  6E0F               	movwf	lcd_write@string,c
  7098  00E4F8  0EFF               	movlw	high STR_4
  7099  00E4FA  6E10               	movwf	lcd_write@string+1,c
  7100  00E4FC  ECBA  F070         	call	_lcd_write	;wreg free
  7101                           
  7102                           ;main.c: 126: menu_selected = 0;
  7103  00E500  0E00               	movlw	0
  7104  00E502  6E3C               	movwf	_menu_selected+1,c
  7105  00E504  0E00               	movlw	0
  7106  00E506  6E3B               	movwf	_menu_selected,c
  7107                           
  7108                           ;main.c: 127: lcd_write(9,2," ");
  7109  00E508  0E00               	movlw	0
  7110  00E50A  6E0C               	movwf	lcd_write@column+1,c
  7111  00E50C  0E09               	movlw	9
  7112  00E50E  6E0B               	movwf	lcd_write@column,c
  7113  00E510  0E00               	movlw	0
  7114  00E512  6E0E               	movwf	lcd_write@row+1,c
  7115  00E514  0E02               	movlw	2
  7116  00E516  6E0D               	movwf	lcd_write@row,c
  7117  00E518  0EEA               	movlw	low (STR_2+15)
  7118  00E51A  6E0F               	movwf	lcd_write@string,c
  7119  00E51C  0EFE               	movlw	high (STR_2+15)
  7120  00E51E  6E10               	movwf	lcd_write@string+1,c
  7121  00E520  ECBA  F070         	call	_lcd_write	;wreg free
  7122  00E524  0012               	return		;funcret
  7123  00E526                     __end_of_menu_selector_0:
  7124                           	opt stack 0
  7125                           tblptru	equ	0xFF8
  7126                           tblptrh	equ	0xFF7
  7127                           tblptrl	equ	0xFF6
  7128                           tablat	equ	0xFF5
  7129                           prodh	equ	0xFF4
  7130                           prodl	equ	0xFF3
  7131                           intcon	equ	0xFF2
  7132                           postinc0	equ	0xFEE
  7133                           wreg	equ	0xFE8
  7134                           indf1	equ	0xFE7
  7135                           postdec1	equ	0xFE5
  7136                           fsr1h	equ	0xFE2
  7137                           fsr1l	equ	0xFE1
  7138                           indf2	equ	0xFDF
  7139                           fsr2h	equ	0xFDA
  7140                           fsr2l	equ	0xFD9
  7141                           status	equ	0xFD8
  7142                           
  7143 ;; *************** function _activity_pin *****************
  7144 ;; Defined at:
  7145 ;;		line 214 in file "main.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;		None
  7150 ;; Return value:  Size  Location     Type
  7151 ;;		None               void
  7152 ;; Registers used:
  7153 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;Total ram usage:        0 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    6
  7166 ;; This function calls:
  7167 ;;		_lcd_comand
  7168 ;;		_lcd_gotoxy
  7169 ;;		_lcd_init
  7170 ;;		_lcd_write
  7171 ;;		_strcpy
  7172 ;; This function is called by:
  7173 ;;		_pin_input_validator
  7174 ;;		_button_A
  7175 ;;		_button_B
  7176 ;;		_button_C
  7177 ;;		_button_D
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           	psect	text48
  7182  00E93E                     __ptext48:
  7183                           	opt stack 0
  7184  00E93E                     _activity_pin:
  7185                           	opt stack 21
  7186                           
  7187                           ;main.c: 216: activity = 1;
  7188                           
  7189                           ;incstack = 0
  7190  00E93E  0E00               	movlw	0
  7191  00E940  6E2A               	movwf	_activity+1,c
  7192  00E942  0E01               	movlw	1
  7193  00E944  6E29               	movwf	_activity,c
  7194                           
  7195                           ;main.c: 217: strcpy(pin_input, "");
  7196  00E946  0E9F               	movlw	low _pin_input
  7197  00E948  6E01               	movwf	strcpy@to,c
  7198  00E94A  0E00               	movlw	high _pin_input
  7199  00E94C  6E02               	movwf	strcpy@to+1,c
  7200  00E94E  0EEB               	movlw	low (STR_2+16)
  7201  00E950  6E03               	movwf	strcpy@from,c
  7202  00E952  0EFE               	movlw	high (STR_2+16)
  7203  00E954  6E04               	movwf	strcpy@from+1,c
  7204  00E956  EC9E  F073         	call	_strcpy	;wreg free
  7205                           
  7206                           ;main.c: 218: lcd_init();
  7207  00E95A  EC2E  F078         	call	_lcd_init	;wreg free
  7208                           
  7209                           ;main.c: 219: lcd_write(1,1,"Ingrese su PIN:");
  7210  00E95E  0E00               	movlw	0
  7211  00E960  6E0C               	movwf	lcd_write@column+1,c
  7212  00E962  0E01               	movlw	1
  7213  00E964  6E0B               	movwf	lcd_write@column,c
  7214  00E966  0E00               	movlw	0
  7215  00E968  6E0E               	movwf	lcd_write@row+1,c
  7216  00E96A  0E01               	movlw	1
  7217  00E96C  6E0D               	movwf	lcd_write@row,c
  7218  00E96E  0E0E               	movlw	low STR_17
  7219  00E970  6E0F               	movwf	lcd_write@string,c
  7220  00E972  0EFF               	movlw	high STR_17
  7221  00E974  6E10               	movwf	lcd_write@string+1,c
  7222  00E976  ECBA  F070         	call	_lcd_write	;wreg free
  7223                           
  7224                           ;main.c: 220: lcd_gotoxy(1,2);
  7225  00E97A  0E02               	movlw	2
  7226  00E97C  6E05               	movwf	lcd_gotoxy@y,c
  7227  00E97E  0E01               	movlw	1
  7228  00E980  ECFE  F070         	call	_lcd_gotoxy
  7229                           
  7230                           ;main.c: 221: lcd_comand(0b00001111);
  7231  00E984  0E0F               	movlw	15
  7232  00E986  EC8D  F070         	call	_lcd_comand
  7233  00E98A  0012               	return		;funcret
  7234  00E98C                     __end_of_activity_pin:
  7235                           	opt stack 0
  7236                           tblptru	equ	0xFF8
  7237                           tblptrh	equ	0xFF7
  7238                           tblptrl	equ	0xFF6
  7239                           tablat	equ	0xFF5
  7240                           prodh	equ	0xFF4
  7241                           prodl	equ	0xFF3
  7242                           intcon	equ	0xFF2
  7243                           postinc0	equ	0xFEE
  7244                           wreg	equ	0xFE8
  7245                           indf1	equ	0xFE7
  7246                           postdec1	equ	0xFE5
  7247                           fsr1h	equ	0xFE2
  7248                           fsr1l	equ	0xFE1
  7249                           indf2	equ	0xFDF
  7250                           fsr2h	equ	0xFDA
  7251                           fsr2l	equ	0xFD9
  7252                           status	equ	0xFD8
  7253                           
  7254 ;; *************** function _strcpy *****************
  7255 ;; Defined at:
  7256 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  to              2    0[COMRAM] PTR unsigned char 
  7259 ;;		 -> pin(5), pin_input(5), 
  7260 ;;  from            2    2[COMRAM] PTR const unsigned char 
  7261 ;;		 -> STR_48(5), STR_46(1), STR_16(1), pin_input(5), 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  cp              2    4[COMRAM] PTR unsigned char 
  7264 ;;		 -> pin(5), pin_input(5), 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  2    0[COMRAM] PTR unsigned char 
  7267 ;; Registers used:
  7268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;Total ram usage:        6 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_activity_pin
  7284 ;;		_activity_submenu_pin_set
  7285 ;;		_pin_set
  7286 ;;		_pin_reset
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text49
  7291  00E73C                     __ptext49:
  7292                           	opt stack 0
  7293  00E73C                     _strcpy:
  7294                           	opt stack 28
  7295                           
  7296                           ;incstack = 0
  7297  00E73C  C001  F005         	movff	strcpy@to,strcpy@cp
  7298  00E740  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  7299  00E744  D005               	goto	l3335
  7300  00E746                     l3333:
  7301  00E746  4A05               	infsnz	strcpy@cp,f,c
  7302  00E748  2A06               	incf	strcpy@cp+1,f,c
  7303  00E74A  4A03               	infsnz	strcpy@from,f,c
  7304  00E74C  2A04               	incf	strcpy@from+1,f,c
  7305  00E74E  D000               	goto	l3335
  7306  00E750                     l3335:
  7307  00E750  C003  FFF6         	movff	strcpy@from,tblptrl
  7308  00E754  C004  FFF7         	movff	strcpy@from+1,tblptrh
  7309  00E758  6AF8               	clrf	tblptru,c
  7310  00E75A  C005  FFD9         	movff	strcpy@cp,fsr2l
  7311  00E75E  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  7312  00E762  0E0E               	movlw	(high __ramtop+-1)
  7313  00E764  64F7               	cpfsgt	tblptrh,c
  7314  00E766  D003               	bra	u1907
  7315  00E768  0008               	tblrd		*
  7316  00E76A  50F5               	movf	tablat,w,c
  7317  00E76C  D005               	bra	u1900
  7318  00E76E                     u1907:
  7319  00E76E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7320  00E772  CFF7 FFEA          	movff	tblptrh,fsr0h
  7321  00E776  50EF               	movf	indf0,w,c
  7322  00E778                     u1900:
  7323  00E778  6EDF               	movwf	indf2,c
  7324  00E77A  50DF               	movf	indf2,w,c
  7325  00E77C  A4D8               	btfss	status,2,c
  7326  00E77E  D7E3               	goto	l3333
  7327                           
  7328                           ;	Return value of _strcpy is never used
  7329  00E780  0012               	return		;funcret
  7330  00E782                     __end_of_strcpy:
  7331                           	opt stack 0
  7332                           tblptru	equ	0xFF8
  7333                           tblptrh	equ	0xFF7
  7334                           tblptrl	equ	0xFF6
  7335                           tablat	equ	0xFF5
  7336                           prodh	equ	0xFF4
  7337                           prodl	equ	0xFF3
  7338                           intcon	equ	0xFF2
  7339                           indf0	equ	0xFEF
  7340                           postinc0	equ	0xFEE
  7341                           fsr0h	equ	0xFEA
  7342                           fsr0l	equ	0xFE9
  7343                           wreg	equ	0xFE8
  7344                           indf1	equ	0xFE7
  7345                           postdec1	equ	0xFE5
  7346                           fsr1h	equ	0xFE2
  7347                           fsr1l	equ	0xFE1
  7348                           indf2	equ	0xFDF
  7349                           fsr2h	equ	0xFDA
  7350                           fsr2l	equ	0xFD9
  7351                           status	equ	0xFD8
  7352                           
  7353 ;; *************** function _lcd_comand *****************
  7354 ;; Defined at:
  7355 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;  d               1    wreg     unsigned char 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  d               1    4[COMRAM] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;		None               void
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7373 ;;Total ram usage:        1 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    2
  7376 ;; This function calls:
  7377 ;;		_lcd_send_byte
  7378 ;; This function is called by:
  7379 ;;		_activity_pin
  7380 ;;		_activity_submenu_date_config
  7381 ;;		_activity_submenu_time_config
  7382 ;;		_activity_submenu_pin_set
  7383 ;;		_setup
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text50
  7388  00E11A                     __ptext50:
  7389                           	opt stack 0
  7390  00E11A                     _lcd_comand:
  7391                           	opt stack 27
  7392                           
  7393                           ;incstack = 0
  7394                           ;lcd_comand@d stored from wreg
  7395  00E11A  6E05               	movwf	lcd_comand@d,c
  7396                           
  7397                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  7398  00E11C  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  7399  00E120  0E00               	movlw	0
  7400  00E122  EC97  F071         	call	_lcd_send_byte
  7401  00E126  0012               	return		;funcret
  7402  00E128                     __end_of_lcd_comand:
  7403                           	opt stack 0
  7404                           tblptru	equ	0xFF8
  7405                           tblptrh	equ	0xFF7
  7406                           tblptrl	equ	0xFF6
  7407                           tablat	equ	0xFF5
  7408                           prodh	equ	0xFF4
  7409                           prodl	equ	0xFF3
  7410                           intcon	equ	0xFF2
  7411                           indf0	equ	0xFEF
  7412                           postinc0	equ	0xFEE
  7413                           fsr0h	equ	0xFEA
  7414                           fsr0l	equ	0xFE9
  7415                           wreg	equ	0xFE8
  7416                           indf1	equ	0xFE7
  7417                           postdec1	equ	0xFE5
  7418                           fsr1h	equ	0xFE2
  7419                           fsr1l	equ	0xFE1
  7420                           indf2	equ	0xFDF
  7421                           fsr2h	equ	0xFDA
  7422                           fsr2l	equ	0xFD9
  7423                           status	equ	0xFD8
  7424                           
  7425 ;; *************** function _home_config_refresh *****************
  7426 ;; Defined at:
  7427 ;;		line 520 in file "main.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;		None
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;		None               void
  7434 ;; Registers used:
  7435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7445 ;;Total ram usage:        2 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    7
  7448 ;; This function calls:
  7449 ;;		_home_state_refresh
  7450 ;;		_home_tone_refresh
  7451 ;;		_home_volume_refresh
  7452 ;; This function is called by:
  7453 ;;		_main
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text51
  7458  00F5C8                     __ptext51:
  7459                           	opt stack 0
  7460  00F5C8                     _home_config_refresh:
  7461                           	opt stack 23
  7462                           
  7463                           ;main.c: 522: if(state == 1){LATBbits.LATB1 = 1;;}
  7464                           
  7465                           ;incstack = 0
  7466  00F5C8  0441               	decf	_state,w,c
  7467  00F5CA  1042               	iorwf	_state+1,w,c
  7468  00F5CC  A4D8               	btfss	status,2,c
  7469  00F5CE  D002               	goto	l4203
  7470  00F5D0  828A               	bsf	3978,1,c	;volatile
  7471  00F5D2  D000               	goto	l4203
  7472  00F5D4                     l4203:
  7473                           
  7474                           ;main.c: 523: if(state == 0){LATBbits.LATB1 = 0;;}
  7475  00F5D4  5041               	movf	_state,w,c
  7476  00F5D6  1042               	iorwf	_state+1,w,c
  7477  00F5D8  A4D8               	btfss	status,2,c
  7478  00F5DA  D002               	goto	l4207
  7479  00F5DC  928A               	bcf	3978,1,c	;volatile
  7480  00F5DE  D000               	goto	l4207
  7481  00F5E0                     l4207:
  7482                           
  7483                           ;main.c: 525: config_widget_time++;
  7484  00F5E0  4A31               	infsnz	_config_widget_time,f,c
  7485  00F5E2  2A32               	incf	_config_widget_time+1,f,c
  7486                           
  7487                           ;main.c: 527: switch(config_widget){
  7488  00F5E4  D030               	goto	l4229
  7489  00F5E6                     l4209:
  7490                           
  7491                           ;main.c: 530: home_state_refresh();
  7492  00F5E6  EC3B  F075         	call	_home_state_refresh	;wreg free
  7493                           
  7494                           ;main.c: 531: if(config_widget_time == 5){
  7495  00F5EA  0E05               	movlw	5
  7496  00F5EC  1831               	xorwf	_config_widget_time,w,c
  7497  00F5EE  1032               	iorwf	_config_widget_time+1,w,c
  7498  00F5F0  A4D8               	btfss	status,2,c
  7499  00F5F2  0012               	return	
  7500                           
  7501                           ;main.c: 532: config_widget_time = 0;
  7502  00F5F4  0E00               	movlw	0
  7503  00F5F6  6E32               	movwf	_config_widget_time+1,c
  7504  00F5F8  0E00               	movlw	0
  7505  00F5FA  6E31               	movwf	_config_widget_time,c
  7506                           
  7507                           ;main.c: 533: config_widget = 1;
  7508  00F5FC  0E00               	movlw	0
  7509  00F5FE  6E30               	movwf	_config_widget+1,c
  7510  00F600  0E01               	movlw	1
  7511  00F602  6E2F               	movwf	_config_widget,c
  7512                           
  7513                           ;main.c: 534: }
  7514                           ;main.c: 535: break;
  7515  00F604  0012               	return	
  7516  00F606                     l4215:
  7517                           
  7518                           ;main.c: 538: home_volume_refresh();
  7519  00F606  EC8D  F075         	call	_home_volume_refresh	;wreg free
  7520                           
  7521                           ;main.c: 539: if(config_widget_time == 5){
  7522  00F60A  0E05               	movlw	5
  7523  00F60C  1831               	xorwf	_config_widget_time,w,c
  7524  00F60E  1032               	iorwf	_config_widget_time+1,w,c
  7525  00F610  A4D8               	btfss	status,2,c
  7526  00F612  0012               	return	
  7527                           
  7528                           ;main.c: 540: config_widget_time = 0;
  7529  00F614  0E00               	movlw	0
  7530  00F616  6E32               	movwf	_config_widget_time+1,c
  7531  00F618  0E00               	movlw	0
  7532  00F61A  6E31               	movwf	_config_widget_time,c
  7533                           
  7534                           ;main.c: 541: config_widget = 2;
  7535  00F61C  0E00               	movlw	0
  7536  00F61E  6E30               	movwf	_config_widget+1,c
  7537  00F620  0E02               	movlw	2
  7538  00F622  6E2F               	movwf	_config_widget,c
  7539                           
  7540                           ;main.c: 542: }
  7541                           ;main.c: 543: break;
  7542  00F624  0012               	return	
  7543  00F626                     l4221:
  7544                           
  7545                           ;main.c: 546: home_tone_refresh();
  7546  00F626  EC64  F075         	call	_home_tone_refresh	;wreg free
  7547                           
  7548                           ;main.c: 547: if(config_widget_time == 5){
  7549  00F62A  0E05               	movlw	5
  7550  00F62C  1831               	xorwf	_config_widget_time,w,c
  7551  00F62E  1032               	iorwf	_config_widget_time+1,w,c
  7552  00F630  A4D8               	btfss	status,2,c
  7553  00F632  0012               	return	
  7554                           
  7555                           ;main.c: 548: config_widget_time = 0;
  7556  00F634  0E00               	movlw	0
  7557  00F636  6E32               	movwf	_config_widget_time+1,c
  7558  00F638  0E00               	movlw	0
  7559  00F63A  6E31               	movwf	_config_widget_time,c
  7560                           
  7561                           ;main.c: 549: config_widget = 0;
  7562  00F63C  0E00               	movlw	0
  7563  00F63E  6E30               	movwf	_config_widget+1,c
  7564  00F640  0E00               	movlw	0
  7565  00F642  6E2F               	movwf	_config_widget,c
  7566                           
  7567                           ;main.c: 553: }
  7568                           
  7569                           ;main.c: 550: }
  7570                           ;main.c: 551: break;
  7571  00F644  0012               	return	
  7572  00F646                     l4229:
  7573  00F646  C02F  F024         	movff	_config_widget,??_home_config_refresh
  7574  00F64A  C030  F025         	movff	_config_widget+1,??_home_config_refresh+1
  7575                           
  7576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7577                           ; Switch size 1, requested type "space"
  7578                           ; Number of cases is 1, Range of values is 0 to 0
  7579                           ; switch strategies available:
  7580                           ; Name         Instructions Cycles
  7581                           ; simple_byte            4     3 (average)
  7582                           ;	Chosen strategy is simple_byte
  7583  00F64E  5025               	movf	??_home_config_refresh+1,w,c
  7584  00F650  0A00               	xorlw	0	; case 0
  7585  00F652  A4D8               	btfss	status,2,c
  7586  00F654  0012               	return	
  7587                           
  7588                           ; Switch size 1, requested type "space"
  7589                           ; Number of cases is 3, Range of values is 0 to 2
  7590                           ; switch strategies available:
  7591                           ; Name         Instructions Cycles
  7592                           ; simple_byte           10     6 (average)
  7593                           ;	Chosen strategy is simple_byte
  7594  00F656  5024               	movf	??_home_config_refresh,w,c
  7595  00F658  0A00               	xorlw	0	; case 0
  7596  00F65A  B4D8               	btfsc	status,2,c
  7597  00F65C  D7C4               	goto	l4209
  7598  00F65E  0A01               	xorlw	1	; case 1
  7599  00F660  B4D8               	btfsc	status,2,c
  7600  00F662  D7D1               	goto	l4215
  7601  00F664  0A03               	xorlw	3	; case 2
  7602  00F666  A4D8               	btfss	status,2,c
  7603  00F668  0012               	return	
  7604  00F66A  D7DD               	goto	l4221
  7605  00F66C  0012               	return		;funcret
  7606  00F66E                     __end_of_home_config_refresh:
  7607                           	opt stack 0
  7608                           tblptru	equ	0xFF8
  7609                           tblptrh	equ	0xFF7
  7610                           tblptrl	equ	0xFF6
  7611                           tablat	equ	0xFF5
  7612                           prodh	equ	0xFF4
  7613                           prodl	equ	0xFF3
  7614                           intcon	equ	0xFF2
  7615                           indf0	equ	0xFEF
  7616                           postinc0	equ	0xFEE
  7617                           fsr0h	equ	0xFEA
  7618                           fsr0l	equ	0xFE9
  7619                           wreg	equ	0xFE8
  7620                           indf1	equ	0xFE7
  7621                           postdec1	equ	0xFE5
  7622                           fsr1h	equ	0xFE2
  7623                           fsr1l	equ	0xFE1
  7624                           indf2	equ	0xFDF
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function _home_volume_refresh *****************
  7630 ;; Defined at:
  7631 ;;		line 496 in file "main.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;		None               void
  7638 ;; Registers used:
  7639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    6
  7652 ;; This function calls:
  7653 ;;		_lcd_write
  7654 ;;		_sprintf
  7655 ;; This function is called by:
  7656 ;;		_home_config_refresh
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text52
  7661  00EB1A                     __ptext52:
  7662                           	opt stack 0
  7663  00EB1A                     _home_volume_refresh:
  7664                           	opt stack 23
  7665                           
  7666                           ;main.c: 498: if(alarm_volume == 0){
  7667                           
  7668                           ;incstack = 0
  7669  00EB1A  502D               	movf	_alarm_volume,w,c
  7670  00EB1C  102E               	iorwf	_alarm_volume+1,w,c
  7671  00EB1E  A4D8               	btfss	status,2,c
  7672  00EB20  D00B               	goto	l4015
  7673                           
  7674                           ;main.c: 499: sprintf(buffer1,"VOL:BA");
  7675  00EB22  0E86               	movlw	low _buffer1
  7676  00EB24  6E0D               	movwf	sprintf@sp,c
  7677  00EB26  0E00               	movlw	high _buffer1
  7678  00EB28  6E0E               	movwf	sprintf@sp+1,c
  7679  00EB2A  0E8B               	movlw	low STR_53
  7680  00EB2C  6E0F               	movwf	sprintf@f,c
  7681  00EB2E  0EFF               	movlw	high STR_53
  7682  00EB30  6E10               	movwf	sprintf@f+1,c
  7683  00EB32  EC34  F07E         	call	_sprintf	;wreg free
  7684                           
  7685                           ;main.c: 500: }
  7686  00EB36  D00B               	goto	l4017
  7687  00EB38                     l4015:
  7688                           
  7689                           ;main.c: 501: else{
  7690                           ;main.c: 502: sprintf(buffer1,"VOL:AL");
  7691  00EB38  0E86               	movlw	low _buffer1
  7692  00EB3A  6E0D               	movwf	sprintf@sp,c
  7693  00EB3C  0E00               	movlw	high _buffer1
  7694  00EB3E  6E0E               	movwf	sprintf@sp+1,c
  7695  00EB40  0E99               	movlw	low STR_54
  7696  00EB42  6E0F               	movwf	sprintf@f,c
  7697  00EB44  0EFF               	movlw	high STR_54
  7698  00EB46  6E10               	movwf	sprintf@f+1,c
  7699  00EB48  EC34  F07E         	call	_sprintf	;wreg free
  7700  00EB4C  D000               	goto	l4017
  7701  00EB4E                     l4017:
  7702                           
  7703                           ;main.c: 503: }
  7704                           ;main.c: 504: lcd_write(1,2,buffer1);
  7705  00EB4E  0E00               	movlw	0
  7706  00EB50  6E0C               	movwf	lcd_write@column+1,c
  7707  00EB52  0E01               	movlw	1
  7708  00EB54  6E0B               	movwf	lcd_write@column,c
  7709  00EB56  0E00               	movlw	0
  7710  00EB58  6E0E               	movwf	lcd_write@row+1,c
  7711  00EB5A  0E02               	movlw	2
  7712  00EB5C  6E0D               	movwf	lcd_write@row,c
  7713  00EB5E  0E86               	movlw	low _buffer1
  7714  00EB60  6E0F               	movwf	lcd_write@string,c
  7715  00EB62  0E00               	movlw	high _buffer1
  7716  00EB64  6E10               	movwf	lcd_write@string+1,c
  7717  00EB66  ECBA  F070         	call	_lcd_write	;wreg free
  7718  00EB6A  0012               	return		;funcret
  7719  00EB6C                     __end_of_home_volume_refresh:
  7720                           	opt stack 0
  7721                           tblptru	equ	0xFF8
  7722                           tblptrh	equ	0xFF7
  7723                           tblptrl	equ	0xFF6
  7724                           tablat	equ	0xFF5
  7725                           prodh	equ	0xFF4
  7726                           prodl	equ	0xFF3
  7727                           intcon	equ	0xFF2
  7728                           indf0	equ	0xFEF
  7729                           postinc0	equ	0xFEE
  7730                           fsr0h	equ	0xFEA
  7731                           fsr0l	equ	0xFE9
  7732                           wreg	equ	0xFE8
  7733                           indf1	equ	0xFE7
  7734                           postdec1	equ	0xFE5
  7735                           fsr1h	equ	0xFE2
  7736                           fsr1l	equ	0xFE1
  7737                           indf2	equ	0xFDF
  7738                           fsr2h	equ	0xFDA
  7739                           fsr2l	equ	0xFD9
  7740                           status	equ	0xFD8
  7741                           
  7742 ;; *************** function _home_tone_refresh *****************
  7743 ;; Defined at:
  7744 ;;		line 508 in file "main.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;		None               void
  7751 ;; Registers used:
  7752 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7762 ;;Total ram usage:        0 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    6
  7765 ;; This function calls:
  7766 ;;		_lcd_write
  7767 ;;		_sprintf
  7768 ;; This function is called by:
  7769 ;;		_home_config_refresh
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text53
  7774  00EAC8                     __ptext53:
  7775                           	opt stack 0
  7776  00EAC8                     _home_tone_refresh:
  7777                           	opt stack 23
  7778                           
  7779                           ;main.c: 510: if(alarm_tone == 0){
  7780                           
  7781                           ;incstack = 0
  7782  00EAC8  502B               	movf	_alarm_tone,w,c
  7783  00EACA  102C               	iorwf	_alarm_tone+1,w,c
  7784  00EACC  A4D8               	btfss	status,2,c
  7785  00EACE  D00B               	goto	l4023
  7786                           
  7787                           ;main.c: 511: sprintf(buffer1,"TONO:1");
  7788  00EAD0  0E86               	movlw	low _buffer1
  7789  00EAD2  6E0D               	movwf	sprintf@sp,c
  7790  00EAD4  0E00               	movlw	high _buffer1
  7791  00EAD6  6E0E               	movwf	sprintf@sp+1,c
  7792  00EAD8  0E76               	movlw	low STR_55
  7793  00EADA  6E0F               	movwf	sprintf@f,c
  7794  00EADC  0EFF               	movlw	high STR_55
  7795  00EADE  6E10               	movwf	sprintf@f+1,c
  7796  00EAE0  EC34  F07E         	call	_sprintf	;wreg free
  7797                           
  7798                           ;main.c: 512: }
  7799  00EAE4  D00B               	goto	l4025
  7800  00EAE6                     l4023:
  7801                           
  7802                           ;main.c: 513: else{
  7803                           ;main.c: 514: sprintf(buffer1,"TONO:2");
  7804  00EAE6  0E86               	movlw	low _buffer1
  7805  00EAE8  6E0D               	movwf	sprintf@sp,c
  7806  00EAEA  0E00               	movlw	high _buffer1
  7807  00EAEC  6E0E               	movwf	sprintf@sp+1,c
  7808  00EAEE  0E84               	movlw	low STR_56
  7809  00EAF0  6E0F               	movwf	sprintf@f,c
  7810  00EAF2  0EFF               	movlw	high STR_56
  7811  00EAF4  6E10               	movwf	sprintf@f+1,c
  7812  00EAF6  EC34  F07E         	call	_sprintf	;wreg free
  7813  00EAFA  D000               	goto	l4025
  7814  00EAFC                     l4025:
  7815                           
  7816                           ;main.c: 515: }
  7817                           ;main.c: 516: lcd_write(1,2,buffer1);
  7818  00EAFC  0E00               	movlw	0
  7819  00EAFE  6E0C               	movwf	lcd_write@column+1,c
  7820  00EB00  0E01               	movlw	1
  7821  00EB02  6E0B               	movwf	lcd_write@column,c
  7822  00EB04  0E00               	movlw	0
  7823  00EB06  6E0E               	movwf	lcd_write@row+1,c
  7824  00EB08  0E02               	movlw	2
  7825  00EB0A  6E0D               	movwf	lcd_write@row,c
  7826  00EB0C  0E86               	movlw	low _buffer1
  7827  00EB0E  6E0F               	movwf	lcd_write@string,c
  7828  00EB10  0E00               	movlw	high _buffer1
  7829  00EB12  6E10               	movwf	lcd_write@string+1,c
  7830  00EB14  ECBA  F070         	call	_lcd_write	;wreg free
  7831  00EB18  0012               	return		;funcret
  7832  00EB1A                     __end_of_home_tone_refresh:
  7833                           	opt stack 0
  7834                           tblptru	equ	0xFF8
  7835                           tblptrh	equ	0xFF7
  7836                           tblptrl	equ	0xFF6
  7837                           tablat	equ	0xFF5
  7838                           prodh	equ	0xFF4
  7839                           prodl	equ	0xFF3
  7840                           intcon	equ	0xFF2
  7841                           indf0	equ	0xFEF
  7842                           postinc0	equ	0xFEE
  7843                           fsr0h	equ	0xFEA
  7844                           fsr0l	equ	0xFE9
  7845                           wreg	equ	0xFE8
  7846                           indf1	equ	0xFE7
  7847                           postdec1	equ	0xFE5
  7848                           fsr1h	equ	0xFE2
  7849                           fsr1l	equ	0xFE1
  7850                           indf2	equ	0xFDF
  7851                           fsr2h	equ	0xFDA
  7852                           fsr2l	equ	0xFD9
  7853                           status	equ	0xFD8
  7854                           
  7855 ;; *************** function _home_state_refresh *****************
  7856 ;; Defined at:
  7857 ;;		line 484 in file "main.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;		None               void
  7864 ;; Registers used:
  7865 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;Total ram usage:        0 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    6
  7878 ;; This function calls:
  7879 ;;		_lcd_write
  7880 ;;		_sprintf
  7881 ;; This function is called by:
  7882 ;;		_home_config_refresh
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text54
  7887  00EA76                     __ptext54:
  7888                           	opt stack 0
  7889  00EA76                     _home_state_refresh:
  7890                           	opt stack 23
  7891                           
  7892                           ;main.c: 486: if(state == 1){
  7893                           
  7894                           ;incstack = 0
  7895  00EA76  0441               	decf	_state,w,c
  7896  00EA78  1042               	iorwf	_state+1,w,c
  7897  00EA7A  A4D8               	btfss	status,2,c
  7898  00EA7C  D00B               	goto	l4007
  7899                           
  7900                           ;main.c: 487: sprintf(buffer1,"ACT:SI");
  7901  00EA7E  0E86               	movlw	low _buffer1
  7902  00EA80  6E0D               	movwf	sprintf@sp,c
  7903  00EA82  0E00               	movlw	high _buffer1
  7904  00EA84  6E0E               	movwf	sprintf@sp+1,c
  7905  00EA86  0E92               	movlw	low STR_51
  7906  00EA88  6E0F               	movwf	sprintf@f,c
  7907  00EA8A  0EFF               	movlw	high STR_51
  7908  00EA8C  6E10               	movwf	sprintf@f+1,c
  7909  00EA8E  EC34  F07E         	call	_sprintf	;wreg free
  7910                           
  7911                           ;main.c: 488: }
  7912  00EA92  D00B               	goto	l4009
  7913  00EA94                     l4007:
  7914                           
  7915                           ;main.c: 489: else{
  7916                           ;main.c: 490: sprintf(buffer1,"ACT:NO");
  7917  00EA94  0E86               	movlw	low _buffer1
  7918  00EA96  6E0D               	movwf	sprintf@sp,c
  7919  00EA98  0E00               	movlw	high _buffer1
  7920  00EA9A  6E0E               	movwf	sprintf@sp+1,c
  7921  00EA9C  0EA0               	movlw	low STR_52
  7922  00EA9E  6E0F               	movwf	sprintf@f,c
  7923  00EAA0  0EFF               	movlw	high STR_52
  7924  00EAA2  6E10               	movwf	sprintf@f+1,c
  7925  00EAA4  EC34  F07E         	call	_sprintf	;wreg free
  7926  00EAA8  D000               	goto	l4009
  7927  00EAAA                     l4009:
  7928                           
  7929                           ;main.c: 491: }
  7930                           ;main.c: 492: lcd_write(1,2,buffer1);
  7931  00EAAA  0E00               	movlw	0
  7932  00EAAC  6E0C               	movwf	lcd_write@column+1,c
  7933  00EAAE  0E01               	movlw	1
  7934  00EAB0  6E0B               	movwf	lcd_write@column,c
  7935  00EAB2  0E00               	movlw	0
  7936  00EAB4  6E0E               	movwf	lcd_write@row+1,c
  7937  00EAB6  0E02               	movlw	2
  7938  00EAB8  6E0D               	movwf	lcd_write@row,c
  7939  00EABA  0E86               	movlw	low _buffer1
  7940  00EABC  6E0F               	movwf	lcd_write@string,c
  7941  00EABE  0E00               	movlw	high _buffer1
  7942  00EAC0  6E10               	movwf	lcd_write@string+1,c
  7943  00EAC2  ECBA  F070         	call	_lcd_write	;wreg free
  7944  00EAC6  0012               	return		;funcret
  7945  00EAC8                     __end_of_home_state_refresh:
  7946                           	opt stack 0
  7947                           tblptru	equ	0xFF8
  7948                           tblptrh	equ	0xFF7
  7949                           tblptrl	equ	0xFF6
  7950                           tablat	equ	0xFF5
  7951                           prodh	equ	0xFF4
  7952                           prodl	equ	0xFF3
  7953                           intcon	equ	0xFF2
  7954                           indf0	equ	0xFEF
  7955                           postinc0	equ	0xFEE
  7956                           fsr0h	equ	0xFEA
  7957                           fsr0l	equ	0xFE9
  7958                           wreg	equ	0xFE8
  7959                           indf1	equ	0xFE7
  7960                           postdec1	equ	0xFE5
  7961                           fsr1h	equ	0xFE2
  7962                           fsr1l	equ	0xFE1
  7963                           indf2	equ	0xFDF
  7964                           fsr2h	equ	0xFDA
  7965                           fsr2l	equ	0xFD9
  7966                           status	equ	0xFD8
  7967                           
  7968 ;; *************** function _home_clock_refresh *****************
  7969 ;; Defined at:
  7970 ;;		line 475 in file "main.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;		None
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;		None               void
  7977 ;; Registers used:
  7978 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7988 ;;Total ram usage:        0 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    6
  7991 ;; This function calls:
  7992 ;;		_lcd_write
  7993 ;;		_sprintf
  7994 ;; This function is called by:
  7995 ;;		_main
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text55
  8000  00F370                     __ptext55:
  8001                           	opt stack 0
  8002  00F370                     _home_clock_refresh:
  8003                           	opt stack 24
  8004                           
  8005                           ;main.c: 477: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  8006                           
  8007                           ;incstack = 0
  8008  00F370  0E86               	movlw	low _buffer1
  8009  00F372  6E0D               	movwf	sprintf@sp,c
  8010  00F374  0E00               	movlw	high _buffer1
  8011  00F376  6E0E               	movwf	sprintf@sp+1,c
  8012  00F378  0E2E               	movlw	low STR_28
  8013  00F37A  6E0F               	movwf	sprintf@f,c
  8014  00F37C  0EFF               	movlw	high STR_28
  8015  00F37E  6E10               	movwf	sprintf@f+1,c
  8016  00F380  C050  F011         	movff	_dia,?_sprintf+4
  8017  00F384  C051  F012         	movff	_dia+1,?_sprintf+5
  8018  00F388  C056  F013         	movff	_mes,?_sprintf+6
  8019  00F38C  C057  F014         	movff	_mes+1,?_sprintf+7
  8020  00F390  C04E  F015         	movff	_anio,?_sprintf+8
  8021  00F394  C04F  F016         	movff	_anio+1,?_sprintf+9
  8022  00F398  EC34  F07E         	call	_sprintf	;wreg free
  8023                           
  8024                           ;main.c: 478: lcd_write(9,1,buffer1);
  8025  00F39C  0E00               	movlw	0
  8026  00F39E  6E0C               	movwf	lcd_write@column+1,c
  8027  00F3A0  0E09               	movlw	9
  8028  00F3A2  6E0B               	movwf	lcd_write@column,c
  8029  00F3A4  0E00               	movlw	0
  8030  00F3A6  6E0E               	movwf	lcd_write@row+1,c
  8031  00F3A8  0E01               	movlw	1
  8032  00F3AA  6E0D               	movwf	lcd_write@row,c
  8033  00F3AC  0E86               	movlw	low _buffer1
  8034  00F3AE  6E0F               	movwf	lcd_write@string,c
  8035  00F3B0  0E00               	movlw	high _buffer1
  8036  00F3B2  6E10               	movwf	lcd_write@string+1,c
  8037  00F3B4  ECBA  F070         	call	_lcd_write	;wreg free
  8038                           
  8039                           ;main.c: 479: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  8040  00F3B8  0E86               	movlw	low _buffer1
  8041  00F3BA  6E0D               	movwf	sprintf@sp,c
  8042  00F3BC  0E00               	movlw	high _buffer1
  8043  00F3BE  6E0E               	movwf	sprintf@sp+1,c
  8044  00F3C0  0E3D               	movlw	low STR_29
  8045  00F3C2  6E0F               	movwf	sprintf@f,c
  8046  00F3C4  0EFF               	movlw	high STR_29
  8047  00F3C6  6E10               	movwf	sprintf@f+1,c
  8048  00F3C8  C054  F011         	movff	_hora,?_sprintf+4
  8049  00F3CC  C055  F012         	movff	_hora+1,?_sprintf+5
  8050  00F3D0  C03D  F013         	movff	_minuto,?_sprintf+6
  8051  00F3D4  C03E  F014         	movff	_minuto+1,?_sprintf+7
  8052  00F3D8  C03F  F015         	movff	_segundo,?_sprintf+8
  8053  00F3DC  C040  F016         	movff	_segundo+1,?_sprintf+9
  8054  00F3E0  EC34  F07E         	call	_sprintf	;wreg free
  8055                           
  8056                           ;main.c: 480: lcd_write(9,2,buffer1);
  8057  00F3E4  0E00               	movlw	0
  8058  00F3E6  6E0C               	movwf	lcd_write@column+1,c
  8059  00F3E8  0E09               	movlw	9
  8060  00F3EA  6E0B               	movwf	lcd_write@column,c
  8061  00F3EC  0E00               	movlw	0
  8062  00F3EE  6E0E               	movwf	lcd_write@row+1,c
  8063  00F3F0  0E02               	movlw	2
  8064  00F3F2  6E0D               	movwf	lcd_write@row,c
  8065  00F3F4  0E86               	movlw	low _buffer1
  8066  00F3F6  6E0F               	movwf	lcd_write@string,c
  8067  00F3F8  0E00               	movlw	high _buffer1
  8068  00F3FA  6E10               	movwf	lcd_write@string+1,c
  8069  00F3FC  ECBA  F070         	call	_lcd_write	;wreg free
  8070  00F400  0012               	return		;funcret
  8071  00F402                     __end_of_home_clock_refresh:
  8072                           	opt stack 0
  8073                           tblptru	equ	0xFF8
  8074                           tblptrh	equ	0xFF7
  8075                           tblptrl	equ	0xFF6
  8076                           tablat	equ	0xFF5
  8077                           prodh	equ	0xFF4
  8078                           prodl	equ	0xFF3
  8079                           intcon	equ	0xFF2
  8080                           indf0	equ	0xFEF
  8081                           postinc0	equ	0xFEE
  8082                           fsr0h	equ	0xFEA
  8083                           fsr0l	equ	0xFE9
  8084                           wreg	equ	0xFE8
  8085                           indf1	equ	0xFE7
  8086                           postdec1	equ	0xFE5
  8087                           fsr1h	equ	0xFE2
  8088                           fsr1l	equ	0xFE1
  8089                           indf2	equ	0xFDF
  8090                           fsr2h	equ	0xFDA
  8091                           fsr2l	equ	0xFD9
  8092                           status	equ	0xFD8
  8093                           
  8094 ;; *************** function _sprintf *****************
  8095 ;; Defined at:
  8096 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  sp              2   12[COMRAM] PTR unsigned char 
  8099 ;;		 -> buffer1(20), 
  8100 ;;  f               2   14[COMRAM] PTR const unsigned char 
  8101 ;;		 -> STR_57(5), STR_56(7), STR_55(7), STR_54(7), 
  8102 ;;		 -> STR_53(7), STR_52(7), STR_51(7), STR_50(15), 
  8103 ;;		 -> STR_49(15), STR_33(15), STR_31(15), STR_29(15), 
  8104 ;;		 -> STR_28(15), 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;  tmpval          4    0        struct .
  8107 ;;  cp              3    0        PTR const unsigned char 
  8108 ;;  width           2   32[COMRAM] int 
  8109 ;;  val             2   29[COMRAM] unsigned int 
  8110 ;;  ap              2   26[COMRAM] PTR void [1]
  8111 ;;		 -> ?_sprintf(2), 
  8112 ;;  len             2    0        unsigned int 
  8113 ;;  c               1   34[COMRAM] char 
  8114 ;;  prec            1   31[COMRAM] char 
  8115 ;;  flag            1   28[COMRAM] unsigned char 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  2   12[COMRAM] int 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8125 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8126 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8129 ;;Total ram usage:       23 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    1
  8132 ;; This function calls:
  8133 ;;		___lwdiv
  8134 ;;		___lwmod
  8135 ;;		___wmul
  8136 ;;		_isdigit
  8137 ;; This function is called by:
  8138 ;;		_activity_submenu_date_config
  8139 ;;		_activity_submenu_time_config
  8140 ;;		_home_clock_refresh
  8141 ;;		_home_state_refresh
  8142 ;;		_home_volume_refresh
  8143 ;;		_home_tone_refresh
  8144 ;;		_button_number
  8145 ;;		_activity_submenu_date_config_refresh
  8146 ;;		_activity_submenu_time_config_refresh
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text56
  8151  00FC68                     __ptext56:
  8152                           	opt stack 0
  8153  00FC68                     _sprintf:
  8154                           	opt stack 27
  8155                           
  8156                           ;doprnt.c: 494: va_list ap;
  8157                           ;doprnt.c: 499: signed char c;
  8158                           ;doprnt.c: 501: int width;
  8159                           ;doprnt.c: 506: signed char prec;
  8160                           ;doprnt.c: 508: unsigned char flag;
  8161                           ;doprnt.c: 523: union {
  8162                           ;doprnt.c: 524: unsigned long vd;
  8163                           ;doprnt.c: 525: double integ;
  8164                           ;doprnt.c: 526: } tmpval;
  8165                           ;doprnt.c: 528: unsigned int val;
  8166                           ;doprnt.c: 529: unsigned len;
  8167                           ;doprnt.c: 530: const char * cp;
  8168                           ;doprnt.c: 533: *ap = __va_start();
  8169                           
  8170                           ;incstack = 0
  8171  00FC68  0E11               	movlw	low (?_sprintf+4)
  8172  00FC6A  6E1B               	movwf	sprintf@ap,c
  8173  00FC6C  0E00               	movlw	high (?_sprintf+4)
  8174  00FC6E  6E1C               	movwf	sprintf@ap+1,c
  8175                           
  8176                           ;doprnt.c: 536: while(c = *f++) {
  8177  00FC70  D117               	goto	l3423
  8178  00FC72                     l3341:
  8179                           
  8180                           ;doprnt.c: 538: if(c != '%')
  8181  00FC72  0E25               	movlw	37
  8182  00FC74  1823               	xorwf	sprintf@c,w,c
  8183  00FC76  B4D8               	btfsc	status,2,c
  8184  00FC78  D009               	goto	l3347
  8185                           
  8186                           ;doprnt.c: 540: {
  8187                           ;doprnt.c: 541: ((*sp++ = (c)));
  8188  00FC7A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8189  00FC7E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8190  00FC82  C023  FFDF         	movff	sprintf@c,indf2
  8191  00FC86  4A0D               	infsnz	sprintf@sp,f,c
  8192  00FC88  2A0E               	incf	sprintf@sp+1,f,c
  8193                           
  8194                           ;doprnt.c: 542: continue;
  8195  00FC8A  D10A               	goto	l3423
  8196  00FC8C                     l3347:
  8197                           
  8198                           ;doprnt.c: 543: }
  8199                           ;doprnt.c: 546: width = 0;
  8200  00FC8C  0E00               	movlw	0
  8201  00FC8E  6E22               	movwf	sprintf@width+1,c
  8202  00FC90  0E00               	movlw	0
  8203  00FC92  6E21               	movwf	sprintf@width,c
  8204                           
  8205                           ;doprnt.c: 548: flag = 0;
  8206  00FC94  0E00               	movlw	0
  8207  00FC96  6E1D               	movwf	sprintf@flag,c
  8208                           
  8209                           ;doprnt.c: 551: switch(*f) {
  8210                           
  8211                           ;doprnt.c: 550: for(;;) {
  8212  00FC98  D005               	goto	l3353
  8213  00FC9A                     l3349:
  8214                           
  8215                           ;doprnt.c: 580: flag |= 0x04;
  8216  00FC9A  841D               	bsf	sprintf@flag,2,c
  8217                           
  8218                           ;doprnt.c: 581: f++;
  8219  00FC9C  4A0F               	infsnz	sprintf@f,f,c
  8220  00FC9E  2A10               	incf	sprintf@f+1,f,c
  8221                           
  8222                           ;doprnt.c: 582: continue;
  8223  00FCA0  D001               	goto	l3353
  8224                           
  8225                           ;doprnt.c: 584: }
  8226  00FCA2  D00B               	goto	l3355
  8227  00FCA4                     l3353:
  8228  00FCA4  C00F  FFF6         	movff	sprintf@f,tblptrl
  8229  00FCA8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8230  00FCAC                     	if	0	;tblptru may be non-zero
  8231  00FCAC                     	endif
  8232  00FCAC                     	if	0	;tblptru may be non-zero
  8233  00FCAC                     	endif
  8234  00FCAC  0008               	tblrd		*
  8235  00FCAE  50F5               	movf	tablat,w,c
  8236                           
  8237                           ; Switch size 1, requested type "space"
  8238                           ; Number of cases is 1, Range of values is 48 to 48
  8239                           ; switch strategies available:
  8240                           ; Name         Instructions Cycles
  8241                           ; simple_byte            4     3 (average)
  8242                           ;	Chosen strategy is simple_byte
  8243  00FCB0  0A30               	xorlw	48	; case 48
  8244  00FCB2  B4D8               	btfsc	status,2,c
  8245  00FCB4  D7F2               	goto	l3349
  8246                           
  8247                           ;doprnt.c: 585: break;
  8248  00FCB6  D001               	goto	l3355
  8249                           
  8250                           ;doprnt.c: 586: }
  8251  00FCB8  D7F5               	goto	l3353
  8252  00FCBA                     l3355:
  8253                           
  8254                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8255  00FCBA  C00F  FFF6         	movff	sprintf@f,tblptrl
  8256  00FCBE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8257  00FCC2                     	if	0	;tblptru may be non-zero
  8258  00FCC2                     	endif
  8259  00FCC2                     	if	0	;tblptru may be non-zero
  8260  00FCC2                     	endif
  8261  00FCC2  0008               	tblrd		*
  8262  00FCC4  50F5               	movf	tablat,w,c
  8263  00FCC6  ECED  F070         	call	_isdigit
  8264  00FCCA  A0D8               	btfss	status,0,c
  8265  00FCCC  D03A               	goto	l3371
  8266                           
  8267                           ;doprnt.c: 598: width = 0;
  8268  00FCCE  0E00               	movlw	0
  8269  00FCD0  6E22               	movwf	sprintf@width+1,c
  8270  00FCD2  0E00               	movlw	0
  8271  00FCD4  6E21               	movwf	sprintf@width,c
  8272  00FCD6  D000               	goto	l3359
  8273  00FCD8                     l3359:
  8274                           
  8275                           ;doprnt.c: 600: width *= 10;
  8276  00FCD8  C021  F001         	movff	sprintf@width,___wmul@multiplier
  8277  00FCDC  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  8278  00FCE0  0E00               	movlw	0
  8279  00FCE2  6E04               	movwf	___wmul@multiplicand+1,c
  8280  00FCE4  0E0A               	movlw	10
  8281  00FCE6  6E03               	movwf	___wmul@multiplicand,c
  8282  00FCE8  EC10  F071         	call	___wmul	;wreg free
  8283  00FCEC  C001  F021         	movff	?___wmul,sprintf@width
  8284  00FCF0  C002  F022         	movff	?___wmul+1,sprintf@width+1
  8285                           
  8286                           ;doprnt.c: 601: width += *f++ - '0';
  8287  00FCF4  0ED0               	movlw	208
  8288  00FCF6  6E17               	movwf	??_sprintf& (0+255),c
  8289  00FCF8  0EFF               	movlw	255
  8290  00FCFA  6E18               	movwf	(??_sprintf+1)& (0+255),c
  8291  00FCFC  C00F  FFF6         	movff	sprintf@f,tblptrl
  8292  00FD00  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8293  00FD04                     	if	0	;tblptru may be non-zero
  8294  00FD04                     	endif
  8295  00FD04                     	if	0	;tblptru may be non-zero
  8296  00FD04                     	endif
  8297  00FD04  0008               	tblrd		*
  8298  00FD06  50F5               	movf	tablat,w,c
  8299  00FD08  6E19               	movwf	(??_sprintf+2)& (0+255),c
  8300  00FD0A  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  8301  00FD0C  5017               	movf	??_sprintf,w,c
  8302  00FD0E  2619               	addwf	??_sprintf+2,f,c
  8303  00FD10  5018               	movf	??_sprintf+1,w,c
  8304  00FD12  221A               	addwfc	??_sprintf+3,f,c
  8305  00FD14  5019               	movf	??_sprintf+2,w,c
  8306  00FD16  2621               	addwf	sprintf@width,f,c
  8307  00FD18  501A               	movf	??_sprintf+3,w,c
  8308  00FD1A  2222               	addwfc	sprintf@width+1,f,c
  8309  00FD1C  4A0F               	infsnz	sprintf@f,f,c
  8310  00FD1E  2A10               	incf	sprintf@f+1,f,c
  8311                           
  8312                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8313  00FD20  C00F  FFF6         	movff	sprintf@f,tblptrl
  8314  00FD24  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8315  00FD28                     	if	0	;tblptru may be non-zero
  8316  00FD28                     	endif
  8317  00FD28                     	if	0	;tblptru may be non-zero
  8318  00FD28                     	endif
  8319  00FD28  0008               	tblrd		*
  8320  00FD2A  50F5               	movf	tablat,w,c
  8321  00FD2C  ECED  F070         	call	_isdigit
  8322  00FD30  A0D8               	btfss	status,0,c
  8323  00FD32  D007               	goto	l3371
  8324  00FD34  D7D1               	goto	l3359
  8325                           
  8326                           ;doprnt.c: 608: }
  8327                           ;doprnt.c: 635: switch(c = *f++) {
  8328  00FD36  D005               	goto	l3371
  8329                           
  8330                           ;doprnt.c: 638: goto alldone;
  8331                           
  8332                           ;doprnt.c: 637: case 0:
  8333  00FD38  D0C1               	goto	l3425
  8334                           
  8335                           ;doprnt.c: 813: continue;
  8336                           
  8337                           ;doprnt.c: 802: default:
  8338  00FD3A  D0B2               	goto	l3423
  8339  00FD3C                     l3367:
  8340                           
  8341                           ;doprnt.c: 818: flag |= 0xC0;
  8342  00FD3C  0EC0               	movlw	192
  8343  00FD3E  121D               	iorwf	sprintf@flag,f,c
  8344                           
  8345                           ;doprnt.c: 822: }
  8346                           
  8347                           ;doprnt.c: 819: break;
  8348  00FD40  D011               	goto	l3373
  8349  00FD42                     l3371:
  8350  00FD42  C00F  FFF6         	movff	sprintf@f,tblptrl
  8351  00FD46  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8352  00FD4A  4A0F               	infsnz	sprintf@f,f,c
  8353  00FD4C  2A10               	incf	sprintf@f+1,f,c
  8354  00FD4E                     	if	0	;tblptru may be non-zero
  8355  00FD4E                     	endif
  8356  00FD4E                     	if	0	;tblptru may be non-zero
  8357  00FD4E                     	endif
  8358  00FD4E  0008               	tblrd		*
  8359  00FD50  CFF5 F023          	movff	tablat,sprintf@c
  8360  00FD54  5023               	movf	sprintf@c,w,c
  8361                           
  8362                           ; Switch size 1, requested type "space"
  8363                           ; Number of cases is 2, Range of values is 0 to 117
  8364                           ; switch strategies available:
  8365                           ; Name         Instructions Cycles
  8366                           ; simple_byte            7     4 (average)
  8367                           ;	Chosen strategy is simple_byte
  8368  00FD56  0A00               	xorlw	0	; case 0
  8369  00FD58  B4D8               	btfsc	status,2,c
  8370  00FD5A  D0B0               	goto	l3425
  8371  00FD5C  0A75               	xorlw	117	; case 117
  8372  00FD5E  B4D8               	btfsc	status,2,c
  8373  00FD60  D7ED               	goto	l3367
  8374  00FD62  D09E               	goto	l3423
  8375  00FD64                     l3373:
  8376                           
  8377                           ;doprnt.c: 1273: {
  8378                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8379  00FD64  C01B  FFD9         	movff	sprintf@ap,fsr2l
  8380  00FD68  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  8381  00FD6C  CFDE F01E          	movff	postinc2,sprintf@val
  8382  00FD70  CFDD F01F          	movff	postdec2,sprintf@val+1
  8383  00FD74  0E02               	movlw	2
  8384  00FD76  261B               	addwf	sprintf@ap,f,c
  8385  00FD78  0E00               	movlw	0
  8386  00FD7A  221C               	addwfc	sprintf@ap+1,f,c
  8387                           
  8388                           ;doprnt.c: 1287: }
  8389                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8390  00FD7C  0E01               	movlw	1
  8391  00FD7E  6E23               	movwf	sprintf@c,c
  8392  00FD80                     l3379:
  8393  00FD80  0E05               	movlw	5
  8394  00FD82  1823               	xorwf	sprintf@c,w,c
  8395  00FD84  B4D8               	btfsc	status,2,c
  8396  00FD86  D016               	goto	l3391
  8397  00FD88  D001               	goto	l3383
  8398  00FD8A  D014               	goto	l3391
  8399  00FD8C                     l3383:
  8400                           
  8401                           ;doprnt.c: 1306: if(val < dpowers[c])
  8402  00FD8C  5023               	movf	sprintf@c,w,c
  8403  00FD8E  0D02               	mullw	2
  8404  00FD90  0ECD               	movlw	low _dpowers
  8405  00FD92  24F3               	addwf	prodl,w,c
  8406  00FD94  6EF6               	movwf	tblptrl,c
  8407  00FD96  0EFE               	movlw	high _dpowers
  8408  00FD98  20F4               	addwfc	prodh,w,c
  8409  00FD9A  6EF7               	movwf	tblptrh,c
  8410  00FD9C                     	if	0	;There are less than 3 active tblptr bytes
  8411  00FD9C                     	endif
  8412  00FD9C  0009               	tblrd		*+
  8413  00FD9E  50F5               	movf	tablat,w,c
  8414  00FDA0  5C1E               	subwf	sprintf@val,w,c
  8415  00FDA2  0009               	tblrd		*+
  8416  00FDA4  50F5               	movf	tablat,w,c
  8417  00FDA6  581F               	subwfb	sprintf@val+1,w,c
  8418  00FDA8  A0D8               	btfss	status,0,c
  8419  00FDAA  D004               	goto	l3391
  8420  00FDAC  D001               	goto	l3387
  8421                           
  8422                           ;doprnt.c: 1307: break;
  8423  00FDAE  D002               	goto	l3391
  8424  00FDB0                     l3387:
  8425  00FDB0  2A23               	incf	sprintf@c,f,c
  8426  00FDB2  D7E6               	goto	l3379
  8427  00FDB4                     l3391:
  8428                           
  8429                           ;doprnt.c: 1381: if(width > c)
  8430  00FDB4  0E80               	movlw	128
  8431  00FDB6  BE23               	btfsc	sprintf@c,7,c
  8432  00FDB8  0E7F               	movlw	127
  8433  00FDBA  6E17               	movwf	??_sprintf& (0+255),c
  8434  00FDBC  5021               	movf	sprintf@width,w,c
  8435  00FDBE  5C23               	subwf	sprintf@c,w,c
  8436  00FDC0  5022               	movf	sprintf@width+1,w,c
  8437  00FDC2  0A80               	xorlw	128
  8438  00FDC4  5817               	subwfb	??_sprintf& (0+255),w,c
  8439  00FDC6  B0D8               	btfsc	status,0,c
  8440  00FDC8  D007               	goto	l3395
  8441                           
  8442                           ;doprnt.c: 1382: width -= c;
  8443  00FDCA  5023               	movf	sprintf@c,w,c
  8444  00FDCC  5E21               	subwf	sprintf@width,f,c
  8445  00FDCE  0E00               	movlw	0
  8446  00FDD0  BE23               	btfsc	sprintf@c,7,c
  8447  00FDD2  0EFF               	movlw	255
  8448  00FDD4  5A22               	subwfb	sprintf@width+1,f,c
  8449  00FDD6  D005               	goto	l3397
  8450  00FDD8                     l3395:
  8451                           
  8452                           ;doprnt.c: 1383: else
  8453                           ;doprnt.c: 1384: width = 0;
  8454  00FDD8  0E00               	movlw	0
  8455  00FDDA  6E22               	movwf	sprintf@width+1,c
  8456  00FDDC  0E00               	movlw	0
  8457  00FDDE  6E21               	movwf	sprintf@width,c
  8458  00FDE0  D000               	goto	l3397
  8459  00FDE2                     l3397:
  8460                           
  8461                           ;doprnt.c: 1387: if(flag & 0x04) {
  8462  00FDE2  A41D               	btfss	sprintf@flag,2,c
  8463  00FDE4  D015               	goto	l3407
  8464                           
  8465                           ;doprnt.c: 1415: if(width)
  8466  00FDE6  5021               	movf	sprintf@width,w,c
  8467  00FDE8  1022               	iorwf	sprintf@width+1,w,c
  8468  00FDEA  B4D8               	btfsc	status,2,c
  8469  00FDEC  D026               	goto	l623
  8470  00FDEE                     l3401:
  8471                           
  8472                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8473  00FDEE  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8474  00FDF2  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8475  00FDF6  0E30               	movlw	48
  8476  00FDF8  6EDF               	movwf	indf2,c
  8477  00FDFA  4A0D               	infsnz	sprintf@sp,f,c
  8478  00FDFC  2A0E               	incf	sprintf@sp+1,f,c
  8479                           
  8480                           ;doprnt.c: 1418: while(--width);
  8481  00FDFE  0621               	decf	sprintf@width,f,c
  8482  00FE00  A0D8               	btfss	status,0,c
  8483  00FE02  0622               	decf	sprintf@width+1,f,c
  8484  00FE04  5021               	movf	sprintf@width,w,c
  8485  00FE06  1022               	iorwf	sprintf@width+1,w,c
  8486  00FE08  B4D8               	btfsc	status,2,c
  8487  00FE0A  D017               	goto	l623
  8488  00FE0C  D7F0               	goto	l3401
  8489                           
  8490                           ;doprnt.c: 1420: } else
  8491  00FE0E  D015               	goto	l623
  8492  00FE10                     l3407:
  8493                           
  8494                           ;doprnt.c: 1422: {
  8495                           ;doprnt.c: 1424: if(width
  8496                           ;doprnt.c: 1428: )
  8497  00FE10  5021               	movf	sprintf@width,w,c
  8498  00FE12  1022               	iorwf	sprintf@width+1,w,c
  8499  00FE14  B4D8               	btfsc	status,2,c
  8500  00FE16  D011               	goto	l623
  8501  00FE18                     l3409:
  8502                           
  8503                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8504  00FE18  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8505  00FE1C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8506  00FE20  0E20               	movlw	32
  8507  00FE22  6EDF               	movwf	indf2,c
  8508  00FE24  4A0D               	infsnz	sprintf@sp,f,c
  8509  00FE26  2A0E               	incf	sprintf@sp+1,f,c
  8510                           
  8511                           ;doprnt.c: 1431: while(--width);
  8512  00FE28  0621               	decf	sprintf@width,f,c
  8513  00FE2A  A0D8               	btfss	status,0,c
  8514  00FE2C  0622               	decf	sprintf@width+1,f,c
  8515  00FE2E  5021               	movf	sprintf@width,w,c
  8516  00FE30  1022               	iorwf	sprintf@width+1,w,c
  8517  00FE32  B4D8               	btfsc	status,2,c
  8518  00FE34  D002               	goto	l623
  8519  00FE36  D7F0               	goto	l3409
  8520  00FE38  D000               	goto	l623
  8521  00FE3A                     l623:
  8522                           
  8523                           ;doprnt.c: 1469: }
  8524                           ;doprnt.c: 1472: prec = c;
  8525  00FE3A  C023  F020         	movff	sprintf@c,sprintf@prec
  8526                           
  8527                           ;doprnt.c: 1474: while(prec--) {
  8528  00FE3E  D02A               	goto	l3421
  8529  00FE40                     l3415:
  8530                           
  8531                           ;doprnt.c: 1478: {
  8532                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8533  00FE40  5020               	movf	sprintf@prec,w,c
  8534  00FE42  0D02               	mullw	2
  8535  00FE44  0ECD               	movlw	low _dpowers
  8536  00FE46  24F3               	addwf	prodl,w,c
  8537  00FE48  6EF6               	movwf	tblptrl,c
  8538  00FE4A  0EFE               	movlw	high _dpowers
  8539  00FE4C  20F4               	addwfc	prodh,w,c
  8540  00FE4E  6EF7               	movwf	tblptrh,c
  8541  00FE50                     	if	0	;There are less than 3 active tblptr bytes
  8542  00FE50                     	endif
  8543  00FE50  0009               	tblrd		*+
  8544  00FE52  CFF5 F003          	movff	tablat,___lwdiv@divisor
  8545  00FE56  000A               	tblrd		*-
  8546  00FE58  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  8547  00FE5C  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  8548  00FE60  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  8549  00FE64  ECE0  F075         	call	___lwdiv	;wreg free
  8550  00FE68  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  8551  00FE6C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  8552  00FE70  0E00               	movlw	0
  8553  00FE72  6E0B               	movwf	___lwmod@divisor+1,c
  8554  00FE74  0E0A               	movlw	10
  8555  00FE76  6E0A               	movwf	___lwmod@divisor,c
  8556  00FE78  EC53  F074         	call	___lwmod	;wreg free
  8557  00FE7C  5008               	movf	?___lwmod,w,c
  8558  00FE7E  0F30               	addlw	48
  8559  00FE80  6E23               	movwf	sprintf@c,c
  8560                           
  8561                           ;doprnt.c: 1523: }
  8562                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8563  00FE82  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8564  00FE86  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8565  00FE8A  C023  FFDF         	movff	sprintf@c,indf2
  8566  00FE8E  4A0D               	infsnz	sprintf@sp,f,c
  8567  00FE90  2A0E               	incf	sprintf@sp+1,f,c
  8568  00FE92  D000               	goto	l3421
  8569  00FE94                     l3421:
  8570  00FE94  0620               	decf	sprintf@prec,f,c
  8571  00FE96  2820               	incf	sprintf@prec,w,c
  8572  00FE98  B4D8               	btfsc	status,2,c
  8573  00FE9A  D002               	goto	l3423
  8574  00FE9C  D7D1               	goto	l3415
  8575  00FE9E  D000               	goto	l3423
  8576  00FEA0                     l3423:
  8577  00FEA0  C00F  FFF6         	movff	sprintf@f,tblptrl
  8578  00FEA4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8579  00FEA8  4A0F               	infsnz	sprintf@f,f,c
  8580  00FEAA  2A10               	incf	sprintf@f+1,f,c
  8581  00FEAC                     	if	0	;tblptru may be non-zero
  8582  00FEAC                     	endif
  8583  00FEAC                     	if	0	;tblptru may be non-zero
  8584  00FEAC                     	endif
  8585  00FEAC  0008               	tblrd		*
  8586  00FEAE  CFF5 F023          	movff	tablat,sprintf@c
  8587  00FEB2  5023               	movf	sprintf@c,w,c
  8588  00FEB4  B4D8               	btfsc	status,2,c
  8589  00FEB6  D002               	goto	l3425
  8590  00FEB8  D6DC               	goto	l3341
  8591  00FEBA  D000               	goto	l3425
  8592  00FEBC                     l3425:
  8593                           
  8594                           ;doprnt.c: 1538: *sp = 0;
  8595  00FEBC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8596  00FEC0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8597  00FEC4  0E00               	movlw	0
  8598  00FEC6  6EDF               	movwf	indf2,c
  8599  00FEC8  0012               	return	
  8600                           
  8601                           ;doprnt.c: 1540: return 0;
  8602                           ;	Return value of _sprintf is never used
  8603  00FECA  0012               	return		;funcret
  8604  00FECC                     __end_of_sprintf:
  8605                           	opt stack 0
  8606                           tblptru	equ	0xFF8
  8607                           tblptrh	equ	0xFF7
  8608                           tblptrl	equ	0xFF6
  8609                           tablat	equ	0xFF5
  8610                           prodh	equ	0xFF4
  8611                           prodl	equ	0xFF3
  8612                           intcon	equ	0xFF2
  8613                           indf0	equ	0xFEF
  8614                           postinc0	equ	0xFEE
  8615                           fsr0h	equ	0xFEA
  8616                           fsr0l	equ	0xFE9
  8617                           wreg	equ	0xFE8
  8618                           indf1	equ	0xFE7
  8619                           postdec1	equ	0xFE5
  8620                           fsr1h	equ	0xFE2
  8621                           fsr1l	equ	0xFE1
  8622                           indf2	equ	0xFDF
  8623                           postinc2	equ	0xFDE
  8624                           postdec2	equ	0xFDD
  8625                           fsr2h	equ	0xFDA
  8626                           fsr2l	equ	0xFD9
  8627                           status	equ	0xFD8
  8628                           
  8629 ;; *************** function _isdigit *****************
  8630 ;; Defined at:
  8631 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  c               1    wreg     unsigned char 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  c               1    2[COMRAM] unsigned char 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;		None               void
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8648 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8649 ;;Total ram usage:        3 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_sprintf
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text57
  8659  00E1DA                     __ptext57:
  8660                           	opt stack 0
  8661  00E1DA                     _isdigit:
  8662                           	opt stack 27
  8663                           
  8664                           ;incstack = 0
  8665                           ;isdigit@c stored from wreg
  8666  00E1DA  6E03               	movwf	isdigit@c,c
  8667  00E1DC  0E00               	movlw	0
  8668  00E1DE  6E02               	movwf	_isdigit$2298,c
  8669  00E1E0  0E3A               	movlw	58
  8670  00E1E2  6003               	cpfslt	isdigit@c,c
  8671  00E1E4  D006               	goto	l3103
  8672  00E1E6  0E2F               	movlw	47
  8673  00E1E8  6403               	cpfsgt	isdigit@c,c
  8674  00E1EA  D003               	goto	l3103
  8675  00E1EC  0E01               	movlw	1
  8676  00E1EE  6E02               	movwf	_isdigit$2298,c
  8677  00E1F0  D000               	goto	l3103
  8678  00E1F2                     l3103:
  8679  00E1F2  C002  F001         	movff	_isdigit$2298,??_isdigit
  8680  00E1F6  3001               	rrcf	??_isdigit,w,c
  8681  00E1F8  0012               	return	
  8682  00E1FA  0012               	return		;funcret
  8683  00E1FC                     __end_of_isdigit:
  8684                           	opt stack 0
  8685                           tblptru	equ	0xFF8
  8686                           tblptrh	equ	0xFF7
  8687                           tblptrl	equ	0xFF6
  8688                           tablat	equ	0xFF5
  8689                           prodh	equ	0xFF4
  8690                           prodl	equ	0xFF3
  8691                           intcon	equ	0xFF2
  8692                           indf0	equ	0xFEF
  8693                           postinc0	equ	0xFEE
  8694                           fsr0h	equ	0xFEA
  8695                           fsr0l	equ	0xFE9
  8696                           wreg	equ	0xFE8
  8697                           indf1	equ	0xFE7
  8698                           postdec1	equ	0xFE5
  8699                           fsr1h	equ	0xFE2
  8700                           fsr1l	equ	0xFE1
  8701                           indf2	equ	0xFDF
  8702                           postinc2	equ	0xFDE
  8703                           postdec2	equ	0xFDD
  8704                           fsr2h	equ	0xFDA
  8705                           fsr2l	equ	0xFD9
  8706                           status	equ	0xFD8
  8707                           
  8708 ;; *************** function ___wmul *****************
  8709 ;; Defined at:
  8710 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8711 ;; Parameters:    Size  Location     Type
  8712 ;;  multiplier      2    0[COMRAM] unsigned int 
  8713 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;  product         2    4[COMRAM] unsigned int 
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  2    0[COMRAM] unsigned int 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, status,0, prodl, prodh
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8729 ;;Total ram usage:        6 bytes
  8730 ;; Hardware stack levels used:    1
  8731 ;; This function calls:
  8732 ;;		Nothing
  8733 ;; This function is called by:
  8734 ;;		_sprintf
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text58
  8739  00E220                     __ptext58:
  8740                           	opt stack 0
  8741  00E220                     ___wmul:
  8742                           	opt stack 27
  8743                           
  8744                           ;incstack = 0
  8745  00E220  5001               	movf	___wmul@multiplier,w,c
  8746  00E222  0203               	mulwf	___wmul@multiplicand,c
  8747  00E224  CFF3 F005          	movff	prodl,___wmul@product
  8748  00E228  CFF4 F006          	movff	prodh,___wmul@product+1
  8749  00E22C  5001               	movf	___wmul@multiplier,w,c
  8750  00E22E  0204               	mulwf	___wmul@multiplicand+1,c
  8751  00E230  50F3               	movf	prodl,w,c
  8752  00E232  2606               	addwf	___wmul@product+1,f,c
  8753  00E234  5002               	movf	___wmul@multiplier+1,w,c
  8754  00E236  0203               	mulwf	___wmul@multiplicand,c
  8755  00E238  50F3               	movf	prodl,w,c
  8756  00E23A  2606               	addwf	___wmul@product+1,f,c
  8757  00E23C  C005  F001         	movff	___wmul@product,?___wmul
  8758  00E240  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8759  00E244  0012               	return	
  8760  00E246  0012               	return		;funcret
  8761  00E248                     __end_of___wmul:
  8762                           	opt stack 0
  8763                           tblptru	equ	0xFF8
  8764                           tblptrh	equ	0xFF7
  8765                           tblptrl	equ	0xFF6
  8766                           tablat	equ	0xFF5
  8767                           prodh	equ	0xFF4
  8768                           prodl	equ	0xFF3
  8769                           intcon	equ	0xFF2
  8770                           indf0	equ	0xFEF
  8771                           postinc0	equ	0xFEE
  8772                           fsr0h	equ	0xFEA
  8773                           fsr0l	equ	0xFE9
  8774                           wreg	equ	0xFE8
  8775                           indf1	equ	0xFE7
  8776                           postdec1	equ	0xFE5
  8777                           fsr1h	equ	0xFE2
  8778                           fsr1l	equ	0xFE1
  8779                           indf2	equ	0xFDF
  8780                           postinc2	equ	0xFDE
  8781                           postdec2	equ	0xFDD
  8782                           fsr2h	equ	0xFDA
  8783                           fsr2l	equ	0xFD9
  8784                           status	equ	0xFD8
  8785                           
  8786 ;; *************** function ___lwmod *****************
  8787 ;; Defined at:
  8788 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  dividend        2    7[COMRAM] unsigned int 
  8791 ;;  divisor         2    9[COMRAM] unsigned int 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  counter         1   11[COMRAM] unsigned char 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  2    7[COMRAM] unsigned int 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;Total ram usage:        5 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; This function calls:
  8810 ;;		Nothing
  8811 ;; This function is called by:
  8812 ;;		_sprintf
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text59
  8817  00E8A6                     __ptext59:
  8818                           	opt stack 0
  8819  00E8A6                     ___lwmod:
  8820                           	opt stack 27
  8821                           
  8822                           ;incstack = 0
  8823  00E8A6  500A               	movf	___lwmod@divisor,w,c
  8824  00E8A8  100B               	iorwf	___lwmod@divisor+1,w,c
  8825  00E8AA  B4D8               	btfsc	status,2,c
  8826  00E8AC  D01D               	goto	l1277
  8827  00E8AE  0E01               	movlw	1
  8828  00E8B0  6E0C               	movwf	___lwmod@counter,c
  8829  00E8B2  D005               	goto	l3141
  8830  00E8B4                     l3139:
  8831  00E8B4  90D8               	bcf	status,0,c
  8832  00E8B6  360A               	rlcf	___lwmod@divisor,f,c
  8833  00E8B8  360B               	rlcf	___lwmod@divisor+1,f,c
  8834  00E8BA  2A0C               	incf	___lwmod@counter,f,c
  8835  00E8BC  D000               	goto	l3141
  8836  00E8BE                     l3141:
  8837  00E8BE  BE0B               	btfsc	___lwmod@divisor+1,7,c
  8838  00E8C0  D002               	goto	l3143
  8839  00E8C2  D7F8               	goto	l3139
  8840  00E8C4  D000               	goto	l3143
  8841  00E8C6                     l3143:
  8842  00E8C6  500A               	movf	___lwmod@divisor,w,c
  8843  00E8C8  5C08               	subwf	___lwmod@dividend,w,c
  8844  00E8CA  500B               	movf	___lwmod@divisor+1,w,c
  8845  00E8CC  5809               	subwfb	___lwmod@dividend+1,w,c
  8846  00E8CE  A0D8               	btfss	status,0,c
  8847  00E8D0  D005               	goto	l3147
  8848  00E8D2  500A               	movf	___lwmod@divisor,w,c
  8849  00E8D4  5E08               	subwf	___lwmod@dividend,f,c
  8850  00E8D6  500B               	movf	___lwmod@divisor+1,w,c
  8851  00E8D8  5A09               	subwfb	___lwmod@dividend+1,f,c
  8852  00E8DA  D000               	goto	l3147
  8853  00E8DC                     l3147:
  8854  00E8DC  90D8               	bcf	status,0,c
  8855  00E8DE  320B               	rrcf	___lwmod@divisor+1,f,c
  8856  00E8E0  320A               	rrcf	___lwmod@divisor,f,c
  8857  00E8E2  2E0C               	decfsz	___lwmod@counter,f,c
  8858  00E8E4  D7F0               	goto	l3143
  8859  00E8E6  D000               	goto	l1277
  8860  00E8E8                     l1277:
  8861  00E8E8  C008  F008         	movff	___lwmod@dividend,?___lwmod
  8862  00E8EC  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  8863  00E8F0  0012               	return		;funcret
  8864  00E8F2                     __end_of___lwmod:
  8865                           	opt stack 0
  8866                           tblptru	equ	0xFF8
  8867                           tblptrh	equ	0xFF7
  8868                           tblptrl	equ	0xFF6
  8869                           tablat	equ	0xFF5
  8870                           prodh	equ	0xFF4
  8871                           prodl	equ	0xFF3
  8872                           intcon	equ	0xFF2
  8873                           indf0	equ	0xFEF
  8874                           postinc0	equ	0xFEE
  8875                           fsr0h	equ	0xFEA
  8876                           fsr0l	equ	0xFE9
  8877                           wreg	equ	0xFE8
  8878                           indf1	equ	0xFE7
  8879                           postdec1	equ	0xFE5
  8880                           fsr1h	equ	0xFE2
  8881                           fsr1l	equ	0xFE1
  8882                           indf2	equ	0xFDF
  8883                           postinc2	equ	0xFDE
  8884                           postdec2	equ	0xFDD
  8885                           fsr2h	equ	0xFDA
  8886                           fsr2l	equ	0xFD9
  8887                           status	equ	0xFD8
  8888                           
  8889 ;; *************** function ___lwdiv *****************
  8890 ;; Defined at:
  8891 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;  dividend        2    0[COMRAM] unsigned int 
  8894 ;;  divisor         2    2[COMRAM] unsigned int 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  quotient        2    4[COMRAM] unsigned int 
  8897 ;;  counter         1    6[COMRAM] unsigned char 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  2    0[COMRAM] unsigned int 
  8900 ;; Registers used:
  8901 ;;		wreg, status,2, status,0
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8908 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8911 ;;Total ram usage:        7 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; This function calls:
  8914 ;;		Nothing
  8915 ;; This function is called by:
  8916 ;;		_sprintf
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text60
  8921  00EBC0                     __ptext60:
  8922                           	opt stack 0
  8923  00EBC0                     ___lwdiv:
  8924                           	opt stack 27
  8925                           
  8926                           ;incstack = 0
  8927  00EBC0  0E00               	movlw	0
  8928  00EBC2  6E06               	movwf	___lwdiv@quotient+1,c
  8929  00EBC4  0E00               	movlw	0
  8930  00EBC6  6E05               	movwf	___lwdiv@quotient,c
  8931  00EBC8  5003               	movf	___lwdiv@divisor,w,c
  8932  00EBCA  1004               	iorwf	___lwdiv@divisor+1,w,c
  8933  00EBCC  B4D8               	btfsc	status,2,c
  8934  00EBCE  D021               	goto	l1267
  8935  00EBD0  0E01               	movlw	1
  8936  00EBD2  6E07               	movwf	___lwdiv@counter,c
  8937  00EBD4  D005               	goto	l3121
  8938  00EBD6                     l3119:
  8939  00EBD6  90D8               	bcf	status,0,c
  8940  00EBD8  3603               	rlcf	___lwdiv@divisor,f,c
  8941  00EBDA  3604               	rlcf	___lwdiv@divisor+1,f,c
  8942  00EBDC  2A07               	incf	___lwdiv@counter,f,c
  8943  00EBDE  D000               	goto	l3121
  8944  00EBE0                     l3121:
  8945  00EBE0  BE04               	btfsc	___lwdiv@divisor+1,7,c
  8946  00EBE2  D002               	goto	l3123
  8947  00EBE4  D7F8               	goto	l3119
  8948  00EBE6  D000               	goto	l3123
  8949  00EBE8                     l3123:
  8950  00EBE8  90D8               	bcf	status,0,c
  8951  00EBEA  3605               	rlcf	___lwdiv@quotient,f,c
  8952  00EBEC  3606               	rlcf	___lwdiv@quotient+1,f,c
  8953  00EBEE  5003               	movf	___lwdiv@divisor,w,c
  8954  00EBF0  5C01               	subwf	___lwdiv@dividend,w,c
  8955  00EBF2  5004               	movf	___lwdiv@divisor+1,w,c
  8956  00EBF4  5802               	subwfb	___lwdiv@dividend+1,w,c
  8957  00EBF6  A0D8               	btfss	status,0,c
  8958  00EBF8  D006               	goto	l3131
  8959  00EBFA  5003               	movf	___lwdiv@divisor,w,c
  8960  00EBFC  5E01               	subwf	___lwdiv@dividend,f,c
  8961  00EBFE  5004               	movf	___lwdiv@divisor+1,w,c
  8962  00EC00  5A02               	subwfb	___lwdiv@dividend+1,f,c
  8963  00EC02  8005               	bsf	___lwdiv@quotient,0,c
  8964  00EC04  D000               	goto	l3131
  8965  00EC06                     l3131:
  8966  00EC06  90D8               	bcf	status,0,c
  8967  00EC08  3204               	rrcf	___lwdiv@divisor+1,f,c
  8968  00EC0A  3203               	rrcf	___lwdiv@divisor,f,c
  8969  00EC0C  2E07               	decfsz	___lwdiv@counter,f,c
  8970  00EC0E  D7EC               	goto	l3123
  8971  00EC10  D000               	goto	l1267
  8972  00EC12                     l1267:
  8973  00EC12  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  8974  00EC16  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8975  00EC1A  0012               	return		;funcret
  8976  00EC1C                     __end_of___lwdiv:
  8977                           	opt stack 0
  8978                           tblptru	equ	0xFF8
  8979                           tblptrh	equ	0xFF7
  8980                           tblptrl	equ	0xFF6
  8981                           tablat	equ	0xFF5
  8982                           prodh	equ	0xFF4
  8983                           prodl	equ	0xFF3
  8984                           intcon	equ	0xFF2
  8985                           indf0	equ	0xFEF
  8986                           postinc0	equ	0xFEE
  8987                           fsr0h	equ	0xFEA
  8988                           fsr0l	equ	0xFE9
  8989                           wreg	equ	0xFE8
  8990                           indf1	equ	0xFE7
  8991                           postdec1	equ	0xFE5
  8992                           fsr1h	equ	0xFE2
  8993                           fsr1l	equ	0xFE1
  8994                           indf2	equ	0xFDF
  8995                           postinc2	equ	0xFDE
  8996                           postdec2	equ	0xFDD
  8997                           fsr2h	equ	0xFDA
  8998                           fsr2l	equ	0xFD9
  8999                           status	equ	0xFD8
  9000                           
  9001 ;; *************** function _check_home_callback *****************
  9002 ;; Defined at:
  9003 ;;		line 102 in file "main.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;		None               void
  9010 ;; Registers used:
  9011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:    7
  9024 ;; This function calls:
  9025 ;;		_activity_home
  9026 ;;		_activity_triggered_alarm
  9027 ;;		_reset_home_callback
  9028 ;; This function is called by:
  9029 ;;		_main
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text61
  9034  00E360                     __ptext61:
  9035                           	opt stack 0
  9036  00E360                     _check_home_callback:
  9037                           	opt stack 23
  9038                           
  9039                           ;main.c: 104: if(activity != 0){
  9040                           
  9041                           ;incstack = 0
  9042  00E360  5029               	movf	_activity,w,c
  9043  00E362  102A               	iorwf	_activity+1,w,c
  9044  00E364  B4D8               	btfsc	status,2,c
  9045  00E366  0012               	return	
  9046                           
  9047                           ;main.c: 105: home_callback--;
  9048  00E368  0635               	decf	_home_callback,f,c
  9049  00E36A  A0D8               	btfss	status,0,c
  9050  00E36C  0636               	decf	_home_callback+1,f,c
  9051                           
  9052                           ;main.c: 107: if(home_callback == 0){
  9053  00E36E  5035               	movf	_home_callback,w,c
  9054  00E370  1036               	iorwf	_home_callback+1,w,c
  9055  00E372  A4D8               	btfss	status,2,c
  9056  00E374  0012               	return	
  9057                           
  9058                           ;main.c: 108: reset_home_callback();
  9059  00E376  EC83  F070         	call	_reset_home_callback	;wreg free
  9060                           
  9061                           ;main.c: 110: if(state == 2){
  9062  00E37A  0E02               	movlw	2
  9063  00E37C  1841               	xorwf	_state,w,c
  9064  00E37E  1042               	iorwf	_state+1,w,c
  9065  00E380  A4D8               	btfss	status,2,c
  9066  00E382  D003               	goto	l4191
  9067                           
  9068                           ;main.c: 111: activity_triggered_alarm();
  9069  00E384  EC7B  F073         	call	_activity_triggered_alarm	;wreg free
  9070                           
  9071                           ;main.c: 112: } else {
  9072  00E388  0012               	return	
  9073  00E38A                     l4191:
  9074                           
  9075                           ;main.c: 113: activity_home();
  9076  00E38A  EC24  F071         	call	_activity_home	;wreg free
  9077  00E38E  0012               	return	
  9078  00E390  0012               	return		;funcret
  9079  00E392                     __end_of_check_home_callback:
  9080                           	opt stack 0
  9081                           tblptru	equ	0xFF8
  9082                           tblptrh	equ	0xFF7
  9083                           tblptrl	equ	0xFF6
  9084                           tablat	equ	0xFF5
  9085                           prodh	equ	0xFF4
  9086                           prodl	equ	0xFF3
  9087                           intcon	equ	0xFF2
  9088                           indf0	equ	0xFEF
  9089                           postinc0	equ	0xFEE
  9090                           fsr0h	equ	0xFEA
  9091                           fsr0l	equ	0xFE9
  9092                           wreg	equ	0xFE8
  9093                           indf1	equ	0xFE7
  9094                           postdec1	equ	0xFE5
  9095                           fsr1h	equ	0xFE2
  9096                           fsr1l	equ	0xFE1
  9097                           indf2	equ	0xFDF
  9098                           postinc2	equ	0xFDE
  9099                           postdec2	equ	0xFDD
  9100                           fsr2h	equ	0xFDA
  9101                           fsr2l	equ	0xFD9
  9102                           status	equ	0xFD8
  9103                           
  9104 ;; *************** function _reset_home_callback *****************
  9105 ;; Defined at:
  9106 ;;		line 96 in file "main.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;		None
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;		None
  9111 ;; Return value:  Size  Location     Type
  9112 ;;		None               void
  9113 ;; Registers used:
  9114 ;;		None
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9124 ;;Total ram usage:        0 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_check_home_callback
  9130 ;;		_button_A
  9131 ;;		_button_B
  9132 ;;		_button_C
  9133 ;;		_button_D
  9134 ;;		_button_hash
  9135 ;;		_button_number
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text62
  9140  00E106                     __ptext62:
  9141                           	opt stack 0
  9142  00E106                     _reset_home_callback:
  9143                           	opt stack 28
  9144                           
  9145                           ;main.c: 98: home_callback = home_callback_delay;
  9146                           
  9147                           ;incstack = 0
  9148  00E106  C037  F035         	movff	_home_callback_delay,_home_callback
  9149  00E10A  C038  F036         	movff	_home_callback_delay+1,_home_callback+1
  9150  00E10E  0012               	return		;funcret
  9151  00E110                     __end_of_reset_home_callback:
  9152                           	opt stack 0
  9153                           tblptru	equ	0xFF8
  9154                           tblptrh	equ	0xFF7
  9155                           tblptrl	equ	0xFF6
  9156                           tablat	equ	0xFF5
  9157                           prodh	equ	0xFF4
  9158                           prodl	equ	0xFF3
  9159                           intcon	equ	0xFF2
  9160                           indf0	equ	0xFEF
  9161                           postinc0	equ	0xFEE
  9162                           fsr0h	equ	0xFEA
  9163                           fsr0l	equ	0xFE9
  9164                           wreg	equ	0xFE8
  9165                           indf1	equ	0xFE7
  9166                           postdec1	equ	0xFE5
  9167                           fsr1h	equ	0xFE2
  9168                           fsr1l	equ	0xFE1
  9169                           indf2	equ	0xFDF
  9170                           postinc2	equ	0xFDE
  9171                           postdec2	equ	0xFDD
  9172                           fsr2h	equ	0xFDA
  9173                           fsr2l	equ	0xFD9
  9174                           status	equ	0xFD8
  9175                           
  9176 ;; *************** function _activity_triggered_alarm *****************
  9177 ;; Defined at:
  9178 ;;		line 89 in file "main.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;		None               void
  9185 ;; Registers used:
  9186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9196 ;;Total ram usage:        0 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    6
  9199 ;; This function calls:
  9200 ;;		_lcd_init
  9201 ;;		_lcd_write
  9202 ;; This function is called by:
  9203 ;;		_check_home_callback
  9204 ;;		_button_asterisk
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text63
  9209  00E6F6                     __ptext63:
  9210                           	opt stack 0
  9211  00E6F6                     _activity_triggered_alarm:
  9212                           	opt stack 22
  9213                           
  9214                           ;main.c: 90: activity = 12;
  9215                           
  9216                           ;incstack = 0
  9217  00E6F6  0E00               	movlw	0
  9218  00E6F8  6E2A               	movwf	_activity+1,c
  9219  00E6FA  0E0C               	movlw	12
  9220  00E6FC  6E29               	movwf	_activity,c
  9221                           
  9222                           ;main.c: 91: lcd_init();
  9223  00E6FE  EC2E  F078         	call	_lcd_init	;wreg free
  9224                           
  9225                           ;main.c: 92: lcd_write(1,1,"    ATENCION    ");
  9226  00E702  0E00               	movlw	0
  9227  00E704  6E0C               	movwf	lcd_write@column+1,c
  9228  00E706  0E01               	movlw	1
  9229  00E708  6E0B               	movwf	lcd_write@column,c
  9230  00E70A  0E00               	movlw	0
  9231  00E70C  6E0E               	movwf	lcd_write@row+1,c
  9232  00E70E  0E01               	movlw	1
  9233  00E710  6E0D               	movwf	lcd_write@row,c
  9234  00E712  0EDB               	movlw	low STR_2
  9235  00E714  6E0F               	movwf	lcd_write@string,c
  9236  00E716  0EFE               	movlw	high STR_2
  9237  00E718  6E10               	movwf	lcd_write@string+1,c
  9238  00E71A  ECBA  F070         	call	_lcd_write	;wreg free
  9239                           
  9240                           ;main.c: 93: lcd_write(1,2,"ALARMA DISPARADA");
  9241  00E71E  0E00               	movlw	0
  9242  00E720  6E0C               	movwf	lcd_write@column+1,c
  9243  00E722  0E01               	movlw	1
  9244  00E724  6E0B               	movwf	lcd_write@column,c
  9245  00E726  0E00               	movlw	0
  9246  00E728  6E0E               	movwf	lcd_write@row+1,c
  9247  00E72A  0E02               	movlw	2
  9248  00E72C  6E0D               	movwf	lcd_write@row,c
  9249  00E72E  0EEC               	movlw	low STR_3
  9250  00E730  6E0F               	movwf	lcd_write@string,c
  9251  00E732  0EFE               	movlw	high STR_3
  9252  00E734  6E10               	movwf	lcd_write@string+1,c
  9253  00E736  ECBA  F070         	call	_lcd_write	;wreg free
  9254  00E73A  0012               	return		;funcret
  9255  00E73C                     __end_of_activity_triggered_alarm:
  9256                           	opt stack 0
  9257                           tblptru	equ	0xFF8
  9258                           tblptrh	equ	0xFF7
  9259                           tblptrl	equ	0xFF6
  9260                           tablat	equ	0xFF5
  9261                           prodh	equ	0xFF4
  9262                           prodl	equ	0xFF3
  9263                           intcon	equ	0xFF2
  9264                           indf0	equ	0xFEF
  9265                           postinc0	equ	0xFEE
  9266                           fsr0h	equ	0xFEA
  9267                           fsr0l	equ	0xFE9
  9268                           wreg	equ	0xFE8
  9269                           indf1	equ	0xFE7
  9270                           postdec1	equ	0xFE5
  9271                           fsr1h	equ	0xFE2
  9272                           fsr1l	equ	0xFE1
  9273                           indf2	equ	0xFDF
  9274                           postinc2	equ	0xFDE
  9275                           postdec2	equ	0xFDD
  9276                           fsr2h	equ	0xFDA
  9277                           fsr2l	equ	0xFD9
  9278                           status	equ	0xFD8
  9279                           
  9280 ;; *************** function _activity_home *****************
  9281 ;; Defined at:
  9282 ;;		line 81 in file "main.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;		None               void
  9289 ;; Registers used:
  9290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    6
  9303 ;; This function calls:
  9304 ;;		_lcd_init
  9305 ;;		_lcd_write
  9306 ;; This function is called by:
  9307 ;;		_check_home_callback
  9308 ;;		_pin_set
  9309 ;;		_button_B_submenu_activation
  9310 ;;		_button_B_submenu_pin_config
  9311 ;;		_button_B_submenu_siren_volume
  9312 ;;		_button_B_submenu_siren_tone
  9313 ;;		_button_D
  9314 ;;		_button_hash
  9315 ;;		_main
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text64
  9320  00E248                     __ptext64:
  9321                           	opt stack 0
  9322  00E248                     _activity_home:
  9323                           	opt stack 21
  9324                           
  9325                           ;main.c: 83: activity = 0;
  9326                           
  9327                           ;incstack = 0
  9328  00E248  0E00               	movlw	0
  9329  00E24A  6E2A               	movwf	_activity+1,c
  9330  00E24C  0E00               	movlw	0
  9331  00E24E  6E29               	movwf	_activity,c
  9332                           
  9333                           ;main.c: 84: lcd_init();
  9334  00E250  EC2E  F078         	call	_lcd_init	;wreg free
  9335                           
  9336                           ;main.c: 85: lcd_write(1,1,"X28");
  9337  00E254  0E00               	movlw	0
  9338  00E256  6E0C               	movwf	lcd_write@column+1,c
  9339  00E258  0E01               	movlw	1
  9340  00E25A  6E0B               	movwf	lcd_write@column,c
  9341  00E25C  0E00               	movlw	0
  9342  00E25E  6E0E               	movwf	lcd_write@row+1,c
  9343  00E260  0E01               	movlw	1
  9344  00E262  6E0D               	movwf	lcd_write@row,c
  9345  00E264  0EE5               	movlw	low STR_1
  9346  00E266  6E0F               	movwf	lcd_write@string,c
  9347  00E268  0EFF               	movlw	high STR_1
  9348  00E26A  6E10               	movwf	lcd_write@string+1,c
  9349  00E26C  ECBA  F070         	call	_lcd_write	;wreg free
  9350  00E270  0012               	return		;funcret
  9351  00E272                     __end_of_activity_home:
  9352                           	opt stack 0
  9353                           tblptru	equ	0xFF8
  9354                           tblptrh	equ	0xFF7
  9355                           tblptrl	equ	0xFF6
  9356                           tablat	equ	0xFF5
  9357                           prodh	equ	0xFF4
  9358                           prodl	equ	0xFF3
  9359                           intcon	equ	0xFF2
  9360                           indf0	equ	0xFEF
  9361                           postinc0	equ	0xFEE
  9362                           fsr0h	equ	0xFEA
  9363                           fsr0l	equ	0xFE9
  9364                           wreg	equ	0xFE8
  9365                           indf1	equ	0xFE7
  9366                           postdec1	equ	0xFE5
  9367                           fsr1h	equ	0xFE2
  9368                           fsr1l	equ	0xFE1
  9369                           indf2	equ	0xFDF
  9370                           postinc2	equ	0xFDE
  9371                           postdec2	equ	0xFDD
  9372                           fsr2h	equ	0xFDA
  9373                           fsr2l	equ	0xFD9
  9374                           status	equ	0xFD8
  9375                           
  9376 ;; *************** function _lcd_write *****************
  9377 ;; Defined at:
  9378 ;;		line 72 in file "main.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  column          2   10[COMRAM] int 
  9381 ;;  row             2   12[COMRAM] int 
  9382 ;;  string          2   14[COMRAM] PTR const unsigned char 
  9383 ;;		 -> STR_47(11), STR_45(6), STR_44(8), STR_43(4), 
  9384 ;;		 -> STR_42(7), STR_41(7), STR_40(5), STR_39(5), 
  9385 ;;		 -> STR_38(5), STR_37(8), STR_36(5), STR_35(8), 
  9386 ;;		 -> STR_34(7), STR_32(16), STR_30(17), buffer1(20), 
  9387 ;;		 -> STR_27(5), STR_26(6), STR_25(6), STR_24(3), 
  9388 ;;		 -> STR_23(3), STR_22(8), STR_21(7), STR_20(4), 
  9389 ;;		 -> STR_19(6), STR_18(8), STR_17(16), STR_15(2), 
  9390 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  9391 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  9392 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(17), 
  9393 ;;		 -> STR_2(17), STR_1(4), 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;		None
  9396 ;; Return value:  Size  Location     Type
  9397 ;;		None               void
  9398 ;; Registers used:
  9399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9405 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9408 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9409 ;;Total ram usage:        6 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:    5
  9412 ;; This function calls:
  9413 ;;		_lcd_gotoxy
  9414 ;;		_lcd_putrs
  9415 ;; This function is called by:
  9416 ;;		_activity_home
  9417 ;;		_activity_triggered_alarm
  9418 ;;		_menu_selector_0
  9419 ;;		_menu_selector_1
  9420 ;;		_menu_selector_2
  9421 ;;		_menu_selector_3
  9422 ;;		_submenu_selector_0
  9423 ;;		_submenu_selector_1
  9424 ;;		_activity_pin
  9425 ;;		_activity_menu
  9426 ;;		_activity_submenu_activation
  9427 ;;		_activity_submenu_date_and_time
  9428 ;;		_activity_submenu_date_config
  9429 ;;		_activity_submenu_time_config
  9430 ;;		_activity_submenu_siren
  9431 ;;		_activity_submenu_siren_volume
  9432 ;;		_activity_submenu_siren_tone
  9433 ;;		_activity_submenu_pin
  9434 ;;		_activity_submenu_pin_set
  9435 ;;		_home_clock_refresh
  9436 ;;		_home_state_refresh
  9437 ;;		_home_volume_refresh
  9438 ;;		_home_tone_refresh
  9439 ;;		_activity_submenu_date_config_refresh
  9440 ;;		_activity_submenu_time_config_refresh
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text65
  9445  00E174                     __ptext65:
  9446                           	opt stack 0
  9447  00E174                     _lcd_write:
  9448                           	opt stack 21
  9449                           
  9450                           ;main.c: 74: lcd_gotoxy(column, row);
  9451                           
  9452                           ;incstack = 0
  9453  00E174  C00D  F005         	movff	lcd_write@row,lcd_gotoxy@y
  9454  00E178  500B               	movf	lcd_write@column,w,c
  9455  00E17A  ECFE  F070         	call	_lcd_gotoxy
  9456                           
  9457                           ;main.c: 75: lcd_putrs(string);
  9458  00E17E  C00F  F009         	movff	lcd_write@string,lcd_putrs@ptr
  9459  00E182  C010  F00A         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  9460  00E186  ECB6  F075         	call	_lcd_putrs	;wreg free
  9461  00E18A  0012               	return		;funcret
  9462  00E18C                     __end_of_lcd_write:
  9463                           	opt stack 0
  9464                           tblptru	equ	0xFF8
  9465                           tblptrh	equ	0xFF7
  9466                           tblptrl	equ	0xFF6
  9467                           tablat	equ	0xFF5
  9468                           prodh	equ	0xFF4
  9469                           prodl	equ	0xFF3
  9470                           intcon	equ	0xFF2
  9471                           indf0	equ	0xFEF
  9472                           postinc0	equ	0xFEE
  9473                           fsr0h	equ	0xFEA
  9474                           fsr0l	equ	0xFE9
  9475                           wreg	equ	0xFE8
  9476                           indf1	equ	0xFE7
  9477                           postdec1	equ	0xFE5
  9478                           fsr1h	equ	0xFE2
  9479                           fsr1l	equ	0xFE1
  9480                           indf2	equ	0xFDF
  9481                           postinc2	equ	0xFDE
  9482                           postdec2	equ	0xFDD
  9483                           fsr2h	equ	0xFDA
  9484                           fsr2l	equ	0xFD9
  9485                           status	equ	0xFD8
  9486                           
  9487 ;; *************** function _lcd_putrs *****************
  9488 ;; Defined at:
  9489 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  9492 ;;		 -> STR_58(2), STR_47(11), STR_45(6), STR_44(8), 
  9493 ;;		 -> STR_43(4), STR_42(7), STR_41(7), STR_40(5), 
  9494 ;;		 -> STR_39(5), STR_38(5), STR_37(8), STR_36(5), 
  9495 ;;		 -> STR_35(8), STR_34(7), STR_32(16), STR_30(17), 
  9496 ;;		 -> buffer1(20), STR_27(5), STR_26(6), STR_25(6), 
  9497 ;;		 -> STR_24(3), STR_23(3), STR_22(8), STR_21(7), 
  9498 ;;		 -> STR_20(4), STR_19(6), STR_18(8), STR_17(16), 
  9499 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  9500 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  9501 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  9502 ;;		 -> STR_3(17), STR_2(17), STR_1(4), 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;		None               void
  9507 ;; Registers used:
  9508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9518 ;;Total ram usage:        2 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    4
  9521 ;; This function calls:
  9522 ;;		_lcd_putc
  9523 ;; This function is called by:
  9524 ;;		_lcd_write
  9525 ;;		_button_number
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text66
  9530  00EB6C                     __ptext66:
  9531                           	opt stack 0
  9532  00EB6C                     _lcd_putrs:
  9533                           	opt stack 24
  9534                           
  9535                           ;unmc_lcd_216.c: 223: while(*ptr){
  9536                           
  9537                           ;incstack = 0
  9538  00EB6C  D015               	goto	l3077
  9539  00EB6E                     l3073:
  9540                           
  9541                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  9542  00EB6E  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9543  00EB72  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9544  00EB76  6AF8               	clrf	tblptru,c
  9545  00EB78  0E0E               	movlw	(high __ramtop+-1)
  9546  00EB7A  64F7               	cpfsgt	tblptrh,c
  9547  00EB7C  D003               	bra	u1517
  9548  00EB7E  0008               	tblrd		*
  9549  00EB80  50F5               	movf	tablat,w,c
  9550  00EB82  D005               	bra	u1510
  9551  00EB84                     u1517:
  9552  00EB84  CFF6 FFE9          	movff	tblptrl,fsr0l
  9553  00EB88  CFF7 FFEA          	movff	tblptrh,fsr0h
  9554  00EB8C  50EF               	movf	indf0,w,c
  9555  00EB8E                     u1510:
  9556  00EB8E  EC2D  F074         	call	_lcd_putc
  9557  00EB92  4A09               	infsnz	lcd_putrs@ptr,f,c
  9558  00EB94  2A0A               	incf	lcd_putrs@ptr+1,f,c
  9559  00EB96  D000               	goto	l3077
  9560  00EB98                     l3077:
  9561  00EB98  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9562  00EB9C  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9563  00EBA0  6AF8               	clrf	tblptru,c
  9564  00EBA2  0E0E               	movlw	(high __ramtop+-1)
  9565  00EBA4  64F7               	cpfsgt	tblptrh,c
  9566  00EBA6  D003               	bra	u1527
  9567  00EBA8  0008               	tblrd		*
  9568  00EBAA  50F5               	movf	tablat,w,c
  9569  00EBAC  D005               	bra	u1520
  9570  00EBAE                     u1527:
  9571  00EBAE  CFF6 FFE9          	movff	tblptrl,fsr0l
  9572  00EBB2  CFF7 FFEA          	movff	tblptrh,fsr0h
  9573  00EBB6  50EF               	movf	indf0,w,c
  9574  00EBB8                     u1520:
  9575  00EBB8  0900               	iorlw	0
  9576  00EBBA  A4D8               	btfss	status,2,c
  9577  00EBBC  D7D8               	goto	l3073
  9578  00EBBE  0012               	return		;funcret
  9579  00EBC0                     __end_of_lcd_putrs:
  9580                           	opt stack 0
  9581                           tblptru	equ	0xFF8
  9582                           tblptrh	equ	0xFF7
  9583                           tblptrl	equ	0xFF6
  9584                           tablat	equ	0xFF5
  9585                           prodh	equ	0xFF4
  9586                           prodl	equ	0xFF3
  9587                           intcon	equ	0xFF2
  9588                           indf0	equ	0xFEF
  9589                           postinc0	equ	0xFEE
  9590                           fsr0h	equ	0xFEA
  9591                           fsr0l	equ	0xFE9
  9592                           wreg	equ	0xFE8
  9593                           indf1	equ	0xFE7
  9594                           postdec1	equ	0xFE5
  9595                           fsr1h	equ	0xFE2
  9596                           fsr1l	equ	0xFE1
  9597                           indf2	equ	0xFDF
  9598                           postinc2	equ	0xFDE
  9599                           postdec2	equ	0xFDD
  9600                           fsr2h	equ	0xFDA
  9601                           fsr2l	equ	0xFD9
  9602                           status	equ	0xFD8
  9603                           
  9604 ;; *************** function _lcd_putc *****************
  9605 ;; Defined at:
  9606 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;  c               1    wreg     unsigned char 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  c               1    7[COMRAM] unsigned char 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;		None               void
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9624 ;;Total ram usage:        1 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:    3
  9627 ;; This function calls:
  9628 ;;		_lcd_gotoxy
  9629 ;;		_lcd_send_byte
  9630 ;; This function is called by:
  9631 ;;		_lcd_putrs
  9632 ;;		_lcd_puts
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text67
  9637  00E85A                     __ptext67:
  9638                           	opt stack 0
  9639  00E85A                     _lcd_putc:
  9640                           	opt stack 24
  9641                           
  9642                           ;incstack = 0
  9643                           ;lcd_putc@c stored from wreg
  9644  00E85A  6E08               	movwf	lcd_putc@c,c
  9645                           
  9646                           ;unmc_lcd_216.c: 173: switch(c){
  9647  00E85C  D018               	goto	l3069
  9648  00E85E                     l3059:
  9649                           
  9650                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  9651  00E85E  0E01               	movlw	1
  9652  00E860  6E03               	movwf	lcd_send_byte@n,c
  9653  00E862  0E00               	movlw	0
  9654  00E864  EC97  F071         	call	_lcd_send_byte
  9655                           
  9656                           ;unmc_lcd_216.c: 176: break;
  9657  00E868  0012               	return	
  9658  00E86A                     l3061:
  9659                           
  9660                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  9661  00E86A  0E02               	movlw	2
  9662  00E86C  6E05               	movwf	lcd_gotoxy@y,c
  9663  00E86E  0E01               	movlw	1
  9664  00E870  ECFE  F070         	call	_lcd_gotoxy
  9665                           
  9666                           ;unmc_lcd_216.c: 179: break;
  9667  00E874  0012               	return	
  9668  00E876                     l3063:
  9669                           
  9670                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  9671  00E876  0E10               	movlw	16
  9672  00E878  6E03               	movwf	lcd_send_byte@n,c
  9673  00E87A  0E00               	movlw	0
  9674  00E87C  EC97  F071         	call	_lcd_send_byte
  9675                           
  9676                           ;unmc_lcd_216.c: 182: break;
  9677  00E880  0012               	return	
  9678  00E882                     l3065:
  9679                           
  9680                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  9681  00E882  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  9682  00E886  0E01               	movlw	1
  9683  00E888  EC97  F071         	call	_lcd_send_byte
  9684                           
  9685                           ;unmc_lcd_216.c: 186: }
  9686                           
  9687                           ;unmc_lcd_216.c: 185: break;
  9688  00E88C  0012               	return	
  9689  00E88E                     l3069:
  9690  00E88E  5008               	movf	lcd_putc@c,w,c
  9691                           
  9692                           ; Switch size 1, requested type "space"
  9693                           ; Number of cases is 3, Range of values is 8 to 12
  9694                           ; switch strategies available:
  9695                           ; Name         Instructions Cycles
  9696                           ; simple_byte           10     6 (average)
  9697                           ;	Chosen strategy is simple_byte
  9698  00E890  0A08               	xorlw	8	; case 8
  9699  00E892  B4D8               	btfsc	status,2,c
  9700  00E894  D7F0               	goto	l3063
  9701  00E896  0A02               	xorlw	2	; case 10
  9702  00E898  B4D8               	btfsc	status,2,c
  9703  00E89A  D7E7               	goto	l3061
  9704  00E89C  0A06               	xorlw	6	; case 12
  9705  00E89E  B4D8               	btfsc	status,2,c
  9706  00E8A0  D7DE               	goto	l3059
  9707  00E8A2  D7EF               	goto	l3065
  9708  00E8A4  0012               	return		;funcret
  9709  00E8A6                     __end_of_lcd_putc:
  9710                           	opt stack 0
  9711                           tblptru	equ	0xFF8
  9712                           tblptrh	equ	0xFF7
  9713                           tblptrl	equ	0xFF6
  9714                           tablat	equ	0xFF5
  9715                           prodh	equ	0xFF4
  9716                           prodl	equ	0xFF3
  9717                           intcon	equ	0xFF2
  9718                           indf0	equ	0xFEF
  9719                           postinc0	equ	0xFEE
  9720                           fsr0h	equ	0xFEA
  9721                           fsr0l	equ	0xFE9
  9722                           wreg	equ	0xFE8
  9723                           indf1	equ	0xFE7
  9724                           postdec1	equ	0xFE5
  9725                           fsr1h	equ	0xFE2
  9726                           fsr1l	equ	0xFE1
  9727                           indf2	equ	0xFDF
  9728                           postinc2	equ	0xFDE
  9729                           postdec2	equ	0xFDD
  9730                           fsr2h	equ	0xFDA
  9731                           fsr2l	equ	0xFD9
  9732                           status	equ	0xFD8
  9733                           
  9734 ;; *************** function _lcd_gotoxy *****************
  9735 ;; Defined at:
  9736 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;  x               1    wreg     unsigned char 
  9739 ;;  y               1    4[COMRAM] unsigned char 
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;  x               1    5[COMRAM] unsigned char 
  9742 ;;  address         1    6[COMRAM] unsigned char 
  9743 ;; Return value:  Size  Location     Type
  9744 ;;		None               void
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, status,0, cstack
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9755 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9756 ;;Total ram usage:        3 bytes
  9757 ;; Hardware stack levels used:    1
  9758 ;; Hardware stack levels required when called:    2
  9759 ;; This function calls:
  9760 ;;		_lcd_send_byte
  9761 ;; This function is called by:
  9762 ;;		_lcd_write
  9763 ;;		_activity_pin
  9764 ;;		_activity_submenu_date_config
  9765 ;;		_activity_submenu_time_config
  9766 ;;		_cursor_displacement
  9767 ;;		_activity_submenu_pin_set
  9768 ;;		_lcd_putc
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text68
  9773  00E1FC                     __ptext68:
  9774                           	opt stack 0
  9775  00E1FC                     _lcd_gotoxy:
  9776                           	opt stack 24
  9777                           
  9778                           ;incstack = 0
  9779                           ;lcd_gotoxy@x stored from wreg
  9780  00E1FC  6E06               	movwf	lcd_gotoxy@x,c
  9781                           
  9782                           ;unmc_lcd_216.c: 159: int8 address;
  9783                           ;unmc_lcd_216.c: 161: if(y != 1)
  9784  00E1FE  0405               	decf	lcd_gotoxy@y,w,c
  9785  00E200  B4D8               	btfsc	status,2,c
  9786  00E202  D002               	goto	l3051
  9787                           
  9788                           ;unmc_lcd_216.c: 162: address = 0x40;
  9789  00E204  0E40               	movlw	64
  9790  00E206  D001               	goto	L4
  9791  00E208                     l3051:
  9792                           
  9793                           ;unmc_lcd_216.c: 163: else
  9794                           ;unmc_lcd_216.c: 164: address=0;
  9795  00E208  0E00               	movlw	0
  9796  00E20A                     L4:
  9797  00E20A  6E07               	movwf	lcd_gotoxy@address,c
  9798  00E20C  D000               	goto	l3053
  9799  00E20E                     l3053:
  9800                           
  9801                           ;unmc_lcd_216.c: 166: address += x-1;
  9802  00E20E  0406               	decf	lcd_gotoxy@x,w,c
  9803  00E210  2607               	addwf	lcd_gotoxy@address,f,c
  9804                           
  9805                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  9806  00E212  5007               	movf	lcd_gotoxy@address,w,c
  9807  00E214  0980               	iorlw	128
  9808  00E216  6E03               	movwf	lcd_send_byte@n,c
  9809  00E218  0E00               	movlw	0
  9810  00E21A  EC97  F071         	call	_lcd_send_byte
  9811  00E21E  0012               	return		;funcret
  9812  00E220                     __end_of_lcd_gotoxy:
  9813                           	opt stack 0
  9814                           tblptru	equ	0xFF8
  9815                           tblptrh	equ	0xFF7
  9816                           tblptrl	equ	0xFF6
  9817                           tablat	equ	0xFF5
  9818                           prodh	equ	0xFF4
  9819                           prodl	equ	0xFF3
  9820                           intcon	equ	0xFF2
  9821                           indf0	equ	0xFEF
  9822                           postinc0	equ	0xFEE
  9823                           fsr0h	equ	0xFEA
  9824                           fsr0l	equ	0xFE9
  9825                           wreg	equ	0xFE8
  9826                           indf1	equ	0xFE7
  9827                           postdec1	equ	0xFE5
  9828                           fsr1h	equ	0xFE2
  9829                           fsr1l	equ	0xFE1
  9830                           indf2	equ	0xFDF
  9831                           postinc2	equ	0xFDE
  9832                           postdec2	equ	0xFDD
  9833                           fsr2h	equ	0xFDA
  9834                           fsr2l	equ	0xFD9
  9835                           status	equ	0xFD8
  9836                           
  9837 ;; *************** function _lcd_init *****************
  9838 ;; Defined at:
  9839 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;		None
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  i               1    4[COMRAM] unsigned char 
  9844 ;; Return value:  Size  Location     Type
  9845 ;;		None               void
  9846 ;; Registers used:
  9847 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9857 ;;Total ram usage:        1 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; Hardware stack levels required when called:    2
  9860 ;; This function calls:
  9861 ;;		_Delay1KTCYx
  9862 ;;		_lcd_send_byte
  9863 ;;		_lcd_send_nibble
  9864 ;; This function is called by:
  9865 ;;		_activity_home
  9866 ;;		_activity_triggered_alarm
  9867 ;;		_activity_pin
  9868 ;;		_activity_menu
  9869 ;;		_activity_submenu_activation
  9870 ;;		_activity_submenu_date_and_time
  9871 ;;		_activity_submenu_date_config
  9872 ;;		_activity_submenu_time_config
  9873 ;;		_activity_submenu_siren
  9874 ;;		_activity_submenu_siren_volume
  9875 ;;		_activity_submenu_siren_tone
  9876 ;;		_activity_submenu_pin
  9877 ;;		_activity_submenu_pin_set
  9878 ;;		_setup
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           	psect	text69
  9883  00F05C                     __ptext69:
  9884                           	opt stack 0
  9885  00F05C                     _lcd_init:
  9886                           	opt stack 27
  9887                           
  9888                           ;unmc_lcd_216.c: 120: int8 i;
  9889                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  9890                           
  9891                           ;incstack = 0
  9892  00F05C  9693               	bcf	3987,3,c	;volatile
  9893                           
  9894                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  9895  00F05E  9493               	bcf	3987,2,c	;volatile
  9896                           
  9897                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  9898  00F060  968A               	bcf	3978,3,c	;volatile
  9899                           
  9900                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  9901  00F062  948A               	bcf	3978,2,c	;volatile
  9902                           
  9903                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  9904  00F064  9893               	bcf	3987,4,c	;volatile
  9905                           
  9906                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  9907  00F066  9A93               	bcf	3987,5,c	;volatile
  9908                           
  9909                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  9910  00F068  9C93               	bcf	3987,6,c	;volatile
  9911                           
  9912                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  9913  00F06A  9E93               	bcf	3987,7,c	;volatile
  9914                           
  9915                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  9916  00F06C  0E0A               	movlw	10
  9917  00F06E  EC94  F070         	call	_Delay1KTCYx
  9918                           
  9919                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  9920  00F072  0E0A               	movlw	10
  9921  00F074  EC94  F070         	call	_Delay1KTCYx
  9922                           
  9923                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  9924  00F078  0E0A               	movlw	10
  9925  00F07A  EC94  F070         	call	_Delay1KTCYx
  9926                           
  9927                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  9928  00F07E  0E00               	movlw	0
  9929  00F080  6E05               	movwf	lcd_init@i,c
  9930  00F082                     l3293:
  9931  00F082  0E02               	movlw	2
  9932  00F084  6405               	cpfsgt	lcd_init@i,c
  9933  00F086  D001               	goto	l3297
  9934  00F088  D008               	goto	l3303
  9935  00F08A                     l3297:
  9936                           
  9937                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  9938  00F08A  0E03               	movlw	3
  9939  00F08C  EC77  F077         	call	_lcd_send_nibble
  9940                           
  9941                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  9942  00F090  0E0A               	movlw	10
  9943  00F092  EC94  F070         	call	_Delay1KTCYx
  9944  00F096  2A05               	incf	lcd_init@i,f,c
  9945  00F098  D7F4               	goto	l3293
  9946  00F09A                     l3303:
  9947                           
  9948                           ;unmc_lcd_216.c: 146: }
  9949                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  9950  00F09A  0E02               	movlw	2
  9951  00F09C  EC77  F077         	call	_lcd_send_nibble
  9952                           
  9953                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  9954  00F0A0  0E00               	movlw	0
  9955  00F0A2  6E05               	movwf	lcd_init@i,c
  9956  00F0A4  0E03               	movlw	3
  9957  00F0A6  6405               	cpfsgt	lcd_init@i,c
  9958  00F0A8  D002               	goto	l3311
  9959  00F0AA  0012               	return	
  9960  00F0AC  0012               	return	
  9961  00F0AE                     l3311:
  9962                           
  9963                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  9964  00F0AE  5005               	movf	lcd_init@i,w,c
  9965  00F0B0  0D01               	mullw	1
  9966  00F0B2  0ED7               	movlw	low _LCD_INIT_STRING
  9967  00F0B4  24F3               	addwf	prodl,w,c
  9968  00F0B6  6EF6               	movwf	tblptrl,c
  9969  00F0B8  0EFE               	movlw	high _LCD_INIT_STRING
  9970  00F0BA  20F4               	addwfc	prodh,w,c
  9971  00F0BC  6EF7               	movwf	tblptrh,c
  9972  00F0BE                     	if	0	;There are less than 3 active tblptr bytes
  9973  00F0BE                     	endif
  9974  00F0BE  0008               	tblrd		*
  9975  00F0C0  CFF5 F003          	movff	tablat,lcd_send_byte@n
  9976  00F0C4  0E00               	movlw	0
  9977  00F0C6  EC97  F071         	call	_lcd_send_byte
  9978                           
  9979                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  9980  00F0CA  0E0A               	movlw	10
  9981  00F0CC  EC94  F070         	call	_Delay1KTCYx
  9982  00F0D0  2A05               	incf	lcd_init@i,f,c
  9983  00F0D2  0E03               	movlw	3
  9984  00F0D4  6405               	cpfsgt	lcd_init@i,c
  9985  00F0D6  D7EB               	goto	l3311
  9986  00F0D8  0012               	return	
  9987  00F0DA  0012               	return		;funcret
  9988  00F0DC                     __end_of_lcd_init:
  9989                           	opt stack 0
  9990                           tblptru	equ	0xFF8
  9991                           tblptrh	equ	0xFF7
  9992                           tblptrl	equ	0xFF6
  9993                           tablat	equ	0xFF5
  9994                           prodh	equ	0xFF4
  9995                           prodl	equ	0xFF3
  9996                           intcon	equ	0xFF2
  9997                           indf0	equ	0xFEF
  9998                           postinc0	equ	0xFEE
  9999                           fsr0h	equ	0xFEA
 10000                           fsr0l	equ	0xFE9
 10001                           wreg	equ	0xFE8
 10002                           indf1	equ	0xFE7
 10003                           postdec1	equ	0xFE5
 10004                           fsr1h	equ	0xFE2
 10005                           fsr1l	equ	0xFE1
 10006                           indf2	equ	0xFDF
 10007                           postinc2	equ	0xFDE
 10008                           postdec2	equ	0xFDD
 10009                           fsr2h	equ	0xFDA
 10010                           fsr2l	equ	0xFD9
 10011                           status	equ	0xFD8
 10012                           
 10013 ;; *************** function _lcd_send_byte *****************
 10014 ;; Defined at:
 10015 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;  address         1    wreg     unsigned char 
 10018 ;;  n               1    2[COMRAM] unsigned char 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  address         1    3[COMRAM] unsigned char 
 10021 ;; Return value:  Size  Location     Type
 10022 ;;		None               void
 10023 ;; Registers used:
 10024 ;;		wreg, status,2, status,0, cstack
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10030 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10034 ;;Total ram usage:        2 bytes
 10035 ;; Hardware stack levels used:    1
 10036 ;; Hardware stack levels required when called:    1
 10037 ;; This function calls:
 10038 ;;		_Delay100TCYx
 10039 ;;		_lcd_send_nibble
 10040 ;; This function is called by:
 10041 ;;		_lcd_init
 10042 ;;		_lcd_gotoxy
 10043 ;;		_lcd_putc
 10044 ;;		_lcd_comand
 10045 ;;		_lcd_setcursor_vb
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text70
 10050  00E32E                     __ptext70:
 10051                           	opt stack 0
 10052  00E32E                     _lcd_send_byte:
 10053                           	opt stack 27
 10054                           
 10055                           ;incstack = 0
 10056                           ;lcd_send_byte@address stored from wreg
 10057  00E32E  6E04               	movwf	lcd_send_byte@address,c
 10058                           
 10059                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
 10060  00E330  968A               	bcf	3978,3,c	;volatile
 10061                           
 10062                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
 10063  00E332  0E02               	movlw	2
 10064  00E334  EC9D  F070         	call	_Delay100TCYx
 10065                           
 10066                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
 10067  00E338  9893               	bcf	3987,4,c	;volatile
 10068                           
 10069                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
 10070  00E33A  9A93               	bcf	3987,5,c	;volatile
 10071                           
 10072                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
 10073  00E33C  9C93               	bcf	3987,6,c	;volatile
 10074                           
 10075                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
 10076  00E33E  9E93               	bcf	3987,7,c	;volatile
 10077                           
 10078                           ;unmc_lcd_216.c: 101: if(address)
 10079  00E340  5004               	movf	lcd_send_byte@address,w,c
 10080  00E342  B4D8               	btfsc	status,2,c
 10081  00E344  D002               	goto	l544
 10082                           
 10083                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
 10084  00E346  868A               	bsf	3978,3,c	;volatile
 10085  00E348  D001               	goto	l545
 10086  00E34A                     l544:
 10087                           
 10088                           ;unmc_lcd_216.c: 103: else
 10089                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
 10090  00E34A  968A               	bcf	3978,3,c	;volatile
 10091  00E34C                     l545:
 10092                           
 10093                           ;unmc_lcd_216.c: 106: __nop();
 10094  00E34C  F000               	nop	
 10095                           
 10096                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
 10097  00E34E  3803               	swapf	lcd_send_byte@n,w,c
 10098  00E350  0B0F               	andlw	15
 10099  00E352  EC77  F077         	call	_lcd_send_nibble
 10100                           
 10101                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
 10102  00E356  5003               	movf	lcd_send_byte@n,w,c
 10103  00E358  0B0F               	andlw	15
 10104  00E35A  EC77  F077         	call	_lcd_send_nibble
 10105  00E35E  0012               	return		;funcret
 10106  00E360                     __end_of_lcd_send_byte:
 10107                           	opt stack 0
 10108                           tblptru	equ	0xFF8
 10109                           tblptrh	equ	0xFF7
 10110                           tblptrl	equ	0xFF6
 10111                           tablat	equ	0xFF5
 10112                           prodh	equ	0xFF4
 10113                           prodl	equ	0xFF3
 10114                           intcon	equ	0xFF2
 10115                           indf0	equ	0xFEF
 10116                           postinc0	equ	0xFEE
 10117                           fsr0h	equ	0xFEA
 10118                           fsr0l	equ	0xFE9
 10119                           wreg	equ	0xFE8
 10120                           indf1	equ	0xFE7
 10121                           postdec1	equ	0xFE5
 10122                           fsr1h	equ	0xFE2
 10123                           fsr1l	equ	0xFE1
 10124                           indf2	equ	0xFDF
 10125                           postinc2	equ	0xFDE
 10126                           postdec2	equ	0xFDD
 10127                           fsr2h	equ	0xFDA
 10128                           fsr2l	equ	0xFD9
 10129                           status	equ	0xFD8
 10130                           
 10131 ;; *************** function _lcd_send_nibble *****************
 10132 ;; Defined at:
 10133 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  nibble          1    wreg     unsigned char 
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;  nibble          1    1[COMRAM] unsigned char 
 10138 ;; Return value:  Size  Location     Type
 10139 ;;		None               void
 10140 ;; Registers used:
 10141 ;;		wreg, status,2, status,0
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10151 ;;Total ram usage:        2 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_lcd_send_byte
 10157 ;;		_lcd_init
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text71
 10162  00EEEE                     __ptext71:
 10163                           	opt stack 0
 10164  00EEEE                     _lcd_send_nibble:
 10165                           	opt stack 28
 10166                           
 10167                           ;incstack = 0
 10168                           ;lcd_send_nibble@nibble stored from wreg
 10169  00EEEE  6E02               	movwf	lcd_send_nibble@nibble,c
 10170                           
 10171                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
 10172  00EEF0  A002               	btfss	lcd_send_nibble@nibble,0,c
 10173  00EEF2  D003               	goto	u1410
 10174  00EEF4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 10175  00EEF6  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 10176  00EEF8  D001               	goto	u1428
 10177  00EEFA                     u1410:
 10178  00EEFA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 10179  00EEFC                     u1428:
 10180  00EEFC  3A01               	swapf	??_lcd_send_nibble,f,c
 10181  00EEFE  508A               	movf	3978,w,c	;volatile
 10182  00EF00  1801               	xorwf	??_lcd_send_nibble,w,c
 10183  00EF02  0BEF               	andlw	-17
 10184  00EF04  1801               	xorwf	??_lcd_send_nibble,w,c
 10185  00EF06  6E8A               	movwf	3978,c	;volatile
 10186                           
 10187                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
 10188  00EF08  A202               	btfss	lcd_send_nibble@nibble,1,c
 10189  00EF0A  D003               	goto	u1430
 10190  00EF0C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 10191  00EF0E  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 10192  00EF10  D001               	goto	u1448
 10193  00EF12                     u1430:
 10194  00EF12  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 10195  00EF14                     u1448:
 10196  00EF14  3A01               	swapf	??_lcd_send_nibble,f,c
 10197  00EF16  4601               	rlncf	??_lcd_send_nibble,f,c
 10198  00EF18  508A               	movf	3978,w,c	;volatile
 10199  00EF1A  1801               	xorwf	??_lcd_send_nibble,w,c
 10200  00EF1C  0BDF               	andlw	-33
 10201  00EF1E  1801               	xorwf	??_lcd_send_nibble,w,c
 10202  00EF20  6E8A               	movwf	3978,c	;volatile
 10203                           
 10204                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
 10205  00EF22  A402               	btfss	lcd_send_nibble@nibble,2,c
 10206  00EF24  D003               	goto	u1450
 10207  00EF26  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 10208  00EF28  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 10209  00EF2A  D001               	goto	u1468
 10210  00EF2C                     u1450:
 10211  00EF2C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 10212  00EF2E                     u1468:
 10213  00EF2E  3A01               	swapf	??_lcd_send_nibble,f,c
 10214  00EF30  4601               	rlncf	??_lcd_send_nibble,f,c
 10215  00EF32  4601               	rlncf	??_lcd_send_nibble,f,c
 10216  00EF34  508A               	movf	3978,w,c	;volatile
 10217  00EF36  1801               	xorwf	??_lcd_send_nibble,w,c
 10218  00EF38  0BBF               	andlw	-65
 10219  00EF3A  1801               	xorwf	??_lcd_send_nibble,w,c
 10220  00EF3C  6E8A               	movwf	3978,c	;volatile
 10221                           
 10222                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
 10223  00EF3E  A602               	btfss	lcd_send_nibble@nibble,3,c
 10224  00EF40  D003               	goto	u1470
 10225  00EF42  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 10226  00EF44  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 10227  00EF46  D001               	goto	u1488
 10228  00EF48                     u1470:
 10229  00EF48  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 10230  00EF4A                     u1488:
 10231  00EF4A  3201               	rrcf	??_lcd_send_nibble,f,c
 10232  00EF4C  3201               	rrcf	??_lcd_send_nibble,f,c
 10233  00EF4E  508A               	movf	3978,w,c	;volatile
 10234  00EF50  1801               	xorwf	??_lcd_send_nibble,w,c
 10235  00EF52  0B7F               	andlw	-129
 10236  00EF54  1801               	xorwf	??_lcd_send_nibble,w,c
 10237  00EF56  6E8A               	movwf	3978,c	;volatile
 10238                           
 10239                           ;unmc_lcd_216.c: 32: __nop();
 10240  00EF58  F000               	nop	
 10241                           
 10242                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
 10243  00EF5A  848A               	bsf	3978,2,c	;volatile
 10244                           
 10245                           ;unmc_lcd_216.c: 34: __nop();__nop();
 10246  00EF5C  F000               	nop	
 10247  00EF5E  F000               	nop	
 10248                           
 10249                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
 10250  00EF60  948A               	bcf	3978,2,c	;volatile
 10251  00EF62  0012               	return		;funcret
 10252  00EF64                     __end_of_lcd_send_nibble:
 10253                           	opt stack 0
 10254                           tblptru	equ	0xFF8
 10255                           tblptrh	equ	0xFF7
 10256                           tblptrl	equ	0xFF6
 10257                           tablat	equ	0xFF5
 10258                           prodh	equ	0xFF4
 10259                           prodl	equ	0xFF3
 10260                           intcon	equ	0xFF2
 10261                           indf0	equ	0xFEF
 10262                           postinc0	equ	0xFEE
 10263                           fsr0h	equ	0xFEA
 10264                           fsr0l	equ	0xFE9
 10265                           wreg	equ	0xFE8
 10266                           indf1	equ	0xFE7
 10267                           postdec1	equ	0xFE5
 10268                           fsr1h	equ	0xFE2
 10269                           fsr1l	equ	0xFE1
 10270                           indf2	equ	0xFDF
 10271                           postinc2	equ	0xFDE
 10272                           postdec2	equ	0xFDD
 10273                           fsr2h	equ	0xFDA
 10274                           fsr2l	equ	0xFD9
 10275                           status	equ	0xFD8
 10276                           
 10277 ;; *************** function _Delay100TCYx *****************
 10278 ;; Defined at:
 10279 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  unit            1    wreg     unsigned char 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;  unit            1    0[COMRAM] unsigned char 
 10284 ;; Return value:  Size  Location     Type
 10285 ;;		None               void
 10286 ;; Registers used:
 10287 ;;		wreg
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10297 ;;Total ram usage:        1 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; This function calls:
 10300 ;;		Nothing
 10301 ;; This function is called by:
 10302 ;;		_lcd_send_byte
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           	psect	text72
 10307  00E13A                     __ptext72:
 10308                           	opt stack 0
 10309  00E13A                     _Delay100TCYx:
 10310                           	opt stack 27
 10311                           
 10312                           ;incstack = 0
 10313                           ;Delay100TCYx@unit stored from wreg
 10314  00E13A  6E01               	movwf	Delay100TCYx@unit,c
 10315  00E13C  0E21               	movlw	33
 10316  00E13E                     u2857:
 10317  00E13E  2EE8               	decfsz	wreg,f,c
 10318  00E140  D7FE               	goto	u2857
 10319  00E142  F000               	nop	
 10320  00E144  2E01               	decfsz	Delay100TCYx@unit,f,c
 10321  00E146  D7FA               	goto	l3025
 10322  00E148  0012               	return	
 10323  00E14A  0012               	return		;funcret
 10324  00E14C                     __end_of_Delay100TCYx:
 10325                           	opt stack 0
 10326                           tblptru	equ	0xFF8
 10327                           tblptrh	equ	0xFF7
 10328                           tblptrl	equ	0xFF6
 10329                           tablat	equ	0xFF5
 10330                           prodh	equ	0xFF4
 10331                           prodl	equ	0xFF3
 10332                           intcon	equ	0xFF2
 10333                           indf0	equ	0xFEF
 10334                           postinc0	equ	0xFEE
 10335                           fsr0h	equ	0xFEA
 10336                           fsr0l	equ	0xFE9
 10337                           wreg	equ	0xFE8
 10338                           indf1	equ	0xFE7
 10339                           postdec1	equ	0xFE5
 10340                           fsr1h	equ	0xFE2
 10341                           fsr1l	equ	0xFE1
 10342                           indf2	equ	0xFDF
 10343                           postinc2	equ	0xFDE
 10344                           postdec2	equ	0xFDD
 10345                           fsr2h	equ	0xFDA
 10346                           fsr2l	equ	0xFD9
 10347                           status	equ	0xFD8
 10348                           
 10349 ;; *************** function _Delay1KTCYx *****************
 10350 ;; Defined at:
 10351 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;  unit            1    wreg     unsigned char 
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;  unit            1    0[COMRAM] unsigned char 
 10356 ;; Return value:  Size  Location     Type
 10357 ;;		None               void
 10358 ;; Registers used:
 10359 ;;		wreg
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10369 ;;Total ram usage:        1 bytes
 10370 ;; Hardware stack levels used:    1
 10371 ;; This function calls:
 10372 ;;		Nothing
 10373 ;; This function is called by:
 10374 ;;		_lcd_init
 10375 ;;		_DelayPORXLCD
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text73
 10380  00E128                     __ptext73:
 10381                           	opt stack 0
 10382  00E128                     _Delay1KTCYx:
 10383                           	opt stack 28
 10384                           
 10385                           ;incstack = 0
 10386                           ;Delay1KTCYx@unit stored from wreg
 10387  00E128  6E01               	movwf	Delay1KTCYx@unit,c
 10388  00E12A  0EFA               	movlw	250
 10389  00E12C                     u2867:
 10390  00E12C  F000               	nop	
 10391  00E12E  2EE8               	decfsz	wreg,f,c
 10392  00E130  D7FD               	goto	u2867
 10393  00E132  2E01               	decfsz	Delay1KTCYx@unit,f,c
 10394  00E134  D7FA               	goto	l3079
 10395  00E136  0012               	return	
 10396  00E138  0012               	return		;funcret
 10397  00E13A                     __end_of_Delay1KTCYx:
 10398                           	opt stack 0
 10399                           tblptru	equ	0xFF8
 10400                           tblptrh	equ	0xFF7
 10401                           tblptrl	equ	0xFF6
 10402                           tablat	equ	0xFF5
 10403                           prodh	equ	0xFF4
 10404                           prodl	equ	0xFF3
 10405                           intcon	equ	0xFF2
 10406                           indf0	equ	0xFEF
 10407                           postinc0	equ	0xFEE
 10408                           fsr0h	equ	0xFEA
 10409                           fsr0l	equ	0xFE9
 10410                           wreg	equ	0xFE8
 10411                           indf1	equ	0xFE7
 10412                           postdec1	equ	0xFE5
 10413                           fsr1h	equ	0xFE2
 10414                           fsr1l	equ	0xFE1
 10415                           indf2	equ	0xFDF
 10416                           postinc2	equ	0xFDE
 10417                           postdec2	equ	0xFDD
 10418                           fsr2h	equ	0xFDA
 10419                           fsr2l	equ	0xFD9
 10420                           status	equ	0xFD8
 10421                           
 10422 ;; *************** function _Read_RTC *****************
 10423 ;; Defined at:
 10424 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;		None               void
 10431 ;; Registers used:
 10432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10442 ;;Total ram usage:        0 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:    1
 10445 ;; This function calls:
 10446 ;;		_RtccReadDate
 10447 ;;		_RtccReadTime
 10448 ;; This function is called by:
 10449 ;;		_main
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text74
 10454  00F66E                     __ptext74:
 10455                           	opt stack 0
 10456  00F66E                     _Read_RTC:
 10457                           	opt stack 29
 10458                           
 10459                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
 10460                           
 10461                           ;incstack = 0
 10462  00F66E  0E4A               	movlw	low _RtccTime
 10463  00F670  6E01               	movwf	RtccReadTime@pTm,c
 10464  00F672  0E00               	movlw	high _RtccTime
 10465  00F674  6E02               	movwf	RtccReadTime@pTm+1,c
 10466  00F676  EC40  F077         	call	_RtccReadTime	;wreg free
 10467                           
 10468                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
 10469  00F67A  504B               	movf	_RtccTime+1,w,c
 10470  00F67C  0B0F               	andlw	15
 10471  00F67E  6E5E               	movwf	_segundo_u,c
 10472                           
 10473                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
 10474  00F680  384B               	swapf	_RtccTime+1,w,c
 10475  00F682  0B0F               	andlw	15
 10476  00F684  0B0F               	andlw	15
 10477  00F686  6E5D               	movwf	_segundo_d,c
 10478                           
 10479                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
 10480  00F688  504C               	movf	_RtccTime+2,w,c
 10481  00F68A  0B0F               	andlw	15
 10482  00F68C  0100               	movlb	0	; () banked
 10483  00F68E  6FA9               	movwf	_minuto_u& (0+255),b
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
 10487  00F690  384C               	swapf	_RtccTime+2,w,c
 10488  00F692  0B0F               	andlw	15
 10489  00F694  0B0F               	andlw	15
 10490  00F696  6E5C               	movwf	_minuto_d,c
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
 10494  00F698  504D               	movf	_RtccTime+3,w,c
 10495  00F69A  0B0F               	andlw	15
 10496  00F69C  0100               	movlb	0	; () banked
 10497  00F69E  6FA7               	movwf	_hora_u& (0+255),b
 10498                           
 10499                           ; BSR set to: 0
 10500                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
 10501  00F6A0  384D               	swapf	_RtccTime+3,w,c
 10502  00F6A2  0B0F               	andlw	15
 10503  00F6A4  0B0F               	andlw	15
 10504  00F6A6  6E5A               	movwf	_hora_d,c
 10505                           
 10506                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
 10507  00F6A8  0E46               	movlw	low _RtccDate
 10508  00F6AA  6E01               	movwf	RtccReadDate@pDt,c
 10509  00F6AC  0E00               	movlw	high _RtccDate
 10510  00F6AE  6E02               	movwf	RtccReadDate@pDt+1,c
 10511  00F6B0  EC71  F079         	call	_RtccReadDate	;wreg free
 10512                           
 10513                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
 10514  00F6B4  5047               	movf	_RtccDate+1,w,c
 10515  00F6B6  0B0F               	andlw	15
 10516  00F6B8  0100               	movlb	0	; () banked
 10517  00F6BA  6FA6               	movwf	_fecha_u& (0+255),b
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
 10521  00F6BC  3847               	swapf	_RtccDate+1,w,c
 10522  00F6BE  0B0F               	andlw	15
 10523  00F6C0  0B0F               	andlw	15
 10524  00F6C2  6E59               	movwf	_fecha_d,c
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
 10528  00F6C4  5048               	movf	_RtccDate+2,w,c
 10529  00F6C6  0B0F               	andlw	15
 10530  00F6C8  0100               	movlb	0	; () banked
 10531  00F6CA  6FA8               	movwf	_mes_u& (0+255),b
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
 10535  00F6CC  3848               	swapf	_RtccDate+2,w,c
 10536  00F6CE  0B0F               	andlw	15
 10537  00F6D0  0B0F               	andlw	15
 10538  00F6D2  6E5B               	movwf	_mes_d,c
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
 10542  00F6D4  C046  F0A5         	movff	_RtccDate,_dia_semana
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
 10546  00F6D8  5049               	movf	_RtccDate+3,w,c
 10547  00F6DA  0B0F               	andlw	15
 10548  00F6DC  0100               	movlb	0	; () banked
 10549  00F6DE  6FA4               	movwf	_anio_u& (0+255),b
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
 10553  00F6E0  3849               	swapf	_RtccDate+3,w,c
 10554  00F6E2  0B0F               	andlw	15
 10555  00F6E4  0B0F               	andlw	15
 10556  00F6E6  6E58               	movwf	_anio_d,c
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
 10560  00F6E8  505D               	movf	_segundo_d,w,c
 10561  00F6EA  0D0A               	mullw	10
 10562  00F6EC  505E               	movf	_segundo_u,w,c
 10563  00F6EE  24F3               	addwf	prodl,w,c
 10564  00F6F0  6E3F               	movwf	_segundo,c
 10565  00F6F2  0E00               	movlw	0
 10566  00F6F4  20F4               	addwfc	prodh,w,c
 10567  00F6F6  6E40               	movwf	_segundo+1,c
 10568                           
 10569                           ; BSR set to: 0
 10570                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
 10571  00F6F8  505C               	movf	_minuto_d,w,c
 10572  00F6FA  0D0A               	mullw	10
 10573  00F6FC  0100               	movlb	0	; () banked
 10574  00F6FE  51A9               	movf	_minuto_u& (0+255),w,b
 10575  00F700  24F3               	addwf	prodl,w,c
 10576  00F702  6E3D               	movwf	_minuto,c
 10577  00F704  0100               	movlb	0	; () banked
 10578  00F706  0E00               	movlw	0
 10579  00F708  20F4               	addwfc	prodh,w,c
 10580  00F70A  6E3E               	movwf	_minuto+1,c
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
 10584  00F70C  505A               	movf	_hora_d,w,c
 10585  00F70E  0D0A               	mullw	10
 10586  00F710  0100               	movlb	0	; () banked
 10587  00F712  51A7               	movf	_hora_u& (0+255),w,b
 10588  00F714  24F3               	addwf	prodl,w,c
 10589  00F716  6E54               	movwf	_hora,c
 10590  00F718  0100               	movlb	0	; () banked
 10591  00F71A  0E00               	movlw	0
 10592  00F71C  20F4               	addwfc	prodh,w,c
 10593  00F71E  6E55               	movwf	_hora+1,c
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
 10597  00F720  5059               	movf	_fecha_d,w,c
 10598  00F722  0D0A               	mullw	10
 10599  00F724  0100               	movlb	0	; () banked
 10600  00F726  51A6               	movf	_fecha_u& (0+255),w,b
 10601  00F728  24F3               	addwf	prodl,w,c
 10602  00F72A  6E50               	movwf	_dia,c
 10603  00F72C  0100               	movlb	0	; () banked
 10604  00F72E  0E00               	movlw	0
 10605  00F730  20F4               	addwfc	prodh,w,c
 10606  00F732  6E51               	movwf	_dia+1,c
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
 10610  00F734  C0A5  F052         	movff	_dia_semana,_diasem
 10611  00F738  6A53               	clrf	_diasem+1,c
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
 10615  00F73A  505B               	movf	_mes_d,w,c
 10616  00F73C  0D0A               	mullw	10
 10617  00F73E  0100               	movlb	0	; () banked
 10618  00F740  51A8               	movf	_mes_u& (0+255),w,b
 10619  00F742  24F3               	addwf	prodl,w,c
 10620  00F744  6E56               	movwf	_mes,c
 10621  00F746  0100               	movlb	0	; () banked
 10622  00F748  0E00               	movlw	0
 10623  00F74A  20F4               	addwfc	prodh,w,c
 10624  00F74C  6E57               	movwf	_mes+1,c
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
 10628  00F74E  5058               	movf	_anio_d,w,c
 10629  00F750  0D0A               	mullw	10
 10630  00F752  0100               	movlb	0	; () banked
 10631  00F754  51A4               	movf	_anio_u& (0+255),w,b
 10632  00F756  24F3               	addwf	prodl,w,c
 10633  00F758  6E4E               	movwf	_anio,c
 10634  00F75A  0100               	movlb	0	; () banked
 10635  00F75C  0E00               	movlw	0
 10636  00F75E  20F4               	addwfc	prodh,w,c
 10637  00F760  6E4F               	movwf	_anio+1,c
 10638                           
 10639                           ; BSR set to: 0
 10640  00F762  0012               	return		;funcret
 10641  00F764                     __end_of_Read_RTC:
 10642                           	opt stack 0
 10643                           tblptru	equ	0xFF8
 10644                           tblptrh	equ	0xFF7
 10645                           tblptrl	equ	0xFF6
 10646                           tablat	equ	0xFF5
 10647                           prodh	equ	0xFF4
 10648                           prodl	equ	0xFF3
 10649                           intcon	equ	0xFF2
 10650                           indf0	equ	0xFEF
 10651                           postinc0	equ	0xFEE
 10652                           fsr0h	equ	0xFEA
 10653                           fsr0l	equ	0xFE9
 10654                           wreg	equ	0xFE8
 10655                           indf1	equ	0xFE7
 10656                           postdec1	equ	0xFE5
 10657                           fsr1h	equ	0xFE2
 10658                           fsr1l	equ	0xFE1
 10659                           indf2	equ	0xFDF
 10660                           postinc2	equ	0xFDE
 10661                           postdec2	equ	0xFDD
 10662                           fsr2h	equ	0xFDA
 10663                           fsr2l	equ	0xFD9
 10664                           status	equ	0xFD8
 10665                           
 10666 ;; *************** function _RtccReadTime *****************
 10667 ;; Defined at:
 10668 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;  pTm             2    0[COMRAM] PTR struct .
 10671 ;;		 -> RtccTime(4), 
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;  rTD0            8   10[COMRAM] struct .
 10674 ;;  rTD1            8    2[COMRAM] struct .
 10675 ;; Return value:  Size  Location     Type
 10676 ;;		None               void
 10677 ;; Registers used:
 10678 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10679 ;; Tracked objects:
 10680 ;;		On entry : 0/0
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10685 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10687 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10688 ;;Total ram usage:       18 bytes
 10689 ;; Hardware stack levels used:    1
 10690 ;; This function calls:
 10691 ;;		Nothing
 10692 ;; This function is called by:
 10693 ;;		_Read_RTC
 10694 ;; This function uses a non-reentrant model
 10695 ;;
 10696                           
 10697                           	psect	text75
 10698  00EE80                     __ptext75:
 10699                           	opt stack 0
 10700  00EE80                     _RtccReadTime:
 10701                           	opt stack 29
 10702  00EE80  0EFC               	movlw	252
 10703  00EE82  010F               	movlb	15	; () banked
 10704  00EE84  173F               	andwf	63,f,b	;volatile
 10705                           
 10706                           ; BSR set to: 15
 10707  00EE86  010F               	movlb	15	; () banked
 10708  00EE88  813F               	bsf	63,0,b	;volatile
 10709                           
 10710                           ; BSR set to: 15
 10711  00EE8A  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
 10712                           
 10713                           ; BSR set to: 15
 10714  00EE8E  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
 10715                           
 10716                           ; BSR set to: 15
 10717  00EE92  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
 10718                           
 10719                           ; BSR set to: 15
 10720  00EE96  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
 10721                           
 10722                           ; BSR set to: 15
 10723  00EE9A  0EFC               	movlw	252
 10724  00EE9C  010F               	movlb	15	; () banked
 10725  00EE9E  173F               	andwf	63,f,b	;volatile
 10726  00EEA0  010F               	movlb	15	; () banked
 10727  00EEA2  813F               	bsf	63,0,b	;volatile
 10728                           
 10729                           ; BSR set to: 15
 10730  00EEA4  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
 10731                           
 10732                           ; BSR set to: 15
 10733  00EEA8  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
 10734                           
 10735                           ; BSR set to: 15
 10736  00EEAC  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
 10737                           
 10738                           ; BSR set to: 15
 10739  00EEB0  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
 10740                           
 10741                           ; BSR set to: 15
 10742  00EEB4  5009               	movf	RtccReadTime@rTD1+6,w,c
 10743  00EEB6  1811               	xorwf	RtccReadTime@rTD0+6,w,c
 10744  00EEB8  A4D8               	btfss	status,2,c
 10745  00EEBA  D7E2               	goto	l3945
 10746                           
 10747                           ; BSR set to: 15
 10748                           
 10749                           ; BSR set to: 15
 10750  00EEBC  EE20 F003          	lfsr	2,3
 10751  00EEC0  5001               	movf	RtccReadTime@pTm,w,c
 10752  00EEC2  26D9               	addwf	fsr2l,f,c
 10753  00EEC4  5002               	movf	RtccReadTime@pTm+1,w,c
 10754  00EEC6  22DA               	addwfc	fsr2h,f,c
 10755  00EEC8  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 10756  00EECC  EE20 F002          	lfsr	2,2
 10757  00EED0  5001               	movf	RtccReadTime@pTm,w,c
 10758  00EED2  26D9               	addwf	fsr2l,f,c
 10759  00EED4  5002               	movf	RtccReadTime@pTm+1,w,c
 10760  00EED6  22DA               	addwfc	fsr2h,f,c
 10761  00EED8  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 10762  00EEDC  EE20 F001          	lfsr	2,1
 10763  00EEE0  5001               	movf	RtccReadTime@pTm,w,c
 10764  00EEE2  26D9               	addwf	fsr2l,f,c
 10765  00EEE4  5002               	movf	RtccReadTime@pTm+1,w,c
 10766  00EEE6  22DA               	addwfc	fsr2h,f,c
 10767  00EEE8  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 10768                           
 10769                           ; BSR set to: 15
 10770  00EEEC  0012               	return		;funcret
 10771  00EEEE                     __end_of_RtccReadTime:
 10772                           	opt stack 0
 10773                           tblptru	equ	0xFF8
 10774                           tblptrh	equ	0xFF7
 10775                           tblptrl	equ	0xFF6
 10776                           tablat	equ	0xFF5
 10777                           prodh	equ	0xFF4
 10778                           prodl	equ	0xFF3
 10779                           intcon	equ	0xFF2
 10780                           indf0	equ	0xFEF
 10781                           postinc0	equ	0xFEE
 10782                           fsr0h	equ	0xFEA
 10783                           fsr0l	equ	0xFE9
 10784                           wreg	equ	0xFE8
 10785                           indf1	equ	0xFE7
 10786                           postdec1	equ	0xFE5
 10787                           fsr1h	equ	0xFE2
 10788                           fsr1l	equ	0xFE1
 10789                           indf2	equ	0xFDF
 10790                           postinc2	equ	0xFDE
 10791                           postdec2	equ	0xFDD
 10792                           fsr2h	equ	0xFDA
 10793                           fsr2l	equ	0xFD9
 10794                           status	equ	0xFD8
 10795                           
 10796 ;; *************** function _RtccReadDate *****************
 10797 ;; Defined at:
 10798 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  pDt             2    0[COMRAM] PTR struct .
 10801 ;;		 -> RtccDate(4), 
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;  rTD0            8   10[COMRAM] struct .
 10804 ;;  rTD1            8    2[COMRAM] struct .
 10805 ;; Return value:  Size  Location     Type
 10806 ;;		None               void
 10807 ;; Registers used:
 10808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10815 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;Total ram usage:       18 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_Read_RTC
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           	psect	text76
 10828  00F2E2                     __ptext76:
 10829                           	opt stack 0
 10830  00F2E2                     _RtccReadDate:
 10831                           	opt stack 29
 10832  00F2E2  0EFC               	movlw	252
 10833  00F2E4  010F               	movlb	15	; () banked
 10834  00F2E6  173F               	andwf	63,f,b	;volatile
 10835  00F2E8  0E03               	movlw	3
 10836  00F2EA  010F               	movlb	15	; () banked
 10837  00F2EC  133F               	iorwf	63,f,b	;volatile
 10838                           
 10839                           ; BSR set to: 15
 10840  00F2EE  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
 10841                           
 10842                           ; BSR set to: 15
 10843  00F2F2  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
 10844                           
 10845                           ; BSR set to: 15
 10846  00F2F6  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
 10847                           
 10848                           ; BSR set to: 15
 10849  00F2FA  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
 10850                           
 10851                           ; BSR set to: 15
 10852  00F2FE  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
 10853                           
 10854                           ; BSR set to: 15
 10855  00F302  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
 10856  00F306  0EFC               	movlw	252
 10857  00F308  010F               	movlb	15	; () banked
 10858  00F30A  173F               	andwf	63,f,b	;volatile
 10859  00F30C  0E03               	movlw	3
 10860  00F30E  010F               	movlb	15	; () banked
 10861  00F310  133F               	iorwf	63,f,b	;volatile
 10862                           
 10863                           ; BSR set to: 15
 10864  00F312  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
 10865                           
 10866                           ; BSR set to: 15
 10867  00F316  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
 10868                           
 10869                           ; BSR set to: 15
 10870  00F31A  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
 10871                           
 10872                           ; BSR set to: 15
 10873  00F31E  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
 10874                           
 10875                           ; BSR set to: 15
 10876  00F322  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
 10877                           
 10878                           ; BSR set to: 15
 10879  00F326  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
 10880  00F32A  5005               	movf	RtccReadDate@rTD1+2,w,c
 10881  00F32C  180D               	xorwf	RtccReadDate@rTD0+2,w,c
 10882  00F32E  A4D8               	btfss	status,2,c
 10883  00F330  D7D8               	goto	l3971
 10884                           
 10885                           ; BSR set to: 15
 10886                           
 10887                           ; BSR set to: 15
 10888  00F332  EE20 F001          	lfsr	2,1
 10889  00F336  5001               	movf	RtccReadDate@pDt,w,c
 10890  00F338  26D9               	addwf	fsr2l,f,c
 10891  00F33A  5002               	movf	RtccReadDate@pDt+1,w,c
 10892  00F33C  22DA               	addwfc	fsr2h,f,c
 10893  00F33E  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 10894  00F342  EE20 F002          	lfsr	2,2
 10895  00F346  5001               	movf	RtccReadDate@pDt,w,c
 10896  00F348  26D9               	addwf	fsr2l,f,c
 10897  00F34A  5002               	movf	RtccReadDate@pDt+1,w,c
 10898  00F34C  22DA               	addwfc	fsr2h,f,c
 10899  00F34E  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 10900                           
 10901                           ; BSR set to: 15
 10902  00F352  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
 10903  00F356  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 10904  00F35A  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 10905                           
 10906                           ; BSR set to: 15
 10907  00F35E  EE20 F003          	lfsr	2,3
 10908  00F362  5001               	movf	RtccReadDate@pDt,w,c
 10909  00F364  26D9               	addwf	fsr2l,f,c
 10910  00F366  5002               	movf	RtccReadDate@pDt+1,w,c
 10911  00F368  22DA               	addwfc	fsr2h,f,c
 10912  00F36A  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
 10913                           
 10914                           ; BSR set to: 15
 10915  00F36E  0012               	return		;funcret
 10916  00F370                     __end_of_RtccReadDate:
 10917                           	opt stack 0
 10918                           tblptru	equ	0xFF8
 10919                           tblptrh	equ	0xFF7
 10920                           tblptrl	equ	0xFF6
 10921                           tablat	equ	0xFF5
 10922                           prodh	equ	0xFF4
 10923                           prodl	equ	0xFF3
 10924                           intcon	equ	0xFF2
 10925                           indf0	equ	0xFEF
 10926                           postinc0	equ	0xFEE
 10927                           fsr0h	equ	0xFEA
 10928                           fsr0l	equ	0xFE9
 10929                           wreg	equ	0xFE8
 10930                           indf1	equ	0xFE7
 10931                           postdec1	equ	0xFE5
 10932                           fsr1h	equ	0xFE2
 10933                           fsr1l	equ	0xFE1
 10934                           indf2	equ	0xFDF
 10935                           postinc2	equ	0xFDE
 10936                           postdec2	equ	0xFDD
 10937                           fsr2h	equ	0xFDA
 10938                           fsr2l	equ	0xFD9
 10939                           status	equ	0xFD8
 10940                           tblptru	equ	0xFF8
 10941                           tblptrh	equ	0xFF7
 10942                           tblptrl	equ	0xFF6
 10943                           tablat	equ	0xFF5
 10944                           prodh	equ	0xFF4
 10945                           prodl	equ	0xFF3
 10946                           intcon	equ	0xFF2
 10947                           indf0	equ	0xFEF
 10948                           postinc0	equ	0xFEE
 10949                           fsr0h	equ	0xFEA
 10950                           fsr0l	equ	0xFE9
 10951                           wreg	equ	0xFE8
 10952                           indf1	equ	0xFE7
 10953                           postdec1	equ	0xFE5
 10954                           fsr1h	equ	0xFE2
 10955                           fsr1l	equ	0xFE1
 10956                           indf2	equ	0xFDF
 10957                           postinc2	equ	0xFDE
 10958                           postdec2	equ	0xFDD
 10959                           fsr2h	equ	0xFDA
 10960                           fsr2l	equ	0xFD9
 10961                           status	equ	0xFD8
 10962                           
 10963                           	psect	rparam
 10964  0000                     tblptru	equ	0xFF8
 10965                           tblptrh	equ	0xFF7
 10966                           tblptrl	equ	0xFF6
 10967                           tablat	equ	0xFF5
 10968                           prodh	equ	0xFF4
 10969                           prodl	equ	0xFF3
 10970                           intcon	equ	0xFF2
 10971                           indf0	equ	0xFEF
 10972                           postinc0	equ	0xFEE
 10973                           fsr0h	equ	0xFEA
 10974                           fsr0l	equ	0xFE9
 10975                           wreg	equ	0xFE8
 10976                           indf1	equ	0xFE7
 10977                           postdec1	equ	0xFE5
 10978                           fsr1h	equ	0xFE2
 10979                           fsr1l	equ	0xFE1
 10980                           indf2	equ	0xFDF
 10981                           postinc2	equ	0xFDE
 10982                           postdec2	equ	0xFDD
 10983                           fsr2h	equ	0xFDA
 10984                           fsr2l	equ	0xFD9
 10985                           status	equ	0xFD8


Data Sizes:
    Strings     284
    Constant    14
    Data        10
    BSS         105
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      95
    BANK0           160      0      74
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_48(CODE[5]), STR_46(CODE[1]), STR_16(CODE[1]), pin_input(BANK0[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_57(CODE[5]), STR_56(CODE[7]), STR_55(CODE[7]), STR_54(CODE[7]), 
		 -> STR_53(CODE[7]), STR_52(CODE[7]), STR_51(CODE[7]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_33(CODE[15]), STR_31(CODE[15]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_58(CODE[2]), STR_47(CODE[11]), STR_45(CODE[6]), STR_44(CODE[8]), 
		 -> STR_43(CODE[4]), STR_42(CODE[7]), STR_41(CODE[7]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[8]), STR_36(CODE[5]), 
		 -> STR_35(CODE[8]), STR_34(CODE[7]), STR_32(CODE[16]), STR_30(CODE[17]), 
		 -> buffer1(BANK0[20]), STR_27(CODE[5]), STR_26(CODE[6]), STR_25(CODE[6]), 
		 -> STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[8]), STR_21(CODE[7]), 
		 -> STR_20(CODE[4]), STR_19(CODE[6]), STR_18(CODE[8]), STR_17(CODE[16]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    lcd_write@string	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_47(CODE[11]), STR_45(CODE[6]), STR_44(CODE[8]), STR_43(CODE[4]), 
		 -> STR_42(CODE[7]), STR_41(CODE[7]), STR_40(CODE[5]), STR_39(CODE[5]), 
		 -> STR_38(CODE[5]), STR_37(CODE[8]), STR_36(CODE[5]), STR_35(CODE[8]), 
		 -> STR_34(CODE[7]), STR_32(CODE[16]), STR_30(CODE[17]), buffer1(BANK0[20]), 
		 -> STR_27(CODE[5]), STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[8]), STR_21(CODE[7]), STR_20(CODE[4]), 
		 -> STR_19(CODE[6]), STR_18(CODE[8]), STR_17(CODE[16]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _keyboard_control->_button_B
    _button_number->_sprintf
    _Write_RTC->_RtccWriteDate
    _cursor_displacement->_lcd_gotoxy
    _activity_menu->_lcd_write
    _button_B->_button_B_submenu_date_and_time_config
    _activity_submenu_siren_volume->_lcd_write
    _activity_submenu_siren_tone->_lcd_write
    _pin_reset->_strcpy
    _activity_submenu_pin_set->_lcd_write
    _activity_submenu_time_config->_sprintf
    _activity_submenu_date_config->_sprintf
    _activity_submenu_siren->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_date_and_time->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_menu_selector
    _button_A->_submenu_selector
    _submenu_selector_1->_lcd_write
    _submenu_selector_0->_lcd_write
    _menu_selector_3->_lcd_write
    _menu_selector_2->_lcd_write
    _menu_selector_1->_lcd_write
    _menu_selector_0->_lcd_write
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _home_volume_refresh->_sprintf
    _home_tone_refresh->_sprintf
    _home_state_refresh->_sprintf
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_triggered_alarm->_lcd_write
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  654109
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                _home_config_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4358
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                          _pin_reset
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  543420
                                             39 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0   11227
                _cursor_displacement
                           _date_set
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
                           _time_set
 ---------------------------------------------------------------------------------
 (3) _time_set                                             2     2      0    2277
                                             13 COMRAM     2     2      0
                          _Write_RTC
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _date_set                                             2     2      0    2277
                                             13 COMRAM     2     2      0
                          _Write_RTC
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (3) _cursor_displacement                                  1     1      0    1141
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   70517
                      _activity_home
                _pin_input_validator
                            _pin_set
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_set                                              0     0      0   14224
                      _activity_home
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  0     0      0   42656
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0   13637
           _activity_triggered_alarm
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0   29648
                      _activity_home
                       _activity_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   42437
                      _activity_menu
                       _activity_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   26426
                           _lcd_init
                          _lcd_write
                    _menu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0  283209
                                             37 COMRAM     2     2      0
                       _activity_pin
                      _button_B_menu
        _button_B_submenu_activation
_button_B_submenu_date_and_time_conf
        _button_B_submenu_pin_config
      _button_B_submenu_siren_config
        _button_B_submenu_siren_tone
      _button_B_submenu_siren_volume
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_volume                        2     2      0   13637
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_tone                          2     2      0   13637
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_config                        2     2      0   52852
                                             16 COMRAM     2     2      0
        _activity_submenu_siren_tone
      _activity_submenu_siren_volume
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_volume                        0     0      0   26426
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_tone                          0     0      0   26426
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_pin_config                          2     2      0   30235
                                             16 COMRAM     2     2      0
                      _activity_home
           _activity_submenu_pin_set
                          _pin_reset
 ---------------------------------------------------------------------------------
 (2) _pin_reset                                            0     0      0     587
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin_set                             0     0      0   16011
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_date_and_time_config                2     2      0   37496
                                             35 COMRAM     2     2      0
       _activity_submenu_date_config
       _activity_submenu_time_config
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_time_config                         0     0      0   18748
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_config                         0     0      0   18748
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_activation                          2     2      0   13637
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_menu                                        2     2      0  105704
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
     _activity_submenu_date_and_time
               _activity_submenu_pin
             _activity_submenu_siren
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren                               0     0      0   26426
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin                                 0     0      0   26426
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_and_time                       0     0      0   26426
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_activation                          0     0      0   26426
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   92745
                                             18 COMRAM     2     2      0
                       _activity_pin
                      _menu_selector
                _reset_home_callback
                   _submenu_selector
 ---------------------------------------------------------------------------------
 (3) _submenu_selector                                     2     2      0   25578
                                             16 COMRAM     2     2      0
                 _submenu_selector_0
                 _submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _submenu_selector_1                                   0     0      0   12789
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _submenu_selector_0                                   0     0      0   12789
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_selector                                        2     2      0   51156
                                             16 COMRAM     2     2      0
                    _menu_selector_0
                    _menu_selector_1
                    _menu_selector_2
                    _menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _menu_selector_3                                      0     0      0   12789
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_2                                      0     0      0   12789
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_1                                      0     0      0   12789
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _menu_selector_0                                      0     0      0   12789
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   16011
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _home_config_refresh                                  2     2      0   48339
                                             35 COMRAM     2     2      0
                 _home_state_refresh
                  _home_tone_refresh
                _home_volume_refresh
 ---------------------------------------------------------------------------------
 (2) _home_volume_refresh                                  0     0      0   16113
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_tone_refresh                                    0     0      0   16113
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_state_refresh                                   0     0      0   16113
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   16113
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    3324
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0   27274
                      _activity_home
           _activity_triggered_alarm
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _activity_triggered_alarm                             0     0      0   13637
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_home                                        0     0      0   13637
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6   12789
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1982
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1809
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    1141
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _activity_triggered_alarm
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _home_config_refresh
     _home_state_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_tone_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_volume_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _keyboard_control
     _button_A
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _menu_selector
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
       _submenu_selector
         _submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
     _button_B
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _button_B_menu
         _activity_submenu_activation
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_date_and_time
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_pin
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_activation
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_date_and_time_config
         _activity_submenu_date_config
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _activity_submenu_time_config
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _button_B_submenu_pin_config
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin_set
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _pin_reset
           _strcpy
       _button_B_submenu_siren_config
         _activity_submenu_siren_tone
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren_volume
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_siren_tone
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_siren_volume
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_C
       _activity_menu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_asterisk
       _activity_triggered_alarm
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_hash
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _pin_input_validator
         _activity_menu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _pin_set
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_number
       _cursor_displacement
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _date_set
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
       _time_set
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _pin_reset
       _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      4A       5       46.3%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     28      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       6        0.0%
DATA                 0      0      A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 27 19:30:42 2016

                    ??_activity_triggered_alarm 0011                                               _a 007C  
                                             _b 007E                                               _c 0080  
                                             _i 0039                                               _j 0082  
                                             _k 0084                                  ?_lcd_send_byte 0003  
                                  ___awdiv@sign 0006                             ___wmul@multiplicand 0003  
                          ?_home_volume_refresh 0001                                     lcd_comand@d 0005  
                                  __CFG_CP0$OFF 000000                                 lcd_write@column 000B  
                                           l502 FAD2                                             l255 EA56  
                                           l511 FAF2                                             l503 FACE  
                                           l506 FAE4                                             l450 F9D0  
                                           l522 E6A8                                             l507 FAE0  
                                           l451 F9CC                                             l470 FA32  
                                           l462 FA06                                             l454 F9E2  
                                           l623 FE3A                                             l471 FA2E  
                                           l463 FA02                                             l455 F9DE  
                                           l544 E34A                                             l545 E34C  
                                           l490 FA94                                             l482 FA70  
                                           l474 FA44                                             l466 FA20  
                                           l458 F9F4                                             l491 FA90  
                                           l483 FA6C                                             l475 FA40  
                                           l467 FA1C                                             l459 F9F0  
                                           l494 FAA6                                             l486 FA82  
                                           l478 FA56                                             l495 FAA2  
                                           l487 FA7E                                             l479 FA52  
                                           l498 FAC0                                             l499 FABC  
                         ??_check_home_callback 0011                                             _dia 0050  
                                           _key 0045                                             _mes 0056  
                                           _pin 009A                                 lcd_write@string 000F  
                                           wreg 000FE8                                 RtccReadDate@pDt 0001  
                                   lcd_gotoxy@x 0006                                     lcd_gotoxy@y 0005  
                             ??_button_asterisk 0011                                            l3103 E1F2  
                                          l3025 E13C                                            l3121 EBE0  
                                          l3051 E208                                            l3131 EC06  
                                          l3123 EBE8                                            l1267 EC12  
                                          l3211 F864                                            l3203 F84C  
                                          l3053 E20E                                            l3061 E86A  
                                          l3141 E8BE                                            l1277 E8E8  
                                          l3311 F0AE                                            l3303 F09A  
                                          l3063 E876                                            l3119 EBD6  
                                          l3143 E8C6                                            l4007 EA94  
                                          l4023 EAE6                                            l4015 EB38  
                                          l4031 E8FE                                            l4111 E4DC  
                                          l4103 E4B8                                            l3207 F858  
                                          l3065 E882                                            l3073 EB6E  
                                          l3401 FDEE                                            l4009 EAAA  
                                          l4025 EAFC                                            l4017 EB4E  
                                          l4033 E904                                            l3233 F90C  
                                          l4121 F010                                            l3059 E85E  
                                          l3147 E8DC                                            l3139 E8B4  
                                          l4203 F5D4                                            l4035 E90A  
                                          l4051 EF76                                            l4107 E4C8  
                                          l3243 F93C                                            l3227 F8D2  
                                          l4131 F046                                            l3069 E88E  
                                          l3077 EB98                                            l3421 FE94  
                                          l3341 FC72                                            l4221 F626  
                                          l3333 E746                                            l4029 E8F8  
                                          l4061 EF94                                            l4053 EF7C  
                                          l3237 F920                                            l3165 F7CC  
                                          l4125 F032                                            l4301 FAFA  
                                          l3079 E12A                                            l3415 FE40  
                                          l3407 FE10                                            l3423 FEA0  
                                          l4215 F606                                            l4207 F5E0  
                                          l3335 E750                                            l4039 E910  
                                          l4055 EF82                                            l4047 EF6A  
                                          l3175 F7FC                                            l3159 F7A2  
                                          l3409 FE18                                            l3425 FEBC  
                                          l3353 FCA4                                            l4209 F5E6  
                                          l4057 EF88                                            l4049 EF70  
                                          l4065 EF9A                                            l3169 F7E0  
                                          l3371 FD42                                            l3355 FCBA  
                                          l3347 FC8C                                            l4059 EF8E  
                                          l3283 F9AA                                            l3275 F992  
                                          l3451 F44A                                            l3443 F42A  
                                          l3293 F082                                            l3373 FD64  
                                          l3349 FC9A                                            l4229 F646  
                                          l4077 E286                                            l3461 F470  
                                          l3453 F452                                            l3437 F418  
                                          l4191 E38A                                            l3391 FDB4  
                                          l3383 FD8C                                            l3367 FD3C  
                                          l3359 FCD8                                            l4087 E1CE  
                                          l3279 F99E                                            l3297 F08A  
                                          l3721 E790                                            l3449 F440  
                                          l3465 F47C                                            l4353 E67A  
                                          l3395 FDD8                                            l3387 FDB0  
                                          l3379 FD80                                            l3723 E796  
                                          l3803 F57A                                            l4363 E698  
                                          l3397 FDE2                                            l3717 E784  
                                          l3741 E2AC                                            l3469 F48C  
                                          l3805 F5B2                                            l3719 E78A  
                                          l3727 E79C                                            l3735 E2A0  
                                          l3831 E7D8                                            l3823 E3BC  
                                          l3751 EA3C                                            l3737 E2A6  
                                          l3833 E7DE                                            l3913 E446  
                                          l3827 E7CC                                            l3851 E40C  
                                          l3923 E2D0                                            l3915 E466  
                                          l3907 E434                                            l3755 EA50  
                                          l3771 F4CA                                            l3763 F49A  
                                          l3829 E7D2                                            l3837 E7E4  
                                          l3853 E42C                                            l3845 E3FA  
                                          l3925 E2D6                                            l3861 E3C6  
                                          l3909 E43C                                            l3693 E9DC  
                                          l3773 F4D8                                            l3765 F4A8  
                                          l3941 E834                                            l3847 E402  
                                          l3863 E3CC                                            l3695 E9E6  
                                          l3767 F4B2                                            l3943 E83E  
                                          l3791 F540                                            l3945 EE80  
                                          l3929 E2DC                                            l3769 F4C0  
                                          l3777 F4E2                                            l3937 E81C  
                                          l3793 F54A                                            l3971 F2E2  
                                          l3883 E30C                                            l3891 E46E  
                                          l3699 EA1A                                            l3779 F51A  
                                          l3939 E822                                            l3795 F558  
                                          l3869 E3D6                                            l3877 E300  
                                          l3893 E476                                            l3797 F562  
                                          l3789 F532                                            l3879 E306  
                                          l3799 F570                                            l3897 E480  
                                          l3899 E4A0                 ??_activity_submenu_siren_volume 0011  
                                          STR_1 FFE5                                            STR_2 FEDB  
                                          STR_3 FEEC                                            STR_4 FFF5  
                                          STR_5 FEEA                                            STR_6 FFF5  
                                          STR_7 FEEA            __size_of_button_B_submenu_pin_config 0034  
                                          STR_8 FFF5                                            STR_9 FEEA  
                                          u1410 EEFA                                            u1430 EF12  
                                          u1510 EB8E                                            u1520 EBB8  
                                          u1450 EF2C                                            u1428 EEFC  
                                          u1517 EB84                                            u1470 EF48  
                                          u1527 EBAE                                            u1448 EF14  
                                          u1468 EF2E                                            u1900 E778  
                                          u1488 EF4A                                            u1907 E76E  
                                          u2817 FB00                                            u2827 F5BC  
                                          u2837 F524                                            u2847 EA6A  
                                          u2857 E13E                                            u2867 E12C  
           __end_of_activity_submenu_siren_tone EE1A                     _activity_submenu_siren_tone EDB4  
                              ?_lcd_send_nibble 0001                                            _anio 004E  
                                          _flag 02F8                                            _main E670  
                                          _hora 0054                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr0l 000FE9                                            fsr2h 000FDA  
                                          indf1 000FE7                                            fsr1l 000FE1  
                                          indf2 000FDF                                            fsr2l 000FD9  
                    __size_of_home_tone_refresh 0052                                   __CFG_T1DIG$ON 000000  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                   __CFG_IESO$OFF 000000  
                              RtccReadDate@rTD0 000B                                RtccReadDate@rTD1 0003  
                          __end_of_activity_pin E98C                   ??_activity_submenu_siren_tone 0011  
                                  ___param_bank 000010                                 RtccReadTime@pTm 0001  
                   __end_of_cursor_displacement EA76                 __size_of_activity_submenu_siren 0066  
          __end_of_activity_submenu_time_config F260           __size_of_activity_submenu_time_config 0082  
                  _activity_submenu_time_config F1DE                      _cursor_horizontal_position 0033  
                         ??_home_volume_refresh 0024                                     _Delay1KTCYx E128  
                                 __CFG_PLLDIV$1 000000                                           ?_main 0001  
                               __end_of___awdiv F498                                           STR_10 FFF5  
                                         STR_11 FEEA                                           STR_12 FFF5  
                                         STR_20 FFE9                                           STR_13 FEEA  
                                         STR_21 FFA7                                           STR_14 FFF5  
                                         STR_22 FF67                                           STR_30 FEFD  
                                         STR_15 FEEA                                           STR_31 FF2E  
                                         STR_23 FFED                                           STR_16 FEEB  
                                         STR_40 FFD6                                           STR_24 FFF0  
                                         STR_32 FF1E                                           STR_25 FFBB  
                                         STR_33 FF3D                                           STR_41 FF6F  
                                         STR_17 FF0E                                           STR_50 FF3D  
                                         STR_26 FFB5                                           STR_34 FFAE  
                                         STR_42 FF7D                                           STR_18 FF67  
                                         STR_43 FFE9                                           STR_27 FFCC  
                                         STR_19 FFBB                                           STR_51 FF92  
                                         STR_35 FF57                                           STR_36 FFD6  
                                         STR_52 FFA0                                           STR_44 FF5F  
                                         STR_28 FF2E                                           STR_37 FF57  
                                         STR_45 FFC1                                           STR_53 FF8B  
                                         STR_29 FF3D            __size_of_button_B_submenu_siren_tone 003A  
                                         STR_46 FEEB                                           STR_38 FFD1  
                                         STR_54 FF99                                           STR_39 FFDB  
                                         STR_55 FF76                                           STR_47 FF4C  
                                         STR_48 FFC7                                           STR_56 FF84  
                                         STR_49 FF2E                                           STR_57 FFE0  
                                         STR_58 FFF3                           __size_of_Delay100TCYx 0012  
                               ___awdiv@divisor 0003                                 __end_of___lwdiv EC1C  
                               __end_of___lwmod E8F2                                 ___awdiv@counter 0005  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                    ?_button_hash 0001  
                                __CFG_FCMEN$OFF 000000                                 __end_of_dpowers FED7  
                                         _mes_d 005B                                           _mes_u 00A8  
                               __end_of_isdigit E1FC                                           _setup F0DC  
                                         _state 0041                                 __end_of_pin_set E1BE  
         __end_of_button_B_submenu_siren_config E32E          __size_of_button_B_submenu_siren_config 0030  
                 _button_B_submenu_siren_config E2FE                                  __pbitbssCOMRAM 02F8  
                                         tablat 000FF5                     __size_of_home_state_refresh 0052  
                           _reset_home_callback E106                                    lcd_putrs@ptr 0009  
                                         status 000FD8                                 __end_of_sprintf FECC  
         __end_of_button_B_submenu_siren_volume E4A6          __size_of_button_B_submenu_siren_volume 003A  
                 _button_B_submenu_siren_volume E46C                __end_of_activity_submenu_pin_set E9DA  
                         __end_of_activity_home E272                           __end_of_activity_menu F2E2  
                                  lcd_write@row 000D                        __size_of_menu_selector_0 0042  
                      __size_of_menu_selector_1 0042                        __size_of_menu_selector_2 0042  
                      __size_of_menu_selector_3 0042                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization E6B2                                    _Delay100TCYx E13A  
                                  __end_of_main E6B2                     __size_of_submenu_selector_0 0042  
                   __size_of_submenu_selector_1 0042                                 ??_lcd_send_byte 0004  
                              RtccReadTime@rTD0 000B                                RtccReadTime@rTD1 0003  
                              __end_of_Read_RTC F764                   ?_activity_submenu_time_config 0001  
                          ?_reset_home_callback 0001                                          ??_main 0029  
                                 __activetblptr 000002                                __end_of_RtccWrOn E15E  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                        _activity_submenu_siren ED4E                                          _EECON2 000FA7  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                              ___awdiv@dividend 0001                                          ?_setup 0001  
                                __CFG_WDTEN$OFF 000000                    __size_of_pin_input_validator 0032  
                              RtccWriteDate@pDt 0001                                          _RTCCFG 000F3F  
                                __CFG_WPCFG$OFF 000000                                   _home_callback 0035  
         __end_of_activity_submenu_siren_volume EE80          __size_of_activity_submenu_siren_volume 0066  
                 _activity_submenu_siren_volume EE1A                                __end_of_date_set F530  
                                __CFG_WPDIS$OFF 000000                               ?_submenu_selector 0001  
                           _home_callback_delay 0037                                  __CFG_XINST$OFF 000000  
              __end_of_activity_triggered_alarm E73C                             _home_config_refresh F5C8  
                        __size_of_button_B_menu 0048                              ??_submenu_selector 0011  
                              __end_of_lcd_init F0DC                      __end_of_home_clock_refresh F402  
                              __end_of_lcd_putc E8A6                                          ___wmul E220  
                                     ??___awdiv 0005                                  __CFG_STVREN$ON 000000  
                                        _diasem 0052                                          _anio_d 0058  
                                        _anio_u 00A4                                       ??___lwdiv 0005  
                                     ??___lwmod 000C                           ??_reset_home_callback 0001  
                                        _hora_d 005A                                          _hora_u 00A7  
                              __end_of_button_A E93E                                __end_of_button_B EFE0  
                              __end_of_button_C E29E                                __end_of_button_D E1DA  
                                        clear_0 E6B8                                          clear_1 E6C6  
                              ___awdiv@quotient 0007                                          _minuto 003D  
           __end_of_button_B_submenu_activation E432                     _button_B_submenu_activation E3F8  
                         __end_of_RtccWriteDate F9B6                                          _strcat E812  
                                        _strcmp E9DA                           __end_of_RtccWriteTime F870  
                                        _strcpy E73C                                RtccWriteTime@pTm 0001  
                                  __pdataCOMRAM 004E                                       ??_isdigit 0001  
                        __size_of_button_number 007C                                __end_of_time_set F5C8  
                                  __mediumconst FECC                                       ??_pin_set 0011  
                          ?_home_config_refresh 0001                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                     ??_sprintf 0017                           __size_of_activity_pin 004E  
                                    __accesstop 0060                         __end_of__initialization E6EC  
                            __size_of_Write_RTC 015C                                   ___rparam_used 000001  
                     __size_of_keyboard_control 0156                                  __pcstackCOMRAM 0001  
                                 __end_of_setup F15C                               ??_menu_selector_0 0011  
                             ??_menu_selector_1 0011                               ??_menu_selector_2 0011  
                             ??_menu_selector_3 0011                                 __CFG_DSWDTPS$G2 000000  
                        __size_of_menu_selector 0048                                 _button_asterisk E18C  
             __size_of_activity_submenu_pin_set 004E                                 __CFG_OSC$INTOSC 000000  
                         ??_home_config_refresh 0024                       ?_activity_submenu_pin_set 0001  
                                 _button_B_menu E7CA                                    _activity_pin E93E  
                                  _alarm_volume 002D                               lcd_gotoxy@address 0007  
                          __size_of_button_hash 003E                              __size_of_lcd_putrs 0054  
                            __size_of_lcd_write 0018                                    sprintf@width 0021  
                                       ??_setup 000E                                      __pbssBANK0 0060  
                                     ?_Read_RTC 0001                                      _dia_semana 00A5  
                     RtccWriteTime@tempHourWDay 000A                                      __pnvCOMRAM 0058  
                                    _alarm_tone 002B                   __size_of_activity_submenu_pin 0066  
                                 _button_number EFE0                                       ?_RtccWrOn 0001  
                                lcd_send_byte@n 0003                  ?_activity_submenu_siren_volume 0001  
           __end_of_button_B_submenu_pin_config E3F8                     _button_B_submenu_pin_config E3C4  
                                       ?___wmul 0001                                   ?_RtccReadDate 0001  
                   __end_of_check_home_callback E392                                   ?_RtccReadTime 0001  
                            __size_of_pin_reset 0016                                    ?_Delay1KTCYx 0001  
              ??_activity_submenu_date_and_time 0011                 ?_activity_submenu_date_and_time 0001  
                                       ?_strcat 0001                                         ?_strcmp 0001  
                                       ?_strcpy 0001                               __end_of_Write_RTC FC68  
                                ?_button_B_menu 0001                                      _lcd_comand E11A  
                                     ?_date_set 0001               __size_of_activity_triggered_alarm 0046  
                                    _lcd_gotoxy E1FC                       ?_activity_triggered_alarm 0001  
                                       _RTCVALH 000F99                                         _RTCVALL 000F98  
                                     ?_lcd_init 0001                                       ?_lcd_putc 0001  
                                 _menu_selected 003B                                   _menu_selector E782  
           __end_of_button_B_submenu_siren_tone E46C                     _button_B_submenu_siren_tone E432  
                                    ??_Read_RTC 0013                                       ?_button_A 0001  
                                     ?_button_B 0001                                       ?_button_C 0001  
                                     ?_button_D 0001                                  ?_button_number 0001  
                                       __Hparam 0000                  ??_activity_submenu_date_config 0024  
                                       __Lparam 0000                     __end_of_home_volume_refresh EB6C  
                      __size_of_lcd_send_nibble 0076                         __end_of_button_asterisk E1A4  
                                    ??_RtccWrOn 0001                                       ?_time_set 0001  
                                ??_RtccReadDate 0003                                  ??_RtccReadTime 0003  
                                       ___awdiv F402                               __end_of_lcd_putrs EBC0  
                             __end_of_lcd_write E18C                                 __size_of___wmul 0028  
                                       ___lwdiv EBC0                                         ___lwmod E8A6  
                                   _RtccTimeVal 0078                                         __pcinit E6B2  
                                       _fecha_d 0059                                         _fecha_u 00A6  
                                       __ramtop 0F00                             _pin_input_validator E392  
                                       __ptext0 E670                                         __ptext1 F0DC  
                                       __ptext2 F9B6                                         __ptext3 EFE0  
                                       __ptext4 F530                                         __ptext5 E812  
                                       __ptext6 F498                                         __ptext7 FB0C  
                                       __ptext8 F402                                         __ptext9 F764  
                  ?_activity_submenu_activation 0001                                         _buffer1 0086  
                               __size_of_strcat 0048                                 __size_of_strcmp 004E  
                               __size_of_strcpy 0046                    __size_of_cursor_displacement 004E  
                                     _T1CONbits 000FCD                                         _dpowers FECD  
                                       _isdigit E1DA                         ?_activity_submenu_siren 0001  
                                    ??_date_set 000E                                         _pin_set E1A4  
                                       _segundo 003F                      __end_of_home_state_refresh EAC8  
                                       _sprintf FC68                                      ??_lcd_init 0005  
                                    ??_lcd_putc 0008                            end_of_initialization E6EC  
                                ?_menu_selector 0001                               __end_of_pin_reset E174  
                          ?_pin_input_validator 0001                            lcd_send_byte@address 0004  
                                    ??_button_A 0013                                   __Lmediumconst FECC  
                                    ??_button_B 0026                                      ??_button_C 0011  
                                    ??_button_D 0011                      __end_of_submenu_selector_0 E62E  
                    __end_of_submenu_selector_1 E670                                _keyboard_control F9B6  
                                    ??_time_set 000E                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc2 000FDE                           __end_of_lcd_send_byte E360  
                                       strcmp@r 0006                                       _PORTAbits 000F80  
                                     _PORTCbits 000F82                                 ??_button_B_menu 0011  
                __end_of_activity_submenu_siren EDB4                                __CFG_DSBOREN$OFF 000000  
                     __size_of_submenu_selector 0030                                     ?_lcd_comand 0001  
                            _home_clock_refresh F370                                __CFG_CPUDIV$OSC1 000000  
                                     _TRISBbits 000F93                          __size_of_activity_home 002A  
                        __size_of_activity_menu 0082                                     ?_lcd_gotoxy 0005  
                               _LCD_INIT_STRING FED7                             ?_home_clock_refresh 0001  
                         ??_pin_input_validator 0011                                 ??_button_number 0024  
                               _menu_selector_0 E4E4                                 _menu_selector_1 E526  
                               _menu_selector_2 E568                                 _menu_selector_3 E5AA  
                              __CFG_IOL1WAY$OFF 000000                       RtccWriteDate@tempDayMonth 000A  
                   __end_of_reset_home_callback E110                             __CFG_MSSP7B_EN$MSK7 000000  
                              ?_button_asterisk 0001                                Delay100TCYx@unit 0001  
                          ??_home_clock_refresh 0024                                  __end_of___wmul E248  
                                 __pidataCOMRAM E110                       RtccWriteDate@tempHourWDay 000C  
                             ??_lcd_send_nibble 0001                            __size_of_Delay1KTCYx 0012  
                              __CFG_DSWDTEN$OFF 000000                                  __end_of_strcat E85A  
                                __end_of_strcmp EA28                                  __end_of_strcpy E782  
                           start_initialization E6B2                                 ??_menu_selector 0011  
                          __end_of_RtccReadDate F370                            __end_of_RtccReadTime EEEE  
                          RtccWriteTime@wasAlrm 0006                    ?_activity_submenu_siren_tone 0001  
                          RtccWriteTime@wasWrEn 0007            __size_of_activity_submenu_activation 0066  
                        __size_of_RtccWriteDate 0146                                 RtccWriteDate@di 0003  
                        __size_of_RtccWriteTime 010C                               __size_of_Read_RTC 00F6  
                                 _activity_home E248                                   _activity_menu F260  
                           __size_of_lcd_comand 000E                             __size_of_lcd_gotoxy 0024  
                                      ??___wmul 0005                               __size_of_RtccWrOn 0012  
                               RtccWriteTime@di 0003                                __CFG_LPT1OSC$OFF 000000  
                   __end_of_home_config_refresh F66E                                        ??_strcat 0005  
                                      ??_strcmp 0005                                        ??_strcpy 0005  
                  __end_of_activity_submenu_pin ED4E                                     _ALRMCFGbits 000F91  
                       __end_of_LCD_INIT_STRING FEDB                                   ??_button_hash 0011  
                                   __pbssCOMRAM 0029                                       _Write_RTC FB0C  
                                  _isdigit$2298 0002                         __end_of_menu_selector_0 E526  
                       __end_of_menu_selector_1 E568                         __end_of_menu_selector_2 E5AA  
                       __end_of_menu_selector_3 E5EC                               __size_of_date_set 0098  
        __end_of_activity_submenu_date_and_time ECE8         __size_of_activity_submenu_date_and_time 0066  
                _activity_submenu_date_and_time EC82                                 Delay1KTCYx@unit 0001  
                             __size_of_lcd_init 0080                                     sprintf@flag 001D  
                             __size_of_lcd_putc 004C                                     sprintf@prec 0020  
                           _cursor_displacement EA28                                       __pnvBANK0 00A4  
                                ?_activity_home 0001                                  ?_activity_menu 0001  
                             __size_of_button_A 004C                               __size_of_button_B 007C  
                             __size_of_button_C 002C                               __size_of_button_D 001C  
                              ___lwdiv@dividend 0001                                   ?_Delay100TCYx 0001  
                ?_button_B_submenu_siren_config 0001                                   __pmediumconst FECC  
                                      ?___awdiv 0001                                        ?___lwdiv 0001  
                                      ?___lwmod 0008                               __size_of_time_set 0098  
                ?_button_B_submenu_siren_volume 0001                         RtccWriteTime@tempMinSec 0008  
                      _activity_submenu_pin_set E98C                                       _lcd_putrs EB6C  
                                     _lcd_write E174                                _submenu_selected 0043  
                              _submenu_selector E29E                            ?_cursor_displacement 0001  
                                 _RtccWriteDate F870                                   _RtccWriteTime F764  
                  __size_of_check_home_callback 0032                                        ?_isdigit 0001  
                          __CFG_RTCOSC$T1OSCREF 000000                                        ?_pin_set 0001  
                      __end_of_keyboard_control FB0C                                      ?_Write_RTC 0001  
                              ___lwdiv@quotient 0005                  ??_activity_submenu_time_config 0024  
                                      ?_sprintf 000D                                  __size_of_setup 0080  
                           __end_of_button_hash E4E4                                _RtccAlrmTimeDate 0060  
                                ___wmul@product 0005                                        _LATAbits 000F89  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                                     _pin_input 009F                                       _pin_reset E15E  
                                      _PIE3bits 000FA3                                       _segundo_d 005D  
                                ??_Delay100TCYx 0001                              _home_state_refresh EA76  
                                     _segundo_u 005E                                __CFG_WDTPS$32768 000000  
                            RtccWriteDate@wasOn 0005                             ?_home_state_refresh 0001  
                            _Rtcc_read_TimeDate 0070                    __size_of_home_volume_refresh 0052  
          __size_of_activity_submenu_siren_tone 0066                                  ?_RtccWriteDate 0001  
                         ??_cursor_displacement 0008                                      ?_lcd_putrs 0009  
                                    ?_lcd_write 000B                               ___wmul@multiplier 0001  
                                ?_RtccWriteTime 0001                              _submenu_selector_0 E5EC  
                            _submenu_selector_1 E62E                    ?_button_B_submenu_activation 0001  
                      _activity_triggered_alarm E6F6                                       lcd_init@i 0005  
                         __size_of_RtccReadDate 008E   __end_of_button_B_submenu_date_and_time_config E2FE  
__size_of_button_B_submenu_date_and_time_config 0030         ??_button_B_submenu_date_and_time_config 0024  
        ?_button_B_submenu_date_and_time_config 0001           _button_B_submenu_date_and_time_config E2CE  
                                  ??_lcd_comand 0005                                       lcd_putc@c 0008  
                         __size_of_RtccReadTime 006E            __end_of_activity_submenu_date_config F1DE  
         __size_of_activity_submenu_date_config 0082                    _activity_submenu_date_config F15C  
                                  ??_lcd_gotoxy 0006                             ?_submenu_selector_0 0001  
                           ?_submenu_selector_1 0001                                ?_menu_selector_0 0001  
                              ?_menu_selector_1 0001                                ?_menu_selector_2 0001  
                              ?_menu_selector_3 0001                                       copy_data0 E6E0  
                          ??_home_state_refresh 0024                                        _Read_RTC F66E  
                               ??_activity_home 0011                                 ??_activity_menu 0011  
                                    ?_pin_reset 0001                            _activity_submenu_pin ECE8  
                               _lcd_send_nibble EEEE                                        __Hrparam 0000  
                                      _RtccDate 0046                                        __Lrparam 0000  
                                      _RtccTime 004A                                        _RtccWrOn E14C  
                          ??_submenu_selector_0 0011                            ??_submenu_selector_1 0011  
                            __end_of_lcd_comand E128                              __end_of_lcd_gotoxy E220  
                                  _RtccReadDate F2E2                                __size_of___awdiv 0096  
                                  _RtccReadTime EE80                                __size_of___lwdiv 005C  
                              __size_of___lwmod 004C                                    _RtccTimeDate 0068  
                            _config_widget_time 0031                                      sprintf@val 001E  
                         __end_of_button_B_menu E812                   ??_button_B_submenu_activation 0011  
                                    strcat@from 0003                                     _button_hash E4A6  
                                 ?_activity_pin 0001                                        _activity 0029  
                                      _date_set F498                     __end_of_pin_input_validator E3C4  
                              __size_of_isdigit 0022                                 ___lwdiv@divisor 0003  
                                   ??_Write_RTC 000E                                __size_of_pin_set 001A  
                               ___lwdiv@counter 0007                                        __ptext10 F870  
                                      __ptext11 E14C                                        __ptext20 F260  
                                      __ptext12 EA28                                        __ptext21 EF64  
                                      __ptext13 E4A6                                        __ptext30 E2CE  
                                      __ptext22 E46C                                        __ptext14 E1A4  
                                      __ptext31 F1DE                                        __ptext23 E432  
                                      __ptext15 E392                                        __ptext40 E29E  
                                      __ptext32 F15C                                        __ptext24 E2FE  
                                      __ptext16 E9DA                                        __ptext41 E62E  
                                      __ptext33 E3F8                                        __ptext25 EE1A  
                                      __ptext17 E18C                                        __ptext50 E11A  
                                      __ptext42 E5EC                                        __ptext34 E7CA  
                                      __ptext26 EDB4                                        __ptext18 E1BE  
                                      __ptext51 F5C8                                        __ptext43 E782  
                                      __ptext35 ED4E                                        __ptext27 E3C4  
                                      __ptext19 E272                                        __ptext60 EBC0  
                                      __ptext52 EB1A                                        __ptext44 E5AA  
                                      __ptext36 ECE8                                        __ptext28 E15E  
                                      __ptext61 E360                                        __ptext53 EAC8  
                                      __ptext45 E568                                        __ptext37 EC82  
                                      __ptext29 E98C                                        __ptext70 E32E  
                                      __ptext62 E106                                        __ptext54 EA76  
                                      __ptext46 E526                                        __ptext38 EC1C  
                                      __ptext71 EEEE                                        __ptext63 E6F6  
                                      __ptext55 F370                                        __ptext47 E4E4  
                                      __ptext39 E8F2                                        __ptext72 E13A  
                                      __ptext64 E248                                        __ptext56 FC68  
                                      __ptext48 E93E                                        __ptext73 E128  
                                      __ptext65 E174                                        __ptext57 E1DA  
                                      __ptext49 E73C                                        __ptext74 F66E  
                                      __ptext66 EB6C                                        __ptext58 E220  
                                      __ptext75 EE80                                        __ptext67 E85A  
                                      __ptext59 E8A6                                        __ptext76 F2E2  
                                      __ptext68 E1FC                                        __ptext69 F05C  
                 ?_activity_submenu_date_config 0001                                        _lcd_init F05C  
                                      _lcd_putc E85A                                __size_of_sprintf 0264  
                                    strcpy@from 0003                          __size_of_lcd_send_byte 0032  
                                      _button_A E8F2                                        _button_B EF64  
                                      _button_C E272                                        _button_D E1BE  
                                 __size_of_main 0042                           __end_of_button_number F05C  
                         ?_activity_submenu_pin 0001                                        _minuto_d 005C  
                                      _minuto_u 00A9                               _home_tone_refresh EAC8  
                                      _time_set F530                              ?_home_tone_refresh 0001  
                  ?_button_B_submenu_pin_config 0001                                   ??_Delay1KTCYx 0001  
                               ??_RtccWriteDate 0004                     __size_of_home_clock_refresh 0092  
                               ??_RtccWriteTime 0004             __end_of_activity_submenu_activation EC82  
                   _activity_submenu_activation EC1C                    __size_of_reset_home_callback 000A  
                                   ??_lcd_putrs 000B                                     ??_lcd_write 0011  
                           ??_home_tone_refresh 0024                        __size_of_button_asterisk 0018  
                                ??_activity_pin 0011                                     _OSCTUNEbits 000F9B  
                                    _INTCONbits 000FF2                              RtccWriteTime@wasOn 0005  
                          __end_of_Delay100TCYx E14C                   ??_activity_submenu_activation 0011  
                                      isdigit@c 0003                           __end_of_menu_selector E7CA  
                                     sprintf@ap 001B                         __end_of_lcd_send_nibble EF64  
                                     sprintf@sp 000D                                ___lwmod@dividend 0008  
                  ?_button_B_submenu_siren_tone 0001                       __end_of_home_tone_refresh EB1A  
          __size_of_button_B_submenu_activation 003A                        __end_of_submenu_selector E2CE  
                                   ??_pin_reset 0007                             _check_home_callback E360  
                    ??_activity_submenu_pin_set 0011                                      _OSCCONbits 000FD3  
                                 _config_widget 002F                           RtccWriteDate@tempYear 0007  
                      ??_activity_submenu_siren 0011                                   _lcd_send_byte E32E  
                 ??_button_B_submenu_pin_config 0011                                      _RTCCFGbits 000F3F  
                                      sprintf@c 0023                                        sprintf@f 000F  
                                      strcat@cp 0005                                        strcat@to 0001  
                          ?_check_home_callback 0001                                        strcmp@s1 0001  
                                      strcmp@s2 0003                                 ___lwmod@divisor 000A  
                                      strcpy@cp 0005                                        strcpy@to 0001  
                           __end_of_Delay1KTCYx E13A                                 ___lwmod@counter 000C  
               ??_button_B_submenu_siren_config 0011                    __size_of_home_config_refresh 00A6  
                          RtccWriteDate@wasAlrm 0006                            RtccWriteDate@wasWrEn 0009  
                             ?_keyboard_control 0001                 ??_button_B_submenu_siren_volume 0011  
                            ??_keyboard_control 0028                             _home_volume_refresh EB1A  
                        ??_activity_submenu_pin 0011                   ??_button_B_submenu_siren_tone 0011  
                         lcd_send_nibble@nibble 0002  
