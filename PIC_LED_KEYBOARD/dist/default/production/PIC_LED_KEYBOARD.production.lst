

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Sep 18 00:11:38 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    92  0000                     
    93                           	psect	idataCOMRAM
    94  00E294                     __pidataCOMRAM:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _anio
    98  00E294  0010               	dw	16
    99                           
   100                           ;initializer for _dia
   101  00E296  0006               	dw	6
   102                           
   103                           ;initializer for _diasem
   104  00E298  0002               	dw	2
   105                           
   106                           ;initializer for _hora
   107  00E29A  0012               	dw	18
   108                           
   109                           ;initializer for _mes
   110  00E29C  0009               	dw	9
   111                           
   112                           	psect	mediumconst
   113  00FEEC                     __pmediumconst:
   114                           	opt stack 0
   115  00FEEC  00                 	db	0
   116  00FEED                     _dpowers:
   117                           	opt stack 0
   118  00FEED  0001               	dw	1
   119  00FEEF  000A               	dw	10
   120  00FEF1  0064               	dw	100
   121  00FEF3  03E8               	dw	1000
   122  00FEF5  2710               	dw	10000
   123  00FEF7                     __end_of_dpowers:
   124                           	opt stack 0
   125  00FEF7                     _LCD_INIT_STRING:
   126                           	opt stack 0
   127  00FEF7  28                 	db	40
   128  00FEF8  0C                 	db	12
   129  00FEF9  01                 	db	1
   130  00FEFA  06                 	db	6
   131  00FEFB                     __end_of_LCD_INIT_STRING:
   132                           	opt stack 0
   133  00FEFB                     STR_28:
   134                           
   135                           ; BSR set to: 15
   136  00FEFB  49                 	db	73	;'I'
   137  00FEFC  6E                 	db	110	;'n'
   138  00FEFD  67                 	db	103	;'g'
   139  00FEFE  72                 	db	114	;'r'
   140  00FEFF  65                 	db	101	;'e'
   141  00FF00  73                 	db	115	;'s'
   142  00FF01  65                 	db	101	;'e'
   143  00FF02  20                 	db	32
   144  00FF03  6C                 	db	108	;'l'
   145  00FF04  61                 	db	97	;'a'
   146  00FF05  20                 	db	32
   147  00FF06  66                 	db	102	;'f'
   148  00FF07  65                 	db	101	;'e'
   149  00FF08  63                 	db	99	;'c'
   150  00FF09  68                 	db	104	;'h'
   151  00FF0A  61                 	db	97	;'a'
   152  00FF0B  00                 	db	0
   153  00FF0C                     STR_15:
   154                           
   155                           ; BSR set to: 15
   156  00FF0C  49                 	db	73	;'I'
   157  00FF0D  6E                 	db	110	;'n'
   158  00FF0E  67                 	db	103	;'g'
   159  00FF0F  72                 	db	114	;'r'
   160  00FF10  65                 	db	101	;'e'
   161  00FF11  73                 	db	115	;'s'
   162  00FF12  65                 	db	101	;'e'
   163  00FF13  20                 	db	32
   164  00FF14  73                 	db	115	;'s'
   165  00FF15  75                 	db	117	;'u'
   166  00FF16  20                 	db	32
   167  00FF17  50                 	db	80	;'P'
   168  00FF18  49                 	db	73	;'I'
   169  00FF19  4E                 	db	78	;'N'
   170  00FF1A  3A                 	db	58	;':'
   171  00FF1B  00                 	db	0
   172  00FF1C                     STR_30:
   173                           
   174                           ; BSR set to: 15
   175  00FF1C  49                 	db	73	;'I'
   176  00FF1D  6E                 	db	110	;'n'
   177  00FF1E  67                 	db	103	;'g'
   178  00FF1F  72                 	db	114	;'r'
   179  00FF20  65                 	db	101	;'e'
   180  00FF21  73                 	db	115	;'s'
   181  00FF22  65                 	db	101	;'e'
   182  00FF23  20                 	db	32
   183  00FF24  6C                 	db	108	;'l'
   184  00FF25  61                 	db	97	;'a'
   185  00FF26  20                 	db	32
   186  00FF27  68                 	db	104	;'h'
   187  00FF28  6F                 	db	111	;'o'
   188  00FF29  72                 	db	114	;'r'
   189  00FF2A  61                 	db	97	;'a'
   190  00FF2B  00                 	db	0
   191  00FF2C                     STR_26:
   192                           
   193                           ; BSR set to: 15
   194  00FF2C  25                 	db	37
   195  00FF2D  30                 	db	48	;'0'
   196  00FF2E  32                 	db	50	;'2'
   197  00FF2F  75                 	db	117	;'u'
   198  00FF30  2F                 	db	47
   199  00FF31  25                 	db	37
   200  00FF32  30                 	db	48	;'0'
   201  00FF33  32                 	db	50	;'2'
   202  00FF34  75                 	db	117	;'u'
   203  00FF35  2F                 	db	47
   204  00FF36  25                 	db	37
   205  00FF37  30                 	db	48	;'0'
   206  00FF38  32                 	db	50	;'2'
   207  00FF39  75                 	db	117	;'u'
   208  00FF3A  00                 	db	0
   209  00FF3B                     STR_27:
   210                           
   211                           ; BSR set to: 15
   212  00FF3B  25                 	db	37
   213  00FF3C  30                 	db	48	;'0'
   214  00FF3D  32                 	db	50	;'2'
   215  00FF3E  75                 	db	117	;'u'
   216  00FF3F  3A                 	db	58	;':'
   217  00FF40  25                 	db	37
   218  00FF41  30                 	db	48	;'0'
   219  00FF42  32                 	db	50	;'2'
   220  00FF43  75                 	db	117	;'u'
   221  00FF44  3A                 	db	58	;':'
   222  00FF45  25                 	db	37
   223  00FF46  30                 	db	48	;'0'
   224  00FF47  32                 	db	50	;'2'
   225  00FF48  75                 	db	117	;'u'
   226  00FF49  00                 	db	0
   227  00FF4A                     STR_46:
   228                           
   229                           ; BSR set to: 15
   230  00FF4A  4E                 	db	78	;'N'
   231  00FF4B  75                 	db	117	;'u'
   232  00FF4C  65                 	db	101	;'e'
   233  00FF4D  76                 	db	118	;'v'
   234  00FF4E  6F                 	db	111	;'o'
   235  00FF4F  20                 	db	32
   236  00FF50  50                 	db	80	;'P'
   237  00FF51  49                 	db	73	;'I'
   238  00FF52  4E                 	db	78	;'N'
   239  00FF53  3A                 	db	58	;':'
   240  00FF54  00                 	db	0
   241  00FF55                     STR_34:
   242                           
   243                           ; BSR set to: 15
   244  00FF55  56                 	db	86	;'V'
   245  00FF56  6F                 	db	111	;'o'
   246  00FF57  6C                 	db	108	;'l'
   247  00FF58  75                 	db	117	;'u'
   248  00FF59  6D                 	db	109	;'m'
   249  00FF5A  65                 	db	101	;'e'
   250  00FF5B  6E                 	db	110	;'n'
   251  00FF5C  00                 	db	0
   252  00FF5D                     STR_43:
   253                           
   254                           ; BSR set to: 15
   255  00FF5D  43                 	db	67	;'C'
   256  00FF5E  61                 	db	97	;'a'
   257  00FF5F  6D                 	db	109	;'m'
   258  00FF60  62                 	db	98	;'b'
   259  00FF61  69                 	db	105	;'i'
   260  00FF62  61                 	db	97	;'a'
   261  00FF63  72                 	db	114	;'r'
   262  00FF64  00                 	db	0
   263  00FF65                     STR_16:
   264                           
   265                           ; BSR set to: 15
   266  00FF65  41                 	db	65	;'A'
   267  00FF66  63                 	db	99	;'c'
   268  00FF67  74                 	db	116	;'t'
   269  00FF68  69                 	db	105	;'i'
   270  00FF69  76                 	db	118	;'v'
   271  00FF6A  61                 	db	97	;'a'
   272  00FF6B  72                 	db	114	;'r'
   273  00FF6C  00                 	db	0
   274  00FF6D                     STR_40:
   275                           
   276                           ; BSR set to: 15
   277  00FF6D  42                 	db	66	;'B'
   278  00FF6E  65                 	db	101	;'e'
   279  00FF6F  65                 	db	101	;'e'
   280  00FF70  70                 	db	112	;'p'
   281  00FF71  20                 	db	32
   282  00FF72  31                 	db	49	;'1'
   283  00FF73  00                 	db	0
   284  00FF74                     STR_54:
   285                           
   286                           ; BSR set to: 15
   287  00FF74  54                 	db	84	;'T'
   288  00FF75  4F                 	db	79	;'O'
   289  00FF76  4E                 	db	78	;'N'
   290  00FF77  4F                 	db	79	;'O'
   291  00FF78  3A                 	db	58	;':'
   292  00FF79  31                 	db	49	;'1'
   293  00FF7A  00                 	db	0
   294  00FF7B                     STR_41:
   295                           
   296                           ; BSR set to: 15
   297  00FF7B  42                 	db	66	;'B'
   298  00FF7C  65                 	db	101	;'e'
   299  00FF7D  65                 	db	101	;'e'
   300  00FF7E  70                 	db	112	;'p'
   301  00FF7F  20                 	db	32
   302  00FF80  32                 	db	50	;'2'
   303  00FF81  00                 	db	0
   304  00FF82                     STR_55:
   305                           
   306                           ; BSR set to: 15
   307  00FF82  54                 	db	84	;'T'
   308  00FF83  4F                 	db	79	;'O'
   309  00FF84  4E                 	db	78	;'N'
   310  00FF85  4F                 	db	79	;'O'
   311  00FF86  3A                 	db	58	;':'
   312  00FF87  32                 	db	50	;'2'
   313  00FF88  00                 	db	0
   314  00FF89                     STR_52:
   315                           
   316                           ; BSR set to: 15
   317  00FF89  56                 	db	86	;'V'
   318  00FF8A  4F                 	db	79	;'O'
   319  00FF8B  4C                 	db	76	;'L'
   320  00FF8C  3A                 	db	58	;':'
   321  00FF8D  42                 	db	66	;'B'
   322  00FF8E  41                 	db	65	;'A'
   323  00FF8F  00                 	db	0
   324  00FF90                     STR_50:
   325                           
   326                           ; BSR set to: 15
   327  00FF90  41                 	db	65	;'A'
   328  00FF91  43                 	db	67	;'C'
   329  00FF92  54                 	db	84	;'T'
   330  00FF93  3A                 	db	58	;':'
   331  00FF94  53                 	db	83	;'S'
   332  00FF95  49                 	db	73	;'I'
   333  00FF96  00                 	db	0
   334  00FF97                     STR_53:
   335                           
   336                           ; BSR set to: 15
   337  00FF97  56                 	db	86	;'V'
   338  00FF98  4F                 	db	79	;'O'
   339  00FF99  4C                 	db	76	;'L'
   340  00FF9A  3A                 	db	58	;':'
   341  00FF9B  41                 	db	65	;'A'
   342  00FF9C  4C                 	db	76	;'L'
   343  00FF9D  00                 	db	0
   344  00FF9E                     STR_51:
   345                           
   346                           ; BSR set to: 15
   347  00FF9E  41                 	db	65	;'A'
   348  00FF9F  43                 	db	67	;'C'
   349  00FFA0  54                 	db	84	;'T'
   350  00FFA1  3A                 	db	58	;':'
   351  00FFA2  4E                 	db	78	;'N'
   352  00FFA3  4F                 	db	79	;'O'
   353  00FFA4  00                 	db	0
   354  00FFA5                     STR_19:
   355                           
   356                           ; BSR set to: 15
   357  00FFA5  41                 	db	65	;'A'
   358  00FFA6  6C                 	db	108	;'l'
   359  00FFA7  61                 	db	97	;'a'
   360  00FFA8  72                 	db	114	;'r'
   361  00FFA9  6D                 	db	109	;'m'
   362  00FFAA  61                 	db	97	;'a'
   363  00FFAB  00                 	db	0
   364  00FFAC                     STR_33:
   365                           
   366                           ; BSR set to: 15
   367  00FFAC  53                 	db	83	;'S'
   368  00FFAD  69                 	db	105	;'i'
   369  00FFAE  72                 	db	114	;'r'
   370  00FFAF  65                 	db	101	;'e'
   371  00FFB0  6E                 	db	110	;'n'
   372  00FFB1  61                 	db	97	;'a'
   373  00FFB2  00                 	db	0
   374  00FFB3                     STR_24:
   375                           
   376                           ; BSR set to: 15
   377  00FFB3  46                 	db	70	;'F'
   378  00FFB4  65                 	db	101	;'e'
   379  00FFB5  63                 	db	99	;'c'
   380  00FFB6  68                 	db	104	;'h'
   381  00FFB7  61                 	db	97	;'a'
   382  00FFB8  00                 	db	0
   383  00FFB9                     STR_17:
   384                           
   385                           ; BSR set to: 15
   386  00FFB9  52                 	db	82	;'R'
   387  00FFBA  65                 	db	101	;'e'
   388  00FFBB  6C                 	db	108	;'l'
   389  00FFBC  6F                 	db	111	;'o'
   390  00FFBD  6A                 	db	106	;'j'
   391  00FFBE  00                 	db	0
   392  00FFBF                     STR_44:
   393                           
   394                           ; BSR set to: 15
   395  00FFBF  52                 	db	82	;'R'
   396  00FFC0  65                 	db	101	;'e'
   397  00FFC1  73                 	db	115	;'s'
   398  00FFC2  65                 	db	101	;'e'
   399  00FFC3  74                 	db	116	;'t'
   400  00FFC4  00                 	db	0
   401  00FFC5                     STR_47:
   402                           
   403                           ; BSR set to: 15
   404  00FFC5  31                 	db	49	;'1'
   405  00FFC6  32                 	db	50	;'2'
   406  00FFC7  33                 	db	51	;'3'
   407  00FFC8  34                 	db	52	;'4'
   408  00FFC9  00                 	db	0
   409  00FFCA                     STR_25:
   410                           
   411                           ; BSR set to: 15
   412  00FFCA  48                 	db	72	;'H'
   413  00FFCB  6F                 	db	111	;'o'
   414  00FFCC  72                 	db	114	;'r'
   415  00FFCD  61                 	db	97	;'a'
   416  00FFCE  00                 	db	0
   417  00FFCF                     STR_37:
   418                           
   419                           ; BSR set to: 15
   420  00FFCF  42                 	db	66	;'B'
   421  00FFD0  61                 	db	97	;'a'
   422  00FFD1  6A                 	db	106	;'j'
   423  00FFD2  6F                 	db	111	;'o'
   424  00FFD3  00                 	db	0
   425  00FFD4                     STR_35:
   426                           
   427                           ; BSR set to: 15
   428  00FFD4  54                 	db	84	;'T'
   429  00FFD5  6F                 	db	111	;'o'
   430  00FFD6  6E                 	db	110	;'n'
   431  00FFD7  6F                 	db	111	;'o'
   432  00FFD8  00                 	db	0
   433  00FFD9                     STR_38:
   434                           
   435                           ; BSR set to: 15
   436  00FFD9  41                 	db	65	;'A'
   437  00FFDA  6C                 	db	108	;'l'
   438  00FFDB  74                 	db	116	;'t'
   439  00FFDC  6F                 	db	111	;'o'
   440  00FFDD  00                 	db	0
   441  00FFDE                     STR_57:
   442                           
   443                           ; BSR set to: 15
   444  00FFDE  25                 	db	37
   445  00FFDF  30                 	db	48	;'0'
   446  00FFE0  31                 	db	49	;'1'
   447  00FFE1  75                 	db	117	;'u'
   448  00FFE2  00                 	db	0
   449  00FFE3                     STR_1:
   450                           
   451                           ; BSR set to: 15
   452  00FFE3  58                 	db	88	;'X'
   453  00FFE4  32                 	db	50	;'2'
   454  00FFE5  38                 	db	56	;'8'
   455  00FFE6  00                 	db	0
   456  00FFE7                     STR_18:
   457                           
   458                           ; BSR set to: 15
   459  00FFE7  50                 	db	80	;'P'
   460  00FFE8  69                 	db	105	;'i'
   461  00FFE9  6E                 	db	110	;'n'
   462  00FFEA  00                 	db	0
   463  00FFEB                     STR_21:
   464                           
   465                           ; BSR set to: 15
   466  00FFEB  53                 	db	83	;'S'
   467  00FFEC  69                 	db	105	;'i'
   468  00FFED  00                 	db	0
   469  00FFEE                     STR_22:
   470                           
   471                           ; BSR set to: 15
   472  00FFEE  4E                 	db	78	;'N'
   473  00FFEF  6F                 	db	111	;'o'
   474  00FFF0  00                 	db	0
   475  00FFF1                     STR_3:
   476                           
   477                           ; BSR set to: 15
   478  00FFF1  20                 	db	32
   479  00FFF2  00                 	db	0
   480  00FFF3                     STR_56:
   481                           
   482                           ; BSR set to: 15
   483  00FFF3  2A                 	db	42
   484  00FFF4  00                 	db	0
   485  00FFF5                     STR_2:
   486                           
   487                           ; BSR set to: 15
   488  00FFF5  3E                 	db	62	;'>'
   489  00FFF6  00                 	db	0
   490  0000                     
   491                           ; #config settings
   492  00FFF7  00                 	db	0	; dummy byte at the end
   493  0000                     
   494                           	psect	nvCOMRAM
   495  000058                     __pnvCOMRAM:
   496                           	opt stack 0
   497  000058                     _anio_d:
   498                           	opt stack 0
   499  000058                     	ds	1
   500  000059                     _fecha_d:
   501                           	opt stack 0
   502  000059                     	ds	1
   503  00005A                     _hora_d:
   504                           	opt stack 0
   505  00005A                     	ds	1
   506  00005B                     _mes_d:
   507                           	opt stack 0
   508  00005B                     	ds	1
   509  00005C                     _minuto_d:
   510                           	opt stack 0
   511  00005C                     	ds	1
   512  00005D                     _segundo_d:
   513                           	opt stack 0
   514  00005D                     	ds	1
   515  00005E                     _segundo_u:
   516                           	opt stack 0
   517  00005E                     	ds	1
   518                           
   519                           	psect	nvBANK0
   520  0000A4                     __pnvBANK0:
   521                           	opt stack 0
   522  0000A4                     _anio_u:
   523                           	opt stack 0
   524  0000A4                     	ds	1
   525  0000A5                     _dia_semana:
   526                           	opt stack 0
   527  0000A5                     	ds	1
   528  0000A6                     _fecha_u:
   529                           	opt stack 0
   530  0000A6                     	ds	1
   531  0000A7                     _hora_u:
   532                           	opt stack 0
   533  0000A7                     	ds	1
   534  0000A8                     _mes_u:
   535                           	opt stack 0
   536  0000A8                     	ds	1
   537  0000A9                     _minuto_u:
   538                           	opt stack 0
   539  0000A9                     	ds	1
   540  0000                     _ANCON0	set	3912
   541  0000                     _ANCON1	set	3913
   542  0000                     _RTCCFG	set	3903
   543  0000                     _RTCCFGbits	set	3903
   544  0000                     _ADCON0	set	4034
   545  0000                     _ADCON1	set	4033
   546  0000                     _ALRMCFGbits	set	3985
   547  0000                     _EECON2	set	4007
   548  0000                     _INTCONbits	set	4082
   549  0000                     _LATAbits	set	3977
   550  0000                     _LATBbits	set	3978
   551  0000                     _OSCCONbits	set	4051
   552  0000                     _OSCTUNEbits	set	3995
   553  0000                     _PIE3bits	set	4003
   554  0000                     _PORTAbits	set	3968
   555  0000                     _PORTCbits	set	3970
   556  0000                     _RTCVALH	set	3993
   557  0000                     _RTCVALL	set	3992
   558  0000                     _T1CONbits	set	4045
   559  0000                     _TRISA	set	3986
   560  0000                     _TRISB	set	3987
   561  0000                     _TRISBbits	set	3987
   562  0000                     _TRISC	set	3988
   563                           
   564                           	psect	cinit
   565  00E7F8                     __pcinit:
   566                           	opt stack 0
   567  00E7F8                     start_initialization:
   568                           	opt stack 0
   569  00E7F8                     __initialization:
   570                           	opt stack 0
   571                           
   572                           ; Clear objects allocated to BANK0 (68 bytes)
   573  00E7F8  EE00  F060         	lfsr	0,__pbssBANK0
   574  00E7FC  0E44               	movlw	68
   575  00E7FE                     clear_0:
   576  00E7FE  6AEE               	clrf	postinc0,c
   577  00E800  06E8               	decf	wreg,f,c
   578  00E802  E1FD               	bnz	clear_0
   579                           
   580                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   581  00E804  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   582                           
   583                           ; Clear objects allocated to COMRAM (37 bytes)
   584  00E806  EE00  F029         	lfsr	0,__pbssCOMRAM
   585  00E80A  0E25               	movlw	37
   586  00E80C                     clear_1:
   587  00E80C  6AEE               	clrf	postinc0,c
   588  00E80E  06E8               	decf	wreg,f,c
   589  00E810  E1FD               	bnz	clear_1
   590                           
   591                           ; Initialize objects allocated to COMRAM (10 bytes)
   592                           ; load TBLPTR registers with __pidataCOMRAM
   593  00E812  0E94               	movlw	low __pidataCOMRAM
   594  00E814  6EF6               	movwf	tblptrl,c
   595  00E816  0EE2               	movlw	high __pidataCOMRAM
   596  00E818  6EF7               	movwf	tblptrh,c
   597  00E81A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   598  00E81C  6EF8               	movwf	tblptru,c
   599  00E81E  EE00  F04E         	lfsr	0,__pdataCOMRAM
   600  00E822  EE10 F00A          	lfsr	1,10
   601  00E826                     copy_data0:
   602  00E826  0009               	tblrd		*+
   603  00E828  CFF5 FFEE          	movff	tablat,postinc0
   604  00E82C  50E5               	movf	postdec1,w,c
   605  00E82E  50E1               	movf	fsr1l,w,c
   606  00E830  E1FA               	bnz	copy_data0
   607  00E832                     end_of_initialization:
   608                           	opt stack 0
   609  00E832                     __end_of__initialization:
   610                           	opt stack 0
   611  00E832  0E00               	movlw	low (__Lmediumconst shr (0+16))
   612  00E834  6EF8               	movwf	tblptru,c
   613  00E836  0100               	movlb	0
   614  00E838  EF15  F072         	goto	_main	;jump to C main() function
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           
   624                           	psect	bitbssCOMRAM
   625  0002F8                     __pbitbssCOMRAM:
   626                           	opt stack 0
   627  0002F8                     _flag:
   628                           	opt stack 0
   629  0002F8                     	ds	1
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	bssCOMRAM
   640  000029                     __pbssCOMRAM:
   641                           	opt stack 0
   642  000029                     _activity:
   643                           	opt stack 0
   644  000029                     	ds	2
   645  00002B                     _alarm_tone:
   646                           	opt stack 0
   647  00002B                     	ds	2
   648  00002D                     _alarm_volume:
   649                           	opt stack 0
   650  00002D                     	ds	2
   651  00002F                     _config_widget:
   652                           	opt stack 0
   653  00002F                     	ds	2
   654  000031                     _config_widget_time:
   655                           	opt stack 0
   656  000031                     	ds	2
   657  000033                     _cursor_horizontal_position:
   658                           	opt stack 0
   659  000033                     	ds	2
   660  000035                     _home_callback:
   661                           	opt stack 0
   662  000035                     	ds	2
   663  000037                     _home_callback_delay:
   664                           	opt stack 0
   665  000037                     	ds	2
   666  000039                     _i:
   667                           	opt stack 0
   668  000039                     	ds	2
   669  00003B                     _menu_selected:
   670                           	opt stack 0
   671  00003B                     	ds	2
   672  00003D                     _minuto:
   673                           	opt stack 0
   674  00003D                     	ds	2
   675  00003F                     _segundo:
   676                           	opt stack 0
   677  00003F                     	ds	2
   678  000041                     _state:
   679                           	opt stack 0
   680  000041                     	ds	2
   681  000043                     _submenu_selected:
   682                           	opt stack 0
   683  000043                     	ds	2
   684  000045                     _key:
   685                           	opt stack 0
   686  000045                     	ds	1
   687  000046                     _RtccDate:
   688                           	opt stack 0
   689  000046                     	ds	4
   690  00004A                     _RtccTime:
   691                           	opt stack 0
   692  00004A                     	ds	4
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           postdec1	equ	0xFE5
   700                           fsr1l	equ	0xFE1
   701                           
   702                           	psect	dataCOMRAM
   703  00004E                     __pdataCOMRAM:
   704                           	opt stack 0
   705  00004E                     _anio:
   706                           	opt stack 0
   707  00004E                     	ds	2
   708  000050                     _dia:
   709                           	opt stack 0
   710  000050                     	ds	2
   711  000052                     _diasem:
   712                           	opt stack 0
   713  000052                     	ds	2
   714  000054                     _hora:
   715                           	opt stack 0
   716  000054                     	ds	2
   717  000056                     _mes:
   718                           	opt stack 0
   719  000056                     	ds	2
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           postinc0	equ	0xFEE
   725                           wreg	equ	0xFE8
   726                           postdec1	equ	0xFE5
   727                           fsr1l	equ	0xFE1
   728                           
   729                           	psect	bssBANK0
   730  000060                     __pbssBANK0:
   731                           	opt stack 0
   732  000060                     _RtccAlrmTimeDate:
   733                           	opt stack 0
   734  000060                     	ds	8
   735  000068                     _RtccTimeDate:
   736                           	opt stack 0
   737  000068                     	ds	8
   738  000070                     _Rtcc_read_TimeDate:
   739                           	opt stack 0
   740  000070                     	ds	8
   741  000078                     _RtccTimeVal:
   742                           	opt stack 0
   743  000078                     	ds	4
   744  00007C                     _a:
   745                           	opt stack 0
   746  00007C                     	ds	2
   747  00007E                     _b:
   748                           	opt stack 0
   749  00007E                     	ds	2
   750  000080                     _c:
   751                           	opt stack 0
   752  000080                     	ds	2
   753  000082                     _j:
   754                           	opt stack 0
   755  000082                     	ds	2
   756  000084                     _k:
   757                           	opt stack 0
   758  000084                     	ds	2
   759  000086                     _buffer1:
   760                           	opt stack 0
   761  000086                     	ds	20
   762  00009A                     _pin:
   763                           	opt stack 0
   764  00009A                     	ds	5
   765  00009F                     _pin_input:
   766                           	opt stack 0
   767  00009F                     	ds	5
   768                           tblptru	equ	0xFF8
   769                           tblptrh	equ	0xFF7
   770                           tblptrl	equ	0xFF6
   771                           tablat	equ	0xFF5
   772                           postinc0	equ	0xFEE
   773                           wreg	equ	0xFE8
   774                           postdec1	equ	0xFE5
   775                           fsr1l	equ	0xFE1
   776                           
   777                           	psect	cstackCOMRAM
   778  000001                     __pcstackCOMRAM:
   779                           	opt stack 0
   780  000001                     ??_isdigit:
   781  000001                     ??_lcd_send_nibble:
   782  000001                     ?_strcmp:
   783                           	opt stack 0
   784  000001                     ?___wmul:
   785                           	opt stack 0
   786  000001                     ?___awdiv:
   787                           	opt stack 0
   788  000001                     ?___lwdiv:
   789                           	opt stack 0
   790  000001                     Delay100TCYx@unit:
   791                           	opt stack 0
   792  000001                     Delay1KTCYx@unit:
   793                           	opt stack 0
   794  000001                     RtccReadDate@pDt:
   795                           	opt stack 0
   796  000001                     RtccReadTime@pTm:
   797                           	opt stack 0
   798  000001                     RtccWriteDate@pDt:
   799                           	opt stack 0
   800  000001                     RtccWriteTime@pTm:
   801                           	opt stack 0
   802  000001                     ___wmul@multiplier:
   803                           	opt stack 0
   804  000001                     ___awdiv@dividend:
   805                           	opt stack 0
   806  000001                     ___lwdiv@dividend:
   807                           	opt stack 0
   808  000001                     strcat@to:
   809                           	opt stack 0
   810  000001                     strcmp@s1:
   811                           	opt stack 0
   812  000001                     strcpy@to:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x0
   816  000001                     	ds	1
   817  000002                     lcd_send_nibble@nibble:
   818                           	opt stack 0
   819  000002                     _isdigit$2211:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x1
   823  000002                     	ds	1
   824  000003                     lcd_send_byte@n:
   825                           	opt stack 0
   826  000003                     RtccWriteDate@di:
   827                           	opt stack 0
   828  000003                     RtccWriteTime@di:
   829                           	opt stack 0
   830  000003                     isdigit@c:
   831                           	opt stack 0
   832  000003                     ___wmul@multiplicand:
   833                           	opt stack 0
   834  000003                     ___awdiv@divisor:
   835                           	opt stack 0
   836  000003                     ___lwdiv@divisor:
   837                           	opt stack 0
   838  000003                     strcat@from:
   839                           	opt stack 0
   840  000003                     strcmp@s2:
   841                           	opt stack 0
   842  000003                     strcpy@from:
   843                           	opt stack 0
   844  000003                     RtccReadDate@rTD1:
   845                           	opt stack 0
   846  000003                     RtccReadTime@rTD1:
   847                           	opt stack 0
   848                           
   849                           ; 8 bytes @ 0x2
   850  000003                     	ds	1
   851  000004                     lcd_send_byte@address:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x3
   855  000004                     	ds	1
   856  000005                     ??_strcmp:
   857  000005                     lcd_init@i:
   858                           	opt stack 0
   859  000005                     lcd_gotoxy@y:
   860                           	opt stack 0
   861  000005                     lcd_comand@d:
   862                           	opt stack 0
   863  000005                     RtccWriteDate@wasOn:
   864                           	opt stack 0
   865  000005                     RtccWriteTime@wasOn:
   866                           	opt stack 0
   867  000005                     ___awdiv@counter:
   868                           	opt stack 0
   869  000005                     ___wmul@product:
   870                           	opt stack 0
   871  000005                     ___lwdiv@quotient:
   872                           	opt stack 0
   873  000005                     strcat@cp:
   874                           	opt stack 0
   875  000005                     strcpy@cp:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x4
   879  000005                     	ds	1
   880  000006                     lcd_gotoxy@x:
   881                           	opt stack 0
   882  000006                     RtccWriteDate@wasAlrm:
   883                           	opt stack 0
   884  000006                     RtccWriteTime@wasAlrm:
   885                           	opt stack 0
   886  000006                     ___awdiv@sign:
   887                           	opt stack 0
   888  000006                     strcmp@r:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x5
   892  000006                     	ds	1
   893  000007                     lcd_gotoxy@address:
   894                           	opt stack 0
   895  000007                     RtccWriteTime@wasWrEn:
   896                           	opt stack 0
   897  000007                     ___lwdiv@counter:
   898                           	opt stack 0
   899  000007                     RtccWriteDate@tempYear:
   900                           	opt stack 0
   901  000007                     ___awdiv@quotient:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x6
   905  000007                     	ds	1
   906  000008                     ?___lwmod:
   907                           	opt stack 0
   908  000008                     lcd_putc@c:
   909                           	opt stack 0
   910  000008                     RtccWriteTime@tempMinSec:
   911                           	opt stack 0
   912  000008                     ___lwmod@dividend:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x7
   916  000008                     	ds	1
   917  000009                     RtccWriteDate@wasWrEn:
   918                           	opt stack 0
   919  000009                     lcd_putrs@ptr:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x8
   923  000009                     	ds	1
   924  00000A                     RtccWriteDate@tempDayMonth:
   925                           	opt stack 0
   926  00000A                     RtccWriteTime@tempHourWDay:
   927                           	opt stack 0
   928  00000A                     ___lwmod@divisor:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x9
   932  00000A                     	ds	1
   933  00000B                     lcd_write@column:
   934                           	opt stack 0
   935  00000B                     RtccReadDate@rTD0:
   936                           	opt stack 0
   937  00000B                     RtccReadTime@rTD0:
   938                           	opt stack 0
   939                           
   940                           ; 8 bytes @ 0xA
   941  00000B                     	ds	1
   942  00000C                     ___lwmod@counter:
   943                           	opt stack 0
   944  00000C                     RtccWriteDate@tempHourWDay:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0xB
   948  00000C                     	ds	1
   949  00000D                     ?_sprintf:
   950                           	opt stack 0
   951  00000D                     lcd_write@row:
   952                           	opt stack 0
   953  00000D                     sprintf@sp:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0xC
   957  00000D                     	ds	1
   958  00000E                     
   959                           ; 0 bytes @ 0xD
   960  00000E                     	ds	1
   961  00000F                     lcd_write@string:
   962                           	opt stack 0
   963  00000F                     sprintf@f:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0xE
   967  00000F                     	ds	2
   968  000011                     ??_menu_selector:
   969  000011                     ??_submenu_selector:
   970  000011                     ??_button_B_menu:
   971  000011                     ??_button_B_submenu_activation:
   972  000011                     ??_button_B_submenu_pin_config:
   973  000011                     ??_button_B_submenu_siren_config:
   974  000011                     ??_button_B_submenu_siren_volume:
   975  000011                     ??_button_B_submenu_siren_tone:
   976  000011                     
   977                           ; 0 bytes @ 0x10
   978  000011                     	ds	2
   979  000013                     ??_button_A:
   980                           
   981                           ; 0 bytes @ 0x12
   982  000013                     	ds	4
   983  000017                     ??_sprintf:
   984                           
   985                           ; 0 bytes @ 0x16
   986  000017                     	ds	4
   987  00001B                     sprintf@ap:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x1A
   991  00001B                     	ds	2
   992  00001D                     sprintf@flag:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x1C
   996  00001D                     	ds	1
   997  00001E                     sprintf@val:
   998                           	opt stack 0
   999                           
  1000                           ; 2 bytes @ 0x1D
  1001  00001E                     	ds	2
  1002  000020                     sprintf@prec:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x1F
  1006  000020                     	ds	1
  1007  000021                     sprintf@width:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x20
  1011  000021                     	ds	2
  1012  000023                     sprintf@c:
  1013                           	opt stack 0
  1014                           
  1015                           ; 1 bytes @ 0x22
  1016  000023                     	ds	1
  1017  000024                     ??_date_set:
  1018  000024                     ??_home_config_refresh:
  1019  000024                     ??_button_B_submenu_date_and_time_config:
  1020  000024                     
  1021                           ; 0 bytes @ 0x23
  1022  000024                     	ds	2
  1023  000026                     ??_button_B:
  1024                           
  1025                           ; 0 bytes @ 0x25
  1026  000026                     	ds	2
  1027  000028                     ??_keyboard_control:
  1028                           
  1029                           ; 0 bytes @ 0x27
  1030  000028                     	ds	1
  1031  000029                     tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec1	equ	0xFE5
  1038                           fsr1l	equ	0xFE1
  1039                           
  1040                           ; 0 bytes @ 0x28
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 835 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2  490[None  ] int 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels required when called:   11
  1066 ;; This function calls:
  1067 ;;		_Read_RTC
  1068 ;;		_activity_home
  1069 ;;		_check_home_callback
  1070 ;;		_home_clock_refresh
  1071 ;;		_home_config_refresh
  1072 ;;		_keyboard_control
  1073 ;;		_setup
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text0
  1080  00E42A                     __ptext0:
  1081                           	opt stack 0
  1082  00E42A                     _main:
  1083                           	opt stack 20
  1084                           
  1085                           ;main.c: 837: setup();
  1086                           
  1087                           ; BSR set to: 15
  1088                           ;incstack = 0
  1089  00E42A  EC8A  F079         	call	_setup	;wreg free
  1090                           
  1091                           ;main.c: 838: activity_home();
  1092  00E42E  ECEB  F071         	call	_activity_home	;wreg free
  1093  00E432  D000               	goto	l4160
  1094  00E434                     l4160:
  1095                           
  1096                           ;main.c: 842: check_home_callback();
  1097  00E434  ECA3  F071         	call	_check_home_callback	;wreg free
  1098                           
  1099                           ;main.c: 843: Read_RTC();
  1100  00E438  EC47  F07B         	call	_Read_RTC	;wreg free
  1101                           
  1102                           ;main.c: 844: keyboard_control();
  1103  00E43C  ECEB  F07C         	call	_keyboard_control	;wreg free
  1104                           
  1105                           ;main.c: 846: if(activity == 0){
  1106  00E440  5029               	movf	_activity,w,c
  1107  00E442  102A               	iorwf	_activity+1,w,c
  1108  00E444  A4D8               	btfss	status,2,c
  1109  00E446  D7F6               	goto	l4160
  1110                           
  1111                           ;main.c: 847: home_clock_refresh();
  1112  00E448  EC13  F07A         	call	_home_clock_refresh	;wreg free
  1113                           
  1114                           ;main.c: 848: home_config_refresh();
  1115  00E44C  ECF4  F07A         	call	_home_config_refresh	;wreg free
  1116  00E450  D7F1               	goto	l4160
  1117                           
  1118                           ;main.c: 849: }
  1119                           ;main.c: 851: }
  1120                           ;main.c: 853: return 0;
  1121                           ;	Return value of _main is never used
  1122  00E452  EF00  F000         	goto	start
  1123  00E456                     __end_of_main:
  1124                           	opt stack 0
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec1	equ	0xFE5
  1132                           fsr1l	equ	0xFE1
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function _setup *****************
  1136 ;; Defined at:
  1137 ;;		line 794 in file "main.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;		None               void
  1144 ;; Registers used:
  1145 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    3
  1158 ;; This function calls:
  1159 ;;		_Write_RTC
  1160 ;;		_lcd_comand
  1161 ;;		_lcd_init
  1162 ;;		_pin_reset
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text1
  1169  00F314                     __ptext1:
  1170                           	opt stack 0
  1171  00F314                     _setup:
  1172                           	opt stack 27
  1173                           
  1174                           ;main.c: 796: OSCTUNEbits.INTSRC=1;
  1175                           
  1176                           ;incstack = 0
  1177  00F314  8E9B               	bsf	3995,7,c	;volatile
  1178                           
  1179                           ;main.c: 797: OSCTUNEbits.PLLEN=0;
  1180  00F316  9C9B               	bcf	3995,6,c	;volatile
  1181                           
  1182                           ;main.c: 798: OSCCONbits.IRCF0=1;
  1183  00F318  88D3               	bsf	4051,4,c	;volatile
  1184                           
  1185                           ;main.c: 799: OSCCONbits.IRCF1=1;
  1186  00F31A  8AD3               	bsf	4051,5,c	;volatile
  1187                           
  1188                           ;main.c: 800: OSCCONbits.IRCF2=1;
  1189  00F31C  8CD3               	bsf	4051,6,c	;volatile
  1190                           
  1191                           ;main.c: 801: OSCCONbits.SCS0=0;
  1192  00F31E  90D3               	bcf	4051,0,c	;volatile
  1193                           
  1194                           ;main.c: 802: OSCCONbits.SCS1=0;
  1195  00F320  92D3               	bcf	4051,1,c	;volatile
  1196                           
  1197                           ;main.c: 803: TRISA = 0b11110000;
  1198  00F322  0EF0               	movlw	240
  1199  00F324  6E92               	movwf	3986,c	;volatile
  1200                           
  1201                           ;main.c: 804: TRISB = 0;
  1202  00F326  0E00               	movlw	0
  1203  00F328  6E93               	movwf	3987,c	;volatile
  1204                           
  1205                           ;main.c: 805: TRISC = 0b00000111;
  1206  00F32A  0E07               	movlw	7
  1207  00F32C  6E94               	movwf	3988,c	;volatile
  1208                           
  1209                           ;main.c: 809: ANCON0=0b11111111;
  1210  00F32E  010F               	movlb	15	; () banked
  1211  00F330  6948               	setf	72,b	;volatile
  1212                           
  1213                           ; BSR set to: 15
  1214                           ;main.c: 811: ANCON1=0b11111111;
  1215  00F332  010F               	movlb	15	; () banked
  1216  00F334  6949               	setf	73,b	;volatile
  1217                           
  1218                           ;main.c: 812: ADCON0=0b00101101;
  1219  00F336  0E2D               	movlw	45
  1220  00F338  6EC2               	movwf	4034,c	;volatile
  1221                           
  1222                           ;main.c: 813: ADCON1=0b00010000;
  1223  00F33A  0E10               	movlw	16
  1224  00F33C  6EC1               	movwf	4033,c	;volatile
  1225                           
  1226                           ; BSR set to: 15
  1227                           ;main.c: 814: RTCCFGbits.RTCEN=1;
  1228  00F33E  010F               	movlb	15	; () banked
  1229  00F340  8F3F               	bsf	63,7,b	;volatile
  1230                           
  1231                           ; BSR set to: 15
  1232                           ;main.c: 815: RTCCFGbits.RTCWREN=1;
  1233  00F342  010F               	movlb	15	; () banked
  1234  00F344  8B3F               	bsf	63,5,b	;volatile
  1235                           
  1236                           ; BSR set to: 15
  1237                           ;main.c: 816: T1CONbits.T1OSCEN=1;
  1238  00F346  86CD               	bsf	4045,3,c	;volatile
  1239                           
  1240                           ; BSR set to: 15
  1241                           ;main.c: 817: Write_RTC();
  1242  00F348  EC96  F07D         	call	_Write_RTC	;wreg free
  1243                           
  1244                           ;main.c: 818: lcd_init();
  1245  00F34C  EC87  F078         	call	_lcd_init	;wreg free
  1246                           
  1247                           ;main.c: 819: lcd_comand(0b00001100);
  1248  00F350  0E0C               	movlw	12
  1249  00F352  EC4F  F071         	call	_lcd_comand
  1250                           
  1251                           ;main.c: 820: LATBbits.LATB1 = 1;;
  1252  00F356  828A               	bsf	3978,1,c	;volatile
  1253                           
  1254                           ;main.c: 821: LATBbits.LATB0 = 1;;
  1255  00F358  808A               	bsf	3978,0,c	;volatile
  1256                           
  1257                           ;main.c: 824: home_callback_delay = 50;
  1258  00F35A  0E00               	movlw	0
  1259  00F35C  6E38               	movwf	_home_callback_delay+1,c
  1260  00F35E  0E32               	movlw	50
  1261  00F360  6E37               	movwf	_home_callback_delay,c
  1262                           
  1263                           ;main.c: 825: config_widget = 0;
  1264  00F362  0E00               	movlw	0
  1265  00F364  6E30               	movwf	_config_widget+1,c
  1266  00F366  0E00               	movlw	0
  1267  00F368  6E2F               	movwf	_config_widget,c
  1268                           
  1269                           ;main.c: 826: menu_selected = 0;
  1270  00F36A  0E00               	movlw	0
  1271  00F36C  6E3C               	movwf	_menu_selected+1,c
  1272  00F36E  0E00               	movlw	0
  1273  00F370  6E3B               	movwf	_menu_selected,c
  1274                           
  1275                           ;main.c: 827: submenu_selected = 0;
  1276  00F372  0E00               	movlw	0
  1277  00F374  6E44               	movwf	_submenu_selected+1,c
  1278  00F376  0E00               	movlw	0
  1279  00F378  6E43               	movwf	_submenu_selected,c
  1280                           
  1281                           ;main.c: 828: cursor_horizontal_position = 1;
  1282  00F37A  0E00               	movlw	0
  1283  00F37C  6E34               	movwf	_cursor_horizontal_position+1,c
  1284  00F37E  0E01               	movlw	1
  1285  00F380  6E33               	movwf	_cursor_horizontal_position,c
  1286                           
  1287                           ;main.c: 829: alarm_volume = 0;
  1288  00F382  0E00               	movlw	0
  1289  00F384  6E2E               	movwf	_alarm_volume+1,c
  1290  00F386  0E00               	movlw	0
  1291  00F388  6E2D               	movwf	_alarm_volume,c
  1292                           
  1293                           ;main.c: 830: alarm_tone = 0;
  1294  00F38A  0E00               	movlw	0
  1295  00F38C  6E2C               	movwf	_alarm_tone+1,c
  1296  00F38E  0E00               	movlw	0
  1297  00F390  6E2B               	movwf	_alarm_tone,c
  1298                           
  1299                           ;main.c: 831: pin_reset();
  1300  00F392  EC71  F071         	call	_pin_reset	;wreg free
  1301  00F396  0012               	return		;funcret
  1302  00F398                     __end_of_setup:
  1303                           	opt stack 0
  1304                           tblptru	equ	0xFF8
  1305                           tblptrh	equ	0xFF7
  1306                           tblptrl	equ	0xFF6
  1307                           tablat	equ	0xFF5
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1l	equ	0xFE1
  1312                           status	equ	0xFD8
  1313                           
  1314 ;; *************** function _keyboard_control *****************
  1315 ;; Defined at:
  1316 ;;		line 756 in file "main.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;		None               void
  1323 ;; Registers used:
  1324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1334 ;;Total ram usage:        1 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:   10
  1337 ;; This function calls:
  1338 ;;		_button_A
  1339 ;;		_button_B
  1340 ;;		_button_C
  1341 ;;		_button_D
  1342 ;;		_button_asterisk
  1343 ;;		_button_hash
  1344 ;;		_button_number
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text2
  1351  00F9D6                     __ptext2:
  1352                           	opt stack 0
  1353  00F9D6                     _keyboard_control:
  1354                           	opt stack 20
  1355                           
  1356                           ;main.c: 758: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1357                           
  1358                           ;incstack = 0
  1359  00F9D6  8089               	bsf	3977,0,c	;volatile
  1360  00F9D8  9289               	bcf	3977,1,c	;volatile
  1361  00F9DA  9489               	bcf	3977,2,c	;volatile
  1362  00F9DC  9689               	bcf	3977,3,c	;volatile
  1363                           
  1364                           ;main.c: 759: {
  1365                           ;main.c: 760: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  1366  00F9DE  AA80               	btfss	3968,5,c	;volatile
  1367  00F9E0  D007               	goto	l421
  1368  00F9E2  0E01               	movlw	1
  1369  00F9E4  6E45               	movwf	_key,c
  1370  00F9E6  ECD6  F077         	call	_button_number	;wreg free
  1371  00F9EA  D000               	goto	l422
  1372  00F9EC                     l422:
  1373  00F9EC  BA80               	btfsc	3968,5,c	;volatile
  1374  00F9EE  D7FE               	goto	l422
  1375  00F9F0                     l421:
  1376                           
  1377                           ;main.c: 761: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  1378  00F9F0  AE80               	btfss	3968,7,c	;volatile
  1379  00F9F2  D007               	goto	l425
  1380  00F9F4  0E02               	movlw	2
  1381  00F9F6  6E45               	movwf	_key,c
  1382  00F9F8  ECD6  F077         	call	_button_number	;wreg free
  1383  00F9FC  D000               	goto	l426
  1384  00F9FE                     l426:
  1385  00F9FE  BE80               	btfsc	3968,7,c	;volatile
  1386  00FA00  D7FE               	goto	l426
  1387  00FA02                     l425:
  1388                           
  1389                           ;main.c: 762: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  1390  00FA02  AC80               	btfss	3968,6,c	;volatile
  1391  00FA04  D007               	goto	l429
  1392  00FA06  0E03               	movlw	3
  1393  00FA08  6E45               	movwf	_key,c
  1394  00FA0A  ECD6  F077         	call	_button_number	;wreg free
  1395  00FA0E  D000               	goto	l430
  1396  00FA10                     l430:
  1397  00FA10  BC80               	btfsc	3968,6,c	;volatile
  1398  00FA12  D7FE               	goto	l430
  1399  00FA14                     l429:
  1400                           
  1401                           ;main.c: 763: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  1402  00FA14  A482               	btfss	3970,2,c	;volatile
  1403  00FA16  D007               	goto	l433
  1404  00FA18  0E0B               	movlw	11
  1405  00FA1A  6E45               	movwf	_key,c
  1406  00FA1C  EC13  F076         	call	_button_A	;wreg free
  1407  00FA20  D000               	goto	l434
  1408  00FA22                     l434:
  1409  00FA22  B482               	btfsc	3970,2,c	;volatile
  1410  00FA24  D7FE               	goto	l434
  1411  00FA26                     l433:
  1412                           
  1413                           ;main.c: 764: }
  1414                           ;main.c: 766: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1415  00FA26  9089               	bcf	3977,0,c	;volatile
  1416  00FA28  8289               	bsf	3977,1,c	;volatile
  1417  00FA2A  9489               	bcf	3977,2,c	;volatile
  1418  00FA2C  9689               	bcf	3977,3,c	;volatile
  1419                           
  1420                           ;main.c: 767: {
  1421                           ;main.c: 768: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  1422  00FA2E  AA80               	btfss	3968,5,c	;volatile
  1423  00FA30  D007               	goto	l437
  1424  00FA32  0E04               	movlw	4
  1425  00FA34  6E45               	movwf	_key,c
  1426  00FA36  ECD6  F077         	call	_button_number	;wreg free
  1427  00FA3A  D000               	goto	l438
  1428  00FA3C                     l438:
  1429  00FA3C  BA80               	btfsc	3968,5,c	;volatile
  1430  00FA3E  D7FE               	goto	l438
  1431  00FA40                     l437:
  1432                           
  1433                           ;main.c: 769: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  1434  00FA40  AE80               	btfss	3968,7,c	;volatile
  1435  00FA42  D007               	goto	l441
  1436  00FA44  0E05               	movlw	5
  1437  00FA46  6E45               	movwf	_key,c
  1438  00FA48  ECD6  F077         	call	_button_number	;wreg free
  1439  00FA4C  D000               	goto	l442
  1440  00FA4E                     l442:
  1441  00FA4E  BE80               	btfsc	3968,7,c	;volatile
  1442  00FA50  D7FE               	goto	l442
  1443  00FA52                     l441:
  1444                           
  1445                           ;main.c: 770: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  1446  00FA52  AC80               	btfss	3968,6,c	;volatile
  1447  00FA54  D007               	goto	l445
  1448  00FA56  0E06               	movlw	6
  1449  00FA58  6E45               	movwf	_key,c
  1450  00FA5A  ECD6  F077         	call	_button_number	;wreg free
  1451  00FA5E  D000               	goto	l446
  1452  00FA60                     l446:
  1453  00FA60  BC80               	btfsc	3968,6,c	;volatile
  1454  00FA62  D7FE               	goto	l446
  1455  00FA64                     l445:
  1456                           
  1457                           ;main.c: 771: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  1458  00FA64  A482               	btfss	3970,2,c	;volatile
  1459  00FA66  D007               	goto	l449
  1460  00FA68  0E0C               	movlw	12
  1461  00FA6A  6E45               	movwf	_key,c
  1462  00FA6C  EC49  F078         	call	_button_B	;wreg free
  1463  00FA70  D000               	goto	l450
  1464  00FA72                     l450:
  1465  00FA72  B482               	btfsc	3970,2,c	;volatile
  1466  00FA74  D7FE               	goto	l450
  1467  00FA76                     l449:
  1468                           
  1469                           ;main.c: 772: }
  1470                           ;main.c: 774: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  1471  00FA76  9089               	bcf	3977,0,c	;volatile
  1472  00FA78  9289               	bcf	3977,1,c	;volatile
  1473  00FA7A  8489               	bsf	3977,2,c	;volatile
  1474  00FA7C  9689               	bcf	3977,3,c	;volatile
  1475                           
  1476                           ;main.c: 775: {
  1477                           ;main.c: 776: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  1478  00FA7E  AA80               	btfss	3968,5,c	;volatile
  1479  00FA80  D007               	goto	l453
  1480  00FA82  0E07               	movlw	7
  1481  00FA84  6E45               	movwf	_key,c
  1482  00FA86  ECD6  F077         	call	_button_number	;wreg free
  1483  00FA8A  D000               	goto	l454
  1484  00FA8C                     l454:
  1485  00FA8C  BA80               	btfsc	3968,5,c	;volatile
  1486  00FA8E  D7FE               	goto	l454
  1487  00FA90                     l453:
  1488                           
  1489                           ;main.c: 777: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  1490  00FA90  AE80               	btfss	3968,7,c	;volatile
  1491  00FA92  D007               	goto	l457
  1492  00FA94  0E08               	movlw	8
  1493  00FA96  6E45               	movwf	_key,c
  1494  00FA98  ECD6  F077         	call	_button_number	;wreg free
  1495  00FA9C  D000               	goto	l458
  1496  00FA9E                     l458:
  1497  00FA9E  BE80               	btfsc	3968,7,c	;volatile
  1498  00FAA0  D7FE               	goto	l458
  1499  00FAA2                     l457:
  1500                           
  1501                           ;main.c: 778: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  1502  00FAA2  AC80               	btfss	3968,6,c	;volatile
  1503  00FAA4  D007               	goto	l461
  1504  00FAA6  0E09               	movlw	9
  1505  00FAA8  6E45               	movwf	_key,c
  1506  00FAAA  ECD6  F077         	call	_button_number	;wreg free
  1507  00FAAE  D000               	goto	l462
  1508  00FAB0                     l462:
  1509  00FAB0  BC80               	btfsc	3968,6,c	;volatile
  1510  00FAB2  D7FE               	goto	l462
  1511  00FAB4                     l461:
  1512                           
  1513                           ;main.c: 779: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  1514  00FAB4  A482               	btfss	3970,2,c	;volatile
  1515  00FAB6  D007               	goto	l465
  1516  00FAB8  0E0D               	movlw	13
  1517  00FABA  6E45               	movwf	_key,c
  1518  00FABC  EC95  F071         	call	_button_C	;wreg free
  1519  00FAC0  D000               	goto	l466
  1520  00FAC2                     l466:
  1521  00FAC2  B482               	btfsc	3970,2,c	;volatile
  1522  00FAC4  D7FE               	goto	l466
  1523  00FAC6                     l465:
  1524                           
  1525                           ;main.c: 780: }
  1526                           ;main.c: 782: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  1527  00FAC6  9089               	bcf	3977,0,c	;volatile
  1528  00FAC8  9289               	bcf	3977,1,c	;volatile
  1529  00FACA  9489               	bcf	3977,2,c	;volatile
  1530  00FACC  8689               	bsf	3977,3,c	;volatile
  1531                           
  1532                           ;main.c: 783: {
  1533                           ;main.c: 784: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  1534  00FACE  AA80               	btfss	3968,5,c	;volatile
  1535  00FAD0  D007               	goto	l469
  1536  00FAD2  0E0E               	movlw	14
  1537  00FAD4  6E45               	movwf	_key,c
  1538  00FAD6  EC3D  F071         	call	_button_asterisk	;wreg free
  1539  00FADA  D000               	goto	l470
  1540  00FADC                     l470:
  1541  00FADC  BA80               	btfsc	3968,5,c	;volatile
  1542  00FADE  D7FE               	goto	l470
  1543  00FAE0                     l469:
  1544                           
  1545                           ;main.c: 785: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  1546  00FAE0  AE80               	btfss	3968,7,c	;volatile
  1547  00FAE2  D007               	goto	l473
  1548  00FAE4  0E00               	movlw	0
  1549  00FAE6  6E45               	movwf	_key,c
  1550  00FAE8  ECD6  F077         	call	_button_number	;wreg free
  1551  00FAEC  D000               	goto	l474
  1552  00FAEE                     l474:
  1553  00FAEE  BE80               	btfsc	3968,7,c	;volatile
  1554  00FAF0  D7FE               	goto	l474
  1555  00FAF2                     l473:
  1556                           
  1557                           ;main.c: 786: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  1558  00FAF2  AC80               	btfss	3968,6,c	;volatile
  1559  00FAF4  D007               	goto	l477
  1560  00FAF6  0E0F               	movlw	15
  1561  00FAF8  6E45               	movwf	_key,c
  1562  00FAFA  EC17  F073         	call	_button_hash	;wreg free
  1563  00FAFE  D000               	goto	l478
  1564  00FB00                     l478:
  1565  00FB00  BC80               	btfsc	3968,6,c	;volatile
  1566  00FB02  D7FE               	goto	l478
  1567  00FB04                     l477:
  1568                           
  1569                           ;main.c: 787: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  1570  00FB04  A482               	btfss	3970,2,c	;volatile
  1571  00FB06  D009               	goto	l4104
  1572  00FB08  0E10               	movlw	16
  1573  00FB0A  6E45               	movwf	_key,c
  1574  00FB0C  EC45  F071         	call	_button_D	;wreg free
  1575  00FB10  D000               	goto	l482
  1576  00FB12                     l482:
  1577  00FB12  A482               	btfss	3970,2,c	;volatile
  1578  00FB14  D002               	goto	l4104
  1579  00FB16  D7FD               	goto	l482
  1580  00FB18  D000               	goto	l4104
  1581  00FB1A                     l4104:
  1582                           
  1583                           ;main.c: 788: }
  1584                           ;main.c: 790: _delay((unsigned long)((98)*(8000000/4000.0)));
  1585  00FB1A  0EFF               	movlw	255
  1586  00FB1C  6E28               	movwf	??_keyboard_control& (0+255),c
  1587  00FB1E  0E8A               	movlw	138
  1588  00FB20                     u2647:
  1589  00FB20  2EE8               	decfsz	wreg,f,c
  1590  00FB22  D7FE               	goto	u2647
  1591  00FB24  2E28               	decfsz	??_keyboard_control& (0+255),f,c
  1592  00FB26  D7FC               	goto	u2647
  1593  00FB28  D000               	nop2	
  1594  00FB2A  0012               	return		;funcret
  1595  00FB2C                     __end_of_keyboard_control:
  1596                           	opt stack 0
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           postinc0	equ	0xFEE
  1602                           wreg	equ	0xFE8
  1603                           postdec1	equ	0xFE5
  1604                           fsr1l	equ	0xFE1
  1605                           status	equ	0xFD8
  1606                           
  1607 ;; *************** function _button_number *****************
  1608 ;; Defined at:
  1609 ;;		line 738 in file "main.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;		None               void
  1616 ;; Registers used:
  1617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    5
  1630 ;; This function calls:
  1631 ;;		_lcd_putrs
  1632 ;;		_reset_home_callback
  1633 ;;		_sprintf
  1634 ;;		_strcat
  1635 ;; This function is called by:
  1636 ;;		_keyboard_control
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text3
  1641  00EFAC                     __ptext3:
  1642                           	opt stack 0
  1643  00EFAC                     _button_number:
  1644                           	opt stack 24
  1645                           
  1646                           ;main.c: 740: reset_home_callback();
  1647                           
  1648                           ;incstack = 0
  1649  00EFAC  EC40  F071         	call	_reset_home_callback	;wreg free
  1650                           
  1651                           ;main.c: 742: if(activity == 1 || activity == 6){
  1652  00EFB0  0429               	decf	_activity,w,c
  1653  00EFB2  102A               	iorwf	_activity+1,w,c
  1654  00EFB4  B4D8               	btfsc	status,2,c
  1655  00EFB6  D005               	goto	l3936
  1656  00EFB8  0E06               	movlw	6
  1657  00EFBA  1829               	xorwf	_activity,w,c
  1658  00EFBC  102A               	iorwf	_activity+1,w,c
  1659  00EFBE  A4D8               	btfss	status,2,c
  1660  00EFC0  D01E               	goto	l3942
  1661  00EFC2                     l3936:
  1662                           
  1663                           ;main.c: 743: lcd_putrs("*");
  1664  00EFC2  0EF3               	movlw	low STR_56
  1665  00EFC4  6E09               	movwf	lcd_putrs@ptr,c
  1666  00EFC6  0EFF               	movlw	high STR_56
  1667  00EFC8  6E0A               	movwf	lcd_putrs@ptr+1,c
  1668  00EFCA  ECE9  F075         	call	_lcd_putrs	;wreg free
  1669                           
  1670                           ;main.c: 744: sprintf(buffer1, "%01u", key);
  1671  00EFCE  0E86               	movlw	low _buffer1
  1672  00EFD0  6E0D               	movwf	sprintf@sp,c
  1673  00EFD2  0E00               	movlw	high _buffer1
  1674  00EFD4  6E0E               	movwf	sprintf@sp+1,c
  1675  00EFD6  0EDE               	movlw	low STR_57
  1676  00EFD8  6E0F               	movwf	sprintf@f,c
  1677  00EFDA  0EFF               	movlw	high STR_57
  1678  00EFDC  6E10               	movwf	sprintf@f+1,c
  1679  00EFDE  C045  F011         	movff	_key,?_sprintf+4
  1680  00EFE2  6A12               	clrf	?_sprintf+5,c
  1681  00EFE4  EC44  F07E         	call	_sprintf	;wreg free
  1682                           
  1683                           ;main.c: 745: strcat(pin_input, buffer1);
  1684  00EFE8  0E9F               	movlw	low _pin_input
  1685  00EFEA  6E01               	movwf	strcat@to,c
  1686  00EFEC  0E00               	movlw	high _pin_input
  1687  00EFEE  6E02               	movwf	strcat@to+1,c
  1688  00EFF0  0E86               	movlw	low _buffer1
  1689  00EFF2  6E03               	movwf	strcat@from,c
  1690  00EFF4  0E00               	movlw	high _buffer1
  1691  00EFF6  6E04               	movwf	strcat@from+1,c
  1692  00EFF8  EC89  F074         	call	_strcat	;wreg free
  1693                           
  1694                           ;main.c: 746: }
  1695  00EFFC  0012               	return	
  1696  00EFFE                     l3942:
  1697                           
  1698                           ;main.c: 747: else {
  1699                           ;main.c: 748: sprintf(buffer1,"%01u",key);
  1700  00EFFE  0E86               	movlw	low _buffer1
  1701  00F000  6E0D               	movwf	sprintf@sp,c
  1702  00F002  0E00               	movlw	high _buffer1
  1703  00F004  6E0E               	movwf	sprintf@sp+1,c
  1704  00F006  0EDE               	movlw	low STR_57
  1705  00F008  6E0F               	movwf	sprintf@f,c
  1706  00F00A  0EFF               	movlw	high STR_57
  1707  00F00C  6E10               	movwf	sprintf@f+1,c
  1708  00F00E  C045  F011         	movff	_key,?_sprintf+4
  1709  00F012  6A12               	clrf	?_sprintf+5,c
  1710  00F014  EC44  F07E         	call	_sprintf	;wreg free
  1711  00F018  0012               	return	
  1712  00F01A  0012               	return		;funcret
  1713  00F01C                     __end_of_button_number:
  1714                           	opt stack 0
  1715                           tblptru	equ	0xFF8
  1716                           tblptrh	equ	0xFF7
  1717                           tblptrl	equ	0xFF6
  1718                           tablat	equ	0xFF5
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           postdec1	equ	0xFE5
  1722                           fsr1l	equ	0xFE1
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function _strcat *****************
  1726 ;; Defined at:
  1727 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  to              2    0[COMRAM] PTR unsigned char 
  1730 ;;		 -> pin_input(5), 
  1731 ;;  from            2    2[COMRAM] PTR const unsigned char 
  1732 ;;		 -> buffer1(20), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  cp              2    4[COMRAM] PTR unsigned char 
  1735 ;;		 -> pin_input(5), 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2    0[COMRAM] PTR unsigned char 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1749 ;;Total ram usage:        6 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_button_number
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text4
  1759  00E912                     __ptext4:
  1760                           	opt stack 0
  1761  00E912                     _strcat:
  1762                           	opt stack 28
  1763                           
  1764                           ;incstack = 0
  1765  00E912  C001  F005         	movff	strcat@to,strcat@cp
  1766  00E916  C002  F006         	movff	strcat@to+1,strcat@cp+1
  1767  00E91A  D003               	goto	l3766
  1768  00E91C                     l3764:
  1769  00E91C  4A05               	infsnz	strcat@cp,f,c
  1770  00E91E  2A06               	incf	strcat@cp+1,f,c
  1771  00E920  D000               	goto	l3766
  1772  00E922                     l3766:
  1773  00E922  C005  FFD9         	movff	strcat@cp,fsr2l
  1774  00E926  C006  FFDA         	movff	strcat@cp+1,fsr2h
  1775  00E92A  50DF               	movf	indf2,w,c
  1776  00E92C  B4D8               	btfsc	status,2,c
  1777  00E92E  D007               	goto	l3770
  1778  00E930  D7F5               	goto	l3764
  1779  00E932  D005               	goto	l3770
  1780  00E934                     l3768:
  1781  00E934  4A05               	infsnz	strcat@cp,f,c
  1782  00E936  2A06               	incf	strcat@cp+1,f,c
  1783  00E938  4A03               	infsnz	strcat@from,f,c
  1784  00E93A  2A04               	incf	strcat@from+1,f,c
  1785  00E93C  D000               	goto	l3770
  1786  00E93E                     l3770:
  1787  00E93E  C003  FFD9         	movff	strcat@from,fsr2l
  1788  00E942  C004  FFDA         	movff	strcat@from+1,fsr2h
  1789  00E946  C005  FFE1         	movff	strcat@cp,fsr1l
  1790  00E94A  C006  FFE2         	movff	strcat@cp+1,fsr1h
  1791  00E94E  CFDF FFE7          	movff	indf2,indf1
  1792  00E952  50E7               	movf	indf1,w,c
  1793  00E954  A4D8               	btfss	status,2,c
  1794  00E956  D7EE               	goto	l3768
  1795                           
  1796                           ;	Return value of _strcat is never used
  1797  00E958  0012               	return		;funcret
  1798  00E95A                     __end_of_strcat:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           postinc0	equ	0xFEE
  1805                           wreg	equ	0xFE8
  1806                           indf1	equ	0xFE7
  1807                           postdec1	equ	0xFE5
  1808                           fsr1h	equ	0xFE2
  1809                           fsr1l	equ	0xFE1
  1810                           indf2	equ	0xFDF
  1811                           fsr2h	equ	0xFDA
  1812                           fsr2l	equ	0xFD9
  1813                           status	equ	0xFD8
  1814                           
  1815 ;; *************** function _button_hash *****************
  1816 ;; Defined at:
  1817 ;;		line 722 in file "main.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;		None               void
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    9
  1838 ;; This function calls:
  1839 ;;		_activity_home
  1840 ;;		_pin_input_validator
  1841 ;;		_pin_set
  1842 ;;		_reset_home_callback
  1843 ;; This function is called by:
  1844 ;;		_keyboard_control
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text5
  1849  00E62E                     __ptext5:
  1850                           	opt stack 0
  1851  00E62E                     _button_hash:
  1852                           	opt stack 20
  1853                           
  1854                           ;main.c: 724: reset_home_callback();
  1855                           
  1856                           ;incstack = 0
  1857  00E62E  EC40  F071         	call	_reset_home_callback	;wreg free
  1858                           
  1859                           ;main.c: 726: if(activity == 1){
  1860  00E632  0429               	decf	_activity,w,c
  1861  00E634  102A               	iorwf	_activity+1,w,c
  1862  00E636  A4D8               	btfss	status,2,c
  1863  00E638  D003               	goto	l3920
  1864                           
  1865                           ;main.c: 727: pin_input_validator();
  1866  00E63A  EC00  F072         	call	_pin_input_validator	;wreg free
  1867                           
  1868                           ;main.c: 728: }
  1869  00E63E  0012               	return	
  1870  00E640                     l3920:
  1871                           
  1872                           ;main.c: 729: else if(activity == 6){
  1873  00E640  0E06               	movlw	6
  1874  00E642  1829               	xorwf	_activity,w,c
  1875  00E644  102A               	iorwf	_activity+1,w,c
  1876  00E646  A4D8               	btfss	status,2,c
  1877  00E648  D003               	goto	l3924
  1878                           
  1879                           ;main.c: 730: pin_set();
  1880  00E64A  EC88  F071         	call	_pin_set	;wreg free
  1881                           
  1882                           ;main.c: 731: }
  1883  00E64E  0012               	return	
  1884  00E650                     l3924:
  1885                           
  1886                           ;main.c: 732: else if(activity == 10 || activity == 11){
  1887  00E650  0E0A               	movlw	10
  1888  00E652  1829               	xorwf	_activity,w,c
  1889  00E654  102A               	iorwf	_activity+1,w,c
  1890  00E656  B4D8               	btfsc	status,2,c
  1891  00E658  D005               	goto	l3928
  1892  00E65A  0E0B               	movlw	11
  1893  00E65C  1829               	xorwf	_activity,w,c
  1894  00E65E  102A               	iorwf	_activity+1,w,c
  1895  00E660  A4D8               	btfss	status,2,c
  1896  00E662  0012               	return	
  1897  00E664                     l3928:
  1898                           
  1899                           ;main.c: 733: activity_home();
  1900  00E664  ECEB  F071         	call	_activity_home	;wreg free
  1901  00E668  0012               	return	
  1902  00E66A  0012               	return		;funcret
  1903  00E66C                     __end_of_button_hash:
  1904                           	opt stack 0
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           indf1	equ	0xFE7
  1912                           postdec1	equ	0xFE5
  1913                           fsr1h	equ	0xFE2
  1914                           fsr1l	equ	0xFE1
  1915                           indf2	equ	0xFDF
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _pin_set *****************
  1921 ;; Defined at:
  1922 ;;		line 386 in file "main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    7
  1943 ;; This function calls:
  1944 ;;		_activity_home
  1945 ;;		_strcpy
  1946 ;; This function is called by:
  1947 ;;		_button_hash
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text6
  1952  00E310                     __ptext6:
  1953                           	opt stack 0
  1954  00E310                     _pin_set:
  1955                           	opt stack 21
  1956                           
  1957                           ;main.c: 388: strcpy(pin, pin_input);
  1958                           
  1959                           ;incstack = 0
  1960  00E310  0E9A               	movlw	low _pin
  1961  00E312  6E01               	movwf	strcpy@to,c
  1962  00E314  0E00               	movlw	high _pin
  1963  00E316  6E02               	movwf	strcpy@to+1,c
  1964  00E318  0E9F               	movlw	low _pin_input
  1965  00E31A  6E03               	movwf	strcpy@from,c
  1966  00E31C  0E00               	movlw	high _pin_input
  1967  00E31E  6E04               	movwf	strcpy@from+1,c
  1968  00E320  EC1E  F074         	call	_strcpy	;wreg free
  1969                           
  1970                           ;main.c: 389: activity_home();
  1971  00E324  ECEB  F071         	call	_activity_home	;wreg free
  1972  00E328  0012               	return		;funcret
  1973  00E32A                     __end_of_pin_set:
  1974                           	opt stack 0
  1975                           tblptru	equ	0xFF8
  1976                           tblptrh	equ	0xFF7
  1977                           tblptrl	equ	0xFF6
  1978                           tablat	equ	0xFF5
  1979                           postinc0	equ	0xFEE
  1980                           wreg	equ	0xFE8
  1981                           indf1	equ	0xFE7
  1982                           postdec1	equ	0xFE5
  1983                           fsr1h	equ	0xFE2
  1984                           fsr1l	equ	0xFE1
  1985                           indf2	equ	0xFDF
  1986                           fsr2h	equ	0xFDA
  1987                           fsr2l	equ	0xFD9
  1988                           status	equ	0xFD8
  1989                           
  1990 ;; *************** function _pin_input_validator *****************
  1991 ;; Defined at:
  1992 ;;		line 393 in file "main.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;		None               void
  1999 ;; Registers used:
  2000 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    8
  2013 ;; This function calls:
  2014 ;;		_activity_menu
  2015 ;;		_activity_pin
  2016 ;;		_strcmp
  2017 ;; This function is called by:
  2018 ;;		_button_hash
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text7
  2023  00E400                     __ptext7:
  2024                           	opt stack 0
  2025  00E400                     _pin_input_validator:
  2026                           	opt stack 20
  2027                           
  2028                           ;main.c: 395: if( strcmp(pin, pin_input) == 0 ){
  2029                           
  2030                           ;incstack = 0
  2031  00E400  0E9A               	movlw	low _pin
  2032  00E402  6E01               	movwf	strcmp@s1,c
  2033  00E404  0E00               	movlw	high _pin
  2034  00E406  6E02               	movwf	strcmp@s1+1,c
  2035  00E408  0E9F               	movlw	low _pin_input
  2036  00E40A  6E03               	movwf	strcmp@s2,c
  2037  00E40C  0E00               	movlw	high _pin_input
  2038  00E40E  6E04               	movwf	strcmp@s2+1,c
  2039  00E410  EC47  F075         	call	_strcmp	;wreg free
  2040  00E414  5001               	movf	?_strcmp,w,c
  2041  00E416  1002               	iorwf	?_strcmp+1,w,c
  2042  00E418  A4D8               	btfss	status,2,c
  2043  00E41A  D003               	goto	l3650
  2044                           
  2045                           ;main.c: 396: activity_menu();
  2046  00E41C  EC49  F079         	call	_activity_menu	;wreg free
  2047                           
  2048                           ;main.c: 397: }
  2049  00E420  0012               	return	
  2050  00E422                     l3650:
  2051                           
  2052                           ;main.c: 398: else {
  2053                           ;main.c: 399: activity_pin();
  2054  00E422  ECF9  F074         	call	_activity_pin	;wreg free
  2055  00E426  0012               	return	
  2056  00E428  0012               	return		;funcret
  2057  00E42A                     __end_of_pin_input_validator:
  2058                           	opt stack 0
  2059                           tblptru	equ	0xFF8
  2060                           tblptrh	equ	0xFF7
  2061                           tblptrl	equ	0xFF6
  2062                           tablat	equ	0xFF5
  2063                           postinc0	equ	0xFEE
  2064                           wreg	equ	0xFE8
  2065                           indf1	equ	0xFE7
  2066                           postdec1	equ	0xFE5
  2067                           fsr1h	equ	0xFE2
  2068                           fsr1l	equ	0xFE1
  2069                           indf2	equ	0xFDF
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _strcmp *****************
  2075 ;; Defined at:
  2076 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  2079 ;;		 -> pin(5), 
  2080 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  2081 ;;		 -> pin_input(5), 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  r               1    5[COMRAM] char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2    0[COMRAM] int 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;Total ram usage:        6 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_pin_input_validator
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text8
  2107  00EA8E                     __ptext8:
  2108                           	opt stack 0
  2109  00EA8E                     _strcmp:
  2110                           	opt stack 27
  2111                           
  2112                           ;incstack = 0
  2113  00EA8E  D005               	goto	l3576
  2114  00EA90                     l3574:
  2115  00EA90  4A01               	infsnz	strcmp@s1,f,c
  2116  00EA92  2A02               	incf	strcmp@s1+1,f,c
  2117  00EA94  4A03               	infsnz	strcmp@s2,f,c
  2118  00EA96  2A04               	incf	strcmp@s2+1,f,c
  2119  00EA98  D000               	goto	l3576
  2120  00EA9A                     l3576:
  2121  00EA9A  C001  FFD9         	movff	strcmp@s1,fsr2l
  2122  00EA9E  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  2123  00EAA2  50DF               	movf	indf2,w,c
  2124  00EAA4  6E05               	movwf	??_strcmp& (0+255),c
  2125  00EAA6  C003  FFD9         	movff	strcmp@s2,fsr2l
  2126  00EAAA  C004  FFDA         	movff	strcmp@s2+1,fsr2h
  2127  00EAAE  50DF               	movf	indf2,w,c
  2128  00EAB0  0800               	sublw	0
  2129  00EAB2  2405               	addwf	??_strcmp,w,c
  2130  00EAB4  6E06               	movwf	strcmp@r,c
  2131  00EAB6  5006               	movf	strcmp@r,w,c
  2132  00EAB8  A4D8               	btfss	status,2,c
  2133  00EABA  D009               	goto	l3580
  2134  00EABC  C001  FFD9         	movff	strcmp@s1,fsr2l
  2135  00EAC0  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  2136  00EAC4  50DF               	movf	indf2,w,c
  2137  00EAC6  B4D8               	btfsc	status,2,c
  2138  00EAC8  D002               	goto	l3580
  2139  00EACA  D7E2               	goto	l3574
  2140  00EACC  D000               	goto	l3580
  2141  00EACE                     l3580:
  2142  00EACE  5006               	movf	strcmp@r,w,c
  2143  00EAD0  6E01               	movwf	?_strcmp,c
  2144  00EAD2  6A02               	clrf	?_strcmp+1,c
  2145  00EAD4  BE01               	btfsc	?_strcmp,7,c
  2146  00EAD6  0602               	decf	?_strcmp+1,f,c
  2147  00EAD8  0012               	return	
  2148  00EADA  0012               	return		;funcret
  2149  00EADC                     __end_of_strcmp:
  2150                           	opt stack 0
  2151                           tblptru	equ	0xFF8
  2152                           tblptrh	equ	0xFF7
  2153                           tblptrl	equ	0xFF6
  2154                           tablat	equ	0xFF5
  2155                           postinc0	equ	0xFEE
  2156                           wreg	equ	0xFE8
  2157                           indf1	equ	0xFE7
  2158                           postdec1	equ	0xFE5
  2159                           fsr1h	equ	0xFE2
  2160                           fsr1l	equ	0xFE1
  2161                           indf2	equ	0xFDF
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _button_asterisk *****************
  2167 ;; Defined at:
  2168 ;;		line 715 in file "main.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;Total ram usage:        0 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    1
  2189 ;; This function calls:
  2190 ;;		_reset_home_callback
  2191 ;; This function is called by:
  2192 ;;		_keyboard_control
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text9
  2197  00E27A                     __ptext9:
  2198                           	opt stack 0
  2199  00E27A                     _button_asterisk:
  2200                           	opt stack 28
  2201                           
  2202                           ;main.c: 717: reset_home_callback();
  2203                           
  2204                           ;incstack = 0
  2205  00E27A  EC40  F071         	call	_reset_home_callback	;wreg free
  2206  00E27E  0012               	return		;funcret
  2207  00E280                     __end_of_button_asterisk:
  2208                           	opt stack 0
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           indf1	equ	0xFE7
  2216                           postdec1	equ	0xFE5
  2217                           fsr1h	equ	0xFE2
  2218                           fsr1l	equ	0xFE1
  2219                           indf2	equ	0xFDF
  2220                           fsr2h	equ	0xFDA
  2221                           fsr2l	equ	0xFD9
  2222                           status	equ	0xFD8
  2223                           
  2224 ;; *************** function _button_D *****************
  2225 ;; Defined at:
  2226 ;;		line 707 in file "main.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;		None               void
  2233 ;; Registers used:
  2234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;Total ram usage:        0 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    7
  2247 ;; This function calls:
  2248 ;;		_activity_home
  2249 ;;		_reset_home_callback
  2250 ;; This function is called by:
  2251 ;;		_keyboard_control
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text10
  2256  00E28A                     __ptext10:
  2257                           	opt stack 0
  2258  00E28A                     _button_D:
  2259                           	opt stack 22
  2260                           
  2261                           ;main.c: 710: reset_home_callback();
  2262                           
  2263                           ;incstack = 0
  2264  00E28A  EC40  F071         	call	_reset_home_callback	;wreg free
  2265                           
  2266                           ;main.c: 711: activity_home();
  2267  00E28E  ECEB  F071         	call	_activity_home	;wreg free
  2268  00E292  0012               	return		;funcret
  2269  00E294                     __end_of_button_D:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           indf1	equ	0xFE7
  2278                           postdec1	equ	0xFE5
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           indf2	equ	0xFDF
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _button_C *****************
  2287 ;; Defined at:
  2288 ;;		line 696 in file "main.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    8
  2309 ;; This function calls:
  2310 ;;		_activity_menu
  2311 ;;		_reset_home_callback
  2312 ;; This function is called by:
  2313 ;;		_keyboard_control
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text11
  2318  00E32A                     __ptext11:
  2319                           	opt stack 0
  2320  00E32A                     _button_C:
  2321                           	opt stack 21
  2322                           
  2323                           ;main.c: 699: reset_home_callback();
  2324                           
  2325                           ;incstack = 0
  2326  00E32A  EC40  F071         	call	_reset_home_callback	;wreg free
  2327                           
  2328                           ;main.c: 701: if(activity != 0 && activity != 1){
  2329  00E32E  5029               	movf	_activity,w,c
  2330  00E330  102A               	iorwf	_activity+1,w,c
  2331  00E332  B4D8               	btfsc	status,2,c
  2332  00E334  0012               	return	
  2333  00E336  0429               	decf	_activity,w,c
  2334  00E338  102A               	iorwf	_activity+1,w,c
  2335  00E33A  B4D8               	btfsc	status,2,c
  2336  00E33C  0012               	return	
  2337                           
  2338                           ;main.c: 702: activity_menu();
  2339  00E33E  EC49  F079         	call	_activity_menu	;wreg free
  2340  00E342  0012               	return	
  2341  00E344  0012               	return		;funcret
  2342  00E346                     __end_of_button_C:
  2343                           	opt stack 0
  2344                           tblptru	equ	0xFF8
  2345                           tblptrh	equ	0xFF7
  2346                           tblptrl	equ	0xFF6
  2347                           tablat	equ	0xFF5
  2348                           postinc0	equ	0xFEE
  2349                           wreg	equ	0xFE8
  2350                           indf1	equ	0xFE7
  2351                           postdec1	equ	0xFE5
  2352                           fsr1h	equ	0xFE2
  2353                           fsr1l	equ	0xFE1
  2354                           indf2	equ	0xFDF
  2355                           fsr2h	equ	0xFDA
  2356                           fsr2l	equ	0xFD9
  2357                           status	equ	0xFD8
  2358                           
  2359 ;; *************** function _activity_menu *****************
  2360 ;; Defined at:
  2361 ;;		line 212 in file "main.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;		None               void
  2368 ;; Registers used:
  2369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    7
  2382 ;; This function calls:
  2383 ;;		_lcd_init
  2384 ;;		_lcd_write
  2385 ;;		_menu_selector_0
  2386 ;; This function is called by:
  2387 ;;		_pin_input_validator
  2388 ;;		_button_C
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text12
  2393  00F292                     __ptext12:
  2394                           	opt stack 0
  2395  00F292                     _activity_menu:
  2396                           	opt stack 20
  2397                           
  2398                           ;main.c: 214: activity = 2;
  2399                           
  2400                           ;incstack = 0
  2401  00F292  0E00               	movlw	0
  2402  00F294  6E2A               	movwf	_activity+1,c
  2403  00F296  0E02               	movlw	2
  2404  00F298  6E29               	movwf	_activity,c
  2405                           
  2406                           ;main.c: 215: lcd_init();
  2407  00F29A  EC87  F078         	call	_lcd_init	;wreg free
  2408                           
  2409                           ;main.c: 216: lcd_write(2,1,"Activar");
  2410  00F29E  0E00               	movlw	0
  2411  00F2A0  6E0C               	movwf	lcd_write@column+1,c
  2412  00F2A2  0E02               	movlw	2
  2413  00F2A4  6E0B               	movwf	lcd_write@column,c
  2414  00F2A6  0E00               	movlw	0
  2415  00F2A8  6E0E               	movwf	lcd_write@row+1,c
  2416  00F2AA  0E01               	movlw	1
  2417  00F2AC  6E0D               	movwf	lcd_write@row,c
  2418  00F2AE  0E65               	movlw	low STR_16
  2419  00F2B0  6E0F               	movwf	lcd_write@string,c
  2420  00F2B2  0EFF               	movlw	high STR_16
  2421  00F2B4  6E10               	movwf	lcd_write@string+1,c
  2422  00F2B6  EC7C  F071         	call	_lcd_write	;wreg free
  2423                           
  2424                           ;main.c: 217: lcd_write(2,2,"Reloj");
  2425  00F2BA  0E00               	movlw	0
  2426  00F2BC  6E0C               	movwf	lcd_write@column+1,c
  2427  00F2BE  0E02               	movlw	2
  2428  00F2C0  6E0B               	movwf	lcd_write@column,c
  2429  00F2C2  0E00               	movlw	0
  2430  00F2C4  6E0E               	movwf	lcd_write@row+1,c
  2431  00F2C6  0E02               	movlw	2
  2432  00F2C8  6E0D               	movwf	lcd_write@row,c
  2433  00F2CA  0EB9               	movlw	low STR_17
  2434  00F2CC  6E0F               	movwf	lcd_write@string,c
  2435  00F2CE  0EFF               	movlw	high STR_17
  2436  00F2D0  6E10               	movwf	lcd_write@string+1,c
  2437  00F2D2  EC7C  F071         	call	_lcd_write	;wreg free
  2438                           
  2439                           ;main.c: 218: lcd_write(10,1,"Pin");
  2440  00F2D6  0E00               	movlw	0
  2441  00F2D8  6E0C               	movwf	lcd_write@column+1,c
  2442  00F2DA  0E0A               	movlw	10
  2443  00F2DC  6E0B               	movwf	lcd_write@column,c
  2444  00F2DE  0E00               	movlw	0
  2445  00F2E0  6E0E               	movwf	lcd_write@row+1,c
  2446  00F2E2  0E01               	movlw	1
  2447  00F2E4  6E0D               	movwf	lcd_write@row,c
  2448  00F2E6  0EE7               	movlw	low STR_18
  2449  00F2E8  6E0F               	movwf	lcd_write@string,c
  2450  00F2EA  0EFF               	movlw	high STR_18
  2451  00F2EC  6E10               	movwf	lcd_write@string+1,c
  2452  00F2EE  EC7C  F071         	call	_lcd_write	;wreg free
  2453                           
  2454                           ;main.c: 219: lcd_write(10,2,"Alarma");
  2455  00F2F2  0E00               	movlw	0
  2456  00F2F4  6E0C               	movwf	lcd_write@column+1,c
  2457  00F2F6  0E0A               	movlw	10
  2458  00F2F8  6E0B               	movwf	lcd_write@column,c
  2459  00F2FA  0E00               	movlw	0
  2460  00F2FC  6E0E               	movwf	lcd_write@row+1,c
  2461  00F2FE  0E02               	movlw	2
  2462  00F300  6E0D               	movwf	lcd_write@row,c
  2463  00F302  0EA5               	movlw	low STR_19
  2464  00F304  6E0F               	movwf	lcd_write@string,c
  2465  00F306  0EFF               	movlw	high STR_19
  2466  00F308  6E10               	movwf	lcd_write@string+1,c
  2467  00F30A  EC7C  F071         	call	_lcd_write	;wreg free
  2468                           
  2469                           ;main.c: 220: menu_selector_0();
  2470  00F30E  EC36  F073         	call	_menu_selector_0	;wreg free
  2471  00F312  0012               	return		;funcret
  2472  00F314                     __end_of_activity_menu:
  2473                           	opt stack 0
  2474                           tblptru	equ	0xFF8
  2475                           tblptrh	equ	0xFF7
  2476                           tblptrl	equ	0xFF6
  2477                           tablat	equ	0xFF5
  2478                           postinc0	equ	0xFEE
  2479                           wreg	equ	0xFE8
  2480                           indf1	equ	0xFE7
  2481                           postdec1	equ	0xFE5
  2482                           fsr1h	equ	0xFE2
  2483                           fsr1l	equ	0xFE1
  2484                           indf2	equ	0xFDF
  2485                           fsr2h	equ	0xFDA
  2486                           fsr2l	equ	0xFD9
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function _button_B *****************
  2490 ;; Defined at:
  2491 ;;		line 655 in file "main.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2509 ;;Total ram usage:        2 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    9
  2512 ;; This function calls:
  2513 ;;		_button_B_menu
  2514 ;;		_button_B_submenu_activation
  2515 ;;		_button_B_submenu_date_and_time_config
  2516 ;;		_button_B_submenu_pin_config
  2517 ;;		_button_B_submenu_siren_config
  2518 ;;		_button_B_submenu_siren_tone
  2519 ;;		_button_B_submenu_siren_volume
  2520 ;;		_date_set
  2521 ;;		_reset_home_callback
  2522 ;; This function is called by:
  2523 ;;		_keyboard_control
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text13
  2528  00F092                     __ptext13:
  2529                           	opt stack 0
  2530  00F092                     _button_B:
  2531                           	opt stack 20
  2532                           
  2533                           ;main.c: 657: reset_home_callback();
  2534                           
  2535                           ;incstack = 0
  2536  00F092  EC40  F071         	call	_reset_home_callback	;wreg free
  2537                           
  2538                           ;main.c: 659: switch(activity){
  2539  00F096  D018               	goto	l3894
  2540  00F098                     l3876:
  2541                           
  2542                           ;main.c: 662: button_B_menu();
  2543  00F098  EC65  F074         	call	_button_B_menu	;wreg free
  2544                           
  2545                           ;main.c: 663: break;
  2546  00F09C  0012               	return	
  2547  00F09E                     l3878:
  2548                           
  2549                           ;main.c: 666: button_B_submenu_date_and_time_config();
  2550  00F09E  EC43  F072         	call	_button_B_submenu_date_and_time_config	;wreg free
  2551                           
  2552                           ;main.c: 667: break;
  2553  00F0A2  0012               	return	
  2554  00F0A4                     l3880:
  2555                           
  2556                           ;main.c: 670: button_B_submenu_activation();
  2557  00F0A4  ECC0  F072         	call	_button_B_submenu_activation	;wreg free
  2558                           
  2559                           ;main.c: 671: break;
  2560  00F0A8  0012               	return	
  2561  00F0AA                     l3882:
  2562                           
  2563                           ;main.c: 674: button_B_submenu_pin_config();
  2564  00F0AA  ECA6  F072         	call	_button_B_submenu_pin_config	;wreg free
  2565                           
  2566                           ;main.c: 675: break;
  2567  00F0AE  0012               	return	
  2568  00F0B0                     l3884:
  2569                           
  2570                           ;main.c: 678: button_B_submenu_siren_config();
  2571  00F0B0  EC5B  F072         	call	_button_B_submenu_siren_config	;wreg free
  2572                           
  2573                           ;main.c: 679: break;
  2574  00F0B4  0012               	return	
  2575  00F0B6                     l3886:
  2576                           
  2577                           ;main.c: 682: button_B_submenu_siren_volume();
  2578  00F0B6  ECFA  F072         	call	_button_B_submenu_siren_volume	;wreg free
  2579                           
  2580                           ;main.c: 683: break;
  2581  00F0BA  0012               	return	
  2582  00F0BC                     l3888:
  2583                           
  2584                           ;main.c: 686: button_B_submenu_siren_tone();
  2585  00F0BC  ECDD  F072         	call	_button_B_submenu_siren_tone	;wreg free
  2586                           
  2587                           ;main.c: 687: break;
  2588  00F0C0  0012               	return	
  2589  00F0C2                     l3890:
  2590                           
  2591                           ;main.c: 690: date_set();
  2592  00F0C2  ECA7  F07A         	call	_date_set	;wreg free
  2593                           
  2594                           ;main.c: 692: }
  2595                           
  2596                           ;main.c: 691: break;
  2597  00F0C6  0012               	return	
  2598  00F0C8                     l3894:
  2599  00F0C8  C029  F026         	movff	_activity,??_button_B
  2600  00F0CC  C02A  F027         	movff	_activity+1,??_button_B+1
  2601                           
  2602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2603                           ; Switch size 1, requested type "space"
  2604                           ; Number of cases is 1, Range of values is 0 to 0
  2605                           ; switch strategies available:
  2606                           ; Name         Instructions Cycles
  2607                           ; simple_byte            4     3 (average)
  2608                           ;	Chosen strategy is simple_byte
  2609  00F0D0  5027               	movf	??_button_B+1,w,c
  2610  00F0D2  0A00               	xorlw	0	; case 0
  2611  00F0D4  A4D8               	btfss	status,2,c
  2612  00F0D6  0012               	return	
  2613                           
  2614                           ; Switch size 1, requested type "space"
  2615                           ; Number of cases is 8, Range of values is 2 to 10
  2616                           ; switch strategies available:
  2617                           ; Name         Instructions Cycles
  2618                           ; simple_byte           25    13 (average)
  2619                           ;	Chosen strategy is simple_byte
  2620  00F0D8  5026               	movf	??_button_B,w,c
  2621  00F0DA  0A02               	xorlw	2	; case 2
  2622  00F0DC  B4D8               	btfsc	status,2,c
  2623  00F0DE  D7DC               	goto	l3876
  2624  00F0E0  0A01               	xorlw	1	; case 3
  2625  00F0E2  B4D8               	btfsc	status,2,c
  2626  00F0E4  D7DC               	goto	l3878
  2627  00F0E6  0A07               	xorlw	7	; case 4
  2628  00F0E8  B4D8               	btfsc	status,2,c
  2629  00F0EA  D7DC               	goto	l3880
  2630  00F0EC  0A01               	xorlw	1	; case 5
  2631  00F0EE  B4D8               	btfsc	status,2,c
  2632  00F0F0  D7DC               	goto	l3882
  2633  00F0F2  0A02               	xorlw	2	; case 7
  2634  00F0F4  B4D8               	btfsc	status,2,c
  2635  00F0F6  D7DC               	goto	l3884
  2636  00F0F8  0A0F               	xorlw	15	; case 8
  2637  00F0FA  B4D8               	btfsc	status,2,c
  2638  00F0FC  D7DC               	goto	l3886
  2639  00F0FE  0A01               	xorlw	1	; case 9
  2640  00F100  B4D8               	btfsc	status,2,c
  2641  00F102  D7DC               	goto	l3888
  2642  00F104  0A03               	xorlw	3	; case 10
  2643  00F106  A4D8               	btfss	status,2,c
  2644  00F108  0012               	return	
  2645  00F10A  D7DB               	goto	l3890
  2646  00F10C  0012               	return		;funcret
  2647  00F10E                     __end_of_button_B:
  2648                           	opt stack 0
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           indf1	equ	0xFE7
  2656                           postdec1	equ	0xFE5
  2657                           fsr1h	equ	0xFE2
  2658                           fsr1l	equ	0xFE1
  2659                           indf2	equ	0xFDF
  2660                           fsr2h	equ	0xFDA
  2661                           fsr2l	equ	0xFD9
  2662                           status	equ	0xFD8
  2663                           
  2664 ;; *************** function _date_set *****************
  2665 ;; Defined at:
  2666 ;;		line 303 in file "main.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;		None               void
  2673 ;; Registers used:
  2674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2684 ;;Total ram usage:        2 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    6
  2687 ;; This function calls:
  2688 ;;		_Write_RTC
  2689 ;;		_lcd_gotoxy
  2690 ;;		_lcd_write
  2691 ;;		_sprintf
  2692 ;; This function is called by:
  2693 ;;		_button_B
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text14
  2698  00F54E                     __ptext14:
  2699                           	opt stack 0
  2700  00F54E                     _date_set:
  2701                           	opt stack 22
  2702                           
  2703                           ;main.c: 305: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  2704                           
  2705                           ;incstack = 0
  2706  00F54E  0E86               	movlw	low _buffer1
  2707  00F550  6E0D               	movwf	sprintf@sp,c
  2708  00F552  0E00               	movlw	high _buffer1
  2709  00F554  6E0E               	movwf	sprintf@sp+1,c
  2710  00F556  0E2C               	movlw	low STR_26
  2711  00F558  6E0F               	movwf	sprintf@f,c
  2712  00F55A  0EFF               	movlw	high STR_26
  2713  00F55C  6E10               	movwf	sprintf@f+1,c
  2714  00F55E  C050  F011         	movff	_dia,?_sprintf+4
  2715  00F562  C051  F012         	movff	_dia+1,?_sprintf+5
  2716  00F566  C056  F013         	movff	_mes,?_sprintf+6
  2717  00F56A  C057  F014         	movff	_mes+1,?_sprintf+7
  2718  00F56E  C04E  F015         	movff	_anio,?_sprintf+8
  2719  00F572  C04F  F016         	movff	_anio+1,?_sprintf+9
  2720  00F576  EC44  F07E         	call	_sprintf	;wreg free
  2721                           
  2722                           ;main.c: 306: lcd_write(1,2,buffer1);
  2723  00F57A  0E00               	movlw	0
  2724  00F57C  6E0C               	movwf	lcd_write@column+1,c
  2725  00F57E  0E01               	movlw	1
  2726  00F580  6E0B               	movwf	lcd_write@column,c
  2727  00F582  0E00               	movlw	0
  2728  00F584  6E0E               	movwf	lcd_write@row+1,c
  2729  00F586  0E02               	movlw	2
  2730  00F588  6E0D               	movwf	lcd_write@row,c
  2731  00F58A  0E86               	movlw	low _buffer1
  2732  00F58C  6E0F               	movwf	lcd_write@string,c
  2733  00F58E  0E00               	movlw	high _buffer1
  2734  00F590  6E10               	movwf	lcd_write@string+1,c
  2735  00F592  EC7C  F071         	call	_lcd_write	;wreg free
  2736                           
  2737                           ;main.c: 307: lcd_gotoxy(cursor_horizontal_position, 2);
  2738  00F596  0E02               	movlw	2
  2739  00F598  6E05               	movwf	lcd_gotoxy@y,c
  2740  00F59A  5033               	movf	_cursor_horizontal_position,w,c
  2741  00F59C  ECC5  F071         	call	_lcd_gotoxy
  2742                           
  2743                           ;main.c: 309: switch(cursor_horizontal_position){
  2744  00F5A0  D008               	goto	l3632
  2745  00F5A2                     l3626:
  2746                           
  2747                           ;main.c: 312: dia+=10;
  2748  00F5A2  0E0A               	movlw	10
  2749  00F5A4  2650               	addwf	_dia,f,c
  2750  00F5A6  0E00               	movlw	0
  2751  00F5A8  2251               	addwfc	_dia+1,f,c
  2752                           
  2753                           ;main.c: 313: break;
  2754  00F5AA  D013               	goto	l3634
  2755  00F5AC                     l3628:
  2756                           
  2757                           ;main.c: 316: dia++;
  2758  00F5AC  4A50               	infsnz	_dia,f,c
  2759  00F5AE  2A51               	incf	_dia+1,f,c
  2760                           
  2761                           ;main.c: 319: }
  2762                           
  2763                           ;main.c: 317: break;
  2764  00F5B0  D010               	goto	l3634
  2765  00F5B2                     l3632:
  2766  00F5B2  C033  F024         	movff	_cursor_horizontal_position,??_date_set
  2767  00F5B6  C034  F025         	movff	_cursor_horizontal_position+1,??_date_set+1
  2768                           
  2769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2770                           ; Switch size 1, requested type "space"
  2771                           ; Number of cases is 1, Range of values is 0 to 0
  2772                           ; switch strategies available:
  2773                           ; Name         Instructions Cycles
  2774                           ; simple_byte            4     3 (average)
  2775                           ;	Chosen strategy is simple_byte
  2776  00F5BA  5025               	movf	??_date_set+1,w,c
  2777  00F5BC  0A00               	xorlw	0	; case 0
  2778  00F5BE  A4D8               	btfss	status,2,c
  2779  00F5C0  D008               	goto	l3634
  2780                           
  2781                           ; Switch size 1, requested type "space"
  2782                           ; Number of cases is 2, Range of values is 1 to 2
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte            7     4 (average)
  2786                           ;	Chosen strategy is simple_byte
  2787  00F5C2  5024               	movf	??_date_set,w,c
  2788  00F5C4  0A01               	xorlw	1	; case 1
  2789  00F5C6  B4D8               	btfsc	status,2,c
  2790  00F5C8  D7EC               	goto	l3626
  2791  00F5CA  0A03               	xorlw	3	; case 2
  2792  00F5CC  B4D8               	btfsc	status,2,c
  2793  00F5CE  D7EE               	goto	l3628
  2794  00F5D0  D000               	goto	l3634
  2795  00F5D2                     l3634:
  2796                           
  2797                           ;main.c: 321: Write_RTC();
  2798  00F5D2  EC96  F07D         	call	_Write_RTC	;wreg free
  2799                           
  2800                           ;main.c: 322: _delay((unsigned long)((98)*(8000000/4000.0)));
  2801  00F5D6  0EFF               	movlw	255
  2802  00F5D8  6E24               	movwf	??_date_set& (0+255),c
  2803  00F5DA  0E8A               	movlw	138
  2804  00F5DC                     u2657:
  2805  00F5DC  2EE8               	decfsz	wreg,f,c
  2806  00F5DE  D7FE               	goto	u2657
  2807  00F5E0  2E24               	decfsz	??_date_set& (0+255),f,c
  2808  00F5E2  D7FC               	goto	u2657
  2809  00F5E4  D000               	nop2	
  2810  00F5E6  0012               	return		;funcret
  2811  00F5E8                     __end_of_date_set:
  2812                           	opt stack 0
  2813                           tblptru	equ	0xFF8
  2814                           tblptrh	equ	0xFF7
  2815                           tblptrl	equ	0xFF6
  2816                           tablat	equ	0xFF5
  2817                           postinc0	equ	0xFEE
  2818                           wreg	equ	0xFE8
  2819                           indf1	equ	0xFE7
  2820                           postdec1	equ	0xFE5
  2821                           fsr1h	equ	0xFE2
  2822                           fsr1l	equ	0xFE1
  2823                           indf2	equ	0xFDF
  2824                           fsr2h	equ	0xFDA
  2825                           fsr2l	equ	0xFD9
  2826                           status	equ	0xFD8
  2827                           
  2828 ;; *************** function _Write_RTC *****************
  2829 ;; Defined at:
  2830 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;		None               void
  2837 ;; Registers used:
  2838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;Total ram usage:        0 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    2
  2851 ;; This function calls:
  2852 ;;		_RtccWrOn
  2853 ;;		_RtccWriteDate
  2854 ;;		_RtccWriteTime
  2855 ;;		___awdiv
  2856 ;; This function is called by:
  2857 ;;		_date_set
  2858 ;;		_setup
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text15
  2863  00FB2C                     __ptext15:
  2864                           	opt stack 0
  2865  00FB2C                     _Write_RTC:
  2866                           	opt stack 27
  2867                           
  2868                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2869                           
  2870                           ;incstack = 0
  2871  00FB2C  EC68  F071         	call	_RtccWrOn	;wreg free
  2872                           
  2873                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2874  00FB30  80A3               	bsf	4003,0,c	;volatile
  2875                           
  2876                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2877  00FB32  C03F  F001         	movff	_segundo,___awdiv@dividend
  2878  00FB36  C040  F002         	movff	_segundo+1,___awdiv@dividend+1
  2879  00FB3A  0E00               	movlw	0
  2880  00FB3C  6E04               	movwf	___awdiv@divisor+1,c
  2881  00FB3E  0E0A               	movlw	10
  2882  00FB40  6E03               	movwf	___awdiv@divisor,c
  2883  00FB42  EC5C  F07A         	call	___awdiv	;wreg free
  2884  00FB46  5001               	movf	?___awdiv,w,c
  2885  00FB48  6E5D               	movwf	_segundo_d,c
  2886                           
  2887                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2888  00FB4A  505D               	movf	_segundo_d,w,c
  2889  00FB4C  0D0A               	mullw	10
  2890  00FB4E  50F3               	movf	prodl,w,c
  2891  00FB50  0800               	sublw	0
  2892  00FB52  243F               	addwf	_segundo,w,c
  2893  00FB54  6E5E               	movwf	_segundo_u,c
  2894                           
  2895                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2896  00FB56  505D               	movf	_segundo_d,w,c
  2897  00FB58  0D10               	mullw	16
  2898  00FB5A  50F3               	movf	prodl,w,c
  2899  00FB5C  245E               	addwf	_segundo_u,w,c
  2900  00FB5E  6E4B               	movwf	_RtccTime+1,c
  2901                           
  2902                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2903  00FB60  C03D  F001         	movff	_minuto,___awdiv@dividend
  2904  00FB64  C03E  F002         	movff	_minuto+1,___awdiv@dividend+1
  2905  00FB68  0E00               	movlw	0
  2906  00FB6A  6E04               	movwf	___awdiv@divisor+1,c
  2907  00FB6C  0E0A               	movlw	10
  2908  00FB6E  6E03               	movwf	___awdiv@divisor,c
  2909  00FB70  EC5C  F07A         	call	___awdiv	;wreg free
  2910  00FB74  5001               	movf	?___awdiv,w,c
  2911  00FB76  6E5C               	movwf	_minuto_d,c
  2912                           
  2913                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2914  00FB78  505C               	movf	_minuto_d,w,c
  2915  00FB7A  0D0A               	mullw	10
  2916  00FB7C  50F3               	movf	prodl,w,c
  2917  00FB7E  0800               	sublw	0
  2918  00FB80  243D               	addwf	_minuto,w,c
  2919  00FB82  0100               	movlb	0	; () banked
  2920  00FB84  6FA9               	movwf	_minuto_u& (0+255),b
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2924  00FB86  505C               	movf	_minuto_d,w,c
  2925  00FB88  0D10               	mullw	16
  2926  00FB8A  50F3               	movf	prodl,w,c
  2927  00FB8C  0100               	movlb	0	; () banked
  2928  00FB8E  25A9               	addwf	_minuto_u& (0+255),w,b
  2929  00FB90  6E4C               	movwf	_RtccTime+2,c
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2933  00FB92  C054  F001         	movff	_hora,___awdiv@dividend
  2934  00FB96  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  2935  00FB9A  0E00               	movlw	0
  2936  00FB9C  6E04               	movwf	___awdiv@divisor+1,c
  2937  00FB9E  0E0A               	movlw	10
  2938  00FBA0  6E03               	movwf	___awdiv@divisor,c
  2939  00FBA2  EC5C  F07A         	call	___awdiv	;wreg free
  2940  00FBA6  5001               	movf	?___awdiv,w,c
  2941  00FBA8  6E5A               	movwf	_hora_d,c
  2942                           
  2943                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2944  00FBAA  505A               	movf	_hora_d,w,c
  2945  00FBAC  0D0A               	mullw	10
  2946  00FBAE  50F3               	movf	prodl,w,c
  2947  00FBB0  0800               	sublw	0
  2948  00FBB2  2454               	addwf	_hora,w,c
  2949  00FBB4  0100               	movlb	0	; () banked
  2950  00FBB6  6FA7               	movwf	_hora_u& (0+255),b
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2954  00FBB8  505A               	movf	_hora_d,w,c
  2955  00FBBA  0D10               	mullw	16
  2956  00FBBC  50F3               	movf	prodl,w,c
  2957  00FBBE  0100               	movlb	0	; () banked
  2958  00FBC0  25A7               	addwf	_hora_u& (0+255),w,b
  2959  00FBC2  6E4D               	movwf	_RtccTime+3,c
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2963  00FBC4  C04E  F001         	movff	_anio,___awdiv@dividend
  2964  00FBC8  C04F  F002         	movff	_anio+1,___awdiv@dividend+1
  2965  00FBCC  0E00               	movlw	0
  2966  00FBCE  6E04               	movwf	___awdiv@divisor+1,c
  2967  00FBD0  0E0A               	movlw	10
  2968  00FBD2  6E03               	movwf	___awdiv@divisor,c
  2969  00FBD4  EC5C  F07A         	call	___awdiv	;wreg free
  2970  00FBD8  5001               	movf	?___awdiv,w,c
  2971  00FBDA  6E58               	movwf	_anio_d,c
  2972                           
  2973                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  2974  00FBDC  5058               	movf	_anio_d,w,c
  2975  00FBDE  0D0A               	mullw	10
  2976  00FBE0  50F3               	movf	prodl,w,c
  2977  00FBE2  0800               	sublw	0
  2978  00FBE4  244E               	addwf	_anio,w,c
  2979  00FBE6  0100               	movlb	0	; () banked
  2980  00FBE8  6FA4               	movwf	_anio_u& (0+255),b
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  2984  00FBEA  5058               	movf	_anio_d,w,c
  2985  00FBEC  0D10               	mullw	16
  2986  00FBEE  50F3               	movf	prodl,w,c
  2987  00FBF0  0100               	movlb	0	; () banked
  2988  00FBF2  25A4               	addwf	_anio_u& (0+255),w,b
  2989  00FBF4  6E49               	movwf	_RtccDate+3,c
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  2993  00FBF6  C056  F001         	movff	_mes,___awdiv@dividend
  2994  00FBFA  C057  F002         	movff	_mes+1,___awdiv@dividend+1
  2995  00FBFE  0E00               	movlw	0
  2996  00FC00  6E04               	movwf	___awdiv@divisor+1,c
  2997  00FC02  0E0A               	movlw	10
  2998  00FC04  6E03               	movwf	___awdiv@divisor,c
  2999  00FC06  EC5C  F07A         	call	___awdiv	;wreg free
  3000  00FC0A  5001               	movf	?___awdiv,w,c
  3001  00FC0C  6E5B               	movwf	_mes_d,c
  3002                           
  3003                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3004  00FC0E  505B               	movf	_mes_d,w,c
  3005  00FC10  0D0A               	mullw	10
  3006  00FC12  50F3               	movf	prodl,w,c
  3007  00FC14  0800               	sublw	0
  3008  00FC16  2456               	addwf	_mes,w,c
  3009  00FC18  0100               	movlb	0	; () banked
  3010  00FC1A  6FA8               	movwf	_mes_u& (0+255),b
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3014  00FC1C  505B               	movf	_mes_d,w,c
  3015  00FC1E  0D10               	mullw	16
  3016  00FC20  50F3               	movf	prodl,w,c
  3017  00FC22  0100               	movlb	0	; () banked
  3018  00FC24  25A8               	addwf	_mes_u& (0+255),w,b
  3019  00FC26  6E48               	movwf	_RtccDate+2,c
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3023  00FC28  C050  F001         	movff	_dia,___awdiv@dividend
  3024  00FC2C  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  3025  00FC30  0E00               	movlw	0
  3026  00FC32  6E04               	movwf	___awdiv@divisor+1,c
  3027  00FC34  0E0A               	movlw	10
  3028  00FC36  6E03               	movwf	___awdiv@divisor,c
  3029  00FC38  EC5C  F07A         	call	___awdiv	;wreg free
  3030  00FC3C  5001               	movf	?___awdiv,w,c
  3031  00FC3E  6E59               	movwf	_fecha_d,c
  3032                           
  3033                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3034  00FC40  5059               	movf	_fecha_d,w,c
  3035  00FC42  0D0A               	mullw	10
  3036  00FC44  50F3               	movf	prodl,w,c
  3037  00FC46  0800               	sublw	0
  3038  00FC48  2450               	addwf	_dia,w,c
  3039  00FC4A  0100               	movlb	0	; () banked
  3040  00FC4C  6FA6               	movwf	_fecha_u& (0+255),b
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3044  00FC4E  5059               	movf	_fecha_d,w,c
  3045  00FC50  0D10               	mullw	16
  3046  00FC52  50F3               	movf	prodl,w,c
  3047  00FC54  0100               	movlb	0	; () banked
  3048  00FC56  25A6               	addwf	_fecha_u& (0+255),w,b
  3049  00FC58  6E47               	movwf	_RtccDate+1,c
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3053  00FC5A  C052  F0A5         	movff	_diasem,_dia_semana
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3057  00FC5E  C052  F046         	movff	_diasem,_RtccDate
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3061  00FC62  0E4A               	movlw	low _RtccTime
  3062  00FC64  6E01               	movwf	RtccWriteTime@pTm,c
  3063  00FC66  0E00               	movlw	high _RtccTime
  3064  00FC68  6E02               	movwf	RtccWriteTime@pTm+1,c
  3065  00FC6A  0E01               	movlw	1
  3066  00FC6C  6E03               	movwf	RtccWriteTime@di,c
  3067  00FC6E  ECC2  F07B         	call	_RtccWriteTime	;wreg free
  3068                           
  3069                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3070  00FC72  0E46               	movlw	low _RtccDate
  3071  00FC74  6E01               	movwf	RtccWriteDate@pDt,c
  3072  00FC76  0E00               	movlw	high _RtccDate
  3073  00FC78  6E02               	movwf	RtccWriteDate@pDt+1,c
  3074  00FC7A  0E01               	movlw	1
  3075  00FC7C  6E03               	movwf	RtccWriteDate@di,c
  3076  00FC7E  EC48  F07C         	call	_RtccWriteDate	;wreg free
  3077                           
  3078                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3079  00FC82  010F               	movlb	15	; () banked
  3080  00FC84  8F3F               	bsf	63,7,b	;volatile
  3081                           
  3082                           ; BSR set to: 15
  3083  00FC86  0012               	return		;funcret
  3084  00FC88                     __end_of_Write_RTC:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodl	equ	0xFF3
  3091                           postinc0	equ	0xFEE
  3092                           wreg	equ	0xFE8
  3093                           indf1	equ	0xFE7
  3094                           postdec1	equ	0xFE5
  3095                           fsr1h	equ	0xFE2
  3096                           fsr1l	equ	0xFE1
  3097                           indf2	equ	0xFDF
  3098                           fsr2h	equ	0xFDA
  3099                           fsr2l	equ	0xFD9
  3100                           status	equ	0xFD8
  3101                           
  3102 ;; *************** function ___awdiv *****************
  3103 ;; Defined at:
  3104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  dividend        2    0[COMRAM] int 
  3107 ;;  divisor         2    2[COMRAM] int 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  quotient        2    6[COMRAM] int 
  3110 ;;  sign            1    5[COMRAM] unsigned char 
  3111 ;;  counter         1    4[COMRAM] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  2    0[COMRAM] int 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;Total ram usage:        8 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_Write_RTC
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text16
  3135  00F4B8                     __ptext16:
  3136                           	opt stack 0
  3137  00F4B8                     ___awdiv:
  3138                           	opt stack 28
  3139                           
  3140                           ; BSR set to: 15
  3141                           ;incstack = 0
  3142  00F4B8  0E00               	movlw	0
  3143  00F4BA  6E06               	movwf	___awdiv@sign,c
  3144  00F4BC  AE04               	btfss	___awdiv@divisor+1,7,c
  3145  00F4BE  D007               	goto	l3318
  3146  00F4C0  6C03               	negf	___awdiv@divisor,c
  3147  00F4C2  1E04               	comf	___awdiv@divisor+1,f,c
  3148  00F4C4  B0D8               	btfsc	status,0,c
  3149  00F4C6  2A04               	incf	___awdiv@divisor+1,f,c
  3150  00F4C8  0E01               	movlw	1
  3151  00F4CA  6E06               	movwf	___awdiv@sign,c
  3152  00F4CC  D000               	goto	l3318
  3153  00F4CE                     l3318:
  3154  00F4CE  AE02               	btfss	___awdiv@dividend+1,7,c
  3155  00F4D0  D007               	goto	l3324
  3156  00F4D2  6C01               	negf	___awdiv@dividend,c
  3157  00F4D4  1E02               	comf	___awdiv@dividend+1,f,c
  3158  00F4D6  B0D8               	btfsc	status,0,c
  3159  00F4D8  2A02               	incf	___awdiv@dividend+1,f,c
  3160  00F4DA  0E01               	movlw	1
  3161  00F4DC  1A06               	xorwf	___awdiv@sign,f,c
  3162  00F4DE  D000               	goto	l3324
  3163  00F4E0                     l3324:
  3164  00F4E0  0E00               	movlw	0
  3165  00F4E2  6E08               	movwf	___awdiv@quotient+1,c
  3166  00F4E4  0E00               	movlw	0
  3167  00F4E6  6E07               	movwf	___awdiv@quotient,c
  3168  00F4E8  5003               	movf	___awdiv@divisor,w,c
  3169  00F4EA  1004               	iorwf	___awdiv@divisor+1,w,c
  3170  00F4EC  B4D8               	btfsc	status,2,c
  3171  00F4EE  D021               	goto	l3346
  3172  00F4F0  0E01               	movlw	1
  3173  00F4F2  6E05               	movwf	___awdiv@counter,c
  3174  00F4F4  D005               	goto	l3332
  3175  00F4F6                     l3330:
  3176  00F4F6  90D8               	bcf	status,0,c
  3177  00F4F8  3603               	rlcf	___awdiv@divisor,f,c
  3178  00F4FA  3604               	rlcf	___awdiv@divisor+1,f,c
  3179  00F4FC  2A05               	incf	___awdiv@counter,f,c
  3180  00F4FE  D000               	goto	l3332
  3181  00F500                     l3332:
  3182  00F500  BE04               	btfsc	___awdiv@divisor+1,7,c
  3183  00F502  D002               	goto	l3334
  3184  00F504  D7F8               	goto	l3330
  3185  00F506  D000               	goto	l3334
  3186  00F508                     l3334:
  3187  00F508  90D8               	bcf	status,0,c
  3188  00F50A  3607               	rlcf	___awdiv@quotient,f,c
  3189  00F50C  3608               	rlcf	___awdiv@quotient+1,f,c
  3190  00F50E  5003               	movf	___awdiv@divisor,w,c
  3191  00F510  5C01               	subwf	___awdiv@dividend,w,c
  3192  00F512  5004               	movf	___awdiv@divisor+1,w,c
  3193  00F514  5802               	subwfb	___awdiv@dividend+1,w,c
  3194  00F516  A0D8               	btfss	status,0,c
  3195  00F518  D006               	goto	l3342
  3196  00F51A  5003               	movf	___awdiv@divisor,w,c
  3197  00F51C  5E01               	subwf	___awdiv@dividend,f,c
  3198  00F51E  5004               	movf	___awdiv@divisor+1,w,c
  3199  00F520  5A02               	subwfb	___awdiv@dividend+1,f,c
  3200  00F522  8007               	bsf	___awdiv@quotient,0,c
  3201  00F524  D000               	goto	l3342
  3202  00F526                     l3342:
  3203  00F526  90D8               	bcf	status,0,c
  3204  00F528  3204               	rrcf	___awdiv@divisor+1,f,c
  3205  00F52A  3203               	rrcf	___awdiv@divisor,f,c
  3206  00F52C  2E05               	decfsz	___awdiv@counter,f,c
  3207  00F52E  D7EC               	goto	l3334
  3208  00F530  D000               	goto	l3346
  3209  00F532                     l3346:
  3210  00F532  5006               	movf	___awdiv@sign,w,c
  3211  00F534  B4D8               	btfsc	status,2,c
  3212  00F536  D005               	goto	l3350
  3213  00F538  6C07               	negf	___awdiv@quotient,c
  3214  00F53A  1E08               	comf	___awdiv@quotient+1,f,c
  3215  00F53C  B0D8               	btfsc	status,0,c
  3216  00F53E  2A08               	incf	___awdiv@quotient+1,f,c
  3217  00F540  D000               	goto	l3350
  3218  00F542                     l3350:
  3219  00F542  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3220  00F546  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3221  00F54A  0012               	return	
  3222  00F54C  0012               	return		;funcret
  3223  00F54E                     __end_of___awdiv:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           prodl	equ	0xFF3
  3230                           postinc0	equ	0xFEE
  3231                           wreg	equ	0xFE8
  3232                           indf1	equ	0xFE7
  3233                           postdec1	equ	0xFE5
  3234                           fsr1h	equ	0xFE2
  3235                           fsr1l	equ	0xFE1
  3236                           indf2	equ	0xFDF
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8
  3240                           
  3241 ;; *************** function _RtccWriteTime *****************
  3242 ;; Defined at:
  3243 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  pTm             2    0[COMRAM] PTR const struct .
  3246 ;;		 -> RtccTime(4), 
  3247 ;;  di              1    2[COMRAM] enum E7121
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  tempHourWDay    2    9[COMRAM] struct .
  3250 ;;  tempMinSec      2    7[COMRAM] struct .
  3251 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3252 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3253 ;;  wasOn           1    4[COMRAM] enum E7121
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      enum E7481
  3256 ;; Registers used:
  3257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3263 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3264 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3266 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3267 ;;Total ram usage:       11 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    1
  3270 ;; This function calls:
  3271 ;;		_RtccWrOn
  3272 ;; This function is called by:
  3273 ;;		_Write_RTC
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text17
  3278  00F784                     __ptext17:
  3279                           	opt stack 0
  3280  00F784                     _RtccWriteTime:
  3281                           	opt stack 27
  3282                           
  3283                           ;incstack = 0
  3284  00F784  0E00               	movlw	0
  3285  00F786  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3286  00F788  EE20 F002          	lfsr	2,2
  3287  00F78C  5001               	movf	RtccWriteTime@pTm,w,c
  3288  00F78E  26D9               	addwf	fsr2l,f,c
  3289  00F790  5002               	movf	RtccWriteTime@pTm+1,w,c
  3290  00F792  22DA               	addwfc	fsr2h,f,c
  3291  00F794  0E5A               	movlw	90
  3292  00F796  60DF               	cpfslt	indf2,c
  3293  00F798  0012               	return	
  3294  00F79A  EE20 F001          	lfsr	2,1
  3295  00F79E  5001               	movf	RtccWriteTime@pTm,w,c
  3296  00F7A0  26D9               	addwf	fsr2l,f,c
  3297  00F7A2  5002               	movf	RtccWriteTime@pTm+1,w,c
  3298  00F7A4  22DA               	addwfc	fsr2h,f,c
  3299  00F7A6  0E5A               	movlw	90
  3300  00F7A8  60DF               	cpfslt	indf2,c
  3301  00F7AA  0012               	return	
  3302  00F7AC  EE20 F003          	lfsr	2,3
  3303  00F7B0  5001               	movf	RtccWriteTime@pTm,w,c
  3304  00F7B2  26D9               	addwf	fsr2l,f,c
  3305  00F7B4  5002               	movf	RtccWriteTime@pTm+1,w,c
  3306  00F7B6  22DA               	addwfc	fsr2h,f,c
  3307  00F7B8  0E24               	movlw	36
  3308  00F7BA  64DF               	cpfsgt	indf2,c
  3309  00F7BC  D002               	goto	l3040
  3310  00F7BE  0012               	return	
  3311                           
  3312                           ;	Return value of _RtccWriteTime is never used
  3313  00F7C0  0012               	return	
  3314  00F7C2                     l3040:
  3315  00F7C2  EE20 F002          	lfsr	2,2
  3316  00F7C6  5001               	movf	RtccWriteTime@pTm,w,c
  3317  00F7C8  26D9               	addwf	fsr2l,f,c
  3318  00F7CA  5002               	movf	RtccWriteTime@pTm+1,w,c
  3319  00F7CC  22DA               	addwfc	fsr2h,f,c
  3320  00F7CE  50DF               	movf	indf2,w,c
  3321  00F7D0  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3322  00F7D2  EE20 F001          	lfsr	2,1
  3323  00F7D6  5001               	movf	RtccWriteTime@pTm,w,c
  3324  00F7D8  26D9               	addwf	fsr2l,f,c
  3325  00F7DA  5002               	movf	RtccWriteTime@pTm+1,w,c
  3326  00F7DC  22DA               	addwfc	fsr2h,f,c
  3327  00F7DE  50DF               	movf	indf2,w,c
  3328  00F7E0  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3329  00F7E2  5003               	movf	RtccWriteTime@di,w,c
  3330  00F7E4  B4D8               	btfsc	status,2,c
  3331  00F7E6  D002               	goto	l3046
  3332  00F7E8  9CF2               	bcf	intcon,6,c	;volatile
  3333  00F7EA  D000               	goto	l3046
  3334  00F7EC                     l3046:
  3335  00F7EC  0E00               	movlw	0
  3336  00F7EE  BB3F               	btfsc	63,5,b	;volatile
  3337  00F7F0  0E01               	movlw	1
  3338  00F7F2  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3339  00F7F4  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3340  00F7F6  A4D8               	btfss	status,2,c
  3341  00F7F8  D003               	goto	l3050
  3342  00F7FA  EC68  F071         	call	_RtccWrOn	;wreg free
  3343  00F7FE  D000               	goto	l3050
  3344  00F800                     l3050:
  3345  00F800  0E00               	movlw	0
  3346  00F802  BF3F               	btfsc	63,7,b	;volatile
  3347  00F804  0E01               	movlw	1
  3348  00F806  6E05               	movwf	RtccWriteTime@wasOn,c
  3349  00F808  5005               	movf	RtccWriteTime@wasOn,w,c
  3350  00F80A  B4D8               	btfsc	status,2,c
  3351  00F80C  D007               	goto	l3056
  3352  00F80E  0E00               	movlw	0
  3353  00F810  BE91               	btfsc	3985,7,c	;volatile
  3354  00F812  0E01               	movlw	1
  3355  00F814  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3356  00F816  010F               	movlb	15	; () banked
  3357  00F818  9F3F               	bcf	63,7,b	;volatile
  3358  00F81A  D000               	goto	l3056
  3359  00F81C                     l3056:
  3360  00F81C  0EFC               	movlw	252
  3361  00F81E  010F               	movlb	15	; () banked
  3362  00F820  173F               	andwf	63,f,b	;volatile
  3363  00F822  010F               	movlb	15	; () banked
  3364  00F824  813F               	bsf	63,0,b	;volatile
  3365                           
  3366                           ; BSR set to: 15
  3367  00F826  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3368                           
  3369                           ; BSR set to: 15
  3370  00F82A  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3371                           
  3372                           ; BSR set to: 15
  3373  00F82E  EE20 F003          	lfsr	2,3
  3374  00F832  5001               	movf	RtccWriteTime@pTm,w,c
  3375  00F834  26D9               	addwf	fsr2l,f,c
  3376  00F836  5002               	movf	RtccWriteTime@pTm+1,w,c
  3377  00F838  22DA               	addwfc	fsr2h,f,c
  3378  00F83A  50DF               	movf	indf2,w,c
  3379  00F83C  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3380                           
  3381                           ; BSR set to: 15
  3382  00F83E  0EFC               	movlw	252
  3383  00F840  010F               	movlb	15	; () banked
  3384  00F842  173F               	andwf	63,f,b	;volatile
  3385                           
  3386                           ; BSR set to: 15
  3387  00F844  010F               	movlb	15	; () banked
  3388  00F846  813F               	bsf	63,0,b	;volatile
  3389                           
  3390                           ; BSR set to: 15
  3391  00F848  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3392                           
  3393                           ; BSR set to: 15
  3394  00F84C  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3395                           
  3396                           ; BSR set to: 15
  3397  00F850  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3398                           
  3399                           ; BSR set to: 15
  3400  00F854  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3401                           
  3402                           ; BSR set to: 15
  3403  00F858  5005               	movf	RtccWriteTime@wasOn,w,c
  3404  00F85A  B4D8               	btfsc	status,2,c
  3405  00F85C  D00D               	goto	l3088
  3406                           
  3407                           ; BSR set to: 15
  3408  00F85E  010F               	movlb	15	; () banked
  3409  00F860  8F3F               	bsf	63,7,b	;volatile
  3410                           
  3411                           ; BSR set to: 15
  3412  00F862  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3413  00F864  B4D8               	btfsc	status,2,c
  3414  00F866  D002               	goto	l3084
  3415                           
  3416                           ; BSR set to: 15
  3417  00F868  8E91               	bsf	3985,7,c	;volatile
  3418  00F86A  D000               	goto	l3084
  3419  00F86C                     l3084:
  3420                           
  3421                           ; BSR set to: 15
  3422  00F86C  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3423  00F86E  B4D8               	btfsc	status,2,c
  3424  00F870  D009               	goto	l3092
  3425                           
  3426                           ; BSR set to: 15
  3427  00F872  EC68  F071         	call	_RtccWrOn	;wreg free
  3428  00F876  D006               	goto	l3092
  3429  00F878                     l3088:
  3430  00F878  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3431  00F87A  A4D8               	btfss	status,2,c
  3432  00F87C  D003               	goto	l3092
  3433  00F87E  010F               	movlb	15	; () banked
  3434  00F880  9B3F               	bcf	63,5,b	;volatile
  3435                           
  3436                           ; BSR set to: 15
  3437  00F882  D000               	goto	l3092
  3438  00F884                     l3092:
  3439  00F884  5003               	movf	RtccWriteTime@di,w,c
  3440  00F886  B4D8               	btfsc	status,2,c
  3441  00F888  0012               	return	
  3442  00F88A  8CF2               	bsf	intcon,6,c	;volatile
  3443  00F88C  0012               	return	
  3444                           
  3445                           ;	Return value of _RtccWriteTime is never used
  3446  00F88E  0012               	return		;funcret
  3447  00F890                     __end_of_RtccWriteTime:
  3448                           	opt stack 0
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           prodl	equ	0xFF3
  3454                           intcon	equ	0xFF2
  3455                           postinc0	equ	0xFEE
  3456                           wreg	equ	0xFE8
  3457                           indf1	equ	0xFE7
  3458                           postdec1	equ	0xFE5
  3459                           fsr1h	equ	0xFE2
  3460                           fsr1l	equ	0xFE1
  3461                           indf2	equ	0xFDF
  3462                           fsr2h	equ	0xFDA
  3463                           fsr2l	equ	0xFD9
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function _RtccWriteDate *****************
  3467 ;; Defined at:
  3468 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  pDt             2    0[COMRAM] PTR const struct .
  3471 ;;		 -> RtccDate(4), 
  3472 ;;  di              1    2[COMRAM] enum E7121
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  tempHourWDay    2   11[COMRAM] struct .
  3475 ;;  tempDayMonth    2    9[COMRAM] struct .
  3476 ;;  tempYear        2    6[COMRAM] struct .
  3477 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3478 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3479 ;;  wasOn           1    4[COMRAM] enum E7121
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      enum E7481
  3482 ;; Registers used:
  3483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3489 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;Total ram usage:       13 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    1
  3496 ;; This function calls:
  3497 ;;		_RtccWrOn
  3498 ;; This function is called by:
  3499 ;;		_Write_RTC
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text18
  3504  00F890                     __ptext18:
  3505                           	opt stack 0
  3506  00F890                     _RtccWriteDate:
  3507                           	opt stack 27
  3508                           
  3509                           ;incstack = 0
  3510  00F890  0E00               	movlw	0
  3511  00F892  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3512  00F894  EE20 F002          	lfsr	2,2
  3513  00F898  5001               	movf	RtccWriteDate@pDt,w,c
  3514  00F89A  26D9               	addwf	fsr2l,f,c
  3515  00F89C  5002               	movf	RtccWriteDate@pDt+1,w,c
  3516  00F89E  22DA               	addwfc	fsr2h,f,c
  3517  00F8A0  0E13               	movlw	19
  3518  00F8A2  60DF               	cpfslt	indf2,c
  3519  00F8A4  0012               	return	
  3520  00F8A6  EE20 F002          	lfsr	2,2
  3521  00F8AA  5001               	movf	RtccWriteDate@pDt,w,c
  3522  00F8AC  26D9               	addwf	fsr2l,f,c
  3523  00F8AE  5002               	movf	RtccWriteDate@pDt+1,w,c
  3524  00F8B0  22DA               	addwfc	fsr2h,f,c
  3525  00F8B2  50DF               	movf	indf2,w,c
  3526  00F8B4  B4D8               	btfsc	status,2,c
  3527  00F8B6  0012               	return	
  3528  00F8B8  EE20 F001          	lfsr	2,1
  3529  00F8BC  5001               	movf	RtccWriteDate@pDt,w,c
  3530  00F8BE  26D9               	addwf	fsr2l,f,c
  3531  00F8C0  5002               	movf	RtccWriteDate@pDt+1,w,c
  3532  00F8C2  22DA               	addwfc	fsr2h,f,c
  3533  00F8C4  0E32               	movlw	50
  3534  00F8C6  60DF               	cpfslt	indf2,c
  3535  00F8C8  0012               	return	
  3536  00F8CA  EE20 F001          	lfsr	2,1
  3537  00F8CE  5001               	movf	RtccWriteDate@pDt,w,c
  3538  00F8D0  26D9               	addwf	fsr2l,f,c
  3539  00F8D2  5002               	movf	RtccWriteDate@pDt+1,w,c
  3540  00F8D4  22DA               	addwfc	fsr2h,f,c
  3541  00F8D6  50DF               	movf	indf2,w,c
  3542  00F8D8  B4D8               	btfsc	status,2,c
  3543  00F8DA  0012               	return	
  3544  00F8DC  EE20 F003          	lfsr	2,3
  3545  00F8E0  5001               	movf	RtccWriteDate@pDt,w,c
  3546  00F8E2  26D9               	addwf	fsr2l,f,c
  3547  00F8E4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3548  00F8E6  22DA               	addwfc	fsr2h,f,c
  3549  00F8E8  0E99               	movlw	153
  3550  00F8EA  64DF               	cpfsgt	indf2,c
  3551  00F8EC  D002               	goto	l3108
  3552  00F8EE  0012               	return	
  3553                           
  3554                           ;	Return value of _RtccWriteDate is never used
  3555  00F8F0  0012               	return	
  3556  00F8F2                     l3108:
  3557  00F8F2  EE20 F003          	lfsr	2,3
  3558  00F8F6  5001               	movf	RtccWriteDate@pDt,w,c
  3559  00F8F8  26D9               	addwf	fsr2l,f,c
  3560  00F8FA  5002               	movf	RtccWriteDate@pDt+1,w,c
  3561  00F8FC  22DA               	addwfc	fsr2h,f,c
  3562  00F8FE  50DF               	movf	indf2,w,c
  3563  00F900  6E07               	movwf	RtccWriteDate@tempYear,c
  3564  00F902  EE20 F001          	lfsr	2,1
  3565  00F906  5001               	movf	RtccWriteDate@pDt,w,c
  3566  00F908  26D9               	addwf	fsr2l,f,c
  3567  00F90A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3568  00F90C  22DA               	addwfc	fsr2h,f,c
  3569  00F90E  50DF               	movf	indf2,w,c
  3570  00F910  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  3571  00F912  EE20 F002          	lfsr	2,2
  3572  00F916  5001               	movf	RtccWriteDate@pDt,w,c
  3573  00F918  26D9               	addwf	fsr2l,f,c
  3574  00F91A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3575  00F91C  22DA               	addwfc	fsr2h,f,c
  3576  00F91E  50DF               	movf	indf2,w,c
  3577  00F920  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3578  00F922  5003               	movf	RtccWriteDate@di,w,c
  3579  00F924  B4D8               	btfsc	status,2,c
  3580  00F926  D002               	goto	l3114
  3581  00F928  9CF2               	bcf	intcon,6,c	;volatile
  3582  00F92A  D000               	goto	l3114
  3583  00F92C                     l3114:
  3584  00F92C  0E00               	movlw	0
  3585  00F92E  BB3F               	btfsc	63,5,b	;volatile
  3586  00F930  0E01               	movlw	1
  3587  00F932  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3588  00F934  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3589  00F936  A4D8               	btfss	status,2,c
  3590  00F938  D003               	goto	l3118
  3591  00F93A  EC68  F071         	call	_RtccWrOn	;wreg free
  3592  00F93E  D000               	goto	l3118
  3593  00F940                     l3118:
  3594  00F940  0E00               	movlw	0
  3595  00F942  BF3F               	btfsc	63,7,b	;volatile
  3596  00F944  0E01               	movlw	1
  3597  00F946  6E05               	movwf	RtccWriteDate@wasOn,c
  3598  00F948  5005               	movf	RtccWriteDate@wasOn,w,c
  3599  00F94A  B4D8               	btfsc	status,2,c
  3600  00F94C  D007               	goto	l3124
  3601  00F94E  0E00               	movlw	0
  3602  00F950  BE91               	btfsc	3985,7,c	;volatile
  3603  00F952  0E01               	movlw	1
  3604  00F954  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3605  00F956  010F               	movlb	15	; () banked
  3606  00F958  9F3F               	bcf	63,7,b	;volatile
  3607  00F95A  D000               	goto	l3124
  3608  00F95C                     l3124:
  3609  00F95C  0EFC               	movlw	252
  3610  00F95E  010F               	movlb	15	; () banked
  3611  00F960  173F               	andwf	63,f,b	;volatile
  3612  00F962  010F               	movlb	15	; () banked
  3613  00F964  813F               	bsf	63,0,b	;volatile
  3614                           
  3615                           ; BSR set to: 15
  3616  00F966  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3617                           
  3618                           ; BSR set to: 15
  3619  00F96A  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3620                           
  3621                           ; BSR set to: 15
  3622  00F96E  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3623  00F972  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3624  00F976  50DF               	movf	indf2,w,c
  3625  00F978  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  3626                           
  3627                           ; BSR set to: 15
  3628  00F97A  0EFC               	movlw	252
  3629  00F97C  010F               	movlb	15	; () banked
  3630  00F97E  173F               	andwf	63,f,b	;volatile
  3631                           
  3632                           ; BSR set to: 15
  3633  00F980  0E03               	movlw	3
  3634  00F982  010F               	movlb	15	; () banked
  3635  00F984  133F               	iorwf	63,f,b	;volatile
  3636                           
  3637                           ; BSR set to: 15
  3638  00F986  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3639                           
  3640                           ; BSR set to: 15
  3641  00F98A  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3642                           
  3643                           ; BSR set to: 15
  3644  00F98E  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3645                           
  3646                           ; BSR set to: 15
  3647  00F992  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3648                           
  3649                           ; BSR set to: 15
  3650  00F996  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3651                           
  3652                           ; BSR set to: 15
  3653  00F99A  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3654                           
  3655                           ; BSR set to: 15
  3656  00F99E  5005               	movf	RtccWriteDate@wasOn,w,c
  3657  00F9A0  B4D8               	btfsc	status,2,c
  3658  00F9A2  D00D               	goto	l3160
  3659                           
  3660                           ; BSR set to: 15
  3661  00F9A4  010F               	movlb	15	; () banked
  3662  00F9A6  8F3F               	bsf	63,7,b	;volatile
  3663                           
  3664                           ; BSR set to: 15
  3665  00F9A8  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3666  00F9AA  B4D8               	btfsc	status,2,c
  3667  00F9AC  D002               	goto	l3156
  3668                           
  3669                           ; BSR set to: 15
  3670  00F9AE  8E91               	bsf	3985,7,c	;volatile
  3671  00F9B0  D000               	goto	l3156
  3672  00F9B2                     l3156:
  3673                           
  3674                           ; BSR set to: 15
  3675  00F9B2  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3676  00F9B4  B4D8               	btfsc	status,2,c
  3677  00F9B6  D009               	goto	l3164
  3678                           
  3679                           ; BSR set to: 15
  3680  00F9B8  EC68  F071         	call	_RtccWrOn	;wreg free
  3681  00F9BC  D006               	goto	l3164
  3682  00F9BE                     l3160:
  3683  00F9BE  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3684  00F9C0  A4D8               	btfss	status,2,c
  3685  00F9C2  D003               	goto	l3164
  3686  00F9C4  010F               	movlb	15	; () banked
  3687  00F9C6  9B3F               	bcf	63,5,b	;volatile
  3688                           
  3689                           ; BSR set to: 15
  3690  00F9C8  D000               	goto	l3164
  3691  00F9CA                     l3164:
  3692  00F9CA  5003               	movf	RtccWriteDate@di,w,c
  3693  00F9CC  B4D8               	btfsc	status,2,c
  3694  00F9CE  0012               	return	
  3695  00F9D0  9CF2               	bcf	intcon,6,c	;volatile
  3696  00F9D2  0012               	return	
  3697                           
  3698                           ;	Return value of _RtccWriteDate is never used
  3699  00F9D4  0012               	return		;funcret
  3700  00F9D6                     __end_of_RtccWriteDate:
  3701                           	opt stack 0
  3702                           tblptru	equ	0xFF8
  3703                           tblptrh	equ	0xFF7
  3704                           tblptrl	equ	0xFF6
  3705                           tablat	equ	0xFF5
  3706                           prodl	equ	0xFF3
  3707                           intcon	equ	0xFF2
  3708                           postinc0	equ	0xFEE
  3709                           wreg	equ	0xFE8
  3710                           indf1	equ	0xFE7
  3711                           postdec1	equ	0xFE5
  3712                           fsr1h	equ	0xFE2
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           fsr2h	equ	0xFDA
  3716                           fsr2l	equ	0xFD9
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function _RtccWrOn *****************
  3720 ;; Defined at:
  3721 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  data            2    0        unsigned int 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;		None               void
  3728 ;; Registers used:
  3729 ;;		wreg, status,2
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3739 ;;Total ram usage:        0 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_Write_RTC
  3745 ;;		_RtccWriteDate
  3746 ;;		_RtccWriteTime
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text19
  3751  00E2D0                     __ptext19:
  3752                           	opt stack 0
  3753  00E2D0                     _RtccWrOn:
  3754                           	opt stack 27
  3755                           
  3756                           ;incstack = 0
  3757  00E2D0  9CF2               	bcf	intcon,6,c	;volatile
  3758  00E2D2  0E55               	movlw	85
  3759  00E2D4  6EA7               	movwf	4007,c	;volatile
  3760  00E2D6  0EAA               	movlw	170
  3761  00E2D8  6EA7               	movwf	4007,c	;volatile
  3762  00E2DA  010F               	movlb	15	; () banked
  3763  00E2DC  8B3F               	bsf	63,5,b	;volatile
  3764                           
  3765                           ; BSR set to: 15
  3766  00E2DE  8CF2               	bsf	intcon,6,c	;volatile
  3767                           
  3768                           ; BSR set to: 15
  3769  00E2E0  0012               	return		;funcret
  3770  00E2E2                     __end_of_RtccWrOn:
  3771                           	opt stack 0
  3772                           tblptru	equ	0xFF8
  3773                           tblptrh	equ	0xFF7
  3774                           tblptrl	equ	0xFF6
  3775                           tablat	equ	0xFF5
  3776                           prodl	equ	0xFF3
  3777                           intcon	equ	0xFF2
  3778                           postinc0	equ	0xFEE
  3779                           wreg	equ	0xFE8
  3780                           indf1	equ	0xFE7
  3781                           postdec1	equ	0xFE5
  3782                           fsr1h	equ	0xFE2
  3783                           fsr1l	equ	0xFE1
  3784                           indf2	equ	0xFDF
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function _button_B_submenu_siren_volume *****************
  3790 ;; Defined at:
  3791 ;;		line 603 in file "main.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;		None               void
  3798 ;; Registers used:
  3799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;Total ram usage:        2 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    7
  3812 ;; This function calls:
  3813 ;;		_activity_home
  3814 ;; This function is called by:
  3815 ;;		_button_B
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text20
  3820  00E5F4                     __ptext20:
  3821                           	opt stack 0
  3822  00E5F4                     _button_B_submenu_siren_volume:
  3823                           	opt stack 21
  3824                           
  3825                           ;main.c: 605: switch(submenu_selected){
  3826                           
  3827                           ; BSR set to: 15
  3828                           ;incstack = 0
  3829  00E5F4  D009               	goto	l3724
  3830  00E5F6                     l3718:
  3831                           
  3832                           ;main.c: 608: alarm_volume = 0;
  3833  00E5F6  0E00               	movlw	0
  3834  00E5F8  6E2E               	movwf	_alarm_volume+1,c
  3835  00E5FA  0E00               	movlw	0
  3836  00E5FC  D003               	goto	L1
  3837  00E5FE                     l3720:
  3838                           
  3839                           ;main.c: 612: alarm_volume = 1;
  3840  00E5FE  0E00               	movlw	0
  3841  00E600  6E2E               	movwf	_alarm_volume+1,c
  3842  00E602  0E01               	movlw	1
  3843  00E604                     L1:
  3844  00E604  6E2D               	movwf	_alarm_volume,c
  3845                           
  3846                           ;main.c: 615: }
  3847                           
  3848                           ;main.c: 613: break;
  3849  00E606  D010               	goto	l3726
  3850  00E608                     l3724:
  3851  00E608  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_volume
  3852  00E60C  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_volume+1
  3853                           
  3854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3855                           ; Switch size 1, requested type "space"
  3856                           ; Number of cases is 1, Range of values is 0 to 0
  3857                           ; switch strategies available:
  3858                           ; Name         Instructions Cycles
  3859                           ; simple_byte            4     3 (average)
  3860                           ;	Chosen strategy is simple_byte
  3861  00E610  5012               	movf	??_button_B_submenu_siren_volume+1,w,c
  3862  00E612  0A00               	xorlw	0	; case 0
  3863  00E614  A4D8               	btfss	status,2,c
  3864  00E616  D008               	goto	l3726
  3865                           
  3866                           ; Switch size 1, requested type "space"
  3867                           ; Number of cases is 2, Range of values is 0 to 1
  3868                           ; switch strategies available:
  3869                           ; Name         Instructions Cycles
  3870                           ; simple_byte            7     4 (average)
  3871                           ;	Chosen strategy is simple_byte
  3872  00E618  5011               	movf	??_button_B_submenu_siren_volume,w,c
  3873  00E61A  0A00               	xorlw	0	; case 0
  3874  00E61C  B4D8               	btfsc	status,2,c
  3875  00E61E  D7EB               	goto	l3718
  3876  00E620  0A01               	xorlw	1	; case 1
  3877  00E622  B4D8               	btfsc	status,2,c
  3878  00E624  D7EC               	goto	l3720
  3879  00E626  D000               	goto	l3726
  3880  00E628                     l3726:
  3881                           
  3882                           ;main.c: 617: activity_home();
  3883  00E628  ECEB  F071         	call	_activity_home	;wreg free
  3884  00E62C  0012               	return		;funcret
  3885  00E62E                     __end_of_button_B_submenu_siren_volume:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodl	equ	0xFF3
  3892                           intcon	equ	0xFF2
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           indf1	equ	0xFE7
  3896                           postdec1	equ	0xFE5
  3897                           fsr1h	equ	0xFE2
  3898                           fsr1l	equ	0xFE1
  3899                           indf2	equ	0xFDF
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _button_B_submenu_siren_tone *****************
  3905 ;; Defined at:
  3906 ;;		line 621 in file "main.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;Total ram usage:        2 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    7
  3927 ;; This function calls:
  3928 ;;		_activity_home
  3929 ;; This function is called by:
  3930 ;;		_button_B
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text21
  3935  00E5BA                     __ptext21:
  3936                           	opt stack 0
  3937  00E5BA                     _button_B_submenu_siren_tone:
  3938                           	opt stack 21
  3939                           
  3940                           ;main.c: 623: switch(submenu_selected){
  3941                           
  3942                           ;incstack = 0
  3943  00E5BA  D009               	goto	l3740
  3944  00E5BC                     l3734:
  3945                           
  3946                           ;main.c: 626: alarm_tone = 0;
  3947  00E5BC  0E00               	movlw	0
  3948  00E5BE  6E2C               	movwf	_alarm_tone+1,c
  3949  00E5C0  0E00               	movlw	0
  3950  00E5C2  D003               	goto	L2
  3951  00E5C4                     l3736:
  3952                           
  3953                           ;main.c: 630: alarm_tone = 1;
  3954  00E5C4  0E00               	movlw	0
  3955  00E5C6  6E2C               	movwf	_alarm_tone+1,c
  3956  00E5C8  0E01               	movlw	1
  3957  00E5CA                     L2:
  3958  00E5CA  6E2B               	movwf	_alarm_tone,c
  3959                           
  3960                           ;main.c: 633: }
  3961                           
  3962                           ;main.c: 631: break;
  3963  00E5CC  D010               	goto	l3742
  3964  00E5CE                     l3740:
  3965  00E5CE  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_tone
  3966  00E5D2  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_tone+1
  3967                           
  3968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3969                           ; Switch size 1, requested type "space"
  3970                           ; Number of cases is 1, Range of values is 0 to 0
  3971                           ; switch strategies available:
  3972                           ; Name         Instructions Cycles
  3973                           ; simple_byte            4     3 (average)
  3974                           ;	Chosen strategy is simple_byte
  3975  00E5D6  5012               	movf	??_button_B_submenu_siren_tone+1,w,c
  3976  00E5D8  0A00               	xorlw	0	; case 0
  3977  00E5DA  A4D8               	btfss	status,2,c
  3978  00E5DC  D008               	goto	l3742
  3979                           
  3980                           ; Switch size 1, requested type "space"
  3981                           ; Number of cases is 2, Range of values is 0 to 1
  3982                           ; switch strategies available:
  3983                           ; Name         Instructions Cycles
  3984                           ; simple_byte            7     4 (average)
  3985                           ;	Chosen strategy is simple_byte
  3986  00E5DE  5011               	movf	??_button_B_submenu_siren_tone,w,c
  3987  00E5E0  0A00               	xorlw	0	; case 0
  3988  00E5E2  B4D8               	btfsc	status,2,c
  3989  00E5E4  D7EB               	goto	l3734
  3990  00E5E6  0A01               	xorlw	1	; case 1
  3991  00E5E8  B4D8               	btfsc	status,2,c
  3992  00E5EA  D7EC               	goto	l3736
  3993  00E5EC  D000               	goto	l3742
  3994  00E5EE                     l3742:
  3995                           
  3996                           ;main.c: 635: activity_home();
  3997  00E5EE  ECEB  F071         	call	_activity_home	;wreg free
  3998  00E5F2  0012               	return		;funcret
  3999  00E5F4                     __end_of_button_B_submenu_siren_tone:
  4000                           	opt stack 0
  4001                           tblptru	equ	0xFF8
  4002                           tblptrh	equ	0xFF7
  4003                           tblptrl	equ	0xFF6
  4004                           tablat	equ	0xFF5
  4005                           prodl	equ	0xFF3
  4006                           intcon	equ	0xFF2
  4007                           postinc0	equ	0xFEE
  4008                           wreg	equ	0xFE8
  4009                           indf1	equ	0xFE7
  4010                           postdec1	equ	0xFE5
  4011                           fsr1h	equ	0xFE2
  4012                           fsr1l	equ	0xFE1
  4013                           indf2	equ	0xFDF
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _button_B_submenu_siren_config *****************
  4019 ;; Defined at:
  4020 ;;		line 587 in file "main.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;		None               void
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    8
  4041 ;; This function calls:
  4042 ;;		_activity_submenu_siren_tone
  4043 ;;		_activity_submenu_siren_volume
  4044 ;; This function is called by:
  4045 ;;		_button_B
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text22
  4050  00E4B6                     __ptext22:
  4051                           	opt stack 0
  4052  00E4B6                     _button_B_submenu_siren_config:
  4053                           	opt stack 20
  4054                           
  4055                           ;main.c: 589: switch(submenu_selected){
  4056                           
  4057                           ;incstack = 0
  4058  00E4B6  D006               	goto	l3710
  4059  00E4B8                     l3704:
  4060                           
  4061                           ;main.c: 592: activity_submenu_siren_volume();
  4062  00E4B8  EC6C  F077         	call	_activity_submenu_siren_volume	;wreg free
  4063                           
  4064                           ;main.c: 593: break;
  4065  00E4BC  0012               	return	
  4066  00E4BE                     l3706:
  4067                           
  4068                           ;main.c: 596: activity_submenu_siren_tone();
  4069  00E4BE  EC39  F077         	call	_activity_submenu_siren_tone	;wreg free
  4070                           
  4071                           ;main.c: 599: }
  4072                           
  4073                           ;main.c: 597: break;
  4074  00E4C2  0012               	return	
  4075  00E4C4                     l3710:
  4076  00E4C4  C043  F011         	movff	_submenu_selected,??_button_B_submenu_siren_config
  4077  00E4C8  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_siren_config+1
  4078                           
  4079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4080                           ; Switch size 1, requested type "space"
  4081                           ; Number of cases is 1, Range of values is 0 to 0
  4082                           ; switch strategies available:
  4083                           ; Name         Instructions Cycles
  4084                           ; simple_byte            4     3 (average)
  4085                           ;	Chosen strategy is simple_byte
  4086  00E4CC  5012               	movf	??_button_B_submenu_siren_config+1,w,c
  4087  00E4CE  0A00               	xorlw	0	; case 0
  4088  00E4D0  A4D8               	btfss	status,2,c
  4089  00E4D2  0012               	return	
  4090                           
  4091                           ; Switch size 1, requested type "space"
  4092                           ; Number of cases is 2, Range of values is 0 to 1
  4093                           ; switch strategies available:
  4094                           ; Name         Instructions Cycles
  4095                           ; simple_byte            7     4 (average)
  4096                           ;	Chosen strategy is simple_byte
  4097  00E4D4  5011               	movf	??_button_B_submenu_siren_config,w,c
  4098  00E4D6  0A00               	xorlw	0	; case 0
  4099  00E4D8  B4D8               	btfsc	status,2,c
  4100  00E4DA  D7EE               	goto	l3704
  4101  00E4DC  0A01               	xorlw	1	; case 1
  4102  00E4DE  A4D8               	btfss	status,2,c
  4103  00E4E0  0012               	return	
  4104  00E4E2  D7ED               	goto	l3706
  4105  00E4E4  0012               	return		;funcret
  4106  00E4E6                     __end_of_button_B_submenu_siren_config:
  4107                           	opt stack 0
  4108                           tblptru	equ	0xFF8
  4109                           tblptrh	equ	0xFF7
  4110                           tblptrl	equ	0xFF6
  4111                           tablat	equ	0xFF5
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           postinc0	equ	0xFEE
  4115                           wreg	equ	0xFE8
  4116                           indf1	equ	0xFE7
  4117                           postdec1	equ	0xFE5
  4118                           fsr1h	equ	0xFE2
  4119                           fsr1l	equ	0xFE1
  4120                           indf2	equ	0xFDF
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function _activity_submenu_siren_volume *****************
  4126 ;; Defined at:
  4127 ;;		line 339 in file "main.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;		None
  4132 ;; Return value:  Size  Location     Type
  4133 ;;		None               void
  4134 ;; Registers used:
  4135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;Total ram usage:        0 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    7
  4148 ;; This function calls:
  4149 ;;		_lcd_init
  4150 ;;		_lcd_write
  4151 ;;		_submenu_selector_0
  4152 ;; This function is called by:
  4153 ;;		_button_B_submenu_siren_config
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text23
  4158  00EED8                     __ptext23:
  4159                           	opt stack 0
  4160  00EED8                     _activity_submenu_siren_volume:
  4161                           	opt stack 20
  4162                           
  4163                           ;main.c: 341: activity = 8;
  4164                           
  4165                           ;incstack = 0
  4166  00EED8  0E00               	movlw	0
  4167  00EEDA  6E2A               	movwf	_activity+1,c
  4168  00EEDC  0E08               	movlw	8
  4169  00EEDE  6E29               	movwf	_activity,c
  4170                           
  4171                           ;main.c: 342: lcd_init();
  4172  00EEE0  EC87  F078         	call	_lcd_init	;wreg free
  4173                           
  4174                           ;main.c: 343: lcd_write(1,1,"Volumen");
  4175  00EEE4  0E00               	movlw	0
  4176  00EEE6  6E0C               	movwf	lcd_write@column+1,c
  4177  00EEE8  0E01               	movlw	1
  4178  00EEEA  6E0B               	movwf	lcd_write@column,c
  4179  00EEEC  0E00               	movlw	0
  4180  00EEEE  6E0E               	movwf	lcd_write@row+1,c
  4181  00EEF0  0E01               	movlw	1
  4182  00EEF2  6E0D               	movwf	lcd_write@row,c
  4183  00EEF4  0E55               	movlw	low STR_34
  4184  00EEF6  6E0F               	movwf	lcd_write@string,c
  4185  00EEF8  0EFF               	movlw	high STR_34
  4186  00EEFA  6E10               	movwf	lcd_write@string+1,c
  4187  00EEFC  EC7C  F071         	call	_lcd_write	;wreg free
  4188                           
  4189                           ;main.c: 344: lcd_write(10,1,"Bajo");
  4190  00EF00  0E00               	movlw	0
  4191  00EF02  6E0C               	movwf	lcd_write@column+1,c
  4192  00EF04  0E0A               	movlw	10
  4193  00EF06  6E0B               	movwf	lcd_write@column,c
  4194  00EF08  0E00               	movlw	0
  4195  00EF0A  6E0E               	movwf	lcd_write@row+1,c
  4196  00EF0C  0E01               	movlw	1
  4197  00EF0E  6E0D               	movwf	lcd_write@row,c
  4198  00EF10  0ECF               	movlw	low STR_37
  4199  00EF12  6E0F               	movwf	lcd_write@string,c
  4200  00EF14  0EFF               	movlw	high STR_37
  4201  00EF16  6E10               	movwf	lcd_write@string+1,c
  4202  00EF18  EC7C  F071         	call	_lcd_write	;wreg free
  4203                           
  4204                           ;main.c: 345: lcd_write(10,2,"Alto");
  4205  00EF1C  0E00               	movlw	0
  4206  00EF1E  6E0C               	movwf	lcd_write@column+1,c
  4207  00EF20  0E0A               	movlw	10
  4208  00EF22  6E0B               	movwf	lcd_write@column,c
  4209  00EF24  0E00               	movlw	0
  4210  00EF26  6E0E               	movwf	lcd_write@row+1,c
  4211  00EF28  0E02               	movlw	2
  4212  00EF2A  6E0D               	movwf	lcd_write@row,c
  4213  00EF2C  0ED9               	movlw	low STR_38
  4214  00EF2E  6E0F               	movwf	lcd_write@string,c
  4215  00EF30  0EFF               	movlw	high STR_38
  4216  00EF32  6E10               	movwf	lcd_write@string+1,c
  4217  00EF34  EC7C  F071         	call	_lcd_write	;wreg free
  4218                           
  4219                           ;main.c: 346: submenu_selector_0();
  4220  00EF38  ECBA  F073         	call	_submenu_selector_0	;wreg free
  4221  00EF3C  0012               	return		;funcret
  4222  00EF3E                     __end_of_activity_submenu_siren_volume:
  4223                           	opt stack 0
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           prodl	equ	0xFF3
  4229                           intcon	equ	0xFF2
  4230                           postinc0	equ	0xFEE
  4231                           wreg	equ	0xFE8
  4232                           indf1	equ	0xFE7
  4233                           postdec1	equ	0xFE5
  4234                           fsr1h	equ	0xFE2
  4235                           fsr1l	equ	0xFE1
  4236                           indf2	equ	0xFDF
  4237                           fsr2h	equ	0xFDA
  4238                           fsr2l	equ	0xFD9
  4239                           status	equ	0xFD8
  4240                           
  4241 ;; *************** function _activity_submenu_siren_tone *****************
  4242 ;; Defined at:
  4243 ;;		line 350 in file "main.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;		None               void
  4250 ;; Registers used:
  4251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    7
  4264 ;; This function calls:
  4265 ;;		_lcd_init
  4266 ;;		_lcd_write
  4267 ;;		_submenu_selector_0
  4268 ;; This function is called by:
  4269 ;;		_button_B_submenu_siren_config
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text24
  4274  00EE72                     __ptext24:
  4275                           	opt stack 0
  4276  00EE72                     _activity_submenu_siren_tone:
  4277                           	opt stack 20
  4278                           
  4279                           ;main.c: 352: activity = 9;
  4280                           
  4281                           ;incstack = 0
  4282  00EE72  0E00               	movlw	0
  4283  00EE74  6E2A               	movwf	_activity+1,c
  4284  00EE76  0E09               	movlw	9
  4285  00EE78  6E29               	movwf	_activity,c
  4286                           
  4287                           ;main.c: 353: lcd_init();
  4288  00EE7A  EC87  F078         	call	_lcd_init	;wreg free
  4289                           
  4290                           ;main.c: 354: lcd_write(1,1,"Tono");
  4291  00EE7E  0E00               	movlw	0
  4292  00EE80  6E0C               	movwf	lcd_write@column+1,c
  4293  00EE82  0E01               	movlw	1
  4294  00EE84  6E0B               	movwf	lcd_write@column,c
  4295  00EE86  0E00               	movlw	0
  4296  00EE88  6E0E               	movwf	lcd_write@row+1,c
  4297  00EE8A  0E01               	movlw	1
  4298  00EE8C  6E0D               	movwf	lcd_write@row,c
  4299  00EE8E  0ED4               	movlw	low STR_35
  4300  00EE90  6E0F               	movwf	lcd_write@string,c
  4301  00EE92  0EFF               	movlw	high STR_35
  4302  00EE94  6E10               	movwf	lcd_write@string+1,c
  4303  00EE96  EC7C  F071         	call	_lcd_write	;wreg free
  4304                           
  4305                           ;main.c: 355: lcd_write(10,1,"Beep 1");
  4306  00EE9A  0E00               	movlw	0
  4307  00EE9C  6E0C               	movwf	lcd_write@column+1,c
  4308  00EE9E  0E0A               	movlw	10
  4309  00EEA0  6E0B               	movwf	lcd_write@column,c
  4310  00EEA2  0E00               	movlw	0
  4311  00EEA4  6E0E               	movwf	lcd_write@row+1,c
  4312  00EEA6  0E01               	movlw	1
  4313  00EEA8  6E0D               	movwf	lcd_write@row,c
  4314  00EEAA  0E6D               	movlw	low STR_40
  4315  00EEAC  6E0F               	movwf	lcd_write@string,c
  4316  00EEAE  0EFF               	movlw	high STR_40
  4317  00EEB0  6E10               	movwf	lcd_write@string+1,c
  4318  00EEB2  EC7C  F071         	call	_lcd_write	;wreg free
  4319                           
  4320                           ;main.c: 356: lcd_write(10,2,"Beep 2");
  4321  00EEB6  0E00               	movlw	0
  4322  00EEB8  6E0C               	movwf	lcd_write@column+1,c
  4323  00EEBA  0E0A               	movlw	10
  4324  00EEBC  6E0B               	movwf	lcd_write@column,c
  4325  00EEBE  0E00               	movlw	0
  4326  00EEC0  6E0E               	movwf	lcd_write@row+1,c
  4327  00EEC2  0E02               	movlw	2
  4328  00EEC4  6E0D               	movwf	lcd_write@row,c
  4329  00EEC6  0E7B               	movlw	low STR_41
  4330  00EEC8  6E0F               	movwf	lcd_write@string,c
  4331  00EECA  0EFF               	movlw	high STR_41
  4332  00EECC  6E10               	movwf	lcd_write@string+1,c
  4333  00EECE  EC7C  F071         	call	_lcd_write	;wreg free
  4334                           
  4335                           ;main.c: 357: submenu_selector_0();
  4336  00EED2  ECBA  F073         	call	_submenu_selector_0	;wreg free
  4337  00EED6  0012               	return		;funcret
  4338  00EED8                     __end_of_activity_submenu_siren_tone:
  4339                           	opt stack 0
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           indf1	equ	0xFE7
  4349                           postdec1	equ	0xFE5
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           fsr2h	equ	0xFDA
  4354                           fsr2l	equ	0xFD9
  4355                           status	equ	0xFD8
  4356                           
  4357 ;; *************** function _button_B_submenu_pin_config *****************
  4358 ;; Defined at:
  4359 ;;		line 570 in file "main.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;		None               void
  4366 ;; Registers used:
  4367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4377 ;;Total ram usage:        2 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    7
  4380 ;; This function calls:
  4381 ;;		_activity_home
  4382 ;;		_activity_submenu_pin_set
  4383 ;;		_pin_reset
  4384 ;; This function is called by:
  4385 ;;		_button_B
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text25
  4390  00E54C                     __ptext25:
  4391                           	opt stack 0
  4392  00E54C                     _button_B_submenu_pin_config:
  4393                           	opt stack 21
  4394                           
  4395                           ;main.c: 572: switch(submenu_selected){
  4396                           
  4397                           ;incstack = 0
  4398  00E54C  D008               	goto	l3696
  4399  00E54E                     l3688:
  4400                           
  4401                           ;main.c: 575: activity_submenu_pin_set();
  4402  00E54E  EC20  F075         	call	_activity_submenu_pin_set	;wreg free
  4403                           
  4404                           ;main.c: 576: break;
  4405  00E552  0012               	return	
  4406  00E554                     l3690:
  4407                           
  4408                           ;main.c: 579: pin_reset();
  4409  00E554  EC71  F071         	call	_pin_reset	;wreg free
  4410                           
  4411                           ;main.c: 580: activity_home();
  4412  00E558  ECEB  F071         	call	_activity_home	;wreg free
  4413                           
  4414                           ;main.c: 583: }
  4415                           
  4416                           ;main.c: 581: break;
  4417  00E55C  0012               	return	
  4418  00E55E                     l3696:
  4419  00E55E  C043  F011         	movff	_submenu_selected,??_button_B_submenu_pin_config
  4420  00E562  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_pin_config+1
  4421                           
  4422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4423                           ; Switch size 1, requested type "space"
  4424                           ; Number of cases is 1, Range of values is 0 to 0
  4425                           ; switch strategies available:
  4426                           ; Name         Instructions Cycles
  4427                           ; simple_byte            4     3 (average)
  4428                           ;	Chosen strategy is simple_byte
  4429  00E566  5012               	movf	??_button_B_submenu_pin_config+1,w,c
  4430  00E568  0A00               	xorlw	0	; case 0
  4431  00E56A  A4D8               	btfss	status,2,c
  4432  00E56C  0012               	return	
  4433                           
  4434                           ; Switch size 1, requested type "space"
  4435                           ; Number of cases is 2, Range of values is 0 to 1
  4436                           ; switch strategies available:
  4437                           ; Name         Instructions Cycles
  4438                           ; simple_byte            7     4 (average)
  4439                           ;	Chosen strategy is simple_byte
  4440  00E56E  5011               	movf	??_button_B_submenu_pin_config,w,c
  4441  00E570  0A00               	xorlw	0	; case 0
  4442  00E572  B4D8               	btfsc	status,2,c
  4443  00E574  D7EC               	goto	l3688
  4444  00E576  0A01               	xorlw	1	; case 1
  4445  00E578  A4D8               	btfss	status,2,c
  4446  00E57A  0012               	return	
  4447  00E57C  D7EB               	goto	l3690
  4448  00E57E  0012               	return		;funcret
  4449  00E580                     __end_of_button_B_submenu_pin_config:
  4450                           	opt stack 0
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodl	equ	0xFF3
  4456                           intcon	equ	0xFF2
  4457                           postinc0	equ	0xFEE
  4458                           wreg	equ	0xFE8
  4459                           indf1	equ	0xFE7
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8
  4467                           
  4468 ;; *************** function _pin_reset *****************
  4469 ;; Defined at:
  4470 ;;		line 404 in file "main.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;		None               void
  4477 ;; Registers used:
  4478 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    1
  4491 ;; This function calls:
  4492 ;;		_strcpy
  4493 ;; This function is called by:
  4494 ;;		_button_B_submenu_pin_config
  4495 ;;		_setup
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text26
  4500  00E2E2                     __ptext26:
  4501                           	opt stack 0
  4502  00E2E2                     _pin_reset:
  4503                           	opt stack 28
  4504                           
  4505                           ;main.c: 406: strcpy(pin, "1234");
  4506                           
  4507                           ;incstack = 0
  4508  00E2E2  0E9A               	movlw	low _pin
  4509  00E2E4  6E01               	movwf	strcpy@to,c
  4510  00E2E6  0E00               	movlw	high _pin
  4511  00E2E8  6E02               	movwf	strcpy@to+1,c
  4512  00E2EA  0EC5               	movlw	low STR_47
  4513  00E2EC  6E03               	movwf	strcpy@from,c
  4514  00E2EE  0EFF               	movlw	high STR_47
  4515  00E2F0  6E04               	movwf	strcpy@from+1,c
  4516  00E2F2  EC1E  F074         	call	_strcpy	;wreg free
  4517  00E2F6  0012               	return		;funcret
  4518  00E2F8                     __end_of_pin_reset:
  4519                           	opt stack 0
  4520                           tblptru	equ	0xFF8
  4521                           tblptrh	equ	0xFF7
  4522                           tblptrl	equ	0xFF6
  4523                           tablat	equ	0xFF5
  4524                           prodl	equ	0xFF3
  4525                           intcon	equ	0xFF2
  4526                           postinc0	equ	0xFEE
  4527                           wreg	equ	0xFE8
  4528                           indf1	equ	0xFE7
  4529                           postdec1	equ	0xFE5
  4530                           fsr1h	equ	0xFE2
  4531                           fsr1l	equ	0xFE1
  4532                           indf2	equ	0xFDF
  4533                           fsr2h	equ	0xFDA
  4534                           fsr2l	equ	0xFD9
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _activity_submenu_pin_set *****************
  4538 ;; Defined at:
  4539 ;;		line 373 in file "main.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;		None               void
  4546 ;; Registers used:
  4547 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    6
  4560 ;; This function calls:
  4561 ;;		_lcd_comand
  4562 ;;		_lcd_gotoxy
  4563 ;;		_lcd_init
  4564 ;;		_lcd_write
  4565 ;;		_strcpy
  4566 ;; This function is called by:
  4567 ;;		_button_B_submenu_pin_config
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text27
  4572  00EA40                     __ptext27:
  4573                           	opt stack 0
  4574  00EA40                     _activity_submenu_pin_set:
  4575                           	opt stack 21
  4576                           
  4577                           ;main.c: 375: activity = 6;
  4578                           
  4579                           ;incstack = 0
  4580  00EA40  0E00               	movlw	0
  4581  00EA42  6E2A               	movwf	_activity+1,c
  4582  00EA44  0E06               	movlw	6
  4583  00EA46  6E29               	movwf	_activity,c
  4584                           
  4585                           ;main.c: 376: strcpy(pin_input, "");
  4586  00EA48  0E9F               	movlw	low _pin_input
  4587  00EA4A  6E01               	movwf	strcpy@to,c
  4588  00EA4C  0E00               	movlw	high _pin_input
  4589  00EA4E  6E02               	movwf	strcpy@to+1,c
  4590  00EA50  0EF2               	movlw	low (STR_3+1)
  4591  00EA52  6E03               	movwf	strcpy@from,c
  4592  00EA54  0EFF               	movlw	high (STR_3+1)
  4593  00EA56  6E04               	movwf	strcpy@from+1,c
  4594  00EA58  EC1E  F074         	call	_strcpy	;wreg free
  4595                           
  4596                           ;main.c: 377: lcd_init();
  4597  00EA5C  EC87  F078         	call	_lcd_init	;wreg free
  4598                           
  4599                           ;main.c: 378: lcd_write(1,1,"Nuevo PIN:");
  4600  00EA60  0E00               	movlw	0
  4601  00EA62  6E0C               	movwf	lcd_write@column+1,c
  4602  00EA64  0E01               	movlw	1
  4603  00EA66  6E0B               	movwf	lcd_write@column,c
  4604  00EA68  0E00               	movlw	0
  4605  00EA6A  6E0E               	movwf	lcd_write@row+1,c
  4606  00EA6C  0E01               	movlw	1
  4607  00EA6E  6E0D               	movwf	lcd_write@row,c
  4608  00EA70  0E4A               	movlw	low STR_46
  4609  00EA72  6E0F               	movwf	lcd_write@string,c
  4610  00EA74  0EFF               	movlw	high STR_46
  4611  00EA76  6E10               	movwf	lcd_write@string+1,c
  4612  00EA78  EC7C  F071         	call	_lcd_write	;wreg free
  4613                           
  4614                           ;main.c: 379: lcd_gotoxy(1,2);
  4615  00EA7C  0E02               	movlw	2
  4616  00EA7E  6E05               	movwf	lcd_gotoxy@y,c
  4617  00EA80  0E01               	movlw	1
  4618  00EA82  ECC5  F071         	call	_lcd_gotoxy
  4619                           
  4620                           ;main.c: 380: lcd_comand(0b00001111);
  4621  00EA86  0E0F               	movlw	15
  4622  00EA88  EC4F  F071         	call	_lcd_comand
  4623  00EA8C  0012               	return		;funcret
  4624  00EA8E                     __end_of_activity_submenu_pin_set:
  4625                           	opt stack 0
  4626                           tblptru	equ	0xFF8
  4627                           tblptrh	equ	0xFF7
  4628                           tblptrl	equ	0xFF6
  4629                           tablat	equ	0xFF5
  4630                           prodl	equ	0xFF3
  4631                           intcon	equ	0xFF2
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           indf1	equ	0xFE7
  4635                           postdec1	equ	0xFE5
  4636                           fsr1h	equ	0xFE2
  4637                           fsr1l	equ	0xFE1
  4638                           indf2	equ	0xFDF
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _button_B_submenu_date_and_time_config *****************
  4644 ;; Defined at:
  4645 ;;		line 639 in file "main.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;		None               void
  4652 ;; Registers used:
  4653 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;Total ram usage:        2 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    7
  4666 ;; This function calls:
  4667 ;;		_activity_submenu_date_config
  4668 ;;		_activity_submenu_time_config
  4669 ;; This function is called by:
  4670 ;;		_button_B
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text28
  4675  00E486                     __ptext28:
  4676                           	opt stack 0
  4677  00E486                     _button_B_submenu_date_and_time_config:
  4678                           	opt stack 21
  4679                           
  4680                           ;main.c: 641: switch(submenu_selected){
  4681                           
  4682                           ;incstack = 0
  4683  00E486  D006               	goto	l3756
  4684  00E488                     l3750:
  4685                           
  4686                           ;main.c: 644: activity_submenu_date_config();
  4687  00E488  ECC7  F078         	call	_activity_submenu_date_config	;wreg free
  4688                           
  4689                           ;main.c: 645: break;
  4690  00E48C  0012               	return	
  4691  00E48E                     l3752:
  4692                           
  4693                           ;main.c: 648: activity_submenu_time_config();
  4694  00E48E  EC08  F079         	call	_activity_submenu_time_config	;wreg free
  4695                           
  4696                           ;main.c: 651: }
  4697                           
  4698                           ;main.c: 649: break;
  4699  00E492  0012               	return	
  4700  00E494                     l3756:
  4701  00E494  C043  F024         	movff	_submenu_selected,??_button_B_submenu_date_and_time_config
  4702  00E498  C044  F025         	movff	_submenu_selected+1,??_button_B_submenu_date_and_time_config+1
  4703                           
  4704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4705                           ; Switch size 1, requested type "space"
  4706                           ; Number of cases is 1, Range of values is 0 to 0
  4707                           ; switch strategies available:
  4708                           ; Name         Instructions Cycles
  4709                           ; simple_byte            4     3 (average)
  4710                           ;	Chosen strategy is simple_byte
  4711  00E49C  5025               	movf	??_button_B_submenu_date_and_time_config+1,w,c
  4712  00E49E  0A00               	xorlw	0	; case 0
  4713  00E4A0  A4D8               	btfss	status,2,c
  4714  00E4A2  0012               	return	
  4715                           
  4716                           ; Switch size 1, requested type "space"
  4717                           ; Number of cases is 2, Range of values is 0 to 1
  4718                           ; switch strategies available:
  4719                           ; Name         Instructions Cycles
  4720                           ; simple_byte            7     4 (average)
  4721                           ;	Chosen strategy is simple_byte
  4722  00E4A4  5024               	movf	??_button_B_submenu_date_and_time_config,w,c
  4723  00E4A6  0A00               	xorlw	0	; case 0
  4724  00E4A8  B4D8               	btfsc	status,2,c
  4725  00E4AA  D7EE               	goto	l3750
  4726  00E4AC  0A01               	xorlw	1	; case 1
  4727  00E4AE  A4D8               	btfss	status,2,c
  4728  00E4B0  0012               	return	
  4729  00E4B2  D7ED               	goto	l3752
  4730  00E4B4  0012               	return		;funcret
  4731  00E4B6                     __end_of_button_B_submenu_date_and_time_config:
  4732                           	opt stack 0
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodl	equ	0xFF3
  4738                           intcon	equ	0xFF2
  4739                           postinc0	equ	0xFEE
  4740                           wreg	equ	0xFE8
  4741                           indf1	equ	0xFE7
  4742                           postdec1	equ	0xFE5
  4743                           fsr1h	equ	0xFE2
  4744                           fsr1l	equ	0xFE1
  4745                           indf2	equ	0xFDF
  4746                           fsr2h	equ	0xFDA
  4747                           fsr2l	equ	0xFD9
  4748                           status	equ	0xFD8
  4749                           
  4750 ;; *************** function _activity_submenu_time_config *****************
  4751 ;; Defined at:
  4752 ;;		line 276 in file "main.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;		None               void
  4759 ;; Registers used:
  4760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;Total ram usage:        0 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    6
  4773 ;; This function calls:
  4774 ;;		_lcd_comand
  4775 ;;		_lcd_gotoxy
  4776 ;;		_lcd_init
  4777 ;;		_lcd_write
  4778 ;;		_sprintf
  4779 ;; This function is called by:
  4780 ;;		_button_B_submenu_date_and_time_config
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text29
  4785  00F210                     __ptext29:
  4786                           	opt stack 0
  4787  00F210                     _activity_submenu_time_config:
  4788                           	opt stack 21
  4789                           
  4790                           ;main.c: 278: activity = 11;
  4791                           
  4792                           ;incstack = 0
  4793  00F210  0E00               	movlw	0
  4794  00F212  6E2A               	movwf	_activity+1,c
  4795  00F214  0E0B               	movlw	11
  4796  00F216  6E29               	movwf	_activity,c
  4797                           
  4798                           ;main.c: 279: lcd_init();
  4799  00F218  EC87  F078         	call	_lcd_init	;wreg free
  4800                           
  4801                           ;main.c: 280: lcd_write(1,1,"Ingrese la hora");
  4802  00F21C  0E00               	movlw	0
  4803  00F21E  6E0C               	movwf	lcd_write@column+1,c
  4804  00F220  0E01               	movlw	1
  4805  00F222  6E0B               	movwf	lcd_write@column,c
  4806  00F224  0E00               	movlw	0
  4807  00F226  6E0E               	movwf	lcd_write@row+1,c
  4808  00F228  0E01               	movlw	1
  4809  00F22A  6E0D               	movwf	lcd_write@row,c
  4810  00F22C  0E1C               	movlw	low STR_30
  4811  00F22E  6E0F               	movwf	lcd_write@string,c
  4812  00F230  0EFF               	movlw	high STR_30
  4813  00F232  6E10               	movwf	lcd_write@string+1,c
  4814  00F234  EC7C  F071         	call	_lcd_write	;wreg free
  4815                           
  4816                           ;main.c: 281: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  4817  00F238  0E86               	movlw	low _buffer1
  4818  00F23A  6E0D               	movwf	sprintf@sp,c
  4819  00F23C  0E00               	movlw	high _buffer1
  4820  00F23E  6E0E               	movwf	sprintf@sp+1,c
  4821  00F240  0E3B               	movlw	low STR_27
  4822  00F242  6E0F               	movwf	sprintf@f,c
  4823  00F244  0EFF               	movlw	high STR_27
  4824  00F246  6E10               	movwf	sprintf@f+1,c
  4825  00F248  C054  F011         	movff	_hora,?_sprintf+4
  4826  00F24C  C055  F012         	movff	_hora+1,?_sprintf+5
  4827  00F250  C03D  F013         	movff	_minuto,?_sprintf+6
  4828  00F254  C03E  F014         	movff	_minuto+1,?_sprintf+7
  4829  00F258  C03F  F015         	movff	_segundo,?_sprintf+8
  4830  00F25C  C040  F016         	movff	_segundo+1,?_sprintf+9
  4831  00F260  EC44  F07E         	call	_sprintf	;wreg free
  4832                           
  4833                           ;main.c: 282: lcd_write(1,2,buffer1);
  4834  00F264  0E00               	movlw	0
  4835  00F266  6E0C               	movwf	lcd_write@column+1,c
  4836  00F268  0E01               	movlw	1
  4837  00F26A  6E0B               	movwf	lcd_write@column,c
  4838  00F26C  0E00               	movlw	0
  4839  00F26E  6E0E               	movwf	lcd_write@row+1,c
  4840  00F270  0E02               	movlw	2
  4841  00F272  6E0D               	movwf	lcd_write@row,c
  4842  00F274  0E86               	movlw	low _buffer1
  4843  00F276  6E0F               	movwf	lcd_write@string,c
  4844  00F278  0E00               	movlw	high _buffer1
  4845  00F27A  6E10               	movwf	lcd_write@string+1,c
  4846  00F27C  EC7C  F071         	call	_lcd_write	;wreg free
  4847                           
  4848                           ;main.c: 283: lcd_gotoxy(1, 2);
  4849  00F280  0E02               	movlw	2
  4850  00F282  6E05               	movwf	lcd_gotoxy@y,c
  4851  00F284  0E01               	movlw	1
  4852  00F286  ECC5  F071         	call	_lcd_gotoxy
  4853                           
  4854                           ;main.c: 284: lcd_comand(0b00001111);
  4855  00F28A  0E0F               	movlw	15
  4856  00F28C  EC4F  F071         	call	_lcd_comand
  4857  00F290  0012               	return		;funcret
  4858  00F292                     __end_of_activity_submenu_time_config:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           prodl	equ	0xFF3
  4865                           intcon	equ	0xFF2
  4866                           postinc0	equ	0xFEE
  4867                           wreg	equ	0xFE8
  4868                           indf1	equ	0xFE7
  4869                           postdec1	equ	0xFE5
  4870                           fsr1h	equ	0xFE2
  4871                           fsr1l	equ	0xFE1
  4872                           indf2	equ	0xFDF
  4873                           fsr2h	equ	0xFDA
  4874                           fsr2l	equ	0xFD9
  4875                           status	equ	0xFD8
  4876                           
  4877 ;; *************** function _activity_submenu_date_config *****************
  4878 ;; Defined at:
  4879 ;;		line 264 in file "main.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;		None               void
  4886 ;; Registers used:
  4887 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;Total ram usage:        0 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    6
  4900 ;; This function calls:
  4901 ;;		_lcd_comand
  4902 ;;		_lcd_gotoxy
  4903 ;;		_lcd_init
  4904 ;;		_lcd_write
  4905 ;;		_sprintf
  4906 ;; This function is called by:
  4907 ;;		_button_B_submenu_date_and_time_config
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text30
  4912  00F18E                     __ptext30:
  4913                           	opt stack 0
  4914  00F18E                     _activity_submenu_date_config:
  4915                           	opt stack 21
  4916                           
  4917                           ;main.c: 266: activity = 10;
  4918                           
  4919                           ;incstack = 0
  4920  00F18E  0E00               	movlw	0
  4921  00F190  6E2A               	movwf	_activity+1,c
  4922  00F192  0E0A               	movlw	10
  4923  00F194  6E29               	movwf	_activity,c
  4924                           
  4925                           ;main.c: 267: lcd_init();
  4926  00F196  EC87  F078         	call	_lcd_init	;wreg free
  4927                           
  4928                           ;main.c: 268: lcd_write(1,1,"Ingrese la fecha");
  4929  00F19A  0E00               	movlw	0
  4930  00F19C  6E0C               	movwf	lcd_write@column+1,c
  4931  00F19E  0E01               	movlw	1
  4932  00F1A0  6E0B               	movwf	lcd_write@column,c
  4933  00F1A2  0E00               	movlw	0
  4934  00F1A4  6E0E               	movwf	lcd_write@row+1,c
  4935  00F1A6  0E01               	movlw	1
  4936  00F1A8  6E0D               	movwf	lcd_write@row,c
  4937  00F1AA  0EFB               	movlw	low STR_28
  4938  00F1AC  6E0F               	movwf	lcd_write@string,c
  4939  00F1AE  0EFE               	movlw	high STR_28
  4940  00F1B0  6E10               	movwf	lcd_write@string+1,c
  4941  00F1B2  EC7C  F071         	call	_lcd_write	;wreg free
  4942                           
  4943                           ;main.c: 269: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  4944  00F1B6  0E86               	movlw	low _buffer1
  4945  00F1B8  6E0D               	movwf	sprintf@sp,c
  4946  00F1BA  0E00               	movlw	high _buffer1
  4947  00F1BC  6E0E               	movwf	sprintf@sp+1,c
  4948  00F1BE  0E2C               	movlw	low STR_26
  4949  00F1C0  6E0F               	movwf	sprintf@f,c
  4950  00F1C2  0EFF               	movlw	high STR_26
  4951  00F1C4  6E10               	movwf	sprintf@f+1,c
  4952  00F1C6  C050  F011         	movff	_dia,?_sprintf+4
  4953  00F1CA  C051  F012         	movff	_dia+1,?_sprintf+5
  4954  00F1CE  C056  F013         	movff	_mes,?_sprintf+6
  4955  00F1D2  C057  F014         	movff	_mes+1,?_sprintf+7
  4956  00F1D6  C04E  F015         	movff	_anio,?_sprintf+8
  4957  00F1DA  C04F  F016         	movff	_anio+1,?_sprintf+9
  4958  00F1DE  EC44  F07E         	call	_sprintf	;wreg free
  4959                           
  4960                           ;main.c: 270: lcd_write(1,2,buffer1);
  4961  00F1E2  0E00               	movlw	0
  4962  00F1E4  6E0C               	movwf	lcd_write@column+1,c
  4963  00F1E6  0E01               	movlw	1
  4964  00F1E8  6E0B               	movwf	lcd_write@column,c
  4965  00F1EA  0E00               	movlw	0
  4966  00F1EC  6E0E               	movwf	lcd_write@row+1,c
  4967  00F1EE  0E02               	movlw	2
  4968  00F1F0  6E0D               	movwf	lcd_write@row,c
  4969  00F1F2  0E86               	movlw	low _buffer1
  4970  00F1F4  6E0F               	movwf	lcd_write@string,c
  4971  00F1F6  0E00               	movlw	high _buffer1
  4972  00F1F8  6E10               	movwf	lcd_write@string+1,c
  4973  00F1FA  EC7C  F071         	call	_lcd_write	;wreg free
  4974                           
  4975                           ;main.c: 271: lcd_gotoxy(1, 2);
  4976  00F1FE  0E02               	movlw	2
  4977  00F200  6E05               	movwf	lcd_gotoxy@y,c
  4978  00F202  0E01               	movlw	1
  4979  00F204  ECC5  F071         	call	_lcd_gotoxy
  4980                           
  4981                           ;main.c: 272: lcd_comand(0b00001111);
  4982  00F208  0E0F               	movlw	15
  4983  00F20A  EC4F  F071         	call	_lcd_comand
  4984  00F20E  0012               	return		;funcret
  4985  00F210                     __end_of_activity_submenu_date_config:
  4986                           	opt stack 0
  4987                           tblptru	equ	0xFF8
  4988                           tblptrh	equ	0xFF7
  4989                           tblptrl	equ	0xFF6
  4990                           tablat	equ	0xFF5
  4991                           prodl	equ	0xFF3
  4992                           intcon	equ	0xFF2
  4993                           postinc0	equ	0xFEE
  4994                           wreg	equ	0xFE8
  4995                           indf1	equ	0xFE7
  4996                           postdec1	equ	0xFE5
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           indf2	equ	0xFDF
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _button_B_submenu_activation *****************
  5005 ;; Defined at:
  5006 ;;		line 552 in file "main.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;		None               void
  5013 ;; Registers used:
  5014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5024 ;;Total ram usage:        2 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    7
  5027 ;; This function calls:
  5028 ;;		_activity_home
  5029 ;; This function is called by:
  5030 ;;		_button_B
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text31
  5035  00E580                     __ptext31:
  5036                           	opt stack 0
  5037  00E580                     _button_B_submenu_activation:
  5038                           	opt stack 21
  5039                           
  5040                           ;main.c: 554: switch(submenu_selected){
  5041                           
  5042                           ;incstack = 0
  5043  00E580  D009               	goto	l3678
  5044  00E582                     l3672:
  5045                           
  5046                           ;main.c: 557: state = 1;
  5047  00E582  0E00               	movlw	0
  5048  00E584  6E42               	movwf	_state+1,c
  5049  00E586  0E01               	movlw	1
  5050  00E588  D003               	goto	L3
  5051  00E58A                     l3674:
  5052                           
  5053                           ;main.c: 561: state = 0;
  5054  00E58A  0E00               	movlw	0
  5055  00E58C  6E42               	movwf	_state+1,c
  5056  00E58E  0E00               	movlw	0
  5057  00E590                     L3:
  5058  00E590  6E41               	movwf	_state,c
  5059                           
  5060                           ;main.c: 564: }
  5061                           
  5062                           ;main.c: 562: break;
  5063  00E592  D010               	goto	l3680
  5064  00E594                     l3678:
  5065  00E594  C043  F011         	movff	_submenu_selected,??_button_B_submenu_activation
  5066  00E598  C044  F012         	movff	_submenu_selected+1,??_button_B_submenu_activation+1
  5067                           
  5068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5069                           ; Switch size 1, requested type "space"
  5070                           ; Number of cases is 1, Range of values is 0 to 0
  5071                           ; switch strategies available:
  5072                           ; Name         Instructions Cycles
  5073                           ; simple_byte            4     3 (average)
  5074                           ;	Chosen strategy is simple_byte
  5075  00E59C  5012               	movf	??_button_B_submenu_activation+1,w,c
  5076  00E59E  0A00               	xorlw	0	; case 0
  5077  00E5A0  A4D8               	btfss	status,2,c
  5078  00E5A2  D008               	goto	l3680
  5079                           
  5080                           ; Switch size 1, requested type "space"
  5081                           ; Number of cases is 2, Range of values is 0 to 1
  5082                           ; switch strategies available:
  5083                           ; Name         Instructions Cycles
  5084                           ; simple_byte            7     4 (average)
  5085                           ;	Chosen strategy is simple_byte
  5086  00E5A4  5011               	movf	??_button_B_submenu_activation,w,c
  5087  00E5A6  0A00               	xorlw	0	; case 0
  5088  00E5A8  B4D8               	btfsc	status,2,c
  5089  00E5AA  D7EB               	goto	l3672
  5090  00E5AC  0A01               	xorlw	1	; case 1
  5091  00E5AE  B4D8               	btfsc	status,2,c
  5092  00E5B0  D7EC               	goto	l3674
  5093  00E5B2  D000               	goto	l3680
  5094  00E5B4                     l3680:
  5095                           
  5096                           ;main.c: 566: activity_home();
  5097  00E5B4  ECEB  F071         	call	_activity_home	;wreg free
  5098  00E5B8  0012               	return		;funcret
  5099  00E5BA                     __end_of_button_B_submenu_activation:
  5100                           	opt stack 0
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           prodl	equ	0xFF3
  5106                           intcon	equ	0xFF2
  5107                           postinc0	equ	0xFEE
  5108                           wreg	equ	0xFE8
  5109                           indf1	equ	0xFE7
  5110                           postdec1	equ	0xFE5
  5111                           fsr1h	equ	0xFE2
  5112                           fsr1l	equ	0xFE1
  5113                           indf2	equ	0xFDF
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function _button_B_menu *****************
  5119 ;; Defined at:
  5120 ;;		line 528 in file "main.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;		None               void
  5127 ;; Registers used:
  5128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5138 ;;Total ram usage:        2 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    8
  5141 ;; This function calls:
  5142 ;;		_activity_submenu_activation
  5143 ;;		_activity_submenu_date_and_time
  5144 ;;		_activity_submenu_pin
  5145 ;;		_activity_submenu_siren
  5146 ;; This function is called by:
  5147 ;;		_button_B
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text32
  5152  00E8CA                     __ptext32:
  5153                           	opt stack 0
  5154  00E8CA                     _button_B_menu:
  5155                           	opt stack 20
  5156                           
  5157                           ;main.c: 530: switch(menu_selected){
  5158                           
  5159                           ;incstack = 0
  5160  00E8CA  D00C               	goto	l3664
  5161  00E8CC                     l3654:
  5162                           
  5163                           ;main.c: 533: activity_submenu_activation();
  5164  00E8CC  EC6D  F076         	call	_activity_submenu_activation	;wreg free
  5165                           
  5166                           ;main.c: 534: break;
  5167  00E8D0  0012               	return	
  5168  00E8D2                     l3656:
  5169                           
  5170                           ;main.c: 537: activity_submenu_date_and_time();
  5171  00E8D2  ECA0  F076         	call	_activity_submenu_date_and_time	;wreg free
  5172                           
  5173                           ;main.c: 538: break;
  5174  00E8D6  0012               	return	
  5175  00E8D8                     l3658:
  5176                           
  5177                           ;main.c: 541: activity_submenu_pin();
  5178  00E8D8  ECD3  F076         	call	_activity_submenu_pin	;wreg free
  5179                           
  5180                           ;main.c: 542: break;
  5181  00E8DC  0012               	return	
  5182  00E8DE                     l3660:
  5183                           
  5184                           ;main.c: 545: activity_submenu_siren();
  5185  00E8DE  EC06  F077         	call	_activity_submenu_siren	;wreg free
  5186                           
  5187                           ;main.c: 548: }
  5188                           
  5189                           ;main.c: 546: break;
  5190  00E8E2  0012               	return	
  5191  00E8E4                     l3664:
  5192  00E8E4  C03B  F011         	movff	_menu_selected,??_button_B_menu
  5193  00E8E8  C03C  F012         	movff	_menu_selected+1,??_button_B_menu+1
  5194                           
  5195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5196                           ; Switch size 1, requested type "space"
  5197                           ; Number of cases is 1, Range of values is 0 to 0
  5198                           ; switch strategies available:
  5199                           ; Name         Instructions Cycles
  5200                           ; simple_byte            4     3 (average)
  5201                           ;	Chosen strategy is simple_byte
  5202  00E8EC  5012               	movf	??_button_B_menu+1,w,c
  5203  00E8EE  0A00               	xorlw	0	; case 0
  5204  00E8F0  A4D8               	btfss	status,2,c
  5205  00E8F2  0012               	return	
  5206                           
  5207                           ; Switch size 1, requested type "space"
  5208                           ; Number of cases is 4, Range of values is 0 to 3
  5209                           ; switch strategies available:
  5210                           ; Name         Instructions Cycles
  5211                           ; simple_byte           13     7 (average)
  5212                           ;	Chosen strategy is simple_byte
  5213  00E8F4  5011               	movf	??_button_B_menu,w,c
  5214  00E8F6  0A00               	xorlw	0	; case 0
  5215  00E8F8  B4D8               	btfsc	status,2,c
  5216  00E8FA  D7E8               	goto	l3654
  5217  00E8FC  0A01               	xorlw	1	; case 1
  5218  00E8FE  B4D8               	btfsc	status,2,c
  5219  00E900  D7E8               	goto	l3656
  5220  00E902  0A03               	xorlw	3	; case 2
  5221  00E904  B4D8               	btfsc	status,2,c
  5222  00E906  D7E8               	goto	l3658
  5223  00E908  0A01               	xorlw	1	; case 3
  5224  00E90A  A4D8               	btfss	status,2,c
  5225  00E90C  0012               	return	
  5226  00E90E  D7E7               	goto	l3660
  5227  00E910  0012               	return		;funcret
  5228  00E912                     __end_of_button_B_menu:
  5229                           	opt stack 0
  5230                           tblptru	equ	0xFF8
  5231                           tblptrh	equ	0xFF7
  5232                           tblptrl	equ	0xFF6
  5233                           tablat	equ	0xFF5
  5234                           prodl	equ	0xFF3
  5235                           intcon	equ	0xFF2
  5236                           postinc0	equ	0xFEE
  5237                           wreg	equ	0xFE8
  5238                           indf1	equ	0xFE7
  5239                           postdec1	equ	0xFE5
  5240                           fsr1h	equ	0xFE2
  5241                           fsr1l	equ	0xFE1
  5242                           indf2	equ	0xFDF
  5243                           fsr2h	equ	0xFDA
  5244                           fsr2l	equ	0xFD9
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function _activity_submenu_siren *****************
  5248 ;; Defined at:
  5249 ;;		line 328 in file "main.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;		None               void
  5256 ;; Registers used:
  5257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    7
  5270 ;; This function calls:
  5271 ;;		_lcd_init
  5272 ;;		_lcd_write
  5273 ;;		_submenu_selector_0
  5274 ;; This function is called by:
  5275 ;;		_button_B_menu
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text33
  5280  00EE0C                     __ptext33:
  5281                           	opt stack 0
  5282  00EE0C                     _activity_submenu_siren:
  5283                           	opt stack 20
  5284                           
  5285                           ;main.c: 330: activity = 7;
  5286                           
  5287                           ;incstack = 0
  5288  00EE0C  0E00               	movlw	0
  5289  00EE0E  6E2A               	movwf	_activity+1,c
  5290  00EE10  0E07               	movlw	7
  5291  00EE12  6E29               	movwf	_activity,c
  5292                           
  5293                           ;main.c: 331: lcd_init();
  5294  00EE14  EC87  F078         	call	_lcd_init	;wreg free
  5295                           
  5296                           ;main.c: 332: lcd_write(1,1,"Sirena");
  5297  00EE18  0E00               	movlw	0
  5298  00EE1A  6E0C               	movwf	lcd_write@column+1,c
  5299  00EE1C  0E01               	movlw	1
  5300  00EE1E  6E0B               	movwf	lcd_write@column,c
  5301  00EE20  0E00               	movlw	0
  5302  00EE22  6E0E               	movwf	lcd_write@row+1,c
  5303  00EE24  0E01               	movlw	1
  5304  00EE26  6E0D               	movwf	lcd_write@row,c
  5305  00EE28  0EAC               	movlw	low STR_33
  5306  00EE2A  6E0F               	movwf	lcd_write@string,c
  5307  00EE2C  0EFF               	movlw	high STR_33
  5308  00EE2E  6E10               	movwf	lcd_write@string+1,c
  5309  00EE30  EC7C  F071         	call	_lcd_write	;wreg free
  5310                           
  5311                           ;main.c: 333: lcd_write(10,1,"Volumen");
  5312  00EE34  0E00               	movlw	0
  5313  00EE36  6E0C               	movwf	lcd_write@column+1,c
  5314  00EE38  0E0A               	movlw	10
  5315  00EE3A  6E0B               	movwf	lcd_write@column,c
  5316  00EE3C  0E00               	movlw	0
  5317  00EE3E  6E0E               	movwf	lcd_write@row+1,c
  5318  00EE40  0E01               	movlw	1
  5319  00EE42  6E0D               	movwf	lcd_write@row,c
  5320  00EE44  0E55               	movlw	low STR_34
  5321  00EE46  6E0F               	movwf	lcd_write@string,c
  5322  00EE48  0EFF               	movlw	high STR_34
  5323  00EE4A  6E10               	movwf	lcd_write@string+1,c
  5324  00EE4C  EC7C  F071         	call	_lcd_write	;wreg free
  5325                           
  5326                           ;main.c: 334: lcd_write(10,2,"Tono");
  5327  00EE50  0E00               	movlw	0
  5328  00EE52  6E0C               	movwf	lcd_write@column+1,c
  5329  00EE54  0E0A               	movlw	10
  5330  00EE56  6E0B               	movwf	lcd_write@column,c
  5331  00EE58  0E00               	movlw	0
  5332  00EE5A  6E0E               	movwf	lcd_write@row+1,c
  5333  00EE5C  0E02               	movlw	2
  5334  00EE5E  6E0D               	movwf	lcd_write@row,c
  5335  00EE60  0ED4               	movlw	low STR_35
  5336  00EE62  6E0F               	movwf	lcd_write@string,c
  5337  00EE64  0EFF               	movlw	high STR_35
  5338  00EE66  6E10               	movwf	lcd_write@string+1,c
  5339  00EE68  EC7C  F071         	call	_lcd_write	;wreg free
  5340                           
  5341                           ;main.c: 335: submenu_selector_0();
  5342  00EE6C  ECBA  F073         	call	_submenu_selector_0	;wreg free
  5343  00EE70  0012               	return		;funcret
  5344  00EE72                     __end_of_activity_submenu_siren:
  5345                           	opt stack 0
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           prodl	equ	0xFF3
  5351                           intcon	equ	0xFF2
  5352                           postinc0	equ	0xFEE
  5353                           wreg	equ	0xFE8
  5354                           indf1	equ	0xFE7
  5355                           postdec1	equ	0xFE5
  5356                           fsr1h	equ	0xFE2
  5357                           fsr1l	equ	0xFE1
  5358                           indf2	equ	0xFDF
  5359                           fsr2h	equ	0xFDA
  5360                           fsr2l	equ	0xFD9
  5361                           status	equ	0xFD8
  5362                           
  5363 ;; *************** function _activity_submenu_pin *****************
  5364 ;; Defined at:
  5365 ;;		line 363 in file "main.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;		None               void
  5372 ;; Registers used:
  5373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5383 ;;Total ram usage:        0 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    7
  5386 ;; This function calls:
  5387 ;;		_lcd_init
  5388 ;;		_lcd_write
  5389 ;;		_submenu_selector_0
  5390 ;; This function is called by:
  5391 ;;		_button_B_menu
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text34
  5396  00EDA6                     __ptext34:
  5397                           	opt stack 0
  5398  00EDA6                     _activity_submenu_pin:
  5399                           	opt stack 20
  5400                           
  5401                           ;main.c: 365: activity = 5;
  5402                           
  5403                           ;incstack = 0
  5404  00EDA6  0E00               	movlw	0
  5405  00EDA8  6E2A               	movwf	_activity+1,c
  5406  00EDAA  0E05               	movlw	5
  5407  00EDAC  6E29               	movwf	_activity,c
  5408                           
  5409                           ;main.c: 366: lcd_init();
  5410  00EDAE  EC87  F078         	call	_lcd_init	;wreg free
  5411                           
  5412                           ;main.c: 367: lcd_write(1,1,"Pin");
  5413  00EDB2  0E00               	movlw	0
  5414  00EDB4  6E0C               	movwf	lcd_write@column+1,c
  5415  00EDB6  0E01               	movlw	1
  5416  00EDB8  6E0B               	movwf	lcd_write@column,c
  5417  00EDBA  0E00               	movlw	0
  5418  00EDBC  6E0E               	movwf	lcd_write@row+1,c
  5419  00EDBE  0E01               	movlw	1
  5420  00EDC0  6E0D               	movwf	lcd_write@row,c
  5421  00EDC2  0EE7               	movlw	low STR_18
  5422  00EDC4  6E0F               	movwf	lcd_write@string,c
  5423  00EDC6  0EFF               	movlw	high STR_18
  5424  00EDC8  6E10               	movwf	lcd_write@string+1,c
  5425  00EDCA  EC7C  F071         	call	_lcd_write	;wreg free
  5426                           
  5427                           ;main.c: 368: lcd_write(10,1,"Cambiar");
  5428  00EDCE  0E00               	movlw	0
  5429  00EDD0  6E0C               	movwf	lcd_write@column+1,c
  5430  00EDD2  0E0A               	movlw	10
  5431  00EDD4  6E0B               	movwf	lcd_write@column,c
  5432  00EDD6  0E00               	movlw	0
  5433  00EDD8  6E0E               	movwf	lcd_write@row+1,c
  5434  00EDDA  0E01               	movlw	1
  5435  00EDDC  6E0D               	movwf	lcd_write@row,c
  5436  00EDDE  0E5D               	movlw	low STR_43
  5437  00EDE0  6E0F               	movwf	lcd_write@string,c
  5438  00EDE2  0EFF               	movlw	high STR_43
  5439  00EDE4  6E10               	movwf	lcd_write@string+1,c
  5440  00EDE6  EC7C  F071         	call	_lcd_write	;wreg free
  5441                           
  5442                           ;main.c: 369: lcd_write(10,2,"Reset");
  5443  00EDEA  0E00               	movlw	0
  5444  00EDEC  6E0C               	movwf	lcd_write@column+1,c
  5445  00EDEE  0E0A               	movlw	10
  5446  00EDF0  6E0B               	movwf	lcd_write@column,c
  5447  00EDF2  0E00               	movlw	0
  5448  00EDF4  6E0E               	movwf	lcd_write@row+1,c
  5449  00EDF6  0E02               	movlw	2
  5450  00EDF8  6E0D               	movwf	lcd_write@row,c
  5451  00EDFA  0EBF               	movlw	low STR_44
  5452  00EDFC  6E0F               	movwf	lcd_write@string,c
  5453  00EDFE  0EFF               	movlw	high STR_44
  5454  00EE00  6E10               	movwf	lcd_write@string+1,c
  5455  00EE02  EC7C  F071         	call	_lcd_write	;wreg free
  5456                           
  5457                           ;main.c: 370: submenu_selector_0();
  5458  00EE06  ECBA  F073         	call	_submenu_selector_0	;wreg free
  5459  00EE0A  0012               	return		;funcret
  5460  00EE0C                     __end_of_activity_submenu_pin:
  5461                           	opt stack 0
  5462                           tblptru	equ	0xFF8
  5463                           tblptrh	equ	0xFF7
  5464                           tblptrl	equ	0xFF6
  5465                           tablat	equ	0xFF5
  5466                           prodl	equ	0xFF3
  5467                           intcon	equ	0xFF2
  5468                           postinc0	equ	0xFEE
  5469                           wreg	equ	0xFE8
  5470                           indf1	equ	0xFE7
  5471                           postdec1	equ	0xFE5
  5472                           fsr1h	equ	0xFE2
  5473                           fsr1l	equ	0xFE1
  5474                           indf2	equ	0xFDF
  5475                           fsr2h	equ	0xFDA
  5476                           fsr2l	equ	0xFD9
  5477                           status	equ	0xFD8
  5478                           
  5479 ;; *************** function _activity_submenu_date_and_time *****************
  5480 ;; Defined at:
  5481 ;;		line 239 in file "main.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;		None               void
  5488 ;; Registers used:
  5489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;Total ram usage:        0 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    7
  5502 ;; This function calls:
  5503 ;;		_lcd_init
  5504 ;;		_lcd_write
  5505 ;;		_submenu_selector_0
  5506 ;; This function is called by:
  5507 ;;		_button_B_menu
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text35
  5512  00ED40                     __ptext35:
  5513                           	opt stack 0
  5514  00ED40                     _activity_submenu_date_and_time:
  5515                           	opt stack 20
  5516                           
  5517                           ;main.c: 241: activity = 3;
  5518                           
  5519                           ;incstack = 0
  5520  00ED40  0E00               	movlw	0
  5521  00ED42  6E2A               	movwf	_activity+1,c
  5522  00ED44  0E03               	movlw	3
  5523  00ED46  6E29               	movwf	_activity,c
  5524                           
  5525                           ;main.c: 242: lcd_init();
  5526  00ED48  EC87  F078         	call	_lcd_init	;wreg free
  5527                           
  5528                           ;main.c: 243: lcd_write(1,1,"Reloj");
  5529  00ED4C  0E00               	movlw	0
  5530  00ED4E  6E0C               	movwf	lcd_write@column+1,c
  5531  00ED50  0E01               	movlw	1
  5532  00ED52  6E0B               	movwf	lcd_write@column,c
  5533  00ED54  0E00               	movlw	0
  5534  00ED56  6E0E               	movwf	lcd_write@row+1,c
  5535  00ED58  0E01               	movlw	1
  5536  00ED5A  6E0D               	movwf	lcd_write@row,c
  5537  00ED5C  0EB9               	movlw	low STR_17
  5538  00ED5E  6E0F               	movwf	lcd_write@string,c
  5539  00ED60  0EFF               	movlw	high STR_17
  5540  00ED62  6E10               	movwf	lcd_write@string+1,c
  5541  00ED64  EC7C  F071         	call	_lcd_write	;wreg free
  5542                           
  5543                           ;main.c: 244: lcd_write(10,1,"Fecha");
  5544  00ED68  0E00               	movlw	0
  5545  00ED6A  6E0C               	movwf	lcd_write@column+1,c
  5546  00ED6C  0E0A               	movlw	10
  5547  00ED6E  6E0B               	movwf	lcd_write@column,c
  5548  00ED70  0E00               	movlw	0
  5549  00ED72  6E0E               	movwf	lcd_write@row+1,c
  5550  00ED74  0E01               	movlw	1
  5551  00ED76  6E0D               	movwf	lcd_write@row,c
  5552  00ED78  0EB3               	movlw	low STR_24
  5553  00ED7A  6E0F               	movwf	lcd_write@string,c
  5554  00ED7C  0EFF               	movlw	high STR_24
  5555  00ED7E  6E10               	movwf	lcd_write@string+1,c
  5556  00ED80  EC7C  F071         	call	_lcd_write	;wreg free
  5557                           
  5558                           ;main.c: 245: lcd_write(10,2,"Hora");
  5559  00ED84  0E00               	movlw	0
  5560  00ED86  6E0C               	movwf	lcd_write@column+1,c
  5561  00ED88  0E0A               	movlw	10
  5562  00ED8A  6E0B               	movwf	lcd_write@column,c
  5563  00ED8C  0E00               	movlw	0
  5564  00ED8E  6E0E               	movwf	lcd_write@row+1,c
  5565  00ED90  0E02               	movlw	2
  5566  00ED92  6E0D               	movwf	lcd_write@row,c
  5567  00ED94  0ECA               	movlw	low STR_25
  5568  00ED96  6E0F               	movwf	lcd_write@string,c
  5569  00ED98  0EFF               	movlw	high STR_25
  5570  00ED9A  6E10               	movwf	lcd_write@string+1,c
  5571  00ED9C  EC7C  F071         	call	_lcd_write	;wreg free
  5572                           
  5573                           ;main.c: 246: submenu_selector_0();
  5574  00EDA0  ECBA  F073         	call	_submenu_selector_0	;wreg free
  5575  00EDA4  0012               	return		;funcret
  5576  00EDA6                     __end_of_activity_submenu_date_and_time:
  5577                           	opt stack 0
  5578                           tblptru	equ	0xFF8
  5579                           tblptrh	equ	0xFF7
  5580                           tblptrl	equ	0xFF6
  5581                           tablat	equ	0xFF5
  5582                           prodl	equ	0xFF3
  5583                           intcon	equ	0xFF2
  5584                           postinc0	equ	0xFEE
  5585                           wreg	equ	0xFE8
  5586                           indf1	equ	0xFE7
  5587                           postdec1	equ	0xFE5
  5588                           fsr1h	equ	0xFE2
  5589                           fsr1l	equ	0xFE1
  5590                           indf2	equ	0xFDF
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function _activity_submenu_activation *****************
  5596 ;; Defined at:
  5597 ;;		line 226 in file "main.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;		None               void
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5615 ;;Total ram usage:        0 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    7
  5618 ;; This function calls:
  5619 ;;		_lcd_init
  5620 ;;		_lcd_write
  5621 ;;		_submenu_selector_0
  5622 ;; This function is called by:
  5623 ;;		_button_B_menu
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text36
  5628  00ECDA                     __ptext36:
  5629                           	opt stack 0
  5630  00ECDA                     _activity_submenu_activation:
  5631                           	opt stack 20
  5632                           
  5633                           ;main.c: 228: activity = 4;
  5634                           
  5635                           ;incstack = 0
  5636  00ECDA  0E00               	movlw	0
  5637  00ECDC  6E2A               	movwf	_activity+1,c
  5638  00ECDE  0E04               	movlw	4
  5639  00ECE0  6E29               	movwf	_activity,c
  5640                           
  5641                           ;main.c: 229: lcd_init();
  5642  00ECE2  EC87  F078         	call	_lcd_init	;wreg free
  5643                           
  5644                           ;main.c: 230: lcd_write(1,1,"Activar");
  5645  00ECE6  0E00               	movlw	0
  5646  00ECE8  6E0C               	movwf	lcd_write@column+1,c
  5647  00ECEA  0E01               	movlw	1
  5648  00ECEC  6E0B               	movwf	lcd_write@column,c
  5649  00ECEE  0E00               	movlw	0
  5650  00ECF0  6E0E               	movwf	lcd_write@row+1,c
  5651  00ECF2  0E01               	movlw	1
  5652  00ECF4  6E0D               	movwf	lcd_write@row,c
  5653  00ECF6  0E65               	movlw	low STR_16
  5654  00ECF8  6E0F               	movwf	lcd_write@string,c
  5655  00ECFA  0EFF               	movlw	high STR_16
  5656  00ECFC  6E10               	movwf	lcd_write@string+1,c
  5657  00ECFE  EC7C  F071         	call	_lcd_write	;wreg free
  5658                           
  5659                           ;main.c: 231: lcd_write(10,1,"Si");
  5660  00ED02  0E00               	movlw	0
  5661  00ED04  6E0C               	movwf	lcd_write@column+1,c
  5662  00ED06  0E0A               	movlw	10
  5663  00ED08  6E0B               	movwf	lcd_write@column,c
  5664  00ED0A  0E00               	movlw	0
  5665  00ED0C  6E0E               	movwf	lcd_write@row+1,c
  5666  00ED0E  0E01               	movlw	1
  5667  00ED10  6E0D               	movwf	lcd_write@row,c
  5668  00ED12  0EEB               	movlw	low STR_21
  5669  00ED14  6E0F               	movwf	lcd_write@string,c
  5670  00ED16  0EFF               	movlw	high STR_21
  5671  00ED18  6E10               	movwf	lcd_write@string+1,c
  5672  00ED1A  EC7C  F071         	call	_lcd_write	;wreg free
  5673                           
  5674                           ;main.c: 232: lcd_write(10,2,"No");
  5675  00ED1E  0E00               	movlw	0
  5676  00ED20  6E0C               	movwf	lcd_write@column+1,c
  5677  00ED22  0E0A               	movlw	10
  5678  00ED24  6E0B               	movwf	lcd_write@column,c
  5679  00ED26  0E00               	movlw	0
  5680  00ED28  6E0E               	movwf	lcd_write@row+1,c
  5681  00ED2A  0E02               	movlw	2
  5682  00ED2C  6E0D               	movwf	lcd_write@row,c
  5683  00ED2E  0EEE               	movlw	low STR_22
  5684  00ED30  6E0F               	movwf	lcd_write@string,c
  5685  00ED32  0EFF               	movlw	high STR_22
  5686  00ED34  6E10               	movwf	lcd_write@string+1,c
  5687  00ED36  EC7C  F071         	call	_lcd_write	;wreg free
  5688                           
  5689                           ;main.c: 233: submenu_selector_0();
  5690  00ED3A  ECBA  F073         	call	_submenu_selector_0	;wreg free
  5691  00ED3E  0012               	return		;funcret
  5692  00ED40                     __end_of_activity_submenu_activation:
  5693                           	opt stack 0
  5694                           tblptru	equ	0xFF8
  5695                           tblptrh	equ	0xFF7
  5696                           tblptrl	equ	0xFF6
  5697                           tablat	equ	0xFF5
  5698                           prodl	equ	0xFF3
  5699                           intcon	equ	0xFF2
  5700                           postinc0	equ	0xFEE
  5701                           wreg	equ	0xFE8
  5702                           indf1	equ	0xFE7
  5703                           postdec1	equ	0xFE5
  5704                           fsr1h	equ	0xFE2
  5705                           fsr1l	equ	0xFE1
  5706                           indf2	equ	0xFDF
  5707                           fsr2h	equ	0xFDA
  5708                           fsr2l	equ	0xFD9
  5709                           status	equ	0xFD8
  5710                           
  5711 ;; *************** function _button_A *****************
  5712 ;; Defined at:
  5713 ;;		line 496 in file "main.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;		None               void
  5720 ;; Registers used:
  5721 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5731 ;;Total ram usage:        2 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    8
  5734 ;; This function calls:
  5735 ;;		_activity_pin
  5736 ;;		_cursor_displacement
  5737 ;;		_menu_selector
  5738 ;;		_reset_home_callback
  5739 ;;		_submenu_selector
  5740 ;; This function is called by:
  5741 ;;		_keyboard_control
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text37
  5746  00EC26                     __ptext37:
  5747                           	opt stack 0
  5748  00EC26                     _button_A:
  5749                           	opt stack 21
  5750                           
  5751                           ;main.c: 498: reset_home_callback();
  5752                           
  5753                           ;incstack = 0
  5754  00EC26  EC40  F071         	call	_reset_home_callback	;wreg free
  5755                           
  5756                           ;main.c: 500: switch(activity){
  5757  00EC2A  D00F               	goto	l3868
  5758  00EC2C                     l3856:
  5759                           
  5760                           ;main.c: 503: activity_pin();
  5761  00EC2C  ECF9  F074         	call	_activity_pin	;wreg free
  5762                           
  5763                           ;main.c: 507: break;
  5764                           
  5765                           ;main.c: 506: case 1:
  5766                           
  5767                           ;main.c: 504: break;
  5768  00EC30  0012               	return	
  5769  00EC32                     l3858:
  5770                           
  5771                           ;main.c: 510: menu_selector();
  5772  00EC32  EC41  F074         	call	_menu_selector	;wreg free
  5773                           
  5774                           ;main.c: 511: break;
  5775  00EC36  0012               	return	
  5776  00EC38                     l3860:
  5777                           
  5778                           ;main.c: 514: cursor_displacement();
  5779  00EC38  EC8C  F072         	call	_cursor_displacement	;wreg free
  5780                           
  5781                           ;main.c: 515: break;
  5782  00EC3C  0012               	return	
  5783  00EC3E                     l3862:
  5784                           
  5785                           ;main.c: 518: cursor_displacement();
  5786  00EC3E  EC8C  F072         	call	_cursor_displacement	;wreg free
  5787                           
  5788                           ;main.c: 519: break;
  5789  00EC42  0012               	return	
  5790  00EC44                     l3864:
  5791                           
  5792                           ;main.c: 522: submenu_selector();
  5793  00EC44  EC2B  F072         	call	_submenu_selector	;wreg free
  5794                           
  5795                           ;main.c: 524: }
  5796                           
  5797                           ;main.c: 523: break;
  5798  00EC48  0012               	return	
  5799  00EC4A                     l3868:
  5800  00EC4A  C029  F013         	movff	_activity,??_button_A
  5801  00EC4E  C02A  F014         	movff	_activity+1,??_button_A+1
  5802                           
  5803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5804                           ; Switch size 1, requested type "space"
  5805                           ; Number of cases is 1, Range of values is 0 to 0
  5806                           ; switch strategies available:
  5807                           ; Name         Instructions Cycles
  5808                           ; simple_byte            4     3 (average)
  5809                           ;	Chosen strategy is simple_byte
  5810  00EC52  5014               	movf	??_button_A+1,w,c
  5811  00EC54  0A00               	xorlw	0	; case 0
  5812  00EC56  A4D8               	btfss	status,2,c
  5813  00EC58  D7F5               	goto	l3864
  5814                           
  5815                           ; Switch size 1, requested type "space"
  5816                           ; Number of cases is 5, Range of values is 0 to 11
  5817                           ; switch strategies available:
  5818                           ; Name         Instructions Cycles
  5819                           ; simple_byte           16     9 (average)
  5820                           ;	Chosen strategy is simple_byte
  5821  00EC5A  5013               	movf	??_button_A,w,c
  5822  00EC5C  0A00               	xorlw	0	; case 0
  5823  00EC5E  B4D8               	btfsc	status,2,c
  5824  00EC60  D7E5               	goto	l3856
  5825  00EC62  0A01               	xorlw	1	; case 1
  5826  00EC64  B4D8               	btfsc	status,2,c
  5827  00EC66  0012               	return	
  5828  00EC68  0A03               	xorlw	3	; case 2
  5829  00EC6A  B4D8               	btfsc	status,2,c
  5830  00EC6C  D7E2               	goto	l3858
  5831  00EC6E  0A08               	xorlw	8	; case 10
  5832  00EC70  B4D8               	btfsc	status,2,c
  5833  00EC72  D7E2               	goto	l3860
  5834  00EC74  0A01               	xorlw	1	; case 11
  5835  00EC76  B4D8               	btfsc	status,2,c
  5836  00EC78  D7E2               	goto	l3862
  5837  00EC7A  D7E4               	goto	l3864
  5838  00EC7C  0012               	return		;funcret
  5839  00EC7E                     __end_of_button_A:
  5840                           	opt stack 0
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodl	equ	0xFF3
  5846                           intcon	equ	0xFF2
  5847                           postinc0	equ	0xFEE
  5848                           wreg	equ	0xFE8
  5849                           indf1	equ	0xFE7
  5850                           postdec1	equ	0xFE5
  5851                           fsr1h	equ	0xFE2
  5852                           fsr1l	equ	0xFE1
  5853                           indf2	equ	0xFDF
  5854                           fsr2h	equ	0xFDA
  5855                           fsr2l	equ	0xFD9
  5856                           status	equ	0xFD8
  5857                           
  5858 ;; *************** function _submenu_selector *****************
  5859 ;; Defined at:
  5860 ;;		line 184 in file "main.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;		None               void
  5867 ;; Registers used:
  5868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5877 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5878 ;;Total ram usage:        2 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    7
  5881 ;; This function calls:
  5882 ;;		_submenu_selector_0
  5883 ;;		_submenu_selector_1
  5884 ;; This function is called by:
  5885 ;;		_button_A
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           	psect	text38
  5890  00E456                     __ptext38:
  5891                           	opt stack 0
  5892  00E456                     _submenu_selector:
  5893                           	opt stack 21
  5894                           
  5895                           ;main.c: 186: switch(submenu_selected){
  5896                           
  5897                           ;incstack = 0
  5898  00E456  D006               	goto	l3614
  5899  00E458                     l3608:
  5900                           
  5901                           ;main.c: 189: submenu_selector_1();
  5902  00E458  ECDB  F073         	call	_submenu_selector_1	;wreg free
  5903                           
  5904                           ;main.c: 190: break;
  5905  00E45C  0012               	return	
  5906  00E45E                     l3610:
  5907                           
  5908                           ;main.c: 193: submenu_selector_0();
  5909  00E45E  ECBA  F073         	call	_submenu_selector_0	;wreg free
  5910                           
  5911                           ;main.c: 195: }
  5912                           
  5913                           ;main.c: 194: break;
  5914  00E462  0012               	return	
  5915  00E464                     l3614:
  5916  00E464  C043  F011         	movff	_submenu_selected,??_submenu_selector
  5917  00E468  C044  F012         	movff	_submenu_selected+1,??_submenu_selector+1
  5918                           
  5919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5920                           ; Switch size 1, requested type "space"
  5921                           ; Number of cases is 1, Range of values is 0 to 0
  5922                           ; switch strategies available:
  5923                           ; Name         Instructions Cycles
  5924                           ; simple_byte            4     3 (average)
  5925                           ;	Chosen strategy is simple_byte
  5926  00E46C  5012               	movf	??_submenu_selector+1,w,c
  5927  00E46E  0A00               	xorlw	0	; case 0
  5928  00E470  A4D8               	btfss	status,2,c
  5929  00E472  0012               	return	
  5930                           
  5931                           ; Switch size 1, requested type "space"
  5932                           ; Number of cases is 2, Range of values is 0 to 1
  5933                           ; switch strategies available:
  5934                           ; Name         Instructions Cycles
  5935                           ; simple_byte            7     4 (average)
  5936                           ;	Chosen strategy is simple_byte
  5937  00E474  5011               	movf	??_submenu_selector,w,c
  5938  00E476  0A00               	xorlw	0	; case 0
  5939  00E478  B4D8               	btfsc	status,2,c
  5940  00E47A  D7EE               	goto	l3608
  5941  00E47C  0A01               	xorlw	1	; case 1
  5942  00E47E  A4D8               	btfss	status,2,c
  5943  00E480  0012               	return	
  5944  00E482  D7ED               	goto	l3610
  5945  00E484  0012               	return		;funcret
  5946  00E486                     __end_of_submenu_selector:
  5947                           	opt stack 0
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           prodl	equ	0xFF3
  5953                           intcon	equ	0xFF2
  5954                           postinc0	equ	0xFEE
  5955                           wreg	equ	0xFE8
  5956                           indf1	equ	0xFE7
  5957                           postdec1	equ	0xFE5
  5958                           fsr1h	equ	0xFE2
  5959                           fsr1l	equ	0xFE1
  5960                           indf2	equ	0xFDF
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function _submenu_selector_1 *****************
  5966 ;; Defined at:
  5967 ;;		line 176 in file "main.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;		None               void
  5974 ;; Registers used:
  5975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    6
  5988 ;; This function calls:
  5989 ;;		_lcd_write
  5990 ;; This function is called by:
  5991 ;;		_submenu_selector
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text39
  5996  00E7B6                     __ptext39:
  5997                           	opt stack 0
  5998  00E7B6                     _submenu_selector_1:
  5999                           	opt stack 21
  6000                           
  6001                           ;main.c: 178: lcd_write(9,2,">");
  6002                           
  6003                           ;incstack = 0
  6004  00E7B6  0E00               	movlw	0
  6005  00E7B8  6E0C               	movwf	lcd_write@column+1,c
  6006  00E7BA  0E09               	movlw	9
  6007  00E7BC  6E0B               	movwf	lcd_write@column,c
  6008  00E7BE  0E00               	movlw	0
  6009  00E7C0  6E0E               	movwf	lcd_write@row+1,c
  6010  00E7C2  0E02               	movlw	2
  6011  00E7C4  6E0D               	movwf	lcd_write@row,c
  6012  00E7C6  0EF5               	movlw	low STR_2
  6013  00E7C8  6E0F               	movwf	lcd_write@string,c
  6014  00E7CA  0EFF               	movlw	high STR_2
  6015  00E7CC  6E10               	movwf	lcd_write@string+1,c
  6016  00E7CE  EC7C  F071         	call	_lcd_write	;wreg free
  6017                           
  6018                           ;main.c: 179: submenu_selected = 1;
  6019  00E7D2  0E00               	movlw	0
  6020  00E7D4  6E44               	movwf	_submenu_selected+1,c
  6021  00E7D6  0E01               	movlw	1
  6022  00E7D8  6E43               	movwf	_submenu_selected,c
  6023                           
  6024                           ;main.c: 180: lcd_write(9,1," ");
  6025  00E7DA  0E00               	movlw	0
  6026  00E7DC  6E0C               	movwf	lcd_write@column+1,c
  6027  00E7DE  0E09               	movlw	9
  6028  00E7E0  6E0B               	movwf	lcd_write@column,c
  6029  00E7E2  0E00               	movlw	0
  6030  00E7E4  6E0E               	movwf	lcd_write@row+1,c
  6031  00E7E6  0E01               	movlw	1
  6032  00E7E8  6E0D               	movwf	lcd_write@row,c
  6033  00E7EA  0EF1               	movlw	low STR_3
  6034  00E7EC  6E0F               	movwf	lcd_write@string,c
  6035  00E7EE  0EFF               	movlw	high STR_3
  6036  00E7F0  6E10               	movwf	lcd_write@string+1,c
  6037  00E7F2  EC7C  F071         	call	_lcd_write	;wreg free
  6038  00E7F6  0012               	return		;funcret
  6039  00E7F8                     __end_of_submenu_selector_1:
  6040                           	opt stack 0
  6041                           tblptru	equ	0xFF8
  6042                           tblptrh	equ	0xFF7
  6043                           tblptrl	equ	0xFF6
  6044                           tablat	equ	0xFF5
  6045                           prodl	equ	0xFF3
  6046                           intcon	equ	0xFF2
  6047                           postinc0	equ	0xFEE
  6048                           wreg	equ	0xFE8
  6049                           indf1	equ	0xFE7
  6050                           postdec1	equ	0xFE5
  6051                           fsr1h	equ	0xFE2
  6052                           fsr1l	equ	0xFE1
  6053                           indf2	equ	0xFDF
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           
  6058 ;; *************** function _submenu_selector_0 *****************
  6059 ;; Defined at:
  6060 ;;		line 168 in file "main.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;		None
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;		None               void
  6067 ;; Registers used:
  6068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;Total ram usage:        0 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    6
  6081 ;; This function calls:
  6082 ;;		_lcd_write
  6083 ;; This function is called by:
  6084 ;;		_submenu_selector
  6085 ;;		_activity_submenu_activation
  6086 ;;		_activity_submenu_date_and_time
  6087 ;;		_activity_submenu_siren
  6088 ;;		_activity_submenu_siren_volume
  6089 ;;		_activity_submenu_siren_tone
  6090 ;;		_activity_submenu_pin
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text40
  6095  00E774                     __ptext40:
  6096                           	opt stack 0
  6097  00E774                     _submenu_selector_0:
  6098                           	opt stack 20
  6099                           
  6100                           ;main.c: 170: lcd_write(9,1,">");
  6101                           
  6102                           ;incstack = 0
  6103  00E774  0E00               	movlw	0
  6104  00E776  6E0C               	movwf	lcd_write@column+1,c
  6105  00E778  0E09               	movlw	9
  6106  00E77A  6E0B               	movwf	lcd_write@column,c
  6107  00E77C  0E00               	movlw	0
  6108  00E77E  6E0E               	movwf	lcd_write@row+1,c
  6109  00E780  0E01               	movlw	1
  6110  00E782  6E0D               	movwf	lcd_write@row,c
  6111  00E784  0EF5               	movlw	low STR_2
  6112  00E786  6E0F               	movwf	lcd_write@string,c
  6113  00E788  0EFF               	movlw	high STR_2
  6114  00E78A  6E10               	movwf	lcd_write@string+1,c
  6115  00E78C  EC7C  F071         	call	_lcd_write	;wreg free
  6116                           
  6117                           ;main.c: 171: submenu_selected = 0;
  6118  00E790  0E00               	movlw	0
  6119  00E792  6E44               	movwf	_submenu_selected+1,c
  6120  00E794  0E00               	movlw	0
  6121  00E796  6E43               	movwf	_submenu_selected,c
  6122                           
  6123                           ;main.c: 172: lcd_write(9,2," ");
  6124  00E798  0E00               	movlw	0
  6125  00E79A  6E0C               	movwf	lcd_write@column+1,c
  6126  00E79C  0E09               	movlw	9
  6127  00E79E  6E0B               	movwf	lcd_write@column,c
  6128  00E7A0  0E00               	movlw	0
  6129  00E7A2  6E0E               	movwf	lcd_write@row+1,c
  6130  00E7A4  0E02               	movlw	2
  6131  00E7A6  6E0D               	movwf	lcd_write@row,c
  6132  00E7A8  0EF1               	movlw	low STR_3
  6133  00E7AA  6E0F               	movwf	lcd_write@string,c
  6134  00E7AC  0EFF               	movlw	high STR_3
  6135  00E7AE  6E10               	movwf	lcd_write@string+1,c
  6136  00E7B0  EC7C  F071         	call	_lcd_write	;wreg free
  6137  00E7B4  0012               	return		;funcret
  6138  00E7B6                     __end_of_submenu_selector_0:
  6139                           	opt stack 0
  6140                           tblptru	equ	0xFF8
  6141                           tblptrh	equ	0xFF7
  6142                           tblptrl	equ	0xFF6
  6143                           tablat	equ	0xFF5
  6144                           prodl	equ	0xFF3
  6145                           intcon	equ	0xFF2
  6146                           postinc0	equ	0xFEE
  6147                           wreg	equ	0xFE8
  6148                           indf1	equ	0xFE7
  6149                           postdec1	equ	0xFE5
  6150                           fsr1h	equ	0xFE2
  6151                           fsr1l	equ	0xFE1
  6152                           indf2	equ	0xFDF
  6153                           fsr2h	equ	0xFDA
  6154                           fsr2l	equ	0xFD9
  6155                           status	equ	0xFD8
  6156                           
  6157 ;; *************** function _menu_selector *****************
  6158 ;; Defined at:
  6159 ;;		line 142 in file "main.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;		None
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;		None
  6164 ;; Return value:  Size  Location     Type
  6165 ;;		None               void
  6166 ;; Registers used:
  6167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6177 ;;Total ram usage:        2 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    7
  6180 ;; This function calls:
  6181 ;;		_menu_selector_0
  6182 ;;		_menu_selector_1
  6183 ;;		_menu_selector_2
  6184 ;;		_menu_selector_3
  6185 ;; This function is called by:
  6186 ;;		_button_A
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text41
  6191  00E882                     __ptext41:
  6192                           	opt stack 0
  6193  00E882                     _menu_selector:
  6194                           	opt stack 21
  6195                           
  6196                           ;main.c: 144: switch(menu_selected){
  6197                           
  6198                           ;incstack = 0
  6199  00E882  D00C               	goto	l3600
  6200  00E884                     l3590:
  6201                           
  6202                           ;main.c: 147: menu_selector_1();
  6203  00E884  EC57  F073         	call	_menu_selector_1	;wreg free
  6204                           
  6205                           ;main.c: 148: break;
  6206  00E888  0012               	return	
  6207  00E88A                     l3592:
  6208                           
  6209                           ;main.c: 151: menu_selector_2();
  6210  00E88A  EC78  F073         	call	_menu_selector_2	;wreg free
  6211                           
  6212                           ;main.c: 152: break;
  6213  00E88E  0012               	return	
  6214  00E890                     l3594:
  6215                           
  6216                           ;main.c: 155: menu_selector_3();
  6217  00E890  EC99  F073         	call	_menu_selector_3	;wreg free
  6218                           
  6219                           ;main.c: 156: break;
  6220  00E894  0012               	return	
  6221  00E896                     l3596:
  6222                           
  6223                           ;main.c: 159: menu_selector_0();
  6224  00E896  EC36  F073         	call	_menu_selector_0	;wreg free
  6225                           
  6226                           ;main.c: 162: }
  6227                           
  6228                           ;main.c: 160: break;
  6229  00E89A  0012               	return	
  6230  00E89C                     l3600:
  6231  00E89C  C03B  F011         	movff	_menu_selected,??_menu_selector
  6232  00E8A0  C03C  F012         	movff	_menu_selected+1,??_menu_selector+1
  6233                           
  6234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6235                           ; Switch size 1, requested type "space"
  6236                           ; Number of cases is 1, Range of values is 0 to 0
  6237                           ; switch strategies available:
  6238                           ; Name         Instructions Cycles
  6239                           ; simple_byte            4     3 (average)
  6240                           ;	Chosen strategy is simple_byte
  6241  00E8A4  5012               	movf	??_menu_selector+1,w,c
  6242  00E8A6  0A00               	xorlw	0	; case 0
  6243  00E8A8  A4D8               	btfss	status,2,c
  6244  00E8AA  0012               	return	
  6245                           
  6246                           ; Switch size 1, requested type "space"
  6247                           ; Number of cases is 4, Range of values is 0 to 3
  6248                           ; switch strategies available:
  6249                           ; Name         Instructions Cycles
  6250                           ; simple_byte           13     7 (average)
  6251                           ;	Chosen strategy is simple_byte
  6252  00E8AC  5011               	movf	??_menu_selector,w,c
  6253  00E8AE  0A00               	xorlw	0	; case 0
  6254  00E8B0  B4D8               	btfsc	status,2,c
  6255  00E8B2  D7E8               	goto	l3590
  6256  00E8B4  0A01               	xorlw	1	; case 1
  6257  00E8B6  B4D8               	btfsc	status,2,c
  6258  00E8B8  D7E8               	goto	l3592
  6259  00E8BA  0A03               	xorlw	3	; case 2
  6260  00E8BC  B4D8               	btfsc	status,2,c
  6261  00E8BE  D7E8               	goto	l3594
  6262  00E8C0  0A01               	xorlw	1	; case 3
  6263  00E8C2  A4D8               	btfss	status,2,c
  6264  00E8C4  0012               	return	
  6265  00E8C6  D7E7               	goto	l3596
  6266  00E8C8  0012               	return		;funcret
  6267  00E8CA                     __end_of_menu_selector:
  6268                           	opt stack 0
  6269                           tblptru	equ	0xFF8
  6270                           tblptrh	equ	0xFF7
  6271                           tblptrl	equ	0xFF6
  6272                           tablat	equ	0xFF5
  6273                           prodl	equ	0xFF3
  6274                           intcon	equ	0xFF2
  6275                           postinc0	equ	0xFEE
  6276                           wreg	equ	0xFE8
  6277                           indf1	equ	0xFE7
  6278                           postdec1	equ	0xFE5
  6279                           fsr1h	equ	0xFE2
  6280                           fsr1l	equ	0xFE1
  6281                           indf2	equ	0xFDF
  6282                           fsr2h	equ	0xFDA
  6283                           fsr2l	equ	0xFD9
  6284                           status	equ	0xFD8
  6285                           
  6286 ;; *************** function _menu_selector_3 *****************
  6287 ;; Defined at:
  6288 ;;		line 134 in file "main.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;		None               void
  6295 ;; Registers used:
  6296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    6
  6309 ;; This function calls:
  6310 ;;		_lcd_write
  6311 ;; This function is called by:
  6312 ;;		_menu_selector
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text42
  6317  00E732                     __ptext42:
  6318                           	opt stack 0
  6319  00E732                     _menu_selector_3:
  6320                           	opt stack 21
  6321                           
  6322                           ;main.c: 136: lcd_write(9,2,">");
  6323                           
  6324                           ;incstack = 0
  6325  00E732  0E00               	movlw	0
  6326  00E734  6E0C               	movwf	lcd_write@column+1,c
  6327  00E736  0E09               	movlw	9
  6328  00E738  6E0B               	movwf	lcd_write@column,c
  6329  00E73A  0E00               	movlw	0
  6330  00E73C  6E0E               	movwf	lcd_write@row+1,c
  6331  00E73E  0E02               	movlw	2
  6332  00E740  6E0D               	movwf	lcd_write@row,c
  6333  00E742  0EF5               	movlw	low STR_2
  6334  00E744  6E0F               	movwf	lcd_write@string,c
  6335  00E746  0EFF               	movlw	high STR_2
  6336  00E748  6E10               	movwf	lcd_write@string+1,c
  6337  00E74A  EC7C  F071         	call	_lcd_write	;wreg free
  6338                           
  6339                           ;main.c: 137: menu_selected = 3;
  6340  00E74E  0E00               	movlw	0
  6341  00E750  6E3C               	movwf	_menu_selected+1,c
  6342  00E752  0E03               	movlw	3
  6343  00E754  6E3B               	movwf	_menu_selected,c
  6344                           
  6345                           ;main.c: 138: lcd_write(9,1," ");
  6346  00E756  0E00               	movlw	0
  6347  00E758  6E0C               	movwf	lcd_write@column+1,c
  6348  00E75A  0E09               	movlw	9
  6349  00E75C  6E0B               	movwf	lcd_write@column,c
  6350  00E75E  0E00               	movlw	0
  6351  00E760  6E0E               	movwf	lcd_write@row+1,c
  6352  00E762  0E01               	movlw	1
  6353  00E764  6E0D               	movwf	lcd_write@row,c
  6354  00E766  0EF1               	movlw	low STR_3
  6355  00E768  6E0F               	movwf	lcd_write@string,c
  6356  00E76A  0EFF               	movlw	high STR_3
  6357  00E76C  6E10               	movwf	lcd_write@string+1,c
  6358  00E76E  EC7C  F071         	call	_lcd_write	;wreg free
  6359  00E772  0012               	return		;funcret
  6360  00E774                     __end_of_menu_selector_3:
  6361                           	opt stack 0
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodl	equ	0xFF3
  6367                           intcon	equ	0xFF2
  6368                           postinc0	equ	0xFEE
  6369                           wreg	equ	0xFE8
  6370                           indf1	equ	0xFE7
  6371                           postdec1	equ	0xFE5
  6372                           fsr1h	equ	0xFE2
  6373                           fsr1l	equ	0xFE1
  6374                           indf2	equ	0xFDF
  6375                           fsr2h	equ	0xFDA
  6376                           fsr2l	equ	0xFD9
  6377                           status	equ	0xFD8
  6378                           
  6379 ;; *************** function _menu_selector_2 *****************
  6380 ;; Defined at:
  6381 ;;		line 126 in file "main.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;		None
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;		None
  6386 ;; Return value:  Size  Location     Type
  6387 ;;		None               void
  6388 ;; Registers used:
  6389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;Total ram usage:        0 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    6
  6402 ;; This function calls:
  6403 ;;		_lcd_write
  6404 ;; This function is called by:
  6405 ;;		_menu_selector
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text43
  6410  00E6F0                     __ptext43:
  6411                           	opt stack 0
  6412  00E6F0                     _menu_selector_2:
  6413                           	opt stack 21
  6414                           
  6415                           ;main.c: 128: lcd_write(9,1,">");
  6416                           
  6417                           ;incstack = 0
  6418  00E6F0  0E00               	movlw	0
  6419  00E6F2  6E0C               	movwf	lcd_write@column+1,c
  6420  00E6F4  0E09               	movlw	9
  6421  00E6F6  6E0B               	movwf	lcd_write@column,c
  6422  00E6F8  0E00               	movlw	0
  6423  00E6FA  6E0E               	movwf	lcd_write@row+1,c
  6424  00E6FC  0E01               	movlw	1
  6425  00E6FE  6E0D               	movwf	lcd_write@row,c
  6426  00E700  0EF5               	movlw	low STR_2
  6427  00E702  6E0F               	movwf	lcd_write@string,c
  6428  00E704  0EFF               	movlw	high STR_2
  6429  00E706  6E10               	movwf	lcd_write@string+1,c
  6430  00E708  EC7C  F071         	call	_lcd_write	;wreg free
  6431                           
  6432                           ;main.c: 129: menu_selected = 2;
  6433  00E70C  0E00               	movlw	0
  6434  00E70E  6E3C               	movwf	_menu_selected+1,c
  6435  00E710  0E02               	movlw	2
  6436  00E712  6E3B               	movwf	_menu_selected,c
  6437                           
  6438                           ;main.c: 130: lcd_write(1,2," ");
  6439  00E714  0E00               	movlw	0
  6440  00E716  6E0C               	movwf	lcd_write@column+1,c
  6441  00E718  0E01               	movlw	1
  6442  00E71A  6E0B               	movwf	lcd_write@column,c
  6443  00E71C  0E00               	movlw	0
  6444  00E71E  6E0E               	movwf	lcd_write@row+1,c
  6445  00E720  0E02               	movlw	2
  6446  00E722  6E0D               	movwf	lcd_write@row,c
  6447  00E724  0EF1               	movlw	low STR_3
  6448  00E726  6E0F               	movwf	lcd_write@string,c
  6449  00E728  0EFF               	movlw	high STR_3
  6450  00E72A  6E10               	movwf	lcd_write@string+1,c
  6451  00E72C  EC7C  F071         	call	_lcd_write	;wreg free
  6452  00E730  0012               	return		;funcret
  6453  00E732                     __end_of_menu_selector_2:
  6454                           	opt stack 0
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodl	equ	0xFF3
  6460                           intcon	equ	0xFF2
  6461                           postinc0	equ	0xFEE
  6462                           wreg	equ	0xFE8
  6463                           indf1	equ	0xFE7
  6464                           postdec1	equ	0xFE5
  6465                           fsr1h	equ	0xFE2
  6466                           fsr1l	equ	0xFE1
  6467                           indf2	equ	0xFDF
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function _menu_selector_1 *****************
  6473 ;; Defined at:
  6474 ;;		line 118 in file "main.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;		None               void
  6481 ;; Registers used:
  6482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6492 ;;Total ram usage:        0 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    6
  6495 ;; This function calls:
  6496 ;;		_lcd_write
  6497 ;; This function is called by:
  6498 ;;		_menu_selector
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text44
  6503  00E6AE                     __ptext44:
  6504                           	opt stack 0
  6505  00E6AE                     _menu_selector_1:
  6506                           	opt stack 21
  6507                           
  6508                           ;main.c: 120: lcd_write(1,2,">");
  6509                           
  6510                           ;incstack = 0
  6511  00E6AE  0E00               	movlw	0
  6512  00E6B0  6E0C               	movwf	lcd_write@column+1,c
  6513  00E6B2  0E01               	movlw	1
  6514  00E6B4  6E0B               	movwf	lcd_write@column,c
  6515  00E6B6  0E00               	movlw	0
  6516  00E6B8  6E0E               	movwf	lcd_write@row+1,c
  6517  00E6BA  0E02               	movlw	2
  6518  00E6BC  6E0D               	movwf	lcd_write@row,c
  6519  00E6BE  0EF5               	movlw	low STR_2
  6520  00E6C0  6E0F               	movwf	lcd_write@string,c
  6521  00E6C2  0EFF               	movlw	high STR_2
  6522  00E6C4  6E10               	movwf	lcd_write@string+1,c
  6523  00E6C6  EC7C  F071         	call	_lcd_write	;wreg free
  6524                           
  6525                           ;main.c: 121: menu_selected = 1;
  6526  00E6CA  0E00               	movlw	0
  6527  00E6CC  6E3C               	movwf	_menu_selected+1,c
  6528  00E6CE  0E01               	movlw	1
  6529  00E6D0  6E3B               	movwf	_menu_selected,c
  6530                           
  6531                           ;main.c: 122: lcd_write(1,1," ");
  6532  00E6D2  0E00               	movlw	0
  6533  00E6D4  6E0C               	movwf	lcd_write@column+1,c
  6534  00E6D6  0E01               	movlw	1
  6535  00E6D8  6E0B               	movwf	lcd_write@column,c
  6536  00E6DA  0E00               	movlw	0
  6537  00E6DC  6E0E               	movwf	lcd_write@row+1,c
  6538  00E6DE  0E01               	movlw	1
  6539  00E6E0  6E0D               	movwf	lcd_write@row,c
  6540  00E6E2  0EF1               	movlw	low STR_3
  6541  00E6E4  6E0F               	movwf	lcd_write@string,c
  6542  00E6E6  0EFF               	movlw	high STR_3
  6543  00E6E8  6E10               	movwf	lcd_write@string+1,c
  6544  00E6EA  EC7C  F071         	call	_lcd_write	;wreg free
  6545  00E6EE  0012               	return		;funcret
  6546  00E6F0                     __end_of_menu_selector_1:
  6547                           	opt stack 0
  6548                           tblptru	equ	0xFF8
  6549                           tblptrh	equ	0xFF7
  6550                           tblptrl	equ	0xFF6
  6551                           tablat	equ	0xFF5
  6552                           prodl	equ	0xFF3
  6553                           intcon	equ	0xFF2
  6554                           postinc0	equ	0xFEE
  6555                           wreg	equ	0xFE8
  6556                           indf1	equ	0xFE7
  6557                           postdec1	equ	0xFE5
  6558                           fsr1h	equ	0xFE2
  6559                           fsr1l	equ	0xFE1
  6560                           indf2	equ	0xFDF
  6561                           fsr2h	equ	0xFDA
  6562                           fsr2l	equ	0xFD9
  6563                           status	equ	0xFD8
  6564                           
  6565 ;; *************** function _menu_selector_0 *****************
  6566 ;; Defined at:
  6567 ;;		line 110 in file "main.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;		None               void
  6574 ;; Registers used:
  6575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    6
  6588 ;; This function calls:
  6589 ;;		_lcd_write
  6590 ;; This function is called by:
  6591 ;;		_menu_selector
  6592 ;;		_activity_menu
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text45
  6597  00E66C                     __ptext45:
  6598                           	opt stack 0
  6599  00E66C                     _menu_selector_0:
  6600                           	opt stack 20
  6601                           
  6602                           ;main.c: 112: lcd_write(1,1,">");
  6603                           
  6604                           ;incstack = 0
  6605  00E66C  0E00               	movlw	0
  6606  00E66E  6E0C               	movwf	lcd_write@column+1,c
  6607  00E670  0E01               	movlw	1
  6608  00E672  6E0B               	movwf	lcd_write@column,c
  6609  00E674  0E00               	movlw	0
  6610  00E676  6E0E               	movwf	lcd_write@row+1,c
  6611  00E678  0E01               	movlw	1
  6612  00E67A  6E0D               	movwf	lcd_write@row,c
  6613  00E67C  0EF5               	movlw	low STR_2
  6614  00E67E  6E0F               	movwf	lcd_write@string,c
  6615  00E680  0EFF               	movlw	high STR_2
  6616  00E682  6E10               	movwf	lcd_write@string+1,c
  6617  00E684  EC7C  F071         	call	_lcd_write	;wreg free
  6618                           
  6619                           ;main.c: 113: menu_selected = 0;
  6620  00E688  0E00               	movlw	0
  6621  00E68A  6E3C               	movwf	_menu_selected+1,c
  6622  00E68C  0E00               	movlw	0
  6623  00E68E  6E3B               	movwf	_menu_selected,c
  6624                           
  6625                           ;main.c: 114: lcd_write(9,2," ");
  6626  00E690  0E00               	movlw	0
  6627  00E692  6E0C               	movwf	lcd_write@column+1,c
  6628  00E694  0E09               	movlw	9
  6629  00E696  6E0B               	movwf	lcd_write@column,c
  6630  00E698  0E00               	movlw	0
  6631  00E69A  6E0E               	movwf	lcd_write@row+1,c
  6632  00E69C  0E02               	movlw	2
  6633  00E69E  6E0D               	movwf	lcd_write@row,c
  6634  00E6A0  0EF1               	movlw	low STR_3
  6635  00E6A2  6E0F               	movwf	lcd_write@string,c
  6636  00E6A4  0EFF               	movlw	high STR_3
  6637  00E6A6  6E10               	movwf	lcd_write@string+1,c
  6638  00E6A8  EC7C  F071         	call	_lcd_write	;wreg free
  6639  00E6AC  0012               	return		;funcret
  6640  00E6AE                     __end_of_menu_selector_0:
  6641                           	opt stack 0
  6642                           tblptru	equ	0xFF8
  6643                           tblptrh	equ	0xFF7
  6644                           tblptrl	equ	0xFF6
  6645                           tablat	equ	0xFF5
  6646                           prodl	equ	0xFF3
  6647                           intcon	equ	0xFF2
  6648                           postinc0	equ	0xFEE
  6649                           wreg	equ	0xFE8
  6650                           indf1	equ	0xFE7
  6651                           postdec1	equ	0xFE5
  6652                           fsr1h	equ	0xFE2
  6653                           fsr1l	equ	0xFE1
  6654                           indf2	equ	0xFDF
  6655                           fsr2h	equ	0xFDA
  6656                           fsr2l	equ	0xFD9
  6657                           status	equ	0xFD8
  6658                           
  6659 ;; *************** function _cursor_displacement *****************
  6660 ;; Defined at:
  6661 ;;		line 290 in file "main.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;		None               void
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_button_A
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text46
  6689  00E518                     __ptext46:
  6690                           	opt stack 0
  6691  00E518                     _cursor_displacement:
  6692                           	opt stack 28
  6693                           
  6694                           ;main.c: 292: if(cursor_horizontal_position == 8){
  6695                           
  6696                           ;incstack = 0
  6697  00E518  0E08               	movlw	8
  6698  00E51A  1833               	xorwf	_cursor_horizontal_position,w,c
  6699  00E51C  1034               	iorwf	_cursor_horizontal_position+1,w,c
  6700  00E51E  A4D8               	btfss	status,2,c
  6701  00E520  D005               	goto	l2066
  6702                           
  6703                           ;main.c: 293: cursor_horizontal_position = 0;
  6704  00E522  0E00               	movlw	0
  6705  00E524  6E34               	movwf	_cursor_horizontal_position+1,c
  6706  00E526  0E00               	movlw	0
  6707  00E528  6E33               	movwf	_cursor_horizontal_position,c
  6708                           
  6709                           ;main.c: 294: }
  6710  00E52A  D00D               	goto	l248
  6711  00E52C                     l2066:
  6712                           
  6713                           ;main.c: 295: else if (cursor_horizontal_position == 2 || cursor_horizontal_position == 
      +                          5){
  6714  00E52C  0E02               	movlw	2
  6715  00E52E  1833               	xorwf	_cursor_horizontal_position,w,c
  6716  00E530  1034               	iorwf	_cursor_horizontal_position+1,w,c
  6717  00E532  B4D8               	btfsc	status,2,c
  6718  00E534  D005               	goto	l2070
  6719  00E536  0E05               	movlw	5
  6720  00E538  1833               	xorwf	_cursor_horizontal_position,w,c
  6721  00E53A  1034               	iorwf	_cursor_horizontal_position+1,w,c
  6722  00E53C  A4D8               	btfss	status,2,c
  6723  00E53E  D003               	goto	l248
  6724  00E540                     l2070:
  6725                           
  6726                           ;main.c: 296: cursor_horizontal_position++;
  6727  00E540  4A33               	infsnz	_cursor_horizontal_position,f,c
  6728  00E542  2A34               	incf	_cursor_horizontal_position+1,f,c
  6729  00E544  D000               	goto	l248
  6730  00E546                     l248:
  6731                           
  6732                           ;main.c: 297: }
  6733                           ;main.c: 299: cursor_horizontal_position++;
  6734  00E546  4A33               	infsnz	_cursor_horizontal_position,f,c
  6735  00E548  2A34               	incf	_cursor_horizontal_position+1,f,c
  6736  00E54A  0012               	return		;funcret
  6737  00E54C                     __end_of_cursor_displacement:
  6738                           	opt stack 0
  6739                           tblptru	equ	0xFF8
  6740                           tblptrh	equ	0xFF7
  6741                           tblptrl	equ	0xFF6
  6742                           tablat	equ	0xFF5
  6743                           prodl	equ	0xFF3
  6744                           intcon	equ	0xFF2
  6745                           postinc0	equ	0xFEE
  6746                           wreg	equ	0xFE8
  6747                           indf1	equ	0xFE7
  6748                           postdec1	equ	0xFE5
  6749                           fsr1h	equ	0xFE2
  6750                           fsr1l	equ	0xFE1
  6751                           indf2	equ	0xFDF
  6752                           fsr2h	equ	0xFDA
  6753                           fsr2l	equ	0xFD9
  6754                           status	equ	0xFD8
  6755                           
  6756 ;; *************** function _activity_pin *****************
  6757 ;; Defined at:
  6758 ;;		line 201 in file "main.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;		None               void
  6765 ;; Registers used:
  6766 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6776 ;;Total ram usage:        0 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    6
  6779 ;; This function calls:
  6780 ;;		_lcd_comand
  6781 ;;		_lcd_gotoxy
  6782 ;;		_lcd_init
  6783 ;;		_lcd_write
  6784 ;;		_strcpy
  6785 ;; This function is called by:
  6786 ;;		_pin_input_validator
  6787 ;;		_button_A
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text47
  6792  00E9F2                     __ptext47:
  6793                           	opt stack 0
  6794  00E9F2                     _activity_pin:
  6795                           	opt stack 21
  6796                           
  6797                           ;main.c: 203: activity = 1;
  6798                           
  6799                           ;incstack = 0
  6800  00E9F2  0E00               	movlw	0
  6801  00E9F4  6E2A               	movwf	_activity+1,c
  6802  00E9F6  0E01               	movlw	1
  6803  00E9F8  6E29               	movwf	_activity,c
  6804                           
  6805                           ;main.c: 204: strcpy(pin_input, "");
  6806  00E9FA  0E9F               	movlw	low _pin_input
  6807  00E9FC  6E01               	movwf	strcpy@to,c
  6808  00E9FE  0E00               	movlw	high _pin_input
  6809  00EA00  6E02               	movwf	strcpy@to+1,c
  6810  00EA02  0EF2               	movlw	low (STR_3+1)
  6811  00EA04  6E03               	movwf	strcpy@from,c
  6812  00EA06  0EFF               	movlw	high (STR_3+1)
  6813  00EA08  6E04               	movwf	strcpy@from+1,c
  6814  00EA0A  EC1E  F074         	call	_strcpy	;wreg free
  6815                           
  6816                           ;main.c: 205: lcd_init();
  6817  00EA0E  EC87  F078         	call	_lcd_init	;wreg free
  6818                           
  6819                           ;main.c: 206: lcd_write(1,1,"Ingrese su PIN:");
  6820  00EA12  0E00               	movlw	0
  6821  00EA14  6E0C               	movwf	lcd_write@column+1,c
  6822  00EA16  0E01               	movlw	1
  6823  00EA18  6E0B               	movwf	lcd_write@column,c
  6824  00EA1A  0E00               	movlw	0
  6825  00EA1C  6E0E               	movwf	lcd_write@row+1,c
  6826  00EA1E  0E01               	movlw	1
  6827  00EA20  6E0D               	movwf	lcd_write@row,c
  6828  00EA22  0E0C               	movlw	low STR_15
  6829  00EA24  6E0F               	movwf	lcd_write@string,c
  6830  00EA26  0EFF               	movlw	high STR_15
  6831  00EA28  6E10               	movwf	lcd_write@string+1,c
  6832  00EA2A  EC7C  F071         	call	_lcd_write	;wreg free
  6833                           
  6834                           ;main.c: 207: lcd_gotoxy(1,2);
  6835  00EA2E  0E02               	movlw	2
  6836  00EA30  6E05               	movwf	lcd_gotoxy@y,c
  6837  00EA32  0E01               	movlw	1
  6838  00EA34  ECC5  F071         	call	_lcd_gotoxy
  6839                           
  6840                           ;main.c: 208: lcd_comand(0b00001111);
  6841  00EA38  0E0F               	movlw	15
  6842  00EA3A  EC4F  F071         	call	_lcd_comand
  6843  00EA3E  0012               	return		;funcret
  6844  00EA40                     __end_of_activity_pin:
  6845                           	opt stack 0
  6846                           tblptru	equ	0xFF8
  6847                           tblptrh	equ	0xFF7
  6848                           tblptrl	equ	0xFF6
  6849                           tablat	equ	0xFF5
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           postinc0	equ	0xFEE
  6853                           wreg	equ	0xFE8
  6854                           indf1	equ	0xFE7
  6855                           postdec1	equ	0xFE5
  6856                           fsr1h	equ	0xFE2
  6857                           fsr1l	equ	0xFE1
  6858                           indf2	equ	0xFDF
  6859                           fsr2h	equ	0xFDA
  6860                           fsr2l	equ	0xFD9
  6861                           status	equ	0xFD8
  6862                           
  6863 ;; *************** function _strcpy *****************
  6864 ;; Defined at:
  6865 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  to              2    0[COMRAM] PTR unsigned char 
  6868 ;;		 -> pin(5), pin_input(5), 
  6869 ;;  from            2    2[COMRAM] PTR const unsigned char 
  6870 ;;		 -> STR_47(5), STR_45(1), STR_14(1), pin_input(5), 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;  cp              2    4[COMRAM] PTR unsigned char 
  6873 ;;		 -> pin(5), pin_input(5), 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  2    0[COMRAM] PTR unsigned char 
  6876 ;; Registers used:
  6877 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;Total ram usage:        6 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_activity_pin
  6893 ;;		_activity_submenu_pin_set
  6894 ;;		_pin_set
  6895 ;;		_pin_reset
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text48
  6900  00E83C                     __ptext48:
  6901                           	opt stack 0
  6902  00E83C                     _strcpy:
  6903                           	opt stack 28
  6904                           
  6905                           ;incstack = 0
  6906  00E83C  C001  F005         	movff	strcpy@to,strcpy@cp
  6907  00E840  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  6908  00E844  D005               	goto	l3216
  6909  00E846                     l3214:
  6910  00E846  4A05               	infsnz	strcpy@cp,f,c
  6911  00E848  2A06               	incf	strcpy@cp+1,f,c
  6912  00E84A  4A03               	infsnz	strcpy@from,f,c
  6913  00E84C  2A04               	incf	strcpy@from+1,f,c
  6914  00E84E  D000               	goto	l3216
  6915  00E850                     l3216:
  6916  00E850  C003  FFF6         	movff	strcpy@from,tblptrl
  6917  00E854  C004  FFF7         	movff	strcpy@from+1,tblptrh
  6918  00E858  6AF8               	clrf	tblptru,c
  6919  00E85A  C005  FFD9         	movff	strcpy@cp,fsr2l
  6920  00E85E  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  6921  00E862  0E0E               	movlw	(high __ramtop+-1)
  6922  00E864  64F7               	cpfsgt	tblptrh,c
  6923  00E866  D003               	bra	u1837
  6924  00E868  0008               	tblrd		*
  6925  00E86A  50F5               	movf	tablat,w,c
  6926  00E86C  D005               	bra	u1830
  6927  00E86E                     u1837:
  6928  00E86E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6929  00E872  CFF7 FFEA          	movff	tblptrh,fsr0h
  6930  00E876  50EF               	movf	indf0,w,c
  6931  00E878                     u1830:
  6932  00E878  6EDF               	movwf	indf2,c
  6933  00E87A  50DF               	movf	indf2,w,c
  6934  00E87C  A4D8               	btfss	status,2,c
  6935  00E87E  D7E3               	goto	l3214
  6936                           
  6937                           ;	Return value of _strcpy is never used
  6938  00E880  0012               	return		;funcret
  6939  00E882                     __end_of_strcpy:
  6940                           	opt stack 0
  6941                           tblptru	equ	0xFF8
  6942                           tblptrh	equ	0xFF7
  6943                           tblptrl	equ	0xFF6
  6944                           tablat	equ	0xFF5
  6945                           prodl	equ	0xFF3
  6946                           intcon	equ	0xFF2
  6947                           indf0	equ	0xFEF
  6948                           postinc0	equ	0xFEE
  6949                           fsr0h	equ	0xFEA
  6950                           fsr0l	equ	0xFE9
  6951                           wreg	equ	0xFE8
  6952                           indf1	equ	0xFE7
  6953                           postdec1	equ	0xFE5
  6954                           fsr1h	equ	0xFE2
  6955                           fsr1l	equ	0xFE1
  6956                           indf2	equ	0xFDF
  6957                           fsr2h	equ	0xFDA
  6958                           fsr2l	equ	0xFD9
  6959                           status	equ	0xFD8
  6960                           
  6961 ;; *************** function _lcd_comand *****************
  6962 ;; Defined at:
  6963 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  d               1    wreg     unsigned char 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  d               1    4[COMRAM] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;		None               void
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6981 ;;Total ram usage:        1 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:    2
  6984 ;; This function calls:
  6985 ;;		_lcd_send_byte
  6986 ;; This function is called by:
  6987 ;;		_activity_pin
  6988 ;;		_activity_submenu_date_config
  6989 ;;		_activity_submenu_time_config
  6990 ;;		_activity_submenu_pin_set
  6991 ;;		_setup
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text49
  6996  00E29E                     __ptext49:
  6997                           	opt stack 0
  6998  00E29E                     _lcd_comand:
  6999                           	opt stack 27
  7000                           
  7001                           ;incstack = 0
  7002                           ;lcd_comand@d stored from wreg
  7003  00E29E  6E05               	movwf	lcd_comand@d,c
  7004                           
  7005                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  7006  00E2A0  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  7007  00E2A4  0E00               	movlw	0
  7008  00E2A6  EC73  F072         	call	_lcd_send_byte
  7009  00E2AA  0012               	return		;funcret
  7010  00E2AC                     __end_of_lcd_comand:
  7011                           	opt stack 0
  7012                           tblptru	equ	0xFF8
  7013                           tblptrh	equ	0xFF7
  7014                           tblptrl	equ	0xFF6
  7015                           tablat	equ	0xFF5
  7016                           prodl	equ	0xFF3
  7017                           intcon	equ	0xFF2
  7018                           indf0	equ	0xFEF
  7019                           postinc0	equ	0xFEE
  7020                           fsr0h	equ	0xFEA
  7021                           fsr0l	equ	0xFE9
  7022                           wreg	equ	0xFE8
  7023                           indf1	equ	0xFE7
  7024                           postdec1	equ	0xFE5
  7025                           fsr1h	equ	0xFE2
  7026                           fsr1l	equ	0xFE1
  7027                           indf2	equ	0xFDF
  7028                           fsr2h	equ	0xFDA
  7029                           fsr2l	equ	0xFD9
  7030                           status	equ	0xFD8
  7031                           
  7032 ;; *************** function _home_config_refresh *****************
  7033 ;; Defined at:
  7034 ;;		line 457 in file "main.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;		None               void
  7041 ;; Registers used:
  7042 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;Total ram usage:        2 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    7
  7055 ;; This function calls:
  7056 ;;		_home_state_refresh
  7057 ;;		_home_tone_refresh
  7058 ;;		_home_volume_refresh
  7059 ;; This function is called by:
  7060 ;;		_main
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text50
  7065  00F5E8                     __ptext50:
  7066                           	opt stack 0
  7067  00F5E8                     _home_config_refresh:
  7068                           	opt stack 23
  7069                           
  7070                           ;main.c: 459: if(state == 1){LATBbits.LATB1 = 1;;}
  7071                           
  7072                           ;incstack = 0
  7073  00F5E8  0441               	decf	_state,w,c
  7074  00F5EA  1042               	iorwf	_state+1,w,c
  7075  00F5EC  A4D8               	btfss	status,2,c
  7076  00F5EE  D002               	goto	l4006
  7077  00F5F0  828A               	bsf	3978,1,c	;volatile
  7078  00F5F2  D000               	goto	l4006
  7079  00F5F4                     l4006:
  7080                           
  7081                           ;main.c: 460: if(state == 0){LATBbits.LATB1 = 0;;}
  7082  00F5F4  5041               	movf	_state,w,c
  7083  00F5F6  1042               	iorwf	_state+1,w,c
  7084  00F5F8  A4D8               	btfss	status,2,c
  7085  00F5FA  D002               	goto	l4010
  7086  00F5FC  928A               	bcf	3978,1,c	;volatile
  7087  00F5FE  D000               	goto	l4010
  7088  00F600                     l4010:
  7089                           
  7090                           ;main.c: 462: config_widget_time++;
  7091  00F600  4A31               	infsnz	_config_widget_time,f,c
  7092  00F602  2A32               	incf	_config_widget_time+1,f,c
  7093                           
  7094                           ;main.c: 464: switch(config_widget){
  7095  00F604  D030               	goto	l4032
  7096  00F606                     l4012:
  7097                           
  7098                           ;main.c: 467: home_state_refresh();
  7099  00F606  EC6E  F075         	call	_home_state_refresh	;wreg free
  7100                           
  7101                           ;main.c: 468: if(config_widget_time == 5){
  7102  00F60A  0E05               	movlw	5
  7103  00F60C  1831               	xorwf	_config_widget_time,w,c
  7104  00F60E  1032               	iorwf	_config_widget_time+1,w,c
  7105  00F610  A4D8               	btfss	status,2,c
  7106  00F612  0012               	return	
  7107                           
  7108                           ;main.c: 469: config_widget_time = 0;
  7109  00F614  0E00               	movlw	0
  7110  00F616  6E32               	movwf	_config_widget_time+1,c
  7111  00F618  0E00               	movlw	0
  7112  00F61A  6E31               	movwf	_config_widget_time,c
  7113                           
  7114                           ;main.c: 470: config_widget = 1;
  7115  00F61C  0E00               	movlw	0
  7116  00F61E  6E30               	movwf	_config_widget+1,c
  7117  00F620  0E01               	movlw	1
  7118  00F622  6E2F               	movwf	_config_widget,c
  7119                           
  7120                           ;main.c: 471: }
  7121                           ;main.c: 472: break;
  7122  00F624  0012               	return	
  7123  00F626                     l4018:
  7124                           
  7125                           ;main.c: 475: home_volume_refresh();
  7126  00F626  ECC0  F075         	call	_home_volume_refresh	;wreg free
  7127                           
  7128                           ;main.c: 476: if(config_widget_time == 5){
  7129  00F62A  0E05               	movlw	5
  7130  00F62C  1831               	xorwf	_config_widget_time,w,c
  7131  00F62E  1032               	iorwf	_config_widget_time+1,w,c
  7132  00F630  A4D8               	btfss	status,2,c
  7133  00F632  0012               	return	
  7134                           
  7135                           ;main.c: 477: config_widget_time = 0;
  7136  00F634  0E00               	movlw	0
  7137  00F636  6E32               	movwf	_config_widget_time+1,c
  7138  00F638  0E00               	movlw	0
  7139  00F63A  6E31               	movwf	_config_widget_time,c
  7140                           
  7141                           ;main.c: 478: config_widget = 2;
  7142  00F63C  0E00               	movlw	0
  7143  00F63E  6E30               	movwf	_config_widget+1,c
  7144  00F640  0E02               	movlw	2
  7145  00F642  6E2F               	movwf	_config_widget,c
  7146                           
  7147                           ;main.c: 479: }
  7148                           ;main.c: 480: break;
  7149  00F644  0012               	return	
  7150  00F646                     l4024:
  7151                           
  7152                           ;main.c: 483: home_tone_refresh();
  7153  00F646  EC97  F075         	call	_home_tone_refresh	;wreg free
  7154                           
  7155                           ;main.c: 484: if(config_widget_time == 5){
  7156  00F64A  0E05               	movlw	5
  7157  00F64C  1831               	xorwf	_config_widget_time,w,c
  7158  00F64E  1032               	iorwf	_config_widget_time+1,w,c
  7159  00F650  A4D8               	btfss	status,2,c
  7160  00F652  0012               	return	
  7161                           
  7162                           ;main.c: 485: config_widget_time = 0;
  7163  00F654  0E00               	movlw	0
  7164  00F656  6E32               	movwf	_config_widget_time+1,c
  7165  00F658  0E00               	movlw	0
  7166  00F65A  6E31               	movwf	_config_widget_time,c
  7167                           
  7168                           ;main.c: 486: config_widget = 0;
  7169  00F65C  0E00               	movlw	0
  7170  00F65E  6E30               	movwf	_config_widget+1,c
  7171  00F660  0E00               	movlw	0
  7172  00F662  6E2F               	movwf	_config_widget,c
  7173                           
  7174                           ;main.c: 490: }
  7175                           
  7176                           ;main.c: 487: }
  7177                           ;main.c: 488: break;
  7178  00F664  0012               	return	
  7179  00F666                     l4032:
  7180  00F666  C02F  F024         	movff	_config_widget,??_home_config_refresh
  7181  00F66A  C030  F025         	movff	_config_widget+1,??_home_config_refresh+1
  7182                           
  7183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7184                           ; Switch size 1, requested type "space"
  7185                           ; Number of cases is 1, Range of values is 0 to 0
  7186                           ; switch strategies available:
  7187                           ; Name         Instructions Cycles
  7188                           ; simple_byte            4     3 (average)
  7189                           ;	Chosen strategy is simple_byte
  7190  00F66E  5025               	movf	??_home_config_refresh+1,w,c
  7191  00F670  0A00               	xorlw	0	; case 0
  7192  00F672  A4D8               	btfss	status,2,c
  7193  00F674  0012               	return	
  7194                           
  7195                           ; Switch size 1, requested type "space"
  7196                           ; Number of cases is 3, Range of values is 0 to 2
  7197                           ; switch strategies available:
  7198                           ; Name         Instructions Cycles
  7199                           ; simple_byte           10     6 (average)
  7200                           ;	Chosen strategy is simple_byte
  7201  00F676  5024               	movf	??_home_config_refresh,w,c
  7202  00F678  0A00               	xorlw	0	; case 0
  7203  00F67A  B4D8               	btfsc	status,2,c
  7204  00F67C  D7C4               	goto	l4012
  7205  00F67E  0A01               	xorlw	1	; case 1
  7206  00F680  B4D8               	btfsc	status,2,c
  7207  00F682  D7D1               	goto	l4018
  7208  00F684  0A03               	xorlw	3	; case 2
  7209  00F686  A4D8               	btfss	status,2,c
  7210  00F688  0012               	return	
  7211  00F68A  D7DD               	goto	l4024
  7212  00F68C  0012               	return		;funcret
  7213  00F68E                     __end_of_home_config_refresh:
  7214                           	opt stack 0
  7215                           tblptru	equ	0xFF8
  7216                           tblptrh	equ	0xFF7
  7217                           tblptrl	equ	0xFF6
  7218                           tablat	equ	0xFF5
  7219                           prodl	equ	0xFF3
  7220                           intcon	equ	0xFF2
  7221                           indf0	equ	0xFEF
  7222                           postinc0	equ	0xFEE
  7223                           fsr0h	equ	0xFEA
  7224                           fsr0l	equ	0xFE9
  7225                           wreg	equ	0xFE8
  7226                           indf1	equ	0xFE7
  7227                           postdec1	equ	0xFE5
  7228                           fsr1h	equ	0xFE2
  7229                           fsr1l	equ	0xFE1
  7230                           indf2	equ	0xFDF
  7231                           fsr2h	equ	0xFDA
  7232                           fsr2l	equ	0xFD9
  7233                           status	equ	0xFD8
  7234                           
  7235 ;; *************** function _home_volume_refresh *****************
  7236 ;; Defined at:
  7237 ;;		line 433 in file "main.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;		None
  7242 ;; Return value:  Size  Location     Type
  7243 ;;		None               void
  7244 ;; Registers used:
  7245 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7255 ;;Total ram usage:        0 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:    6
  7258 ;; This function calls:
  7259 ;;		_lcd_write
  7260 ;;		_sprintf
  7261 ;; This function is called by:
  7262 ;;		_home_config_refresh
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text51
  7267  00EB80                     __ptext51:
  7268                           	opt stack 0
  7269  00EB80                     _home_volume_refresh:
  7270                           	opt stack 23
  7271                           
  7272                           ;main.c: 435: if(alarm_volume == 0){
  7273                           
  7274                           ;incstack = 0
  7275  00EB80  502D               	movf	_alarm_volume,w,c
  7276  00EB82  102E               	iorwf	_alarm_volume+1,w,c
  7277  00EB84  A4D8               	btfss	status,2,c
  7278  00EB86  D00B               	goto	l3842
  7279                           
  7280                           ;main.c: 436: sprintf(buffer1,"VOL:BA");
  7281  00EB88  0E86               	movlw	low _buffer1
  7282  00EB8A  6E0D               	movwf	sprintf@sp,c
  7283  00EB8C  0E00               	movlw	high _buffer1
  7284  00EB8E  6E0E               	movwf	sprintf@sp+1,c
  7285  00EB90  0E89               	movlw	low STR_52
  7286  00EB92  6E0F               	movwf	sprintf@f,c
  7287  00EB94  0EFF               	movlw	high STR_52
  7288  00EB96  6E10               	movwf	sprintf@f+1,c
  7289  00EB98  EC44  F07E         	call	_sprintf	;wreg free
  7290                           
  7291                           ;main.c: 437: }
  7292  00EB9C  D00B               	goto	l3844
  7293  00EB9E                     l3842:
  7294                           
  7295                           ;main.c: 438: else{
  7296                           ;main.c: 439: sprintf(buffer1,"VOL:AL");
  7297  00EB9E  0E86               	movlw	low _buffer1
  7298  00EBA0  6E0D               	movwf	sprintf@sp,c
  7299  00EBA2  0E00               	movlw	high _buffer1
  7300  00EBA4  6E0E               	movwf	sprintf@sp+1,c
  7301  00EBA6  0E97               	movlw	low STR_53
  7302  00EBA8  6E0F               	movwf	sprintf@f,c
  7303  00EBAA  0EFF               	movlw	high STR_53
  7304  00EBAC  6E10               	movwf	sprintf@f+1,c
  7305  00EBAE  EC44  F07E         	call	_sprintf	;wreg free
  7306  00EBB2  D000               	goto	l3844
  7307  00EBB4                     l3844:
  7308                           
  7309                           ;main.c: 440: }
  7310                           ;main.c: 441: lcd_write(1,2,buffer1);
  7311  00EBB4  0E00               	movlw	0
  7312  00EBB6  6E0C               	movwf	lcd_write@column+1,c
  7313  00EBB8  0E01               	movlw	1
  7314  00EBBA  6E0B               	movwf	lcd_write@column,c
  7315  00EBBC  0E00               	movlw	0
  7316  00EBBE  6E0E               	movwf	lcd_write@row+1,c
  7317  00EBC0  0E02               	movlw	2
  7318  00EBC2  6E0D               	movwf	lcd_write@row,c
  7319  00EBC4  0E86               	movlw	low _buffer1
  7320  00EBC6  6E0F               	movwf	lcd_write@string,c
  7321  00EBC8  0E00               	movlw	high _buffer1
  7322  00EBCA  6E10               	movwf	lcd_write@string+1,c
  7323  00EBCC  EC7C  F071         	call	_lcd_write	;wreg free
  7324  00EBD0  0012               	return		;funcret
  7325  00EBD2                     __end_of_home_volume_refresh:
  7326                           	opt stack 0
  7327                           tblptru	equ	0xFF8
  7328                           tblptrh	equ	0xFF7
  7329                           tblptrl	equ	0xFF6
  7330                           tablat	equ	0xFF5
  7331                           prodl	equ	0xFF3
  7332                           intcon	equ	0xFF2
  7333                           indf0	equ	0xFEF
  7334                           postinc0	equ	0xFEE
  7335                           fsr0h	equ	0xFEA
  7336                           fsr0l	equ	0xFE9
  7337                           wreg	equ	0xFE8
  7338                           indf1	equ	0xFE7
  7339                           postdec1	equ	0xFE5
  7340                           fsr1h	equ	0xFE2
  7341                           fsr1l	equ	0xFE1
  7342                           indf2	equ	0xFDF
  7343                           fsr2h	equ	0xFDA
  7344                           fsr2l	equ	0xFD9
  7345                           status	equ	0xFD8
  7346                           
  7347 ;; *************** function _home_tone_refresh *****************
  7348 ;; Defined at:
  7349 ;;		line 445 in file "main.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;		None               void
  7356 ;; Registers used:
  7357 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;Total ram usage:        0 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    6
  7370 ;; This function calls:
  7371 ;;		_lcd_write
  7372 ;;		_sprintf
  7373 ;; This function is called by:
  7374 ;;		_home_config_refresh
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text52
  7379  00EB2E                     __ptext52:
  7380                           	opt stack 0
  7381  00EB2E                     _home_tone_refresh:
  7382                           	opt stack 23
  7383                           
  7384                           ;main.c: 447: if(alarm_tone == 0){
  7385                           
  7386                           ;incstack = 0
  7387  00EB2E  502B               	movf	_alarm_tone,w,c
  7388  00EB30  102C               	iorwf	_alarm_tone+1,w,c
  7389  00EB32  A4D8               	btfss	status,2,c
  7390  00EB34  D00B               	goto	l3850
  7391                           
  7392                           ;main.c: 448: sprintf(buffer1,"TONO:1");
  7393  00EB36  0E86               	movlw	low _buffer1
  7394  00EB38  6E0D               	movwf	sprintf@sp,c
  7395  00EB3A  0E00               	movlw	high _buffer1
  7396  00EB3C  6E0E               	movwf	sprintf@sp+1,c
  7397  00EB3E  0E74               	movlw	low STR_54
  7398  00EB40  6E0F               	movwf	sprintf@f,c
  7399  00EB42  0EFF               	movlw	high STR_54
  7400  00EB44  6E10               	movwf	sprintf@f+1,c
  7401  00EB46  EC44  F07E         	call	_sprintf	;wreg free
  7402                           
  7403                           ;main.c: 449: }
  7404  00EB4A  D00B               	goto	l3852
  7405  00EB4C                     l3850:
  7406                           
  7407                           ;main.c: 450: else{
  7408                           ;main.c: 451: sprintf(buffer1,"TONO:2");
  7409  00EB4C  0E86               	movlw	low _buffer1
  7410  00EB4E  6E0D               	movwf	sprintf@sp,c
  7411  00EB50  0E00               	movlw	high _buffer1
  7412  00EB52  6E0E               	movwf	sprintf@sp+1,c
  7413  00EB54  0E82               	movlw	low STR_55
  7414  00EB56  6E0F               	movwf	sprintf@f,c
  7415  00EB58  0EFF               	movlw	high STR_55
  7416  00EB5A  6E10               	movwf	sprintf@f+1,c
  7417  00EB5C  EC44  F07E         	call	_sprintf	;wreg free
  7418  00EB60  D000               	goto	l3852
  7419  00EB62                     l3852:
  7420                           
  7421                           ;main.c: 452: }
  7422                           ;main.c: 453: lcd_write(1,2,buffer1);
  7423  00EB62  0E00               	movlw	0
  7424  00EB64  6E0C               	movwf	lcd_write@column+1,c
  7425  00EB66  0E01               	movlw	1
  7426  00EB68  6E0B               	movwf	lcd_write@column,c
  7427  00EB6A  0E00               	movlw	0
  7428  00EB6C  6E0E               	movwf	lcd_write@row+1,c
  7429  00EB6E  0E02               	movlw	2
  7430  00EB70  6E0D               	movwf	lcd_write@row,c
  7431  00EB72  0E86               	movlw	low _buffer1
  7432  00EB74  6E0F               	movwf	lcd_write@string,c
  7433  00EB76  0E00               	movlw	high _buffer1
  7434  00EB78  6E10               	movwf	lcd_write@string+1,c
  7435  00EB7A  EC7C  F071         	call	_lcd_write	;wreg free
  7436  00EB7E  0012               	return		;funcret
  7437  00EB80                     __end_of_home_tone_refresh:
  7438                           	opt stack 0
  7439                           tblptru	equ	0xFF8
  7440                           tblptrh	equ	0xFF7
  7441                           tblptrl	equ	0xFF6
  7442                           tablat	equ	0xFF5
  7443                           prodl	equ	0xFF3
  7444                           intcon	equ	0xFF2
  7445                           indf0	equ	0xFEF
  7446                           postinc0	equ	0xFEE
  7447                           fsr0h	equ	0xFEA
  7448                           fsr0l	equ	0xFE9
  7449                           wreg	equ	0xFE8
  7450                           indf1	equ	0xFE7
  7451                           postdec1	equ	0xFE5
  7452                           fsr1h	equ	0xFE2
  7453                           fsr1l	equ	0xFE1
  7454                           indf2	equ	0xFDF
  7455                           fsr2h	equ	0xFDA
  7456                           fsr2l	equ	0xFD9
  7457                           status	equ	0xFD8
  7458                           
  7459 ;; *************** function _home_state_refresh *****************
  7460 ;; Defined at:
  7461 ;;		line 421 in file "main.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;		None
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;		None               void
  7468 ;; Registers used:
  7469 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;Total ram usage:        0 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    6
  7482 ;; This function calls:
  7483 ;;		_lcd_write
  7484 ;;		_sprintf
  7485 ;; This function is called by:
  7486 ;;		_home_config_refresh
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text53
  7491  00EADC                     __ptext53:
  7492                           	opt stack 0
  7493  00EADC                     _home_state_refresh:
  7494                           	opt stack 23
  7495                           
  7496                           ;main.c: 423: if(state == 1){
  7497                           
  7498                           ;incstack = 0
  7499  00EADC  0441               	decf	_state,w,c
  7500  00EADE  1042               	iorwf	_state+1,w,c
  7501  00EAE0  A4D8               	btfss	status,2,c
  7502  00EAE2  D00B               	goto	l3834
  7503                           
  7504                           ;main.c: 424: sprintf(buffer1,"ACT:SI");
  7505  00EAE4  0E86               	movlw	low _buffer1
  7506  00EAE6  6E0D               	movwf	sprintf@sp,c
  7507  00EAE8  0E00               	movlw	high _buffer1
  7508  00EAEA  6E0E               	movwf	sprintf@sp+1,c
  7509  00EAEC  0E90               	movlw	low STR_50
  7510  00EAEE  6E0F               	movwf	sprintf@f,c
  7511  00EAF0  0EFF               	movlw	high STR_50
  7512  00EAF2  6E10               	movwf	sprintf@f+1,c
  7513  00EAF4  EC44  F07E         	call	_sprintf	;wreg free
  7514                           
  7515                           ;main.c: 425: }
  7516  00EAF8  D00B               	goto	l3836
  7517  00EAFA                     l3834:
  7518                           
  7519                           ;main.c: 426: else{
  7520                           ;main.c: 427: sprintf(buffer1,"ACT:NO");
  7521  00EAFA  0E86               	movlw	low _buffer1
  7522  00EAFC  6E0D               	movwf	sprintf@sp,c
  7523  00EAFE  0E00               	movlw	high _buffer1
  7524  00EB00  6E0E               	movwf	sprintf@sp+1,c
  7525  00EB02  0E9E               	movlw	low STR_51
  7526  00EB04  6E0F               	movwf	sprintf@f,c
  7527  00EB06  0EFF               	movlw	high STR_51
  7528  00EB08  6E10               	movwf	sprintf@f+1,c
  7529  00EB0A  EC44  F07E         	call	_sprintf	;wreg free
  7530  00EB0E  D000               	goto	l3836
  7531  00EB10                     l3836:
  7532                           
  7533                           ;main.c: 428: }
  7534                           ;main.c: 429: lcd_write(1,2,buffer1);
  7535  00EB10  0E00               	movlw	0
  7536  00EB12  6E0C               	movwf	lcd_write@column+1,c
  7537  00EB14  0E01               	movlw	1
  7538  00EB16  6E0B               	movwf	lcd_write@column,c
  7539  00EB18  0E00               	movlw	0
  7540  00EB1A  6E0E               	movwf	lcd_write@row+1,c
  7541  00EB1C  0E02               	movlw	2
  7542  00EB1E  6E0D               	movwf	lcd_write@row,c
  7543  00EB20  0E86               	movlw	low _buffer1
  7544  00EB22  6E0F               	movwf	lcd_write@string,c
  7545  00EB24  0E00               	movlw	high _buffer1
  7546  00EB26  6E10               	movwf	lcd_write@string+1,c
  7547  00EB28  EC7C  F071         	call	_lcd_write	;wreg free
  7548  00EB2C  0012               	return		;funcret
  7549  00EB2E                     __end_of_home_state_refresh:
  7550                           	opt stack 0
  7551                           tblptru	equ	0xFF8
  7552                           tblptrh	equ	0xFF7
  7553                           tblptrl	equ	0xFF6
  7554                           tablat	equ	0xFF5
  7555                           prodl	equ	0xFF3
  7556                           intcon	equ	0xFF2
  7557                           indf0	equ	0xFEF
  7558                           postinc0	equ	0xFEE
  7559                           fsr0h	equ	0xFEA
  7560                           fsr0l	equ	0xFE9
  7561                           wreg	equ	0xFE8
  7562                           indf1	equ	0xFE7
  7563                           postdec1	equ	0xFE5
  7564                           fsr1h	equ	0xFE2
  7565                           fsr1l	equ	0xFE1
  7566                           indf2	equ	0xFDF
  7567                           fsr2h	equ	0xFDA
  7568                           fsr2l	equ	0xFD9
  7569                           status	equ	0xFD8
  7570                           
  7571 ;; *************** function _home_clock_refresh *****************
  7572 ;; Defined at:
  7573 ;;		line 412 in file "main.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;		None
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;		None               void
  7580 ;; Registers used:
  7581 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7591 ;;Total ram usage:        0 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; Hardware stack levels required when called:    6
  7594 ;; This function calls:
  7595 ;;		_lcd_write
  7596 ;;		_sprintf
  7597 ;; This function is called by:
  7598 ;;		_main
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text54
  7603  00F426                     __ptext54:
  7604                           	opt stack 0
  7605  00F426                     _home_clock_refresh:
  7606                           	opt stack 24
  7607                           
  7608                           ;main.c: 414: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  7609                           
  7610                           ;incstack = 0
  7611  00F426  0E86               	movlw	low _buffer1
  7612  00F428  6E0D               	movwf	sprintf@sp,c
  7613  00F42A  0E00               	movlw	high _buffer1
  7614  00F42C  6E0E               	movwf	sprintf@sp+1,c
  7615  00F42E  0E2C               	movlw	low STR_26
  7616  00F430  6E0F               	movwf	sprintf@f,c
  7617  00F432  0EFF               	movlw	high STR_26
  7618  00F434  6E10               	movwf	sprintf@f+1,c
  7619  00F436  C050  F011         	movff	_dia,?_sprintf+4
  7620  00F43A  C051  F012         	movff	_dia+1,?_sprintf+5
  7621  00F43E  C056  F013         	movff	_mes,?_sprintf+6
  7622  00F442  C057  F014         	movff	_mes+1,?_sprintf+7
  7623  00F446  C04E  F015         	movff	_anio,?_sprintf+8
  7624  00F44A  C04F  F016         	movff	_anio+1,?_sprintf+9
  7625  00F44E  EC44  F07E         	call	_sprintf	;wreg free
  7626                           
  7627                           ;main.c: 415: lcd_write(9,1,buffer1);
  7628  00F452  0E00               	movlw	0
  7629  00F454  6E0C               	movwf	lcd_write@column+1,c
  7630  00F456  0E09               	movlw	9
  7631  00F458  6E0B               	movwf	lcd_write@column,c
  7632  00F45A  0E00               	movlw	0
  7633  00F45C  6E0E               	movwf	lcd_write@row+1,c
  7634  00F45E  0E01               	movlw	1
  7635  00F460  6E0D               	movwf	lcd_write@row,c
  7636  00F462  0E86               	movlw	low _buffer1
  7637  00F464  6E0F               	movwf	lcd_write@string,c
  7638  00F466  0E00               	movlw	high _buffer1
  7639  00F468  6E10               	movwf	lcd_write@string+1,c
  7640  00F46A  EC7C  F071         	call	_lcd_write	;wreg free
  7641                           
  7642                           ;main.c: 416: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  7643  00F46E  0E86               	movlw	low _buffer1
  7644  00F470  6E0D               	movwf	sprintf@sp,c
  7645  00F472  0E00               	movlw	high _buffer1
  7646  00F474  6E0E               	movwf	sprintf@sp+1,c
  7647  00F476  0E3B               	movlw	low STR_27
  7648  00F478  6E0F               	movwf	sprintf@f,c
  7649  00F47A  0EFF               	movlw	high STR_27
  7650  00F47C  6E10               	movwf	sprintf@f+1,c
  7651  00F47E  C054  F011         	movff	_hora,?_sprintf+4
  7652  00F482  C055  F012         	movff	_hora+1,?_sprintf+5
  7653  00F486  C03D  F013         	movff	_minuto,?_sprintf+6
  7654  00F48A  C03E  F014         	movff	_minuto+1,?_sprintf+7
  7655  00F48E  C03F  F015         	movff	_segundo,?_sprintf+8
  7656  00F492  C040  F016         	movff	_segundo+1,?_sprintf+9
  7657  00F496  EC44  F07E         	call	_sprintf	;wreg free
  7658                           
  7659                           ;main.c: 417: lcd_write(9,2,buffer1);
  7660  00F49A  0E00               	movlw	0
  7661  00F49C  6E0C               	movwf	lcd_write@column+1,c
  7662  00F49E  0E09               	movlw	9
  7663  00F4A0  6E0B               	movwf	lcd_write@column,c
  7664  00F4A2  0E00               	movlw	0
  7665  00F4A4  6E0E               	movwf	lcd_write@row+1,c
  7666  00F4A6  0E02               	movlw	2
  7667  00F4A8  6E0D               	movwf	lcd_write@row,c
  7668  00F4AA  0E86               	movlw	low _buffer1
  7669  00F4AC  6E0F               	movwf	lcd_write@string,c
  7670  00F4AE  0E00               	movlw	high _buffer1
  7671  00F4B0  6E10               	movwf	lcd_write@string+1,c
  7672  00F4B2  EC7C  F071         	call	_lcd_write	;wreg free
  7673  00F4B6  0012               	return		;funcret
  7674  00F4B8                     __end_of_home_clock_refresh:
  7675                           	opt stack 0
  7676                           tblptru	equ	0xFF8
  7677                           tblptrh	equ	0xFF7
  7678                           tblptrl	equ	0xFF6
  7679                           tablat	equ	0xFF5
  7680                           prodl	equ	0xFF3
  7681                           intcon	equ	0xFF2
  7682                           indf0	equ	0xFEF
  7683                           postinc0	equ	0xFEE
  7684                           fsr0h	equ	0xFEA
  7685                           fsr0l	equ	0xFE9
  7686                           wreg	equ	0xFE8
  7687                           indf1	equ	0xFE7
  7688                           postdec1	equ	0xFE5
  7689                           fsr1h	equ	0xFE2
  7690                           fsr1l	equ	0xFE1
  7691                           indf2	equ	0xFDF
  7692                           fsr2h	equ	0xFDA
  7693                           fsr2l	equ	0xFD9
  7694                           status	equ	0xFD8
  7695                           
  7696 ;; *************** function _sprintf *****************
  7697 ;; Defined at:
  7698 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  sp              2   12[COMRAM] PTR unsigned char 
  7701 ;;		 -> buffer1(20), 
  7702 ;;  f               2   14[COMRAM] PTR const unsigned char 
  7703 ;;		 -> STR_58(5), STR_57(5), STR_55(7), STR_54(7), 
  7704 ;;		 -> STR_53(7), STR_52(7), STR_51(7), STR_50(7), 
  7705 ;;		 -> STR_49(15), STR_48(15), STR_32(15), STR_31(15), 
  7706 ;;		 -> STR_29(15), STR_27(15), STR_26(15), 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  tmpval          4    0        struct .
  7709 ;;  cp              3    0        PTR const unsigned char 
  7710 ;;  width           2   32[COMRAM] int 
  7711 ;;  val             2   29[COMRAM] unsigned int 
  7712 ;;  ap              2   26[COMRAM] PTR void [1]
  7713 ;;		 -> ?_sprintf(2), 
  7714 ;;  len             2    0        unsigned int 
  7715 ;;  c               1   34[COMRAM] char 
  7716 ;;  prec            1   31[COMRAM] char 
  7717 ;;  flag            1   28[COMRAM] unsigned char 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  2   12[COMRAM] int 
  7720 ;; Registers used:
  7721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7727 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7730 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;Total ram usage:       23 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    1
  7734 ;; This function calls:
  7735 ;;		___lwdiv
  7736 ;;		___lwmod
  7737 ;;		___wmul
  7738 ;;		_isdigit
  7739 ;; This function is called by:
  7740 ;;		_activity_submenu_date_config
  7741 ;;		_activity_submenu_time_config
  7742 ;;		_date_set
  7743 ;;		_home_clock_refresh
  7744 ;;		_home_state_refresh
  7745 ;;		_home_volume_refresh
  7746 ;;		_home_tone_refresh
  7747 ;;		_button_number
  7748 ;;		_activity_submenu_date_config_refresh
  7749 ;;		_activity_submenu_time_config_refresh
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text55
  7754  00FC88                     __ptext55:
  7755                           	opt stack 0
  7756  00FC88                     _sprintf:
  7757                           	opt stack 27
  7758                           
  7759                           ;doprnt.c: 494: va_list ap;
  7760                           ;doprnt.c: 499: signed char c;
  7761                           ;doprnt.c: 501: int width;
  7762                           ;doprnt.c: 506: signed char prec;
  7763                           ;doprnt.c: 508: unsigned char flag;
  7764                           ;doprnt.c: 523: union {
  7765                           ;doprnt.c: 524: unsigned long vd;
  7766                           ;doprnt.c: 525: double integ;
  7767                           ;doprnt.c: 526: } tmpval;
  7768                           ;doprnt.c: 528: unsigned int val;
  7769                           ;doprnt.c: 529: unsigned len;
  7770                           ;doprnt.c: 530: const char * cp;
  7771                           ;doprnt.c: 533: *ap = __va_start();
  7772                           
  7773                           ;incstack = 0
  7774  00FC88  0E11               	movlw	low (?_sprintf+4)
  7775  00FC8A  6E1B               	movwf	sprintf@ap,c
  7776  00FC8C  0E00               	movlw	high (?_sprintf+4)
  7777  00FC8E  6E1C               	movwf	sprintf@ap+1,c
  7778                           
  7779                           ;doprnt.c: 536: while(c = *f++) {
  7780  00FC90  D117               	goto	l3304
  7781  00FC92                     l3222:
  7782                           
  7783                           ;doprnt.c: 538: if(c != '%')
  7784  00FC92  0E25               	movlw	37
  7785  00FC94  1823               	xorwf	sprintf@c,w,c
  7786  00FC96  B4D8               	btfsc	status,2,c
  7787  00FC98  D009               	goto	l3228
  7788                           
  7789                           ;doprnt.c: 540: {
  7790                           ;doprnt.c: 541: ((*sp++ = (c)));
  7791  00FC9A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  7792  00FC9E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  7793  00FCA2  C023  FFDF         	movff	sprintf@c,indf2
  7794  00FCA6  4A0D               	infsnz	sprintf@sp,f,c
  7795  00FCA8  2A0E               	incf	sprintf@sp+1,f,c
  7796                           
  7797                           ;doprnt.c: 542: continue;
  7798  00FCAA  D10A               	goto	l3304
  7799  00FCAC                     l3228:
  7800                           
  7801                           ;doprnt.c: 543: }
  7802                           ;doprnt.c: 546: width = 0;
  7803  00FCAC  0E00               	movlw	0
  7804  00FCAE  6E22               	movwf	sprintf@width+1,c
  7805  00FCB0  0E00               	movlw	0
  7806  00FCB2  6E21               	movwf	sprintf@width,c
  7807                           
  7808                           ;doprnt.c: 548: flag = 0;
  7809  00FCB4  0E00               	movlw	0
  7810  00FCB6  6E1D               	movwf	sprintf@flag,c
  7811                           
  7812                           ;doprnt.c: 551: switch(*f) {
  7813                           
  7814                           ;doprnt.c: 550: for(;;) {
  7815  00FCB8  D005               	goto	l3234
  7816  00FCBA                     l3230:
  7817                           
  7818                           ;doprnt.c: 580: flag |= 0x04;
  7819  00FCBA  841D               	bsf	sprintf@flag,2,c
  7820                           
  7821                           ;doprnt.c: 581: f++;
  7822  00FCBC  4A0F               	infsnz	sprintf@f,f,c
  7823  00FCBE  2A10               	incf	sprintf@f+1,f,c
  7824                           
  7825                           ;doprnt.c: 582: continue;
  7826  00FCC0  D001               	goto	l3234
  7827                           
  7828                           ;doprnt.c: 584: }
  7829  00FCC2  D00B               	goto	l3236
  7830  00FCC4                     l3234:
  7831  00FCC4  C00F  FFF6         	movff	sprintf@f,tblptrl
  7832  00FCC8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  7833  00FCCC                     	if	0	;tblptru may be non-zero
  7834  00FCCC                     	endif
  7835  00FCCC                     	if	0	;tblptru may be non-zero
  7836  00FCCC                     	endif
  7837  00FCCC  0008               	tblrd		*
  7838  00FCCE  50F5               	movf	tablat,w,c
  7839                           
  7840                           ; Switch size 1, requested type "space"
  7841                           ; Number of cases is 1, Range of values is 48 to 48
  7842                           ; switch strategies available:
  7843                           ; Name         Instructions Cycles
  7844                           ; simple_byte            4     3 (average)
  7845                           ;	Chosen strategy is simple_byte
  7846  00FCD0  0A30               	xorlw	48	; case 48
  7847  00FCD2  B4D8               	btfsc	status,2,c
  7848  00FCD4  D7F2               	goto	l3230
  7849                           
  7850                           ;doprnt.c: 585: break;
  7851  00FCD6  D001               	goto	l3236
  7852                           
  7853                           ;doprnt.c: 586: }
  7854  00FCD8  D7F5               	goto	l3234
  7855  00FCDA                     l3236:
  7856                           
  7857                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  7858  00FCDA  C00F  FFF6         	movff	sprintf@f,tblptrl
  7859  00FCDE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  7860  00FCE2                     	if	0	;tblptru may be non-zero
  7861  00FCE2                     	endif
  7862  00FCE2                     	if	0	;tblptru may be non-zero
  7863  00FCE2                     	endif
  7864  00FCE2  0008               	tblrd		*
  7865  00FCE4  50F5               	movf	tablat,w,c
  7866  00FCE6  ECB4  F071         	call	_isdigit
  7867  00FCEA  A0D8               	btfss	status,0,c
  7868  00FCEC  D03A               	goto	l3252
  7869                           
  7870                           ;doprnt.c: 598: width = 0;
  7871  00FCEE  0E00               	movlw	0
  7872  00FCF0  6E22               	movwf	sprintf@width+1,c
  7873  00FCF2  0E00               	movlw	0
  7874  00FCF4  6E21               	movwf	sprintf@width,c
  7875  00FCF6  D000               	goto	l3240
  7876  00FCF8                     l3240:
  7877                           
  7878                           ;doprnt.c: 600: width *= 10;
  7879  00FCF8  C021  F001         	movff	sprintf@width,___wmul@multiplier
  7880  00FCFC  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  7881  00FD00  0E00               	movlw	0
  7882  00FD02  6E04               	movwf	___wmul@multiplicand+1,c
  7883  00FD04  0E0A               	movlw	10
  7884  00FD06  6E03               	movwf	___wmul@multiplicand,c
  7885  00FD08  ECD7  F071         	call	___wmul	;wreg free
  7886  00FD0C  C001  F021         	movff	?___wmul,sprintf@width
  7887  00FD10  C002  F022         	movff	?___wmul+1,sprintf@width+1
  7888                           
  7889                           ;doprnt.c: 601: width += *f++ - '0';
  7890  00FD14  0ED0               	movlw	208
  7891  00FD16  6E17               	movwf	??_sprintf& (0+255),c
  7892  00FD18  0EFF               	movlw	255
  7893  00FD1A  6E18               	movwf	(??_sprintf+1)& (0+255),c
  7894  00FD1C  C00F  FFF6         	movff	sprintf@f,tblptrl
  7895  00FD20  C010  FFF7         	movff	sprintf@f+1,tblptrh
  7896  00FD24                     	if	0	;tblptru may be non-zero
  7897  00FD24                     	endif
  7898  00FD24                     	if	0	;tblptru may be non-zero
  7899  00FD24                     	endif
  7900  00FD24  0008               	tblrd		*
  7901  00FD26  50F5               	movf	tablat,w,c
  7902  00FD28  6E19               	movwf	(??_sprintf+2)& (0+255),c
  7903  00FD2A  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  7904  00FD2C  5017               	movf	??_sprintf,w,c
  7905  00FD2E  2619               	addwf	??_sprintf+2,f,c
  7906  00FD30  5018               	movf	??_sprintf+1,w,c
  7907  00FD32  221A               	addwfc	??_sprintf+3,f,c
  7908  00FD34  5019               	movf	??_sprintf+2,w,c
  7909  00FD36  2621               	addwf	sprintf@width,f,c
  7910  00FD38  501A               	movf	??_sprintf+3,w,c
  7911  00FD3A  2222               	addwfc	sprintf@width+1,f,c
  7912  00FD3C  4A0F               	infsnz	sprintf@f,f,c
  7913  00FD3E  2A10               	incf	sprintf@f+1,f,c
  7914                           
  7915                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7916  00FD40  C00F  FFF6         	movff	sprintf@f,tblptrl
  7917  00FD44  C010  FFF7         	movff	sprintf@f+1,tblptrh
  7918  00FD48                     	if	0	;tblptru may be non-zero
  7919  00FD48                     	endif
  7920  00FD48                     	if	0	;tblptru may be non-zero
  7921  00FD48                     	endif
  7922  00FD48  0008               	tblrd		*
  7923  00FD4A  50F5               	movf	tablat,w,c
  7924  00FD4C  ECB4  F071         	call	_isdigit
  7925  00FD50  A0D8               	btfss	status,0,c
  7926  00FD52  D007               	goto	l3252
  7927  00FD54  D7D1               	goto	l3240
  7928                           
  7929                           ;doprnt.c: 608: }
  7930                           ;doprnt.c: 635: switch(c = *f++) {
  7931  00FD56  D005               	goto	l3252
  7932                           
  7933                           ;doprnt.c: 638: goto alldone;
  7934                           
  7935                           ;doprnt.c: 637: case 0:
  7936  00FD58  D0C1               	goto	l3306
  7937                           
  7938                           ;doprnt.c: 813: continue;
  7939                           
  7940                           ;doprnt.c: 802: default:
  7941  00FD5A  D0B2               	goto	l3304
  7942  00FD5C                     l3248:
  7943                           
  7944                           ;doprnt.c: 818: flag |= 0xC0;
  7945  00FD5C  0EC0               	movlw	192
  7946  00FD5E  121D               	iorwf	sprintf@flag,f,c
  7947                           
  7948                           ;doprnt.c: 822: }
  7949                           
  7950                           ;doprnt.c: 819: break;
  7951  00FD60  D011               	goto	l3254
  7952  00FD62                     l3252:
  7953  00FD62  C00F  FFF6         	movff	sprintf@f,tblptrl
  7954  00FD66  C010  FFF7         	movff	sprintf@f+1,tblptrh
  7955  00FD6A  4A0F               	infsnz	sprintf@f,f,c
  7956  00FD6C  2A10               	incf	sprintf@f+1,f,c
  7957  00FD6E                     	if	0	;tblptru may be non-zero
  7958  00FD6E                     	endif
  7959  00FD6E                     	if	0	;tblptru may be non-zero
  7960  00FD6E                     	endif
  7961  00FD6E  0008               	tblrd		*
  7962  00FD70  CFF5 F023          	movff	tablat,sprintf@c
  7963  00FD74  5023               	movf	sprintf@c,w,c
  7964                           
  7965                           ; Switch size 1, requested type "space"
  7966                           ; Number of cases is 2, Range of values is 0 to 117
  7967                           ; switch strategies available:
  7968                           ; Name         Instructions Cycles
  7969                           ; simple_byte            7     4 (average)
  7970                           ;	Chosen strategy is simple_byte
  7971  00FD76  0A00               	xorlw	0	; case 0
  7972  00FD78  B4D8               	btfsc	status,2,c
  7973  00FD7A  D0B0               	goto	l3306
  7974  00FD7C  0A75               	xorlw	117	; case 117
  7975  00FD7E  B4D8               	btfsc	status,2,c
  7976  00FD80  D7ED               	goto	l3248
  7977  00FD82  D09E               	goto	l3304
  7978  00FD84                     l3254:
  7979                           
  7980                           ;doprnt.c: 1273: {
  7981                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7982  00FD84  C01B  FFD9         	movff	sprintf@ap,fsr2l
  7983  00FD88  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  7984  00FD8C  CFDE F01E          	movff	postinc2,sprintf@val
  7985  00FD90  CFDD F01F          	movff	postdec2,sprintf@val+1
  7986  00FD94  0E02               	movlw	2
  7987  00FD96  261B               	addwf	sprintf@ap,f,c
  7988  00FD98  0E00               	movlw	0
  7989  00FD9A  221C               	addwfc	sprintf@ap+1,f,c
  7990                           
  7991                           ;doprnt.c: 1287: }
  7992                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7993  00FD9C  0E01               	movlw	1
  7994  00FD9E  6E23               	movwf	sprintf@c,c
  7995  00FDA0                     l3260:
  7996  00FDA0  0E05               	movlw	5
  7997  00FDA2  1823               	xorwf	sprintf@c,w,c
  7998  00FDA4  B4D8               	btfsc	status,2,c
  7999  00FDA6  D016               	goto	l3272
  8000  00FDA8  D001               	goto	l3264
  8001  00FDAA  D014               	goto	l3272
  8002  00FDAC                     l3264:
  8003                           
  8004                           ;doprnt.c: 1306: if(val < dpowers[c])
  8005  00FDAC  5023               	movf	sprintf@c,w,c
  8006  00FDAE  0D02               	mullw	2
  8007  00FDB0  0EED               	movlw	low _dpowers
  8008  00FDB2  24F3               	addwf	prodl,w,c
  8009  00FDB4  6EF6               	movwf	tblptrl,c
  8010  00FDB6  0EFE               	movlw	high _dpowers
  8011  00FDB8  20F4               	addwfc	prodh,w,c
  8012  00FDBA  6EF7               	movwf	tblptrh,c
  8013  00FDBC                     	if	0	;There are less than 3 active tblptr bytes
  8014  00FDBC                     	endif
  8015  00FDBC  0009               	tblrd		*+
  8016  00FDBE  50F5               	movf	tablat,w,c
  8017  00FDC0  5C1E               	subwf	sprintf@val,w,c
  8018  00FDC2  0009               	tblrd		*+
  8019  00FDC4  50F5               	movf	tablat,w,c
  8020  00FDC6  581F               	subwfb	sprintf@val+1,w,c
  8021  00FDC8  A0D8               	btfss	status,0,c
  8022  00FDCA  D004               	goto	l3272
  8023  00FDCC  D001               	goto	l3268
  8024                           
  8025                           ;doprnt.c: 1307: break;
  8026  00FDCE  D002               	goto	l3272
  8027  00FDD0                     l3268:
  8028  00FDD0  2A23               	incf	sprintf@c,f,c
  8029  00FDD2  D7E6               	goto	l3260
  8030  00FDD4                     l3272:
  8031                           
  8032                           ;doprnt.c: 1381: if(width > c)
  8033  00FDD4  0E80               	movlw	128
  8034  00FDD6  BE23               	btfsc	sprintf@c,7,c
  8035  00FDD8  0E7F               	movlw	127
  8036  00FDDA  6E17               	movwf	??_sprintf& (0+255),c
  8037  00FDDC  5021               	movf	sprintf@width,w,c
  8038  00FDDE  5C23               	subwf	sprintf@c,w,c
  8039  00FDE0  5022               	movf	sprintf@width+1,w,c
  8040  00FDE2  0A80               	xorlw	128
  8041  00FDE4  5817               	subwfb	??_sprintf& (0+255),w,c
  8042  00FDE6  B0D8               	btfsc	status,0,c
  8043  00FDE8  D007               	goto	l3276
  8044                           
  8045                           ;doprnt.c: 1382: width -= c;
  8046  00FDEA  5023               	movf	sprintf@c,w,c
  8047  00FDEC  5E21               	subwf	sprintf@width,f,c
  8048  00FDEE  0E00               	movlw	0
  8049  00FDF0  BE23               	btfsc	sprintf@c,7,c
  8050  00FDF2  0EFF               	movlw	255
  8051  00FDF4  5A22               	subwfb	sprintf@width+1,f,c
  8052  00FDF6  D005               	goto	l3278
  8053  00FDF8                     l3276:
  8054                           
  8055                           ;doprnt.c: 1383: else
  8056                           ;doprnt.c: 1384: width = 0;
  8057  00FDF8  0E00               	movlw	0
  8058  00FDFA  6E22               	movwf	sprintf@width+1,c
  8059  00FDFC  0E00               	movlw	0
  8060  00FDFE  6E21               	movwf	sprintf@width,c
  8061  00FE00  D000               	goto	l3278
  8062  00FE02                     l3278:
  8063                           
  8064                           ;doprnt.c: 1387: if(flag & 0x04) {
  8065  00FE02  A41D               	btfss	sprintf@flag,2,c
  8066  00FE04  D015               	goto	l3288
  8067                           
  8068                           ;doprnt.c: 1415: if(width)
  8069  00FE06  5021               	movf	sprintf@width,w,c
  8070  00FE08  1022               	iorwf	sprintf@width+1,w,c
  8071  00FE0A  B4D8               	btfsc	status,2,c
  8072  00FE0C  D026               	goto	l592
  8073  00FE0E                     l3282:
  8074                           
  8075                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8076  00FE0E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8077  00FE12  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8078  00FE16  0E30               	movlw	48
  8079  00FE18  6EDF               	movwf	indf2,c
  8080  00FE1A  4A0D               	infsnz	sprintf@sp,f,c
  8081  00FE1C  2A0E               	incf	sprintf@sp+1,f,c
  8082                           
  8083                           ;doprnt.c: 1418: while(--width);
  8084  00FE1E  0621               	decf	sprintf@width,f,c
  8085  00FE20  A0D8               	btfss	status,0,c
  8086  00FE22  0622               	decf	sprintf@width+1,f,c
  8087  00FE24  5021               	movf	sprintf@width,w,c
  8088  00FE26  1022               	iorwf	sprintf@width+1,w,c
  8089  00FE28  B4D8               	btfsc	status,2,c
  8090  00FE2A  D017               	goto	l592
  8091  00FE2C  D7F0               	goto	l3282
  8092                           
  8093                           ;doprnt.c: 1420: } else
  8094  00FE2E  D015               	goto	l592
  8095  00FE30                     l3288:
  8096                           
  8097                           ;doprnt.c: 1422: {
  8098                           ;doprnt.c: 1424: if(width
  8099                           ;doprnt.c: 1428: )
  8100  00FE30  5021               	movf	sprintf@width,w,c
  8101  00FE32  1022               	iorwf	sprintf@width+1,w,c
  8102  00FE34  B4D8               	btfsc	status,2,c
  8103  00FE36  D011               	goto	l592
  8104  00FE38                     l3290:
  8105                           
  8106                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8107  00FE38  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8108  00FE3C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8109  00FE40  0E20               	movlw	32
  8110  00FE42  6EDF               	movwf	indf2,c
  8111  00FE44  4A0D               	infsnz	sprintf@sp,f,c
  8112  00FE46  2A0E               	incf	sprintf@sp+1,f,c
  8113                           
  8114                           ;doprnt.c: 1431: while(--width);
  8115  00FE48  0621               	decf	sprintf@width,f,c
  8116  00FE4A  A0D8               	btfss	status,0,c
  8117  00FE4C  0622               	decf	sprintf@width+1,f,c
  8118  00FE4E  5021               	movf	sprintf@width,w,c
  8119  00FE50  1022               	iorwf	sprintf@width+1,w,c
  8120  00FE52  B4D8               	btfsc	status,2,c
  8121  00FE54  D002               	goto	l592
  8122  00FE56  D7F0               	goto	l3290
  8123  00FE58  D000               	goto	l592
  8124  00FE5A                     l592:
  8125                           
  8126                           ;doprnt.c: 1469: }
  8127                           ;doprnt.c: 1472: prec = c;
  8128  00FE5A  C023  F020         	movff	sprintf@c,sprintf@prec
  8129                           
  8130                           ;doprnt.c: 1474: while(prec--) {
  8131  00FE5E  D02A               	goto	l3302
  8132  00FE60                     l3296:
  8133                           
  8134                           ;doprnt.c: 1478: {
  8135                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8136  00FE60  5020               	movf	sprintf@prec,w,c
  8137  00FE62  0D02               	mullw	2
  8138  00FE64  0EED               	movlw	low _dpowers
  8139  00FE66  24F3               	addwf	prodl,w,c
  8140  00FE68  6EF6               	movwf	tblptrl,c
  8141  00FE6A  0EFE               	movlw	high _dpowers
  8142  00FE6C  20F4               	addwfc	prodh,w,c
  8143  00FE6E  6EF7               	movwf	tblptrh,c
  8144  00FE70                     	if	0	;There are less than 3 active tblptr bytes
  8145  00FE70                     	endif
  8146  00FE70  0009               	tblrd		*+
  8147  00FE72  CFF5 F003          	movff	tablat,___lwdiv@divisor
  8148  00FE76  000A               	tblrd		*-
  8149  00FE78  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  8150  00FE7C  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  8151  00FE80  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  8152  00FE84  EC3F  F076         	call	___lwdiv	;wreg free
  8153  00FE88  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  8154  00FE8C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  8155  00FE90  0E00               	movlw	0
  8156  00FE92  6E0B               	movwf	___lwmod@divisor+1,c
  8157  00FE94  0E0A               	movlw	10
  8158  00FE96  6E0A               	movwf	___lwmod@divisor,c
  8159  00FE98  ECD3  F074         	call	___lwmod	;wreg free
  8160  00FE9C  5008               	movf	?___lwmod,w,c
  8161  00FE9E  0F30               	addlw	48
  8162  00FEA0  6E23               	movwf	sprintf@c,c
  8163                           
  8164                           ;doprnt.c: 1523: }
  8165                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8166  00FEA2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8167  00FEA6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8168  00FEAA  C023  FFDF         	movff	sprintf@c,indf2
  8169  00FEAE  4A0D               	infsnz	sprintf@sp,f,c
  8170  00FEB0  2A0E               	incf	sprintf@sp+1,f,c
  8171  00FEB2  D000               	goto	l3302
  8172  00FEB4                     l3302:
  8173  00FEB4  0620               	decf	sprintf@prec,f,c
  8174  00FEB6  2820               	incf	sprintf@prec,w,c
  8175  00FEB8  B4D8               	btfsc	status,2,c
  8176  00FEBA  D002               	goto	l3304
  8177  00FEBC  D7D1               	goto	l3296
  8178  00FEBE  D000               	goto	l3304
  8179  00FEC0                     l3304:
  8180  00FEC0  C00F  FFF6         	movff	sprintf@f,tblptrl
  8181  00FEC4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8182  00FEC8  4A0F               	infsnz	sprintf@f,f,c
  8183  00FECA  2A10               	incf	sprintf@f+1,f,c
  8184  00FECC                     	if	0	;tblptru may be non-zero
  8185  00FECC                     	endif
  8186  00FECC                     	if	0	;tblptru may be non-zero
  8187  00FECC                     	endif
  8188  00FECC  0008               	tblrd		*
  8189  00FECE  CFF5 F023          	movff	tablat,sprintf@c
  8190  00FED2  5023               	movf	sprintf@c,w,c
  8191  00FED4  B4D8               	btfsc	status,2,c
  8192  00FED6  D002               	goto	l3306
  8193  00FED8  D6DC               	goto	l3222
  8194  00FEDA  D000               	goto	l3306
  8195  00FEDC                     l3306:
  8196                           
  8197                           ;doprnt.c: 1538: *sp = 0;
  8198  00FEDC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8199  00FEE0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8200  00FEE4  0E00               	movlw	0
  8201  00FEE6  6EDF               	movwf	indf2,c
  8202  00FEE8  0012               	return	
  8203                           
  8204                           ;doprnt.c: 1540: return 0;
  8205                           ;	Return value of _sprintf is never used
  8206  00FEEA  0012               	return		;funcret
  8207  00FEEC                     __end_of_sprintf:
  8208                           	opt stack 0
  8209                           tblptru	equ	0xFF8
  8210                           tblptrh	equ	0xFF7
  8211                           tblptrl	equ	0xFF6
  8212                           tablat	equ	0xFF5
  8213                           prodh	equ	0xFF4
  8214                           prodl	equ	0xFF3
  8215                           intcon	equ	0xFF2
  8216                           indf0	equ	0xFEF
  8217                           postinc0	equ	0xFEE
  8218                           fsr0h	equ	0xFEA
  8219                           fsr0l	equ	0xFE9
  8220                           wreg	equ	0xFE8
  8221                           indf1	equ	0xFE7
  8222                           postdec1	equ	0xFE5
  8223                           fsr1h	equ	0xFE2
  8224                           fsr1l	equ	0xFE1
  8225                           indf2	equ	0xFDF
  8226                           postinc2	equ	0xFDE
  8227                           postdec2	equ	0xFDD
  8228                           fsr2h	equ	0xFDA
  8229                           fsr2l	equ	0xFD9
  8230                           status	equ	0xFD8
  8231                           
  8232 ;; *************** function _isdigit *****************
  8233 ;; Defined at:
  8234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  c               1    wreg     unsigned char 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  c               1    2[COMRAM] unsigned char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;		None               void
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8252 ;;Total ram usage:        3 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_sprintf
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text56
  8262  00E368                     __ptext56:
  8263                           	opt stack 0
  8264  00E368                     _isdigit:
  8265                           	opt stack 27
  8266                           
  8267                           ;incstack = 0
  8268                           ;isdigit@c stored from wreg
  8269  00E368  6E03               	movwf	isdigit@c,c
  8270  00E36A  0E00               	movlw	0
  8271  00E36C  6E02               	movwf	_isdigit$2211,c
  8272  00E36E  0E3A               	movlw	58
  8273  00E370  6003               	cpfslt	isdigit@c,c
  8274  00E372  D006               	goto	l2984
  8275  00E374  0E2F               	movlw	47
  8276  00E376  6403               	cpfsgt	isdigit@c,c
  8277  00E378  D003               	goto	l2984
  8278  00E37A  0E01               	movlw	1
  8279  00E37C  6E02               	movwf	_isdigit$2211,c
  8280  00E37E  D000               	goto	l2984
  8281  00E380                     l2984:
  8282  00E380  C002  F001         	movff	_isdigit$2211,??_isdigit
  8283  00E384  3001               	rrcf	??_isdigit,w,c
  8284  00E386  0012               	return	
  8285  00E388  0012               	return		;funcret
  8286  00E38A                     __end_of_isdigit:
  8287                           	opt stack 0
  8288                           tblptru	equ	0xFF8
  8289                           tblptrh	equ	0xFF7
  8290                           tblptrl	equ	0xFF6
  8291                           tablat	equ	0xFF5
  8292                           prodh	equ	0xFF4
  8293                           prodl	equ	0xFF3
  8294                           intcon	equ	0xFF2
  8295                           indf0	equ	0xFEF
  8296                           postinc0	equ	0xFEE
  8297                           fsr0h	equ	0xFEA
  8298                           fsr0l	equ	0xFE9
  8299                           wreg	equ	0xFE8
  8300                           indf1	equ	0xFE7
  8301                           postdec1	equ	0xFE5
  8302                           fsr1h	equ	0xFE2
  8303                           fsr1l	equ	0xFE1
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8
  8310                           
  8311 ;; *************** function ___wmul *****************
  8312 ;; Defined at:
  8313 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  multiplier      2    0[COMRAM] unsigned int 
  8316 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  product         2    4[COMRAM] unsigned int 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  2    0[COMRAM] unsigned int 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0, prodl, prodh
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;Total ram usage:        6 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_sprintf
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text57
  8342  00E3AE                     __ptext57:
  8343                           	opt stack 0
  8344  00E3AE                     ___wmul:
  8345                           	opt stack 27
  8346                           
  8347                           ;incstack = 0
  8348  00E3AE  5001               	movf	___wmul@multiplier,w,c
  8349  00E3B0  0203               	mulwf	___wmul@multiplicand,c
  8350  00E3B2  CFF3 F005          	movff	prodl,___wmul@product
  8351  00E3B6  CFF4 F006          	movff	prodh,___wmul@product+1
  8352  00E3BA  5001               	movf	___wmul@multiplier,w,c
  8353  00E3BC  0204               	mulwf	___wmul@multiplicand+1,c
  8354  00E3BE  50F3               	movf	prodl,w,c
  8355  00E3C0  2606               	addwf	___wmul@product+1,f,c
  8356  00E3C2  5002               	movf	___wmul@multiplier+1,w,c
  8357  00E3C4  0203               	mulwf	___wmul@multiplicand,c
  8358  00E3C6  50F3               	movf	prodl,w,c
  8359  00E3C8  2606               	addwf	___wmul@product+1,f,c
  8360  00E3CA  C005  F001         	movff	___wmul@product,?___wmul
  8361  00E3CE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8362  00E3D2  0012               	return	
  8363  00E3D4  0012               	return		;funcret
  8364  00E3D6                     __end_of___wmul:
  8365                           	opt stack 0
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           prodh	equ	0xFF4
  8371                           prodl	equ	0xFF3
  8372                           intcon	equ	0xFF2
  8373                           indf0	equ	0xFEF
  8374                           postinc0	equ	0xFEE
  8375                           fsr0h	equ	0xFEA
  8376                           fsr0l	equ	0xFE9
  8377                           wreg	equ	0xFE8
  8378                           indf1	equ	0xFE7
  8379                           postdec1	equ	0xFE5
  8380                           fsr1h	equ	0xFE2
  8381                           fsr1l	equ	0xFE1
  8382                           indf2	equ	0xFDF
  8383                           postinc2	equ	0xFDE
  8384                           postdec2	equ	0xFDD
  8385                           fsr2h	equ	0xFDA
  8386                           fsr2l	equ	0xFD9
  8387                           status	equ	0xFD8
  8388                           
  8389 ;; *************** function ___lwmod *****************
  8390 ;; Defined at:
  8391 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  dividend        2    7[COMRAM] unsigned int 
  8394 ;;  divisor         2    9[COMRAM] unsigned int 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  counter         1   11[COMRAM] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  2    7[COMRAM] unsigned int 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2, status,0
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8409 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;Total ram usage:        5 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_sprintf
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text58
  8420  00E9A6                     __ptext58:
  8421                           	opt stack 0
  8422  00E9A6                     ___lwmod:
  8423                           	opt stack 27
  8424                           
  8425                           ;incstack = 0
  8426  00E9A6  500A               	movf	___lwmod@divisor,w,c
  8427  00E9A8  100B               	iorwf	___lwmod@divisor+1,w,c
  8428  00E9AA  B4D8               	btfsc	status,2,c
  8429  00E9AC  D01D               	goto	l1246
  8430  00E9AE  0E01               	movlw	1
  8431  00E9B0  6E0C               	movwf	___lwmod@counter,c
  8432  00E9B2  D005               	goto	l3022
  8433  00E9B4                     l3020:
  8434  00E9B4  90D8               	bcf	status,0,c
  8435  00E9B6  360A               	rlcf	___lwmod@divisor,f,c
  8436  00E9B8  360B               	rlcf	___lwmod@divisor+1,f,c
  8437  00E9BA  2A0C               	incf	___lwmod@counter,f,c
  8438  00E9BC  D000               	goto	l3022
  8439  00E9BE                     l3022:
  8440  00E9BE  BE0B               	btfsc	___lwmod@divisor+1,7,c
  8441  00E9C0  D002               	goto	l3024
  8442  00E9C2  D7F8               	goto	l3020
  8443  00E9C4  D000               	goto	l3024
  8444  00E9C6                     l3024:
  8445  00E9C6  500A               	movf	___lwmod@divisor,w,c
  8446  00E9C8  5C08               	subwf	___lwmod@dividend,w,c
  8447  00E9CA  500B               	movf	___lwmod@divisor+1,w,c
  8448  00E9CC  5809               	subwfb	___lwmod@dividend+1,w,c
  8449  00E9CE  A0D8               	btfss	status,0,c
  8450  00E9D0  D005               	goto	l3028
  8451  00E9D2  500A               	movf	___lwmod@divisor,w,c
  8452  00E9D4  5E08               	subwf	___lwmod@dividend,f,c
  8453  00E9D6  500B               	movf	___lwmod@divisor+1,w,c
  8454  00E9D8  5A09               	subwfb	___lwmod@dividend+1,f,c
  8455  00E9DA  D000               	goto	l3028
  8456  00E9DC                     l3028:
  8457  00E9DC  90D8               	bcf	status,0,c
  8458  00E9DE  320B               	rrcf	___lwmod@divisor+1,f,c
  8459  00E9E0  320A               	rrcf	___lwmod@divisor,f,c
  8460  00E9E2  2E0C               	decfsz	___lwmod@counter,f,c
  8461  00E9E4  D7F0               	goto	l3024
  8462  00E9E6  D000               	goto	l1246
  8463  00E9E8                     l1246:
  8464  00E9E8  C008  F008         	movff	___lwmod@dividend,?___lwmod
  8465  00E9EC  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  8466  00E9F0  0012               	return		;funcret
  8467  00E9F2                     __end_of___lwmod:
  8468                           	opt stack 0
  8469                           tblptru	equ	0xFF8
  8470                           tblptrh	equ	0xFF7
  8471                           tblptrl	equ	0xFF6
  8472                           tablat	equ	0xFF5
  8473                           prodh	equ	0xFF4
  8474                           prodl	equ	0xFF3
  8475                           intcon	equ	0xFF2
  8476                           indf0	equ	0xFEF
  8477                           postinc0	equ	0xFEE
  8478                           fsr0h	equ	0xFEA
  8479                           fsr0l	equ	0xFE9
  8480                           wreg	equ	0xFE8
  8481                           indf1	equ	0xFE7
  8482                           postdec1	equ	0xFE5
  8483                           fsr1h	equ	0xFE2
  8484                           fsr1l	equ	0xFE1
  8485                           indf2	equ	0xFDF
  8486                           postinc2	equ	0xFDE
  8487                           postdec2	equ	0xFDD
  8488                           fsr2h	equ	0xFDA
  8489                           fsr2l	equ	0xFD9
  8490                           status	equ	0xFD8
  8491                           
  8492 ;; *************** function ___lwdiv *****************
  8493 ;; Defined at:
  8494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  dividend        2    0[COMRAM] unsigned int 
  8497 ;;  divisor         2    2[COMRAM] unsigned int 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  quotient        2    4[COMRAM] unsigned int 
  8500 ;;  counter         1    6[COMRAM] unsigned char 
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  2    0[COMRAM] unsigned int 
  8503 ;; Registers used:
  8504 ;;		wreg, status,2, status,0
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8511 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8514 ;;Total ram usage:        7 bytes
  8515 ;; Hardware stack levels used:    1
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_sprintf
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text59
  8524  00EC7E                     __ptext59:
  8525                           	opt stack 0
  8526  00EC7E                     ___lwdiv:
  8527                           	opt stack 27
  8528                           
  8529                           ;incstack = 0
  8530  00EC7E  0E00               	movlw	0
  8531  00EC80  6E06               	movwf	___lwdiv@quotient+1,c
  8532  00EC82  0E00               	movlw	0
  8533  00EC84  6E05               	movwf	___lwdiv@quotient,c
  8534  00EC86  5003               	movf	___lwdiv@divisor,w,c
  8535  00EC88  1004               	iorwf	___lwdiv@divisor+1,w,c
  8536  00EC8A  B4D8               	btfsc	status,2,c
  8537  00EC8C  D021               	goto	l1236
  8538  00EC8E  0E01               	movlw	1
  8539  00EC90  6E07               	movwf	___lwdiv@counter,c
  8540  00EC92  D005               	goto	l3002
  8541  00EC94                     l3000:
  8542  00EC94  90D8               	bcf	status,0,c
  8543  00EC96  3603               	rlcf	___lwdiv@divisor,f,c
  8544  00EC98  3604               	rlcf	___lwdiv@divisor+1,f,c
  8545  00EC9A  2A07               	incf	___lwdiv@counter,f,c
  8546  00EC9C  D000               	goto	l3002
  8547  00EC9E                     l3002:
  8548  00EC9E  BE04               	btfsc	___lwdiv@divisor+1,7,c
  8549  00ECA0  D002               	goto	l3004
  8550  00ECA2  D7F8               	goto	l3000
  8551  00ECA4  D000               	goto	l3004
  8552  00ECA6                     l3004:
  8553  00ECA6  90D8               	bcf	status,0,c
  8554  00ECA8  3605               	rlcf	___lwdiv@quotient,f,c
  8555  00ECAA  3606               	rlcf	___lwdiv@quotient+1,f,c
  8556  00ECAC  5003               	movf	___lwdiv@divisor,w,c
  8557  00ECAE  5C01               	subwf	___lwdiv@dividend,w,c
  8558  00ECB0  5004               	movf	___lwdiv@divisor+1,w,c
  8559  00ECB2  5802               	subwfb	___lwdiv@dividend+1,w,c
  8560  00ECB4  A0D8               	btfss	status,0,c
  8561  00ECB6  D006               	goto	l3012
  8562  00ECB8  5003               	movf	___lwdiv@divisor,w,c
  8563  00ECBA  5E01               	subwf	___lwdiv@dividend,f,c
  8564  00ECBC  5004               	movf	___lwdiv@divisor+1,w,c
  8565  00ECBE  5A02               	subwfb	___lwdiv@dividend+1,f,c
  8566  00ECC0  8005               	bsf	___lwdiv@quotient,0,c
  8567  00ECC2  D000               	goto	l3012
  8568  00ECC4                     l3012:
  8569  00ECC4  90D8               	bcf	status,0,c
  8570  00ECC6  3204               	rrcf	___lwdiv@divisor+1,f,c
  8571  00ECC8  3203               	rrcf	___lwdiv@divisor,f,c
  8572  00ECCA  2E07               	decfsz	___lwdiv@counter,f,c
  8573  00ECCC  D7EC               	goto	l3004
  8574  00ECCE  D000               	goto	l1236
  8575  00ECD0                     l1236:
  8576  00ECD0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  8577  00ECD4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8578  00ECD8  0012               	return		;funcret
  8579  00ECDA                     __end_of___lwdiv:
  8580                           	opt stack 0
  8581                           tblptru	equ	0xFF8
  8582                           tblptrh	equ	0xFF7
  8583                           tblptrl	equ	0xFF6
  8584                           tablat	equ	0xFF5
  8585                           prodh	equ	0xFF4
  8586                           prodl	equ	0xFF3
  8587                           intcon	equ	0xFF2
  8588                           indf0	equ	0xFEF
  8589                           postinc0	equ	0xFEE
  8590                           fsr0h	equ	0xFEA
  8591                           fsr0l	equ	0xFE9
  8592                           wreg	equ	0xFE8
  8593                           indf1	equ	0xFE7
  8594                           postdec1	equ	0xFE5
  8595                           fsr1h	equ	0xFE2
  8596                           fsr1l	equ	0xFE1
  8597                           indf2	equ	0xFDF
  8598                           postinc2	equ	0xFDE
  8599                           postdec2	equ	0xFDD
  8600                           fsr2h	equ	0xFDA
  8601                           fsr2l	equ	0xFD9
  8602                           status	equ	0xFD8
  8603                           
  8604 ;; *************** function _check_home_callback *****************
  8605 ;; Defined at:
  8606 ;;		line 94 in file "main.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;		None
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;		None
  8611 ;; Return value:  Size  Location     Type
  8612 ;;		None               void
  8613 ;; Registers used:
  8614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8624 ;;Total ram usage:        0 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    7
  8627 ;; This function calls:
  8628 ;;		_activity_home
  8629 ;;		_reset_home_callback
  8630 ;; This function is called by:
  8631 ;;		_main
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text60
  8636  00E346                     __ptext60:
  8637                           	opt stack 0
  8638  00E346                     _check_home_callback:
  8639                           	opt stack 23
  8640                           
  8641                           ;main.c: 96: if(activity != 0){
  8642                           
  8643                           ;incstack = 0
  8644  00E346  5029               	movf	_activity,w,c
  8645  00E348  102A               	iorwf	_activity+1,w,c
  8646  00E34A  B4D8               	btfsc	status,2,c
  8647  00E34C  0012               	return	
  8648                           
  8649                           ;main.c: 97: home_callback--;
  8650  00E34E  0635               	decf	_home_callback,f,c
  8651  00E350  A0D8               	btfss	status,0,c
  8652  00E352  0636               	decf	_home_callback+1,f,c
  8653                           
  8654                           ;main.c: 99: if(home_callback == 0){
  8655  00E354  5035               	movf	_home_callback,w,c
  8656  00E356  1036               	iorwf	_home_callback+1,w,c
  8657  00E358  A4D8               	btfss	status,2,c
  8658  00E35A  0012               	return	
  8659                           
  8660                           ;main.c: 100: reset_home_callback();
  8661  00E35C  EC40  F071         	call	_reset_home_callback	;wreg free
  8662                           
  8663                           ;main.c: 101: activity_home();
  8664  00E360  ECEB  F071         	call	_activity_home	;wreg free
  8665  00E364  0012               	return	
  8666  00E366  0012               	return		;funcret
  8667  00E368                     __end_of_check_home_callback:
  8668                           	opt stack 0
  8669                           tblptru	equ	0xFF8
  8670                           tblptrh	equ	0xFF7
  8671                           tblptrl	equ	0xFF6
  8672                           tablat	equ	0xFF5
  8673                           prodh	equ	0xFF4
  8674                           prodl	equ	0xFF3
  8675                           intcon	equ	0xFF2
  8676                           indf0	equ	0xFEF
  8677                           postinc0	equ	0xFEE
  8678                           fsr0h	equ	0xFEA
  8679                           fsr0l	equ	0xFE9
  8680                           wreg	equ	0xFE8
  8681                           indf1	equ	0xFE7
  8682                           postdec1	equ	0xFE5
  8683                           fsr1h	equ	0xFE2
  8684                           fsr1l	equ	0xFE1
  8685                           indf2	equ	0xFDF
  8686                           postinc2	equ	0xFDE
  8687                           postdec2	equ	0xFDD
  8688                           fsr2h	equ	0xFDA
  8689                           fsr2l	equ	0xFD9
  8690                           status	equ	0xFD8
  8691                           
  8692 ;; *************** function _reset_home_callback *****************
  8693 ;; Defined at:
  8694 ;;		line 88 in file "main.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;		None               void
  8701 ;; Registers used:
  8702 ;;		None
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;Total ram usage:        0 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; This function calls:
  8715 ;;		Nothing
  8716 ;; This function is called by:
  8717 ;;		_check_home_callback
  8718 ;;		_button_A
  8719 ;;		_button_B
  8720 ;;		_button_C
  8721 ;;		_button_D
  8722 ;;		_button_asterisk
  8723 ;;		_button_hash
  8724 ;;		_button_number
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text61
  8729  00E280                     __ptext61:
  8730                           	opt stack 0
  8731  00E280                     _reset_home_callback:
  8732                           	opt stack 28
  8733                           
  8734                           ;main.c: 90: home_callback = home_callback_delay;
  8735                           
  8736                           ;incstack = 0
  8737  00E280  C037  F035         	movff	_home_callback_delay,_home_callback
  8738  00E284  C038  F036         	movff	_home_callback_delay+1,_home_callback+1
  8739  00E288  0012               	return		;funcret
  8740  00E28A                     __end_of_reset_home_callback:
  8741                           	opt stack 0
  8742                           tblptru	equ	0xFF8
  8743                           tblptrh	equ	0xFF7
  8744                           tblptrl	equ	0xFF6
  8745                           tablat	equ	0xFF5
  8746                           prodh	equ	0xFF4
  8747                           prodl	equ	0xFF3
  8748                           intcon	equ	0xFF2
  8749                           indf0	equ	0xFEF
  8750                           postinc0	equ	0xFEE
  8751                           fsr0h	equ	0xFEA
  8752                           fsr0l	equ	0xFE9
  8753                           wreg	equ	0xFE8
  8754                           indf1	equ	0xFE7
  8755                           postdec1	equ	0xFE5
  8756                           fsr1h	equ	0xFE2
  8757                           fsr1l	equ	0xFE1
  8758                           indf2	equ	0xFDF
  8759                           postinc2	equ	0xFDE
  8760                           postdec2	equ	0xFDD
  8761                           fsr2h	equ	0xFDA
  8762                           fsr2l	equ	0xFD9
  8763                           status	equ	0xFD8
  8764                           
  8765 ;; *************** function _activity_home *****************
  8766 ;; Defined at:
  8767 ;;		line 80 in file "main.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;		None
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;		None               void
  8774 ;; Registers used:
  8775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8785 ;;Total ram usage:        0 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    6
  8788 ;; This function calls:
  8789 ;;		_lcd_init
  8790 ;;		_lcd_write
  8791 ;; This function is called by:
  8792 ;;		_check_home_callback
  8793 ;;		_pin_set
  8794 ;;		_button_B_submenu_activation
  8795 ;;		_button_B_submenu_pin_config
  8796 ;;		_button_B_submenu_siren_volume
  8797 ;;		_button_B_submenu_siren_tone
  8798 ;;		_button_D
  8799 ;;		_button_hash
  8800 ;;		_main
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text62
  8805  00E3D6                     __ptext62:
  8806                           	opt stack 0
  8807  00E3D6                     _activity_home:
  8808                           	opt stack 21
  8809                           
  8810                           ;main.c: 82: activity = 0;
  8811                           
  8812                           ;incstack = 0
  8813  00E3D6  0E00               	movlw	0
  8814  00E3D8  6E2A               	movwf	_activity+1,c
  8815  00E3DA  0E00               	movlw	0
  8816  00E3DC  6E29               	movwf	_activity,c
  8817                           
  8818                           ;main.c: 83: lcd_init();
  8819  00E3DE  EC87  F078         	call	_lcd_init	;wreg free
  8820                           
  8821                           ;main.c: 84: lcd_write(1,1,"X28");
  8822  00E3E2  0E00               	movlw	0
  8823  00E3E4  6E0C               	movwf	lcd_write@column+1,c
  8824  00E3E6  0E01               	movlw	1
  8825  00E3E8  6E0B               	movwf	lcd_write@column,c
  8826  00E3EA  0E00               	movlw	0
  8827  00E3EC  6E0E               	movwf	lcd_write@row+1,c
  8828  00E3EE  0E01               	movlw	1
  8829  00E3F0  6E0D               	movwf	lcd_write@row,c
  8830  00E3F2  0EE3               	movlw	low STR_1
  8831  00E3F4  6E0F               	movwf	lcd_write@string,c
  8832  00E3F6  0EFF               	movlw	high STR_1
  8833  00E3F8  6E10               	movwf	lcd_write@string+1,c
  8834  00E3FA  EC7C  F071         	call	_lcd_write	;wreg free
  8835  00E3FE  0012               	return		;funcret
  8836  00E400                     __end_of_activity_home:
  8837                           	opt stack 0
  8838                           tblptru	equ	0xFF8
  8839                           tblptrh	equ	0xFF7
  8840                           tblptrl	equ	0xFF6
  8841                           tablat	equ	0xFF5
  8842                           prodh	equ	0xFF4
  8843                           prodl	equ	0xFF3
  8844                           intcon	equ	0xFF2
  8845                           indf0	equ	0xFEF
  8846                           postinc0	equ	0xFEE
  8847                           fsr0h	equ	0xFEA
  8848                           fsr0l	equ	0xFE9
  8849                           wreg	equ	0xFE8
  8850                           indf1	equ	0xFE7
  8851                           postdec1	equ	0xFE5
  8852                           fsr1h	equ	0xFE2
  8853                           fsr1l	equ	0xFE1
  8854                           indf2	equ	0xFDF
  8855                           postinc2	equ	0xFDE
  8856                           postdec2	equ	0xFDD
  8857                           fsr2h	equ	0xFDA
  8858                           fsr2l	equ	0xFD9
  8859                           status	equ	0xFD8
  8860                           
  8861 ;; *************** function _lcd_write *****************
  8862 ;; Defined at:
  8863 ;;		line 71 in file "main.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  column          2   10[COMRAM] int 
  8866 ;;  row             2   12[COMRAM] int 
  8867 ;;  string          2   14[COMRAM] PTR const unsigned char 
  8868 ;;		 -> STR_46(11), STR_44(6), STR_43(8), STR_42(4), 
  8869 ;;		 -> STR_41(7), STR_40(7), STR_39(5), STR_38(5), 
  8870 ;;		 -> STR_37(5), STR_36(8), STR_35(5), STR_34(8), 
  8871 ;;		 -> STR_33(7), STR_30(16), STR_28(17), buffer1(20), 
  8872 ;;		 -> STR_25(5), STR_24(6), STR_23(6), STR_22(3), 
  8873 ;;		 -> STR_21(3), STR_20(8), STR_19(7), STR_18(4), 
  8874 ;;		 -> STR_17(6), STR_16(8), STR_15(16), STR_13(2), 
  8875 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  8876 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  8877 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(4), 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;		None               void
  8882 ;; Registers used:
  8883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8889 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8892 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8893 ;;Total ram usage:        6 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:    5
  8896 ;; This function calls:
  8897 ;;		_lcd_gotoxy
  8898 ;;		_lcd_putrs
  8899 ;; This function is called by:
  8900 ;;		_activity_home
  8901 ;;		_menu_selector_0
  8902 ;;		_menu_selector_1
  8903 ;;		_menu_selector_2
  8904 ;;		_menu_selector_3
  8905 ;;		_submenu_selector_0
  8906 ;;		_submenu_selector_1
  8907 ;;		_activity_pin
  8908 ;;		_activity_menu
  8909 ;;		_activity_submenu_activation
  8910 ;;		_activity_submenu_date_and_time
  8911 ;;		_activity_submenu_date_config
  8912 ;;		_activity_submenu_time_config
  8913 ;;		_date_set
  8914 ;;		_activity_submenu_siren
  8915 ;;		_activity_submenu_siren_volume
  8916 ;;		_activity_submenu_siren_tone
  8917 ;;		_activity_submenu_pin
  8918 ;;		_activity_submenu_pin_set
  8919 ;;		_home_clock_refresh
  8920 ;;		_home_state_refresh
  8921 ;;		_home_volume_refresh
  8922 ;;		_home_tone_refresh
  8923 ;;		_activity_submenu_date_config_refresh
  8924 ;;		_activity_submenu_time_config_refresh
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text63
  8929  00E2F8                     __ptext63:
  8930                           	opt stack 0
  8931  00E2F8                     _lcd_write:
  8932                           	opt stack 21
  8933                           
  8934                           ;main.c: 73: lcd_gotoxy(column, row);
  8935                           
  8936                           ;incstack = 0
  8937  00E2F8  C00D  F005         	movff	lcd_write@row,lcd_gotoxy@y
  8938  00E2FC  500B               	movf	lcd_write@column,w,c
  8939  00E2FE  ECC5  F071         	call	_lcd_gotoxy
  8940                           
  8941                           ;main.c: 74: lcd_putrs(string);
  8942  00E302  C00F  F009         	movff	lcd_write@string,lcd_putrs@ptr
  8943  00E306  C010  F00A         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  8944  00E30A  ECE9  F075         	call	_lcd_putrs	;wreg free
  8945  00E30E  0012               	return		;funcret
  8946  00E310                     __end_of_lcd_write:
  8947                           	opt stack 0
  8948                           tblptru	equ	0xFF8
  8949                           tblptrh	equ	0xFF7
  8950                           tblptrl	equ	0xFF6
  8951                           tablat	equ	0xFF5
  8952                           prodh	equ	0xFF4
  8953                           prodl	equ	0xFF3
  8954                           intcon	equ	0xFF2
  8955                           indf0	equ	0xFEF
  8956                           postinc0	equ	0xFEE
  8957                           fsr0h	equ	0xFEA
  8958                           fsr0l	equ	0xFE9
  8959                           wreg	equ	0xFE8
  8960                           indf1	equ	0xFE7
  8961                           postdec1	equ	0xFE5
  8962                           fsr1h	equ	0xFE2
  8963                           fsr1l	equ	0xFE1
  8964                           indf2	equ	0xFDF
  8965                           postinc2	equ	0xFDE
  8966                           postdec2	equ	0xFDD
  8967                           fsr2h	equ	0xFDA
  8968                           fsr2l	equ	0xFD9
  8969                           status	equ	0xFD8
  8970                           
  8971 ;; *************** function _lcd_putrs *****************
  8972 ;; Defined at:
  8973 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  8976 ;;		 -> STR_56(2), STR_46(11), STR_44(6), STR_43(8), 
  8977 ;;		 -> STR_42(4), STR_41(7), STR_40(7), STR_39(5), 
  8978 ;;		 -> STR_38(5), STR_37(5), STR_36(8), STR_35(5), 
  8979 ;;		 -> STR_34(8), STR_33(7), STR_30(16), STR_28(17), 
  8980 ;;		 -> buffer1(20), STR_25(5), STR_24(6), STR_23(6), 
  8981 ;;		 -> STR_22(3), STR_21(3), STR_20(8), STR_19(7), 
  8982 ;;		 -> STR_18(4), STR_17(6), STR_16(8), STR_15(16), 
  8983 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  8984 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  8985 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  8986 ;;		 -> STR_1(4), 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;		None               void
  8991 ;; Registers used:
  8992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9002 ;;Total ram usage:        2 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    4
  9005 ;; This function calls:
  9006 ;;		_lcd_putc
  9007 ;; This function is called by:
  9008 ;;		_lcd_write
  9009 ;;		_button_number
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text64
  9014  00EBD2                     __ptext64:
  9015                           	opt stack 0
  9016  00EBD2                     _lcd_putrs:
  9017                           	opt stack 24
  9018                           
  9019                           ;unmc_lcd_216.c: 223: while(*ptr){
  9020                           
  9021                           ;incstack = 0
  9022  00EBD2  D015               	goto	l2958
  9023  00EBD4                     l2954:
  9024                           
  9025                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  9026  00EBD4  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9027  00EBD8  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9028  00EBDC  6AF8               	clrf	tblptru,c
  9029  00EBDE  0E0E               	movlw	(high __ramtop+-1)
  9030  00EBE0  64F7               	cpfsgt	tblptrh,c
  9031  00EBE2  D003               	bra	u1447
  9032  00EBE4  0008               	tblrd		*
  9033  00EBE6  50F5               	movf	tablat,w,c
  9034  00EBE8  D005               	bra	u1440
  9035  00EBEA                     u1447:
  9036  00EBEA  CFF6 FFE9          	movff	tblptrl,fsr0l
  9037  00EBEE  CFF7 FFEA          	movff	tblptrh,fsr0h
  9038  00EBF2  50EF               	movf	indf0,w,c
  9039  00EBF4                     u1440:
  9040  00EBF4  ECAD  F074         	call	_lcd_putc
  9041  00EBF8  4A09               	infsnz	lcd_putrs@ptr,f,c
  9042  00EBFA  2A0A               	incf	lcd_putrs@ptr+1,f,c
  9043  00EBFC  D000               	goto	l2958
  9044  00EBFE                     l2958:
  9045  00EBFE  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9046  00EC02  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9047  00EC06  6AF8               	clrf	tblptru,c
  9048  00EC08  0E0E               	movlw	(high __ramtop+-1)
  9049  00EC0A  64F7               	cpfsgt	tblptrh,c
  9050  00EC0C  D003               	bra	u1457
  9051  00EC0E  0008               	tblrd		*
  9052  00EC10  50F5               	movf	tablat,w,c
  9053  00EC12  D005               	bra	u1450
  9054  00EC14                     u1457:
  9055  00EC14  CFF6 FFE9          	movff	tblptrl,fsr0l
  9056  00EC18  CFF7 FFEA          	movff	tblptrh,fsr0h
  9057  00EC1C  50EF               	movf	indf0,w,c
  9058  00EC1E                     u1450:
  9059  00EC1E  0900               	iorlw	0
  9060  00EC20  A4D8               	btfss	status,2,c
  9061  00EC22  D7D8               	goto	l2954
  9062  00EC24  0012               	return		;funcret
  9063  00EC26                     __end_of_lcd_putrs:
  9064                           	opt stack 0
  9065                           tblptru	equ	0xFF8
  9066                           tblptrh	equ	0xFF7
  9067                           tblptrl	equ	0xFF6
  9068                           tablat	equ	0xFF5
  9069                           prodh	equ	0xFF4
  9070                           prodl	equ	0xFF3
  9071                           intcon	equ	0xFF2
  9072                           indf0	equ	0xFEF
  9073                           postinc0	equ	0xFEE
  9074                           fsr0h	equ	0xFEA
  9075                           fsr0l	equ	0xFE9
  9076                           wreg	equ	0xFE8
  9077                           indf1	equ	0xFE7
  9078                           postdec1	equ	0xFE5
  9079                           fsr1h	equ	0xFE2
  9080                           fsr1l	equ	0xFE1
  9081                           indf2	equ	0xFDF
  9082                           postinc2	equ	0xFDE
  9083                           postdec2	equ	0xFDD
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function _lcd_putc *****************
  9089 ;; Defined at:
  9090 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  c               1    wreg     unsigned char 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  c               1    7[COMRAM] unsigned char 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;		None               void
  9097 ;; Registers used:
  9098 ;;		wreg, status,2, status,0, cstack
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9108 ;;Total ram usage:        1 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:    3
  9111 ;; This function calls:
  9112 ;;		_lcd_gotoxy
  9113 ;;		_lcd_send_byte
  9114 ;; This function is called by:
  9115 ;;		_lcd_putrs
  9116 ;;		_lcd_puts
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text65
  9121  00E95A                     __ptext65:
  9122                           	opt stack 0
  9123  00E95A                     _lcd_putc:
  9124                           	opt stack 24
  9125                           
  9126                           ;incstack = 0
  9127                           ;lcd_putc@c stored from wreg
  9128  00E95A  6E08               	movwf	lcd_putc@c,c
  9129                           
  9130                           ;unmc_lcd_216.c: 173: switch(c){
  9131  00E95C  D018               	goto	l2950
  9132  00E95E                     l2940:
  9133                           
  9134                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  9135  00E95E  0E01               	movlw	1
  9136  00E960  6E03               	movwf	lcd_send_byte@n,c
  9137  00E962  0E00               	movlw	0
  9138  00E964  EC73  F072         	call	_lcd_send_byte
  9139                           
  9140                           ;unmc_lcd_216.c: 176: break;
  9141  00E968  0012               	return	
  9142  00E96A                     l2942:
  9143                           
  9144                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  9145  00E96A  0E02               	movlw	2
  9146  00E96C  6E05               	movwf	lcd_gotoxy@y,c
  9147  00E96E  0E01               	movlw	1
  9148  00E970  ECC5  F071         	call	_lcd_gotoxy
  9149                           
  9150                           ;unmc_lcd_216.c: 179: break;
  9151  00E974  0012               	return	
  9152  00E976                     l2944:
  9153                           
  9154                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  9155  00E976  0E10               	movlw	16
  9156  00E978  6E03               	movwf	lcd_send_byte@n,c
  9157  00E97A  0E00               	movlw	0
  9158  00E97C  EC73  F072         	call	_lcd_send_byte
  9159                           
  9160                           ;unmc_lcd_216.c: 182: break;
  9161  00E980  0012               	return	
  9162  00E982                     l2946:
  9163                           
  9164                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  9165  00E982  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  9166  00E986  0E01               	movlw	1
  9167  00E988  EC73  F072         	call	_lcd_send_byte
  9168                           
  9169                           ;unmc_lcd_216.c: 186: }
  9170                           
  9171                           ;unmc_lcd_216.c: 185: break;
  9172  00E98C  0012               	return	
  9173  00E98E                     l2950:
  9174  00E98E  5008               	movf	lcd_putc@c,w,c
  9175                           
  9176                           ; Switch size 1, requested type "space"
  9177                           ; Number of cases is 3, Range of values is 8 to 12
  9178                           ; switch strategies available:
  9179                           ; Name         Instructions Cycles
  9180                           ; simple_byte           10     6 (average)
  9181                           ;	Chosen strategy is simple_byte
  9182  00E990  0A08               	xorlw	8	; case 8
  9183  00E992  B4D8               	btfsc	status,2,c
  9184  00E994  D7F0               	goto	l2944
  9185  00E996  0A02               	xorlw	2	; case 10
  9186  00E998  B4D8               	btfsc	status,2,c
  9187  00E99A  D7E7               	goto	l2942
  9188  00E99C  0A06               	xorlw	6	; case 12
  9189  00E99E  B4D8               	btfsc	status,2,c
  9190  00E9A0  D7DE               	goto	l2940
  9191  00E9A2  D7EF               	goto	l2946
  9192  00E9A4  0012               	return		;funcret
  9193  00E9A6                     __end_of_lcd_putc:
  9194                           	opt stack 0
  9195                           tblptru	equ	0xFF8
  9196                           tblptrh	equ	0xFF7
  9197                           tblptrl	equ	0xFF6
  9198                           tablat	equ	0xFF5
  9199                           prodh	equ	0xFF4
  9200                           prodl	equ	0xFF3
  9201                           intcon	equ	0xFF2
  9202                           indf0	equ	0xFEF
  9203                           postinc0	equ	0xFEE
  9204                           fsr0h	equ	0xFEA
  9205                           fsr0l	equ	0xFE9
  9206                           wreg	equ	0xFE8
  9207                           indf1	equ	0xFE7
  9208                           postdec1	equ	0xFE5
  9209                           fsr1h	equ	0xFE2
  9210                           fsr1l	equ	0xFE1
  9211                           indf2	equ	0xFDF
  9212                           postinc2	equ	0xFDE
  9213                           postdec2	equ	0xFDD
  9214                           fsr2h	equ	0xFDA
  9215                           fsr2l	equ	0xFD9
  9216                           status	equ	0xFD8
  9217                           
  9218 ;; *************** function _lcd_gotoxy *****************
  9219 ;; Defined at:
  9220 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  x               1    wreg     unsigned char 
  9223 ;;  y               1    4[COMRAM] unsigned char 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  x               1    5[COMRAM] unsigned char 
  9226 ;;  address         1    6[COMRAM] unsigned char 
  9227 ;; Return value:  Size  Location     Type
  9228 ;;		None               void
  9229 ;; Registers used:
  9230 ;;		wreg, status,2, status,0, cstack
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9236 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9239 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9240 ;;Total ram usage:        3 bytes
  9241 ;; Hardware stack levels used:    1
  9242 ;; Hardware stack levels required when called:    2
  9243 ;; This function calls:
  9244 ;;		_lcd_send_byte
  9245 ;; This function is called by:
  9246 ;;		_lcd_write
  9247 ;;		_activity_pin
  9248 ;;		_activity_submenu_date_config
  9249 ;;		_activity_submenu_time_config
  9250 ;;		_date_set
  9251 ;;		_activity_submenu_pin_set
  9252 ;;		_lcd_putc
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text66
  9257  00E38A                     __ptext66:
  9258                           	opt stack 0
  9259  00E38A                     _lcd_gotoxy:
  9260                           	opt stack 24
  9261                           
  9262                           ;incstack = 0
  9263                           ;lcd_gotoxy@x stored from wreg
  9264  00E38A  6E06               	movwf	lcd_gotoxy@x,c
  9265                           
  9266                           ;unmc_lcd_216.c: 159: int8 address;
  9267                           ;unmc_lcd_216.c: 161: if(y != 1)
  9268  00E38C  0405               	decf	lcd_gotoxy@y,w,c
  9269  00E38E  B4D8               	btfsc	status,2,c
  9270  00E390  D002               	goto	l2932
  9271                           
  9272                           ;unmc_lcd_216.c: 162: address = 0x40;
  9273  00E392  0E40               	movlw	64
  9274  00E394  D001               	goto	L4
  9275  00E396                     l2932:
  9276                           
  9277                           ;unmc_lcd_216.c: 163: else
  9278                           ;unmc_lcd_216.c: 164: address=0;
  9279  00E396  0E00               	movlw	0
  9280  00E398                     L4:
  9281  00E398  6E07               	movwf	lcd_gotoxy@address,c
  9282  00E39A  D000               	goto	l2934
  9283  00E39C                     l2934:
  9284                           
  9285                           ;unmc_lcd_216.c: 166: address += x-1;
  9286  00E39C  0406               	decf	lcd_gotoxy@x,w,c
  9287  00E39E  2607               	addwf	lcd_gotoxy@address,f,c
  9288                           
  9289                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  9290  00E3A0  5007               	movf	lcd_gotoxy@address,w,c
  9291  00E3A2  0980               	iorlw	128
  9292  00E3A4  6E03               	movwf	lcd_send_byte@n,c
  9293  00E3A6  0E00               	movlw	0
  9294  00E3A8  EC73  F072         	call	_lcd_send_byte
  9295  00E3AC  0012               	return		;funcret
  9296  00E3AE                     __end_of_lcd_gotoxy:
  9297                           	opt stack 0
  9298                           tblptru	equ	0xFF8
  9299                           tblptrh	equ	0xFF7
  9300                           tblptrl	equ	0xFF6
  9301                           tablat	equ	0xFF5
  9302                           prodh	equ	0xFF4
  9303                           prodl	equ	0xFF3
  9304                           intcon	equ	0xFF2
  9305                           indf0	equ	0xFEF
  9306                           postinc0	equ	0xFEE
  9307                           fsr0h	equ	0xFEA
  9308                           fsr0l	equ	0xFE9
  9309                           wreg	equ	0xFE8
  9310                           indf1	equ	0xFE7
  9311                           postdec1	equ	0xFE5
  9312                           fsr1h	equ	0xFE2
  9313                           fsr1l	equ	0xFE1
  9314                           indf2	equ	0xFDF
  9315                           postinc2	equ	0xFDE
  9316                           postdec2	equ	0xFDD
  9317                           fsr2h	equ	0xFDA
  9318                           fsr2l	equ	0xFD9
  9319                           status	equ	0xFD8
  9320                           
  9321 ;; *************** function _lcd_init *****************
  9322 ;; Defined at:
  9323 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;		None
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  i               1    4[COMRAM] unsigned char 
  9328 ;; Return value:  Size  Location     Type
  9329 ;;		None               void
  9330 ;; Registers used:
  9331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9340 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9341 ;;Total ram usage:        1 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; Hardware stack levels required when called:    2
  9344 ;; This function calls:
  9345 ;;		_Delay1KTCYx
  9346 ;;		_lcd_send_byte
  9347 ;;		_lcd_send_nibble
  9348 ;; This function is called by:
  9349 ;;		_activity_home
  9350 ;;		_activity_pin
  9351 ;;		_activity_menu
  9352 ;;		_activity_submenu_activation
  9353 ;;		_activity_submenu_date_and_time
  9354 ;;		_activity_submenu_date_config
  9355 ;;		_activity_submenu_time_config
  9356 ;;		_activity_submenu_siren
  9357 ;;		_activity_submenu_siren_volume
  9358 ;;		_activity_submenu_siren_tone
  9359 ;;		_activity_submenu_pin
  9360 ;;		_activity_submenu_pin_set
  9361 ;;		_setup
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text67
  9366  00F10E                     __ptext67:
  9367                           	opt stack 0
  9368  00F10E                     _lcd_init:
  9369                           	opt stack 27
  9370                           
  9371                           ;unmc_lcd_216.c: 120: int8 i;
  9372                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  9373                           
  9374                           ;incstack = 0
  9375  00F10E  9693               	bcf	3987,3,c	;volatile
  9376                           
  9377                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  9378  00F110  9493               	bcf	3987,2,c	;volatile
  9379                           
  9380                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  9381  00F112  968A               	bcf	3978,3,c	;volatile
  9382                           
  9383                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  9384  00F114  948A               	bcf	3978,2,c	;volatile
  9385                           
  9386                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  9387  00F116  9893               	bcf	3987,4,c	;volatile
  9388                           
  9389                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  9390  00F118  9A93               	bcf	3987,5,c	;volatile
  9391                           
  9392                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  9393  00F11A  9C93               	bcf	3987,6,c	;volatile
  9394                           
  9395                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  9396  00F11C  9E93               	bcf	3987,7,c	;volatile
  9397                           
  9398                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  9399  00F11E  0E0A               	movlw	10
  9400  00F120  EC56  F071         	call	_Delay1KTCYx
  9401                           
  9402                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  9403  00F124  0E0A               	movlw	10
  9404  00F126  EC56  F071         	call	_Delay1KTCYx
  9405                           
  9406                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  9407  00F12A  0E0A               	movlw	10
  9408  00F12C  EC56  F071         	call	_Delay1KTCYx
  9409                           
  9410                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  9411  00F130  0E00               	movlw	0
  9412  00F132  6E05               	movwf	lcd_init@i,c
  9413  00F134                     l3174:
  9414  00F134  0E02               	movlw	2
  9415  00F136  6405               	cpfsgt	lcd_init@i,c
  9416  00F138  D001               	goto	l3178
  9417  00F13A  D008               	goto	l3184
  9418  00F13C                     l3178:
  9419                           
  9420                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  9421  00F13C  0E03               	movlw	3
  9422  00F13E  EC0E  F078         	call	_lcd_send_nibble
  9423                           
  9424                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  9425  00F142  0E0A               	movlw	10
  9426  00F144  EC56  F071         	call	_Delay1KTCYx
  9427  00F148  2A05               	incf	lcd_init@i,f,c
  9428  00F14A  D7F4               	goto	l3174
  9429  00F14C                     l3184:
  9430                           
  9431                           ;unmc_lcd_216.c: 146: }
  9432                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  9433  00F14C  0E02               	movlw	2
  9434  00F14E  EC0E  F078         	call	_lcd_send_nibble
  9435                           
  9436                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  9437  00F152  0E00               	movlw	0
  9438  00F154  6E05               	movwf	lcd_init@i,c
  9439  00F156  0E03               	movlw	3
  9440  00F158  6405               	cpfsgt	lcd_init@i,c
  9441  00F15A  D002               	goto	l3192
  9442  00F15C  0012               	return	
  9443  00F15E  0012               	return	
  9444  00F160                     l3192:
  9445                           
  9446                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  9447  00F160  5005               	movf	lcd_init@i,w,c
  9448  00F162  0D01               	mullw	1
  9449  00F164  0EF7               	movlw	low _LCD_INIT_STRING
  9450  00F166  24F3               	addwf	prodl,w,c
  9451  00F168  6EF6               	movwf	tblptrl,c
  9452  00F16A  0EFE               	movlw	high _LCD_INIT_STRING
  9453  00F16C  20F4               	addwfc	prodh,w,c
  9454  00F16E  6EF7               	movwf	tblptrh,c
  9455  00F170                     	if	0	;There are less than 3 active tblptr bytes
  9456  00F170                     	endif
  9457  00F170  0008               	tblrd		*
  9458  00F172  CFF5 F003          	movff	tablat,lcd_send_byte@n
  9459  00F176  0E00               	movlw	0
  9460  00F178  EC73  F072         	call	_lcd_send_byte
  9461                           
  9462                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  9463  00F17C  0E0A               	movlw	10
  9464  00F17E  EC56  F071         	call	_Delay1KTCYx
  9465  00F182  2A05               	incf	lcd_init@i,f,c
  9466  00F184  0E03               	movlw	3
  9467  00F186  6405               	cpfsgt	lcd_init@i,c
  9468  00F188  D7EB               	goto	l3192
  9469  00F18A  0012               	return	
  9470  00F18C  0012               	return		;funcret
  9471  00F18E                     __end_of_lcd_init:
  9472                           	opt stack 0
  9473                           tblptru	equ	0xFF8
  9474                           tblptrh	equ	0xFF7
  9475                           tblptrl	equ	0xFF6
  9476                           tablat	equ	0xFF5
  9477                           prodh	equ	0xFF4
  9478                           prodl	equ	0xFF3
  9479                           intcon	equ	0xFF2
  9480                           indf0	equ	0xFEF
  9481                           postinc0	equ	0xFEE
  9482                           fsr0h	equ	0xFEA
  9483                           fsr0l	equ	0xFE9
  9484                           wreg	equ	0xFE8
  9485                           indf1	equ	0xFE7
  9486                           postdec1	equ	0xFE5
  9487                           fsr1h	equ	0xFE2
  9488                           fsr1l	equ	0xFE1
  9489                           indf2	equ	0xFDF
  9490                           postinc2	equ	0xFDE
  9491                           postdec2	equ	0xFDD
  9492                           fsr2h	equ	0xFDA
  9493                           fsr2l	equ	0xFD9
  9494                           status	equ	0xFD8
  9495                           
  9496 ;; *************** function _lcd_send_byte *****************
  9497 ;; Defined at:
  9498 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  address         1    wreg     unsigned char 
  9501 ;;  n               1    2[COMRAM] unsigned char 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  address         1    3[COMRAM] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;		None               void
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9513 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9517 ;;Total ram usage:        2 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    1
  9520 ;; This function calls:
  9521 ;;		_Delay100TCYx
  9522 ;;		_lcd_send_nibble
  9523 ;; This function is called by:
  9524 ;;		_lcd_init
  9525 ;;		_lcd_gotoxy
  9526 ;;		_lcd_putc
  9527 ;;		_lcd_comand
  9528 ;;		_lcd_setcursor_vb
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text68
  9533  00E4E6                     __ptext68:
  9534                           	opt stack 0
  9535  00E4E6                     _lcd_send_byte:
  9536                           	opt stack 27
  9537                           
  9538                           ;incstack = 0
  9539                           ;lcd_send_byte@address stored from wreg
  9540  00E4E6  6E04               	movwf	lcd_send_byte@address,c
  9541                           
  9542                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  9543  00E4E8  968A               	bcf	3978,3,c	;volatile
  9544                           
  9545                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  9546  00E4EA  0E02               	movlw	2
  9547  00E4EC  EC5F  F071         	call	_Delay100TCYx
  9548                           
  9549                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  9550  00E4F0  9893               	bcf	3987,4,c	;volatile
  9551                           
  9552                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  9553  00E4F2  9A93               	bcf	3987,5,c	;volatile
  9554                           
  9555                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  9556  00E4F4  9C93               	bcf	3987,6,c	;volatile
  9557                           
  9558                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  9559  00E4F6  9E93               	bcf	3987,7,c	;volatile
  9560                           
  9561                           ;unmc_lcd_216.c: 101: if(address)
  9562  00E4F8  5004               	movf	lcd_send_byte@address,w,c
  9563  00E4FA  B4D8               	btfsc	status,2,c
  9564  00E4FC  D002               	goto	l513
  9565                           
  9566                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  9567  00E4FE  868A               	bsf	3978,3,c	;volatile
  9568  00E500  D001               	goto	l514
  9569  00E502                     l513:
  9570                           
  9571                           ;unmc_lcd_216.c: 103: else
  9572                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  9573  00E502  968A               	bcf	3978,3,c	;volatile
  9574  00E504                     l514:
  9575                           
  9576                           ;unmc_lcd_216.c: 106: __nop();
  9577  00E504  F000               	nop	
  9578                           
  9579                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  9580  00E506  3803               	swapf	lcd_send_byte@n,w,c
  9581  00E508  0B0F               	andlw	15
  9582  00E50A  EC0E  F078         	call	_lcd_send_nibble
  9583                           
  9584                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  9585  00E50E  5003               	movf	lcd_send_byte@n,w,c
  9586  00E510  0B0F               	andlw	15
  9587  00E512  EC0E  F078         	call	_lcd_send_nibble
  9588  00E516  0012               	return		;funcret
  9589  00E518                     __end_of_lcd_send_byte:
  9590                           	opt stack 0
  9591                           tblptru	equ	0xFF8
  9592                           tblptrh	equ	0xFF7
  9593                           tblptrl	equ	0xFF6
  9594                           tablat	equ	0xFF5
  9595                           prodh	equ	0xFF4
  9596                           prodl	equ	0xFF3
  9597                           intcon	equ	0xFF2
  9598                           indf0	equ	0xFEF
  9599                           postinc0	equ	0xFEE
  9600                           fsr0h	equ	0xFEA
  9601                           fsr0l	equ	0xFE9
  9602                           wreg	equ	0xFE8
  9603                           indf1	equ	0xFE7
  9604                           postdec1	equ	0xFE5
  9605                           fsr1h	equ	0xFE2
  9606                           fsr1l	equ	0xFE1
  9607                           indf2	equ	0xFDF
  9608                           postinc2	equ	0xFDE
  9609                           postdec2	equ	0xFDD
  9610                           fsr2h	equ	0xFDA
  9611                           fsr2l	equ	0xFD9
  9612                           status	equ	0xFD8
  9613                           
  9614 ;; *************** function _lcd_send_nibble *****************
  9615 ;; Defined at:
  9616 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;  nibble          1    wreg     unsigned char 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  nibble          1    1[COMRAM] unsigned char 
  9621 ;; Return value:  Size  Location     Type
  9622 ;;		None               void
  9623 ;; Registers used:
  9624 ;;		wreg, status,2, status,0
  9625 ;; Tracked objects:
  9626 ;;		On entry : 0/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9634 ;;Total ram usage:        2 bytes
  9635 ;; Hardware stack levels used:    1
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_lcd_send_byte
  9640 ;;		_lcd_init
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text69
  9645  00F01C                     __ptext69:
  9646                           	opt stack 0
  9647  00F01C                     _lcd_send_nibble:
  9648                           	opt stack 28
  9649                           
  9650                           ;incstack = 0
  9651                           ;lcd_send_nibble@nibble stored from wreg
  9652  00F01C  6E02               	movwf	lcd_send_nibble@nibble,c
  9653                           
  9654                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  9655  00F01E  A002               	btfss	lcd_send_nibble@nibble,0,c
  9656  00F020  D003               	goto	u1340
  9657  00F022  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9658  00F024  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9659  00F026  D001               	goto	u1358
  9660  00F028                     u1340:
  9661  00F028  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9662  00F02A                     u1358:
  9663  00F02A  3A01               	swapf	??_lcd_send_nibble,f,c
  9664  00F02C  508A               	movf	3978,w,c	;volatile
  9665  00F02E  1801               	xorwf	??_lcd_send_nibble,w,c
  9666  00F030  0BEF               	andlw	-17
  9667  00F032  1801               	xorwf	??_lcd_send_nibble,w,c
  9668  00F034  6E8A               	movwf	3978,c	;volatile
  9669                           
  9670                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  9671  00F036  A202               	btfss	lcd_send_nibble@nibble,1,c
  9672  00F038  D003               	goto	u1360
  9673  00F03A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9674  00F03C  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9675  00F03E  D001               	goto	u1378
  9676  00F040                     u1360:
  9677  00F040  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9678  00F042                     u1378:
  9679  00F042  3A01               	swapf	??_lcd_send_nibble,f,c
  9680  00F044  4601               	rlncf	??_lcd_send_nibble,f,c
  9681  00F046  508A               	movf	3978,w,c	;volatile
  9682  00F048  1801               	xorwf	??_lcd_send_nibble,w,c
  9683  00F04A  0BDF               	andlw	-33
  9684  00F04C  1801               	xorwf	??_lcd_send_nibble,w,c
  9685  00F04E  6E8A               	movwf	3978,c	;volatile
  9686                           
  9687                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  9688  00F050  A402               	btfss	lcd_send_nibble@nibble,2,c
  9689  00F052  D003               	goto	u1380
  9690  00F054  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9691  00F056  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9692  00F058  D001               	goto	u1398
  9693  00F05A                     u1380:
  9694  00F05A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9695  00F05C                     u1398:
  9696  00F05C  3A01               	swapf	??_lcd_send_nibble,f,c
  9697  00F05E  4601               	rlncf	??_lcd_send_nibble,f,c
  9698  00F060  4601               	rlncf	??_lcd_send_nibble,f,c
  9699  00F062  508A               	movf	3978,w,c	;volatile
  9700  00F064  1801               	xorwf	??_lcd_send_nibble,w,c
  9701  00F066  0BBF               	andlw	-65
  9702  00F068  1801               	xorwf	??_lcd_send_nibble,w,c
  9703  00F06A  6E8A               	movwf	3978,c	;volatile
  9704                           
  9705                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  9706  00F06C  A602               	btfss	lcd_send_nibble@nibble,3,c
  9707  00F06E  D003               	goto	u1400
  9708  00F070  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9709  00F072  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  9710  00F074  D001               	goto	u1418
  9711  00F076                     u1400:
  9712  00F076  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  9713  00F078                     u1418:
  9714  00F078  3201               	rrcf	??_lcd_send_nibble,f,c
  9715  00F07A  3201               	rrcf	??_lcd_send_nibble,f,c
  9716  00F07C  508A               	movf	3978,w,c	;volatile
  9717  00F07E  1801               	xorwf	??_lcd_send_nibble,w,c
  9718  00F080  0B7F               	andlw	-129
  9719  00F082  1801               	xorwf	??_lcd_send_nibble,w,c
  9720  00F084  6E8A               	movwf	3978,c	;volatile
  9721                           
  9722                           ;unmc_lcd_216.c: 32: __nop();
  9723  00F086  F000               	nop	
  9724                           
  9725                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  9726  00F088  848A               	bsf	3978,2,c	;volatile
  9727                           
  9728                           ;unmc_lcd_216.c: 34: __nop();__nop();
  9729  00F08A  F000               	nop	
  9730  00F08C  F000               	nop	
  9731                           
  9732                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  9733  00F08E  948A               	bcf	3978,2,c	;volatile
  9734  00F090  0012               	return		;funcret
  9735  00F092                     __end_of_lcd_send_nibble:
  9736                           	opt stack 0
  9737                           tblptru	equ	0xFF8
  9738                           tblptrh	equ	0xFF7
  9739                           tblptrl	equ	0xFF6
  9740                           tablat	equ	0xFF5
  9741                           prodh	equ	0xFF4
  9742                           prodl	equ	0xFF3
  9743                           intcon	equ	0xFF2
  9744                           indf0	equ	0xFEF
  9745                           postinc0	equ	0xFEE
  9746                           fsr0h	equ	0xFEA
  9747                           fsr0l	equ	0xFE9
  9748                           wreg	equ	0xFE8
  9749                           indf1	equ	0xFE7
  9750                           postdec1	equ	0xFE5
  9751                           fsr1h	equ	0xFE2
  9752                           fsr1l	equ	0xFE1
  9753                           indf2	equ	0xFDF
  9754                           postinc2	equ	0xFDE
  9755                           postdec2	equ	0xFDD
  9756                           fsr2h	equ	0xFDA
  9757                           fsr2l	equ	0xFD9
  9758                           status	equ	0xFD8
  9759                           
  9760 ;; *************** function _Delay100TCYx *****************
  9761 ;; Defined at:
  9762 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  unit            1    wreg     unsigned char 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  unit            1    0[COMRAM] unsigned char 
  9767 ;; Return value:  Size  Location     Type
  9768 ;;		None               void
  9769 ;; Registers used:
  9770 ;;		wreg
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9780 ;;Total ram usage:        1 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_lcd_send_byte
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text70
  9790  00E2BE                     __ptext70:
  9791                           	opt stack 0
  9792  00E2BE                     _Delay100TCYx:
  9793                           	opt stack 27
  9794                           
  9795                           ;incstack = 0
  9796                           ;Delay100TCYx@unit stored from wreg
  9797  00E2BE  6E01               	movwf	Delay100TCYx@unit,c
  9798  00E2C0  0E21               	movlw	33
  9799  00E2C2                     u2667:
  9800  00E2C2  2EE8               	decfsz	wreg,f,c
  9801  00E2C4  D7FE               	goto	u2667
  9802  00E2C6  F000               	nop	
  9803  00E2C8  2E01               	decfsz	Delay100TCYx@unit,f,c
  9804  00E2CA  D7FA               	goto	l2906
  9805  00E2CC  0012               	return	
  9806  00E2CE  0012               	return		;funcret
  9807  00E2D0                     __end_of_Delay100TCYx:
  9808                           	opt stack 0
  9809                           tblptru	equ	0xFF8
  9810                           tblptrh	equ	0xFF7
  9811                           tblptrl	equ	0xFF6
  9812                           tablat	equ	0xFF5
  9813                           prodh	equ	0xFF4
  9814                           prodl	equ	0xFF3
  9815                           intcon	equ	0xFF2
  9816                           indf0	equ	0xFEF
  9817                           postinc0	equ	0xFEE
  9818                           fsr0h	equ	0xFEA
  9819                           fsr0l	equ	0xFE9
  9820                           wreg	equ	0xFE8
  9821                           indf1	equ	0xFE7
  9822                           postdec1	equ	0xFE5
  9823                           fsr1h	equ	0xFE2
  9824                           fsr1l	equ	0xFE1
  9825                           indf2	equ	0xFDF
  9826                           postinc2	equ	0xFDE
  9827                           postdec2	equ	0xFDD
  9828                           fsr2h	equ	0xFDA
  9829                           fsr2l	equ	0xFD9
  9830                           status	equ	0xFD8
  9831                           
  9832 ;; *************** function _Delay1KTCYx *****************
  9833 ;; Defined at:
  9834 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  unit            1    wreg     unsigned char 
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;  unit            1    0[COMRAM] unsigned char 
  9839 ;; Return value:  Size  Location     Type
  9840 ;;		None               void
  9841 ;; Registers used:
  9842 ;;		wreg
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;Total ram usage:        1 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; This function calls:
  9855 ;;		Nothing
  9856 ;; This function is called by:
  9857 ;;		_lcd_init
  9858 ;;		_DelayPORXLCD
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text71
  9863  00E2AC                     __ptext71:
  9864                           	opt stack 0
  9865  00E2AC                     _Delay1KTCYx:
  9866                           	opt stack 28
  9867                           
  9868                           ;incstack = 0
  9869                           ;Delay1KTCYx@unit stored from wreg
  9870  00E2AC  6E01               	movwf	Delay1KTCYx@unit,c
  9871  00E2AE  0EFA               	movlw	250
  9872  00E2B0                     u2677:
  9873  00E2B0  F000               	nop	
  9874  00E2B2  2EE8               	decfsz	wreg,f,c
  9875  00E2B4  D7FD               	goto	u2677
  9876  00E2B6  2E01               	decfsz	Delay1KTCYx@unit,f,c
  9877  00E2B8  D7FA               	goto	l2960
  9878  00E2BA  0012               	return	
  9879  00E2BC  0012               	return		;funcret
  9880  00E2BE                     __end_of_Delay1KTCYx:
  9881                           	opt stack 0
  9882                           tblptru	equ	0xFF8
  9883                           tblptrh	equ	0xFF7
  9884                           tblptrl	equ	0xFF6
  9885                           tablat	equ	0xFF5
  9886                           prodh	equ	0xFF4
  9887                           prodl	equ	0xFF3
  9888                           intcon	equ	0xFF2
  9889                           indf0	equ	0xFEF
  9890                           postinc0	equ	0xFEE
  9891                           fsr0h	equ	0xFEA
  9892                           fsr0l	equ	0xFE9
  9893                           wreg	equ	0xFE8
  9894                           indf1	equ	0xFE7
  9895                           postdec1	equ	0xFE5
  9896                           fsr1h	equ	0xFE2
  9897                           fsr1l	equ	0xFE1
  9898                           indf2	equ	0xFDF
  9899                           postinc2	equ	0xFDE
  9900                           postdec2	equ	0xFDD
  9901                           fsr2h	equ	0xFDA
  9902                           fsr2l	equ	0xFD9
  9903                           status	equ	0xFD8
  9904                           
  9905 ;; *************** function _Read_RTC *****************
  9906 ;; Defined at:
  9907 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;		None
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;		None               void
  9914 ;; Registers used:
  9915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9925 ;;Total ram usage:        0 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:    1
  9928 ;; This function calls:
  9929 ;;		_RtccReadDate
  9930 ;;		_RtccReadTime
  9931 ;; This function is called by:
  9932 ;;		_main
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text72
  9937  00F68E                     __ptext72:
  9938                           	opt stack 0
  9939  00F68E                     _Read_RTC:
  9940                           	opt stack 29
  9941                           
  9942                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  9943                           
  9944                           ;incstack = 0
  9945  00F68E  0E4A               	movlw	low _RtccTime
  9946  00F690  6E01               	movwf	RtccReadTime@pTm,c
  9947  00F692  0E00               	movlw	high _RtccTime
  9948  00F694  6E02               	movwf	RtccReadTime@pTm+1,c
  9949  00F696  EC9F  F077         	call	_RtccReadTime	;wreg free
  9950                           
  9951                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  9952  00F69A  504B               	movf	_RtccTime+1,w,c
  9953  00F69C  0B0F               	andlw	15
  9954  00F69E  6E5E               	movwf	_segundo_u,c
  9955                           
  9956                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  9957  00F6A0  384B               	swapf	_RtccTime+1,w,c
  9958  00F6A2  0B0F               	andlw	15
  9959  00F6A4  0B0F               	andlw	15
  9960  00F6A6  6E5D               	movwf	_segundo_d,c
  9961                           
  9962                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  9963  00F6A8  504C               	movf	_RtccTime+2,w,c
  9964  00F6AA  0B0F               	andlw	15
  9965  00F6AC  0100               	movlb	0	; () banked
  9966  00F6AE  6FA9               	movwf	_minuto_u& (0+255),b
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  9970  00F6B0  384C               	swapf	_RtccTime+2,w,c
  9971  00F6B2  0B0F               	andlw	15
  9972  00F6B4  0B0F               	andlw	15
  9973  00F6B6  6E5C               	movwf	_minuto_d,c
  9974                           
  9975                           ; BSR set to: 0
  9976                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  9977  00F6B8  504D               	movf	_RtccTime+3,w,c
  9978  00F6BA  0B0F               	andlw	15
  9979  00F6BC  0100               	movlb	0	; () banked
  9980  00F6BE  6FA7               	movwf	_hora_u& (0+255),b
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  9984  00F6C0  384D               	swapf	_RtccTime+3,w,c
  9985  00F6C2  0B0F               	andlw	15
  9986  00F6C4  0B0F               	andlw	15
  9987  00F6C6  6E5A               	movwf	_hora_d,c
  9988                           
  9989                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  9990  00F6C8  0E46               	movlw	low _RtccDate
  9991  00F6CA  6E01               	movwf	RtccReadDate@pDt,c
  9992  00F6CC  0E00               	movlw	high _RtccDate
  9993  00F6CE  6E02               	movwf	RtccReadDate@pDt+1,c
  9994  00F6D0  ECCC  F079         	call	_RtccReadDate	;wreg free
  9995                           
  9996                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  9997  00F6D4  5047               	movf	_RtccDate+1,w,c
  9998  00F6D6  0B0F               	andlw	15
  9999  00F6D8  0100               	movlb	0	; () banked
 10000  00F6DA  6FA6               	movwf	_fecha_u& (0+255),b
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
 10004  00F6DC  3847               	swapf	_RtccDate+1,w,c
 10005  00F6DE  0B0F               	andlw	15
 10006  00F6E0  0B0F               	andlw	15
 10007  00F6E2  6E59               	movwf	_fecha_d,c
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
 10011  00F6E4  5048               	movf	_RtccDate+2,w,c
 10012  00F6E6  0B0F               	andlw	15
 10013  00F6E8  0100               	movlb	0	; () banked
 10014  00F6EA  6FA8               	movwf	_mes_u& (0+255),b
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
 10018  00F6EC  3848               	swapf	_RtccDate+2,w,c
 10019  00F6EE  0B0F               	andlw	15
 10020  00F6F0  0B0F               	andlw	15
 10021  00F6F2  6E5B               	movwf	_mes_d,c
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
 10025  00F6F4  C046  F0A5         	movff	_RtccDate,_dia_semana
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
 10029  00F6F8  5049               	movf	_RtccDate+3,w,c
 10030  00F6FA  0B0F               	andlw	15
 10031  00F6FC  0100               	movlb	0	; () banked
 10032  00F6FE  6FA4               	movwf	_anio_u& (0+255),b
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
 10036  00F700  3849               	swapf	_RtccDate+3,w,c
 10037  00F702  0B0F               	andlw	15
 10038  00F704  0B0F               	andlw	15
 10039  00F706  6E58               	movwf	_anio_d,c
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
 10043  00F708  505D               	movf	_segundo_d,w,c
 10044  00F70A  0D0A               	mullw	10
 10045  00F70C  505E               	movf	_segundo_u,w,c
 10046  00F70E  24F3               	addwf	prodl,w,c
 10047  00F710  6E3F               	movwf	_segundo,c
 10048  00F712  0E00               	movlw	0
 10049  00F714  20F4               	addwfc	prodh,w,c
 10050  00F716  6E40               	movwf	_segundo+1,c
 10051                           
 10052                           ; BSR set to: 0
 10053                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
 10054  00F718  505C               	movf	_minuto_d,w,c
 10055  00F71A  0D0A               	mullw	10
 10056  00F71C  0100               	movlb	0	; () banked
 10057  00F71E  51A9               	movf	_minuto_u& (0+255),w,b
 10058  00F720  24F3               	addwf	prodl,w,c
 10059  00F722  6E3D               	movwf	_minuto,c
 10060  00F724  0100               	movlb	0	; () banked
 10061  00F726  0E00               	movlw	0
 10062  00F728  20F4               	addwfc	prodh,w,c
 10063  00F72A  6E3E               	movwf	_minuto+1,c
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
 10067  00F72C  505A               	movf	_hora_d,w,c
 10068  00F72E  0D0A               	mullw	10
 10069  00F730  0100               	movlb	0	; () banked
 10070  00F732  51A7               	movf	_hora_u& (0+255),w,b
 10071  00F734  24F3               	addwf	prodl,w,c
 10072  00F736  6E54               	movwf	_hora,c
 10073  00F738  0100               	movlb	0	; () banked
 10074  00F73A  0E00               	movlw	0
 10075  00F73C  20F4               	addwfc	prodh,w,c
 10076  00F73E  6E55               	movwf	_hora+1,c
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
 10080  00F740  5059               	movf	_fecha_d,w,c
 10081  00F742  0D0A               	mullw	10
 10082  00F744  0100               	movlb	0	; () banked
 10083  00F746  51A6               	movf	_fecha_u& (0+255),w,b
 10084  00F748  24F3               	addwf	prodl,w,c
 10085  00F74A  6E50               	movwf	_dia,c
 10086  00F74C  0100               	movlb	0	; () banked
 10087  00F74E  0E00               	movlw	0
 10088  00F750  20F4               	addwfc	prodh,w,c
 10089  00F752  6E51               	movwf	_dia+1,c
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
 10093  00F754  C0A5  F052         	movff	_dia_semana,_diasem
 10094  00F758  6A53               	clrf	_diasem+1,c
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
 10098  00F75A  505B               	movf	_mes_d,w,c
 10099  00F75C  0D0A               	mullw	10
 10100  00F75E  0100               	movlb	0	; () banked
 10101  00F760  51A8               	movf	_mes_u& (0+255),w,b
 10102  00F762  24F3               	addwf	prodl,w,c
 10103  00F764  6E56               	movwf	_mes,c
 10104  00F766  0100               	movlb	0	; () banked
 10105  00F768  0E00               	movlw	0
 10106  00F76A  20F4               	addwfc	prodh,w,c
 10107  00F76C  6E57               	movwf	_mes+1,c
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
 10111  00F76E  5058               	movf	_anio_d,w,c
 10112  00F770  0D0A               	mullw	10
 10113  00F772  0100               	movlb	0	; () banked
 10114  00F774  51A4               	movf	_anio_u& (0+255),w,b
 10115  00F776  24F3               	addwf	prodl,w,c
 10116  00F778  6E4E               	movwf	_anio,c
 10117  00F77A  0100               	movlb	0	; () banked
 10118  00F77C  0E00               	movlw	0
 10119  00F77E  20F4               	addwfc	prodh,w,c
 10120  00F780  6E4F               	movwf	_anio+1,c
 10121                           
 10122                           ; BSR set to: 0
 10123  00F782  0012               	return		;funcret
 10124  00F784                     __end_of_Read_RTC:
 10125                           	opt stack 0
 10126                           tblptru	equ	0xFF8
 10127                           tblptrh	equ	0xFF7
 10128                           tblptrl	equ	0xFF6
 10129                           tablat	equ	0xFF5
 10130                           prodh	equ	0xFF4
 10131                           prodl	equ	0xFF3
 10132                           intcon	equ	0xFF2
 10133                           indf0	equ	0xFEF
 10134                           postinc0	equ	0xFEE
 10135                           fsr0h	equ	0xFEA
 10136                           fsr0l	equ	0xFE9
 10137                           wreg	equ	0xFE8
 10138                           indf1	equ	0xFE7
 10139                           postdec1	equ	0xFE5
 10140                           fsr1h	equ	0xFE2
 10141                           fsr1l	equ	0xFE1
 10142                           indf2	equ	0xFDF
 10143                           postinc2	equ	0xFDE
 10144                           postdec2	equ	0xFDD
 10145                           fsr2h	equ	0xFDA
 10146                           fsr2l	equ	0xFD9
 10147                           status	equ	0xFD8
 10148                           
 10149 ;; *************** function _RtccReadTime *****************
 10150 ;; Defined at:
 10151 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;  pTm             2    0[COMRAM] PTR struct .
 10154 ;;		 -> RtccTime(4), 
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;  rTD0            8   10[COMRAM] struct .
 10157 ;;  rTD1            8    2[COMRAM] struct .
 10158 ;; Return value:  Size  Location     Type
 10159 ;;		None               void
 10160 ;; Registers used:
 10161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10168 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10170 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10171 ;;Total ram usage:       18 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; This function calls:
 10174 ;;		Nothing
 10175 ;; This function is called by:
 10176 ;;		_Read_RTC
 10177 ;; This function uses a non-reentrant model
 10178 ;;
 10179                           
 10180                           	psect	text73
 10181  00EF3E                     __ptext73:
 10182                           	opt stack 0
 10183  00EF3E                     _RtccReadTime:
 10184                           	opt stack 29
 10185  00EF3E  0EFC               	movlw	252
 10186  00EF40  010F               	movlb	15	; () banked
 10187  00EF42  173F               	andwf	63,f,b	;volatile
 10188                           
 10189                           ; BSR set to: 15
 10190  00EF44  010F               	movlb	15	; () banked
 10191  00EF46  813F               	bsf	63,0,b	;volatile
 10192                           
 10193                           ; BSR set to: 15
 10194  00EF48  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
 10195                           
 10196                           ; BSR set to: 15
 10197  00EF4C  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
 10198                           
 10199                           ; BSR set to: 15
 10200  00EF50  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
 10201                           
 10202                           ; BSR set to: 15
 10203  00EF54  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
 10204                           
 10205                           ; BSR set to: 15
 10206  00EF58  0EFC               	movlw	252
 10207  00EF5A  010F               	movlb	15	; () banked
 10208  00EF5C  173F               	andwf	63,f,b	;volatile
 10209  00EF5E  010F               	movlb	15	; () banked
 10210  00EF60  813F               	bsf	63,0,b	;volatile
 10211                           
 10212                           ; BSR set to: 15
 10213  00EF62  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
 10214                           
 10215                           ; BSR set to: 15
 10216  00EF66  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
 10217                           
 10218                           ; BSR set to: 15
 10219  00EF6A  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
 10220                           
 10221                           ; BSR set to: 15
 10222  00EF6E  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
 10223                           
 10224                           ; BSR set to: 15
 10225  00EF72  5009               	movf	RtccReadTime@rTD1+6,w,c
 10226  00EF74  1811               	xorwf	RtccReadTime@rTD0+6,w,c
 10227  00EF76  A4D8               	btfss	status,2,c
 10228  00EF78  D7E2               	goto	l3772
 10229                           
 10230                           ; BSR set to: 15
 10231                           
 10232                           ; BSR set to: 15
 10233  00EF7A  EE20 F003          	lfsr	2,3
 10234  00EF7E  5001               	movf	RtccReadTime@pTm,w,c
 10235  00EF80  26D9               	addwf	fsr2l,f,c
 10236  00EF82  5002               	movf	RtccReadTime@pTm+1,w,c
 10237  00EF84  22DA               	addwfc	fsr2h,f,c
 10238  00EF86  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 10239  00EF8A  EE20 F002          	lfsr	2,2
 10240  00EF8E  5001               	movf	RtccReadTime@pTm,w,c
 10241  00EF90  26D9               	addwf	fsr2l,f,c
 10242  00EF92  5002               	movf	RtccReadTime@pTm+1,w,c
 10243  00EF94  22DA               	addwfc	fsr2h,f,c
 10244  00EF96  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 10245  00EF9A  EE20 F001          	lfsr	2,1
 10246  00EF9E  5001               	movf	RtccReadTime@pTm,w,c
 10247  00EFA0  26D9               	addwf	fsr2l,f,c
 10248  00EFA2  5002               	movf	RtccReadTime@pTm+1,w,c
 10249  00EFA4  22DA               	addwfc	fsr2h,f,c
 10250  00EFA6  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 10251                           
 10252                           ; BSR set to: 15
 10253  00EFAA  0012               	return		;funcret
 10254  00EFAC                     __end_of_RtccReadTime:
 10255                           	opt stack 0
 10256                           tblptru	equ	0xFF8
 10257                           tblptrh	equ	0xFF7
 10258                           tblptrl	equ	0xFF6
 10259                           tablat	equ	0xFF5
 10260                           prodh	equ	0xFF4
 10261                           prodl	equ	0xFF3
 10262                           intcon	equ	0xFF2
 10263                           indf0	equ	0xFEF
 10264                           postinc0	equ	0xFEE
 10265                           fsr0h	equ	0xFEA
 10266                           fsr0l	equ	0xFE9
 10267                           wreg	equ	0xFE8
 10268                           indf1	equ	0xFE7
 10269                           postdec1	equ	0xFE5
 10270                           fsr1h	equ	0xFE2
 10271                           fsr1l	equ	0xFE1
 10272                           indf2	equ	0xFDF
 10273                           postinc2	equ	0xFDE
 10274                           postdec2	equ	0xFDD
 10275                           fsr2h	equ	0xFDA
 10276                           fsr2l	equ	0xFD9
 10277                           status	equ	0xFD8
 10278                           
 10279 ;; *************** function _RtccReadDate *****************
 10280 ;; Defined at:
 10281 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;  pDt             2    0[COMRAM] PTR struct .
 10284 ;;		 -> RtccDate(4), 
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;  rTD0            8   10[COMRAM] struct .
 10287 ;;  rTD1            8    2[COMRAM] struct .
 10288 ;; Return value:  Size  Location     Type
 10289 ;;		None               void
 10290 ;; Registers used:
 10291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10292 ;; Tracked objects:
 10293 ;;		On entry : 0/0
 10294 ;;		On exit  : 0/0
 10295 ;;		Unchanged: 0/0
 10296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10298 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10300 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10301 ;;Total ram usage:       18 bytes
 10302 ;; Hardware stack levels used:    1
 10303 ;; This function calls:
 10304 ;;		Nothing
 10305 ;; This function is called by:
 10306 ;;		_Read_RTC
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           	psect	text74
 10311  00F398                     __ptext74:
 10312                           	opt stack 0
 10313  00F398                     _RtccReadDate:
 10314                           	opt stack 29
 10315  00F398  0EFC               	movlw	252
 10316  00F39A  010F               	movlb	15	; () banked
 10317  00F39C  173F               	andwf	63,f,b	;volatile
 10318  00F39E  0E03               	movlw	3
 10319  00F3A0  010F               	movlb	15	; () banked
 10320  00F3A2  133F               	iorwf	63,f,b	;volatile
 10321                           
 10322                           ; BSR set to: 15
 10323  00F3A4  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
 10324                           
 10325                           ; BSR set to: 15
 10326  00F3A8  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
 10327                           
 10328                           ; BSR set to: 15
 10329  00F3AC  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
 10330                           
 10331                           ; BSR set to: 15
 10332  00F3B0  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
 10333                           
 10334                           ; BSR set to: 15
 10335  00F3B4  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
 10336                           
 10337                           ; BSR set to: 15
 10338  00F3B8  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
 10339  00F3BC  0EFC               	movlw	252
 10340  00F3BE  010F               	movlb	15	; () banked
 10341  00F3C0  173F               	andwf	63,f,b	;volatile
 10342  00F3C2  0E03               	movlw	3
 10343  00F3C4  010F               	movlb	15	; () banked
 10344  00F3C6  133F               	iorwf	63,f,b	;volatile
 10345                           
 10346                           ; BSR set to: 15
 10347  00F3C8  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
 10348                           
 10349                           ; BSR set to: 15
 10350  00F3CC  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
 10351                           
 10352                           ; BSR set to: 15
 10353  00F3D0  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
 10354                           
 10355                           ; BSR set to: 15
 10356  00F3D4  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
 10357                           
 10358                           ; BSR set to: 15
 10359  00F3D8  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
 10360                           
 10361                           ; BSR set to: 15
 10362  00F3DC  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
 10363  00F3E0  5005               	movf	RtccReadDate@rTD1+2,w,c
 10364  00F3E2  180D               	xorwf	RtccReadDate@rTD0+2,w,c
 10365  00F3E4  A4D8               	btfss	status,2,c
 10366  00F3E6  D7D8               	goto	l3798
 10367                           
 10368                           ; BSR set to: 15
 10369                           
 10370                           ; BSR set to: 15
 10371  00F3E8  EE20 F001          	lfsr	2,1
 10372  00F3EC  5001               	movf	RtccReadDate@pDt,w,c
 10373  00F3EE  26D9               	addwf	fsr2l,f,c
 10374  00F3F0  5002               	movf	RtccReadDate@pDt+1,w,c
 10375  00F3F2  22DA               	addwfc	fsr2h,f,c
 10376  00F3F4  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 10377  00F3F8  EE20 F002          	lfsr	2,2
 10378  00F3FC  5001               	movf	RtccReadDate@pDt,w,c
 10379  00F3FE  26D9               	addwf	fsr2l,f,c
 10380  00F400  5002               	movf	RtccReadDate@pDt+1,w,c
 10381  00F402  22DA               	addwfc	fsr2h,f,c
 10382  00F404  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 10383                           
 10384                           ; BSR set to: 15
 10385  00F408  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
 10386  00F40C  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 10387  00F410  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 10388                           
 10389                           ; BSR set to: 15
 10390  00F414  EE20 F003          	lfsr	2,3
 10391  00F418  5001               	movf	RtccReadDate@pDt,w,c
 10392  00F41A  26D9               	addwf	fsr2l,f,c
 10393  00F41C  5002               	movf	RtccReadDate@pDt+1,w,c
 10394  00F41E  22DA               	addwfc	fsr2h,f,c
 10395  00F420  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
 10396                           
 10397                           ; BSR set to: 15
 10398  00F424  0012               	return		;funcret
 10399  00F426                     __end_of_RtccReadDate:
 10400                           	opt stack 0
 10401                           tblptru	equ	0xFF8
 10402                           tblptrh	equ	0xFF7
 10403                           tblptrl	equ	0xFF6
 10404                           tablat	equ	0xFF5
 10405                           prodh	equ	0xFF4
 10406                           prodl	equ	0xFF3
 10407                           intcon	equ	0xFF2
 10408                           indf0	equ	0xFEF
 10409                           postinc0	equ	0xFEE
 10410                           fsr0h	equ	0xFEA
 10411                           fsr0l	equ	0xFE9
 10412                           wreg	equ	0xFE8
 10413                           indf1	equ	0xFE7
 10414                           postdec1	equ	0xFE5
 10415                           fsr1h	equ	0xFE2
 10416                           fsr1l	equ	0xFE1
 10417                           indf2	equ	0xFDF
 10418                           postinc2	equ	0xFDE
 10419                           postdec2	equ	0xFDD
 10420                           fsr2h	equ	0xFDA
 10421                           fsr2l	equ	0xFD9
 10422                           status	equ	0xFD8
 10423                           tblptru	equ	0xFF8
 10424                           tblptrh	equ	0xFF7
 10425                           tblptrl	equ	0xFF6
 10426                           tablat	equ	0xFF5
 10427                           prodh	equ	0xFF4
 10428                           prodl	equ	0xFF3
 10429                           intcon	equ	0xFF2
 10430                           indf0	equ	0xFEF
 10431                           postinc0	equ	0xFEE
 10432                           fsr0h	equ	0xFEA
 10433                           fsr0l	equ	0xFE9
 10434                           wreg	equ	0xFE8
 10435                           indf1	equ	0xFE7
 10436                           postdec1	equ	0xFE5
 10437                           fsr1h	equ	0xFE2
 10438                           fsr1l	equ	0xFE1
 10439                           indf2	equ	0xFDF
 10440                           postinc2	equ	0xFDE
 10441                           postdec2	equ	0xFDD
 10442                           fsr2h	equ	0xFDA
 10443                           fsr2l	equ	0xFD9
 10444                           status	equ	0xFD8
 10445                           
 10446                           	psect	rparam
 10447  0000                     tblptru	equ	0xFF8
 10448                           tblptrh	equ	0xFF7
 10449                           tblptrl	equ	0xFF6
 10450                           tablat	equ	0xFF5
 10451                           prodh	equ	0xFF4
 10452                           prodl	equ	0xFF3
 10453                           intcon	equ	0xFF2
 10454                           indf0	equ	0xFEF
 10455                           postinc0	equ	0xFEE
 10456                           fsr0h	equ	0xFEA
 10457                           fsr0l	equ	0xFE9
 10458                           wreg	equ	0xFE8
 10459                           indf1	equ	0xFE7
 10460                           postdec1	equ	0xFE5
 10461                           fsr1h	equ	0xFE2
 10462                           fsr1l	equ	0xFE1
 10463                           indf2	equ	0xFDF
 10464                           postinc2	equ	0xFDE
 10465                           postdec2	equ	0xFDD
 10466                           fsr2h	equ	0xFDA
 10467                           fsr2l	equ	0xFD9
 10468                           status	equ	0xFD8


Data Sizes:
    Strings     252
    Constant    14
    Data        10
    BSS         105
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      95
    BANK0           160      0      74
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_47(CODE[5]), STR_45(CODE[1]), STR_14(CODE[1]), pin_input(BANK0[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_58(CODE[5]), STR_57(CODE[5]), STR_55(CODE[7]), STR_54(CODE[7]), 
		 -> STR_53(CODE[7]), STR_52(CODE[7]), STR_51(CODE[7]), STR_50(CODE[7]), 
		 -> STR_49(CODE[15]), STR_48(CODE[15]), STR_32(CODE[15]), STR_31(CODE[15]), 
		 -> STR_29(CODE[15]), STR_27(CODE[15]), STR_26(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_56(CODE[2]), STR_46(CODE[11]), STR_44(CODE[6]), STR_43(CODE[8]), 
		 -> STR_42(CODE[4]), STR_41(CODE[7]), STR_40(CODE[7]), STR_39(CODE[5]), 
		 -> STR_38(CODE[5]), STR_37(CODE[5]), STR_36(CODE[8]), STR_35(CODE[5]), 
		 -> STR_34(CODE[8]), STR_33(CODE[7]), STR_30(CODE[16]), STR_28(CODE[17]), 
		 -> buffer1(BANK0[20]), STR_25(CODE[5]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[8]), STR_19(CODE[7]), 
		 -> STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[8]), STR_15(CODE[16]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    lcd_write@string	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_46(CODE[11]), STR_44(CODE[6]), STR_43(CODE[8]), STR_42(CODE[4]), 
		 -> STR_41(CODE[7]), STR_40(CODE[7]), STR_39(CODE[5]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[8]), STR_35(CODE[5]), STR_34(CODE[8]), 
		 -> STR_33(CODE[7]), STR_30(CODE[16]), STR_28(CODE[17]), buffer1(BANK0[20]), 
		 -> STR_25(CODE[5]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[8]), STR_19(CODE[7]), STR_18(CODE[4]), 
		 -> STR_17(CODE[6]), STR_16(CODE[8]), STR_15(CODE[16]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _keyboard_control->_button_B
    _button_number->_sprintf
    _activity_menu->_lcd_write
    _button_B->_button_B_submenu_date_and_time_config
    _button_B->_date_set
    _date_set->_sprintf
    _Write_RTC->_RtccWriteDate
    _activity_submenu_siren_volume->_lcd_write
    _activity_submenu_siren_tone->_lcd_write
    _pin_reset->_strcpy
    _activity_submenu_pin_set->_lcd_write
    _activity_submenu_time_config->_sprintf
    _activity_submenu_date_config->_sprintf
    _activity_submenu_siren->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_date_and_time->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_menu_selector
    _button_A->_submenu_selector
    _submenu_selector_1->_lcd_write
    _submenu_selector_0->_lcd_write
    _menu_selector_3->_lcd_write
    _menu_selector_2->_lcd_write
    _menu_selector_1->_lcd_write
    _menu_selector_0->_lcd_write
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _home_volume_refresh->_sprintf
    _home_tone_refresh->_sprintf
    _home_state_refresh->_sprintf
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  586814
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                _home_config_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4358
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                          _pin_reset
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  489890
                                             39 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    5788
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   69557
                      _activity_home
                _pin_input_validator
                            _pin_set
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_set                                              0     0      0   14032
                      _activity_home
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  0     0      0   42080
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0       0
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0   13445
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   26042
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   26042
                           _lcd_init
                          _lcd_write
                    _menu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0  283657
                                             37 COMRAM     2     2      0
                      _button_B_menu
        _button_B_submenu_activation
_button_B_submenu_date_and_time_conf
        _button_B_submenu_pin_config
      _button_B_submenu_siren_config
        _button_B_submenu_siren_tone
      _button_B_submenu_siren_volume
                           _date_set
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _date_set                                             2     2      0   19595
                                             35 COMRAM     2     2      0
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_volume                        2     2      0   13445
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_tone                          2     2      0   13445
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_config                        2     2      0   52084
                                             16 COMRAM     2     2      0
        _activity_submenu_siren_tone
      _activity_submenu_siren_volume
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_volume                        0     0      0   26042
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_tone                          0     0      0   26042
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_pin_config                          2     2      0   29851
                                             16 COMRAM     2     2      0
                      _activity_home
           _activity_submenu_pin_set
                          _pin_reset
 ---------------------------------------------------------------------------------
 (2) _pin_reset                                            0     0      0     587
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin_set                             0     0      0   15819
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_date_and_time_config                2     2      0   37624
                                             35 COMRAM     2     2      0
       _activity_submenu_date_config
       _activity_submenu_time_config
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_time_config                         0     0      0   18812
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_config                         0     0      0   18812
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_activation                          2     2      0   13445
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_menu                                        2     2      0  104168
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
     _activity_submenu_date_and_time
               _activity_submenu_pin
             _activity_submenu_siren
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren                               0     0      0   26042
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin                                 0     0      0   26042
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_and_time                       0     0      0   26042
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_activation                          0     0      0   26042
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   91401
                                             18 COMRAM     2     2      0
                       _activity_pin
                _cursor_displacement
                      _menu_selector
                _reset_home_callback
                   _submenu_selector
 ---------------------------------------------------------------------------------
 (3) _submenu_selector                                     2     2      0   25194
                                             16 COMRAM     2     2      0
                 _submenu_selector_0
                 _submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _submenu_selector_1                                   0     0      0   12597
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _submenu_selector_0                                   0     0      0   12597
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_selector                                        2     2      0   50388
                                             16 COMRAM     2     2      0
                    _menu_selector_0
                    _menu_selector_1
                    _menu_selector_2
                    _menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _menu_selector_3                                      0     0      0   12597
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_2                                      0     0      0   12597
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_1                                      0     0      0   12597
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _menu_selector_0                                      0     0      0   12597
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _cursor_displacement                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   15819
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _home_config_refresh                                  2     2      0   48531
                                             35 COMRAM     2     2      0
                 _home_state_refresh
                  _home_tone_refresh
                _home_volume_refresh
 ---------------------------------------------------------------------------------
 (2) _home_volume_refresh                                  0     0      0   16177
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_tone_refresh                                    0     0      0   16177
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_state_refresh                                   0     0      0   16177
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   16177
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    3580
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0   13445
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _activity_home                                        0     0      0   13445
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6   12597
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1982
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1809
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    1141
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _home_config_refresh
     _home_state_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_tone_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_volume_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _keyboard_control
     _button_A
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _cursor_displacement
       _menu_selector
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
       _submenu_selector
         _submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
     _button_B
       _button_B_menu
         _activity_submenu_activation
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_date_and_time
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_pin
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_activation
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_date_and_time_config
         _activity_submenu_date_config
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _activity_submenu_time_config
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _button_B_submenu_pin_config
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin_set
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _pin_reset
           _strcpy
       _button_B_submenu_siren_config
         _activity_submenu_siren_tone
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren_volume
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_siren_tone
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_siren_volume
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _date_set
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _reset_home_callback
     _button_C
       _activity_menu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _reset_home_callback
     _button_hash
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _pin_input_validator
         _activity_menu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _pin_set
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _pin_reset
       _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      4A       5       46.3%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     28      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       6        0.0%
DATA                 0      0      A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Sep 18 00:11:38 2016

                                             _a 007C                                               _b 007E  
                                             _c 0080                                               _i 0039  
                                             _j 0082                                               _k 0084  
                                ?_lcd_send_byte 0003                                    ___awdiv@sign 0006  
                           ___wmul@multiplicand 0003                            ?_home_volume_refresh 0001  
                                   lcd_comand@d 0005                                    __CFG_CP0$OFF 000000  
                               lcd_write@column 000B                                             l421 F9F0  
                                           l430 FA10                                             l422 F9EC  
                                           l248 E546                                             l513 E502  
                                           l441 FA52                                             l433 FA26  
                                           l425 FA02                                             l514 E504  
                                           l450 FA72                                             l442 FA4E  
                                           l434 FA22                                             l426 F9FE  
                                           l461 FAB4                                             l453 FA90  
                                           l445 FA64                                             l437 FA40  
                                           l429 FA14                                             l470 FADC  
                                           l462 FAB0                                             l454 FA8C  
                                           l446 FA60                                             l438 FA3C  
                                           l473 FAF2                                             l465 FAC6  
                                           l457 FAA2                                             l449 FA76  
                                           l482 FB12                                             l474 FAEE  
                                           l466 FAC2                                             l458 FA9E  
                                           l477 FB04                                             l469 FAE0  
                                           l478 FB00                                             l592 FE5A  
                         ??_check_home_callback 0011                                             _dia 0050  
                                           _key 0045                                             _mes 0056  
                                           _pin 009A                                 lcd_write@string 000F  
                                           wreg 000FE8                                 RtccReadDate@pDt 0001  
                                   lcd_gotoxy@x 0006                                     lcd_gotoxy@y 0005  
                             ??_button_asterisk 0001                                            l3000 EC94  
                                          l3002 EC9E                                            l3012 ECC4  
                                          l3004 ECA6                                            l1236 ECD0  
                                          l3020 E9B4                                            l3022 E9BE  
                                          l1246 E9E8                                            l2070 E540  
                                          l3024 E9C6                                            l3040 F7C2  
                                          l4010 F600                                            l2066 E52C  
                                          l3114 F92C                                            l3050 F800  
                                          l3028 E9DC                                            l4012 F606  
                                          l3124 F95C                                            l3108 F8F2  
                                          l3302 FEB4                                            l3230 FCBA  
                                          l3222 FC92                                            l4006 F5F4  
                                          l3214 E846                                            l3118 F940  
                                          l3046 F7EC                                            l3240 FCF8  
                                          l3304 FEC0                                            l4024 F646  
                                          l4032 F666                                            l3216 E850  
                                          l3160 F9BE                                            l3056 F81C  
                                          l4104 FB1A                                            l3306 FEDC  
                                          l3234 FCC4                                            l4018 F626  
                                          l3330 F4F6                                            l3260 FDA0  
                                          l3252 FD62                                            l3236 FCDA  
                                          l3228 FCAC                                            l3164 F9CA  
                                          l3156 F9B2                                            l3092 F884  
                                          l3084 F86C                                            l3332 F500  
                                          l3324 F4E0                                            l3174 F134  
                                          l3254 FD84                                            l3350 F542  
                                          l3342 F526                                            l3334 F508  
                                          l3318 F4CE                                            l3192 F160  
                                          l3184 F14C                                            l3272 FDD4  
                                          l3264 FDAC                                            l3248 FD5C  
                                          l3600 E89C                                            l3088 F878  
                                          l4160 E434                                            l3178 F13C  
                                          l3290 FE38                                            l3282 FE0E  
                                          l3610 E45E                                            l3346 F532  
                                          l3276 FDF8                                            l3268 FDD0  
                                          l3278 FE02                                            l3614 E464  
                                          l3710 E4C4                                            l3296 FE60  
                                          l3288 FE30                                            l3608 E458  
                                          l3704 E4B8                                            l3720 E5FE  
                                          l3632 F5B2                                            l2906 E2C0  
                                          l3706 E4BE                                            l3634 F5D2  
                                          l3626 F5A2                                            l3650 E422  
                                          l2932 E396                                            l2940 E95E  
                                          l3660 E8DE                                            l3740 E5CE  
                                          l3724 E608                                            l3628 F5AC  
                                          l3580 EACE                                            l2934 E39C  
                                          l2942 E96A                                            l2950 E98E  
                                          l3590 E884                                            l3654 E8CC  
                                          l3750 E488                                            l3742 E5EE  
                                          l3734 E5BC                                            l3726 E628  
                                          l3718 E5F6                                            l3574 EA90  
                                          l2960 E2AE                                            l2944 E976  
                                          l3592 E88A                                            l3656 E8D2  
                                          l3664 E8E4                                            l3680 E5B4  
                                          l3672 E582                                            l3752 E48E  
                                          l3736 E5C4                                            l3576 EA9A  
                                          l3920 E640                                            l2946 E982  
                                          l2954 EBD4                                            l3834 EAFA  
                                          l3850 EB4C                                            l3842 EB9E  
                                          l3594 E890                                            l3658 E8D8  
                                          l3674 E58A                                            l3690 E554  
                                          l3770 E93E                                            l3772 EF3E  
                                          l3836 EB10                                            l3852 EB62  
                                          l3844 EBB4                                            l3596 E896  
                                          l3860 EC38                                            l3756 E494  
                                          l3924 E650                                            l3764 E91C  
                                          l2958 EBFE                                            l3862 EC3E  
                                          l3678 E594                                            l3766 E922  
                                          l3942 EFFE                                            l2984 E380  
                                          l3864 EC44                                            l3856 EC2C  
                                          l3688 E54E                                            l3696 E55E  
                                          l3880 F0A4                                            l3928 E664  
                                          l3768 E934                                            l3936 EFC2  
                                          l3858 EC32                                            l3890 F0C2  
                                          l3882 F0AA                                            l3868 EC4A  
                                          l3884 F0B0                                            l3876 F098  
                                          l3798 F398                                            l3886 F0B6  
                                          l3878 F09E                                            l3894 F0C8  
                                          l3888 F0BC                 ??_activity_submenu_siren_volume 0011  
                                          STR_1 FFE3                                            STR_2 FFF5  
                                          STR_3 FFF1                                            STR_4 FFF5  
                                          STR_5 FFF1                                            STR_6 FFF5  
                                          STR_7 FFF1            __size_of_button_B_submenu_pin_config 0034  
                                          STR_8 FFF5                                            STR_9 FFF1  
                                          u1400 F076                                            u1340 F028  
                                          u1360 F040                                            u1440 EBF4  
                                          u1418 F078                                            u1450 EC1E  
                                          u1380 F05A                                            u1358 F02A  
                                          u1447 EBEA                                            u1457 EC14  
                                          u1378 F042                                            u1398 F05C  
                                          u1830 E878                                            u1837 E86E  
                                          u2647 FB20                                            u2657 F5DC  
                                          u2667 E2C2                                            u2677 E2B0  
           __end_of_activity_submenu_siren_tone EED8                     _activity_submenu_siren_tone EE72  
                              ?_lcd_send_nibble 0001                                            _anio 004E  
                                          _flag 02F8                                            _main E42A  
                                          _hora 0054                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr0l 000FE9                                            fsr2h 000FDA  
                                          indf1 000FE7                                            fsr1l 000FE1  
                                          indf2 000FDF                                            fsr2l 000FD9  
                    __size_of_home_tone_refresh 0052                                   __CFG_T1DIG$ON 000000  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                   __CFG_IESO$OFF 000000  
                              RtccReadDate@rTD0 000B                                RtccReadDate@rTD1 0003  
                          __end_of_activity_pin EA40                   ??_activity_submenu_siren_tone 0011  
                                  ___param_bank 000010                                 RtccReadTime@pTm 0001  
                   __end_of_cursor_displacement E54C                 __size_of_activity_submenu_siren 0066  
          __end_of_activity_submenu_time_config F292           __size_of_activity_submenu_time_config 0082  
                  _activity_submenu_time_config F210                      _cursor_horizontal_position 0033  
                         ??_home_volume_refresh 0024                                     _Delay1KTCYx E2AC  
                                 __CFG_PLLDIV$1 000000                                           ?_main 0001  
                               __end_of___awdiv F54E                                           STR_10 FFF5  
                                         STR_11 FFF1                                           STR_12 FFF5  
                                         STR_20 FF65                                           STR_13 FFF1  
                                         STR_21 FFEB                                           STR_14 FFF2  
                                         STR_22 FFEE                                           STR_30 FF1C  
                                         STR_23 FFB9                                           STR_31 FF3B  
                                         STR_15 FF0C                                           STR_32 FF2C  
                                         STR_24 FFB3                                           STR_40 FF6D  
                                         STR_16 FF65                                           STR_25 FFCA  
                                         STR_17 FFB9                                           STR_33 FFAC  
                                         STR_41 FF7B                                           STR_42 FFE7  
                                         STR_18 FFE7                                           STR_50 FF90  
                                         STR_34 FF55                                           STR_26 FF2C  
                                         STR_35 FFD4                                           STR_19 FFA5  
                                         STR_51 FF9E                                           STR_43 FF5D  
                                         STR_27 FF3B                                           STR_36 FF55  
                                         STR_44 FFBF                                           STR_52 FF89  
                                         STR_28 FEFB                                           STR_45 FFF2  
                                         STR_29 FF2C                                           STR_37 FFCF  
                                         STR_53 FF97            __size_of_button_B_submenu_siren_tone 003A  
                                         STR_38 FFD9                                           STR_54 FF74  
                                         STR_46 FF4A                                           STR_39 FFD4  
                                         STR_47 FFC5                                           STR_55 FF82  
                                         STR_48 FF2C                                           STR_56 FFF3  
                                         STR_49 FF3B                                           STR_57 FFDE  
                                         STR_58 FFDE                           __size_of_Delay100TCYx 0012  
                               ___awdiv@divisor 0003                                 __end_of___lwdiv ECDA  
                               __end_of___lwmod E9F2                                 ___awdiv@counter 0005  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                    ?_button_hash 0001  
                                __CFG_FCMEN$OFF 000000                                 __end_of_dpowers FEF7  
                                         _mes_d 005B                                           _mes_u 00A8  
                               __end_of_isdigit E38A                                           _setup F314  
                                         _state 0041                                 __end_of_pin_set E32A  
         __end_of_button_B_submenu_siren_config E4E6          __size_of_button_B_submenu_siren_config 0030  
                 _button_B_submenu_siren_config E4B6                                  __pbitbssCOMRAM 02F8  
                                         tablat 000FF5                     __size_of_home_state_refresh 0052  
                           _reset_home_callback E280                                    lcd_putrs@ptr 0009  
                                         status 000FD8                                 __end_of_sprintf FEEC  
         __end_of_button_B_submenu_siren_volume E62E          __size_of_button_B_submenu_siren_volume 003A  
                 _button_B_submenu_siren_volume E5F4                __end_of_activity_submenu_pin_set EA8E  
                         __end_of_activity_home E400                           __end_of_activity_menu F314  
                                  lcd_write@row 000D                        __size_of_menu_selector_0 0042  
                      __size_of_menu_selector_1 0042                        __size_of_menu_selector_2 0042  
                      __size_of_menu_selector_3 0042                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization E7F8                                    _Delay100TCYx E2BE  
                                  __end_of_main E456                     __size_of_submenu_selector_0 0042  
                   __size_of_submenu_selector_1 0042                                 ??_lcd_send_byte 0004  
                              RtccReadTime@rTD0 000B                                RtccReadTime@rTD1 0003  
                              __end_of_Read_RTC F784                   ?_activity_submenu_time_config 0001  
                          ?_reset_home_callback 0001                                          ??_main 0029  
                                 __activetblptr 000002                                __end_of_RtccWrOn E2E2  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                        _activity_submenu_siren EE0C                                          _EECON2 000FA7  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                              ___awdiv@dividend 0001                                          ?_setup 0001  
                                __CFG_WDTEN$OFF 000000                    __size_of_pin_input_validator 002A  
                              RtccWriteDate@pDt 0001                                          _RTCCFG 000F3F  
                                __CFG_WPCFG$OFF 000000                                   _home_callback 0035  
         __end_of_activity_submenu_siren_volume EF3E          __size_of_activity_submenu_siren_volume 0066  
                 _activity_submenu_siren_volume EED8                                __end_of_date_set F5E8  
                                __CFG_WPDIS$OFF 000000                               ?_submenu_selector 0001  
                           _home_callback_delay 0037                                  __CFG_XINST$OFF 000000  
                           _home_config_refresh F5E8                          __size_of_button_B_menu 0048  
                            ??_submenu_selector 0011                                __end_of_lcd_init F18E  
                    __end_of_home_clock_refresh F4B8                                __end_of_lcd_putc E9A6  
                                        ___wmul E3AE                                       ??___awdiv 0005  
                                __CFG_STVREN$ON 000000                                          _diasem 0052  
                                        _anio_d 0058                                          _anio_u 00A4  
                                     ??___lwdiv 0005                                       ??___lwmod 000C  
                         ??_reset_home_callback 0001                                          _hora_d 005A  
                                        _hora_u 00A7                                __end_of_button_A EC7E  
                              __end_of_button_B F10E                                __end_of_button_C E346  
                              __end_of_button_D E294                                          clear_0 E7FE  
                                        clear_1 E80C                                ___awdiv@quotient 0007  
                                        _minuto 003D             __end_of_button_B_submenu_activation E5BA  
                   _button_B_submenu_activation E580                           __end_of_RtccWriteDate F9D6  
                                        _strcat E912                                          _strcmp EA8E  
                         __end_of_RtccWriteTime F890                                          _strcpy E83C  
                              RtccWriteTime@pTm 0001                                    __pdataCOMRAM 004E  
                                     ??_isdigit 0001                          __size_of_button_number 0070  
                                  __mediumconst FEEC                                       ??_pin_set 0011  
                          ?_home_config_refresh 0001                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                     ??_sprintf 0017                           __size_of_activity_pin 004E  
                                    __accesstop 0060                         __end_of__initialization E832  
                            __size_of_Write_RTC 015C                                   ___rparam_used 000001  
                     __size_of_keyboard_control 0156                                  __pcstackCOMRAM 0001  
                                 __end_of_setup F398                               ??_menu_selector_0 0011  
                             ??_menu_selector_1 0011                               ??_menu_selector_2 0011  
                             ??_menu_selector_3 0011                                 __CFG_DSWDTPS$G2 000000  
                        __size_of_menu_selector 0048                                 _button_asterisk E27A  
             __size_of_activity_submenu_pin_set 004E                                 __CFG_OSC$INTOSC 000000  
                         ??_home_config_refresh 0024                       ?_activity_submenu_pin_set 0001  
                                 _button_B_menu E8CA                                    _activity_pin E9F2  
                                  _alarm_volume 002D                               lcd_gotoxy@address 0007  
                          __size_of_button_hash 003E                              __size_of_lcd_putrs 0054  
                            __size_of_lcd_write 0018                                    sprintf@width 0021  
                                       ??_setup 000E                                      __pbssBANK0 0060  
                                     ?_Read_RTC 0001                                      _dia_semana 00A5  
                     RtccWriteTime@tempHourWDay 000A                                      __pnvCOMRAM 0058  
                                    _alarm_tone 002B                   __size_of_activity_submenu_pin 0066  
                                 _button_number EFAC                                       ?_RtccWrOn 0001  
                                lcd_send_byte@n 0003                  ?_activity_submenu_siren_volume 0001  
           __end_of_button_B_submenu_pin_config E580                     _button_B_submenu_pin_config E54C  
                                       ?___wmul 0001                                   ?_RtccReadDate 0001  
                   __end_of_check_home_callback E368                                   ?_RtccReadTime 0001  
                            __size_of_pin_reset 0016                                    ?_Delay1KTCYx 0001  
              ??_activity_submenu_date_and_time 0011                 ?_activity_submenu_date_and_time 0001  
                                       ?_strcat 0001                                         ?_strcmp 0001  
                                       ?_strcpy 0001                               __end_of_Write_RTC FC88  
                                ?_button_B_menu 0001                                      _lcd_comand E29E  
                                     ?_date_set 0001                                      _lcd_gotoxy E38A  
                                       _RTCVALH 000F99                                         _RTCVALL 000F98  
                                     ?_lcd_init 0001                                       ?_lcd_putc 0001  
                                 _menu_selected 003B                                   _menu_selector E882  
           __end_of_button_B_submenu_siren_tone E5F4                     _button_B_submenu_siren_tone E5BA  
                                    ??_Read_RTC 0013                                       ?_button_A 0001  
                                     ?_button_B 0001                                       ?_button_C 0001  
                                     ?_button_D 0001                                  ?_button_number 0001  
                                       __Hparam 0000                  ??_activity_submenu_date_config 0024  
                                       __Lparam 0000                     __end_of_home_volume_refresh EBD2  
                      __size_of_lcd_send_nibble 0076                         __end_of_button_asterisk E280  
                                    ??_RtccWrOn 0001                                  ??_RtccReadDate 0003  
                                ??_RtccReadTime 0003                                         ___awdiv F4B8  
                             __end_of_lcd_putrs EC26                               __end_of_lcd_write E310  
                               __size_of___wmul 0028                                         ___lwdiv EC7E  
                                       ___lwmod E9A6                                     _RtccTimeVal 0078  
                                       __pcinit E7F8                                         _fecha_d 0059  
                                       _fecha_u 00A6                                         __ramtop 0F00  
                           _pin_input_validator E400                                         __ptext0 E42A  
                                       __ptext1 F314                                         __ptext2 F9D6  
                                       __ptext3 EFAC                                         __ptext4 E912  
                                       __ptext5 E62E                                         __ptext6 E310  
                                       __ptext7 E400                                         __ptext8 EA8E  
                                       __ptext9 E27A                    ?_activity_submenu_activation 0001  
                                       _buffer1 0086                                 __size_of_strcat 0048  
                               __size_of_strcmp 004E                                 __size_of_strcpy 0046  
                  __size_of_cursor_displacement 0034                                       _T1CONbits 000FCD  
                                       _dpowers FEED                                         _isdigit E368  
                       ?_activity_submenu_siren 0001                                      ??_date_set 0024  
                                       _pin_set E310                                         _segundo 003F  
                    __end_of_home_state_refresh EB2E                                         _sprintf FC88  
                                    ??_lcd_init 0005                                      ??_lcd_putc 0008  
                          end_of_initialization E832                                  ?_menu_selector 0001  
                             __end_of_pin_reset E2F8                            ?_pin_input_validator 0001  
                          lcd_send_byte@address 0004                                      ??_button_A 0013  
                                 __Lmediumconst FEEC                                      ??_button_B 0026  
                                    ??_button_C 0011                                      ??_button_D 0011  
                    __end_of_submenu_selector_0 E7B6                      __end_of_submenu_selector_1 E7F8  
                              _keyboard_control F9D6                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc2 000FDE                           __end_of_lcd_send_byte E518  
                                       strcmp@r 0006                                       _PORTAbits 000F80  
                                     _PORTCbits 000F82                                 ??_button_B_menu 0011  
                __end_of_activity_submenu_siren EE72                                __CFG_DSBOREN$OFF 000000  
                     __size_of_submenu_selector 0030                                     ?_lcd_comand 0001  
                            _home_clock_refresh F426                                __CFG_CPUDIV$OSC1 000000  
                                     _TRISBbits 000F93                          __size_of_activity_home 002A  
                        __size_of_activity_menu 0082                                     ?_lcd_gotoxy 0005  
                               _LCD_INIT_STRING FEF7                             ?_home_clock_refresh 0001  
                         ??_pin_input_validator 0011                                 ??_button_number 0024  
                               _menu_selector_0 E66C                                 _menu_selector_1 E6AE  
                               _menu_selector_2 E6F0                                 _menu_selector_3 E732  
                              __CFG_IOL1WAY$OFF 000000                       RtccWriteDate@tempDayMonth 000A  
                   __end_of_reset_home_callback E28A                             __CFG_MSSP7B_EN$MSK7 000000  
                              ?_button_asterisk 0001                                Delay100TCYx@unit 0001  
                          ??_home_clock_refresh 0024                                  __end_of___wmul E3D6  
                                 __pidataCOMRAM E294                       RtccWriteDate@tempHourWDay 000C  
                             ??_lcd_send_nibble 0001                            __size_of_Delay1KTCYx 0012  
                              __CFG_DSWDTEN$OFF 000000                                  __end_of_strcat E95A  
                                __end_of_strcmp EADC                                  __end_of_strcpy E882  
                           start_initialization E7F8                                 ??_menu_selector 0011  
                          __end_of_RtccReadDate F426                            __end_of_RtccReadTime EFAC  
                          RtccWriteTime@wasAlrm 0006                    ?_activity_submenu_siren_tone 0001  
                          RtccWriteTime@wasWrEn 0007            __size_of_activity_submenu_activation 0066  
                        __size_of_RtccWriteDate 0146                                 RtccWriteDate@di 0003  
                        __size_of_RtccWriteTime 010C                               __size_of_Read_RTC 00F6  
                                 _activity_home E3D6                                   _activity_menu F292  
                           __size_of_lcd_comand 000E                             __size_of_lcd_gotoxy 0024  
                                      ??___wmul 0005                               __size_of_RtccWrOn 0012  
                               RtccWriteTime@di 0003                                __CFG_LPT1OSC$OFF 000000  
                   __end_of_home_config_refresh F68E                                        ??_strcat 0005  
                                      ??_strcmp 0005                                        ??_strcpy 0005  
                  __end_of_activity_submenu_pin EE0C                                     _ALRMCFGbits 000F91  
                       __end_of_LCD_INIT_STRING FEFB                                   ??_button_hash 0011  
                                   __pbssCOMRAM 0029                                       _Write_RTC FB2C  
                                  _isdigit$2211 0002                         __end_of_menu_selector_0 E6AE  
                       __end_of_menu_selector_1 E6F0                         __end_of_menu_selector_2 E732  
                       __end_of_menu_selector_3 E774                               __size_of_date_set 009A  
        __end_of_activity_submenu_date_and_time EDA6         __size_of_activity_submenu_date_and_time 0066  
                _activity_submenu_date_and_time ED40                                 Delay1KTCYx@unit 0001  
                             __size_of_lcd_init 0080                                     sprintf@flag 001D  
                             __size_of_lcd_putc 004C                                     sprintf@prec 0020  
                           _cursor_displacement E518                                       __pnvBANK0 00A4  
                                ?_activity_home 0001                                  ?_activity_menu 0001  
                             __size_of_button_A 0058                               __size_of_button_B 007C  
                             __size_of_button_C 001C                               __size_of_button_D 000A  
                              ___lwdiv@dividend 0001                                   ?_Delay100TCYx 0001  
                ?_button_B_submenu_siren_config 0001                                   __pmediumconst FEEC  
                                      ?___awdiv 0001                                        ?___lwdiv 0001  
                                      ?___lwmod 0008                  ?_button_B_submenu_siren_volume 0001  
                       RtccWriteTime@tempMinSec 0008                        _activity_submenu_pin_set EA40  
                                     _lcd_putrs EBD2                                       _lcd_write E2F8  
                              _submenu_selected 0043                                _submenu_selector E456  
                          ?_cursor_displacement 0001                                   _RtccWriteDate F890  
                                 _RtccWriteTime F784                    __size_of_check_home_callback 0022  
                                      ?_isdigit 0001                            __CFG_RTCOSC$T1OSCREF 000000  
                                      ?_pin_set 0001                        __end_of_keyboard_control FB2C  
                                    ?_Write_RTC 0001                                ___lwdiv@quotient 0005  
                ??_activity_submenu_time_config 0024                                        ?_sprintf 000D  
                                __size_of_setup 0084                             __end_of_button_hash E66C  
                              _RtccAlrmTimeDate 0060                                  ___wmul@product 0005  
                                      _LATAbits 000F89                                        _LATBbits 000F8A  
                                     _pin_input 009F                                       _pin_reset E2E2  
                                      _PIE3bits 000FA3                                       _segundo_d 005D  
                                ??_Delay100TCYx 0001                              _home_state_refresh EADC  
                                     _segundo_u 005E                                __CFG_WDTPS$32768 000000  
                            RtccWriteDate@wasOn 0005                             ?_home_state_refresh 0001  
                            _Rtcc_read_TimeDate 0070                    __size_of_home_volume_refresh 0052  
          __size_of_activity_submenu_siren_tone 0066                                  ?_RtccWriteDate 0001  
                         ??_cursor_displacement 0001                                      ?_lcd_putrs 0009  
                                    ?_lcd_write 000B                               ___wmul@multiplier 0001  
                                ?_RtccWriteTime 0001                              _submenu_selector_0 E774  
                            _submenu_selector_1 E7B6                    ?_button_B_submenu_activation 0001  
                                     lcd_init@i 0005                           __size_of_RtccReadDate 008E  
 __end_of_button_B_submenu_date_and_time_config E4B6  __size_of_button_B_submenu_date_and_time_config 0030  
       ??_button_B_submenu_date_and_time_config 0024          ?_button_B_submenu_date_and_time_config 0001  
         _button_B_submenu_date_and_time_config E486                                    ??_lcd_comand 0005  
                                     lcd_putc@c 0008                           __size_of_RtccReadTime 006E  
          __end_of_activity_submenu_date_config F210           __size_of_activity_submenu_date_config 0082  
                  _activity_submenu_date_config F18E                                    ??_lcd_gotoxy 0006  
                           ?_submenu_selector_0 0001                             ?_submenu_selector_1 0001  
                              ?_menu_selector_0 0001                                ?_menu_selector_1 0001  
                              ?_menu_selector_2 0001                                ?_menu_selector_3 0001  
                                     copy_data0 E826                            ??_home_state_refresh 0024  
                                      _Read_RTC F68E                                 ??_activity_home 0011  
                               ??_activity_menu 0011                                      ?_pin_reset 0001  
                          _activity_submenu_pin EDA6                                 _lcd_send_nibble F01C  
                                      __Hrparam 0000                                        _RtccDate 0046  
                                      __Lrparam 0000                                        _RtccTime 004A  
                                      _RtccWrOn E2D0                            ??_submenu_selector_0 0011  
                          ??_submenu_selector_1 0011                              __end_of_lcd_comand E2AC  
                            __end_of_lcd_gotoxy E3AE                                    _RtccReadDate F398  
                              __size_of___awdiv 0096                                    _RtccReadTime EF3E  
                              __size_of___lwdiv 005C                                __size_of___lwmod 004C  
                                  _RtccTimeDate 0068                              _config_widget_time 0031  
                                    sprintf@val 001E                           __end_of_button_B_menu E912  
                 ??_button_B_submenu_activation 0011                                      strcat@from 0003  
                                   _button_hash E62E                                   ?_activity_pin 0001  
                                      _activity 0029                                        _date_set F54E  
                   __end_of_pin_input_validator E42A                                __size_of_isdigit 0022  
                               ___lwdiv@divisor 0003                                     ??_Write_RTC 000E  
                              __size_of_pin_set 001A                                 ___lwdiv@counter 0007  
                                      __ptext10 E28A                                        __ptext11 E32A  
                                      __ptext20 E5F4                                        __ptext12 F292  
                                      __ptext21 E5BA                                        __ptext13 F092  
                                      __ptext30 F18E                                        __ptext22 E4B6  
                                      __ptext14 F54E                                        __ptext31 E580  
                                      __ptext23 EED8                                        __ptext15 FB2C  
                                      __ptext40 E774                                        __ptext32 E8CA  
                                      __ptext24 EE72                                        __ptext16 F4B8  
                                      __ptext41 E882                                        __ptext33 EE0C  
                                      __ptext25 E54C                                        __ptext17 F784  
                                      __ptext50 F5E8                                        __ptext42 E732  
                                      __ptext34 EDA6                                        __ptext26 E2E2  
                                      __ptext18 F890                                        __ptext51 EB80  
                                      __ptext43 E6F0                                        __ptext35 ED40  
                                      __ptext27 EA40                                        __ptext19 E2D0  
                                      __ptext60 E346                                        __ptext52 EB2E  
                                      __ptext44 E6AE                                        __ptext36 ECDA  
                                      __ptext28 E486                                        __ptext61 E280  
                                      __ptext53 EADC                                        __ptext45 E66C  
                                      __ptext37 EC26                                        __ptext29 F210  
                                      __ptext70 E2BE                                        __ptext62 E3D6  
                                      __ptext54 F426                                        __ptext46 E518  
                                      __ptext38 E456                                        __ptext71 E2AC  
                                      __ptext63 E2F8                                        __ptext55 FC88  
                                      __ptext47 E9F2                                        __ptext39 E7B6  
                                      __ptext72 F68E                                        __ptext64 EBD2  
                                      __ptext56 E368                                        __ptext48 E83C  
                                      __ptext73 EF3E                                        __ptext65 E95A  
                                      __ptext57 E3AE                                        __ptext49 E29E  
                                      __ptext74 F398                                        __ptext66 E38A  
                                      __ptext58 E9A6                                        __ptext67 F10E  
                                      __ptext59 EC7E                                        __ptext68 E4E6  
                                      __ptext69 F01C                   ?_activity_submenu_date_config 0001  
                                      _lcd_init F10E                                        _lcd_putc E95A  
                              __size_of_sprintf 0264                                      strcpy@from 0003  
                        __size_of_lcd_send_byte 0032                                        _button_A EC26  
                                      _button_B F092                                        _button_C E32A  
                                      _button_D E28A                                   __size_of_main 002C  
                         __end_of_button_number F01C                           ?_activity_submenu_pin 0001  
                                      _minuto_d 005C                                        _minuto_u 00A9  
                             _home_tone_refresh EB2E                              ?_home_tone_refresh 0001  
                  ?_button_B_submenu_pin_config 0001                                   ??_Delay1KTCYx 0001  
                               ??_RtccWriteDate 0004                     __size_of_home_clock_refresh 0092  
                               ??_RtccWriteTime 0004             __end_of_activity_submenu_activation ED40  
                   _activity_submenu_activation ECDA                    __size_of_reset_home_callback 000A  
                                   ??_lcd_putrs 000B                                     ??_lcd_write 0011  
                           ??_home_tone_refresh 0024                        __size_of_button_asterisk 0006  
                                ??_activity_pin 0011                                     _OSCTUNEbits 000F9B  
                                    _INTCONbits 000FF2                              RtccWriteTime@wasOn 0005  
                          __end_of_Delay100TCYx E2D0                   ??_activity_submenu_activation 0011  
                                      isdigit@c 0003                           __end_of_menu_selector E8CA  
                                     sprintf@ap 001B                         __end_of_lcd_send_nibble F092  
                                     sprintf@sp 000D                                ___lwmod@dividend 0008  
                  ?_button_B_submenu_siren_tone 0001                       __end_of_home_tone_refresh EB80  
          __size_of_button_B_submenu_activation 003A                        __end_of_submenu_selector E486  
                                   ??_pin_reset 0007                             _check_home_callback E346  
                    ??_activity_submenu_pin_set 0011                                      _OSCCONbits 000FD3  
                                 _config_widget 002F                           RtccWriteDate@tempYear 0007  
                      ??_activity_submenu_siren 0011                                   _lcd_send_byte E4E6  
                 ??_button_B_submenu_pin_config 0011                                      _RTCCFGbits 000F3F  
                                      sprintf@c 0023                                        sprintf@f 000F  
                                      strcat@cp 0005                                        strcat@to 0001  
                          ?_check_home_callback 0001                                        strcmp@s1 0001  
                                      strcmp@s2 0003                                 ___lwmod@divisor 000A  
                                      strcpy@cp 0005                                        strcpy@to 0001  
                           __end_of_Delay1KTCYx E2BE                                 ___lwmod@counter 000C  
               ??_button_B_submenu_siren_config 0011                    __size_of_home_config_refresh 00A6  
                          RtccWriteDate@wasAlrm 0006                            RtccWriteDate@wasWrEn 0009  
                             ?_keyboard_control 0001                 ??_button_B_submenu_siren_volume 0011  
                            ??_keyboard_control 0028                             _home_volume_refresh EB80  
                        ??_activity_submenu_pin 0011                   ??_button_B_submenu_siren_tone 0011  
                         lcd_send_nibble@nibble 0002  
