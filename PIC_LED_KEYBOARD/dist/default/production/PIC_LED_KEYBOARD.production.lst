

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 06 20:41:37 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataCOMRAM
    63  002408                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _anio
    67  002408  0010               	dw	16
    68                           
    69                           ;initializer for _dia
    70  00240A  0006               	dw	6
    71                           
    72                           ;initializer for _diasem
    73  00240C  0002               	dw	2
    74                           
    75                           ;initializer for _hora
    76  00240E  0012               	dw	18
    77                           
    78                           ;initializer for _mes
    79  002410  0009               	dw	9
    80                           
    81                           	psect	smallconst
    82  000F00                     __psmallconst:
    83                           	opt stack 0
    84  000F00  00                 	db	0
    85  000F01                     _dpowers:
    86                           	opt stack 0
    87  000F01  0001               	dw	1
    88  000F03  000A               	dw	10
    89  000F05  0064               	dw	100
    90  000F07  03E8               	dw	1000
    91  000F09  2710               	dw	10000
    92  000F0B                     __end_of_dpowers:
    93                           	opt stack 0
    94  000F0B                     _LCD_INIT_STRING:
    95                           	opt stack 0
    96  000F0B  28                 	db	40
    97  000F0C  0C                 	db	12
    98  000F0D  01                 	db	1
    99  000F0E  06                 	db	6
   100  000F0F                     __end_of_LCD_INIT_STRING:
   101                           	opt stack 0
   102  000F0F                     STR_5:
   103                           
   104                           ; BSR set to: 15
   105  000F0F  49                 	db	73	;'I'
   106  000F10  6E                 	db	110	;'n'
   107  000F11  67                 	db	103	;'g'
   108  000F12  72                 	db	114	;'r'
   109  000F13  65                 	db	101	;'e'
   110  000F14  73                 	db	115	;'s'
   111  000F15  65                 	db	101	;'e'
   112  000F16  20                 	db	32
   113  000F17  73                 	db	115	;'s'
   114  000F18  75                 	db	117	;'u'
   115  000F19  20                 	db	32
   116  000F1A  50                 	db	80	;'P'
   117  000F1B  49                 	db	73	;'I'
   118  000F1C  4E                 	db	78	;'N'
   119  000F1D  3A                 	db	58	;':'
   120  000F1E  00                 	db	0
   121  000F1F                     STR_2:
   122                           
   123                           ; BSR set to: 15
   124  000F1F  25                 	db	37
   125  000F20  30                 	db	48	;'0'
   126  000F21  32                 	db	50	;'2'
   127  000F22  75                 	db	117	;'u'
   128  000F23  2F                 	db	47
   129  000F24  25                 	db	37
   130  000F25  30                 	db	48	;'0'
   131  000F26  32                 	db	50	;'2'
   132  000F27  75                 	db	117	;'u'
   133  000F28  2F                 	db	47
   134  000F29  25                 	db	37
   135  000F2A  30                 	db	48	;'0'
   136  000F2B  32                 	db	50	;'2'
   137  000F2C  75                 	db	117	;'u'
   138  000F2D  00                 	db	0
   139  000F2E                     STR_3:
   140                           
   141                           ; BSR set to: 15
   142  000F2E  25                 	db	37
   143  000F2F  30                 	db	48	;'0'
   144  000F30  32                 	db	50	;'2'
   145  000F31  75                 	db	117	;'u'
   146  000F32  3A                 	db	58	;':'
   147  000F33  25                 	db	37
   148  000F34  30                 	db	48	;'0'
   149  000F35  32                 	db	50	;'2'
   150  000F36  75                 	db	117	;'u'
   151  000F37  3A                 	db	58	;':'
   152  000F38  25                 	db	37
   153  000F39  30                 	db	48	;'0'
   154  000F3A  32                 	db	50	;'2'
   155  000F3B  75                 	db	117	;'u'
   156  000F3C  00                 	db	0
   157  000F3D                     STR_32:
   158                           
   159                           ; BSR set to: 15
   160  000F3D  56                 	db	86	;'V'
   161  000F3E  6F                 	db	111	;'o'
   162  000F3F  6C                 	db	108	;'l'
   163  000F40  75                 	db	117	;'u'
   164  000F41  6D                 	db	109	;'m'
   165  000F42  65                 	db	101	;'e'
   166  000F43  6E                 	db	110	;'n'
   167  000F44  00                 	db	0
   168  000F45                     STR_29:
   169                           
   170                           ; BSR set to: 15
   171  000F45  43                 	db	67	;'C'
   172  000F46  61                 	db	97	;'a'
   173  000F47  6D                 	db	109	;'m'
   174  000F48  62                 	db	98	;'b'
   175  000F49  69                 	db	105	;'i'
   176  000F4A  61                 	db	97	;'a'
   177  000F4B  72                 	db	114	;'r'
   178  000F4C  00                 	db	0
   179  000F4D                     STR_6:
   180                           
   181                           ; BSR set to: 15
   182  000F4D  41                 	db	65	;'A'
   183  000F4E  63                 	db	99	;'c'
   184  000F4F  74                 	db	116	;'t'
   185  000F50  69                 	db	105	;'i'
   186  000F51  76                 	db	118	;'v'
   187  000F52  61                 	db	97	;'a'
   188  000F53  72                 	db	114	;'r'
   189  000F54  00                 	db	0
   190  000F55                     STR_9:
   191                           
   192                           ; BSR set to: 15
   193  000F55  41                 	db	65	;'A'
   194  000F56  6C                 	db	108	;'l'
   195  000F57  61                 	db	97	;'a'
   196  000F58  72                 	db	114	;'r'
   197  000F59  6D                 	db	109	;'m'
   198  000F5A  61                 	db	97	;'a'
   199  000F5B  00                 	db	0
   200  000F5C                     STR_26:
   201                           
   202                           ; BSR set to: 15
   203  000F5C  46                 	db	70	;'F'
   204  000F5D  65                 	db	101	;'e'
   205  000F5E  63                 	db	99	;'c'
   206  000F5F  68                 	db	104	;'h'
   207  000F60  61                 	db	97	;'a'
   208  000F61  00                 	db	0
   209  000F62                     STR_7:
   210                           
   211                           ; BSR set to: 15
   212  000F62  52                 	db	82	;'R'
   213  000F63  65                 	db	101	;'e'
   214  000F64  6C                 	db	108	;'l'
   215  000F65  6F                 	db	111	;'o'
   216  000F66  6A                 	db	106	;'j'
   217  000F67  00                 	db	0
   218  000F68                     STR_30:
   219                           
   220                           ; BSR set to: 15
   221  000F68  52                 	db	82	;'R'
   222  000F69  65                 	db	101	;'e'
   223  000F6A  73                 	db	115	;'s'
   224  000F6B  65                 	db	101	;'e'
   225  000F6C  74                 	db	116	;'t'
   226  000F6D  00                 	db	0
   227  000F6E                     STR_1:
   228                           
   229                           ; BSR set to: 15
   230  000F6E  31                 	db	49	;'1'
   231  000F6F  32                 	db	50	;'2'
   232  000F70  33                 	db	51	;'3'
   233  000F71  34                 	db	52	;'4'
   234  000F72  00                 	db	0
   235  000F73                     STR_27:
   236                           
   237                           ; BSR set to: 15
   238  000F73  48                 	db	72	;'H'
   239  000F74  6F                 	db	111	;'o'
   240  000F75  72                 	db	114	;'r'
   241  000F76  61                 	db	97	;'a'
   242  000F77  00                 	db	0
   243  000F78                     STR_33:
   244                           
   245                           ; BSR set to: 15
   246  000F78  54                 	db	84	;'T'
   247  000F79  6F                 	db	111	;'o'
   248  000F7A  6E                 	db	110	;'n'
   249  000F7B  6F                 	db	111	;'o'
   250  000F7C  00                 	db	0
   251  000F7D                     STR_36:
   252                           
   253                           ; BSR set to: 15
   254  000F7D  25                 	db	37
   255  000F7E  30                 	db	48	;'0'
   256  000F7F  31                 	db	49	;'1'
   257  000F80  75                 	db	117	;'u'
   258  000F81  00                 	db	0
   259  000F82                     STR_4:
   260                           
   261                           ; BSR set to: 15
   262  000F82  58                 	db	88	;'X'
   263  000F83  32                 	db	50	;'2'
   264  000F84  38                 	db	56	;'8'
   265  000F85  00                 	db	0
   266  000F86                     STR_8:
   267                           
   268                           ; BSR set to: 15
   269  000F86  50                 	db	80	;'P'
   270  000F87  69                 	db	105	;'i'
   271  000F88  6E                 	db	110	;'n'
   272  000F89  00                 	db	0
   273  000F8A                     STR_23:
   274                           
   275                           ; BSR set to: 15
   276  000F8A  53                 	db	83	;'S'
   277  000F8B  49                 	db	73	;'I'
   278  000F8C  00                 	db	0
   279  000F8D                     STR_24:
   280                           
   281                           ; BSR set to: 15
   282  000F8D  4E                 	db	78	;'N'
   283  000F8E  4F                 	db	79	;'O'
   284  000F8F  00                 	db	0
   285  000F90                     STR_11:
   286                           
   287                           ; BSR set to: 15
   288  000F90  20                 	db	32
   289  000F91  00                 	db	0
   290  000F92                     STR_34:
   291                           
   292                           ; BSR set to: 15
   293  000F92  2A                 	db	42
   294  000F93  00                 	db	0
   295  000F94                     STR_10:
   296                           
   297                           ; BSR set to: 15
   298  000F94  3E                 	db	62	;'>'
   299  000F95  00                 	db	0
   300  0000                     
   301                           ; #config settings
   302  000F96  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           	psect	nvCOMRAM
   305  000058                     __pnvCOMRAM:
   306                           	opt stack 0
   307  000058                     _anio_d:
   308                           	opt stack 0
   309  000058                     	ds	1
   310  000059                     _fecha_d:
   311                           	opt stack 0
   312  000059                     	ds	1
   313  00005A                     _hora_d:
   314                           	opt stack 0
   315  00005A                     	ds	1
   316  00005B                     _mes_d:
   317                           	opt stack 0
   318  00005B                     	ds	1
   319  00005C                     _minuto_d:
   320                           	opt stack 0
   321  00005C                     	ds	1
   322  00005D                     _segundo_d:
   323                           	opt stack 0
   324  00005D                     	ds	1
   325  00005E                     _segundo_u:
   326                           	opt stack 0
   327  00005E                     	ds	1
   328                           
   329                           	psect	nvBANK0
   330  000094                     __pnvBANK0:
   331                           	opt stack 0
   332  000094                     _anio_u:
   333                           	opt stack 0
   334  000094                     	ds	1
   335  000095                     _dia_semana:
   336                           	opt stack 0
   337  000095                     	ds	1
   338  000096                     _fecha_u:
   339                           	opt stack 0
   340  000096                     	ds	1
   341  000097                     _hora_u:
   342                           	opt stack 0
   343  000097                     	ds	1
   344  000098                     _mes_u:
   345                           	opt stack 0
   346  000098                     	ds	1
   347  000099                     _minuto_u:
   348                           	opt stack 0
   349  000099                     	ds	1
   350  0000                     _ANCON0	set	3912
   351  0000                     _ANCON1	set	3913
   352  0000                     _RTCCFG	set	3903
   353  0000                     _RTCCFGbits	set	3903
   354  0000                     _ADCON0	set	4034
   355  0000                     _ADCON1	set	4033
   356  0000                     _ALRMCFGbits	set	3985
   357  0000                     _EECON2	set	4007
   358  0000                     _INTCONbits	set	4082
   359  0000                     _LATAbits	set	3977
   360  0000                     _LATBbits	set	3978
   361  0000                     _OSCCONbits	set	4051
   362  0000                     _OSCTUNEbits	set	3995
   363  0000                     _PIE3bits	set	4003
   364  0000                     _PORTAbits	set	3968
   365  0000                     _PORTCbits	set	3970
   366  0000                     _RTCVALH	set	3993
   367  0000                     _RTCVALL	set	3992
   368  0000                     _T1CONbits	set	4045
   369  0000                     _TRISA	set	3986
   370  0000                     _TRISB	set	3987
   371  0000                     _TRISBbits	set	3987
   372  0000                     _TRISC	set	3988
   373                           
   374                           	psect	cinit
   375  002184                     __pcinit:
   376                           	opt stack 0
   377  002184                     start_initialization:
   378                           	opt stack 0
   379  002184                     __initialization:
   380                           	opt stack 0
   381                           
   382                           ; Clear objects allocated to BANK0 (52 bytes)
   383  002184  EE00  F060         	lfsr	0,__pbssBANK0
   384  002188  0E34               	movlw	52
   385  00218A                     clear_0:
   386  00218A  6AEE               	clrf	postinc0,c
   387  00218C  06E8               	decf	wreg,f,c
   388  00218E  E1FD               	bnz	clear_0
   389                           
   390                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   391  002190  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   392                           
   393                           ; Clear objects allocated to COMRAM (41 bytes)
   394  002192  EE00  F001         	lfsr	0,__pbssCOMRAM
   395  002196  0E29               	movlw	41
   396  002198                     clear_1:
   397  002198  6AEE               	clrf	postinc0,c
   398  00219A  06E8               	decf	wreg,f,c
   399  00219C  E1FD               	bnz	clear_1
   400                           
   401                           ; Initialize objects allocated to COMRAM (10 bytes)
   402                           ; load TBLPTR registers with __pidataCOMRAM
   403  00219E  0E08               	movlw	low __pidataCOMRAM
   404  0021A0  6EF6               	movwf	tblptrl,c
   405  0021A2  0E24               	movlw	high __pidataCOMRAM
   406  0021A4  6EF7               	movwf	tblptrh,c
   407  0021A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   408  0021A8  6EF8               	movwf	tblptru,c
   409  0021AA  EE00  F04E         	lfsr	0,__pdataCOMRAM
   410  0021AE  EE10 F00A          	lfsr	1,10
   411  0021B2                     copy_data0:
   412  0021B2  0009               	tblrd		*+
   413  0021B4  CFF5 FFEE          	movff	tablat,postinc0
   414  0021B8  50E5               	movf	postdec1,w,c
   415  0021BA  50E1               	movf	fsr1l,w,c
   416  0021BC  E1FA               	bnz	copy_data0
   417  0021BE                     end_of_initialization:
   418                           	opt stack 0
   419  0021BE                     __end_of__initialization:
   420                           	opt stack 0
   421  0021BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   422  0021C0  6EF8               	movwf	tblptru,c
   423  0021C2  0100               	movlb	0
   424  0021C4  EF04  F011         	goto	_main	;jump to C main() function
   425                           tblptru	equ	0xFF8
   426                           tblptrh	equ	0xFF7
   427                           tblptrl	equ	0xFF6
   428                           tablat	equ	0xFF5
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           postdec1	equ	0xFE5
   432                           fsr1l	equ	0xFE1
   433                           
   434                           	psect	bitbssCOMRAM
   435  0002F8                     __pbitbssCOMRAM:
   436                           	opt stack 0
   437  0002F8                     _flag:
   438                           	opt stack 0
   439  0002F8                     	ds	1
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	bssCOMRAM
   450  000001                     __pbssCOMRAM:
   451                           	opt stack 0
   452  000001                     _a:
   453                           	opt stack 0
   454  000001                     	ds	2
   455  000003                     _activity_menu:
   456                           	opt stack 0
   457  000003                     	ds	2
   458  000005                     _activity_pin:
   459                           	opt stack 0
   460  000005                     	ds	2
   461  000007                     _activity_submenu:
   462                           	opt stack 0
   463  000007                     	ds	2
   464  000009                     _b:
   465                           	opt stack 0
   466  000009                     	ds	2
   467  00000B                     _c:
   468                           	opt stack 0
   469  00000B                     	ds	2
   470  00000D                     _i:
   471                           	opt stack 0
   472  00000D                     	ds	2
   473  00000F                     _j:
   474                           	opt stack 0
   475  00000F                     	ds	2
   476  000011                     _k:
   477                           	opt stack 0
   478  000011                     	ds	2
   479  000013                     _locked:
   480                           	opt stack 0
   481  000013                     	ds	2
   482  000015                     _minuto:
   483                           	opt stack 0
   484  000015                     	ds	2
   485  000017                     _segundo:
   486                           	opt stack 0
   487  000017                     	ds	2
   488  000019                     _select:
   489                           	opt stack 0
   490  000019                     	ds	2
   491  00001B                     _select_op:
   492                           	opt stack 0
   493  00001B                     	ds	2
   494  00001D                     _selection:
   495                           	opt stack 0
   496  00001D                     	ds	2
   497  00001F                     _state:
   498                           	opt stack 0
   499  00001F                     	ds	2
   500  000021                     _key:
   501                           	opt stack 0
   502  000021                     	ds	1
   503  000022                     _RtccDate:
   504                           	opt stack 0
   505  000022                     	ds	4
   506  000026                     _RtccTime:
   507                           	opt stack 0
   508  000026                     	ds	4
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           postinc0	equ	0xFEE
   514                           wreg	equ	0xFE8
   515                           postdec1	equ	0xFE5
   516                           fsr1l	equ	0xFE1
   517                           
   518                           	psect	dataCOMRAM
   519  00004E                     __pdataCOMRAM:
   520                           	opt stack 0
   521  00004E                     _anio:
   522                           	opt stack 0
   523  00004E                     	ds	2
   524  000050                     _dia:
   525                           	opt stack 0
   526  000050                     	ds	2
   527  000052                     _diasem:
   528                           	opt stack 0
   529  000052                     	ds	2
   530  000054                     _hora:
   531                           	opt stack 0
   532  000054                     	ds	2
   533  000056                     _mes:
   534                           	opt stack 0
   535  000056                     	ds	2
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           postinc0	equ	0xFEE
   541                           wreg	equ	0xFE8
   542                           postdec1	equ	0xFE5
   543                           fsr1l	equ	0xFE1
   544                           
   545                           	psect	bssBANK0
   546  000060                     __pbssBANK0:
   547                           	opt stack 0
   548  000060                     _RtccAlrmTimeDate:
   549                           	opt stack 0
   550  000060                     	ds	8
   551  000068                     _RtccTimeDate:
   552                           	opt stack 0
   553  000068                     	ds	8
   554  000070                     _Rtcc_read_TimeDate:
   555                           	opt stack 0
   556  000070                     	ds	8
   557  000078                     _RtccTimeVal:
   558                           	opt stack 0
   559  000078                     	ds	4
   560  00007C                     _pin:
   561                           	opt stack 0
   562  00007C                     	ds	2
   563  00007E                     _pin_input:
   564                           	opt stack 0
   565  00007E                     	ds	2
   566  000080                     _buffer1:
   567                           	opt stack 0
   568  000080                     	ds	20
   569                           tblptru	equ	0xFF8
   570                           tblptrh	equ	0xFF7
   571                           tblptrl	equ	0xFF6
   572                           tablat	equ	0xFF5
   573                           postinc0	equ	0xFEE
   574                           wreg	equ	0xFE8
   575                           postdec1	equ	0xFE5
   576                           fsr1l	equ	0xFE1
   577                           
   578                           	psect	cstackCOMRAM
   579  00002A                     __pcstackCOMRAM:
   580                           	opt stack 0
   581  00002A                     ??_isdigit:
   582  00002A                     ??_lcd_send_nibble:
   583  00002A                     ?___wmul:
   584                           	opt stack 0
   585  00002A                     ?___awdiv:
   586                           	opt stack 0
   587  00002A                     ?___lwdiv:
   588                           	opt stack 0
   589  00002A                     Delay100TCYx@unit:
   590                           	opt stack 0
   591  00002A                     Delay1KTCYx@unit:
   592                           	opt stack 0
   593  00002A                     RtccReadDate@pDt:
   594                           	opt stack 0
   595  00002A                     RtccReadTime@pTm:
   596                           	opt stack 0
   597  00002A                     RtccWriteDate@pDt:
   598                           	opt stack 0
   599  00002A                     RtccWriteTime@pTm:
   600                           	opt stack 0
   601  00002A                     ___wmul@multiplier:
   602                           	opt stack 0
   603  00002A                     ___awdiv@dividend:
   604                           	opt stack 0
   605  00002A                     ___lwdiv@dividend:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x0
   609  00002A                     	ds	1
   610  00002B                     lcd_send_nibble@nibble:
   611                           	opt stack 0
   612  00002B                     _isdigit$2110:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x1
   616  00002B                     	ds	1
   617  00002C                     lcd_send_byte@n:
   618                           	opt stack 0
   619  00002C                     RtccWriteDate@di:
   620                           	opt stack 0
   621  00002C                     RtccWriteTime@di:
   622                           	opt stack 0
   623  00002C                     isdigit@c:
   624                           	opt stack 0
   625  00002C                     ___wmul@multiplicand:
   626                           	opt stack 0
   627  00002C                     ___awdiv@divisor:
   628                           	opt stack 0
   629  00002C                     ___lwdiv@divisor:
   630                           	opt stack 0
   631  00002C                     RtccReadDate@rTD1:
   632                           	opt stack 0
   633  00002C                     RtccReadTime@rTD1:
   634                           	opt stack 0
   635                           
   636                           ; 8 bytes @ 0x2
   637  00002C                     	ds	1
   638  00002D                     lcd_send_byte@address:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x3
   642  00002D                     	ds	1
   643  00002E                     lcd_init@i:
   644                           	opt stack 0
   645  00002E                     lcd_gotoxy@y:
   646                           	opt stack 0
   647  00002E                     lcd_comand@d:
   648                           	opt stack 0
   649  00002E                     RtccWriteDate@wasOn:
   650                           	opt stack 0
   651  00002E                     RtccWriteTime@wasOn:
   652                           	opt stack 0
   653  00002E                     ___awdiv@counter:
   654                           	opt stack 0
   655  00002E                     ___wmul@product:
   656                           	opt stack 0
   657  00002E                     ___lwdiv@quotient:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x4
   661  00002E                     	ds	1
   662  00002F                     lcd_gotoxy@x:
   663                           	opt stack 0
   664  00002F                     RtccWriteDate@wasAlrm:
   665                           	opt stack 0
   666  00002F                     RtccWriteTime@wasAlrm:
   667                           	opt stack 0
   668  00002F                     ___awdiv@sign:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0x5
   672  00002F                     	ds	1
   673  000030                     lcd_gotoxy@address:
   674                           	opt stack 0
   675  000030                     RtccWriteTime@wasWrEn:
   676                           	opt stack 0
   677  000030                     ___lwdiv@counter:
   678                           	opt stack 0
   679  000030                     RtccWriteDate@tempYear:
   680                           	opt stack 0
   681  000030                     ___awdiv@quotient:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x6
   685  000030                     	ds	1
   686  000031                     ?___lwmod:
   687                           	opt stack 0
   688  000031                     lcd_putc@c:
   689                           	opt stack 0
   690  000031                     RtccWriteTime@tempMinSec:
   691                           	opt stack 0
   692  000031                     ___lwmod@dividend:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x7
   696  000031                     	ds	1
   697  000032                     RtccWriteDate@wasWrEn:
   698                           	opt stack 0
   699  000032                     lcd_putrs@ptr:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x8
   703  000032                     	ds	1
   704  000033                     RtccWriteDate@tempDayMonth:
   705                           	opt stack 0
   706  000033                     RtccWriteTime@tempHourWDay:
   707                           	opt stack 0
   708  000033                     ___lwmod@divisor:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x9
   712  000033                     	ds	1
   713  000034                     lcd_write@column:
   714                           	opt stack 0
   715  000034                     RtccReadDate@rTD0:
   716                           	opt stack 0
   717  000034                     RtccReadTime@rTD0:
   718                           	opt stack 0
   719                           
   720                           ; 8 bytes @ 0xA
   721  000034                     	ds	1
   722  000035                     ___lwmod@counter:
   723                           	opt stack 0
   724  000035                     RtccWriteDate@tempHourWDay:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0xB
   728  000035                     	ds	1
   729  000036                     ?_sprintf:
   730                           	opt stack 0
   731  000036                     lcd_write@row:
   732                           	opt stack 0
   733  000036                     sprintf@sp:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0xC
   737  000036                     	ds	1
   738  000037                     
   739                           ; 0 bytes @ 0xD
   740  000037                     	ds	1
   741  000038                     lcd_write@string:
   742                           	opt stack 0
   743  000038                     sprintf@f:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0xE
   747  000038                     	ds	2
   748  00003A                     ??_menu_iterator:
   749  00003A                     ??_menu_submenu_iterator:
   750  00003A                     ??_button_B:
   751  00003A                     
   752                           ; 0 bytes @ 0x10
   753  00003A                     	ds	2
   754  00003C                     
   755                           ; 0 bytes @ 0x12
   756  00003C                     	ds	4
   757  000040                     ??_sprintf:
   758                           
   759                           ; 0 bytes @ 0x16
   760  000040                     	ds	4
   761  000044                     sprintf@ap:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x1A
   765  000044                     	ds	2
   766  000046                     sprintf@flag:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x1C
   770  000046                     	ds	1
   771  000047                     sprintf@val:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x1D
   775  000047                     	ds	2
   776  000049                     sprintf@prec:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x1F
   780  000049                     	ds	1
   781  00004A                     sprintf@width:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x20
   785  00004A                     	ds	2
   786  00004C                     sprintf@c:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x22
   790  00004C                     	ds	1
   791  00004D                     ??_keyboard_control:
   792                           
   793                           ; 0 bytes @ 0x23
   794  00004D                     	ds	1
   795  00004E                     tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           postdec1	equ	0xFE5
   802                           fsr1l	equ	0xFE1
   803                           
   804                           ; 0 bytes @ 0x24
   805 ;;
   806 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   807 ;;
   808 ;; *************** function _main *****************
   809 ;; Defined at:
   810 ;;		line 366 in file "main.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2  318[None  ] int 
   817 ;; Registers used:
   818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels required when called:   10
   830 ;; This function calls:
   831 ;;		_Read_RTC
   832 ;;		_home
   833 ;;		_home_clock_refresh
   834 ;;		_keyboard_control
   835 ;;		_setup
   836 ;; This function is called by:
   837 ;;		Startup code after reset
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text0
   842  002208                     __ptext0:
   843                           	opt stack 0
   844  002208                     _main:
   845                           	opt stack 21
   846                           
   847                           ;main.c: 368: setup();
   848                           
   849                           ; BSR set to: 15
   850                           ;incstack = 0
   851  002208  ECD6  F00D         	call	_setup	;wreg free
   852                           
   853                           ;main.c: 369: home();
   854  00220C  EC89  F011         	call	_home	;wreg free
   855  002210  D000               	goto	l3037
   856  002212                     l3037:
   857                           
   858                           ;main.c: 371: Read_RTC();
   859  002212  EC2C  F00C         	call	_Read_RTC	;wreg free
   860                           
   861                           ;main.c: 372: keyboard_control();
   862  002216  EC58  F00A         	call	_keyboard_control	;wreg free
   863                           
   864                           ;main.c: 373: if(activity_pin == 0 && activity_menu == 0 && activity_submenu == 0){home_
      +                          clock_refresh();}
   865  00221A  5005               	movf	_activity_pin,w,c
   866  00221C  1006               	iorwf	_activity_pin+1,w,c
   867  00221E  A4D8               	btfss	status,2,c
   868  002220  D7F8               	goto	l3037
   869  002222  5003               	movf	_activity_menu,w,c
   870  002224  1004               	iorwf	_activity_menu+1,w,c
   871  002226  A4D8               	btfss	status,2,c
   872  002228  D7F4               	goto	l3037
   873  00222A  5007               	movf	_activity_submenu,w,c
   874  00222C  1008               	iorwf	_activity_submenu+1,w,c
   875  00222E  A4D8               	btfss	status,2,c
   876  002230  D7F0               	goto	l3037
   877  002232  EC46  F00D         	call	_home_clock_refresh	;wreg free
   878  002236  D7ED               	goto	l3037
   879                           
   880                           ;main.c: 374: }
   881                           ;main.c: 376: return 0;
   882                           ;	Return value of _main is never used
   883  002238  EF00  F000         	goto	start
   884  00223C                     __end_of_main:
   885                           	opt stack 0
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           postdec1	equ	0xFE5
   893                           fsr1l	equ	0xFE1
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _setup *****************
   897 ;; Defined at:
   898 ;;		line 46 in file "main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    3
   919 ;; This function calls:
   920 ;;		_Write_RTC
   921 ;;		_lcd_comand
   922 ;;		_lcd_init
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text1
   929  001BAC                     __ptext1:
   930                           	opt stack 0
   931  001BAC                     _setup:
   932                           	opt stack 27
   933                           
   934                           ;main.c: 48: OSCTUNEbits.INTSRC=1;
   935                           
   936                           ;incstack = 0
   937  001BAC  8E9B               	bsf	3995,7,c	;volatile
   938                           
   939                           ;main.c: 49: OSCTUNEbits.PLLEN=0;
   940  001BAE  9C9B               	bcf	3995,6,c	;volatile
   941                           
   942                           ;main.c: 50: OSCCONbits.IRCF0=1;
   943  001BB0  88D3               	bsf	4051,4,c	;volatile
   944                           
   945                           ;main.c: 51: OSCCONbits.IRCF1=1;
   946  001BB2  8AD3               	bsf	4051,5,c	;volatile
   947                           
   948                           ;main.c: 52: OSCCONbits.IRCF2=1;
   949  001BB4  8CD3               	bsf	4051,6,c	;volatile
   950                           
   951                           ;main.c: 53: OSCCONbits.SCS0=0;
   952  001BB6  90D3               	bcf	4051,0,c	;volatile
   953                           
   954                           ;main.c: 54: OSCCONbits.SCS1=0;
   955  001BB8  92D3               	bcf	4051,1,c	;volatile
   956                           
   957                           ;main.c: 55: TRISA = 0b11110000;
   958  001BBA  0EF0               	movlw	240
   959  001BBC  6E92               	movwf	3986,c	;volatile
   960                           
   961                           ;main.c: 56: TRISB = 0;
   962  001BBE  0E00               	movlw	0
   963  001BC0  6E93               	movwf	3987,c	;volatile
   964                           
   965                           ;main.c: 57: TRISC = 0b00000111;
   966  001BC2  0E07               	movlw	7
   967  001BC4  6E94               	movwf	3988,c	;volatile
   968                           
   969                           ;main.c: 61: ANCON0=0b11111111;
   970  001BC6  010F               	movlb	15	; () banked
   971  001BC8  6948               	setf	72,b	;volatile
   972                           
   973                           ; BSR set to: 15
   974                           ;main.c: 63: ANCON1=0b11111111;
   975  001BCA  010F               	movlb	15	; () banked
   976  001BCC  6949               	setf	73,b	;volatile
   977                           
   978                           ;main.c: 64: ADCON0=0b00101101;
   979  001BCE  0E2D               	movlw	45
   980  001BD0  6EC2               	movwf	4034,c	;volatile
   981                           
   982                           ;main.c: 65: ADCON1=0b00010000;
   983  001BD2  0E10               	movlw	16
   984  001BD4  6EC1               	movwf	4033,c	;volatile
   985                           
   986                           ; BSR set to: 15
   987                           ;main.c: 66: RTCCFGbits.RTCEN=1;
   988  001BD6  010F               	movlb	15	; () banked
   989  001BD8  8F3F               	bsf	63,7,b	;volatile
   990                           
   991                           ; BSR set to: 15
   992                           ;main.c: 67: RTCCFGbits.RTCWREN=1;
   993  001BDA  010F               	movlb	15	; () banked
   994  001BDC  8B3F               	bsf	63,5,b	;volatile
   995                           
   996                           ; BSR set to: 15
   997                           ;main.c: 68: T1CONbits.T1OSCEN=1;
   998  001BDE  86CD               	bsf	4045,3,c	;volatile
   999                           
  1000                           ; BSR set to: 15
  1001                           ;main.c: 69: Write_RTC();
  1002  001BE0  ECFE  F008         	call	_Write_RTC	;wreg free
  1003                           
  1004                           ;main.c: 70: lcd_init();
  1005  001BE4  EC1C  F00E         	call	_lcd_init	;wreg free
  1006                           
  1007                           ;main.c: 71: lcd_comand(0b00001100);
  1008  001BE8  0E0C               	movlw	12
  1009  001BEA  ECFD  F011         	call	_lcd_comand
  1010                           
  1011                           ;main.c: 72: LATBbits.LATB1 = 1;;
  1012  001BEE  828A               	bsf	3978,1,c	;volatile
  1013                           
  1014                           ;main.c: 73: LATBbits.LATB0 = 1;;
  1015  001BF0  808A               	bsf	3978,0,c	;volatile
  1016                           
  1017                           ;main.c: 76: locked = 1;
  1018  001BF2  0E00               	movlw	0
  1019  001BF4  6E14               	movwf	_locked+1,c
  1020  001BF6  0E01               	movlw	1
  1021  001BF8  6E13               	movwf	_locked,c
  1022                           
  1023                           ;main.c: 77: select = 1;
  1024  001BFA  0E00               	movlw	0
  1025  001BFC  6E1A               	movwf	_select+1,c
  1026  001BFE  0E01               	movlw	1
  1027  001C00  6E19               	movwf	_select,c
  1028                           
  1029                           ;main.c: 78: selection = 1;
  1030  001C02  0E00               	movlw	0
  1031  001C04  6E1E               	movwf	_selection+1,c
  1032  001C06  0E01               	movlw	1
  1033  001C08  6E1D               	movwf	_selection,c
  1034                           
  1035                           ;main.c: 79: activity_pin = 0;
  1036  001C0A  0E00               	movlw	0
  1037  001C0C  6E06               	movwf	_activity_pin+1,c
  1038  001C0E  0E00               	movlw	0
  1039  001C10  6E05               	movwf	_activity_pin,c
  1040                           
  1041                           ;main.c: 80: activity_menu = 0;
  1042  001C12  0E00               	movlw	0
  1043  001C14  6E04               	movwf	_activity_menu+1,c
  1044  001C16  0E00               	movlw	0
  1045  001C18  6E03               	movwf	_activity_menu,c
  1046                           
  1047                           ;main.c: 81: activity_submenu = 0;
  1048  001C1A  0E00               	movlw	0
  1049  001C1C  6E08               	movwf	_activity_submenu+1,c
  1050  001C1E  0E00               	movlw	0
  1051  001C20  6E07               	movwf	_activity_submenu,c
  1052                           
  1053                           ;main.c: 82: select_op = 1;
  1054  001C22  0E00               	movlw	0
  1055  001C24  6E1C               	movwf	_select_op+1,c
  1056  001C26  0E01               	movlw	1
  1057  001C28  6E1B               	movwf	_select_op,c
  1058                           
  1059                           ;main.c: 83: pin = "1234";
  1060  001C2A  0E6E               	movlw	low STR_1
  1061  001C2C  0100               	movlb	0	; () banked
  1062  001C2E  6F7C               	movwf	_pin& (0+255),b
  1063  001C30  0E0F               	movlw	high STR_1
  1064  001C32  0100               	movlb	0	; () banked
  1065  001C34  6F7D               	movwf	(_pin+1)& (0+255),b
  1066                           
  1067                           ; BSR set to: 0
  1068  001C36  0012               	return		;funcret
  1069  001C38                     __end_of_setup:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function _Write_RTC *****************
  1082 ;; Defined at:
  1083 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;		None               void
  1090 ;; Registers used:
  1091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    2
  1104 ;; This function calls:
  1105 ;;		_RtccWrOn
  1106 ;;		_RtccWriteDate
  1107 ;;		_RtccWriteTime
  1108 ;;		___awdiv
  1109 ;; This function is called by:
  1110 ;;		_setup
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text2
  1115  0011FC                     __ptext2:
  1116                           	opt stack 0
  1117  0011FC                     _Write_RTC:
  1118                           	opt stack 27
  1119                           
  1120                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;incstack = 0
  1124  0011FC  ECD3  F011         	call	_RtccWrOn	;wreg free
  1125                           
  1126                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1127  001200  80A3               	bsf	4003,0,c	;volatile
  1128                           
  1129                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1130  001202  C017  F02A         	movff	_segundo,___awdiv@dividend
  1131  001206  C018  F02B         	movff	_segundo+1,___awdiv@dividend+1
  1132  00120A  0E00               	movlw	0
  1133  00120C  6E2D               	movwf	___awdiv@divisor+1,c
  1134  00120E  0E0A               	movlw	10
  1135  001210  6E2C               	movwf	___awdiv@divisor,c
  1136  001212  ECFB  F00C         	call	___awdiv	;wreg free
  1137  001216  502A               	movf	?___awdiv,w,c
  1138  001218  6E5D               	movwf	_segundo_d,c
  1139                           
  1140                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1141  00121A  505D               	movf	_segundo_d,w,c
  1142  00121C  0D0A               	mullw	10
  1143  00121E  50F3               	movf	prodl,w,c
  1144  001220  0800               	sublw	0
  1145  001222  2417               	addwf	_segundo,w,c
  1146  001224  6E5E               	movwf	_segundo_u,c
  1147                           
  1148                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1149  001226  505D               	movf	_segundo_d,w,c
  1150  001228  0D10               	mullw	16
  1151  00122A  50F3               	movf	prodl,w,c
  1152  00122C  245E               	addwf	_segundo_u,w,c
  1153  00122E  6E27               	movwf	_RtccTime+1,c
  1154                           
  1155                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1156  001230  C015  F02A         	movff	_minuto,___awdiv@dividend
  1157  001234  C016  F02B         	movff	_minuto+1,___awdiv@dividend+1
  1158  001238  0E00               	movlw	0
  1159  00123A  6E2D               	movwf	___awdiv@divisor+1,c
  1160  00123C  0E0A               	movlw	10
  1161  00123E  6E2C               	movwf	___awdiv@divisor,c
  1162  001240  ECFB  F00C         	call	___awdiv	;wreg free
  1163  001244  502A               	movf	?___awdiv,w,c
  1164  001246  6E5C               	movwf	_minuto_d,c
  1165                           
  1166                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1167  001248  505C               	movf	_minuto_d,w,c
  1168  00124A  0D0A               	mullw	10
  1169  00124C  50F3               	movf	prodl,w,c
  1170  00124E  0800               	sublw	0
  1171  001250  2415               	addwf	_minuto,w,c
  1172  001252  0100               	movlb	0	; () banked
  1173  001254  6F99               	movwf	_minuto_u& (0+255),b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1177  001256  505C               	movf	_minuto_d,w,c
  1178  001258  0D10               	mullw	16
  1179  00125A  50F3               	movf	prodl,w,c
  1180  00125C  0100               	movlb	0	; () banked
  1181  00125E  2599               	addwf	_minuto_u& (0+255),w,b
  1182  001260  6E28               	movwf	_RtccTime+2,c
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1186  001262  C054  F02A         	movff	_hora,___awdiv@dividend
  1187  001266  C055  F02B         	movff	_hora+1,___awdiv@dividend+1
  1188  00126A  0E00               	movlw	0
  1189  00126C  6E2D               	movwf	___awdiv@divisor+1,c
  1190  00126E  0E0A               	movlw	10
  1191  001270  6E2C               	movwf	___awdiv@divisor,c
  1192  001272  ECFB  F00C         	call	___awdiv	;wreg free
  1193  001276  502A               	movf	?___awdiv,w,c
  1194  001278  6E5A               	movwf	_hora_d,c
  1195                           
  1196                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1197  00127A  505A               	movf	_hora_d,w,c
  1198  00127C  0D0A               	mullw	10
  1199  00127E  50F3               	movf	prodl,w,c
  1200  001280  0800               	sublw	0
  1201  001282  2454               	addwf	_hora,w,c
  1202  001284  0100               	movlb	0	; () banked
  1203  001286  6F97               	movwf	_hora_u& (0+255),b
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1207  001288  505A               	movf	_hora_d,w,c
  1208  00128A  0D10               	mullw	16
  1209  00128C  50F3               	movf	prodl,w,c
  1210  00128E  0100               	movlb	0	; () banked
  1211  001290  2597               	addwf	_hora_u& (0+255),w,b
  1212  001292  6E29               	movwf	_RtccTime+3,c
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1216  001294  C04E  F02A         	movff	_anio,___awdiv@dividend
  1217  001298  C04F  F02B         	movff	_anio+1,___awdiv@dividend+1
  1218  00129C  0E00               	movlw	0
  1219  00129E  6E2D               	movwf	___awdiv@divisor+1,c
  1220  0012A0  0E0A               	movlw	10
  1221  0012A2  6E2C               	movwf	___awdiv@divisor,c
  1222  0012A4  ECFB  F00C         	call	___awdiv	;wreg free
  1223  0012A8  502A               	movf	?___awdiv,w,c
  1224  0012AA  6E58               	movwf	_anio_d,c
  1225                           
  1226                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1227  0012AC  5058               	movf	_anio_d,w,c
  1228  0012AE  0D0A               	mullw	10
  1229  0012B0  50F3               	movf	prodl,w,c
  1230  0012B2  0800               	sublw	0
  1231  0012B4  244E               	addwf	_anio,w,c
  1232  0012B6  0100               	movlb	0	; () banked
  1233  0012B8  6F94               	movwf	_anio_u& (0+255),b
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1237  0012BA  5058               	movf	_anio_d,w,c
  1238  0012BC  0D10               	mullw	16
  1239  0012BE  50F3               	movf	prodl,w,c
  1240  0012C0  0100               	movlb	0	; () banked
  1241  0012C2  2594               	addwf	_anio_u& (0+255),w,b
  1242  0012C4  6E25               	movwf	_RtccDate+3,c
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1246  0012C6  C056  F02A         	movff	_mes,___awdiv@dividend
  1247  0012CA  C057  F02B         	movff	_mes+1,___awdiv@dividend+1
  1248  0012CE  0E00               	movlw	0
  1249  0012D0  6E2D               	movwf	___awdiv@divisor+1,c
  1250  0012D2  0E0A               	movlw	10
  1251  0012D4  6E2C               	movwf	___awdiv@divisor,c
  1252  0012D6  ECFB  F00C         	call	___awdiv	;wreg free
  1253  0012DA  502A               	movf	?___awdiv,w,c
  1254  0012DC  6E5B               	movwf	_mes_d,c
  1255                           
  1256                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1257  0012DE  505B               	movf	_mes_d,w,c
  1258  0012E0  0D0A               	mullw	10
  1259  0012E2  50F3               	movf	prodl,w,c
  1260  0012E4  0800               	sublw	0
  1261  0012E6  2456               	addwf	_mes,w,c
  1262  0012E8  0100               	movlb	0	; () banked
  1263  0012EA  6F98               	movwf	_mes_u& (0+255),b
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1267  0012EC  505B               	movf	_mes_d,w,c
  1268  0012EE  0D10               	mullw	16
  1269  0012F0  50F3               	movf	prodl,w,c
  1270  0012F2  0100               	movlb	0	; () banked
  1271  0012F4  2598               	addwf	_mes_u& (0+255),w,b
  1272  0012F6  6E24               	movwf	_RtccDate+2,c
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1276  0012F8  C050  F02A         	movff	_dia,___awdiv@dividend
  1277  0012FC  C051  F02B         	movff	_dia+1,___awdiv@dividend+1
  1278  001300  0E00               	movlw	0
  1279  001302  6E2D               	movwf	___awdiv@divisor+1,c
  1280  001304  0E0A               	movlw	10
  1281  001306  6E2C               	movwf	___awdiv@divisor,c
  1282  001308  ECFB  F00C         	call	___awdiv	;wreg free
  1283  00130C  502A               	movf	?___awdiv,w,c
  1284  00130E  6E59               	movwf	_fecha_d,c
  1285                           
  1286                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1287  001310  5059               	movf	_fecha_d,w,c
  1288  001312  0D0A               	mullw	10
  1289  001314  50F3               	movf	prodl,w,c
  1290  001316  0800               	sublw	0
  1291  001318  2450               	addwf	_dia,w,c
  1292  00131A  0100               	movlb	0	; () banked
  1293  00131C  6F96               	movwf	_fecha_u& (0+255),b
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1297  00131E  5059               	movf	_fecha_d,w,c
  1298  001320  0D10               	mullw	16
  1299  001322  50F3               	movf	prodl,w,c
  1300  001324  0100               	movlb	0	; () banked
  1301  001326  2596               	addwf	_fecha_u& (0+255),w,b
  1302  001328  6E23               	movwf	_RtccDate+1,c
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1306  00132A  C052  F095         	movff	_diasem,_dia_semana
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1310  00132E  C052  F022         	movff	_diasem,_RtccDate
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1314  001332  0E26               	movlw	low _RtccTime
  1315  001334  6E2A               	movwf	RtccWriteTime@pTm,c
  1316  001336  0E00               	movlw	high _RtccTime
  1317  001338  6E2B               	movwf	RtccWriteTime@pTm+1,c
  1318  00133A  0E01               	movlw	1
  1319  00133C  6E2C               	movwf	RtccWriteTime@di,c
  1320  00133E  ECA6  F00B         	call	_RtccWriteTime	;wreg free
  1321                           
  1322                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1323  001342  0E22               	movlw	low _RtccDate
  1324  001344  6E2A               	movwf	RtccWriteDate@pDt,c
  1325  001346  0E00               	movlw	high _RtccDate
  1326  001348  6E2B               	movwf	RtccWriteDate@pDt+1,c
  1327  00134A  0E01               	movlw	1
  1328  00134C  6E2C               	movwf	RtccWriteDate@di,c
  1329  00134E  EC03  F00B         	call	_RtccWriteDate	;wreg free
  1330                           
  1331                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1332  001352  010F               	movlb	15	; () banked
  1333  001354  8F3F               	bsf	63,7,b	;volatile
  1334                           
  1335                           ; BSR set to: 15
  1336  001356  0012               	return		;funcret
  1337  001358                     __end_of_Write_RTC:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           tblptrl	equ	0xFF6
  1342                           tablat	equ	0xFF5
  1343                           prodl	equ	0xFF3
  1344                           postinc0	equ	0xFEE
  1345                           wreg	equ	0xFE8
  1346                           postdec1	equ	0xFE5
  1347                           fsr1l	equ	0xFE1
  1348                           status	equ	0xFD8
  1349                           
  1350 ;; *************** function ___awdiv *****************
  1351 ;; Defined at:
  1352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  dividend        2    0[COMRAM] int 
  1355 ;;  divisor         2    2[COMRAM] int 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  quotient        2    6[COMRAM] int 
  1358 ;;  sign            1    5[COMRAM] unsigned char 
  1359 ;;  counter         1    4[COMRAM] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  2    0[COMRAM] int 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;Total ram usage:        8 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_Write_RTC
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text3
  1383  0019F6                     __ptext3:
  1384                           	opt stack 0
  1385  0019F6                     ___awdiv:
  1386                           	opt stack 28
  1387                           
  1388                           ; BSR set to: 15
  1389                           ;incstack = 0
  1390  0019F6  0E00               	movlw	0
  1391  0019F8  6E2F               	movwf	___awdiv@sign,c
  1392  0019FA  AE2D               	btfss	___awdiv@divisor+1,7,c
  1393  0019FC  D007               	goto	l2651
  1394  0019FE  6C2C               	negf	___awdiv@divisor,c
  1395  001A00  1E2D               	comf	___awdiv@divisor+1,f,c
  1396  001A02  B0D8               	btfsc	status,0,c
  1397  001A04  2A2D               	incf	___awdiv@divisor+1,f,c
  1398  001A06  0E01               	movlw	1
  1399  001A08  6E2F               	movwf	___awdiv@sign,c
  1400  001A0A  D000               	goto	l2651
  1401  001A0C                     l2651:
  1402  001A0C  AE2B               	btfss	___awdiv@dividend+1,7,c
  1403  001A0E  D007               	goto	l2657
  1404  001A10  6C2A               	negf	___awdiv@dividend,c
  1405  001A12  1E2B               	comf	___awdiv@dividend+1,f,c
  1406  001A14  B0D8               	btfsc	status,0,c
  1407  001A16  2A2B               	incf	___awdiv@dividend+1,f,c
  1408  001A18  0E01               	movlw	1
  1409  001A1A  1A2F               	xorwf	___awdiv@sign,f,c
  1410  001A1C  D000               	goto	l2657
  1411  001A1E                     l2657:
  1412  001A1E  0E00               	movlw	0
  1413  001A20  6E31               	movwf	___awdiv@quotient+1,c
  1414  001A22  0E00               	movlw	0
  1415  001A24  6E30               	movwf	___awdiv@quotient,c
  1416  001A26  502C               	movf	___awdiv@divisor,w,c
  1417  001A28  102D               	iorwf	___awdiv@divisor+1,w,c
  1418  001A2A  B4D8               	btfsc	status,2,c
  1419  001A2C  D021               	goto	l2679
  1420  001A2E  0E01               	movlw	1
  1421  001A30  6E2E               	movwf	___awdiv@counter,c
  1422  001A32  D005               	goto	l2665
  1423  001A34                     l2663:
  1424  001A34  90D8               	bcf	status,0,c
  1425  001A36  362C               	rlcf	___awdiv@divisor,f,c
  1426  001A38  362D               	rlcf	___awdiv@divisor+1,f,c
  1427  001A3A  2A2E               	incf	___awdiv@counter,f,c
  1428  001A3C  D000               	goto	l2665
  1429  001A3E                     l2665:
  1430  001A3E  BE2D               	btfsc	___awdiv@divisor+1,7,c
  1431  001A40  D002               	goto	l2667
  1432  001A42  D7F8               	goto	l2663
  1433  001A44  D000               	goto	l2667
  1434  001A46                     l2667:
  1435  001A46  90D8               	bcf	status,0,c
  1436  001A48  3630               	rlcf	___awdiv@quotient,f,c
  1437  001A4A  3631               	rlcf	___awdiv@quotient+1,f,c
  1438  001A4C  502C               	movf	___awdiv@divisor,w,c
  1439  001A4E  5C2A               	subwf	___awdiv@dividend,w,c
  1440  001A50  502D               	movf	___awdiv@divisor+1,w,c
  1441  001A52  582B               	subwfb	___awdiv@dividend+1,w,c
  1442  001A54  A0D8               	btfss	status,0,c
  1443  001A56  D006               	goto	l2675
  1444  001A58  502C               	movf	___awdiv@divisor,w,c
  1445  001A5A  5E2A               	subwf	___awdiv@dividend,f,c
  1446  001A5C  502D               	movf	___awdiv@divisor+1,w,c
  1447  001A5E  5A2B               	subwfb	___awdiv@dividend+1,f,c
  1448  001A60  8030               	bsf	___awdiv@quotient,0,c
  1449  001A62  D000               	goto	l2675
  1450  001A64                     l2675:
  1451  001A64  90D8               	bcf	status,0,c
  1452  001A66  322D               	rrcf	___awdiv@divisor+1,f,c
  1453  001A68  322C               	rrcf	___awdiv@divisor,f,c
  1454  001A6A  2E2E               	decfsz	___awdiv@counter,f,c
  1455  001A6C  D7EC               	goto	l2667
  1456  001A6E  D000               	goto	l2679
  1457  001A70                     l2679:
  1458  001A70  502F               	movf	___awdiv@sign,w,c
  1459  001A72  B4D8               	btfsc	status,2,c
  1460  001A74  D005               	goto	l2683
  1461  001A76  6C30               	negf	___awdiv@quotient,c
  1462  001A78  1E31               	comf	___awdiv@quotient+1,f,c
  1463  001A7A  B0D8               	btfsc	status,0,c
  1464  001A7C  2A31               	incf	___awdiv@quotient+1,f,c
  1465  001A7E  D000               	goto	l2683
  1466  001A80                     l2683:
  1467  001A80  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  1468  001A84  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  1469  001A88  0012               	return	
  1470  001A8A  0012               	return		;funcret
  1471  001A8C                     __end_of___awdiv:
  1472                           	opt stack 0
  1473                           tblptru	equ	0xFF8
  1474                           tblptrh	equ	0xFF7
  1475                           tblptrl	equ	0xFF6
  1476                           tablat	equ	0xFF5
  1477                           prodl	equ	0xFF3
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1l	equ	0xFE1
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function _RtccWriteTime *****************
  1485 ;; Defined at:
  1486 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  pTm             2    0[COMRAM] PTR const struct .
  1489 ;;		 -> RtccTime(4), 
  1490 ;;  di              1    2[COMRAM] enum E7121
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  tempHourWDay    2    9[COMRAM] struct .
  1493 ;;  tempMinSec      2    7[COMRAM] struct .
  1494 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1495 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1496 ;;  wasOn           1    4[COMRAM] enum E7121
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      enum E7337
  1499 ;; Registers used:
  1500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1506 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1507 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1510 ;;Total ram usage:       11 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    1
  1513 ;; This function calls:
  1514 ;;		_RtccWrOn
  1515 ;; This function is called by:
  1516 ;;		_Write_RTC
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text4
  1521  00174C                     __ptext4:
  1522                           	opt stack 0
  1523  00174C                     _RtccWriteTime:
  1524                           	opt stack 27
  1525                           
  1526                           ;incstack = 0
  1527  00174C  0E00               	movlw	0
  1528  00174E  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1529  001750  EE20 F002          	lfsr	2,2
  1530  001754  502A               	movf	RtccWriteTime@pTm,w,c
  1531  001756  26D9               	addwf	fsr2l,f,c
  1532  001758  502B               	movf	RtccWriteTime@pTm+1,w,c
  1533  00175A  22DA               	addwfc	fsr2h,f,c
  1534  00175C  0E5A               	movlw	90
  1535  00175E  60DF               	cpfslt	indf2,c
  1536  001760  0012               	return	
  1537  001762  EE20 F001          	lfsr	2,1
  1538  001766  502A               	movf	RtccWriteTime@pTm,w,c
  1539  001768  26D9               	addwf	fsr2l,f,c
  1540  00176A  502B               	movf	RtccWriteTime@pTm+1,w,c
  1541  00176C  22DA               	addwfc	fsr2h,f,c
  1542  00176E  0E5A               	movlw	90
  1543  001770  60DF               	cpfslt	indf2,c
  1544  001772  0012               	return	
  1545  001774  EE20 F003          	lfsr	2,3
  1546  001778  502A               	movf	RtccWriteTime@pTm,w,c
  1547  00177A  26D9               	addwf	fsr2l,f,c
  1548  00177C  502B               	movf	RtccWriteTime@pTm+1,w,c
  1549  00177E  22DA               	addwfc	fsr2h,f,c
  1550  001780  0E24               	movlw	36
  1551  001782  64DF               	cpfsgt	indf2,c
  1552  001784  D002               	goto	l2321
  1553  001786  0012               	return	
  1554                           
  1555                           ;	Return value of _RtccWriteTime is never used
  1556  001788  0012               	return	
  1557  00178A                     l2321:
  1558  00178A  EE20 F002          	lfsr	2,2
  1559  00178E  502A               	movf	RtccWriteTime@pTm,w,c
  1560  001790  26D9               	addwf	fsr2l,f,c
  1561  001792  502B               	movf	RtccWriteTime@pTm+1,w,c
  1562  001794  22DA               	addwfc	fsr2h,f,c
  1563  001796  50DF               	movf	indf2,w,c
  1564  001798  6E32               	movwf	RtccWriteTime@tempMinSec+1,c
  1565  00179A  EE20 F001          	lfsr	2,1
  1566  00179E  502A               	movf	RtccWriteTime@pTm,w,c
  1567  0017A0  26D9               	addwf	fsr2l,f,c
  1568  0017A2  502B               	movf	RtccWriteTime@pTm+1,w,c
  1569  0017A4  22DA               	addwfc	fsr2h,f,c
  1570  0017A6  50DF               	movf	indf2,w,c
  1571  0017A8  6E31               	movwf	RtccWriteTime@tempMinSec,c
  1572  0017AA  502C               	movf	RtccWriteTime@di,w,c
  1573  0017AC  B4D8               	btfsc	status,2,c
  1574  0017AE  D002               	goto	l2327
  1575  0017B0  9CF2               	bcf	intcon,6,c	;volatile
  1576  0017B2  D000               	goto	l2327
  1577  0017B4                     l2327:
  1578  0017B4  0E00               	movlw	0
  1579  0017B6  BB3F               	btfsc	63,5,b	;volatile
  1580  0017B8  0E01               	movlw	1
  1581  0017BA  6E30               	movwf	RtccWriteTime@wasWrEn,c
  1582  0017BC  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1583  0017BE  A4D8               	btfss	status,2,c
  1584  0017C0  D003               	goto	l2331
  1585  0017C2  ECD3  F011         	call	_RtccWrOn	;wreg free
  1586  0017C6  D000               	goto	l2331
  1587  0017C8                     l2331:
  1588  0017C8  0E00               	movlw	0
  1589  0017CA  BF3F               	btfsc	63,7,b	;volatile
  1590  0017CC  0E01               	movlw	1
  1591  0017CE  6E2E               	movwf	RtccWriteTime@wasOn,c
  1592  0017D0  502E               	movf	RtccWriteTime@wasOn,w,c
  1593  0017D2  B4D8               	btfsc	status,2,c
  1594  0017D4  D007               	goto	l2337
  1595  0017D6  0E00               	movlw	0
  1596  0017D8  BE91               	btfsc	3985,7,c	;volatile
  1597  0017DA  0E01               	movlw	1
  1598  0017DC  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1599  0017DE  010F               	movlb	15	; () banked
  1600  0017E0  9F3F               	bcf	63,7,b	;volatile
  1601  0017E2  D000               	goto	l2337
  1602  0017E4                     l2337:
  1603  0017E4  0EFC               	movlw	252
  1604  0017E6  010F               	movlb	15	; () banked
  1605  0017E8  173F               	andwf	63,f,b	;volatile
  1606  0017EA  010F               	movlb	15	; () banked
  1607  0017EC  813F               	bsf	63,0,b	;volatile
  1608                           
  1609                           ; BSR set to: 15
  1610  0017EE  CF98 F033          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1611                           
  1612                           ; BSR set to: 15
  1613  0017F2  CF99 F034          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1614                           
  1615                           ; BSR set to: 15
  1616  0017F6  EE20 F003          	lfsr	2,3
  1617  0017FA  502A               	movf	RtccWriteTime@pTm,w,c
  1618  0017FC  26D9               	addwf	fsr2l,f,c
  1619  0017FE  502B               	movf	RtccWriteTime@pTm+1,w,c
  1620  001800  22DA               	addwfc	fsr2h,f,c
  1621  001802  50DF               	movf	indf2,w,c
  1622  001804  6E33               	movwf	RtccWriteTime@tempHourWDay,c
  1623                           
  1624                           ; BSR set to: 15
  1625  001806  0EFC               	movlw	252
  1626  001808  010F               	movlb	15	; () banked
  1627  00180A  173F               	andwf	63,f,b	;volatile
  1628                           
  1629                           ; BSR set to: 15
  1630  00180C  010F               	movlb	15	; () banked
  1631  00180E  813F               	bsf	63,0,b	;volatile
  1632                           
  1633                           ; BSR set to: 15
  1634  001810  C033  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1635                           
  1636                           ; BSR set to: 15
  1637  001814  C034  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1638                           
  1639                           ; BSR set to: 15
  1640  001818  C031  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1641                           
  1642                           ; BSR set to: 15
  1643  00181C  C032  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1644                           
  1645                           ; BSR set to: 15
  1646  001820  502E               	movf	RtccWriteTime@wasOn,w,c
  1647  001822  B4D8               	btfsc	status,2,c
  1648  001824  D00D               	goto	l2369
  1649                           
  1650                           ; BSR set to: 15
  1651  001826  010F               	movlb	15	; () banked
  1652  001828  8F3F               	bsf	63,7,b	;volatile
  1653                           
  1654                           ; BSR set to: 15
  1655  00182A  502F               	movf	RtccWriteTime@wasAlrm,w,c
  1656  00182C  B4D8               	btfsc	status,2,c
  1657  00182E  D002               	goto	l2365
  1658                           
  1659                           ; BSR set to: 15
  1660  001830  8E91               	bsf	3985,7,c	;volatile
  1661  001832  D000               	goto	l2365
  1662  001834                     l2365:
  1663                           
  1664                           ; BSR set to: 15
  1665  001834  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1666  001836  B4D8               	btfsc	status,2,c
  1667  001838  D009               	goto	l2373
  1668                           
  1669                           ; BSR set to: 15
  1670  00183A  ECD3  F011         	call	_RtccWrOn	;wreg free
  1671  00183E  D006               	goto	l2373
  1672  001840                     l2369:
  1673  001840  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1674  001842  A4D8               	btfss	status,2,c
  1675  001844  D003               	goto	l2373
  1676  001846  010F               	movlb	15	; () banked
  1677  001848  9B3F               	bcf	63,5,b	;volatile
  1678                           
  1679                           ; BSR set to: 15
  1680  00184A  D000               	goto	l2373
  1681  00184C                     l2373:
  1682  00184C  502C               	movf	RtccWriteTime@di,w,c
  1683  00184E  B4D8               	btfsc	status,2,c
  1684  001850  0012               	return	
  1685  001852  8CF2               	bsf	intcon,6,c	;volatile
  1686  001854  0012               	return	
  1687                           
  1688                           ;	Return value of _RtccWriteTime is never used
  1689  001856  0012               	return		;funcret
  1690  001858                     __end_of_RtccWriteTime:
  1691                           	opt stack 0
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           prodl	equ	0xFF3
  1697                           intcon	equ	0xFF2
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           postdec1	equ	0xFE5
  1701                           fsr1l	equ	0xFE1
  1702                           indf2	equ	0xFDF
  1703                           fsr2h	equ	0xFDA
  1704                           fsr2l	equ	0xFD9
  1705                           status	equ	0xFD8
  1706                           
  1707 ;; *************** function _RtccWriteDate *****************
  1708 ;; Defined at:
  1709 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  pDt             2    0[COMRAM] PTR const struct .
  1712 ;;		 -> RtccDate(4), 
  1713 ;;  di              1    2[COMRAM] enum E7121
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  tempHourWDay    2   11[COMRAM] struct .
  1716 ;;  tempDayMonth    2    9[COMRAM] struct .
  1717 ;;  tempYear        2    6[COMRAM] struct .
  1718 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1719 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1720 ;;  wasOn           1    4[COMRAM] enum E7121
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      enum E7337
  1723 ;; Registers used:
  1724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1730 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1733 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;Total ram usage:       13 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    1
  1737 ;; This function calls:
  1738 ;;		_RtccWrOn
  1739 ;; This function is called by:
  1740 ;;		_Write_RTC
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text5
  1745  001606                     __ptext5:
  1746                           	opt stack 0
  1747  001606                     _RtccWriteDate:
  1748                           	opt stack 27
  1749                           
  1750                           ;incstack = 0
  1751  001606  0E00               	movlw	0
  1752  001608  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  1753  00160A  EE20 F002          	lfsr	2,2
  1754  00160E  502A               	movf	RtccWriteDate@pDt,w,c
  1755  001610  26D9               	addwf	fsr2l,f,c
  1756  001612  502B               	movf	RtccWriteDate@pDt+1,w,c
  1757  001614  22DA               	addwfc	fsr2h,f,c
  1758  001616  0E13               	movlw	19
  1759  001618  60DF               	cpfslt	indf2,c
  1760  00161A  0012               	return	
  1761  00161C  EE20 F002          	lfsr	2,2
  1762  001620  502A               	movf	RtccWriteDate@pDt,w,c
  1763  001622  26D9               	addwf	fsr2l,f,c
  1764  001624  502B               	movf	RtccWriteDate@pDt+1,w,c
  1765  001626  22DA               	addwfc	fsr2h,f,c
  1766  001628  50DF               	movf	indf2,w,c
  1767  00162A  B4D8               	btfsc	status,2,c
  1768  00162C  0012               	return	
  1769  00162E  EE20 F001          	lfsr	2,1
  1770  001632  502A               	movf	RtccWriteDate@pDt,w,c
  1771  001634  26D9               	addwf	fsr2l,f,c
  1772  001636  502B               	movf	RtccWriteDate@pDt+1,w,c
  1773  001638  22DA               	addwfc	fsr2h,f,c
  1774  00163A  0E32               	movlw	50
  1775  00163C  60DF               	cpfslt	indf2,c
  1776  00163E  0012               	return	
  1777  001640  EE20 F001          	lfsr	2,1
  1778  001644  502A               	movf	RtccWriteDate@pDt,w,c
  1779  001646  26D9               	addwf	fsr2l,f,c
  1780  001648  502B               	movf	RtccWriteDate@pDt+1,w,c
  1781  00164A  22DA               	addwfc	fsr2h,f,c
  1782  00164C  50DF               	movf	indf2,w,c
  1783  00164E  B4D8               	btfsc	status,2,c
  1784  001650  0012               	return	
  1785  001652  EE20 F003          	lfsr	2,3
  1786  001656  502A               	movf	RtccWriteDate@pDt,w,c
  1787  001658  26D9               	addwf	fsr2l,f,c
  1788  00165A  502B               	movf	RtccWriteDate@pDt+1,w,c
  1789  00165C  22DA               	addwfc	fsr2h,f,c
  1790  00165E  0E99               	movlw	153
  1791  001660  64DF               	cpfsgt	indf2,c
  1792  001662  D002               	goto	l2389
  1793  001664  0012               	return	
  1794                           
  1795                           ;	Return value of _RtccWriteDate is never used
  1796  001666  0012               	return	
  1797  001668                     l2389:
  1798  001668  EE20 F003          	lfsr	2,3
  1799  00166C  502A               	movf	RtccWriteDate@pDt,w,c
  1800  00166E  26D9               	addwf	fsr2l,f,c
  1801  001670  502B               	movf	RtccWriteDate@pDt+1,w,c
  1802  001672  22DA               	addwfc	fsr2h,f,c
  1803  001674  50DF               	movf	indf2,w,c
  1804  001676  6E30               	movwf	RtccWriteDate@tempYear,c
  1805  001678  EE20 F001          	lfsr	2,1
  1806  00167C  502A               	movf	RtccWriteDate@pDt,w,c
  1807  00167E  26D9               	addwf	fsr2l,f,c
  1808  001680  502B               	movf	RtccWriteDate@pDt+1,w,c
  1809  001682  22DA               	addwfc	fsr2h,f,c
  1810  001684  50DF               	movf	indf2,w,c
  1811  001686  6E33               	movwf	RtccWriteDate@tempDayMonth,c
  1812  001688  EE20 F002          	lfsr	2,2
  1813  00168C  502A               	movf	RtccWriteDate@pDt,w,c
  1814  00168E  26D9               	addwf	fsr2l,f,c
  1815  001690  502B               	movf	RtccWriteDate@pDt+1,w,c
  1816  001692  22DA               	addwfc	fsr2h,f,c
  1817  001694  50DF               	movf	indf2,w,c
  1818  001696  6E34               	movwf	RtccWriteDate@tempDayMonth+1,c
  1819  001698  502C               	movf	RtccWriteDate@di,w,c
  1820  00169A  B4D8               	btfsc	status,2,c
  1821  00169C  D002               	goto	l2395
  1822  00169E  9CF2               	bcf	intcon,6,c	;volatile
  1823  0016A0  D000               	goto	l2395
  1824  0016A2                     l2395:
  1825  0016A2  0E00               	movlw	0
  1826  0016A4  BB3F               	btfsc	63,5,b	;volatile
  1827  0016A6  0E01               	movlw	1
  1828  0016A8  6E32               	movwf	RtccWriteDate@wasWrEn,c
  1829  0016AA  5032               	movf	RtccWriteDate@wasWrEn,w,c
  1830  0016AC  A4D8               	btfss	status,2,c
  1831  0016AE  D003               	goto	l2399
  1832  0016B0  ECD3  F011         	call	_RtccWrOn	;wreg free
  1833  0016B4  D000               	goto	l2399
  1834  0016B6                     l2399:
  1835  0016B6  0E00               	movlw	0
  1836  0016B8  BF3F               	btfsc	63,7,b	;volatile
  1837  0016BA  0E01               	movlw	1
  1838  0016BC  6E2E               	movwf	RtccWriteDate@wasOn,c
  1839  0016BE  502E               	movf	RtccWriteDate@wasOn,w,c
  1840  0016C0  B4D8               	btfsc	status,2,c
  1841  0016C2  D007               	goto	l2405
  1842  0016C4  0E00               	movlw	0
  1843  0016C6  BE91               	btfsc	3985,7,c	;volatile
  1844  0016C8  0E01               	movlw	1
  1845  0016CA  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  1846  0016CC  010F               	movlb	15	; () banked
  1847  0016CE  9F3F               	bcf	63,7,b	;volatile
  1848  0016D0  D000               	goto	l2405
  1849  0016D2                     l2405:
  1850  0016D2  0EFC               	movlw	252
  1851  0016D4  010F               	movlb	15	; () banked
  1852  0016D6  173F               	andwf	63,f,b	;volatile
  1853  0016D8  010F               	movlb	15	; () banked
  1854  0016DA  813F               	bsf	63,0,b	;volatile
  1855                           
  1856                           ; BSR set to: 15
  1857  0016DC  CF98 F035          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  1858                           
  1859                           ; BSR set to: 15
  1860  0016E0  CF99 F036          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  1861                           
  1862                           ; BSR set to: 15
  1863  0016E4  C02A  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  1864  0016E8  C02B  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  1865  0016EC  50DF               	movf	indf2,w,c
  1866  0016EE  6E36               	movwf	RtccWriteDate@tempHourWDay+1,c
  1867                           
  1868                           ; BSR set to: 15
  1869  0016F0  0EFC               	movlw	252
  1870  0016F2  010F               	movlb	15	; () banked
  1871  0016F4  173F               	andwf	63,f,b	;volatile
  1872                           
  1873                           ; BSR set to: 15
  1874  0016F6  0E03               	movlw	3
  1875  0016F8  010F               	movlb	15	; () banked
  1876  0016FA  133F               	iorwf	63,f,b	;volatile
  1877                           
  1878                           ; BSR set to: 15
  1879  0016FC  C030  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  1880                           
  1881                           ; BSR set to: 15
  1882  001700  C031  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  1883                           
  1884                           ; BSR set to: 15
  1885  001704  C033  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  1886                           
  1887                           ; BSR set to: 15
  1888  001708  C034  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  1889                           
  1890                           ; BSR set to: 15
  1891  00170C  C035  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  1892                           
  1893                           ; BSR set to: 15
  1894  001710  C036  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  1895                           
  1896                           ; BSR set to: 15
  1897  001714  502E               	movf	RtccWriteDate@wasOn,w,c
  1898  001716  B4D8               	btfsc	status,2,c
  1899  001718  D00D               	goto	l2441
  1900                           
  1901                           ; BSR set to: 15
  1902  00171A  010F               	movlb	15	; () banked
  1903  00171C  8F3F               	bsf	63,7,b	;volatile
  1904                           
  1905                           ; BSR set to: 15
  1906  00171E  502F               	movf	RtccWriteDate@wasAlrm,w,c
  1907  001720  B4D8               	btfsc	status,2,c
  1908  001722  D002               	goto	l2437
  1909                           
  1910                           ; BSR set to: 15
  1911  001724  8E91               	bsf	3985,7,c	;volatile
  1912  001726  D000               	goto	l2437
  1913  001728                     l2437:
  1914                           
  1915                           ; BSR set to: 15
  1916  001728  5032               	movf	RtccWriteDate@wasWrEn,w,c
  1917  00172A  B4D8               	btfsc	status,2,c
  1918  00172C  D009               	goto	l2445
  1919                           
  1920                           ; BSR set to: 15
  1921  00172E  ECD3  F011         	call	_RtccWrOn	;wreg free
  1922  001732  D006               	goto	l2445
  1923  001734                     l2441:
  1924  001734  5032               	movf	RtccWriteDate@wasWrEn,w,c
  1925  001736  A4D8               	btfss	status,2,c
  1926  001738  D003               	goto	l2445
  1927  00173A  010F               	movlb	15	; () banked
  1928  00173C  9B3F               	bcf	63,5,b	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931  00173E  D000               	goto	l2445
  1932  001740                     l2445:
  1933  001740  502C               	movf	RtccWriteDate@di,w,c
  1934  001742  B4D8               	btfsc	status,2,c
  1935  001744  0012               	return	
  1936  001746  9CF2               	bcf	intcon,6,c	;volatile
  1937  001748  0012               	return	
  1938                           
  1939                           ;	Return value of _RtccWriteDate is never used
  1940  00174A  0012               	return		;funcret
  1941  00174C                     __end_of_RtccWriteDate:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodl	equ	0xFF3
  1948                           intcon	equ	0xFF2
  1949                           postinc0	equ	0xFEE
  1950                           wreg	equ	0xFE8
  1951                           postdec1	equ	0xFE5
  1952                           fsr1l	equ	0xFE1
  1953                           indf2	equ	0xFDF
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _RtccWrOn *****************
  1959 ;; Defined at:
  1960 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  data            2    0        unsigned int 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;		None               void
  1967 ;; Registers used:
  1968 ;;		wreg, status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_Write_RTC
  1984 ;;		_RtccWriteDate
  1985 ;;		_RtccWriteTime
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text6
  1990  0023A6                     __ptext6:
  1991                           	opt stack 0
  1992  0023A6                     _RtccWrOn:
  1993                           	opt stack 27
  1994                           
  1995                           ;incstack = 0
  1996  0023A6  9CF2               	bcf	intcon,6,c	;volatile
  1997  0023A8  0E55               	movlw	85
  1998  0023AA  6EA7               	movwf	4007,c	;volatile
  1999  0023AC  0EAA               	movlw	170
  2000  0023AE  6EA7               	movwf	4007,c	;volatile
  2001  0023B0  010F               	movlb	15	; () banked
  2002  0023B2  8B3F               	bsf	63,5,b	;volatile
  2003                           
  2004                           ; BSR set to: 15
  2005  0023B4  8CF2               	bsf	intcon,6,c	;volatile
  2006                           
  2007                           ; BSR set to: 15
  2008  0023B6  0012               	return		;funcret
  2009  0023B8                     __end_of_RtccWrOn:
  2010                           	opt stack 0
  2011                           tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           tblptrl	equ	0xFF6
  2014                           tablat	equ	0xFF5
  2015                           prodl	equ	0xFF3
  2016                           intcon	equ	0xFF2
  2017                           postinc0	equ	0xFEE
  2018                           wreg	equ	0xFE8
  2019                           postdec1	equ	0xFE5
  2020                           fsr1l	equ	0xFE1
  2021                           indf2	equ	0xFDF
  2022                           fsr2h	equ	0xFDA
  2023                           fsr2l	equ	0xFD9
  2024                           status	equ	0xFD8
  2025                           
  2026 ;; *************** function _keyboard_control *****************
  2027 ;; Defined at:
  2028 ;;		line 328 in file "main.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;		None               void
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;Total ram usage:        1 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    9
  2049 ;; This function calls:
  2050 ;;		_button_A
  2051 ;;		_button_B
  2052 ;;		_button_C
  2053 ;;		_button_D
  2054 ;;		_button_asterisk
  2055 ;;		_button_hash
  2056 ;;		_button_number
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text7
  2063  0014B0                     __ptext7:
  2064                           	opt stack 0
  2065  0014B0                     _keyboard_control:
  2066                           	opt stack 21
  2067                           
  2068                           ;main.c: 330: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2069                           
  2070                           ; BSR set to: 15
  2071                           ;incstack = 0
  2072  0014B0  8089               	bsf	3977,0,c	;volatile
  2073  0014B2  9289               	bcf	3977,1,c	;volatile
  2074  0014B4  9489               	bcf	3977,2,c	;volatile
  2075  0014B6  9689               	bcf	3977,3,c	;volatile
  2076                           
  2077                           ;main.c: 331: {
  2078                           ;main.c: 332: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2079  0014B8  AA80               	btfss	3968,5,c	;volatile
  2080  0014BA  D007               	goto	l252
  2081  0014BC  0E01               	movlw	1
  2082  0014BE  6E21               	movwf	_key,c
  2083  0014C0  ECE4  F010         	call	_button_number	;wreg free
  2084  0014C4  D000               	goto	l253
  2085  0014C6                     l253:
  2086  0014C6  BA80               	btfsc	3968,5,c	;volatile
  2087  0014C8  D7FE               	goto	l253
  2088  0014CA                     l252:
  2089                           
  2090                           ;main.c: 333: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2091  0014CA  AE80               	btfss	3968,7,c	;volatile
  2092  0014CC  D007               	goto	l256
  2093  0014CE  0E02               	movlw	2
  2094  0014D0  6E21               	movwf	_key,c
  2095  0014D2  ECE4  F010         	call	_button_number	;wreg free
  2096  0014D6  D000               	goto	l257
  2097  0014D8                     l257:
  2098  0014D8  BE80               	btfsc	3968,7,c	;volatile
  2099  0014DA  D7FE               	goto	l257
  2100  0014DC                     l256:
  2101                           
  2102                           ;main.c: 334: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2103  0014DC  AC80               	btfss	3968,6,c	;volatile
  2104  0014DE  D007               	goto	l260
  2105  0014E0  0E03               	movlw	3
  2106  0014E2  6E21               	movwf	_key,c
  2107  0014E4  ECE4  F010         	call	_button_number	;wreg free
  2108  0014E8  D000               	goto	l261
  2109  0014EA                     l261:
  2110  0014EA  BC80               	btfsc	3968,6,c	;volatile
  2111  0014EC  D7FE               	goto	l261
  2112  0014EE                     l260:
  2113                           
  2114                           ;main.c: 335: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2115  0014EE  A482               	btfss	3970,2,c	;volatile
  2116  0014F0  D007               	goto	l264
  2117  0014F2  0E0B               	movlw	11
  2118  0014F4  6E21               	movwf	_key,c
  2119  0014F6  EC4D  F010         	call	_button_A	;wreg free
  2120  0014FA  D000               	goto	l265
  2121  0014FC                     l265:
  2122  0014FC  B482               	btfsc	3970,2,c	;volatile
  2123  0014FE  D7FE               	goto	l265
  2124  001500                     l264:
  2125                           
  2126                           ;main.c: 336: }
  2127                           ;main.c: 338: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2128  001500  9089               	bcf	3977,0,c	;volatile
  2129  001502  8289               	bsf	3977,1,c	;volatile
  2130  001504  9489               	bcf	3977,2,c	;volatile
  2131  001506  9689               	bcf	3977,3,c	;volatile
  2132                           
  2133                           ;main.c: 339: {
  2134                           ;main.c: 340: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2135  001508  AA80               	btfss	3968,5,c	;volatile
  2136  00150A  D007               	goto	l268
  2137  00150C  0E04               	movlw	4
  2138  00150E  6E21               	movwf	_key,c
  2139  001510  ECE4  F010         	call	_button_number	;wreg free
  2140  001514  D000               	goto	l269
  2141  001516                     l269:
  2142  001516  BA80               	btfsc	3968,5,c	;volatile
  2143  001518  D7FE               	goto	l269
  2144  00151A                     l268:
  2145                           
  2146                           ;main.c: 341: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2147  00151A  AE80               	btfss	3968,7,c	;volatile
  2148  00151C  D007               	goto	l272
  2149  00151E  0E05               	movlw	5
  2150  001520  6E21               	movwf	_key,c
  2151  001522  ECE4  F010         	call	_button_number	;wreg free
  2152  001526  D000               	goto	l273
  2153  001528                     l273:
  2154  001528  BE80               	btfsc	3968,7,c	;volatile
  2155  00152A  D7FE               	goto	l273
  2156  00152C                     l272:
  2157                           
  2158                           ;main.c: 342: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2159  00152C  AC80               	btfss	3968,6,c	;volatile
  2160  00152E  D007               	goto	l276
  2161  001530  0E06               	movlw	6
  2162  001532  6E21               	movwf	_key,c
  2163  001534  ECE4  F010         	call	_button_number	;wreg free
  2164  001538  D000               	goto	l277
  2165  00153A                     l277:
  2166  00153A  BC80               	btfsc	3968,6,c	;volatile
  2167  00153C  D7FE               	goto	l277
  2168  00153E                     l276:
  2169                           
  2170                           ;main.c: 343: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2171  00153E  A482               	btfss	3970,2,c	;volatile
  2172  001540  D007               	goto	l280
  2173  001542  0E0C               	movlw	12
  2174  001544  6E21               	movwf	_key,c
  2175  001546  ECD2  F00E         	call	_button_B	;wreg free
  2176  00154A  D000               	goto	l281
  2177  00154C                     l281:
  2178  00154C  B482               	btfsc	3970,2,c	;volatile
  2179  00154E  D7FE               	goto	l281
  2180  001550                     l280:
  2181                           
  2182                           ;main.c: 344: }
  2183                           ;main.c: 346: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2184  001550  9089               	bcf	3977,0,c	;volatile
  2185  001552  9289               	bcf	3977,1,c	;volatile
  2186  001554  8489               	bsf	3977,2,c	;volatile
  2187  001556  9689               	bcf	3977,3,c	;volatile
  2188                           
  2189                           ;main.c: 347: {
  2190                           ;main.c: 348: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2191  001558  AA80               	btfss	3968,5,c	;volatile
  2192  00155A  D007               	goto	l284
  2193  00155C  0E07               	movlw	7
  2194  00155E  6E21               	movwf	_key,c
  2195  001560  ECE4  F010         	call	_button_number	;wreg free
  2196  001564  D000               	goto	l285
  2197  001566                     l285:
  2198  001566  BA80               	btfsc	3968,5,c	;volatile
  2199  001568  D7FE               	goto	l285
  2200  00156A                     l284:
  2201                           
  2202                           ;main.c: 349: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2203  00156A  AE80               	btfss	3968,7,c	;volatile
  2204  00156C  D007               	goto	l288
  2205  00156E  0E08               	movlw	8
  2206  001570  6E21               	movwf	_key,c
  2207  001572  ECE4  F010         	call	_button_number	;wreg free
  2208  001576  D000               	goto	l289
  2209  001578                     l289:
  2210  001578  BE80               	btfsc	3968,7,c	;volatile
  2211  00157A  D7FE               	goto	l289
  2212  00157C                     l288:
  2213                           
  2214                           ;main.c: 350: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2215  00157C  AC80               	btfss	3968,6,c	;volatile
  2216  00157E  D007               	goto	l292
  2217  001580  0E09               	movlw	9
  2218  001582  6E21               	movwf	_key,c
  2219  001584  ECE4  F010         	call	_button_number	;wreg free
  2220  001588  D000               	goto	l293
  2221  00158A                     l293:
  2222  00158A  BC80               	btfsc	3968,6,c	;volatile
  2223  00158C  D7FE               	goto	l293
  2224  00158E                     l292:
  2225                           
  2226                           ;main.c: 351: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2227  00158E  A482               	btfss	3970,2,c	;volatile
  2228  001590  D007               	goto	l296
  2229  001592  0E0D               	movlw	13
  2230  001594  6E21               	movwf	_key,c
  2231  001596  ECBB  F011         	call	_button_C	;wreg free
  2232  00159A  D000               	goto	l297
  2233  00159C                     l297:
  2234  00159C  B482               	btfsc	3970,2,c	;volatile
  2235  00159E  D7FE               	goto	l297
  2236  0015A0                     l296:
  2237                           
  2238                           ;main.c: 352: }
  2239                           ;main.c: 354: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2240  0015A0  9089               	bcf	3977,0,c	;volatile
  2241  0015A2  9289               	bcf	3977,1,c	;volatile
  2242  0015A4  9489               	bcf	3977,2,c	;volatile
  2243  0015A6  8689               	bsf	3977,3,c	;volatile
  2244                           
  2245                           ;main.c: 355: {
  2246                           ;main.c: 356: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2247  0015A8  AA80               	btfss	3968,5,c	;volatile
  2248  0015AA  D007               	goto	l300
  2249  0015AC  0E0E               	movlw	14
  2250  0015AE  6E21               	movwf	_key,c
  2251  0015B0  ECF6  F011         	call	_button_asterisk	;wreg free
  2252  0015B4  D000               	goto	l301
  2253  0015B6                     l301:
  2254  0015B6  BA80               	btfsc	3968,5,c	;volatile
  2255  0015B8  D7FE               	goto	l301
  2256  0015BA                     l300:
  2257                           
  2258                           ;main.c: 357: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2259  0015BA  AE80               	btfss	3968,7,c	;volatile
  2260  0015BC  D007               	goto	l304
  2261  0015BE  0E00               	movlw	0
  2262  0015C0  6E21               	movwf	_key,c
  2263  0015C2  ECE4  F010         	call	_button_number	;wreg free
  2264  0015C6  D000               	goto	l305
  2265  0015C8                     l305:
  2266  0015C8  BE80               	btfsc	3968,7,c	;volatile
  2267  0015CA  D7FE               	goto	l305
  2268  0015CC                     l304:
  2269                           
  2270                           ;main.c: 358: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2271  0015CC  AC80               	btfss	3968,6,c	;volatile
  2272  0015CE  D007               	goto	l308
  2273  0015D0  0E0F               	movlw	15
  2274  0015D2  6E21               	movwf	_key,c
  2275  0015D4  ECEE  F011         	call	_button_hash	;wreg free
  2276  0015D8  D000               	goto	l309
  2277  0015DA                     l309:
  2278  0015DA  BC80               	btfsc	3968,6,c	;volatile
  2279  0015DC  D7FE               	goto	l309
  2280  0015DE                     l308:
  2281                           
  2282                           ;main.c: 359: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2283  0015DE  A482               	btfss	3970,2,c	;volatile
  2284  0015E0  D009               	goto	l3029
  2285  0015E2  0E10               	movlw	16
  2286  0015E4  6E21               	movwf	_key,c
  2287  0015E6  EC64  F011         	call	_button_D	;wreg free
  2288  0015EA  D000               	goto	l313
  2289  0015EC                     l313:
  2290  0015EC  A482               	btfss	3970,2,c	;volatile
  2291  0015EE  D002               	goto	l3029
  2292  0015F0  D7FD               	goto	l313
  2293  0015F2  D000               	goto	l3029
  2294  0015F4                     l3029:
  2295                           
  2296                           ;main.c: 360: }
  2297                           ;main.c: 362: _delay((unsigned long)((98)*(8000000/4000.0)));
  2298  0015F4  0EFF               	movlw	255
  2299  0015F6  6E4D               	movwf	??_keyboard_control& (0+255),c
  2300  0015F8  0E8A               	movlw	138
  2301  0015FA                     u2337:
  2302  0015FA  2EE8               	decfsz	wreg,f,c
  2303  0015FC  D7FE               	goto	u2337
  2304  0015FE  2E4D               	decfsz	??_keyboard_control& (0+255),f,c
  2305  001600  D7FC               	goto	u2337
  2306  001602  D000               	nop2	
  2307  001604  0012               	return		;funcret
  2308  001606                     __end_of_keyboard_control:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           prodl	equ	0xFF3
  2315                           intcon	equ	0xFF2
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           fsr1l	equ	0xFE1
  2320                           indf2	equ	0xFDF
  2321                           fsr2h	equ	0xFDA
  2322                           fsr2l	equ	0xFD9
  2323                           status	equ	0xFD8
  2324                           
  2325 ;; *************** function _button_number *****************
  2326 ;; Defined at:
  2327 ;;		line 313 in file "main.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;		None               void
  2334 ;; Registers used:
  2335 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2345 ;;Total ram usage:        0 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    5
  2348 ;; This function calls:
  2349 ;;		_lcd_putrs
  2350 ;;		_sprintf
  2351 ;; This function is called by:
  2352 ;;		_keyboard_control
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text8
  2357  0021C8                     __ptext8:
  2358                           	opt stack 0
  2359  0021C8                     _button_number:
  2360                           	opt stack 24
  2361                           
  2362                           ;main.c: 315: if(activity_pin == 1){
  2363                           
  2364                           ;incstack = 0
  2365  0021C8  0405               	decf	_activity_pin,w,c
  2366  0021CA  1006               	iorwf	_activity_pin+1,w,c
  2367  0021CC  A4D8               	btfss	status,2,c
  2368  0021CE  D007               	goto	l2871
  2369                           
  2370                           ;main.c: 317: lcd_putrs("*");
  2371  0021D0  0E92               	movlw	low STR_34
  2372  0021D2  6E32               	movwf	lcd_putrs@ptr,c
  2373  0021D4  0E0F               	movlw	high STR_34
  2374  0021D6  6E33               	movwf	lcd_putrs@ptr+1,c
  2375  0021D8  EC23  F010         	call	_lcd_putrs	;wreg free
  2376                           
  2377                           ;main.c: 319: } else {
  2378  0021DC  0012               	return	
  2379  0021DE                     l2871:
  2380                           
  2381                           ;main.c: 321: sprintf(buffer1,"%01u",key);
  2382  0021DE  0E80               	movlw	low _buffer1
  2383  0021E0  6E36               	movwf	sprintf@sp,c
  2384  0021E2  0E00               	movlw	high _buffer1
  2385  0021E4  6E37               	movwf	sprintf@sp+1,c
  2386  0021E6  0E7D               	movlw	low STR_36
  2387  0021E8  6E38               	movwf	sprintf@f,c
  2388  0021EA  0E0F               	movlw	high STR_36
  2389  0021EC  6E39               	movwf	sprintf@f+1,c
  2390  0021EE  C021  F03A         	movff	_key,?_sprintf+4
  2391  0021F2  6A3B               	clrf	?_sprintf+5,c
  2392  0021F4  ECCC  F007         	call	_sprintf	;wreg free
  2393                           
  2394                           ;main.c: 322: lcd_putrs(buffer1);
  2395  0021F8  0E80               	movlw	low _buffer1
  2396  0021FA  6E32               	movwf	lcd_putrs@ptr,c
  2397  0021FC  0E00               	movlw	high _buffer1
  2398  0021FE  6E33               	movwf	lcd_putrs@ptr+1,c
  2399  002200  EC23  F010         	call	_lcd_putrs	;wreg free
  2400  002204  0012               	return	
  2401  002206  0012               	return		;funcret
  2402  002208                     __end_of_button_number:
  2403                           	opt stack 0
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           prodl	equ	0xFF3
  2409                           intcon	equ	0xFF2
  2410                           postinc0	equ	0xFEE
  2411                           wreg	equ	0xFE8
  2412                           postdec1	equ	0xFE5
  2413                           fsr1l	equ	0xFE1
  2414                           indf2	equ	0xFDF
  2415                           fsr2h	equ	0xFDA
  2416                           fsr2l	equ	0xFD9
  2417                           status	equ	0xFD8
  2418                           
  2419 ;; *************** function _button_hash *****************
  2420 ;; Defined at:
  2421 ;;		line 305 in file "main.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;		None               void
  2428 ;; Registers used:
  2429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    8
  2442 ;; This function calls:
  2443 ;;		_pin_input_validator
  2444 ;; This function is called by:
  2445 ;;		_keyboard_control
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text9
  2450  0023DC                     __ptext9:
  2451                           	opt stack 0
  2452  0023DC                     _button_hash:
  2453                           	opt stack 21
  2454                           
  2455                           ;main.c: 307: if(activity_pin == 1){
  2456                           
  2457                           ;incstack = 0
  2458  0023DC  0405               	decf	_activity_pin,w,c
  2459  0023DE  1006               	iorwf	_activity_pin+1,w,c
  2460  0023E0  A4D8               	btfss	status,2,c
  2461  0023E2  0012               	return	
  2462                           
  2463                           ;main.c: 308: pin_input_validator();
  2464  0023E4  ECAB  F011         	call	_pin_input_validator	;wreg free
  2465  0023E8  0012               	return	
  2466  0023EA  0012               	return		;funcret
  2467  0023EC                     __end_of_button_hash:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           prodl	equ	0xFF3
  2474                           intcon	equ	0xFF2
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           postdec1	equ	0xFE5
  2478                           fsr1l	equ	0xFE1
  2479                           indf2	equ	0xFDF
  2480                           fsr2h	equ	0xFDA
  2481                           fsr2l	equ	0xFD9
  2482                           status	equ	0xFD8
  2483                           
  2484 ;; *************** function _pin_input_validator *****************
  2485 ;; Defined at:
  2486 ;;		line 211 in file "main.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;		None
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;		None
  2491 ;; Return value:  Size  Location     Type
  2492 ;;		None               void
  2493 ;; Registers used:
  2494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;Total ram usage:        0 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    7
  2507 ;; This function calls:
  2508 ;;		_menu_submenu
  2509 ;; This function is called by:
  2510 ;;		_button_hash
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text10
  2515  002356                     __ptext10:
  2516                           	opt stack 0
  2517  002356                     _pin_input_validator:
  2518                           	opt stack 21
  2519                           
  2520                           ;main.c: 214: locked = 0;
  2521                           
  2522                           ;incstack = 0
  2523  002356  0E00               	movlw	0
  2524  002358  6E14               	movwf	_locked+1,c
  2525  00235A  0E00               	movlw	0
  2526  00235C  6E13               	movwf	_locked,c
  2527                           
  2528                           ;main.c: 215: activity_pin = 0;
  2529  00235E  0E00               	movlw	0
  2530  002360  6E06               	movwf	_activity_pin+1,c
  2531  002362  0E00               	movlw	0
  2532  002364  6E05               	movwf	_activity_pin,c
  2533                           
  2534                           ;main.c: 216: activity_submenu = 1;
  2535  002366  0E00               	movlw	0
  2536  002368  6E08               	movwf	_activity_submenu+1,c
  2537  00236A  0E01               	movlw	1
  2538  00236C  6E07               	movwf	_activity_submenu,c
  2539                           
  2540                           ;main.c: 217: menu_submenu();
  2541  00236E  EC5C  F00E         	call	_menu_submenu	;wreg free
  2542  002372  0012               	return	
  2543  002374  0012               	return		;funcret
  2544  002376                     __end_of_pin_input_validator:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           prodl	equ	0xFF3
  2551                           intcon	equ	0xFF2
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           postdec1	equ	0xFE5
  2555                           fsr1l	equ	0xFE1
  2556                           indf2	equ	0xFDF
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _button_asterisk *****************
  2562 ;; Defined at:
  2563 ;;		line 301 in file "main.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;		None               void
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    5
  2584 ;; This function calls:
  2585 ;;		_lcd_putrs
  2586 ;; This function is called by:
  2587 ;;		_keyboard_control
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text11
  2592  0023EC                     __ptext11:
  2593                           	opt stack 0
  2594  0023EC                     _button_asterisk:
  2595                           	opt stack 24
  2596                           
  2597                           ;main.c: 302: lcd_putrs("*");
  2598                           
  2599                           ;incstack = 0
  2600  0023EC  0E92               	movlw	low STR_34
  2601  0023EE  6E32               	movwf	lcd_putrs@ptr,c
  2602  0023F0  0E0F               	movlw	high STR_34
  2603  0023F2  6E33               	movwf	lcd_putrs@ptr+1,c
  2604  0023F4  EC23  F010         	call	_lcd_putrs	;wreg free
  2605  0023F8  0012               	return		;funcret
  2606  0023FA                     __end_of_button_asterisk:
  2607                           	opt stack 0
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           prodl	equ	0xFF3
  2613                           intcon	equ	0xFF2
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           fsr2h	equ	0xFDA
  2620                           fsr2l	equ	0xFD9
  2621                           status	equ	0xFD8
  2622                           
  2623 ;; *************** function _button_D *****************
  2624 ;; Defined at:
  2625 ;;		line 291 in file "main.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;		None               void
  2632 ;; Registers used:
  2633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2643 ;;Total ram usage:        0 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    7
  2646 ;; This function calls:
  2647 ;;		_home
  2648 ;; This function is called by:
  2649 ;;		_keyboard_control
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text12
  2654  0022C8                     __ptext12:
  2655                           	opt stack 0
  2656  0022C8                     _button_D:
  2657                           	opt stack 22
  2658                           
  2659                           ;main.c: 293: home();
  2660                           
  2661                           ;incstack = 0
  2662  0022C8  EC89  F011         	call	_home	;wreg free
  2663                           
  2664                           ;main.c: 294: activity_pin = 0;
  2665  0022CC  0E00               	movlw	0
  2666  0022CE  6E06               	movwf	_activity_pin+1,c
  2667  0022D0  0E00               	movlw	0
  2668  0022D2  6E05               	movwf	_activity_pin,c
  2669                           
  2670                           ;main.c: 295: locked = 1;
  2671  0022D4  0E00               	movlw	0
  2672  0022D6  6E14               	movwf	_locked+1,c
  2673  0022D8  0E01               	movlw	1
  2674  0022DA  6E13               	movwf	_locked,c
  2675                           
  2676                           ;main.c: 296: activity_menu = 0;
  2677  0022DC  0E00               	movlw	0
  2678  0022DE  6E04               	movwf	_activity_menu+1,c
  2679  0022E0  0E00               	movlw	0
  2680  0022E2  6E03               	movwf	_activity_menu,c
  2681                           
  2682                           ;main.c: 297: activity_submenu = 0;
  2683  0022E4  0E00               	movlw	0
  2684  0022E6  6E08               	movwf	_activity_submenu+1,c
  2685  0022E8  0E00               	movlw	0
  2686  0022EA  6E07               	movwf	_activity_submenu,c
  2687  0022EC  0012               	return		;funcret
  2688  0022EE                     __end_of_button_D:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           prodl	equ	0xFF3
  2695                           intcon	equ	0xFF2
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           postdec1	equ	0xFE5
  2699                           fsr1l	equ	0xFE1
  2700                           indf2	equ	0xFDF
  2701                           fsr2h	equ	0xFDA
  2702                           fsr2l	equ	0xFD9
  2703                           status	equ	0xFD8
  2704                           
  2705 ;; *************** function _home *****************
  2706 ;; Defined at:
  2707 ;;		line 95 in file "main.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;		None               void
  2714 ;; Registers used:
  2715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    6
  2728 ;; This function calls:
  2729 ;;		_lcd_init
  2730 ;;		_lcd_write
  2731 ;; This function is called by:
  2732 ;;		_button_D
  2733 ;;		_main
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text13
  2738  002312                     __ptext13:
  2739                           	opt stack 0
  2740  002312                     _home:
  2741                           	opt stack 22
  2742                           
  2743                           ;main.c: 97: lcd_init();
  2744                           
  2745                           ;incstack = 0
  2746  002312  EC1C  F00E         	call	_lcd_init	;wreg free
  2747                           
  2748                           ;main.c: 98: lcd_write(1,1,"X28");
  2749  002316  0E00               	movlw	0
  2750  002318  6E35               	movwf	lcd_write@column+1,c
  2751  00231A  0E01               	movlw	1
  2752  00231C  6E34               	movwf	lcd_write@column,c
  2753  00231E  0E00               	movlw	0
  2754  002320  6E37               	movwf	lcd_write@row+1,c
  2755  002322  0E01               	movlw	1
  2756  002324  6E36               	movwf	lcd_write@row,c
  2757  002326  0E82               	movlw	low STR_4
  2758  002328  6E38               	movwf	lcd_write@string,c
  2759  00232A  0E0F               	movlw	high STR_4
  2760  00232C  6E39               	movwf	lcd_write@string+1,c
  2761  00232E  ECC7  F011         	call	_lcd_write	;wreg free
  2762  002332  0012               	return		;funcret
  2763  002334                     __end_of_home:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           prodl	equ	0xFF3
  2770                           intcon	equ	0xFF2
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           postdec1	equ	0xFE5
  2774                           fsr1l	equ	0xFE1
  2775                           indf2	equ	0xFDF
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _button_C *****************
  2781 ;; Defined at:
  2782 ;;		line 282 in file "main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;		None               void
  2789 ;; Registers used:
  2790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    7
  2803 ;; This function calls:
  2804 ;;		_menu_submenu
  2805 ;; This function is called by:
  2806 ;;		_keyboard_control
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text14
  2811  002376                     __ptext14:
  2812                           	opt stack 0
  2813  002376                     _button_C:
  2814                           	opt stack 22
  2815                           
  2816                           ;main.c: 284: if(locked == 0){
  2817                           
  2818                           ;incstack = 0
  2819  002376  5013               	movf	_locked,w,c
  2820  002378  1014               	iorwf	_locked+1,w,c
  2821  00237A  A4D8               	btfss	status,2,c
  2822  00237C  0012               	return	
  2823                           
  2824                           ;main.c: 285: menu_submenu();
  2825  00237E  EC5C  F00E         	call	_menu_submenu	;wreg free
  2826                           
  2827                           ;main.c: 286: activity_submenu = 0;
  2828  002382  0E00               	movlw	0
  2829  002384  6E08               	movwf	_activity_submenu+1,c
  2830  002386  0E00               	movlw	0
  2831  002388  6E07               	movwf	_activity_submenu,c
  2832  00238A  0012               	return	
  2833  00238C  0012               	return		;funcret
  2834  00238E                     __end_of_button_C:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           prodl	equ	0xFF3
  2841                           intcon	equ	0xFF2
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           postdec1	equ	0xFE5
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _button_B *****************
  2852 ;; Defined at:
  2853 ;;		line 251 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;		None               void
  2860 ;; Registers used:
  2861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;Total ram usage:        2 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    7
  2874 ;; This function calls:
  2875 ;;		_menu_submenu_activate
  2876 ;;		_menu_submenu_alarm
  2877 ;;		_menu_submenu_clock
  2878 ;;		_menu_submenu_pin
  2879 ;; This function is called by:
  2880 ;;		_keyboard_control
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text15
  2885  001DA4                     __ptext15:
  2886                           	opt stack 0
  2887  001DA4                     _button_B:
  2888                           	opt stack 22
  2889                           
  2890                           ;main.c: 253: if(locked == 0){
  2891                           
  2892                           ;incstack = 0
  2893  001DA4  5013               	movf	_locked,w,c
  2894  001DA6  1014               	iorwf	_locked+1,w,c
  2895  001DA8  A4D8               	btfss	status,2,c
  2896  001DAA  0012               	return	
  2897                           
  2898                           ;main.c: 255: switch(select){
  2899  001DAC  D01C               	goto	l2839
  2900  001DAE                     l2821:
  2901                           
  2902                           ;main.c: 258: menu_submenu_activate();
  2903  001DAE  ECF6  F00F         	call	_menu_submenu_activate	;wreg free
  2904                           
  2905                           ;main.c: 259: activity_submenu = 1;
  2906  001DB2  0E00               	movlw	0
  2907  001DB4  6E08               	movwf	_activity_submenu+1,c
  2908  001DB6  0E01               	movlw	1
  2909  001DB8  6E07               	movwf	_activity_submenu,c
  2910                           
  2911                           ;main.c: 260: break;
  2912  001DBA  0012               	return	
  2913  001DBC                     l2825:
  2914                           
  2915                           ;main.c: 263: menu_submenu_clock();
  2916  001DBC  EC9C  F00F         	call	_menu_submenu_clock	;wreg free
  2917                           
  2918                           ;main.c: 264: activity_submenu = 1;
  2919  001DC0  0E00               	movlw	0
  2920  001DC2  6E08               	movwf	_activity_submenu+1,c
  2921  001DC4  0E01               	movlw	1
  2922  001DC6  6E07               	movwf	_activity_submenu,c
  2923                           
  2924                           ;main.c: 265: break;
  2925  001DC8  0012               	return	
  2926  001DCA                     l2829:
  2927                           
  2928                           ;main.c: 268: menu_submenu_pin();
  2929  001DCA  EC6F  F00F         	call	_menu_submenu_pin	;wreg free
  2930                           
  2931                           ;main.c: 269: activity_submenu = 1;
  2932  001DCE  0E00               	movlw	0
  2933  001DD0  6E08               	movwf	_activity_submenu+1,c
  2934  001DD2  0E01               	movlw	1
  2935  001DD4  6E07               	movwf	_activity_submenu,c
  2936                           
  2937                           ;main.c: 270: break;
  2938  001DD6  0012               	return	
  2939  001DD8                     l2833:
  2940                           
  2941                           ;main.c: 273: menu_submenu_alarm();
  2942  001DD8  ECC9  F00F         	call	_menu_submenu_alarm	;wreg free
  2943                           
  2944                           ;main.c: 274: activity_submenu = 1;
  2945  001DDC  0E00               	movlw	0
  2946  001DDE  6E08               	movwf	_activity_submenu+1,c
  2947  001DE0  0E01               	movlw	1
  2948  001DE2  6E07               	movwf	_activity_submenu,c
  2949                           
  2950                           ;main.c: 276: }
  2951                           
  2952                           ;main.c: 275: break;
  2953  001DE4  0012               	return	
  2954  001DE6                     l2839:
  2955  001DE6  C019  F03A         	movff	_select,??_button_B
  2956  001DEA  C01A  F03B         	movff	_select+1,??_button_B+1
  2957                           
  2958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2959                           ; Switch size 1, requested type "space"
  2960                           ; Number of cases is 1, Range of values is 0 to 0
  2961                           ; switch strategies available:
  2962                           ; Name         Instructions Cycles
  2963                           ; simple_byte            4     3 (average)
  2964                           ;	Chosen strategy is simple_byte
  2965  001DEE  503B               	movf	??_button_B+1,w,c
  2966  001DF0  0A00               	xorlw	0	; case 0
  2967  001DF2  A4D8               	btfss	status,2,c
  2968  001DF4  0012               	return	
  2969                           
  2970                           ; Switch size 1, requested type "space"
  2971                           ; Number of cases is 4, Range of values is 1 to 4
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte           13     7 (average)
  2975                           ;	Chosen strategy is simple_byte
  2976  001DF6  503A               	movf	??_button_B,w,c
  2977  001DF8  0A01               	xorlw	1	; case 1
  2978  001DFA  B4D8               	btfsc	status,2,c
  2979  001DFC  D7D8               	goto	l2821
  2980  001DFE  0A03               	xorlw	3	; case 2
  2981  001E00  B4D8               	btfsc	status,2,c
  2982  001E02  D7DC               	goto	l2825
  2983  001E04  0A01               	xorlw	1	; case 3
  2984  001E06  B4D8               	btfsc	status,2,c
  2985  001E08  D7E0               	goto	l2829
  2986  001E0A  0A07               	xorlw	7	; case 4
  2987  001E0C  B4D8               	btfsc	status,2,c
  2988  001E0E  D7E4               	goto	l2833
  2989  001E10  0012               	return	
  2990  001E12  0012               	return		;funcret
  2991  001E14                     __end_of_button_B:
  2992                           	opt stack 0
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           prodl	equ	0xFF3
  2998                           intcon	equ	0xFF2
  2999                           postinc0	equ	0xFEE
  3000                           wreg	equ	0xFE8
  3001                           postdec1	equ	0xFE5
  3002                           fsr1l	equ	0xFE1
  3003                           indf2	equ	0xFDF
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _menu_submenu_pin *****************
  3009 ;; Defined at:
  3010 ;;		line 193 in file "main.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;		None               void
  3017 ;; Registers used:
  3018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    6
  3031 ;; This function calls:
  3032 ;;		_lcd_init
  3033 ;;		_lcd_write
  3034 ;; This function is called by:
  3035 ;;		_button_B
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text16
  3040  001EDE                     __ptext16:
  3041                           	opt stack 0
  3042  001EDE                     _menu_submenu_pin:
  3043                           	opt stack 22
  3044                           
  3045                           ;main.c: 195: lcd_init();
  3046                           
  3047                           ;incstack = 0
  3048  001EDE  EC1C  F00E         	call	_lcd_init	;wreg free
  3049                           
  3050                           ;main.c: 196: lcd_write(1,1,"Pin");
  3051  001EE2  0E00               	movlw	0
  3052  001EE4  6E35               	movwf	lcd_write@column+1,c
  3053  001EE6  0E01               	movlw	1
  3054  001EE8  6E34               	movwf	lcd_write@column,c
  3055  001EEA  0E00               	movlw	0
  3056  001EEC  6E37               	movwf	lcd_write@row+1,c
  3057  001EEE  0E01               	movlw	1
  3058  001EF0  6E36               	movwf	lcd_write@row,c
  3059  001EF2  0E86               	movlw	low STR_8
  3060  001EF4  6E38               	movwf	lcd_write@string,c
  3061  001EF6  0E0F               	movlw	high STR_8
  3062  001EF8  6E39               	movwf	lcd_write@string+1,c
  3063  001EFA  ECC7  F011         	call	_lcd_write	;wreg free
  3064                           
  3065                           ;main.c: 197: lcd_write(10,1,"Cambiar");
  3066  001EFE  0E00               	movlw	0
  3067  001F00  6E35               	movwf	lcd_write@column+1,c
  3068  001F02  0E0A               	movlw	10
  3069  001F04  6E34               	movwf	lcd_write@column,c
  3070  001F06  0E00               	movlw	0
  3071  001F08  6E37               	movwf	lcd_write@row+1,c
  3072  001F0A  0E01               	movlw	1
  3073  001F0C  6E36               	movwf	lcd_write@row,c
  3074  001F0E  0E45               	movlw	low STR_29
  3075  001F10  6E38               	movwf	lcd_write@string,c
  3076  001F12  0E0F               	movlw	high STR_29
  3077  001F14  6E39               	movwf	lcd_write@string+1,c
  3078  001F16  ECC7  F011         	call	_lcd_write	;wreg free
  3079                           
  3080                           ;main.c: 198: lcd_write(10,2,"Reset");
  3081  001F1A  0E00               	movlw	0
  3082  001F1C  6E35               	movwf	lcd_write@column+1,c
  3083  001F1E  0E0A               	movlw	10
  3084  001F20  6E34               	movwf	lcd_write@column,c
  3085  001F22  0E00               	movlw	0
  3086  001F24  6E37               	movwf	lcd_write@row+1,c
  3087  001F26  0E02               	movlw	2
  3088  001F28  6E36               	movwf	lcd_write@row,c
  3089  001F2A  0E68               	movlw	low STR_30
  3090  001F2C  6E38               	movwf	lcd_write@string,c
  3091  001F2E  0E0F               	movlw	high STR_30
  3092  001F30  6E39               	movwf	lcd_write@string+1,c
  3093  001F32  ECC7  F011         	call	_lcd_write	;wreg free
  3094  001F36  0012               	return		;funcret
  3095  001F38                     __end_of_menu_submenu_pin:
  3096                           	opt stack 0
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           postdec1	equ	0xFE5
  3106                           fsr1l	equ	0xFE1
  3107                           indf2	equ	0xFDF
  3108                           fsr2h	equ	0xFDA
  3109                           fsr2l	equ	0xFD9
  3110                           status	equ	0xFD8
  3111                           
  3112 ;; *************** function _menu_submenu_clock *****************
  3113 ;; Defined at:
  3114 ;;		line 184 in file "main.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;		None               void
  3121 ;; Registers used:
  3122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3132 ;;Total ram usage:        0 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    6
  3135 ;; This function calls:
  3136 ;;		_lcd_init
  3137 ;;		_lcd_write
  3138 ;; This function is called by:
  3139 ;;		_button_B
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text17
  3144  001F38                     __ptext17:
  3145                           	opt stack 0
  3146  001F38                     _menu_submenu_clock:
  3147                           	opt stack 22
  3148                           
  3149                           ;main.c: 186: lcd_init();
  3150                           
  3151                           ;incstack = 0
  3152  001F38  EC1C  F00E         	call	_lcd_init	;wreg free
  3153                           
  3154                           ;main.c: 187: lcd_write(1,1,"Reloj");
  3155  001F3C  0E00               	movlw	0
  3156  001F3E  6E35               	movwf	lcd_write@column+1,c
  3157  001F40  0E01               	movlw	1
  3158  001F42  6E34               	movwf	lcd_write@column,c
  3159  001F44  0E00               	movlw	0
  3160  001F46  6E37               	movwf	lcd_write@row+1,c
  3161  001F48  0E01               	movlw	1
  3162  001F4A  6E36               	movwf	lcd_write@row,c
  3163  001F4C  0E62               	movlw	low STR_7
  3164  001F4E  6E38               	movwf	lcd_write@string,c
  3165  001F50  0E0F               	movlw	high STR_7
  3166  001F52  6E39               	movwf	lcd_write@string+1,c
  3167  001F54  ECC7  F011         	call	_lcd_write	;wreg free
  3168                           
  3169                           ;main.c: 188: lcd_write(10,1,"Fecha");
  3170  001F58  0E00               	movlw	0
  3171  001F5A  6E35               	movwf	lcd_write@column+1,c
  3172  001F5C  0E0A               	movlw	10
  3173  001F5E  6E34               	movwf	lcd_write@column,c
  3174  001F60  0E00               	movlw	0
  3175  001F62  6E37               	movwf	lcd_write@row+1,c
  3176  001F64  0E01               	movlw	1
  3177  001F66  6E36               	movwf	lcd_write@row,c
  3178  001F68  0E5C               	movlw	low STR_26
  3179  001F6A  6E38               	movwf	lcd_write@string,c
  3180  001F6C  0E0F               	movlw	high STR_26
  3181  001F6E  6E39               	movwf	lcd_write@string+1,c
  3182  001F70  ECC7  F011         	call	_lcd_write	;wreg free
  3183                           
  3184                           ;main.c: 189: lcd_write(10,2,"Hora");
  3185  001F74  0E00               	movlw	0
  3186  001F76  6E35               	movwf	lcd_write@column+1,c
  3187  001F78  0E0A               	movlw	10
  3188  001F7A  6E34               	movwf	lcd_write@column,c
  3189  001F7C  0E00               	movlw	0
  3190  001F7E  6E37               	movwf	lcd_write@row+1,c
  3191  001F80  0E02               	movlw	2
  3192  001F82  6E36               	movwf	lcd_write@row,c
  3193  001F84  0E73               	movlw	low STR_27
  3194  001F86  6E38               	movwf	lcd_write@string,c
  3195  001F88  0E0F               	movlw	high STR_27
  3196  001F8A  6E39               	movwf	lcd_write@string+1,c
  3197  001F8C  ECC7  F011         	call	_lcd_write	;wreg free
  3198  001F90  0012               	return		;funcret
  3199  001F92                     __end_of_menu_submenu_clock:
  3200                           	opt stack 0
  3201                           tblptru	equ	0xFF8
  3202                           tblptrh	equ	0xFF7
  3203                           tblptrl	equ	0xFF6
  3204                           tablat	equ	0xFF5
  3205                           prodl	equ	0xFF3
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           postdec1	equ	0xFE5
  3210                           fsr1l	equ	0xFE1
  3211                           indf2	equ	0xFDF
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _menu_submenu_alarm *****************
  3217 ;; Defined at:
  3218 ;;		line 202 in file "main.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;Total ram usage:        0 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    6
  3239 ;; This function calls:
  3240 ;;		_lcd_init
  3241 ;;		_lcd_write
  3242 ;; This function is called by:
  3243 ;;		_button_B
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text18
  3248  001F92                     __ptext18:
  3249                           	opt stack 0
  3250  001F92                     _menu_submenu_alarm:
  3251                           	opt stack 22
  3252                           
  3253                           ;main.c: 204: lcd_init();
  3254                           
  3255                           ;incstack = 0
  3256  001F92  EC1C  F00E         	call	_lcd_init	;wreg free
  3257                           
  3258                           ;main.c: 205: lcd_write(1,1,"Alarma");
  3259  001F96  0E00               	movlw	0
  3260  001F98  6E35               	movwf	lcd_write@column+1,c
  3261  001F9A  0E01               	movlw	1
  3262  001F9C  6E34               	movwf	lcd_write@column,c
  3263  001F9E  0E00               	movlw	0
  3264  001FA0  6E37               	movwf	lcd_write@row+1,c
  3265  001FA2  0E01               	movlw	1
  3266  001FA4  6E36               	movwf	lcd_write@row,c
  3267  001FA6  0E55               	movlw	low STR_9
  3268  001FA8  6E38               	movwf	lcd_write@string,c
  3269  001FAA  0E0F               	movlw	high STR_9
  3270  001FAC  6E39               	movwf	lcd_write@string+1,c
  3271  001FAE  ECC7  F011         	call	_lcd_write	;wreg free
  3272                           
  3273                           ;main.c: 206: lcd_write(10,1,"Volumen");
  3274  001FB2  0E00               	movlw	0
  3275  001FB4  6E35               	movwf	lcd_write@column+1,c
  3276  001FB6  0E0A               	movlw	10
  3277  001FB8  6E34               	movwf	lcd_write@column,c
  3278  001FBA  0E00               	movlw	0
  3279  001FBC  6E37               	movwf	lcd_write@row+1,c
  3280  001FBE  0E01               	movlw	1
  3281  001FC0  6E36               	movwf	lcd_write@row,c
  3282  001FC2  0E3D               	movlw	low STR_32
  3283  001FC4  6E38               	movwf	lcd_write@string,c
  3284  001FC6  0E0F               	movlw	high STR_32
  3285  001FC8  6E39               	movwf	lcd_write@string+1,c
  3286  001FCA  ECC7  F011         	call	_lcd_write	;wreg free
  3287                           
  3288                           ;main.c: 207: lcd_write(10,2,"Tono");
  3289  001FCE  0E00               	movlw	0
  3290  001FD0  6E35               	movwf	lcd_write@column+1,c
  3291  001FD2  0E0A               	movlw	10
  3292  001FD4  6E34               	movwf	lcd_write@column,c
  3293  001FD6  0E00               	movlw	0
  3294  001FD8  6E37               	movwf	lcd_write@row+1,c
  3295  001FDA  0E02               	movlw	2
  3296  001FDC  6E36               	movwf	lcd_write@row,c
  3297  001FDE  0E78               	movlw	low STR_33
  3298  001FE0  6E38               	movwf	lcd_write@string,c
  3299  001FE2  0E0F               	movlw	high STR_33
  3300  001FE4  6E39               	movwf	lcd_write@string+1,c
  3301  001FE6  ECC7  F011         	call	_lcd_write	;wreg free
  3302  001FEA  0012               	return		;funcret
  3303  001FEC                     __end_of_menu_submenu_alarm:
  3304                           	opt stack 0
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           prodl	equ	0xFF3
  3310                           intcon	equ	0xFF2
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           postdec1	equ	0xFE5
  3314                           fsr1l	equ	0xFE1
  3315                           indf2	equ	0xFDF
  3316                           fsr2h	equ	0xFDA
  3317                           fsr2l	equ	0xFD9
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function _menu_submenu_activate *****************
  3321 ;; Defined at:
  3322 ;;		line 175 in file "main.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;		None               void
  3329 ;; Registers used:
  3330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    6
  3343 ;; This function calls:
  3344 ;;		_lcd_init
  3345 ;;		_lcd_write
  3346 ;; This function is called by:
  3347 ;;		_button_B
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text19
  3352  001FEC                     __ptext19:
  3353                           	opt stack 0
  3354  001FEC                     _menu_submenu_activate:
  3355                           	opt stack 22
  3356                           
  3357                           ;main.c: 177: lcd_init();
  3358                           
  3359                           ;incstack = 0
  3360  001FEC  EC1C  F00E         	call	_lcd_init	;wreg free
  3361                           
  3362                           ;main.c: 178: lcd_write(1,1,"Activar");
  3363  001FF0  0E00               	movlw	0
  3364  001FF2  6E35               	movwf	lcd_write@column+1,c
  3365  001FF4  0E01               	movlw	1
  3366  001FF6  6E34               	movwf	lcd_write@column,c
  3367  001FF8  0E00               	movlw	0
  3368  001FFA  6E37               	movwf	lcd_write@row+1,c
  3369  001FFC  0E01               	movlw	1
  3370  001FFE  6E36               	movwf	lcd_write@row,c
  3371  002000  0E4D               	movlw	low STR_6
  3372  002002  6E38               	movwf	lcd_write@string,c
  3373  002004  0E0F               	movlw	high STR_6
  3374  002006  6E39               	movwf	lcd_write@string+1,c
  3375  002008  ECC7  F011         	call	_lcd_write	;wreg free
  3376                           
  3377                           ;main.c: 179: lcd_write(10,1,"SI");
  3378  00200C  0E00               	movlw	0
  3379  00200E  6E35               	movwf	lcd_write@column+1,c
  3380  002010  0E0A               	movlw	10
  3381  002012  6E34               	movwf	lcd_write@column,c
  3382  002014  0E00               	movlw	0
  3383  002016  6E37               	movwf	lcd_write@row+1,c
  3384  002018  0E01               	movlw	1
  3385  00201A  6E36               	movwf	lcd_write@row,c
  3386  00201C  0E8A               	movlw	low STR_23
  3387  00201E  6E38               	movwf	lcd_write@string,c
  3388  002020  0E0F               	movlw	high STR_23
  3389  002022  6E39               	movwf	lcd_write@string+1,c
  3390  002024  ECC7  F011         	call	_lcd_write	;wreg free
  3391                           
  3392                           ;main.c: 180: lcd_write(10,2,"NO");
  3393  002028  0E00               	movlw	0
  3394  00202A  6E35               	movwf	lcd_write@column+1,c
  3395  00202C  0E0A               	movlw	10
  3396  00202E  6E34               	movwf	lcd_write@column,c
  3397  002030  0E00               	movlw	0
  3398  002032  6E37               	movwf	lcd_write@row+1,c
  3399  002034  0E02               	movlw	2
  3400  002036  6E36               	movwf	lcd_write@row,c
  3401  002038  0E8D               	movlw	low STR_24
  3402  00203A  6E38               	movwf	lcd_write@string,c
  3403  00203C  0E0F               	movlw	high STR_24
  3404  00203E  6E39               	movwf	lcd_write@string+1,c
  3405  002040  ECC7  F011         	call	_lcd_write	;wreg free
  3406  002044  0012               	return		;funcret
  3407  002046                     __end_of_menu_submenu_activate:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           tblptrh	equ	0xFF7
  3411                           tblptrl	equ	0xFF6
  3412                           tablat	equ	0xFF5
  3413                           prodl	equ	0xFF3
  3414                           intcon	equ	0xFF2
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           postdec1	equ	0xFE5
  3418                           fsr1l	equ	0xFE1
  3419                           indf2	equ	0xFDF
  3420                           fsr2h	equ	0xFDA
  3421                           fsr2l	equ	0xFD9
  3422                           status	equ	0xFD8
  3423                           
  3424 ;; *************** function _button_A *****************
  3425 ;; Defined at:
  3426 ;;		line 221 in file "main.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;		None               void
  3433 ;; Registers used:
  3434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    7
  3447 ;; This function calls:
  3448 ;;		_menu_iterator
  3449 ;;		_menu_pin
  3450 ;;		_menu_submenu
  3451 ;;		_menu_submenu_iterator
  3452 ;; This function is called by:
  3453 ;;		_keyboard_control
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text20
  3458  00209A                     __ptext20:
  3459                           	opt stack 0
  3460  00209A                     _button_A:
  3461                           	opt stack 22
  3462                           
  3463                           ;main.c: 223: if(activity_pin == 0){
  3464                           
  3465                           ;incstack = 0
  3466  00209A  5005               	movf	_activity_pin,w,c
  3467  00209C  1006               	iorwf	_activity_pin+1,w,c
  3468  00209E  A4D8               	btfss	status,2,c
  3469  0020A0  D007               	goto	l2801
  3470                           
  3471                           ;main.c: 225: menu_pin();
  3472  0020A2  EC1E  F011         	call	_menu_pin	;wreg free
  3473                           
  3474                           ;main.c: 226: activity_pin = 1;
  3475  0020A6  0E00               	movlw	0
  3476  0020A8  6E06               	movwf	_activity_pin+1,c
  3477  0020AA  0E01               	movlw	1
  3478  0020AC  6E05               	movwf	_activity_pin,c
  3479                           
  3480                           ;main.c: 228: } else if (locked == 0){
  3481  0020AE  0012               	return	
  3482  0020B0                     l2801:
  3483  0020B0  5013               	movf	_locked,w,c
  3484  0020B2  1014               	iorwf	_locked+1,w,c
  3485  0020B4  A4D8               	btfss	status,2,c
  3486  0020B6  0012               	return	
  3487                           
  3488                           ;main.c: 230: if (activity_menu == 0) {
  3489  0020B8  5003               	movf	_activity_menu,w,c
  3490  0020BA  1004               	iorwf	_activity_menu+1,w,c
  3491  0020BC  A4D8               	btfss	status,2,c
  3492  0020BE  D007               	goto	l2809
  3493                           
  3494                           ;main.c: 232: menu_submenu();
  3495  0020C0  EC5C  F00E         	call	_menu_submenu	;wreg free
  3496                           
  3497                           ;main.c: 233: activity_menu = 1;
  3498  0020C4  0E00               	movlw	0
  3499  0020C6  6E04               	movwf	_activity_menu+1,c
  3500  0020C8  0E01               	movlw	1
  3501  0020CA  6E03               	movwf	_activity_menu,c
  3502                           
  3503                           ;main.c: 235: } else {
  3504  0020CC  0012               	return	
  3505  0020CE                     l2809:
  3506                           
  3507                           ;main.c: 237: if (activity_submenu == 0){
  3508  0020CE  5007               	movf	_activity_submenu,w,c
  3509  0020D0  1008               	iorwf	_activity_submenu+1,w,c
  3510  0020D2  A4D8               	btfss	status,2,c
  3511  0020D4  D003               	goto	l2813
  3512                           
  3513                           ;main.c: 238: menu_iterator();
  3514  0020D6  ECAC  F009         	call	_menu_iterator	;wreg free
  3515  0020DA  D000               	goto	l2813
  3516  0020DC                     l2813:
  3517                           
  3518                           ;main.c: 239: }
  3519                           ;main.c: 241: if (activity_submenu == 1){
  3520  0020DC  0407               	decf	_activity_submenu,w,c
  3521  0020DE  1008               	iorwf	_activity_submenu+1,w,c
  3522  0020E0  A4D8               	btfss	status,2,c
  3523  0020E2  0012               	return	
  3524                           
  3525                           ;main.c: 242: menu_submenu_iterator();
  3526  0020E4  ECA7  F00C         	call	_menu_submenu_iterator	;wreg free
  3527  0020E8  0012               	return	
  3528  0020EA  0012               	return		;funcret
  3529  0020EC                     __end_of_button_A:
  3530                           	opt stack 0
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           prodl	equ	0xFF3
  3536                           intcon	equ	0xFF2
  3537                           postinc0	equ	0xFEE
  3538                           wreg	equ	0xFE8
  3539                           postdec1	equ	0xFE5
  3540                           fsr1l	equ	0xFE1
  3541                           indf2	equ	0xFDF
  3542                           fsr2h	equ	0xFDA
  3543                           fsr2l	equ	0xFD9
  3544                           status	equ	0xFD8
  3545                           
  3546 ;; *************** function _menu_submenu_iterator *****************
  3547 ;; Defined at:
  3548 ;;		line 156 in file "main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;		None               void
  3555 ;; Registers used:
  3556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;Total ram usage:        2 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    6
  3569 ;; This function calls:
  3570 ;;		_lcd_write
  3571 ;; This function is called by:
  3572 ;;		_button_A
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text21
  3577  00194E                     __ptext21:
  3578                           	opt stack 0
  3579  00194E                     _menu_submenu_iterator:
  3580                           	opt stack 22
  3581                           
  3582                           ;main.c: 158: switch(select_op){
  3583                           
  3584                           ;incstack = 0
  3585  00194E  D042               	goto	l2601
  3586  001950                     l2587:
  3587                           
  3588                           ;main.c: 161: lcd_write(9,1,">");
  3589  001950  0E00               	movlw	0
  3590  001952  6E35               	movwf	lcd_write@column+1,c
  3591  001954  0E09               	movlw	9
  3592  001956  6E34               	movwf	lcd_write@column,c
  3593  001958  0E00               	movlw	0
  3594  00195A  6E37               	movwf	lcd_write@row+1,c
  3595  00195C  0E01               	movlw	1
  3596  00195E  6E36               	movwf	lcd_write@row,c
  3597  001960  0E94               	movlw	low STR_10
  3598  001962  6E38               	movwf	lcd_write@string,c
  3599  001964  0E0F               	movlw	high STR_10
  3600  001966  6E39               	movwf	lcd_write@string+1,c
  3601  001968  ECC7  F011         	call	_lcd_write	;wreg free
  3602                           
  3603                           ;main.c: 162: select_op = 2;
  3604  00196C  0E00               	movlw	0
  3605  00196E  6E1C               	movwf	_select_op+1,c
  3606  001970  0E02               	movlw	2
  3607  001972  6E1B               	movwf	_select_op,c
  3608                           
  3609                           ;main.c: 163: lcd_write(9,2," ");
  3610  001974  0E00               	movlw	0
  3611  001976  6E35               	movwf	lcd_write@column+1,c
  3612  001978  0E09               	movlw	9
  3613  00197A  6E34               	movwf	lcd_write@column,c
  3614  00197C  0E00               	movlw	0
  3615  00197E  6E37               	movwf	lcd_write@row+1,c
  3616  001980  0E02               	movlw	2
  3617  001982  6E36               	movwf	lcd_write@row,c
  3618  001984  0E90               	movlw	low STR_11
  3619  001986  6E38               	movwf	lcd_write@string,c
  3620  001988  0E0F               	movlw	high STR_11
  3621  00198A  6E39               	movwf	lcd_write@string+1,c
  3622  00198C  ECC7  F011         	call	_lcd_write	;wreg free
  3623                           
  3624                           ;main.c: 164: break;
  3625  001990  0012               	return	
  3626  001992                     l2593:
  3627                           
  3628                           ;main.c: 167: lcd_write(9,2,">");
  3629  001992  0E00               	movlw	0
  3630  001994  6E35               	movwf	lcd_write@column+1,c
  3631  001996  0E09               	movlw	9
  3632  001998  6E34               	movwf	lcd_write@column,c
  3633  00199A  0E00               	movlw	0
  3634  00199C  6E37               	movwf	lcd_write@row+1,c
  3635  00199E  0E02               	movlw	2
  3636  0019A0  6E36               	movwf	lcd_write@row,c
  3637  0019A2  0E94               	movlw	low STR_10
  3638  0019A4  6E38               	movwf	lcd_write@string,c
  3639  0019A6  0E0F               	movlw	high STR_10
  3640  0019A8  6E39               	movwf	lcd_write@string+1,c
  3641  0019AA  ECC7  F011         	call	_lcd_write	;wreg free
  3642                           
  3643                           ;main.c: 168: select_op = 1;
  3644  0019AE  0E00               	movlw	0
  3645  0019B0  6E1C               	movwf	_select_op+1,c
  3646  0019B2  0E01               	movlw	1
  3647  0019B4  6E1B               	movwf	_select_op,c
  3648                           
  3649                           ;main.c: 169: lcd_write(9,1," ");
  3650  0019B6  0E00               	movlw	0
  3651  0019B8  6E35               	movwf	lcd_write@column+1,c
  3652  0019BA  0E09               	movlw	9
  3653  0019BC  6E34               	movwf	lcd_write@column,c
  3654  0019BE  0E00               	movlw	0
  3655  0019C0  6E37               	movwf	lcd_write@row+1,c
  3656  0019C2  0E01               	movlw	1
  3657  0019C4  6E36               	movwf	lcd_write@row,c
  3658  0019C6  0E90               	movlw	low STR_11
  3659  0019C8  6E38               	movwf	lcd_write@string,c
  3660  0019CA  0E0F               	movlw	high STR_11
  3661  0019CC  6E39               	movwf	lcd_write@string+1,c
  3662  0019CE  ECC7  F011         	call	_lcd_write	;wreg free
  3663                           
  3664                           ;main.c: 171: }
  3665                           
  3666                           ;main.c: 170: break;
  3667  0019D2  0012               	return	
  3668  0019D4                     l2601:
  3669  0019D4  C01B  F03A         	movff	_select_op,??_menu_submenu_iterator
  3670  0019D8  C01C  F03B         	movff	_select_op+1,??_menu_submenu_iterator+1
  3671                           
  3672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3673                           ; Switch size 1, requested type "space"
  3674                           ; Number of cases is 1, Range of values is 0 to 0
  3675                           ; switch strategies available:
  3676                           ; Name         Instructions Cycles
  3677                           ; simple_byte            4     3 (average)
  3678                           ;	Chosen strategy is simple_byte
  3679  0019DC  503B               	movf	??_menu_submenu_iterator+1,w,c
  3680  0019DE  0A00               	xorlw	0	; case 0
  3681  0019E0  A4D8               	btfss	status,2,c
  3682  0019E2  0012               	return	
  3683                           
  3684                           ; Switch size 1, requested type "space"
  3685                           ; Number of cases is 2, Range of values is 1 to 2
  3686                           ; switch strategies available:
  3687                           ; Name         Instructions Cycles
  3688                           ; simple_byte            7     4 (average)
  3689                           ;	Chosen strategy is simple_byte
  3690  0019E4  503A               	movf	??_menu_submenu_iterator,w,c
  3691  0019E6  0A01               	xorlw	1	; case 1
  3692  0019E8  B4D8               	btfsc	status,2,c
  3693  0019EA  D7B2               	goto	l2587
  3694  0019EC  0A03               	xorlw	3	; case 2
  3695  0019EE  A4D8               	btfss	status,2,c
  3696  0019F0  0012               	return	
  3697  0019F2  D7CF               	goto	l2593
  3698  0019F4  0012               	return		;funcret
  3699  0019F6                     __end_of_menu_submenu_iterator:
  3700                           	opt stack 0
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           prodl	equ	0xFF3
  3706                           intcon	equ	0xFF2
  3707                           postinc0	equ	0xFEE
  3708                           wreg	equ	0xFE8
  3709                           postdec1	equ	0xFE5
  3710                           fsr1l	equ	0xFE1
  3711                           indf2	equ	0xFDF
  3712                           fsr2h	equ	0xFDA
  3713                           fsr2l	equ	0xFD9
  3714                           status	equ	0xFD8
  3715                           
  3716 ;; *************** function _menu_submenu *****************
  3717 ;; Defined at:
  3718 ;;		line 110 in file "main.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;		None               void
  3725 ;; Registers used:
  3726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    6
  3739 ;; This function calls:
  3740 ;;		_lcd_init
  3741 ;;		_lcd_write
  3742 ;; This function is called by:
  3743 ;;		_pin_input_validator
  3744 ;;		_button_A
  3745 ;;		_button_C
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text22
  3750  001CB8                     __ptext22:
  3751                           	opt stack 0
  3752  001CB8                     _menu_submenu:
  3753                           	opt stack 21
  3754                           
  3755                           ;main.c: 112: lcd_init();
  3756                           
  3757                           ;incstack = 0
  3758  001CB8  EC1C  F00E         	call	_lcd_init	;wreg free
  3759                           
  3760                           ;main.c: 113: lcd_write(2,1,"Activar");
  3761  001CBC  0E00               	movlw	0
  3762  001CBE  6E35               	movwf	lcd_write@column+1,c
  3763  001CC0  0E02               	movlw	2
  3764  001CC2  6E34               	movwf	lcd_write@column,c
  3765  001CC4  0E00               	movlw	0
  3766  001CC6  6E37               	movwf	lcd_write@row+1,c
  3767  001CC8  0E01               	movlw	1
  3768  001CCA  6E36               	movwf	lcd_write@row,c
  3769  001CCC  0E4D               	movlw	low STR_6
  3770  001CCE  6E38               	movwf	lcd_write@string,c
  3771  001CD0  0E0F               	movlw	high STR_6
  3772  001CD2  6E39               	movwf	lcd_write@string+1,c
  3773  001CD4  ECC7  F011         	call	_lcd_write	;wreg free
  3774                           
  3775                           ;main.c: 114: lcd_write(2,2,"Reloj");
  3776  001CD8  0E00               	movlw	0
  3777  001CDA  6E35               	movwf	lcd_write@column+1,c
  3778  001CDC  0E02               	movlw	2
  3779  001CDE  6E34               	movwf	lcd_write@column,c
  3780  001CE0  0E00               	movlw	0
  3781  001CE2  6E37               	movwf	lcd_write@row+1,c
  3782  001CE4  0E02               	movlw	2
  3783  001CE6  6E36               	movwf	lcd_write@row,c
  3784  001CE8  0E62               	movlw	low STR_7
  3785  001CEA  6E38               	movwf	lcd_write@string,c
  3786  001CEC  0E0F               	movlw	high STR_7
  3787  001CEE  6E39               	movwf	lcd_write@string+1,c
  3788  001CF0  ECC7  F011         	call	_lcd_write	;wreg free
  3789                           
  3790                           ;main.c: 115: lcd_write(10,1,"Pin");
  3791  001CF4  0E00               	movlw	0
  3792  001CF6  6E35               	movwf	lcd_write@column+1,c
  3793  001CF8  0E0A               	movlw	10
  3794  001CFA  6E34               	movwf	lcd_write@column,c
  3795  001CFC  0E00               	movlw	0
  3796  001CFE  6E37               	movwf	lcd_write@row+1,c
  3797  001D00  0E01               	movlw	1
  3798  001D02  6E36               	movwf	lcd_write@row,c
  3799  001D04  0E86               	movlw	low STR_8
  3800  001D06  6E38               	movwf	lcd_write@string,c
  3801  001D08  0E0F               	movlw	high STR_8
  3802  001D0A  6E39               	movwf	lcd_write@string+1,c
  3803  001D0C  ECC7  F011         	call	_lcd_write	;wreg free
  3804                           
  3805                           ;main.c: 116: lcd_write(10,2,"Alarma");
  3806  001D10  0E00               	movlw	0
  3807  001D12  6E35               	movwf	lcd_write@column+1,c
  3808  001D14  0E0A               	movlw	10
  3809  001D16  6E34               	movwf	lcd_write@column,c
  3810  001D18  0E00               	movlw	0
  3811  001D1A  6E37               	movwf	lcd_write@row+1,c
  3812  001D1C  0E02               	movlw	2
  3813  001D1E  6E36               	movwf	lcd_write@row,c
  3814  001D20  0E55               	movlw	low STR_9
  3815  001D22  6E38               	movwf	lcd_write@string,c
  3816  001D24  0E0F               	movlw	high STR_9
  3817  001D26  6E39               	movwf	lcd_write@string+1,c
  3818  001D28  ECC7  F011         	call	_lcd_write	;wreg free
  3819  001D2C  0012               	return		;funcret
  3820  001D2E                     __end_of_menu_submenu:
  3821                           	opt stack 0
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodl	equ	0xFF3
  3827                           intcon	equ	0xFF2
  3828                           postinc0	equ	0xFEE
  3829                           wreg	equ	0xFE8
  3830                           postdec1	equ	0xFE5
  3831                           fsr1l	equ	0xFE1
  3832                           indf2	equ	0xFDF
  3833                           fsr2h	equ	0xFDA
  3834                           fsr2l	equ	0xFD9
  3835                           status	equ	0xFD8
  3836                           
  3837 ;; *************** function _menu_pin *****************
  3838 ;; Defined at:
  3839 ;;		line 102 in file "main.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;		None
  3844 ;; Return value:  Size  Location     Type
  3845 ;;		None               void
  3846 ;; Registers used:
  3847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3857 ;;Total ram usage:        0 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    6
  3860 ;; This function calls:
  3861 ;;		_lcd_comand
  3862 ;;		_lcd_gotoxy
  3863 ;;		_lcd_init
  3864 ;;		_lcd_write
  3865 ;; This function is called by:
  3866 ;;		_button_A
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text23
  3871  00223C                     __ptext23:
  3872                           	opt stack 0
  3873  00223C                     _menu_pin:
  3874                           	opt stack 22
  3875                           
  3876                           ;main.c: 104: lcd_init();
  3877                           
  3878                           ;incstack = 0
  3879  00223C  EC1C  F00E         	call	_lcd_init	;wreg free
  3880                           
  3881                           ;main.c: 105: lcd_write(1,1,"Ingrese su PIN:");
  3882  002240  0E00               	movlw	0
  3883  002242  6E35               	movwf	lcd_write@column+1,c
  3884  002244  0E01               	movlw	1
  3885  002246  6E34               	movwf	lcd_write@column,c
  3886  002248  0E00               	movlw	0
  3887  00224A  6E37               	movwf	lcd_write@row+1,c
  3888  00224C  0E01               	movlw	1
  3889  00224E  6E36               	movwf	lcd_write@row,c
  3890  002250  0E0F               	movlw	low STR_5
  3891  002252  6E38               	movwf	lcd_write@string,c
  3892  002254  0E0F               	movlw	high STR_5
  3893  002256  6E39               	movwf	lcd_write@string+1,c
  3894  002258  ECC7  F011         	call	_lcd_write	;wreg free
  3895                           
  3896                           ;main.c: 106: lcd_gotoxy(1,2);
  3897  00225C  0E02               	movlw	2
  3898  00225E  6E2E               	movwf	lcd_gotoxy@y,c
  3899  002260  0E01               	movlw	1
  3900  002262  EC77  F011         	call	_lcd_gotoxy
  3901                           
  3902                           ;main.c: 107: lcd_comand(0b00001111);
  3903  002266  0E0F               	movlw	15
  3904  002268  ECFD  F011         	call	_lcd_comand
  3905  00226C  0012               	return		;funcret
  3906  00226E                     __end_of_menu_pin:
  3907                           	opt stack 0
  3908                           tblptru	equ	0xFF8
  3909                           tblptrh	equ	0xFF7
  3910                           tblptrl	equ	0xFF6
  3911                           tablat	equ	0xFF5
  3912                           prodl	equ	0xFF3
  3913                           intcon	equ	0xFF2
  3914                           postinc0	equ	0xFEE
  3915                           wreg	equ	0xFE8
  3916                           postdec1	equ	0xFE5
  3917                           fsr1l	equ	0xFE1
  3918                           indf2	equ	0xFDF
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function _lcd_init *****************
  3924 ;; Defined at:
  3925 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  i               1    4[COMRAM] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;		None               void
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3942 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;Total ram usage:        1 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    2
  3946 ;; This function calls:
  3947 ;;		_Delay1KTCYx
  3948 ;;		_lcd_send_byte
  3949 ;;		_lcd_send_nibble
  3950 ;; This function is called by:
  3951 ;;		_setup
  3952 ;;		_home
  3953 ;;		_menu_pin
  3954 ;;		_menu_submenu
  3955 ;;		_menu_submenu_activate
  3956 ;;		_menu_submenu_clock
  3957 ;;		_menu_submenu_pin
  3958 ;;		_menu_submenu_alarm
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text24
  3963  001C38                     __ptext24:
  3964                           	opt stack 0
  3965  001C38                     _lcd_init:
  3966                           	opt stack 27
  3967                           
  3968                           ;unmc_lcd_216.c: 120: int8 i;
  3969                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  3970                           
  3971                           ;incstack = 0
  3972  001C38  9693               	bcf	3987,3,c	;volatile
  3973                           
  3974                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  3975  001C3A  9493               	bcf	3987,2,c	;volatile
  3976                           
  3977                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  3978  001C3C  968A               	bcf	3978,3,c	;volatile
  3979                           
  3980                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  3981  001C3E  948A               	bcf	3978,2,c	;volatile
  3982                           
  3983                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  3984  001C40  9893               	bcf	3987,4,c	;volatile
  3985                           
  3986                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  3987  001C42  9A93               	bcf	3987,5,c	;volatile
  3988                           
  3989                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  3990  001C44  9C93               	bcf	3987,6,c	;volatile
  3991                           
  3992                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  3993  001C46  9E93               	bcf	3987,7,c	;volatile
  3994                           
  3995                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  3996  001C48  0E0A               	movlw	10
  3997  001C4A  ECDC  F011         	call	_Delay1KTCYx
  3998                           
  3999                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  4000  001C4E  0E0A               	movlw	10
  4001  001C50  ECDC  F011         	call	_Delay1KTCYx
  4002                           
  4003                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  4004  001C54  0E0A               	movlw	10
  4005  001C56  ECDC  F011         	call	_Delay1KTCYx
  4006                           
  4007                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  4008  001C5A  0E00               	movlw	0
  4009  001C5C  6E2E               	movwf	lcd_init@i,c
  4010  001C5E                     l2211:
  4011  001C5E  0E02               	movlw	2
  4012  001C60  642E               	cpfsgt	lcd_init@i,c
  4013  001C62  D001               	goto	l2215
  4014  001C64  D008               	goto	l2221
  4015  001C66                     l2215:
  4016                           
  4017                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  4018  001C66  0E03               	movlw	3
  4019  001C68  EC97  F00E         	call	_lcd_send_nibble
  4020                           
  4021                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  4022  001C6C  0E0A               	movlw	10
  4023  001C6E  ECDC  F011         	call	_Delay1KTCYx
  4024  001C72  2A2E               	incf	lcd_init@i,f,c
  4025  001C74  D7F4               	goto	l2211
  4026  001C76                     l2221:
  4027                           
  4028                           ;unmc_lcd_216.c: 146: }
  4029                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  4030  001C76  0E02               	movlw	2
  4031  001C78  EC97  F00E         	call	_lcd_send_nibble
  4032                           
  4033                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  4034  001C7C  0E00               	movlw	0
  4035  001C7E  6E2E               	movwf	lcd_init@i,c
  4036  001C80  0E03               	movlw	3
  4037  001C82  642E               	cpfsgt	lcd_init@i,c
  4038  001C84  D002               	goto	l2229
  4039  001C86  0012               	return	
  4040  001C88  0012               	return	
  4041  001C8A                     l2229:
  4042                           
  4043                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  4044  001C8A  502E               	movf	lcd_init@i,w,c
  4045  001C8C  0D01               	mullw	1
  4046  001C8E  0E0B               	movlw	low _LCD_INIT_STRING
  4047  001C90  24F3               	addwf	prodl,w,c
  4048  001C92  6EF6               	movwf	tblptrl,c
  4049  001C94  0E0F               	movlw	high _LCD_INIT_STRING
  4050  001C96  20F4               	addwfc	prodh,w,c
  4051  001C98  6EF7               	movwf	tblptrh,c
  4052  001C9A                     	if	0	;There are less than 3 active tblptr bytes
  4053  001C9A                     	endif
  4054  001C9A  0008               	tblrd		*
  4055  001C9C  CFF5 F02C          	movff	tablat,lcd_send_byte@n
  4056  001CA0  0E00               	movlw	0
  4057  001CA2  EC37  F011         	call	_lcd_send_byte
  4058                           
  4059                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  4060  001CA6  0E0A               	movlw	10
  4061  001CA8  ECDC  F011         	call	_Delay1KTCYx
  4062  001CAC  2A2E               	incf	lcd_init@i,f,c
  4063  001CAE  0E03               	movlw	3
  4064  001CB0  642E               	cpfsgt	lcd_init@i,c
  4065  001CB2  D7EB               	goto	l2229
  4066  001CB4  0012               	return	
  4067  001CB6  0012               	return		;funcret
  4068  001CB8                     __end_of_lcd_init:
  4069                           	opt stack 0
  4070                           tblptru	equ	0xFF8
  4071                           tblptrh	equ	0xFF7
  4072                           tblptrl	equ	0xFF6
  4073                           tablat	equ	0xFF5
  4074                           prodh	equ	0xFF4
  4075                           prodl	equ	0xFF3
  4076                           intcon	equ	0xFF2
  4077                           postinc0	equ	0xFEE
  4078                           wreg	equ	0xFE8
  4079                           postdec1	equ	0xFE5
  4080                           fsr1l	equ	0xFE1
  4081                           indf2	equ	0xFDF
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8
  4085                           
  4086 ;; *************** function _Delay1KTCYx *****************
  4087 ;; Defined at:
  4088 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  unit            1    wreg     unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  unit            1    0[COMRAM] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;		None               void
  4095 ;; Registers used:
  4096 ;;		wreg
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4106 ;;Total ram usage:        1 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_lcd_init
  4112 ;;		_DelayPORXLCD
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text25
  4117  0023B8                     __ptext25:
  4118                           	opt stack 0
  4119  0023B8                     _Delay1KTCYx:
  4120                           	opt stack 28
  4121                           
  4122                           ;incstack = 0
  4123                           ;Delay1KTCYx@unit stored from wreg
  4124  0023B8  6E2A               	movwf	Delay1KTCYx@unit,c
  4125  0023BA  0EFA               	movlw	250
  4126  0023BC                     u2347:
  4127  0023BC  F000               	nop	
  4128  0023BE  2EE8               	decfsz	wreg,f,c
  4129  0023C0  D7FD               	goto	u2347
  4130  0023C2  2E2A               	decfsz	Delay1KTCYx@unit,f,c
  4131  0023C4  D7FA               	goto	l2189
  4132  0023C6  0012               	return	
  4133  0023C8  0012               	return		;funcret
  4134  0023CA                     __end_of_Delay1KTCYx:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           prodh	equ	0xFF4
  4141                           prodl	equ	0xFF3
  4142                           intcon	equ	0xFF2
  4143                           postinc0	equ	0xFEE
  4144                           wreg	equ	0xFE8
  4145                           postdec1	equ	0xFE5
  4146                           fsr1l	equ	0xFE1
  4147                           indf2	equ	0xFDF
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function _lcd_comand *****************
  4153 ;; Defined at:
  4154 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  d               1    wreg     unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  d               1    4[COMRAM] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;		None               void
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4172 ;;Total ram usage:        1 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    2
  4175 ;; This function calls:
  4176 ;;		_lcd_send_byte
  4177 ;; This function is called by:
  4178 ;;		_setup
  4179 ;;		_menu_pin
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text26
  4184  0023FA                     __ptext26:
  4185                           	opt stack 0
  4186  0023FA                     _lcd_comand:
  4187                           	opt stack 27
  4188                           
  4189                           ;incstack = 0
  4190                           ;lcd_comand@d stored from wreg
  4191  0023FA  6E2E               	movwf	lcd_comand@d,c
  4192                           
  4193                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  4194  0023FC  C02E  F02C         	movff	lcd_comand@d,lcd_send_byte@n
  4195  002400  0E00               	movlw	0
  4196  002402  EC37  F011         	call	_lcd_send_byte
  4197  002406  0012               	return		;funcret
  4198  002408                     __end_of_lcd_comand:
  4199                           	opt stack 0
  4200                           tblptru	equ	0xFF8
  4201                           tblptrh	equ	0xFF7
  4202                           tblptrl	equ	0xFF6
  4203                           tablat	equ	0xFF5
  4204                           prodh	equ	0xFF4
  4205                           prodl	equ	0xFF3
  4206                           intcon	equ	0xFF2
  4207                           postinc0	equ	0xFEE
  4208                           wreg	equ	0xFE8
  4209                           postdec1	equ	0xFE5
  4210                           fsr1l	equ	0xFE1
  4211                           indf2	equ	0xFDF
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function _menu_iterator *****************
  4217 ;; Defined at:
  4218 ;;		line 120 in file "main.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;		None               void
  4225 ;; Registers used:
  4226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4236 ;;Total ram usage:        2 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    6
  4239 ;; This function calls:
  4240 ;;		_lcd_write
  4241 ;; This function is called by:
  4242 ;;		_button_A
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text27
  4247  001358                     __ptext27:
  4248                           	opt stack 0
  4249  001358                     _menu_iterator:
  4250                           	opt stack 22
  4251                           
  4252                           ;main.c: 122: switch(selection){
  4253                           
  4254                           ;incstack = 0
  4255  001358  D094               	goto	l2579
  4256  00135A                     l2553:
  4257                           
  4258                           ;main.c: 125: lcd_write(1,1,">");
  4259  00135A  0E00               	movlw	0
  4260  00135C  6E35               	movwf	lcd_write@column+1,c
  4261  00135E  0E01               	movlw	1
  4262  001360  6E34               	movwf	lcd_write@column,c
  4263  001362  0E00               	movlw	0
  4264  001364  6E37               	movwf	lcd_write@row+1,c
  4265  001366  0E01               	movlw	1
  4266  001368  6E36               	movwf	lcd_write@row,c
  4267  00136A  0E94               	movlw	low STR_10
  4268  00136C  6E38               	movwf	lcd_write@string,c
  4269  00136E  0E0F               	movlw	high STR_10
  4270  001370  6E39               	movwf	lcd_write@string+1,c
  4271  001372  ECC7  F011         	call	_lcd_write	;wreg free
  4272                           
  4273                           ;main.c: 126: selection = 2;
  4274  001376  0E00               	movlw	0
  4275  001378  6E1E               	movwf	_selection+1,c
  4276  00137A  0E02               	movlw	2
  4277  00137C  6E1D               	movwf	_selection,c
  4278                           
  4279                           ;main.c: 127: select = 1;
  4280  00137E  0E00               	movlw	0
  4281  001380  6E1A               	movwf	_select+1,c
  4282  001382  0E01               	movlw	1
  4283  001384  6E19               	movwf	_select,c
  4284                           
  4285                           ;main.c: 128: lcd_write(9,2," ");
  4286  001386  0E00               	movlw	0
  4287  001388  6E35               	movwf	lcd_write@column+1,c
  4288  00138A  0E09               	movlw	9
  4289  00138C  6E34               	movwf	lcd_write@column,c
  4290  00138E  0E00               	movlw	0
  4291  001390  6E37               	movwf	lcd_write@row+1,c
  4292  001392  0E02               	movlw	2
  4293  001394  6E36               	movwf	lcd_write@row,c
  4294  001396  0E90               	movlw	low STR_11
  4295  001398  6E38               	movwf	lcd_write@string,c
  4296  00139A  0E0F               	movlw	high STR_11
  4297  00139C  6E39               	movwf	lcd_write@string+1,c
  4298  00139E  ECC7  F011         	call	_lcd_write	;wreg free
  4299                           
  4300                           ;main.c: 129: break;
  4301  0013A2  0012               	return	
  4302  0013A4                     l2559:
  4303                           
  4304                           ;main.c: 132: lcd_write(1,2,">");
  4305  0013A4  0E00               	movlw	0
  4306  0013A6  6E35               	movwf	lcd_write@column+1,c
  4307  0013A8  0E01               	movlw	1
  4308  0013AA  6E34               	movwf	lcd_write@column,c
  4309  0013AC  0E00               	movlw	0
  4310  0013AE  6E37               	movwf	lcd_write@row+1,c
  4311  0013B0  0E02               	movlw	2
  4312  0013B2  6E36               	movwf	lcd_write@row,c
  4313  0013B4  0E94               	movlw	low STR_10
  4314  0013B6  6E38               	movwf	lcd_write@string,c
  4315  0013B8  0E0F               	movlw	high STR_10
  4316  0013BA  6E39               	movwf	lcd_write@string+1,c
  4317  0013BC  ECC7  F011         	call	_lcd_write	;wreg free
  4318                           
  4319                           ;main.c: 133: selection = 3;
  4320  0013C0  0E00               	movlw	0
  4321  0013C2  6E1E               	movwf	_selection+1,c
  4322  0013C4  0E03               	movlw	3
  4323  0013C6  6E1D               	movwf	_selection,c
  4324                           
  4325                           ;main.c: 134: select = 2;
  4326  0013C8  0E00               	movlw	0
  4327  0013CA  6E1A               	movwf	_select+1,c
  4328  0013CC  0E02               	movlw	2
  4329  0013CE  6E19               	movwf	_select,c
  4330                           
  4331                           ;main.c: 135: lcd_write(1,1," ");
  4332  0013D0  0E00               	movlw	0
  4333  0013D2  6E35               	movwf	lcd_write@column+1,c
  4334  0013D4  0E01               	movlw	1
  4335  0013D6  6E34               	movwf	lcd_write@column,c
  4336  0013D8  0E00               	movlw	0
  4337  0013DA  6E37               	movwf	lcd_write@row+1,c
  4338  0013DC  0E01               	movlw	1
  4339  0013DE  6E36               	movwf	lcd_write@row,c
  4340  0013E0  0E90               	movlw	low STR_11
  4341  0013E2  6E38               	movwf	lcd_write@string,c
  4342  0013E4  0E0F               	movlw	high STR_11
  4343  0013E6  6E39               	movwf	lcd_write@string+1,c
  4344  0013E8  ECC7  F011         	call	_lcd_write	;wreg free
  4345                           
  4346                           ;main.c: 136: break;
  4347  0013EC  0012               	return	
  4348  0013EE                     l2565:
  4349                           
  4350                           ;main.c: 139: lcd_write(9,1,">");
  4351  0013EE  0E00               	movlw	0
  4352  0013F0  6E35               	movwf	lcd_write@column+1,c
  4353  0013F2  0E09               	movlw	9
  4354  0013F4  6E34               	movwf	lcd_write@column,c
  4355  0013F6  0E00               	movlw	0
  4356  0013F8  6E37               	movwf	lcd_write@row+1,c
  4357  0013FA  0E01               	movlw	1
  4358  0013FC  6E36               	movwf	lcd_write@row,c
  4359  0013FE  0E94               	movlw	low STR_10
  4360  001400  6E38               	movwf	lcd_write@string,c
  4361  001402  0E0F               	movlw	high STR_10
  4362  001404  6E39               	movwf	lcd_write@string+1,c
  4363  001406  ECC7  F011         	call	_lcd_write	;wreg free
  4364                           
  4365                           ;main.c: 140: selection = 4;
  4366  00140A  0E00               	movlw	0
  4367  00140C  6E1E               	movwf	_selection+1,c
  4368  00140E  0E04               	movlw	4
  4369  001410  6E1D               	movwf	_selection,c
  4370                           
  4371                           ;main.c: 141: select = 3;
  4372  001412  0E00               	movlw	0
  4373  001414  6E1A               	movwf	_select+1,c
  4374  001416  0E03               	movlw	3
  4375  001418  6E19               	movwf	_select,c
  4376                           
  4377                           ;main.c: 142: lcd_write(1,2," ");
  4378  00141A  0E00               	movlw	0
  4379  00141C  6E35               	movwf	lcd_write@column+1,c
  4380  00141E  0E01               	movlw	1
  4381  001420  6E34               	movwf	lcd_write@column,c
  4382  001422  0E00               	movlw	0
  4383  001424  6E37               	movwf	lcd_write@row+1,c
  4384  001426  0E02               	movlw	2
  4385  001428  6E36               	movwf	lcd_write@row,c
  4386  00142A  0E90               	movlw	low STR_11
  4387  00142C  6E38               	movwf	lcd_write@string,c
  4388  00142E  0E0F               	movlw	high STR_11
  4389  001430  6E39               	movwf	lcd_write@string+1,c
  4390  001432  ECC7  F011         	call	_lcd_write	;wreg free
  4391                           
  4392                           ;main.c: 143: break;
  4393  001436  0012               	return	
  4394  001438                     l2571:
  4395                           
  4396                           ;main.c: 146: lcd_write(9,2,">");
  4397  001438  0E00               	movlw	0
  4398  00143A  6E35               	movwf	lcd_write@column+1,c
  4399  00143C  0E09               	movlw	9
  4400  00143E  6E34               	movwf	lcd_write@column,c
  4401  001440  0E00               	movlw	0
  4402  001442  6E37               	movwf	lcd_write@row+1,c
  4403  001444  0E02               	movlw	2
  4404  001446  6E36               	movwf	lcd_write@row,c
  4405  001448  0E94               	movlw	low STR_10
  4406  00144A  6E38               	movwf	lcd_write@string,c
  4407  00144C  0E0F               	movlw	high STR_10
  4408  00144E  6E39               	movwf	lcd_write@string+1,c
  4409  001450  ECC7  F011         	call	_lcd_write	;wreg free
  4410                           
  4411                           ;main.c: 147: selection = 1;
  4412  001454  0E00               	movlw	0
  4413  001456  6E1E               	movwf	_selection+1,c
  4414  001458  0E01               	movlw	1
  4415  00145A  6E1D               	movwf	_selection,c
  4416                           
  4417                           ;main.c: 148: select = 4;
  4418  00145C  0E00               	movlw	0
  4419  00145E  6E1A               	movwf	_select+1,c
  4420  001460  0E04               	movlw	4
  4421  001462  6E19               	movwf	_select,c
  4422                           
  4423                           ;main.c: 149: lcd_write(9,1," ");
  4424  001464  0E00               	movlw	0
  4425  001466  6E35               	movwf	lcd_write@column+1,c
  4426  001468  0E09               	movlw	9
  4427  00146A  6E34               	movwf	lcd_write@column,c
  4428  00146C  0E00               	movlw	0
  4429  00146E  6E37               	movwf	lcd_write@row+1,c
  4430  001470  0E01               	movlw	1
  4431  001472  6E36               	movwf	lcd_write@row,c
  4432  001474  0E90               	movlw	low STR_11
  4433  001476  6E38               	movwf	lcd_write@string,c
  4434  001478  0E0F               	movlw	high STR_11
  4435  00147A  6E39               	movwf	lcd_write@string+1,c
  4436  00147C  ECC7  F011         	call	_lcd_write	;wreg free
  4437                           
  4438                           ;main.c: 152: }
  4439                           
  4440                           ;main.c: 150: break;
  4441  001480  0012               	return	
  4442  001482                     l2579:
  4443  001482  C01D  F03A         	movff	_selection,??_menu_iterator
  4444  001486  C01E  F03B         	movff	_selection+1,??_menu_iterator+1
  4445                           
  4446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4447                           ; Switch size 1, requested type "space"
  4448                           ; Number of cases is 1, Range of values is 0 to 0
  4449                           ; switch strategies available:
  4450                           ; Name         Instructions Cycles
  4451                           ; simple_byte            4     3 (average)
  4452                           ;	Chosen strategy is simple_byte
  4453  00148A  503B               	movf	??_menu_iterator+1,w,c
  4454  00148C  0A00               	xorlw	0	; case 0
  4455  00148E  A4D8               	btfss	status,2,c
  4456  001490  0012               	return	
  4457                           
  4458                           ; Switch size 1, requested type "space"
  4459                           ; Number of cases is 4, Range of values is 1 to 4
  4460                           ; switch strategies available:
  4461                           ; Name         Instructions Cycles
  4462                           ; simple_byte           13     7 (average)
  4463                           ;	Chosen strategy is simple_byte
  4464  001492  503A               	movf	??_menu_iterator,w,c
  4465  001494  0A01               	xorlw	1	; case 1
  4466  001496  B4D8               	btfsc	status,2,c
  4467  001498  D760               	goto	l2553
  4468  00149A  0A03               	xorlw	3	; case 2
  4469  00149C  B4D8               	btfsc	status,2,c
  4470  00149E  D782               	goto	l2559
  4471  0014A0  0A01               	xorlw	1	; case 3
  4472  0014A2  B4D8               	btfsc	status,2,c
  4473  0014A4  D7A4               	goto	l2565
  4474  0014A6  0A07               	xorlw	7	; case 4
  4475  0014A8  A4D8               	btfss	status,2,c
  4476  0014AA  0012               	return	
  4477  0014AC  D7C5               	goto	l2571
  4478  0014AE  0012               	return		;funcret
  4479  0014B0                     __end_of_menu_iterator:
  4480                           	opt stack 0
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           prodh	equ	0xFF4
  4486                           prodl	equ	0xFF3
  4487                           intcon	equ	0xFF2
  4488                           postinc0	equ	0xFEE
  4489                           wreg	equ	0xFE8
  4490                           postdec1	equ	0xFE5
  4491                           fsr1l	equ	0xFE1
  4492                           indf2	equ	0xFDF
  4493                           fsr2h	equ	0xFDA
  4494                           fsr2l	equ	0xFD9
  4495                           status	equ	0xFD8
  4496                           
  4497 ;; *************** function _home_clock_refresh *****************
  4498 ;; Defined at:
  4499 ;;		line 86 in file "main.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;		None
  4504 ;; Return value:  Size  Location     Type
  4505 ;;		None               void
  4506 ;; Registers used:
  4507 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4517 ;;Total ram usage:        0 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    6
  4520 ;; This function calls:
  4521 ;;		_lcd_write
  4522 ;;		_sprintf
  4523 ;; This function is called by:
  4524 ;;		_main
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text28
  4529  001A8C                     __ptext28:
  4530                           	opt stack 0
  4531  001A8C                     _home_clock_refresh:
  4532                           	opt stack 24
  4533                           
  4534                           ;main.c: 88: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  4535                           
  4536                           ;incstack = 0
  4537  001A8C  0E80               	movlw	low _buffer1
  4538  001A8E  6E36               	movwf	sprintf@sp,c
  4539  001A90  0E00               	movlw	high _buffer1
  4540  001A92  6E37               	movwf	sprintf@sp+1,c
  4541  001A94  0E1F               	movlw	low STR_2
  4542  001A96  6E38               	movwf	sprintf@f,c
  4543  001A98  0E0F               	movlw	high STR_2
  4544  001A9A  6E39               	movwf	sprintf@f+1,c
  4545  001A9C  C050  F03A         	movff	_dia,?_sprintf+4
  4546  001AA0  C051  F03B         	movff	_dia+1,?_sprintf+5
  4547  001AA4  C056  F03C         	movff	_mes,?_sprintf+6
  4548  001AA8  C057  F03D         	movff	_mes+1,?_sprintf+7
  4549  001AAC  C04E  F03E         	movff	_anio,?_sprintf+8
  4550  001AB0  C04F  F03F         	movff	_anio+1,?_sprintf+9
  4551  001AB4  ECCC  F007         	call	_sprintf	;wreg free
  4552                           
  4553                           ;main.c: 89: lcd_write(9,1,buffer1);
  4554  001AB8  0E00               	movlw	0
  4555  001ABA  6E35               	movwf	lcd_write@column+1,c
  4556  001ABC  0E09               	movlw	9
  4557  001ABE  6E34               	movwf	lcd_write@column,c
  4558  001AC0  0E00               	movlw	0
  4559  001AC2  6E37               	movwf	lcd_write@row+1,c
  4560  001AC4  0E01               	movlw	1
  4561  001AC6  6E36               	movwf	lcd_write@row,c
  4562  001AC8  0E80               	movlw	low _buffer1
  4563  001ACA  6E38               	movwf	lcd_write@string,c
  4564  001ACC  0E00               	movlw	high _buffer1
  4565  001ACE  6E39               	movwf	lcd_write@string+1,c
  4566  001AD0  ECC7  F011         	call	_lcd_write	;wreg free
  4567                           
  4568                           ;main.c: 90: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  4569  001AD4  0E80               	movlw	low _buffer1
  4570  001AD6  6E36               	movwf	sprintf@sp,c
  4571  001AD8  0E00               	movlw	high _buffer1
  4572  001ADA  6E37               	movwf	sprintf@sp+1,c
  4573  001ADC  0E2E               	movlw	low STR_3
  4574  001ADE  6E38               	movwf	sprintf@f,c
  4575  001AE0  0E0F               	movlw	high STR_3
  4576  001AE2  6E39               	movwf	sprintf@f+1,c
  4577  001AE4  C054  F03A         	movff	_hora,?_sprintf+4
  4578  001AE8  C055  F03B         	movff	_hora+1,?_sprintf+5
  4579  001AEC  C015  F03C         	movff	_minuto,?_sprintf+6
  4580  001AF0  C016  F03D         	movff	_minuto+1,?_sprintf+7
  4581  001AF4  C017  F03E         	movff	_segundo,?_sprintf+8
  4582  001AF8  C018  F03F         	movff	_segundo+1,?_sprintf+9
  4583  001AFC  ECCC  F007         	call	_sprintf	;wreg free
  4584                           
  4585                           ;main.c: 91: lcd_write(9,2,buffer1);
  4586  001B00  0E00               	movlw	0
  4587  001B02  6E35               	movwf	lcd_write@column+1,c
  4588  001B04  0E09               	movlw	9
  4589  001B06  6E34               	movwf	lcd_write@column,c
  4590  001B08  0E00               	movlw	0
  4591  001B0A  6E37               	movwf	lcd_write@row+1,c
  4592  001B0C  0E02               	movlw	2
  4593  001B0E  6E36               	movwf	lcd_write@row,c
  4594  001B10  0E80               	movlw	low _buffer1
  4595  001B12  6E38               	movwf	lcd_write@string,c
  4596  001B14  0E00               	movlw	high _buffer1
  4597  001B16  6E39               	movwf	lcd_write@string+1,c
  4598  001B18  ECC7  F011         	call	_lcd_write	;wreg free
  4599  001B1C  0012               	return		;funcret
  4600  001B1E                     __end_of_home_clock_refresh:
  4601                           	opt stack 0
  4602                           tblptru	equ	0xFF8
  4603                           tblptrh	equ	0xFF7
  4604                           tblptrl	equ	0xFF6
  4605                           tablat	equ	0xFF5
  4606                           prodh	equ	0xFF4
  4607                           prodl	equ	0xFF3
  4608                           intcon	equ	0xFF2
  4609                           postinc0	equ	0xFEE
  4610                           wreg	equ	0xFE8
  4611                           postdec1	equ	0xFE5
  4612                           fsr1l	equ	0xFE1
  4613                           indf2	equ	0xFDF
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _sprintf *****************
  4619 ;; Defined at:
  4620 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  sp              2   12[COMRAM] PTR unsigned char 
  4623 ;;		 -> buffer1(20), 
  4624 ;;  f               2   14[COMRAM] PTR const unsigned char 
  4625 ;;		 -> STR_36(5), STR_3(15), STR_2(15), 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  tmpval          4    0        struct .
  4628 ;;  cp              3    0        PTR const unsigned char 
  4629 ;;  width           2   32[COMRAM] int 
  4630 ;;  val             2   29[COMRAM] unsigned int 
  4631 ;;  ap              2   26[COMRAM] PTR void [1]
  4632 ;;		 -> ?_sprintf(2), 
  4633 ;;  len             2    0        unsigned int 
  4634 ;;  c               1   34[COMRAM] char 
  4635 ;;  prec            1   31[COMRAM] char 
  4636 ;;  flag            1   28[COMRAM] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2   12[COMRAM] int 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4646 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4647 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4649 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4650 ;;Total ram usage:       23 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    1
  4653 ;; This function calls:
  4654 ;;		___lwdiv
  4655 ;;		___lwmod
  4656 ;;		___wmul
  4657 ;;		_isdigit
  4658 ;; This function is called by:
  4659 ;;		_home_clock_refresh
  4660 ;;		_button_number
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text29
  4665  000F98                     __ptext29:
  4666                           	opt stack 0
  4667  000F98                     _sprintf:
  4668                           	opt stack 27
  4669                           
  4670                           ;doprnt.c: 494: va_list ap;
  4671                           ;doprnt.c: 499: signed char c;
  4672                           ;doprnt.c: 501: int width;
  4673                           ;doprnt.c: 506: signed char prec;
  4674                           ;doprnt.c: 508: unsigned char flag;
  4675                           ;doprnt.c: 523: union {
  4676                           ;doprnt.c: 524: unsigned long vd;
  4677                           ;doprnt.c: 525: double integ;
  4678                           ;doprnt.c: 526: } tmpval;
  4679                           ;doprnt.c: 528: unsigned int val;
  4680                           ;doprnt.c: 529: unsigned len;
  4681                           ;doprnt.c: 530: const char * cp;
  4682                           ;doprnt.c: 533: *ap = __va_start();
  4683                           
  4684                           ;incstack = 0
  4685  000F98  0E3A               	movlw	low (?_sprintf+4)
  4686  000F9A  6E44               	movwf	sprintf@ap,c
  4687  000F9C  0E00               	movlw	high (?_sprintf+4)
  4688  000F9E  6E45               	movwf	sprintf@ap+1,c
  4689                           
  4690                           ;doprnt.c: 536: while(c = *f++) {
  4691  000FA0  D117               	goto	l2533
  4692  000FA2                     l2451:
  4693                           
  4694                           ;doprnt.c: 538: if(c != '%')
  4695  000FA2  0E25               	movlw	37
  4696  000FA4  184C               	xorwf	sprintf@c,w,c
  4697  000FA6  B4D8               	btfsc	status,2,c
  4698  000FA8  D009               	goto	l2457
  4699                           
  4700                           ;doprnt.c: 540: {
  4701                           ;doprnt.c: 541: ((*sp++ = (c)));
  4702  000FAA  C036  FFD9         	movff	sprintf@sp,fsr2l
  4703  000FAE  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  4704  000FB2  C04C  FFDF         	movff	sprintf@c,indf2
  4705  000FB6  4A36               	infsnz	sprintf@sp,f,c
  4706  000FB8  2A37               	incf	sprintf@sp+1,f,c
  4707                           
  4708                           ;doprnt.c: 542: continue;
  4709  000FBA  D10A               	goto	l2533
  4710  000FBC                     l2457:
  4711                           
  4712                           ;doprnt.c: 543: }
  4713                           ;doprnt.c: 546: width = 0;
  4714  000FBC  0E00               	movlw	0
  4715  000FBE  6E4B               	movwf	sprintf@width+1,c
  4716  000FC0  0E00               	movlw	0
  4717  000FC2  6E4A               	movwf	sprintf@width,c
  4718                           
  4719                           ;doprnt.c: 548: flag = 0;
  4720  000FC4  0E00               	movlw	0
  4721  000FC6  6E46               	movwf	sprintf@flag,c
  4722                           
  4723                           ;doprnt.c: 551: switch(*f) {
  4724                           
  4725                           ;doprnt.c: 550: for(;;) {
  4726  000FC8  D005               	goto	l2463
  4727  000FCA                     l2459:
  4728                           
  4729                           ;doprnt.c: 580: flag |= 0x04;
  4730  000FCA  8446               	bsf	sprintf@flag,2,c
  4731                           
  4732                           ;doprnt.c: 581: f++;
  4733  000FCC  4A38               	infsnz	sprintf@f,f,c
  4734  000FCE  2A39               	incf	sprintf@f+1,f,c
  4735                           
  4736                           ;doprnt.c: 582: continue;
  4737  000FD0  D001               	goto	l2463
  4738                           
  4739                           ;doprnt.c: 584: }
  4740  000FD2  D00B               	goto	l2465
  4741  000FD4                     l2463:
  4742  000FD4  C038  FFF6         	movff	sprintf@f,tblptrl
  4743  000FD8  C039  FFF7         	movff	sprintf@f+1,tblptrh
  4744  000FDC                     	if	0	;tblptru may be non-zero
  4745  000FDC                     	endif
  4746  000FDC                     	if	0	;tblptru may be non-zero
  4747  000FDC                     	endif
  4748  000FDC  0008               	tblrd		*
  4749  000FDE  50F5               	movf	tablat,w,c
  4750                           
  4751                           ; Switch size 1, requested type "space"
  4752                           ; Number of cases is 1, Range of values is 48 to 48
  4753                           ; switch strategies available:
  4754                           ; Name         Instructions Cycles
  4755                           ; simple_byte            4     3 (average)
  4756                           ;	Chosen strategy is simple_byte
  4757  000FE0  0A30               	xorlw	48	; case 48
  4758  000FE2  B4D8               	btfsc	status,2,c
  4759  000FE4  D7F2               	goto	l2459
  4760                           
  4761                           ;doprnt.c: 585: break;
  4762  000FE6  D001               	goto	l2465
  4763                           
  4764                           ;doprnt.c: 586: }
  4765  000FE8  D7F5               	goto	l2463
  4766  000FEA                     l2465:
  4767                           
  4768                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4769  000FEA  C038  FFF6         	movff	sprintf@f,tblptrl
  4770  000FEE  C039  FFF7         	movff	sprintf@f+1,tblptrh
  4771  000FF2                     	if	0	;tblptru may be non-zero
  4772  000FF2                     	endif
  4773  000FF2                     	if	0	;tblptru may be non-zero
  4774  000FF2                     	endif
  4775  000FF2  0008               	tblrd		*
  4776  000FF4  50F5               	movf	tablat,w,c
  4777  000FF6  EC9A  F011         	call	_isdigit
  4778  000FFA  A0D8               	btfss	status,0,c
  4779  000FFC  D03A               	goto	l2481
  4780                           
  4781                           ;doprnt.c: 598: width = 0;
  4782  000FFE  0E00               	movlw	0
  4783  001000  6E4B               	movwf	sprintf@width+1,c
  4784  001002  0E00               	movlw	0
  4785  001004  6E4A               	movwf	sprintf@width,c
  4786  001006  D000               	goto	l2469
  4787  001008                     l2469:
  4788                           
  4789                           ;doprnt.c: 600: width *= 10;
  4790  001008  C04A  F02A         	movff	sprintf@width,___wmul@multiplier
  4791  00100C  C04B  F02B         	movff	sprintf@width+1,___wmul@multiplier+1
  4792  001010  0E00               	movlw	0
  4793  001012  6E2D               	movwf	___wmul@multiplicand+1,c
  4794  001014  0E0A               	movlw	10
  4795  001016  6E2C               	movwf	___wmul@multiplicand,c
  4796  001018  EC50  F011         	call	___wmul	;wreg free
  4797  00101C  C02A  F04A         	movff	?___wmul,sprintf@width
  4798  001020  C02B  F04B         	movff	?___wmul+1,sprintf@width+1
  4799                           
  4800                           ;doprnt.c: 601: width += *f++ - '0';
  4801  001024  0ED0               	movlw	208
  4802  001026  6E40               	movwf	??_sprintf& (0+255),c
  4803  001028  0EFF               	movlw	255
  4804  00102A  6E41               	movwf	(??_sprintf+1)& (0+255),c
  4805  00102C  C038  FFF6         	movff	sprintf@f,tblptrl
  4806  001030  C039  FFF7         	movff	sprintf@f+1,tblptrh
  4807  001034                     	if	0	;tblptru may be non-zero
  4808  001034                     	endif
  4809  001034                     	if	0	;tblptru may be non-zero
  4810  001034                     	endif
  4811  001034  0008               	tblrd		*
  4812  001036  50F5               	movf	tablat,w,c
  4813  001038  6E42               	movwf	(??_sprintf+2)& (0+255),c
  4814  00103A  6A43               	clrf	(??_sprintf+3)& (0+255),c
  4815  00103C  5040               	movf	??_sprintf,w,c
  4816  00103E  2642               	addwf	??_sprintf+2,f,c
  4817  001040  5041               	movf	??_sprintf+1,w,c
  4818  001042  2243               	addwfc	??_sprintf+3,f,c
  4819  001044  5042               	movf	??_sprintf+2,w,c
  4820  001046  264A               	addwf	sprintf@width,f,c
  4821  001048  5043               	movf	??_sprintf+3,w,c
  4822  00104A  224B               	addwfc	sprintf@width+1,f,c
  4823  00104C  4A38               	infsnz	sprintf@f,f,c
  4824  00104E  2A39               	incf	sprintf@f+1,f,c
  4825                           
  4826                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4827  001050  C038  FFF6         	movff	sprintf@f,tblptrl
  4828  001054  C039  FFF7         	movff	sprintf@f+1,tblptrh
  4829  001058                     	if	0	;tblptru may be non-zero
  4830  001058                     	endif
  4831  001058                     	if	0	;tblptru may be non-zero
  4832  001058                     	endif
  4833  001058  0008               	tblrd		*
  4834  00105A  50F5               	movf	tablat,w,c
  4835  00105C  EC9A  F011         	call	_isdigit
  4836  001060  A0D8               	btfss	status,0,c
  4837  001062  D007               	goto	l2481
  4838  001064  D7D1               	goto	l2469
  4839                           
  4840                           ;doprnt.c: 608: }
  4841                           ;doprnt.c: 635: switch(c = *f++) {
  4842  001066  D005               	goto	l2481
  4843                           
  4844                           ;doprnt.c: 638: goto alldone;
  4845                           
  4846                           ;doprnt.c: 637: case 0:
  4847  001068  D0C1               	goto	l2535
  4848                           
  4849                           ;doprnt.c: 813: continue;
  4850                           
  4851                           ;doprnt.c: 802: default:
  4852  00106A  D0B2               	goto	l2533
  4853  00106C                     l2477:
  4854                           
  4855                           ;doprnt.c: 818: flag |= 0xC0;
  4856  00106C  0EC0               	movlw	192
  4857  00106E  1246               	iorwf	sprintf@flag,f,c
  4858                           
  4859                           ;doprnt.c: 822: }
  4860                           
  4861                           ;doprnt.c: 819: break;
  4862  001070  D011               	goto	l2483
  4863  001072                     l2481:
  4864  001072  C038  FFF6         	movff	sprintf@f,tblptrl
  4865  001076  C039  FFF7         	movff	sprintf@f+1,tblptrh
  4866  00107A  4A38               	infsnz	sprintf@f,f,c
  4867  00107C  2A39               	incf	sprintf@f+1,f,c
  4868  00107E                     	if	0	;tblptru may be non-zero
  4869  00107E                     	endif
  4870  00107E                     	if	0	;tblptru may be non-zero
  4871  00107E                     	endif
  4872  00107E  0008               	tblrd		*
  4873  001080  CFF5 F04C          	movff	tablat,sprintf@c
  4874  001084  504C               	movf	sprintf@c,w,c
  4875                           
  4876                           ; Switch size 1, requested type "space"
  4877                           ; Number of cases is 2, Range of values is 0 to 117
  4878                           ; switch strategies available:
  4879                           ; Name         Instructions Cycles
  4880                           ; simple_byte            7     4 (average)
  4881                           ;	Chosen strategy is simple_byte
  4882  001086  0A00               	xorlw	0	; case 0
  4883  001088  B4D8               	btfsc	status,2,c
  4884  00108A  D0B0               	goto	l2535
  4885  00108C  0A75               	xorlw	117	; case 117
  4886  00108E  B4D8               	btfsc	status,2,c
  4887  001090  D7ED               	goto	l2477
  4888  001092  D09E               	goto	l2533
  4889  001094                     l2483:
  4890                           
  4891                           ;doprnt.c: 1273: {
  4892                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4893  001094  C044  FFD9         	movff	sprintf@ap,fsr2l
  4894  001098  C045  FFDA         	movff	sprintf@ap+1,fsr2h
  4895  00109C  CFDE F047          	movff	postinc2,sprintf@val
  4896  0010A0  CFDD F048          	movff	postdec2,sprintf@val+1
  4897  0010A4  0E02               	movlw	2
  4898  0010A6  2644               	addwf	sprintf@ap,f,c
  4899  0010A8  0E00               	movlw	0
  4900  0010AA  2245               	addwfc	sprintf@ap+1,f,c
  4901                           
  4902                           ;doprnt.c: 1287: }
  4903                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4904  0010AC  0E01               	movlw	1
  4905  0010AE  6E4C               	movwf	sprintf@c,c
  4906  0010B0                     l2489:
  4907  0010B0  0E05               	movlw	5
  4908  0010B2  184C               	xorwf	sprintf@c,w,c
  4909  0010B4  B4D8               	btfsc	status,2,c
  4910  0010B6  D016               	goto	l2501
  4911  0010B8  D001               	goto	l2493
  4912  0010BA  D014               	goto	l2501
  4913  0010BC                     l2493:
  4914                           
  4915                           ;doprnt.c: 1306: if(val < dpowers[c])
  4916  0010BC  504C               	movf	sprintf@c,w,c
  4917  0010BE  0D02               	mullw	2
  4918  0010C0  0E01               	movlw	low _dpowers
  4919  0010C2  24F3               	addwf	prodl,w,c
  4920  0010C4  6EF6               	movwf	tblptrl,c
  4921  0010C6  0E0F               	movlw	high _dpowers
  4922  0010C8  20F4               	addwfc	prodh,w,c
  4923  0010CA  6EF7               	movwf	tblptrh,c
  4924  0010CC                     	if	0	;There are less than 3 active tblptr bytes
  4925  0010CC                     	endif
  4926  0010CC  0009               	tblrd		*+
  4927  0010CE  50F5               	movf	tablat,w,c
  4928  0010D0  5C47               	subwf	sprintf@val,w,c
  4929  0010D2  0009               	tblrd		*+
  4930  0010D4  50F5               	movf	tablat,w,c
  4931  0010D6  5848               	subwfb	sprintf@val+1,w,c
  4932  0010D8  A0D8               	btfss	status,0,c
  4933  0010DA  D004               	goto	l2501
  4934  0010DC  D001               	goto	l2497
  4935                           
  4936                           ;doprnt.c: 1307: break;
  4937  0010DE  D002               	goto	l2501
  4938  0010E0                     l2497:
  4939  0010E0  2A4C               	incf	sprintf@c,f,c
  4940  0010E2  D7E6               	goto	l2489
  4941  0010E4                     l2501:
  4942                           
  4943                           ;doprnt.c: 1381: if(width > c)
  4944  0010E4  0E80               	movlw	128
  4945  0010E6  BE4C               	btfsc	sprintf@c,7,c
  4946  0010E8  0E7F               	movlw	127
  4947  0010EA  6E40               	movwf	??_sprintf& (0+255),c
  4948  0010EC  504A               	movf	sprintf@width,w,c
  4949  0010EE  5C4C               	subwf	sprintf@c,w,c
  4950  0010F0  504B               	movf	sprintf@width+1,w,c
  4951  0010F2  0A80               	xorlw	128
  4952  0010F4  5840               	subwfb	??_sprintf& (0+255),w,c
  4953  0010F6  B0D8               	btfsc	status,0,c
  4954  0010F8  D007               	goto	l2505
  4955                           
  4956                           ;doprnt.c: 1382: width -= c;
  4957  0010FA  504C               	movf	sprintf@c,w,c
  4958  0010FC  5E4A               	subwf	sprintf@width,f,c
  4959  0010FE  0E00               	movlw	0
  4960  001100  BE4C               	btfsc	sprintf@c,7,c
  4961  001102  0EFF               	movlw	255
  4962  001104  5A4B               	subwfb	sprintf@width+1,f,c
  4963  001106  D005               	goto	l2507
  4964  001108                     l2505:
  4965                           
  4966                           ;doprnt.c: 1383: else
  4967                           ;doprnt.c: 1384: width = 0;
  4968  001108  0E00               	movlw	0
  4969  00110A  6E4B               	movwf	sprintf@width+1,c
  4970  00110C  0E00               	movlw	0
  4971  00110E  6E4A               	movwf	sprintf@width,c
  4972  001110  D000               	goto	l2507
  4973  001112                     l2507:
  4974                           
  4975                           ;doprnt.c: 1387: if(flag & 0x04) {
  4976  001112  A446               	btfss	sprintf@flag,2,c
  4977  001114  D015               	goto	l2517
  4978                           
  4979                           ;doprnt.c: 1415: if(width)
  4980  001116  504A               	movf	sprintf@width,w,c
  4981  001118  104B               	iorwf	sprintf@width+1,w,c
  4982  00111A  B4D8               	btfsc	status,2,c
  4983  00111C  D026               	goto	l420
  4984  00111E                     l2511:
  4985                           
  4986                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4987  00111E  C036  FFD9         	movff	sprintf@sp,fsr2l
  4988  001122  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  4989  001126  0E30               	movlw	48
  4990  001128  6EDF               	movwf	indf2,c
  4991  00112A  4A36               	infsnz	sprintf@sp,f,c
  4992  00112C  2A37               	incf	sprintf@sp+1,f,c
  4993                           
  4994                           ;doprnt.c: 1418: while(--width);
  4995  00112E  064A               	decf	sprintf@width,f,c
  4996  001130  A0D8               	btfss	status,0,c
  4997  001132  064B               	decf	sprintf@width+1,f,c
  4998  001134  504A               	movf	sprintf@width,w,c
  4999  001136  104B               	iorwf	sprintf@width+1,w,c
  5000  001138  B4D8               	btfsc	status,2,c
  5001  00113A  D017               	goto	l420
  5002  00113C  D7F0               	goto	l2511
  5003                           
  5004                           ;doprnt.c: 1420: } else
  5005  00113E  D015               	goto	l420
  5006  001140                     l2517:
  5007                           
  5008                           ;doprnt.c: 1422: {
  5009                           ;doprnt.c: 1424: if(width
  5010                           ;doprnt.c: 1428: )
  5011  001140  504A               	movf	sprintf@width,w,c
  5012  001142  104B               	iorwf	sprintf@width+1,w,c
  5013  001144  B4D8               	btfsc	status,2,c
  5014  001146  D011               	goto	l420
  5015  001148                     l2519:
  5016                           
  5017                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5018  001148  C036  FFD9         	movff	sprintf@sp,fsr2l
  5019  00114C  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  5020  001150  0E20               	movlw	32
  5021  001152  6EDF               	movwf	indf2,c
  5022  001154  4A36               	infsnz	sprintf@sp,f,c
  5023  001156  2A37               	incf	sprintf@sp+1,f,c
  5024                           
  5025                           ;doprnt.c: 1431: while(--width);
  5026  001158  064A               	decf	sprintf@width,f,c
  5027  00115A  A0D8               	btfss	status,0,c
  5028  00115C  064B               	decf	sprintf@width+1,f,c
  5029  00115E  504A               	movf	sprintf@width,w,c
  5030  001160  104B               	iorwf	sprintf@width+1,w,c
  5031  001162  B4D8               	btfsc	status,2,c
  5032  001164  D002               	goto	l420
  5033  001166  D7F0               	goto	l2519
  5034  001168  D000               	goto	l420
  5035  00116A                     l420:
  5036                           
  5037                           ;doprnt.c: 1469: }
  5038                           ;doprnt.c: 1472: prec = c;
  5039  00116A  C04C  F049         	movff	sprintf@c,sprintf@prec
  5040                           
  5041                           ;doprnt.c: 1474: while(prec--) {
  5042  00116E  D02A               	goto	l2531
  5043  001170                     l2525:
  5044                           
  5045                           ;doprnt.c: 1478: {
  5046                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5047  001170  5049               	movf	sprintf@prec,w,c
  5048  001172  0D02               	mullw	2
  5049  001174  0E01               	movlw	low _dpowers
  5050  001176  24F3               	addwf	prodl,w,c
  5051  001178  6EF6               	movwf	tblptrl,c
  5052  00117A  0E0F               	movlw	high _dpowers
  5053  00117C  20F4               	addwfc	prodh,w,c
  5054  00117E  6EF7               	movwf	tblptrh,c
  5055  001180                     	if	0	;There are less than 3 active tblptr bytes
  5056  001180                     	endif
  5057  001180  0009               	tblrd		*+
  5058  001182  CFF5 F02C          	movff	tablat,___lwdiv@divisor
  5059  001186  000A               	tblrd		*-
  5060  001188  CFF5 F02D          	movff	tablat,___lwdiv@divisor+1
  5061  00118C  C047  F02A         	movff	sprintf@val,___lwdiv@dividend
  5062  001190  C048  F02B         	movff	sprintf@val+1,___lwdiv@dividend+1
  5063  001194  EC41  F00F         	call	___lwdiv	;wreg free
  5064  001198  C02A  F031         	movff	?___lwdiv,___lwmod@dividend
  5065  00119C  C02B  F032         	movff	?___lwdiv+1,___lwmod@dividend+1
  5066  0011A0  0E00               	movlw	0
  5067  0011A2  6E34               	movwf	___lwmod@divisor+1,c
  5068  0011A4  0E0A               	movlw	10
  5069  0011A6  6E33               	movwf	___lwmod@divisor,c
  5070  0011A8  EC76  F010         	call	___lwmod	;wreg free
  5071  0011AC  5031               	movf	?___lwmod,w,c
  5072  0011AE  0F30               	addlw	48
  5073  0011B0  6E4C               	movwf	sprintf@c,c
  5074                           
  5075                           ;doprnt.c: 1523: }
  5076                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5077  0011B2  C036  FFD9         	movff	sprintf@sp,fsr2l
  5078  0011B6  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  5079  0011BA  C04C  FFDF         	movff	sprintf@c,indf2
  5080  0011BE  4A36               	infsnz	sprintf@sp,f,c
  5081  0011C0  2A37               	incf	sprintf@sp+1,f,c
  5082  0011C2  D000               	goto	l2531
  5083  0011C4                     l2531:
  5084  0011C4  0649               	decf	sprintf@prec,f,c
  5085  0011C6  2849               	incf	sprintf@prec,w,c
  5086  0011C8  B4D8               	btfsc	status,2,c
  5087  0011CA  D002               	goto	l2533
  5088  0011CC  D7D1               	goto	l2525
  5089  0011CE  D000               	goto	l2533
  5090  0011D0                     l2533:
  5091  0011D0  C038  FFF6         	movff	sprintf@f,tblptrl
  5092  0011D4  C039  FFF7         	movff	sprintf@f+1,tblptrh
  5093  0011D8  4A38               	infsnz	sprintf@f,f,c
  5094  0011DA  2A39               	incf	sprintf@f+1,f,c
  5095  0011DC                     	if	0	;tblptru may be non-zero
  5096  0011DC                     	endif
  5097  0011DC                     	if	0	;tblptru may be non-zero
  5098  0011DC                     	endif
  5099  0011DC  0008               	tblrd		*
  5100  0011DE  CFF5 F04C          	movff	tablat,sprintf@c
  5101  0011E2  504C               	movf	sprintf@c,w,c
  5102  0011E4  B4D8               	btfsc	status,2,c
  5103  0011E6  D002               	goto	l2535
  5104  0011E8  D6DC               	goto	l2451
  5105  0011EA  D000               	goto	l2535
  5106  0011EC                     l2535:
  5107                           
  5108                           ;doprnt.c: 1538: *sp = 0;
  5109  0011EC  C036  FFD9         	movff	sprintf@sp,fsr2l
  5110  0011F0  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  5111  0011F4  0E00               	movlw	0
  5112  0011F6  6EDF               	movwf	indf2,c
  5113  0011F8  0012               	return	
  5114                           
  5115                           ;doprnt.c: 1540: return 0;
  5116                           ;	Return value of _sprintf is never used
  5117  0011FA  0012               	return		;funcret
  5118  0011FC                     __end_of_sprintf:
  5119                           	opt stack 0
  5120                           tblptru	equ	0xFF8
  5121                           tblptrh	equ	0xFF7
  5122                           tblptrl	equ	0xFF6
  5123                           tablat	equ	0xFF5
  5124                           prodh	equ	0xFF4
  5125                           prodl	equ	0xFF3
  5126                           intcon	equ	0xFF2
  5127                           postinc0	equ	0xFEE
  5128                           wreg	equ	0xFE8
  5129                           postdec1	equ	0xFE5
  5130                           fsr1l	equ	0xFE1
  5131                           indf2	equ	0xFDF
  5132                           postinc2	equ	0xFDE
  5133                           postdec2	equ	0xFDD
  5134                           fsr2h	equ	0xFDA
  5135                           fsr2l	equ	0xFD9
  5136                           status	equ	0xFD8
  5137                           
  5138 ;; *************** function _isdigit *****************
  5139 ;; Defined at:
  5140 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  c               1    wreg     unsigned char 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  c               1    2[COMRAM] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;		None               void
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5157 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5158 ;;Total ram usage:        3 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_sprintf
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text30
  5168  002334                     __ptext30:
  5169                           	opt stack 0
  5170  002334                     _isdigit:
  5171                           	opt stack 27
  5172                           
  5173                           ;incstack = 0
  5174                           ;isdigit@c stored from wreg
  5175  002334  6E2C               	movwf	isdigit@c,c
  5176  002336  0E00               	movlw	0
  5177  002338  6E2B               	movwf	_isdigit$2110,c
  5178  00233A  0E3A               	movlw	58
  5179  00233C  602C               	cpfslt	isdigit@c,c
  5180  00233E  D006               	goto	l2265
  5181  002340  0E2F               	movlw	47
  5182  002342  642C               	cpfsgt	isdigit@c,c
  5183  002344  D003               	goto	l2265
  5184  002346  0E01               	movlw	1
  5185  002348  6E2B               	movwf	_isdigit$2110,c
  5186  00234A  D000               	goto	l2265
  5187  00234C                     l2265:
  5188  00234C  C02B  F02A         	movff	_isdigit$2110,??_isdigit
  5189  002350  302A               	rrcf	??_isdigit,w,c
  5190  002352  0012               	return	
  5191  002354  0012               	return		;funcret
  5192  002356                     __end_of_isdigit:
  5193                           	opt stack 0
  5194                           tblptru	equ	0xFF8
  5195                           tblptrh	equ	0xFF7
  5196                           tblptrl	equ	0xFF6
  5197                           tablat	equ	0xFF5
  5198                           prodh	equ	0xFF4
  5199                           prodl	equ	0xFF3
  5200                           intcon	equ	0xFF2
  5201                           postinc0	equ	0xFEE
  5202                           wreg	equ	0xFE8
  5203                           postdec1	equ	0xFE5
  5204                           fsr1l	equ	0xFE1
  5205                           indf2	equ	0xFDF
  5206                           postinc2	equ	0xFDE
  5207                           postdec2	equ	0xFDD
  5208                           fsr2h	equ	0xFDA
  5209                           fsr2l	equ	0xFD9
  5210                           status	equ	0xFD8
  5211                           
  5212 ;; *************** function ___wmul *****************
  5213 ;; Defined at:
  5214 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  multiplier      2    0[COMRAM] unsigned int 
  5217 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  product         2    4[COMRAM] unsigned int 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2    0[COMRAM] unsigned int 
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0, prodl, prodh
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;Total ram usage:        6 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_sprintf
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text31
  5243  0022A0                     __ptext31:
  5244                           	opt stack 0
  5245  0022A0                     ___wmul:
  5246                           	opt stack 27
  5247                           
  5248                           ;incstack = 0
  5249  0022A0  502A               	movf	___wmul@multiplier,w,c
  5250  0022A2  022C               	mulwf	___wmul@multiplicand,c
  5251  0022A4  CFF3 F02E          	movff	prodl,___wmul@product
  5252  0022A8  CFF4 F02F          	movff	prodh,___wmul@product+1
  5253  0022AC  502A               	movf	___wmul@multiplier,w,c
  5254  0022AE  022D               	mulwf	___wmul@multiplicand+1,c
  5255  0022B0  50F3               	movf	prodl,w,c
  5256  0022B2  262F               	addwf	___wmul@product+1,f,c
  5257  0022B4  502B               	movf	___wmul@multiplier+1,w,c
  5258  0022B6  022C               	mulwf	___wmul@multiplicand,c
  5259  0022B8  50F3               	movf	prodl,w,c
  5260  0022BA  262F               	addwf	___wmul@product+1,f,c
  5261  0022BC  C02E  F02A         	movff	___wmul@product,?___wmul
  5262  0022C0  C02F  F02B         	movff	___wmul@product+1,?___wmul+1
  5263  0022C4  0012               	return	
  5264  0022C6  0012               	return		;funcret
  5265  0022C8                     __end_of___wmul:
  5266                           	opt stack 0
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           prodh	equ	0xFF4
  5272                           prodl	equ	0xFF3
  5273                           intcon	equ	0xFF2
  5274                           postinc0	equ	0xFEE
  5275                           wreg	equ	0xFE8
  5276                           postdec1	equ	0xFE5
  5277                           fsr1l	equ	0xFE1
  5278                           indf2	equ	0xFDF
  5279                           postinc2	equ	0xFDE
  5280                           postdec2	equ	0xFDD
  5281                           fsr2h	equ	0xFDA
  5282                           fsr2l	equ	0xFD9
  5283                           status	equ	0xFD8
  5284                           
  5285 ;; *************** function ___lwmod *****************
  5286 ;; Defined at:
  5287 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  dividend        2    7[COMRAM] unsigned int 
  5290 ;;  divisor         2    9[COMRAM] unsigned int 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  counter         1   11[COMRAM] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  2    7[COMRAM] unsigned int 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5305 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5306 ;;Total ram usage:        5 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_sprintf
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text32
  5316  0020EC                     __ptext32:
  5317                           	opt stack 0
  5318  0020EC                     ___lwmod:
  5319                           	opt stack 27
  5320                           
  5321                           ;incstack = 0
  5322  0020EC  5033               	movf	___lwmod@divisor,w,c
  5323  0020EE  1034               	iorwf	___lwmod@divisor+1,w,c
  5324  0020F0  B4D8               	btfsc	status,2,c
  5325  0020F2  D01D               	goto	l1074
  5326  0020F4  0E01               	movlw	1
  5327  0020F6  6E35               	movwf	___lwmod@counter,c
  5328  0020F8  D005               	goto	l2303
  5329  0020FA                     l2301:
  5330  0020FA  90D8               	bcf	status,0,c
  5331  0020FC  3633               	rlcf	___lwmod@divisor,f,c
  5332  0020FE  3634               	rlcf	___lwmod@divisor+1,f,c
  5333  002100  2A35               	incf	___lwmod@counter,f,c
  5334  002102  D000               	goto	l2303
  5335  002104                     l2303:
  5336  002104  BE34               	btfsc	___lwmod@divisor+1,7,c
  5337  002106  D002               	goto	l2305
  5338  002108  D7F8               	goto	l2301
  5339  00210A  D000               	goto	l2305
  5340  00210C                     l2305:
  5341  00210C  5033               	movf	___lwmod@divisor,w,c
  5342  00210E  5C31               	subwf	___lwmod@dividend,w,c
  5343  002110  5034               	movf	___lwmod@divisor+1,w,c
  5344  002112  5832               	subwfb	___lwmod@dividend+1,w,c
  5345  002114  A0D8               	btfss	status,0,c
  5346  002116  D005               	goto	l2309
  5347  002118  5033               	movf	___lwmod@divisor,w,c
  5348  00211A  5E31               	subwf	___lwmod@dividend,f,c
  5349  00211C  5034               	movf	___lwmod@divisor+1,w,c
  5350  00211E  5A32               	subwfb	___lwmod@dividend+1,f,c
  5351  002120  D000               	goto	l2309
  5352  002122                     l2309:
  5353  002122  90D8               	bcf	status,0,c
  5354  002124  3234               	rrcf	___lwmod@divisor+1,f,c
  5355  002126  3233               	rrcf	___lwmod@divisor,f,c
  5356  002128  2E35               	decfsz	___lwmod@counter,f,c
  5357  00212A  D7F0               	goto	l2305
  5358  00212C  D000               	goto	l1074
  5359  00212E                     l1074:
  5360  00212E  C031  F031         	movff	___lwmod@dividend,?___lwmod
  5361  002132  C032  F032         	movff	___lwmod@dividend+1,?___lwmod+1
  5362  002136  0012               	return		;funcret
  5363  002138                     __end_of___lwmod:
  5364                           	opt stack 0
  5365                           tblptru	equ	0xFF8
  5366                           tblptrh	equ	0xFF7
  5367                           tblptrl	equ	0xFF6
  5368                           tablat	equ	0xFF5
  5369                           prodh	equ	0xFF4
  5370                           prodl	equ	0xFF3
  5371                           intcon	equ	0xFF2
  5372                           postinc0	equ	0xFEE
  5373                           wreg	equ	0xFE8
  5374                           postdec1	equ	0xFE5
  5375                           fsr1l	equ	0xFE1
  5376                           indf2	equ	0xFDF
  5377                           postinc2	equ	0xFDE
  5378                           postdec2	equ	0xFDD
  5379                           fsr2h	equ	0xFDA
  5380                           fsr2l	equ	0xFD9
  5381                           status	equ	0xFD8
  5382                           
  5383 ;; *************** function ___lwdiv *****************
  5384 ;; Defined at:
  5385 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  dividend        2    0[COMRAM] unsigned int 
  5388 ;;  divisor         2    2[COMRAM] unsigned int 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  quotient        2    4[COMRAM] unsigned int 
  5391 ;;  counter         1    6[COMRAM] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  2    0[COMRAM] unsigned int 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5405 ;;Total ram usage:        7 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_sprintf
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text33
  5415  001E82                     __ptext33:
  5416                           	opt stack 0
  5417  001E82                     ___lwdiv:
  5418                           	opt stack 27
  5419                           
  5420                           ;incstack = 0
  5421  001E82  0E00               	movlw	0
  5422  001E84  6E2F               	movwf	___lwdiv@quotient+1,c
  5423  001E86  0E00               	movlw	0
  5424  001E88  6E2E               	movwf	___lwdiv@quotient,c
  5425  001E8A  502C               	movf	___lwdiv@divisor,w,c
  5426  001E8C  102D               	iorwf	___lwdiv@divisor+1,w,c
  5427  001E8E  B4D8               	btfsc	status,2,c
  5428  001E90  D021               	goto	l1064
  5429  001E92  0E01               	movlw	1
  5430  001E94  6E30               	movwf	___lwdiv@counter,c
  5431  001E96  D005               	goto	l2283
  5432  001E98                     l2281:
  5433  001E98  90D8               	bcf	status,0,c
  5434  001E9A  362C               	rlcf	___lwdiv@divisor,f,c
  5435  001E9C  362D               	rlcf	___lwdiv@divisor+1,f,c
  5436  001E9E  2A30               	incf	___lwdiv@counter,f,c
  5437  001EA0  D000               	goto	l2283
  5438  001EA2                     l2283:
  5439  001EA2  BE2D               	btfsc	___lwdiv@divisor+1,7,c
  5440  001EA4  D002               	goto	l2285
  5441  001EA6  D7F8               	goto	l2281
  5442  001EA8  D000               	goto	l2285
  5443  001EAA                     l2285:
  5444  001EAA  90D8               	bcf	status,0,c
  5445  001EAC  362E               	rlcf	___lwdiv@quotient,f,c
  5446  001EAE  362F               	rlcf	___lwdiv@quotient+1,f,c
  5447  001EB0  502C               	movf	___lwdiv@divisor,w,c
  5448  001EB2  5C2A               	subwf	___lwdiv@dividend,w,c
  5449  001EB4  502D               	movf	___lwdiv@divisor+1,w,c
  5450  001EB6  582B               	subwfb	___lwdiv@dividend+1,w,c
  5451  001EB8  A0D8               	btfss	status,0,c
  5452  001EBA  D006               	goto	l2293
  5453  001EBC  502C               	movf	___lwdiv@divisor,w,c
  5454  001EBE  5E2A               	subwf	___lwdiv@dividend,f,c
  5455  001EC0  502D               	movf	___lwdiv@divisor+1,w,c
  5456  001EC2  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  5457  001EC4  802E               	bsf	___lwdiv@quotient,0,c
  5458  001EC6  D000               	goto	l2293
  5459  001EC8                     l2293:
  5460  001EC8  90D8               	bcf	status,0,c
  5461  001ECA  322D               	rrcf	___lwdiv@divisor+1,f,c
  5462  001ECC  322C               	rrcf	___lwdiv@divisor,f,c
  5463  001ECE  2E30               	decfsz	___lwdiv@counter,f,c
  5464  001ED0  D7EC               	goto	l2285
  5465  001ED2  D000               	goto	l1064
  5466  001ED4                     l1064:
  5467  001ED4  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  5468  001ED8  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5469  001EDC  0012               	return		;funcret
  5470  001EDE                     __end_of___lwdiv:
  5471                           	opt stack 0
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           intcon	equ	0xFF2
  5479                           postinc0	equ	0xFEE
  5480                           wreg	equ	0xFE8
  5481                           postdec1	equ	0xFE5
  5482                           fsr1l	equ	0xFE1
  5483                           indf2	equ	0xFDF
  5484                           postinc2	equ	0xFDE
  5485                           postdec2	equ	0xFDD
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function _lcd_write *****************
  5491 ;; Defined at:
  5492 ;;		line 41 in file "main.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  column          2   10[COMRAM] int 
  5495 ;;  row             2   12[COMRAM] int 
  5496 ;;  string          2   14[COMRAM] PTR unsigned char 
  5497 ;;		 -> STR_33(5), STR_32(8), STR_31(7), STR_30(6), 
  5498 ;;		 -> STR_29(8), STR_28(4), STR_27(5), STR_26(6), 
  5499 ;;		 -> STR_25(6), STR_24(3), STR_23(3), STR_22(8), 
  5500 ;;		 -> STR_21(2), STR_20(2), STR_19(2), STR_18(2), 
  5501 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  5502 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  5503 ;;		 -> STR_9(7), STR_8(4), STR_7(6), STR_6(8), 
  5504 ;;		 -> STR_5(16), STR_4(4), buffer1(20), 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;		None               void
  5509 ;; Registers used:
  5510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5516 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5519 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5520 ;;Total ram usage:        6 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    5
  5523 ;; This function calls:
  5524 ;;		_lcd_gotoxy
  5525 ;;		_lcd_putrs
  5526 ;; This function is called by:
  5527 ;;		_home_clock_refresh
  5528 ;;		_home
  5529 ;;		_menu_pin
  5530 ;;		_menu_submenu
  5531 ;;		_menu_iterator
  5532 ;;		_menu_submenu_iterator
  5533 ;;		_menu_submenu_activate
  5534 ;;		_menu_submenu_clock
  5535 ;;		_menu_submenu_pin
  5536 ;;		_menu_submenu_alarm
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text34
  5541  00238E                     __ptext34:
  5542                           	opt stack 0
  5543  00238E                     _lcd_write:
  5544                           	opt stack 21
  5545                           
  5546                           ;main.c: 42: lcd_gotoxy(column, row);
  5547                           
  5548                           ;incstack = 0
  5549  00238E  C036  F02E         	movff	lcd_write@row,lcd_gotoxy@y
  5550  002392  5034               	movf	lcd_write@column,w,c
  5551  002394  EC77  F011         	call	_lcd_gotoxy
  5552                           
  5553                           ;main.c: 43: lcd_putrs(string);
  5554  002398  C038  F032         	movff	lcd_write@string,lcd_putrs@ptr
  5555  00239C  C039  F033         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  5556  0023A0  EC23  F010         	call	_lcd_putrs	;wreg free
  5557  0023A4  0012               	return		;funcret
  5558  0023A6                     __end_of_lcd_write:
  5559                           	opt stack 0
  5560                           tblptru	equ	0xFF8
  5561                           tblptrh	equ	0xFF7
  5562                           tblptrl	equ	0xFF6
  5563                           tablat	equ	0xFF5
  5564                           prodh	equ	0xFF4
  5565                           prodl	equ	0xFF3
  5566                           intcon	equ	0xFF2
  5567                           postinc0	equ	0xFEE
  5568                           wreg	equ	0xFE8
  5569                           postdec1	equ	0xFE5
  5570                           fsr1l	equ	0xFE1
  5571                           indf2	equ	0xFDF
  5572                           postinc2	equ	0xFDE
  5573                           postdec2	equ	0xFDD
  5574                           fsr2h	equ	0xFDA
  5575                           fsr2l	equ	0xFD9
  5576                           status	equ	0xFD8
  5577                           
  5578 ;; *************** function _lcd_putrs *****************
  5579 ;; Defined at:
  5580 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  5583 ;;		 -> STR_35(2), STR_34(2), STR_33(5), STR_32(8), 
  5584 ;;		 -> STR_31(7), STR_30(6), STR_29(8), STR_28(4), 
  5585 ;;		 -> STR_27(5), STR_26(6), STR_25(6), STR_24(3), 
  5586 ;;		 -> STR_23(3), STR_22(8), STR_21(2), STR_20(2), 
  5587 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  5588 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  5589 ;;		 -> STR_11(2), STR_10(2), STR_9(7), STR_8(4), 
  5590 ;;		 -> STR_7(6), STR_6(8), STR_5(16), STR_4(4), 
  5591 ;;		 -> buffer1(20), 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;		None               void
  5596 ;; Registers used:
  5597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5607 ;;Total ram usage:        2 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    4
  5610 ;; This function calls:
  5611 ;;		_lcd_putc
  5612 ;; This function is called by:
  5613 ;;		_lcd_write
  5614 ;;		_button_asterisk
  5615 ;;		_button_number
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text35
  5620  002046                     __ptext35:
  5621                           	opt stack 0
  5622  002046                     _lcd_putrs:
  5623                           	opt stack 24
  5624                           
  5625                           ;unmc_lcd_216.c: 223: while(*ptr){
  5626                           
  5627                           ;incstack = 0
  5628  002046  D015               	goto	l2199
  5629  002048                     l2195:
  5630                           
  5631                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  5632  002048  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5633  00204C  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5634  002050  6AF8               	clrf	tblptru,c
  5635  002052  0E0E               	movlw	(high __ramtop+-1)
  5636  002054  64F7               	cpfsgt	tblptrh,c
  5637  002056  D003               	bra	u1277
  5638  002058  0008               	tblrd		*
  5639  00205A  50F5               	movf	tablat,w,c
  5640  00205C  D005               	bra	u1270
  5641  00205E                     u1277:
  5642  00205E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5643  002062  CFF7 FFEA          	movff	tblptrh,fsr0h
  5644  002066  50EF               	movf	indf0,w,c
  5645  002068                     u1270:
  5646  002068  EC9C  F010         	call	_lcd_putc
  5647  00206C  4A32               	infsnz	lcd_putrs@ptr,f,c
  5648  00206E  2A33               	incf	lcd_putrs@ptr+1,f,c
  5649  002070  D000               	goto	l2199
  5650  002072                     l2199:
  5651  002072  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5652  002076  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5653  00207A  6AF8               	clrf	tblptru,c
  5654  00207C  0E0E               	movlw	(high __ramtop+-1)
  5655  00207E  64F7               	cpfsgt	tblptrh,c
  5656  002080  D003               	bra	u1287
  5657  002082  0008               	tblrd		*
  5658  002084  50F5               	movf	tablat,w,c
  5659  002086  D005               	bra	u1280
  5660  002088                     u1287:
  5661  002088  CFF6 FFE9          	movff	tblptrl,fsr0l
  5662  00208C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5663  002090  50EF               	movf	indf0,w,c
  5664  002092                     u1280:
  5665  002092  0900               	iorlw	0
  5666  002094  A4D8               	btfss	status,2,c
  5667  002096  D7D8               	goto	l2195
  5668  002098  0012               	return		;funcret
  5669  00209A                     __end_of_lcd_putrs:
  5670                           	opt stack 0
  5671                           tblptru	equ	0xFF8
  5672                           tblptrh	equ	0xFF7
  5673                           tblptrl	equ	0xFF6
  5674                           tablat	equ	0xFF5
  5675                           prodh	equ	0xFF4
  5676                           prodl	equ	0xFF3
  5677                           intcon	equ	0xFF2
  5678                           indf0	equ	0xFEF
  5679                           postinc0	equ	0xFEE
  5680                           fsr0h	equ	0xFEA
  5681                           fsr0l	equ	0xFE9
  5682                           wreg	equ	0xFE8
  5683                           postdec1	equ	0xFE5
  5684                           fsr1l	equ	0xFE1
  5685                           indf2	equ	0xFDF
  5686                           postinc2	equ	0xFDE
  5687                           postdec2	equ	0xFDD
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692 ;; *************** function _lcd_putc *****************
  5693 ;; Defined at:
  5694 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  c               1    wreg     unsigned char 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  c               1    7[COMRAM] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;		None               void
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5712 ;;Total ram usage:        1 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    3
  5715 ;; This function calls:
  5716 ;;		_lcd_gotoxy
  5717 ;;		_lcd_send_byte
  5718 ;; This function is called by:
  5719 ;;		_lcd_putrs
  5720 ;;		_lcd_puts
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text36
  5725  002138                     __ptext36:
  5726                           	opt stack 0
  5727  002138                     _lcd_putc:
  5728                           	opt stack 24
  5729                           
  5730                           ;incstack = 0
  5731                           ;lcd_putc@c stored from wreg
  5732  002138  6E31               	movwf	lcd_putc@c,c
  5733                           
  5734                           ;unmc_lcd_216.c: 173: switch(c){
  5735  00213A  D018               	goto	l2187
  5736  00213C                     l2177:
  5737                           
  5738                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  5739  00213C  0E01               	movlw	1
  5740  00213E  6E2C               	movwf	lcd_send_byte@n,c
  5741  002140  0E00               	movlw	0
  5742  002142  EC37  F011         	call	_lcd_send_byte
  5743                           
  5744                           ;unmc_lcd_216.c: 176: break;
  5745  002146  0012               	return	
  5746  002148                     l2179:
  5747                           
  5748                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  5749  002148  0E02               	movlw	2
  5750  00214A  6E2E               	movwf	lcd_gotoxy@y,c
  5751  00214C  0E01               	movlw	1
  5752  00214E  EC77  F011         	call	_lcd_gotoxy
  5753                           
  5754                           ;unmc_lcd_216.c: 179: break;
  5755  002152  0012               	return	
  5756  002154                     l2181:
  5757                           
  5758                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  5759  002154  0E10               	movlw	16
  5760  002156  6E2C               	movwf	lcd_send_byte@n,c
  5761  002158  0E00               	movlw	0
  5762  00215A  EC37  F011         	call	_lcd_send_byte
  5763                           
  5764                           ;unmc_lcd_216.c: 182: break;
  5765  00215E  0012               	return	
  5766  002160                     l2183:
  5767                           
  5768                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  5769  002160  C031  F02C         	movff	lcd_putc@c,lcd_send_byte@n
  5770  002164  0E01               	movlw	1
  5771  002166  EC37  F011         	call	_lcd_send_byte
  5772                           
  5773                           ;unmc_lcd_216.c: 186: }
  5774                           
  5775                           ;unmc_lcd_216.c: 185: break;
  5776  00216A  0012               	return	
  5777  00216C                     l2187:
  5778  00216C  5031               	movf	lcd_putc@c,w,c
  5779                           
  5780                           ; Switch size 1, requested type "space"
  5781                           ; Number of cases is 3, Range of values is 8 to 12
  5782                           ; switch strategies available:
  5783                           ; Name         Instructions Cycles
  5784                           ; simple_byte           10     6 (average)
  5785                           ;	Chosen strategy is simple_byte
  5786  00216E  0A08               	xorlw	8	; case 8
  5787  002170  B4D8               	btfsc	status,2,c
  5788  002172  D7F0               	goto	l2181
  5789  002174  0A02               	xorlw	2	; case 10
  5790  002176  B4D8               	btfsc	status,2,c
  5791  002178  D7E7               	goto	l2179
  5792  00217A  0A06               	xorlw	6	; case 12
  5793  00217C  B4D8               	btfsc	status,2,c
  5794  00217E  D7DE               	goto	l2177
  5795  002180  D7EF               	goto	l2183
  5796  002182  0012               	return		;funcret
  5797  002184                     __end_of_lcd_putc:
  5798                           	opt stack 0
  5799                           tblptru	equ	0xFF8
  5800                           tblptrh	equ	0xFF7
  5801                           tblptrl	equ	0xFF6
  5802                           tablat	equ	0xFF5
  5803                           prodh	equ	0xFF4
  5804                           prodl	equ	0xFF3
  5805                           intcon	equ	0xFF2
  5806                           indf0	equ	0xFEF
  5807                           postinc0	equ	0xFEE
  5808                           fsr0h	equ	0xFEA
  5809                           fsr0l	equ	0xFE9
  5810                           wreg	equ	0xFE8
  5811                           postdec1	equ	0xFE5
  5812                           fsr1l	equ	0xFE1
  5813                           indf2	equ	0xFDF
  5814                           postinc2	equ	0xFDE
  5815                           postdec2	equ	0xFDD
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8
  5819                           
  5820 ;; *************** function _lcd_gotoxy *****************
  5821 ;; Defined at:
  5822 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  x               1    wreg     unsigned char 
  5825 ;;  y               1    4[COMRAM] unsigned char 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  x               1    5[COMRAM] unsigned char 
  5828 ;;  address         1    6[COMRAM] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5838 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;Total ram usage:        3 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    2
  5845 ;; This function calls:
  5846 ;;		_lcd_send_byte
  5847 ;; This function is called by:
  5848 ;;		_lcd_write
  5849 ;;		_menu_pin
  5850 ;;		_lcd_putc
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text37
  5855  0022EE                     __ptext37:
  5856                           	opt stack 0
  5857  0022EE                     _lcd_gotoxy:
  5858                           	opt stack 24
  5859                           
  5860                           ;incstack = 0
  5861                           ;lcd_gotoxy@x stored from wreg
  5862  0022EE  6E2F               	movwf	lcd_gotoxy@x,c
  5863                           
  5864                           ;unmc_lcd_216.c: 159: int8 address;
  5865                           ;unmc_lcd_216.c: 161: if(y != 1)
  5866  0022F0  042E               	decf	lcd_gotoxy@y,w,c
  5867  0022F2  B4D8               	btfsc	status,2,c
  5868  0022F4  D002               	goto	l2169
  5869                           
  5870                           ;unmc_lcd_216.c: 162: address = 0x40;
  5871  0022F6  0E40               	movlw	64
  5872  0022F8  D001               	goto	L1
  5873  0022FA                     l2169:
  5874                           
  5875                           ;unmc_lcd_216.c: 163: else
  5876                           ;unmc_lcd_216.c: 164: address=0;
  5877  0022FA  0E00               	movlw	0
  5878  0022FC                     L1:
  5879  0022FC  6E30               	movwf	lcd_gotoxy@address,c
  5880  0022FE  D000               	goto	l2171
  5881  002300                     l2171:
  5882                           
  5883                           ;unmc_lcd_216.c: 166: address += x-1;
  5884  002300  042F               	decf	lcd_gotoxy@x,w,c
  5885  002302  2630               	addwf	lcd_gotoxy@address,f,c
  5886                           
  5887                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  5888  002304  5030               	movf	lcd_gotoxy@address,w,c
  5889  002306  0980               	iorlw	128
  5890  002308  6E2C               	movwf	lcd_send_byte@n,c
  5891  00230A  0E00               	movlw	0
  5892  00230C  EC37  F011         	call	_lcd_send_byte
  5893  002310  0012               	return		;funcret
  5894  002312                     __end_of_lcd_gotoxy:
  5895                           	opt stack 0
  5896                           tblptru	equ	0xFF8
  5897                           tblptrh	equ	0xFF7
  5898                           tblptrl	equ	0xFF6
  5899                           tablat	equ	0xFF5
  5900                           prodh	equ	0xFF4
  5901                           prodl	equ	0xFF3
  5902                           intcon	equ	0xFF2
  5903                           indf0	equ	0xFEF
  5904                           postinc0	equ	0xFEE
  5905                           fsr0h	equ	0xFEA
  5906                           fsr0l	equ	0xFE9
  5907                           wreg	equ	0xFE8
  5908                           postdec1	equ	0xFE5
  5909                           fsr1l	equ	0xFE1
  5910                           indf2	equ	0xFDF
  5911                           postinc2	equ	0xFDE
  5912                           postdec2	equ	0xFDD
  5913                           fsr2h	equ	0xFDA
  5914                           fsr2l	equ	0xFD9
  5915                           status	equ	0xFD8
  5916                           
  5917 ;; *************** function _lcd_send_byte *****************
  5918 ;; Defined at:
  5919 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  address         1    wreg     unsigned char 
  5922 ;;  n               1    2[COMRAM] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  address         1    3[COMRAM] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;		None               void
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5934 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;Total ram usage:        2 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    1
  5941 ;; This function calls:
  5942 ;;		_Delay100TCYx
  5943 ;;		_lcd_send_nibble
  5944 ;; This function is called by:
  5945 ;;		_lcd_init
  5946 ;;		_lcd_gotoxy
  5947 ;;		_lcd_putc
  5948 ;;		_lcd_comand
  5949 ;;		_lcd_setcursor_vb
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text38
  5954  00226E                     __ptext38:
  5955                           	opt stack 0
  5956  00226E                     _lcd_send_byte:
  5957                           	opt stack 27
  5958                           
  5959                           ;incstack = 0
  5960                           ;lcd_send_byte@address stored from wreg
  5961  00226E  6E2D               	movwf	lcd_send_byte@address,c
  5962                           
  5963                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  5964  002270  968A               	bcf	3978,3,c	;volatile
  5965                           
  5966                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  5967  002272  0E02               	movlw	2
  5968  002274  ECE5  F011         	call	_Delay100TCYx
  5969                           
  5970                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  5971  002278  9893               	bcf	3987,4,c	;volatile
  5972                           
  5973                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  5974  00227A  9A93               	bcf	3987,5,c	;volatile
  5975                           
  5976                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  5977  00227C  9C93               	bcf	3987,6,c	;volatile
  5978                           
  5979                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  5980  00227E  9E93               	bcf	3987,7,c	;volatile
  5981                           
  5982                           ;unmc_lcd_216.c: 101: if(address)
  5983  002280  502D               	movf	lcd_send_byte@address,w,c
  5984  002282  B4D8               	btfsc	status,2,c
  5985  002284  D002               	goto	l341
  5986                           
  5987                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  5988  002286  868A               	bsf	3978,3,c	;volatile
  5989  002288  D001               	goto	l342
  5990  00228A                     l341:
  5991                           
  5992                           ;unmc_lcd_216.c: 103: else
  5993                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  5994  00228A  968A               	bcf	3978,3,c	;volatile
  5995  00228C                     l342:
  5996                           
  5997                           ;unmc_lcd_216.c: 106: __nop();
  5998  00228C  F000               	nop	
  5999                           
  6000                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  6001  00228E  382C               	swapf	lcd_send_byte@n,w,c
  6002  002290  0B0F               	andlw	15
  6003  002292  EC97  F00E         	call	_lcd_send_nibble
  6004                           
  6005                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  6006  002296  502C               	movf	lcd_send_byte@n,w,c
  6007  002298  0B0F               	andlw	15
  6008  00229A  EC97  F00E         	call	_lcd_send_nibble
  6009  00229E  0012               	return		;funcret
  6010  0022A0                     __end_of_lcd_send_byte:
  6011                           	opt stack 0
  6012                           tblptru	equ	0xFF8
  6013                           tblptrh	equ	0xFF7
  6014                           tblptrl	equ	0xFF6
  6015                           tablat	equ	0xFF5
  6016                           prodh	equ	0xFF4
  6017                           prodl	equ	0xFF3
  6018                           intcon	equ	0xFF2
  6019                           indf0	equ	0xFEF
  6020                           postinc0	equ	0xFEE
  6021                           fsr0h	equ	0xFEA
  6022                           fsr0l	equ	0xFE9
  6023                           wreg	equ	0xFE8
  6024                           postdec1	equ	0xFE5
  6025                           fsr1l	equ	0xFE1
  6026                           indf2	equ	0xFDF
  6027                           postinc2	equ	0xFDE
  6028                           postdec2	equ	0xFDD
  6029                           fsr2h	equ	0xFDA
  6030                           fsr2l	equ	0xFD9
  6031                           status	equ	0xFD8
  6032                           
  6033 ;; *************** function _lcd_send_nibble *****************
  6034 ;; Defined at:
  6035 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  nibble          1    wreg     unsigned char 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  nibble          1    1[COMRAM] unsigned char 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;		None               void
  6042 ;; Registers used:
  6043 ;;		wreg, status,2, status,0
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;Total ram usage:        2 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_lcd_send_byte
  6059 ;;		_lcd_init
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text39
  6064  001D2E                     __ptext39:
  6065                           	opt stack 0
  6066  001D2E                     _lcd_send_nibble:
  6067                           	opt stack 28
  6068                           
  6069                           ;incstack = 0
  6070                           ;lcd_send_nibble@nibble stored from wreg
  6071  001D2E  6E2B               	movwf	lcd_send_nibble@nibble,c
  6072                           
  6073                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  6074  001D30  A02B               	btfss	lcd_send_nibble@nibble,0,c
  6075  001D32  D003               	goto	u1170
  6076  001D34  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  6077  001D36  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  6078  001D38  D001               	goto	u1188
  6079  001D3A                     u1170:
  6080  001D3A  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  6081  001D3C                     u1188:
  6082  001D3C  3A2A               	swapf	??_lcd_send_nibble,f,c
  6083  001D3E  508A               	movf	3978,w,c	;volatile
  6084  001D40  182A               	xorwf	??_lcd_send_nibble,w,c
  6085  001D42  0BEF               	andlw	-17
  6086  001D44  182A               	xorwf	??_lcd_send_nibble,w,c
  6087  001D46  6E8A               	movwf	3978,c	;volatile
  6088                           
  6089                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  6090  001D48  A22B               	btfss	lcd_send_nibble@nibble,1,c
  6091  001D4A  D003               	goto	u1190
  6092  001D4C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  6093  001D4E  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  6094  001D50  D001               	goto	u1208
  6095  001D52                     u1190:
  6096  001D52  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  6097  001D54                     u1208:
  6098  001D54  3A2A               	swapf	??_lcd_send_nibble,f,c
  6099  001D56  462A               	rlncf	??_lcd_send_nibble,f,c
  6100  001D58  508A               	movf	3978,w,c	;volatile
  6101  001D5A  182A               	xorwf	??_lcd_send_nibble,w,c
  6102  001D5C  0BDF               	andlw	-33
  6103  001D5E  182A               	xorwf	??_lcd_send_nibble,w,c
  6104  001D60  6E8A               	movwf	3978,c	;volatile
  6105                           
  6106                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  6107  001D62  A42B               	btfss	lcd_send_nibble@nibble,2,c
  6108  001D64  D003               	goto	u1210
  6109  001D66  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  6110  001D68  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  6111  001D6A  D001               	goto	u1228
  6112  001D6C                     u1210:
  6113  001D6C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  6114  001D6E                     u1228:
  6115  001D6E  3A2A               	swapf	??_lcd_send_nibble,f,c
  6116  001D70  462A               	rlncf	??_lcd_send_nibble,f,c
  6117  001D72  462A               	rlncf	??_lcd_send_nibble,f,c
  6118  001D74  508A               	movf	3978,w,c	;volatile
  6119  001D76  182A               	xorwf	??_lcd_send_nibble,w,c
  6120  001D78  0BBF               	andlw	-65
  6121  001D7A  182A               	xorwf	??_lcd_send_nibble,w,c
  6122  001D7C  6E8A               	movwf	3978,c	;volatile
  6123                           
  6124                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  6125  001D7E  A62B               	btfss	lcd_send_nibble@nibble,3,c
  6126  001D80  D003               	goto	u1230
  6127  001D82  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  6128  001D84  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  6129  001D86  D001               	goto	u1248
  6130  001D88                     u1230:
  6131  001D88  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  6132  001D8A                     u1248:
  6133  001D8A  322A               	rrcf	??_lcd_send_nibble,f,c
  6134  001D8C  322A               	rrcf	??_lcd_send_nibble,f,c
  6135  001D8E  508A               	movf	3978,w,c	;volatile
  6136  001D90  182A               	xorwf	??_lcd_send_nibble,w,c
  6137  001D92  0B7F               	andlw	-129
  6138  001D94  182A               	xorwf	??_lcd_send_nibble,w,c
  6139  001D96  6E8A               	movwf	3978,c	;volatile
  6140                           
  6141                           ;unmc_lcd_216.c: 32: __nop();
  6142  001D98  F000               	nop	
  6143                           
  6144                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  6145  001D9A  848A               	bsf	3978,2,c	;volatile
  6146                           
  6147                           ;unmc_lcd_216.c: 34: __nop();__nop();
  6148  001D9C  F000               	nop	
  6149  001D9E  F000               	nop	
  6150                           
  6151                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  6152  001DA0  948A               	bcf	3978,2,c	;volatile
  6153  001DA2  0012               	return		;funcret
  6154  001DA4                     __end_of_lcd_send_nibble:
  6155                           	opt stack 0
  6156                           tblptru	equ	0xFF8
  6157                           tblptrh	equ	0xFF7
  6158                           tblptrl	equ	0xFF6
  6159                           tablat	equ	0xFF5
  6160                           prodh	equ	0xFF4
  6161                           prodl	equ	0xFF3
  6162                           intcon	equ	0xFF2
  6163                           indf0	equ	0xFEF
  6164                           postinc0	equ	0xFEE
  6165                           fsr0h	equ	0xFEA
  6166                           fsr0l	equ	0xFE9
  6167                           wreg	equ	0xFE8
  6168                           postdec1	equ	0xFE5
  6169                           fsr1l	equ	0xFE1
  6170                           indf2	equ	0xFDF
  6171                           postinc2	equ	0xFDE
  6172                           postdec2	equ	0xFDD
  6173                           fsr2h	equ	0xFDA
  6174                           fsr2l	equ	0xFD9
  6175                           status	equ	0xFD8
  6176                           
  6177 ;; *************** function _Delay100TCYx *****************
  6178 ;; Defined at:
  6179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  unit            1    wreg     unsigned char 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  unit            1    0[COMRAM] unsigned char 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;		None               void
  6186 ;; Registers used:
  6187 ;;		wreg
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;Total ram usage:        1 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_lcd_send_byte
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text40
  6207  0023CA                     __ptext40:
  6208                           	opt stack 0
  6209  0023CA                     _Delay100TCYx:
  6210                           	opt stack 27
  6211                           
  6212                           ;incstack = 0
  6213                           ;Delay100TCYx@unit stored from wreg
  6214  0023CA  6E2A               	movwf	Delay100TCYx@unit,c
  6215  0023CC  0E21               	movlw	33
  6216  0023CE                     u2357:
  6217  0023CE  2EE8               	decfsz	wreg,f,c
  6218  0023D0  D7FE               	goto	u2357
  6219  0023D2  F000               	nop	
  6220  0023D4  2E2A               	decfsz	Delay100TCYx@unit,f,c
  6221  0023D6  D7FA               	goto	l2143
  6222  0023D8  0012               	return	
  6223  0023DA  0012               	return		;funcret
  6224  0023DC                     __end_of_Delay100TCYx:
  6225                           	opt stack 0
  6226                           tblptru	equ	0xFF8
  6227                           tblptrh	equ	0xFF7
  6228                           tblptrl	equ	0xFF6
  6229                           tablat	equ	0xFF5
  6230                           prodh	equ	0xFF4
  6231                           prodl	equ	0xFF3
  6232                           intcon	equ	0xFF2
  6233                           indf0	equ	0xFEF
  6234                           postinc0	equ	0xFEE
  6235                           fsr0h	equ	0xFEA
  6236                           fsr0l	equ	0xFE9
  6237                           wreg	equ	0xFE8
  6238                           postdec1	equ	0xFE5
  6239                           fsr1l	equ	0xFE1
  6240                           indf2	equ	0xFDF
  6241                           postinc2	equ	0xFDE
  6242                           postdec2	equ	0xFDD
  6243                           fsr2h	equ	0xFDA
  6244                           fsr2l	equ	0xFD9
  6245                           status	equ	0xFD8
  6246                           
  6247 ;; *************** function _Read_RTC *****************
  6248 ;; Defined at:
  6249 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;		None               void
  6256 ;; Registers used:
  6257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6267 ;;Total ram usage:        0 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    1
  6270 ;; This function calls:
  6271 ;;		_RtccReadDate
  6272 ;;		_RtccReadTime
  6273 ;; This function is called by:
  6274 ;;		_main
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text41
  6279  001858                     __ptext41:
  6280                           	opt stack 0
  6281  001858                     _Read_RTC:
  6282                           	opt stack 29
  6283                           
  6284                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  6285                           
  6286                           ;incstack = 0
  6287  001858  0E26               	movlw	low _RtccTime
  6288  00185A  6E2A               	movwf	RtccReadTime@pTm,c
  6289  00185C  0E00               	movlw	high _RtccTime
  6290  00185E  6E2B               	movwf	RtccReadTime@pTm+1,c
  6291  001860  EC0A  F00F         	call	_RtccReadTime	;wreg free
  6292                           
  6293                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  6294  001864  5027               	movf	_RtccTime+1,w,c
  6295  001866  0B0F               	andlw	15
  6296  001868  6E5E               	movwf	_segundo_u,c
  6297                           
  6298                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  6299  00186A  3827               	swapf	_RtccTime+1,w,c
  6300  00186C  0B0F               	andlw	15
  6301  00186E  0B0F               	andlw	15
  6302  001870  6E5D               	movwf	_segundo_d,c
  6303                           
  6304                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  6305  001872  5028               	movf	_RtccTime+2,w,c
  6306  001874  0B0F               	andlw	15
  6307  001876  0100               	movlb	0	; () banked
  6308  001878  6F99               	movwf	_minuto_u& (0+255),b
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  6312  00187A  3828               	swapf	_RtccTime+2,w,c
  6313  00187C  0B0F               	andlw	15
  6314  00187E  0B0F               	andlw	15
  6315  001880  6E5C               	movwf	_minuto_d,c
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  6319  001882  5029               	movf	_RtccTime+3,w,c
  6320  001884  0B0F               	andlw	15
  6321  001886  0100               	movlb	0	; () banked
  6322  001888  6F97               	movwf	_hora_u& (0+255),b
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  6326  00188A  3829               	swapf	_RtccTime+3,w,c
  6327  00188C  0B0F               	andlw	15
  6328  00188E  0B0F               	andlw	15
  6329  001890  6E5A               	movwf	_hora_d,c
  6330                           
  6331                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  6332  001892  0E22               	movlw	low _RtccDate
  6333  001894  6E2A               	movwf	RtccReadDate@pDt,c
  6334  001896  0E00               	movlw	high _RtccDate
  6335  001898  6E2B               	movwf	RtccReadDate@pDt+1,c
  6336  00189A  EC8F  F00D         	call	_RtccReadDate	;wreg free
  6337                           
  6338                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  6339  00189E  5023               	movf	_RtccDate+1,w,c
  6340  0018A0  0B0F               	andlw	15
  6341  0018A2  0100               	movlb	0	; () banked
  6342  0018A4  6F96               	movwf	_fecha_u& (0+255),b
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  6346  0018A6  3823               	swapf	_RtccDate+1,w,c
  6347  0018A8  0B0F               	andlw	15
  6348  0018AA  0B0F               	andlw	15
  6349  0018AC  6E59               	movwf	_fecha_d,c
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  6353  0018AE  5024               	movf	_RtccDate+2,w,c
  6354  0018B0  0B0F               	andlw	15
  6355  0018B2  0100               	movlb	0	; () banked
  6356  0018B4  6F98               	movwf	_mes_u& (0+255),b
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  6360  0018B6  3824               	swapf	_RtccDate+2,w,c
  6361  0018B8  0B0F               	andlw	15
  6362  0018BA  0B0F               	andlw	15
  6363  0018BC  6E5B               	movwf	_mes_d,c
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  6367  0018BE  C022  F095         	movff	_RtccDate,_dia_semana
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  6371  0018C2  5025               	movf	_RtccDate+3,w,c
  6372  0018C4  0B0F               	andlw	15
  6373  0018C6  0100               	movlb	0	; () banked
  6374  0018C8  6F94               	movwf	_anio_u& (0+255),b
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  6378  0018CA  3825               	swapf	_RtccDate+3,w,c
  6379  0018CC  0B0F               	andlw	15
  6380  0018CE  0B0F               	andlw	15
  6381  0018D0  6E58               	movwf	_anio_d,c
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  6385  0018D2  505D               	movf	_segundo_d,w,c
  6386  0018D4  0D0A               	mullw	10
  6387  0018D6  505E               	movf	_segundo_u,w,c
  6388  0018D8  24F3               	addwf	prodl,w,c
  6389  0018DA  6E17               	movwf	_segundo,c
  6390  0018DC  0E00               	movlw	0
  6391  0018DE  20F4               	addwfc	prodh,w,c
  6392  0018E0  6E18               	movwf	_segundo+1,c
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  6396  0018E2  505C               	movf	_minuto_d,w,c
  6397  0018E4  0D0A               	mullw	10
  6398  0018E6  0100               	movlb	0	; () banked
  6399  0018E8  5199               	movf	_minuto_u& (0+255),w,b
  6400  0018EA  24F3               	addwf	prodl,w,c
  6401  0018EC  6E15               	movwf	_minuto,c
  6402  0018EE  0100               	movlb	0	; () banked
  6403  0018F0  0E00               	movlw	0
  6404  0018F2  20F4               	addwfc	prodh,w,c
  6405  0018F4  6E16               	movwf	_minuto+1,c
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  6409  0018F6  505A               	movf	_hora_d,w,c
  6410  0018F8  0D0A               	mullw	10
  6411  0018FA  0100               	movlb	0	; () banked
  6412  0018FC  5197               	movf	_hora_u& (0+255),w,b
  6413  0018FE  24F3               	addwf	prodl,w,c
  6414  001900  6E54               	movwf	_hora,c
  6415  001902  0100               	movlb	0	; () banked
  6416  001904  0E00               	movlw	0
  6417  001906  20F4               	addwfc	prodh,w,c
  6418  001908  6E55               	movwf	_hora+1,c
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  6422  00190A  5059               	movf	_fecha_d,w,c
  6423  00190C  0D0A               	mullw	10
  6424  00190E  0100               	movlb	0	; () banked
  6425  001910  5196               	movf	_fecha_u& (0+255),w,b
  6426  001912  24F3               	addwf	prodl,w,c
  6427  001914  6E50               	movwf	_dia,c
  6428  001916  0100               	movlb	0	; () banked
  6429  001918  0E00               	movlw	0
  6430  00191A  20F4               	addwfc	prodh,w,c
  6431  00191C  6E51               	movwf	_dia+1,c
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  6435  00191E  C095  F052         	movff	_dia_semana,_diasem
  6436  001922  6A53               	clrf	_diasem+1,c
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  6440  001924  505B               	movf	_mes_d,w,c
  6441  001926  0D0A               	mullw	10
  6442  001928  0100               	movlb	0	; () banked
  6443  00192A  5198               	movf	_mes_u& (0+255),w,b
  6444  00192C  24F3               	addwf	prodl,w,c
  6445  00192E  6E56               	movwf	_mes,c
  6446  001930  0100               	movlb	0	; () banked
  6447  001932  0E00               	movlw	0
  6448  001934  20F4               	addwfc	prodh,w,c
  6449  001936  6E57               	movwf	_mes+1,c
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  6453  001938  5058               	movf	_anio_d,w,c
  6454  00193A  0D0A               	mullw	10
  6455  00193C  0100               	movlb	0	; () banked
  6456  00193E  5194               	movf	_anio_u& (0+255),w,b
  6457  001940  24F3               	addwf	prodl,w,c
  6458  001942  6E4E               	movwf	_anio,c
  6459  001944  0100               	movlb	0	; () banked
  6460  001946  0E00               	movlw	0
  6461  001948  20F4               	addwfc	prodh,w,c
  6462  00194A  6E4F               	movwf	_anio+1,c
  6463                           
  6464                           ; BSR set to: 0
  6465  00194C  0012               	return		;funcret
  6466  00194E                     __end_of_Read_RTC:
  6467                           	opt stack 0
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           intcon	equ	0xFF2
  6475                           indf0	equ	0xFEF
  6476                           postinc0	equ	0xFEE
  6477                           fsr0h	equ	0xFEA
  6478                           fsr0l	equ	0xFE9
  6479                           wreg	equ	0xFE8
  6480                           postdec1	equ	0xFE5
  6481                           fsr1l	equ	0xFE1
  6482                           indf2	equ	0xFDF
  6483                           postinc2	equ	0xFDE
  6484                           postdec2	equ	0xFDD
  6485                           fsr2h	equ	0xFDA
  6486                           fsr2l	equ	0xFD9
  6487                           status	equ	0xFD8
  6488                           
  6489 ;; *************** function _RtccReadTime *****************
  6490 ;; Defined at:
  6491 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  pTm             2    0[COMRAM] PTR struct .
  6494 ;;		 -> RtccTime(4), 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  rTD0            8   10[COMRAM] struct .
  6497 ;;  rTD1            8    2[COMRAM] struct .
  6498 ;; Return value:  Size  Location     Type
  6499 ;;		None               void
  6500 ;; Registers used:
  6501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6508 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;Total ram usage:       18 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_Read_RTC
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text42
  6521  001E14                     __ptext42:
  6522                           	opt stack 0
  6523  001E14                     _RtccReadTime:
  6524                           	opt stack 29
  6525  001E14  0EFC               	movlw	252
  6526  001E16  010F               	movlb	15	; () banked
  6527  001E18  173F               	andwf	63,f,b	;volatile
  6528                           
  6529                           ; BSR set to: 15
  6530  001E1A  010F               	movlb	15	; () banked
  6531  001E1C  813F               	bsf	63,0,b	;volatile
  6532                           
  6533                           ; BSR set to: 15
  6534  001E1E  CF98 F038          	movff	3992,RtccReadTime@rTD0+4	;volatile
  6535                           
  6536                           ; BSR set to: 15
  6537  001E22  CF99 F039          	movff	3993,RtccReadTime@rTD0+5	;volatile
  6538                           
  6539                           ; BSR set to: 15
  6540  001E26  CF98 F03A          	movff	3992,RtccReadTime@rTD0+6	;volatile
  6541                           
  6542                           ; BSR set to: 15
  6543  001E2A  CF99 F03B          	movff	3993,RtccReadTime@rTD0+7	;volatile
  6544                           
  6545                           ; BSR set to: 15
  6546  001E2E  0EFC               	movlw	252
  6547  001E30  010F               	movlb	15	; () banked
  6548  001E32  173F               	andwf	63,f,b	;volatile
  6549  001E34  010F               	movlb	15	; () banked
  6550  001E36  813F               	bsf	63,0,b	;volatile
  6551                           
  6552                           ; BSR set to: 15
  6553  001E38  CF98 F030          	movff	3992,RtccReadTime@rTD1+4	;volatile
  6554                           
  6555                           ; BSR set to: 15
  6556  001E3C  CF99 F031          	movff	3993,RtccReadTime@rTD1+5	;volatile
  6557                           
  6558                           ; BSR set to: 15
  6559  001E40  CF98 F032          	movff	3992,RtccReadTime@rTD1+6	;volatile
  6560                           
  6561                           ; BSR set to: 15
  6562  001E44  CF99 F033          	movff	3993,RtccReadTime@rTD1+7	;volatile
  6563                           
  6564                           ; BSR set to: 15
  6565  001E48  5032               	movf	RtccReadTime@rTD1+6,w,c
  6566  001E4A  183A               	xorwf	RtccReadTime@rTD0+6,w,c
  6567  001E4C  A4D8               	btfss	status,2,c
  6568  001E4E  D7E2               	goto	l2737
  6569                           
  6570                           ; BSR set to: 15
  6571                           
  6572                           ; BSR set to: 15
  6573  001E50  EE20 F003          	lfsr	2,3
  6574  001E54  502A               	movf	RtccReadTime@pTm,w,c
  6575  001E56  26D9               	addwf	fsr2l,f,c
  6576  001E58  502B               	movf	RtccReadTime@pTm+1,w,c
  6577  001E5A  22DA               	addwfc	fsr2h,f,c
  6578  001E5C  C038  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  6579  001E60  EE20 F002          	lfsr	2,2
  6580  001E64  502A               	movf	RtccReadTime@pTm,w,c
  6581  001E66  26D9               	addwf	fsr2l,f,c
  6582  001E68  502B               	movf	RtccReadTime@pTm+1,w,c
  6583  001E6A  22DA               	addwfc	fsr2h,f,c
  6584  001E6C  C03B  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  6585  001E70  EE20 F001          	lfsr	2,1
  6586  001E74  502A               	movf	RtccReadTime@pTm,w,c
  6587  001E76  26D9               	addwf	fsr2l,f,c
  6588  001E78  502B               	movf	RtccReadTime@pTm+1,w,c
  6589  001E7A  22DA               	addwfc	fsr2h,f,c
  6590  001E7C  C03A  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  6591                           
  6592                           ; BSR set to: 15
  6593  001E80  0012               	return		;funcret
  6594  001E82                     __end_of_RtccReadTime:
  6595                           	opt stack 0
  6596                           tblptru	equ	0xFF8
  6597                           tblptrh	equ	0xFF7
  6598                           tblptrl	equ	0xFF6
  6599                           tablat	equ	0xFF5
  6600                           prodh	equ	0xFF4
  6601                           prodl	equ	0xFF3
  6602                           intcon	equ	0xFF2
  6603                           indf0	equ	0xFEF
  6604                           postinc0	equ	0xFEE
  6605                           fsr0h	equ	0xFEA
  6606                           fsr0l	equ	0xFE9
  6607                           wreg	equ	0xFE8
  6608                           postdec1	equ	0xFE5
  6609                           fsr1l	equ	0xFE1
  6610                           indf2	equ	0xFDF
  6611                           postinc2	equ	0xFDE
  6612                           postdec2	equ	0xFDD
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function _RtccReadDate *****************
  6618 ;; Defined at:
  6619 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  pDt             2    0[COMRAM] PTR struct .
  6622 ;;		 -> RtccDate(4), 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  rTD0            8   10[COMRAM] struct .
  6625 ;;  rTD1            8    2[COMRAM] struct .
  6626 ;; Return value:  Size  Location     Type
  6627 ;;		None               void
  6628 ;; Registers used:
  6629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;Total ram usage:       18 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_Read_RTC
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text43
  6649  001B1E                     __ptext43:
  6650                           	opt stack 0
  6651  001B1E                     _RtccReadDate:
  6652                           	opt stack 29
  6653  001B1E  0EFC               	movlw	252
  6654  001B20  010F               	movlb	15	; () banked
  6655  001B22  173F               	andwf	63,f,b	;volatile
  6656  001B24  0E03               	movlw	3
  6657  001B26  010F               	movlb	15	; () banked
  6658  001B28  133F               	iorwf	63,f,b	;volatile
  6659                           
  6660                           ; BSR set to: 15
  6661  001B2A  CF98 F034          	movff	3992,RtccReadDate@rTD0	;volatile
  6662                           
  6663                           ; BSR set to: 15
  6664  001B2E  CF99 F035          	movff	3993,RtccReadDate@rTD0+1	;volatile
  6665                           
  6666                           ; BSR set to: 15
  6667  001B32  CF98 F036          	movff	3992,RtccReadDate@rTD0+2	;volatile
  6668                           
  6669                           ; BSR set to: 15
  6670  001B36  CF99 F037          	movff	3993,RtccReadDate@rTD0+3	;volatile
  6671                           
  6672                           ; BSR set to: 15
  6673  001B3A  CF98 F038          	movff	3992,RtccReadDate@rTD0+4	;volatile
  6674                           
  6675                           ; BSR set to: 15
  6676  001B3E  CF99 F039          	movff	3993,RtccReadDate@rTD0+5	;volatile
  6677  001B42  0EFC               	movlw	252
  6678  001B44  010F               	movlb	15	; () banked
  6679  001B46  173F               	andwf	63,f,b	;volatile
  6680  001B48  0E03               	movlw	3
  6681  001B4A  010F               	movlb	15	; () banked
  6682  001B4C  133F               	iorwf	63,f,b	;volatile
  6683                           
  6684                           ; BSR set to: 15
  6685  001B4E  CF98 F02C          	movff	3992,RtccReadDate@rTD1	;volatile
  6686                           
  6687                           ; BSR set to: 15
  6688  001B52  CF99 F02D          	movff	3993,RtccReadDate@rTD1+1	;volatile
  6689                           
  6690                           ; BSR set to: 15
  6691  001B56  CF98 F02E          	movff	3992,RtccReadDate@rTD1+2	;volatile
  6692                           
  6693                           ; BSR set to: 15
  6694  001B5A  CF99 F02F          	movff	3993,RtccReadDate@rTD1+3	;volatile
  6695                           
  6696                           ; BSR set to: 15
  6697  001B5E  CF98 F030          	movff	3992,RtccReadDate@rTD1+4	;volatile
  6698                           
  6699                           ; BSR set to: 15
  6700  001B62  CF99 F031          	movff	3993,RtccReadDate@rTD1+5	;volatile
  6701  001B66  502E               	movf	RtccReadDate@rTD1+2,w,c
  6702  001B68  1836               	xorwf	RtccReadDate@rTD0+2,w,c
  6703  001B6A  A4D8               	btfss	status,2,c
  6704  001B6C  D7D8               	goto	l2763
  6705                           
  6706                           ; BSR set to: 15
  6707                           
  6708                           ; BSR set to: 15
  6709  001B6E  EE20 F001          	lfsr	2,1
  6710  001B72  502A               	movf	RtccReadDate@pDt,w,c
  6711  001B74  26D9               	addwf	fsr2l,f,c
  6712  001B76  502B               	movf	RtccReadDate@pDt+1,w,c
  6713  001B78  22DA               	addwfc	fsr2h,f,c
  6714  001B7A  C036  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  6715  001B7E  EE20 F002          	lfsr	2,2
  6716  001B82  502A               	movf	RtccReadDate@pDt,w,c
  6717  001B84  26D9               	addwf	fsr2l,f,c
  6718  001B86  502B               	movf	RtccReadDate@pDt+1,w,c
  6719  001B88  22DA               	addwfc	fsr2h,f,c
  6720  001B8A  C037  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  6721                           
  6722                           ; BSR set to: 15
  6723  001B8E  C02A  FFD9         	movff	RtccReadDate@pDt,fsr2l
  6724  001B92  C02B  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  6725  001B96  C039  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  6726                           
  6727                           ; BSR set to: 15
  6728  001B9A  EE20 F003          	lfsr	2,3
  6729  001B9E  502A               	movf	RtccReadDate@pDt,w,c
  6730  001BA0  26D9               	addwf	fsr2l,f,c
  6731  001BA2  502B               	movf	RtccReadDate@pDt+1,w,c
  6732  001BA4  22DA               	addwfc	fsr2h,f,c
  6733  001BA6  C034  FFDF         	movff	RtccReadDate@rTD0,indf2
  6734                           
  6735                           ; BSR set to: 15
  6736  001BAA  0012               	return		;funcret
  6737  001BAC                     __end_of_RtccReadDate:
  6738                           	opt stack 0
  6739                           tblptru	equ	0xFF8
  6740                           tblptrh	equ	0xFF7
  6741                           tblptrl	equ	0xFF6
  6742                           tablat	equ	0xFF5
  6743                           prodh	equ	0xFF4
  6744                           prodl	equ	0xFF3
  6745                           intcon	equ	0xFF2
  6746                           indf0	equ	0xFEF
  6747                           postinc0	equ	0xFEE
  6748                           fsr0h	equ	0xFEA
  6749                           fsr0l	equ	0xFE9
  6750                           wreg	equ	0xFE8
  6751                           postdec1	equ	0xFE5
  6752                           fsr1l	equ	0xFE1
  6753                           indf2	equ	0xFDF
  6754                           postinc2	equ	0xFDE
  6755                           postdec2	equ	0xFDD
  6756                           fsr2h	equ	0xFDA
  6757                           fsr2l	equ	0xFD9
  6758                           status	equ	0xFD8
  6759                           tblptru	equ	0xFF8
  6760                           tblptrh	equ	0xFF7
  6761                           tblptrl	equ	0xFF6
  6762                           tablat	equ	0xFF5
  6763                           prodh	equ	0xFF4
  6764                           prodl	equ	0xFF3
  6765                           intcon	equ	0xFF2
  6766                           indf0	equ	0xFEF
  6767                           postinc0	equ	0xFEE
  6768                           fsr0h	equ	0xFEA
  6769                           fsr0l	equ	0xFE9
  6770                           wreg	equ	0xFE8
  6771                           postdec1	equ	0xFE5
  6772                           fsr1l	equ	0xFE1
  6773                           indf2	equ	0xFDF
  6774                           postinc2	equ	0xFDE
  6775                           postdec2	equ	0xFDD
  6776                           fsr2h	equ	0xFDA
  6777                           fsr2l	equ	0xFD9
  6778                           status	equ	0xFD8
  6779                           
  6780                           	psect	rparam
  6781  0000                     tblptru	equ	0xFF8
  6782                           tblptrh	equ	0xFF7
  6783                           tblptrl	equ	0xFF6
  6784                           tablat	equ	0xFF5
  6785                           prodh	equ	0xFF4
  6786                           prodl	equ	0xFF3
  6787                           intcon	equ	0xFF2
  6788                           indf0	equ	0xFEF
  6789                           postinc0	equ	0xFEE
  6790                           fsr0h	equ	0xFEA
  6791                           fsr0l	equ	0xFE9
  6792                           wreg	equ	0xFE8
  6793                           postdec1	equ	0xFE5
  6794                           fsr1l	equ	0xFE1
  6795                           indf2	equ	0xFDF
  6796                           postinc2	equ	0xFDE
  6797                           postdec2	equ	0xFDD
  6798                           fsr2h	equ	0xFDA
  6799                           fsr2l	equ	0xFD9
  6800                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    14
    Data        10
    BSS         93
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      95
    BANK0           160      0      58
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    pin_input	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_36(CODE[5]), STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[5]), STR_32(CODE[8]), 
		 -> STR_31(CODE[7]), STR_30(CODE[6]), STR_29(CODE[8]), STR_28(CODE[4]), 
		 -> STR_27(CODE[5]), STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[8]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[7]), STR_8(CODE[4]), 
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[16]), STR_4(CODE[4]), 
		 -> buffer1(BANK0[20]), 

    pin	PTR unsigned char  size(2) Largest target is 5
		 -> NULL(NULL[0]), STR_1(CODE[5]), 

    lcd_write@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_33(CODE[5]), STR_32(CODE[8]), STR_31(CODE[7]), STR_30(CODE[6]), 
		 -> STR_29(CODE[8]), STR_28(CODE[4]), STR_27(CODE[5]), STR_26(CODE[6]), 
		 -> STR_25(CODE[6]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[8]), 
		 -> STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[7]), STR_8(CODE[4]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[16]), STR_4(CODE[4]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _button_asterisk->_lcd_putrs
    _home->_lcd_write
    _menu_submenu_pin->_lcd_write
    _menu_submenu_clock->_lcd_write
    _menu_submenu_alarm->_lcd_write
    _menu_submenu_activate->_lcd_write
    _button_A->_menu_iterator
    _button_A->_menu_submenu_iterator
    _menu_submenu_iterator->_lcd_write
    _menu_submenu->_lcd_write
    _menu_pin->_lcd_write
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _menu_iterator->_lcd_write
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  138883
                           _Read_RTC
                               _home
                 _home_clock_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3771
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  113354
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    3898
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0    9797
                _pin_input_validator
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  0     0      0    9797
                       _menu_submenu
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0    1854
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0    9797
                               _home
 ---------------------------------------------------------------------------------
 (3) _home                                                 0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0    9797
                       _menu_submenu
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0   39188
                                             16 COMRAM     2     2      0
              _menu_submenu_activate
                 _menu_submenu_alarm
                 _menu_submenu_clock
                   _menu_submenu_pin
 ---------------------------------------------------------------------------------
 (3) _menu_submenu_pin                                     0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_submenu_clock                                   0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_submenu_alarm                                   0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_submenu_activate                                0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_A                                             0     0      0   39023
                      _menu_iterator
                           _menu_pin
                       _menu_submenu
              _menu_submenu_iterator
 ---------------------------------------------------------------------------------
 (3) _menu_submenu_iterator                                2     2      0    8949
                                             16 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_submenu                                         0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_pin                                             0     0      0   11328
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _menu_iterator                                        2     2      0    8949
                                             16 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   10993
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2044
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6    8949
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1854
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1553
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1     885
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _keyboard_control
     _button_A
       _menu_iterator
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _menu_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _menu_submenu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _menu_submenu_iterator
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_B
       _menu_submenu_activate
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _menu_submenu_alarm
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _menu_submenu_clock
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _menu_submenu_pin
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_C
       _menu_submenu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_D
       _home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_asterisk
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _button_hash
       _pin_input_validator
         _menu_submenu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3A       5       36.3%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      99       6        0.0%
DATA                 0      0      99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 06 20:41:37 2016

                             _a 0001                               _b 0009                               _c 000B  
                             _i 000D                               _j 000F                               _k 0011  
   __size_of_menu_submenu_alarm 005A     __size_of_menu_submenu_clock 005A                  ?_lcd_send_byte 002C  
                  ___awdiv@sign 002F             ___wmul@multiplicand 002C                     lcd_comand@d 002E  
                  __CFG_CP0$OFF 000000                 lcd_write@column 0034           _menu_submenu_activate 1FEC  
                           l300 15BA                             l301 15B6                             l304 15CC  
                           l313 15EC                             l305 15C8                             l420 116A  
                           l308 15DE                             l260 14EE                             l252 14CA  
                           l341 228A                             l309 15DA                             l261 14EA  
                           l253 14C6                             l342 228C                             l280 1550  
                           l272 152C                             l264 1500                             l256 14DC  
                           l281 154C                             l273 1528                             l265 14FC  
                           l257 14D8                             l292 158E                             l284 156A  
                           l276 153E                             l268 151A                             l293 158A  
                           l285 1566                             l277 153A                             l269 1516  
                           l296 15A0                             l288 157C                             l297 159C  
                           l289 1578                             _dia 0050                             _key 0021  
                           _mes 0056                             _pin 007C                 lcd_write@string 0038  
                           wreg 000FE8                 RtccReadDate@pDt 002A                     lcd_gotoxy@x 002F  
                   lcd_gotoxy@y 002E               ??_button_asterisk 0034                            l1064 1ED4  
                          l1074 212E                            l2211 1C5E                            l2301 20FA  
                          l2221 1C76                            l2143 23CC                            l2303 2104  
                          l2215 1C66                            l2305 210C                            l2321 178A  
                          l2171 2300                            l2331 17C8                            l2181 2154  
                          l2309 2122                            l2501 10E4                            l2229 1C8A  
                          l3029 15F4                            l2405 16D2                            l3037 2212  
                          l2183 2160                            l2511 111E                            l2327 17B4  
                          l2169 22FA                            l2177 213C                            l2281 1E98  
                          l2265 234C                            l2505 1108                            l2601 19D4  
                          l2441 1734                            l2337 17E4                            l2179 2148  
                          l2187 216C                            l2195 2048                            l2283 1EA2  
                          l2531 11C4                            l2507 1112                            l2451 0FA2  
                          l2293 1EC8                            l2285 1EAA                            l2525 1170  
                          l2517 1140                            l2533 11D0                            l2189 23BA  
                          l2445 1740                            l2437 1728                            l2373 184C  
                          l2365 1834                            l2199 2072                            l2519 1148  
                          l2535 11EC                            l2463 0FD4                            l2481 1072  
                          l2465 0FEA                            l2457 0FBC                            l2553 135A  
                          l2801 20B0                            l2369 1840                            l2483 1094  
                          l2459 0FCA                            l2571 1438                            l2395 16A2  
                          l2651 1A0C                            l2493 10BC                            l2477 106C  
                          l2469 1008                            l2565 13EE                            l2813 20DC  
                          l2821 1DAE                            l2389 1668                            l2559 13A4  
                          l2399 16B6                            l2663 1A34                            l2737 1E14  
                          l2497 10E0                            l2489 10B0                            l2593 1992  
                          l2809 20CE                            l2833 1DD8                            l2825 1DBC  
                          l2665 1A3E                            l2657 1A1E                            l2763 1B1E  
                          l2579 1482                            l2587 1950                            l2683 1A80  
                          l2675 1A64                            l2667 1A46                            l2829 1DCA  
                          l2839 1DE6                            l2871 21DE                            l2679 1A70  
                          STR_1 0F6E                            STR_2 0F1F                            STR_3 0F2E  
                          STR_4 0F82                            STR_5 0F0F                            STR_6 0F4D  
                          STR_7 0F62                            STR_8 0F86                            STR_9 0F55  
                          u1210 1D6C                            u1230 1D88                            u1208 1D54  
                          u1170 1D3A                            u1228 1D6E                            u1190 1D52  
                          u1270 2068                            u1248 1D8A                            u1280 2092  
                          u1188 1D3C                            u1277 205E                            u1287 2088  
                          u2337 15FA                            u2347 23BC                            u2357 23CE  
              ?_lcd_send_nibble 002A           _menu_submenu_iterator 194E                            _anio 004E  
                          _flag 02F8                            _main 2208                            _home 2312  
                          _hora 0054                            fsr0h 000FEA                            indf0 000FEF  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                   __CFG_T1DIG$ON 000000  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                 __CFG_IESO$OFF 000000                RtccReadDate@rTD0 0034                RtccReadDate@rTD1 002C  
                  ___param_bank 000010                 RtccReadTime@pTm 002A                     _Delay1KTCYx 23B8  
                 __CFG_PLLDIV$1 000000                           ?_main 002A                           ?_home 002A  
               __end_of___awdiv 1A8C                           STR_10 0F94                           STR_11 0F90  
                         STR_20 0F94                           STR_12 0F94                           STR_21 0F90  
                         STR_13 0F90                           STR_14 0F94                           STR_22 0F4D  
                         STR_30 0F68                           STR_15 0F90                           STR_31 0F55  
                         STR_23 0F8A                           STR_16 0F94                           STR_24 0F8D  
                         STR_32 0F3D                           STR_17 0F90                           STR_25 0F62  
                         STR_33 0F78                           STR_18 0F94                           STR_34 0F92  
                         STR_26 0F5C                           STR_19 0F90                           STR_35 0F92  
                         STR_27 0F73                           STR_28 0F86                           STR_36 0F7D  
                         STR_29 0F45           __size_of_Delay100TCYx 0012                 ___awdiv@divisor 002C  
               __end_of___lwdiv 1EDE                 __end_of___lwmod 2138                 ___awdiv@counter 002E  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                  ?_button_hash 002A                  __CFG_FCMEN$OFF 000000                 __end_of_dpowers 0F0B  
                         _mes_d 005B                           _mes_u 0098                 __end_of_isdigit 2356  
                         _setup 1BAC                           _state 001F                  __pbitbssCOMRAM 02F8  
                         tablat 000FF5                    lcd_putrs@ptr 0032                           status 000FD8  
               __end_of_sprintf 11FC                    lcd_write@row 0036         __CFG_DSWDTOSC$INTOSCREF 000000  
               __initialization 2184                    _Delay100TCYx 23CA                    __end_of_main 223C  
               ??_lcd_send_byte 002D                    __end_of_home 2334                RtccReadTime@rTD0 0034  
              RtccReadTime@rTD1 002C                __end_of_Read_RTC 194E          ?_menu_submenu_activate 002A  
                        ??_main 004E                          ??_home 003A                   __activetblptr 000002  
              _menu_submenu_pin 1EDE                __end_of_RtccWrOn 23B8                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _EECON2 000FA7                          _ANCON0 000F48  
                        _ANCON1 000F49                ___awdiv@dividend 002A                          ?_setup 002A  
        ?_menu_submenu_iterator 002A                  __CFG_WDTEN$OFF 000000    __size_of_pin_input_validator 0020  
              RtccWriteDate@pDt 002A                          _RTCCFG 000F3F                  __CFG_WPCFG$OFF 000000  
                __CFG_WPDIS$OFF 000000                  __CFG_XINST$OFF 000000                __end_of_lcd_init 1CB8  
    __end_of_home_clock_refresh 1B1E                __end_of_lcd_putc 2184                          ___wmul 22A0  
                     ??___awdiv 002E                  __CFG_STVREN$ON 000000                          _diasem 0052  
                        _anio_d 0058                          _anio_u 0094                       ??___lwdiv 002E  
                     ??___lwmod 0035                          _hora_d 005A                          _hora_u 0097  
              __end_of_button_A 20EC                __end_of_button_B 1E14                __end_of_button_C 238E  
              __end_of_button_D 22EE                          _locked 0013                          clear_0 218A  
                        clear_1 2198                ___awdiv@quotient 0030                          _minuto 0015  
              __end_of_menu_pin 226E                          _select 0019           __end_of_RtccWriteDate 174C  
         __end_of_RtccWriteTime 1858                RtccWriteTime@pTm 002A                    __pdataCOMRAM 004E  
                     ??_isdigit 002A          __size_of_button_number 0040                   ?_menu_submenu 002A  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ??_sprintf 0040                      __accesstop 0060  
       __end_of__initialization 21BE              __size_of_Write_RTC 015C                   ___rparam_used 000001  
     __size_of_keyboard_control 0156                  __pcstackCOMRAM 002A          __size_of_menu_iterator 0158  
                 __end_of_setup 1C38                 __CFG_DSWDTPS$G2 000000                 _button_asterisk 23EC  
                ??_menu_submenu 003A                 __CFG_OSC$INTOSC 000000                    _activity_pin 0005  
             lcd_gotoxy@address 0030            __size_of_button_hash 0010              __size_of_lcd_putrs 0054  
            __size_of_lcd_write 0018                    sprintf@width 004A                         ??_setup 0037  
                    __pbssBANK0 0060                       ?_Read_RTC 002A                      _dia_semana 0095  
     RtccWriteTime@tempHourWDay 0033                      __pnvCOMRAM 0058                   _button_number 21C8  
    __end_of_menu_submenu_alarm 1FEC                       ?_RtccWrOn 002A                  lcd_send_byte@n 002C  
    __end_of_menu_submenu_clock 1F92                         ?___wmul 002A                   ?_RtccReadDate 002A  
                 ?_RtccReadTime 002A                    ?_Delay1KTCYx 002A               __end_of_Write_RTC 1358  
                    _lcd_comand 23FA                      _lcd_gotoxy 22EE                         _RTCVALH 000F99  
                       _RTCVALL 000F98                       ?_lcd_init 002A                   _menu_iterator 1358  
                     ?_lcd_putc 002A                      ??_Read_RTC 003C                       ?_button_A 002A  
                     ?_button_B 002A                       ?_button_C 002A                       ?_button_D 002A  
                     ?_menu_pin 002A                  ?_button_number 002A        __end_of_menu_submenu_pin 1F38  
                       __Hparam 0000                         __Lparam 0000        __size_of_lcd_send_nibble 0076  
       __end_of_button_asterisk 23FA                      ??_RtccWrOn 002A         ??_menu_submenu_activate 003A  
                ??_RtccReadDate 002C                  ??_RtccReadTime 002C                         ___awdiv 19F6  
             __end_of_lcd_putrs 209A               __end_of_lcd_write 23A6                 __size_of___wmul 0028  
                       ___lwdiv 1E82                         ___lwmod 20EC                    __psmallconst 0F00  
                   _RtccTimeVal 0078                         __pcinit 2184                         _fecha_d 0059  
                       _fecha_u 0096                         __ramtop 0F00             _pin_input_validator 2356  
                       __ptext0 2208                         __ptext1 1BAC                         __ptext2 11FC  
                       __ptext3 19F6                         __ptext4 174C                         __ptext5 1606  
                       __ptext6 23A6                         __ptext7 14B0                         __ptext8 21C8  
                       __ptext9 23DC                         _buffer1 0080                       _T1CONbits 000FCD  
                       _dpowers 0F01                         _isdigit 2334         ??_menu_submenu_iterator 003A  
                       _segundo 0017                  ?_menu_iterator 002A                         _sprintf 0F98  
                    ??_lcd_init 002E                      ??_lcd_putc 0031            end_of_initialization 21BE  
          ?_pin_input_validator 002A            lcd_send_byte@address 002D                      ??_button_A 003C  
                 __Lmediumconst 0000                      ??_button_B 003A                      ??_button_C 003A  
                    ??_button_D 003A                      ??_menu_pin 003A            __end_of_menu_submenu 1D2E  
              _keyboard_control 14B0                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE           __end_of_lcd_send_byte 22A0  
                     _PORTAbits 000F80                       _PORTCbits 000F82                __CFG_DSBOREN$OFF 000000  
                   ?_lcd_comand 002A              _home_clock_refresh 1A8C                __CFG_CPUDIV$OSC1 000000  
                     _TRISBbits 000F93                     ?_lcd_gotoxy 002E                 _LCD_INIT_STRING 0F0B  
           ?_home_clock_refresh 002A           ??_pin_input_validator 003A                 ??_button_number 004D  
              __CFG_IOL1WAY$OFF 000000       RtccWriteDate@tempDayMonth 0033             __CFG_MSSP7B_EN$MSK7 000000  
              ?_button_asterisk 002A                Delay100TCYx@unit 002A            ??_home_clock_refresh 004D  
                __end_of___wmul 22C8                   __pidataCOMRAM 2408       RtccWriteDate@tempHourWDay 0035  
             ??_lcd_send_nibble 002A            __size_of_Delay1KTCYx 0012                __CFG_DSWDTEN$OFF 000000  
           start_initialization 2184                 ??_menu_iterator 003A            __end_of_RtccReadDate 1BAC  
          __end_of_RtccReadTime 1E82            RtccWriteTime@wasAlrm 002F            RtccWriteTime@wasWrEn 0030  
        __size_of_RtccWriteDate 0146                 RtccWriteDate@di 002C          __size_of_RtccWriteTime 010C  
             __size_of_Read_RTC 00F6                   _activity_menu 0003             __size_of_lcd_comand 000E  
           __size_of_lcd_gotoxy 0024                        ??___wmul 002E               __size_of_RtccWrOn 0012  
               RtccWriteTime@di 002C                __CFG_LPT1OSC$OFF 000000                     _ALRMCFGbits 000F91  
       __end_of_LCD_INIT_STRING 0F0F                   ??_button_hash 003A              _menu_submenu_alarm 1F92  
            _menu_submenu_clock 1F38                     __pbssCOMRAM 0001                       _Write_RTC 11FC  
                  _isdigit$2110 002B             ?_menu_submenu_alarm 002A             ?_menu_submenu_clock 002A  
               Delay1KTCYx@unit 002A           __size_of_menu_submenu 0076               __size_of_lcd_init 0080  
                   sprintf@flag 0046               __size_of_lcd_putc 004C                     sprintf@prec 0049  
                     __pnvBANK0 0094               ?_menu_submenu_pin 002A               __size_of_button_A 0052  
             __size_of_button_B 0070               __size_of_button_C 0018               __size_of_button_D 0026  
              ___lwdiv@dividend 002A               __size_of_menu_pin 0032                   ?_Delay100TCYx 002A  
            ??_menu_submenu_pin 003A                        ?___awdiv 002A            ??_menu_submenu_alarm 003A  
                      ?___lwdiv 002A            ??_menu_submenu_clock 003A  __size_of_menu_submenu_activate 005A  
                      ?___lwmod 0031   __end_of_menu_submenu_activate 2046         RtccWriteTime@tempMinSec 0031  
                     _lcd_putrs 2046                       _lcd_write 238E                   _RtccWriteDate 1606  
                   __smallconst 0F00                   _RtccWriteTime 174C                        ?_isdigit 002A  
          __CFG_RTCOSC$T1OSCREF 000000                    _menu_submenu 1CB8        __end_of_keyboard_control 1606  
                    ?_Write_RTC 002A  __size_of_menu_submenu_iterator 00A8                ___lwdiv@quotient 002E  
 __end_of_menu_submenu_iterator 19F6                        ?_sprintf 0036                  __size_of_setup 008C  
           __end_of_button_hash 23EC                _RtccAlrmTimeDate 0060                  ___wmul@product 002E  
                      _LATAbits 000F89                        _LATBbits 000F8A                       _pin_input 007E  
                      _PIE3bits 000FA3                       _select_op 001B                       _selection 001D  
                     _segundo_d 005D                  ??_Delay100TCYx 002A                       _segundo_u 005E  
              __CFG_WDTPS$32768 000000              RtccWriteDate@wasOn 002E              _Rtcc_read_TimeDate 0070  
                ?_RtccWriteDate 002A                      ?_lcd_putrs 0032                      ?_lcd_write 0034  
             ___wmul@multiplier 002A                  ?_RtccWriteTime 002A                       lcd_init@i 002E  
         __size_of_RtccReadDate 008E                    ??_lcd_comand 002E                       lcd_putc@c 0031  
         __size_of_RtccReadTime 006E                    ??_lcd_gotoxy 002F                       copy_data0 21B2  
                      _Read_RTC 1858                 _lcd_send_nibble 1D2E                        __Hrparam 0000  
                      _RtccDate 0022                _activity_submenu 0007                        __Lrparam 0000  
                      _RtccTime 0026                        _RtccWrOn 23A6              __end_of_lcd_comand 2408  
            __end_of_lcd_gotoxy 2312                    _RtccReadDate 1B1E                __size_of___awdiv 0096  
                  _RtccReadTime 1E14                __size_of___lwdiv 005C                __size_of___lwmod 004C  
                  _RtccTimeDate 0068                      sprintf@val 0047                     _button_hash 23DC  
   __end_of_pin_input_validator 2376                __size_of_isdigit 0022                 ___lwdiv@divisor 002C  
                   ??_Write_RTC 0037                 ___lwdiv@counter 0030                        __ptext10 2356  
                      __ptext11 23EC                        __ptext20 209A                        __ptext12 22C8  
                      __ptext21 194E                        __ptext13 2312                        __ptext30 2334  
                      __ptext22 1CB8                        __ptext14 2376                        __ptext31 22A0  
                      __ptext23 223C                        __ptext15 1DA4                        __ptext40 23CA  
                      __ptext32 20EC                        __ptext24 1C38                        __ptext16 1EDE  
                      __ptext41 1858                        __ptext33 1E82                        __ptext25 23B8  
                      __ptext17 1F38                        __ptext42 1E14                        __ptext34 238E  
                      __ptext26 23FA                        __ptext18 1F92                        __ptext43 1B1E  
                      __ptext35 2046                        __ptext27 1358                        __ptext19 1FEC  
                      __ptext36 2138                        __ptext28 1A8C                        __ptext37 22EE  
                      __ptext29 0F98                        __ptext38 226E                        __ptext39 1D2E  
                      _lcd_init 1C38                        _lcd_putc 2138                __size_of_sprintf 0264  
        __size_of_lcd_send_byte 0032                        _button_A 209A                        _button_B 1DA4  
                      _button_C 2376                        _button_D 22C8                   __size_of_main 0034  
                 __size_of_home 0022                        _menu_pin 223C           __end_of_button_number 2208  
                      _minuto_d 005C                        _minuto_u 0099                   ??_Delay1KTCYx 002A  
               ??_RtccWriteDate 002D     __size_of_home_clock_refresh 0092                 ??_RtccWriteTime 002D  
                   ??_lcd_putrs 0034                     ??_lcd_write 003A        __size_of_button_asterisk 000E  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2              RtccWriteTime@wasOn 002E  
          __end_of_Delay100TCYx 23DC                        isdigit@c 002C           __end_of_menu_iterator 14B0  
                     sprintf@ap 0044         __end_of_lcd_send_nibble 1DA4                       sprintf@sp 0036  
              ___lwmod@dividend 0031                      _OSCCONbits 000FD3           RtccWriteDate@tempYear 0030  
                 _lcd_send_byte 226E                      _RTCCFGbits 000F3F                        sprintf@c 004C  
                      sprintf@f 0038       __size_of_menu_submenu_pin 005A                 ___lwmod@divisor 0033  
           __end_of_Delay1KTCYx 23CA                 ___lwmod@counter 0035            RtccWriteDate@wasAlrm 002F  
          RtccWriteDate@wasWrEn 0032               ?_keyboard_control 002A              ??_keyboard_control 004D  
         lcd_send_nibble@nibble 002B  
