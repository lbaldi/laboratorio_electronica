

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 13 22:29:27 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  00250C                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _anio
    72  00250C  0010               	dw	16
    73                           
    74                           ;initializer for _dia
    75  00250E  0006               	dw	6
    76                           
    77                           ;initializer for _diasem
    78  002510  0002               	dw	2
    79                           
    80                           ;initializer for _hora
    81  002512  0012               	dw	18
    82                           
    83                           ;initializer for _mes
    84  002514  0009               	dw	9
    85                           
    86                           	psect	smallconst
    87  000F00                     __psmallconst:
    88                           	opt stack 0
    89  000F00  00                 	db	0
    90  000F01                     _dpowers:
    91                           	opt stack 0
    92  000F01  0001               	dw	1
    93  000F03  000A               	dw	10
    94  000F05  0064               	dw	100
    95  000F07  03E8               	dw	1000
    96  000F09  2710               	dw	10000
    97  000F0B                     __end_of_dpowers:
    98                           	opt stack 0
    99  000F0B                     _LCD_INIT_STRING:
   100                           	opt stack 0
   101  000F0B  28                 	db	40
   102  000F0C  0C                 	db	12
   103  000F0D  01                 	db	1
   104  000F0E  06                 	db	6
   105  000F0F                     __end_of_LCD_INIT_STRING:
   106                           	opt stack 0
   107  000F0F                     STR_6:
   108                           
   109                           ; BSR set to: 15
   110  000F0F  49                 	db	73	;'I'
   111  000F10  6E                 	db	110	;'n'
   112  000F11  67                 	db	103	;'g'
   113  000F12  72                 	db	114	;'r'
   114  000F13  65                 	db	101	;'e'
   115  000F14  73                 	db	115	;'s'
   116  000F15  65                 	db	101	;'e'
   117  000F16  20                 	db	32
   118  000F17  73                 	db	115	;'s'
   119  000F18  75                 	db	117	;'u'
   120  000F19  20                 	db	32
   121  000F1A  50                 	db	80	;'P'
   122  000F1B  49                 	db	73	;'I'
   123  000F1C  4E                 	db	78	;'N'
   124  000F1D  3A                 	db	58	;':'
   125  000F1E  00                 	db	0
   126  000F1F                     STR_2:
   127                           
   128                           ; BSR set to: 15
   129  000F1F  25                 	db	37
   130  000F20  30                 	db	48	;'0'
   131  000F21  32                 	db	50	;'2'
   132  000F22  75                 	db	117	;'u'
   133  000F23  2F                 	db	47
   134  000F24  25                 	db	37
   135  000F25  30                 	db	48	;'0'
   136  000F26  32                 	db	50	;'2'
   137  000F27  75                 	db	117	;'u'
   138  000F28  2F                 	db	47
   139  000F29  25                 	db	37
   140  000F2A  30                 	db	48	;'0'
   141  000F2B  32                 	db	50	;'2'
   142  000F2C  75                 	db	117	;'u'
   143  000F2D  00                 	db	0
   144  000F2E                     STR_3:
   145                           
   146                           ; BSR set to: 15
   147  000F2E  25                 	db	37
   148  000F2F  30                 	db	48	;'0'
   149  000F30  32                 	db	50	;'2'
   150  000F31  75                 	db	117	;'u'
   151  000F32  3A                 	db	58	;':'
   152  000F33  25                 	db	37
   153  000F34  30                 	db	48	;'0'
   154  000F35  32                 	db	50	;'2'
   155  000F36  75                 	db	117	;'u'
   156  000F37  3A                 	db	58	;':'
   157  000F38  25                 	db	37
   158  000F39  30                 	db	48	;'0'
   159  000F3A  32                 	db	50	;'2'
   160  000F3B  75                 	db	117	;'u'
   161  000F3C  00                 	db	0
   162  000F3D                     STR_33:
   163                           
   164                           ; BSR set to: 15
   165  000F3D  56                 	db	86	;'V'
   166  000F3E  6F                 	db	111	;'o'
   167  000F3F  6C                 	db	108	;'l'
   168  000F40  75                 	db	117	;'u'
   169  000F41  6D                 	db	109	;'m'
   170  000F42  65                 	db	101	;'e'
   171  000F43  6E                 	db	110	;'n'
   172  000F44  00                 	db	0
   173  000F45                     STR_30:
   174                           
   175                           ; BSR set to: 15
   176  000F45  43                 	db	67	;'C'
   177  000F46  61                 	db	97	;'a'
   178  000F47  6D                 	db	109	;'m'
   179  000F48  62                 	db	98	;'b'
   180  000F49  69                 	db	105	;'i'
   181  000F4A  61                 	db	97	;'a'
   182  000F4B  72                 	db	114	;'r'
   183  000F4C  00                 	db	0
   184  000F4D                     STR_7:
   185                           
   186                           ; BSR set to: 15
   187  000F4D  41                 	db	65	;'A'
   188  000F4E  63                 	db	99	;'c'
   189  000F4F  74                 	db	116	;'t'
   190  000F50  69                 	db	105	;'i'
   191  000F51  76                 	db	118	;'v'
   192  000F52  61                 	db	97	;'a'
   193  000F53  72                 	db	114	;'r'
   194  000F54  00                 	db	0
   195  000F55                     STR_10:
   196                           
   197                           ; BSR set to: 15
   198  000F55  41                 	db	65	;'A'
   199  000F56  6C                 	db	108	;'l'
   200  000F57  61                 	db	97	;'a'
   201  000F58  72                 	db	114	;'r'
   202  000F59  6D                 	db	109	;'m'
   203  000F5A  61                 	db	97	;'a'
   204  000F5B  00                 	db	0
   205  000F5C                     STR_27:
   206                           
   207                           ; BSR set to: 15
   208  000F5C  46                 	db	70	;'F'
   209  000F5D  65                 	db	101	;'e'
   210  000F5E  63                 	db	99	;'c'
   211  000F5F  68                 	db	104	;'h'
   212  000F60  61                 	db	97	;'a'
   213  000F61  00                 	db	0
   214  000F62                     STR_8:
   215                           
   216                           ; BSR set to: 15
   217  000F62  52                 	db	82	;'R'
   218  000F63  65                 	db	101	;'e'
   219  000F64  6C                 	db	108	;'l'
   220  000F65  6F                 	db	111	;'o'
   221  000F66  6A                 	db	106	;'j'
   222  000F67  00                 	db	0
   223  000F68                     STR_31:
   224                           
   225                           ; BSR set to: 15
   226  000F68  52                 	db	82	;'R'
   227  000F69  65                 	db	101	;'e'
   228  000F6A  73                 	db	115	;'s'
   229  000F6B  65                 	db	101	;'e'
   230  000F6C  74                 	db	116	;'t'
   231  000F6D  00                 	db	0
   232  000F6E                     STR_1:
   233                           
   234                           ; BSR set to: 15
   235  000F6E  31                 	db	49	;'1'
   236  000F6F  32                 	db	50	;'2'
   237  000F70  33                 	db	51	;'3'
   238  000F71  34                 	db	52	;'4'
   239  000F72  00                 	db	0
   240  000F73                     STR_28:
   241                           
   242                           ; BSR set to: 15
   243  000F73  48                 	db	72	;'H'
   244  000F74  6F                 	db	111	;'o'
   245  000F75  72                 	db	114	;'r'
   246  000F76  61                 	db	97	;'a'
   247  000F77  00                 	db	0
   248  000F78                     STR_34:
   249                           
   250                           ; BSR set to: 15
   251  000F78  54                 	db	84	;'T'
   252  000F79  6F                 	db	111	;'o'
   253  000F7A  6E                 	db	110	;'n'
   254  000F7B  6F                 	db	111	;'o'
   255  000F7C  00                 	db	0
   256  000F7D                     STR_37:
   257                           
   258                           ; BSR set to: 15
   259  000F7D  25                 	db	37
   260  000F7E  30                 	db	48	;'0'
   261  000F7F  31                 	db	49	;'1'
   262  000F80  75                 	db	117	;'u'
   263  000F81  00                 	db	0
   264  000F82                     STR_4:
   265                           
   266                           ; BSR set to: 15
   267  000F82  58                 	db	88	;'X'
   268  000F83  32                 	db	50	;'2'
   269  000F84  38                 	db	56	;'8'
   270  000F85  00                 	db	0
   271  000F86                     STR_9:
   272                           
   273                           ; BSR set to: 15
   274  000F86  50                 	db	80	;'P'
   275  000F87  69                 	db	105	;'i'
   276  000F88  6E                 	db	110	;'n'
   277  000F89  00                 	db	0
   278  000F8A                     STR_24:
   279                           
   280                           ; BSR set to: 15
   281  000F8A  53                 	db	83	;'S'
   282  000F8B  49                 	db	73	;'I'
   283  000F8C  00                 	db	0
   284  000F8D                     STR_25:
   285                           
   286                           ; BSR set to: 15
   287  000F8D  4E                 	db	78	;'N'
   288  000F8E  4F                 	db	79	;'O'
   289  000F8F  00                 	db	0
   290  000F90                     STR_12:
   291                           
   292                           ; BSR set to: 15
   293  000F90  20                 	db	32
   294  000F91  00                 	db	0
   295  000F92                     STR_35:
   296                           
   297                           ; BSR set to: 15
   298  000F92  2A                 	db	42
   299  000F93  00                 	db	0
   300  000F94                     STR_11:
   301                           
   302                           ; BSR set to: 15
   303  000F94  3E                 	db	62	;'>'
   304  000F95  00                 	db	0
   305  0000                     
   306                           ; #config settings
   307  000F96  00                 	db	0	; dummy byte at the end
   308  0000                     
   309                           	psect	nvCOMRAM
   310  000056                     __pnvCOMRAM:
   311                           	opt stack 0
   312  000056                     _anio_d:
   313                           	opt stack 0
   314  000056                     	ds	1
   315  000057                     _fecha_d:
   316                           	opt stack 0
   317  000057                     	ds	1
   318  000058                     _hora_d:
   319                           	opt stack 0
   320  000058                     	ds	1
   321  000059                     _hora_u:
   322                           	opt stack 0
   323  000059                     	ds	1
   324  00005A                     _mes_d:
   325                           	opt stack 0
   326  00005A                     	ds	1
   327  00005B                     _minuto_d:
   328                           	opt stack 0
   329  00005B                     	ds	1
   330  00005C                     _minuto_u:
   331                           	opt stack 0
   332  00005C                     	ds	1
   333  00005D                     _segundo_d:
   334                           	opt stack 0
   335  00005D                     	ds	1
   336  00005E                     _segundo_u:
   337                           	opt stack 0
   338  00005E                     	ds	1
   339                           
   340                           	psect	nvBANK0
   341  00009A                     __pnvBANK0:
   342                           	opt stack 0
   343  00009A                     _anio_u:
   344                           	opt stack 0
   345  00009A                     	ds	1
   346  00009B                     _dia_semana:
   347                           	opt stack 0
   348  00009B                     	ds	1
   349  00009C                     _fecha_u:
   350                           	opt stack 0
   351  00009C                     	ds	1
   352  00009D                     _mes_u:
   353                           	opt stack 0
   354  00009D                     	ds	1
   355  0000                     _ANCON0	set	3912
   356  0000                     _ANCON1	set	3913
   357  0000                     _RTCCFG	set	3903
   358  0000                     _RTCCFGbits	set	3903
   359  0000                     _ADCON0	set	4034
   360  0000                     _ADCON1	set	4033
   361  0000                     _ALRMCFGbits	set	3985
   362  0000                     _EECON2	set	4007
   363  0000                     _INTCONbits	set	4082
   364  0000                     _LATAbits	set	3977
   365  0000                     _LATBbits	set	3978
   366  0000                     _OSCCONbits	set	4051
   367  0000                     _OSCTUNEbits	set	3995
   368  0000                     _PIE3bits	set	4003
   369  0000                     _PORTAbits	set	3968
   370  0000                     _PORTCbits	set	3970
   371  0000                     _RTCVALH	set	3993
   372  0000                     _RTCVALL	set	3992
   373  0000                     _T1CONbits	set	4045
   374  0000                     _TRISA	set	3986
   375  0000                     _TRISB	set	3987
   376  0000                     _TRISBbits	set	3987
   377  0000                     _TRISC	set	3988
   378                           
   379                           	psect	cinit
   380  002272                     __pcinit:
   381                           	opt stack 0
   382  002272                     start_initialization:
   383                           	opt stack 0
   384  002272                     __initialization:
   385                           	opt stack 0
   386                           
   387                           ; Clear objects allocated to BANK0 (58 bytes)
   388  002272  EE00  F060         	lfsr	0,__pbssBANK0
   389  002276  0E3A               	movlw	58
   390  002278                     clear_0:
   391  002278  6AEE               	clrf	postinc0,c
   392  00227A  06E8               	decf	wreg,f,c
   393  00227C  E1FD               	bnz	clear_0
   394                           
   395                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   396  00227E  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   397                           
   398                           ; Clear objects allocated to COMRAM (39 bytes)
   399  002280  EE00  F001         	lfsr	0,__pbssCOMRAM
   400  002284  0E27               	movlw	39
   401  002286                     clear_1:
   402  002286  6AEE               	clrf	postinc0,c
   403  002288  06E8               	decf	wreg,f,c
   404  00228A  E1FD               	bnz	clear_1
   405                           
   406                           ; Initialize objects allocated to COMRAM (10 bytes)
   407                           ; load TBLPTR registers with __pidataCOMRAM
   408  00228C  0E0C               	movlw	low __pidataCOMRAM
   409  00228E  6EF6               	movwf	tblptrl,c
   410  002290  0E25               	movlw	high __pidataCOMRAM
   411  002292  6EF7               	movwf	tblptrh,c
   412  002294  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   413  002296  6EF8               	movwf	tblptru,c
   414  002298  EE00  F04C         	lfsr	0,__pdataCOMRAM
   415  00229C  EE10 F00A          	lfsr	1,10
   416  0022A0                     copy_data0:
   417  0022A0  0009               	tblrd		*+
   418  0022A2  CFF5 FFEE          	movff	tablat,postinc0
   419  0022A6  50E5               	movf	postdec1,w,c
   420  0022A8  50E1               	movf	fsr1l,w,c
   421  0022AA  E1FA               	bnz	copy_data0
   422  0022AC                     end_of_initialization:
   423                           	opt stack 0
   424  0022AC                     __end_of__initialization:
   425                           	opt stack 0
   426  0022AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   427  0022AE  6EF8               	movwf	tblptru,c
   428  0022B0  0100               	movlb	0
   429  0022B2  EFDB  F011         	goto	_main	;jump to C main() function
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	bitbssCOMRAM
   440  0002F8                     __pbitbssCOMRAM:
   441                           	opt stack 0
   442  0002F8                     _flag:
   443                           	opt stack 0
   444  0002F8                     	ds	1
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           
   454                           	psect	bssCOMRAM
   455  000001                     __pbssCOMRAM:
   456                           	opt stack 0
   457  000001                     _a:
   458                           	opt stack 0
   459  000001                     	ds	2
   460  000003                     _activity:
   461                           	opt stack 0
   462  000003                     	ds	2
   463  000005                     _b:
   464                           	opt stack 0
   465  000005                     	ds	2
   466  000007                     _c:
   467                           	opt stack 0
   468  000007                     	ds	2
   469  000009                     _home_callback:
   470                           	opt stack 0
   471  000009                     	ds	2
   472  00000B                     _home_callback_delay:
   473                           	opt stack 0
   474  00000B                     	ds	2
   475  00000D                     _i:
   476                           	opt stack 0
   477  00000D                     	ds	2
   478  00000F                     _j:
   479                           	opt stack 0
   480  00000F                     	ds	2
   481  000011                     _k:
   482                           	opt stack 0
   483  000011                     	ds	2
   484  000013                     _menu_selected:
   485                           	opt stack 0
   486  000013                     	ds	2
   487  000015                     _menu_selector:
   488                           	opt stack 0
   489  000015                     	ds	2
   490  000017                     _minuto:
   491                           	opt stack 0
   492  000017                     	ds	2
   493  000019                     _segundo:
   494                           	opt stack 0
   495  000019                     	ds	2
   496  00001B                     _state:
   497                           	opt stack 0
   498  00001B                     	ds	2
   499  00001D                     _submenu_selector:
   500                           	opt stack 0
   501  00001D                     	ds	2
   502  00001F                     _key:
   503                           	opt stack 0
   504  00001F                     	ds	1
   505  000020                     _RtccDate:
   506                           	opt stack 0
   507  000020                     	ds	4
   508  000024                     _RtccTime:
   509                           	opt stack 0
   510  000024                     	ds	4
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	dataCOMRAM
   521  00004C                     __pdataCOMRAM:
   522                           	opt stack 0
   523  00004C                     _anio:
   524                           	opt stack 0
   525  00004C                     	ds	2
   526  00004E                     _dia:
   527                           	opt stack 0
   528  00004E                     	ds	2
   529  000050                     _diasem:
   530                           	opt stack 0
   531  000050                     	ds	2
   532  000052                     _hora:
   533                           	opt stack 0
   534  000052                     	ds	2
   535  000054                     _mes:
   536                           	opt stack 0
   537  000054                     	ds	2
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1l	equ	0xFE1
   546                           
   547                           	psect	bssBANK0
   548  000060                     __pbssBANK0:
   549                           	opt stack 0
   550  000060                     _RtccAlrmTimeDate:
   551                           	opt stack 0
   552  000060                     	ds	8
   553  000068                     _RtccTimeDate:
   554                           	opt stack 0
   555  000068                     	ds	8
   556  000070                     _Rtcc_read_TimeDate:
   557                           	opt stack 0
   558  000070                     	ds	8
   559  000078                     _RtccTimeVal:
   560                           	opt stack 0
   561  000078                     	ds	4
   562  00007C                     _buffer1:
   563                           	opt stack 0
   564  00007C                     	ds	20
   565  000090                     _pin:
   566                           	opt stack 0
   567  000090                     	ds	5
   568  000095                     _pin_input:
   569                           	opt stack 0
   570  000095                     	ds	5
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580                           	psect	cstackCOMRAM
   581  000028                     __pcstackCOMRAM:
   582                           	opt stack 0
   583  000028                     ??_isdigit:
   584  000028                     ??_lcd_send_nibble:
   585  000028                     ?_strcmp:
   586                           	opt stack 0
   587  000028                     ?___wmul:
   588                           	opt stack 0
   589  000028                     ?___awdiv:
   590                           	opt stack 0
   591  000028                     ?___lwdiv:
   592                           	opt stack 0
   593  000028                     Delay100TCYx@unit:
   594                           	opt stack 0
   595  000028                     Delay1KTCYx@unit:
   596                           	opt stack 0
   597  000028                     RtccReadDate@pDt:
   598                           	opt stack 0
   599  000028                     RtccReadTime@pTm:
   600                           	opt stack 0
   601  000028                     RtccWriteDate@pDt:
   602                           	opt stack 0
   603  000028                     RtccWriteTime@pTm:
   604                           	opt stack 0
   605  000028                     ___wmul@multiplier:
   606                           	opt stack 0
   607  000028                     ___awdiv@dividend:
   608                           	opt stack 0
   609  000028                     ___lwdiv@dividend:
   610                           	opt stack 0
   611  000028                     strcat@to:
   612                           	opt stack 0
   613  000028                     strcmp@s1:
   614                           	opt stack 0
   615  000028                     strcpy@to:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x0
   619  000028                     	ds	1
   620  000029                     lcd_send_nibble@nibble:
   621                           	opt stack 0
   622  000029                     _isdigit$2134:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x1
   626  000029                     	ds	1
   627  00002A                     lcd_send_byte@n:
   628                           	opt stack 0
   629  00002A                     RtccWriteDate@di:
   630                           	opt stack 0
   631  00002A                     RtccWriteTime@di:
   632                           	opt stack 0
   633  00002A                     isdigit@c:
   634                           	opt stack 0
   635  00002A                     ___wmul@multiplicand:
   636                           	opt stack 0
   637  00002A                     ___awdiv@divisor:
   638                           	opt stack 0
   639  00002A                     ___lwdiv@divisor:
   640                           	opt stack 0
   641  00002A                     strcat@from:
   642                           	opt stack 0
   643  00002A                     strcmp@s2:
   644                           	opt stack 0
   645  00002A                     strcpy@from:
   646                           	opt stack 0
   647  00002A                     RtccReadDate@rTD1:
   648                           	opt stack 0
   649  00002A                     RtccReadTime@rTD1:
   650                           	opt stack 0
   651                           
   652                           ; 8 bytes @ 0x2
   653  00002A                     	ds	1
   654  00002B                     lcd_send_byte@address:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x3
   658  00002B                     	ds	1
   659  00002C                     ??_strcmp:
   660  00002C                     lcd_init@i:
   661                           	opt stack 0
   662  00002C                     lcd_gotoxy@y:
   663                           	opt stack 0
   664  00002C                     lcd_comand@d:
   665                           	opt stack 0
   666  00002C                     RtccWriteDate@wasOn:
   667                           	opt stack 0
   668  00002C                     RtccWriteTime@wasOn:
   669                           	opt stack 0
   670  00002C                     ___awdiv@counter:
   671                           	opt stack 0
   672  00002C                     ___wmul@product:
   673                           	opt stack 0
   674  00002C                     ___lwdiv@quotient:
   675                           	opt stack 0
   676  00002C                     strcat@cp:
   677                           	opt stack 0
   678  00002C                     strcpy@cp:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x4
   682  00002C                     	ds	1
   683  00002D                     lcd_gotoxy@x:
   684                           	opt stack 0
   685  00002D                     RtccWriteDate@wasAlrm:
   686                           	opt stack 0
   687  00002D                     RtccWriteTime@wasAlrm:
   688                           	opt stack 0
   689  00002D                     ___awdiv@sign:
   690                           	opt stack 0
   691  00002D                     strcmp@r:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x5
   695  00002D                     	ds	1
   696  00002E                     lcd_gotoxy@address:
   697                           	opt stack 0
   698  00002E                     RtccWriteTime@wasWrEn:
   699                           	opt stack 0
   700  00002E                     ___lwdiv@counter:
   701                           	opt stack 0
   702  00002E                     RtccWriteDate@tempYear:
   703                           	opt stack 0
   704  00002E                     ___awdiv@quotient:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x6
   708  00002E                     	ds	1
   709  00002F                     ?___lwmod:
   710                           	opt stack 0
   711  00002F                     lcd_putc@c:
   712                           	opt stack 0
   713  00002F                     RtccWriteTime@tempMinSec:
   714                           	opt stack 0
   715  00002F                     ___lwmod@dividend:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x7
   719  00002F                     	ds	1
   720  000030                     RtccWriteDate@wasWrEn:
   721                           	opt stack 0
   722  000030                     lcd_putrs@ptr:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x8
   726  000030                     	ds	1
   727  000031                     RtccWriteDate@tempDayMonth:
   728                           	opt stack 0
   729  000031                     RtccWriteTime@tempHourWDay:
   730                           	opt stack 0
   731  000031                     ___lwmod@divisor:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x9
   735  000031                     	ds	1
   736  000032                     lcd_write@column:
   737                           	opt stack 0
   738  000032                     RtccReadDate@rTD0:
   739                           	opt stack 0
   740  000032                     RtccReadTime@rTD0:
   741                           	opt stack 0
   742                           
   743                           ; 8 bytes @ 0xA
   744  000032                     	ds	1
   745  000033                     ___lwmod@counter:
   746                           	opt stack 0
   747  000033                     RtccWriteDate@tempHourWDay:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0xB
   751  000033                     	ds	1
   752  000034                     ?_sprintf:
   753                           	opt stack 0
   754  000034                     lcd_write@row:
   755                           	opt stack 0
   756  000034                     sprintf@sp:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0xC
   760  000034                     	ds	1
   761  000035                     
   762                           ; 0 bytes @ 0xD
   763  000035                     	ds	1
   764  000036                     lcd_write@string:
   765                           	opt stack 0
   766  000036                     sprintf@f:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0xE
   770  000036                     	ds	2
   771  000038                     ??_action_menu_selector:
   772  000038                     ??_action_submenu_selector:
   773  000038                     ??_button_B:
   774  000038                     pin_input_validator@comparision:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x10
   778  000038                     	ds	2
   779  00003A                     ??_button_A:
   780  00003A                     
   781                           ; 0 bytes @ 0x12
   782  00003A                     	ds	4
   783  00003E                     ??_sprintf:
   784                           
   785                           ; 0 bytes @ 0x16
   786  00003E                     	ds	4
   787  000042                     sprintf@ap:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x1A
   791  000042                     	ds	2
   792  000044                     sprintf@flag:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x1C
   796  000044                     	ds	1
   797  000045                     sprintf@val:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x1D
   801  000045                     	ds	2
   802  000047                     sprintf@prec:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x1F
   806  000047                     	ds	1
   807  000048                     sprintf@width:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x20
   811  000048                     	ds	2
   812  00004A                     sprintf@c:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x22
   816  00004A                     	ds	1
   817  00004B                     ??_keyboard_control:
   818                           
   819                           ; 0 bytes @ 0x23
   820  00004B                     	ds	1
   821  00004C                     tblptru	equ	0xFF8
   822                           tblptrh	equ	0xFF7
   823                           tblptrl	equ	0xFF6
   824                           tablat	equ	0xFF5
   825                           postinc0	equ	0xFEE
   826                           wreg	equ	0xFE8
   827                           postdec1	equ	0xFE5
   828                           fsr1l	equ	0xFE1
   829                           
   830                           ; 0 bytes @ 0x24
   831 ;;
   832 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   833 ;;
   834 ;; *************** function _main *****************
   835 ;; Defined at:
   836 ;;		line 409 in file "main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  2  330[None  ] int 
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels required when called:   10
   856 ;; This function calls:
   857 ;;		_Read_RTC
   858 ;;		_activity_home
   859 ;;		_check_home_callback
   860 ;;		_home_clock_refresh
   861 ;;		_keyboard_control
   862 ;;		_setup
   863 ;; This function is called by:
   864 ;;		Startup code after reset
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text0
   869  0023B6                     __ptext0:
   870                           	opt stack 0
   871  0023B6                     _main:
   872                           	opt stack 21
   873                           
   874                           ;main.c: 411: setup();
   875                           
   876                           ; BSR set to: 15
   877                           ;incstack = 0
   878  0023B6  EC4B  F00E         	call	_setup	;wreg free
   879                           
   880                           ;main.c: 413: activity_home();
   881  0023BA  ECC6  F011         	call	_activity_home	;wreg free
   882  0023BE  D000               	goto	l3186
   883  0023C0                     l3186:
   884                           
   885                           ;main.c: 417: check_home_callback();
   886  0023C0  EC26  F012         	call	_check_home_callback	;wreg free
   887                           
   888                           ;main.c: 419: Read_RTC();
   889  0023C4  EC28  F00C         	call	_Read_RTC	;wreg free
   890                           
   891                           ;main.c: 421: keyboard_control();
   892  0023C8  ECAA  F009         	call	_keyboard_control	;wreg free
   893                           
   894                           ;main.c: 423: if(activity == 0){home_clock_refresh();}
   895  0023CC  5003               	movf	_activity,w,c
   896  0023CE  1004               	iorwf	_activity+1,w,c
   897  0023D0  A4D8               	btfss	status,2,c
   898  0023D2  D7F6               	goto	l3186
   899  0023D4  EC3C  F00D         	call	_home_clock_refresh	;wreg free
   900  0023D8  D7F3               	goto	l3186
   901                           
   902                           ;main.c: 425: }
   903                           ;main.c: 427: return 0;
   904                           ;	Return value of _main is never used
   905  0023DA  EF00  F000         	goto	start
   906  0023DE                     __end_of_main:
   907                           	opt stack 0
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           postdec1	equ	0xFE5
   915                           fsr1l	equ	0xFE1
   916                           status	equ	0xFD8
   917                           
   918 ;; *************** function _setup *****************
   919 ;; Defined at:
   920 ;;		line 57 in file "main.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;		None               void
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    3
   941 ;; This function calls:
   942 ;;		_Write_RTC
   943 ;;		_lcd_comand
   944 ;;		_lcd_init
   945 ;;		_strcpy
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text1
   952  001C96                     __ptext1:
   953                           	opt stack 0
   954  001C96                     _setup:
   955                           	opt stack 27
   956                           
   957                           ;main.c: 59: OSCTUNEbits.INTSRC=1;
   958                           
   959                           ;incstack = 0
   960  001C96  8E9B               	bsf	3995,7,c	;volatile
   961                           
   962                           ;main.c: 60: OSCTUNEbits.PLLEN=0;
   963  001C98  9C9B               	bcf	3995,6,c	;volatile
   964                           
   965                           ;main.c: 61: OSCCONbits.IRCF0=1;
   966  001C9A  88D3               	bsf	4051,4,c	;volatile
   967                           
   968                           ;main.c: 62: OSCCONbits.IRCF1=1;
   969  001C9C  8AD3               	bsf	4051,5,c	;volatile
   970                           
   971                           ;main.c: 63: OSCCONbits.IRCF2=1;
   972  001C9E  8CD3               	bsf	4051,6,c	;volatile
   973                           
   974                           ;main.c: 64: OSCCONbits.SCS0=0;
   975  001CA0  90D3               	bcf	4051,0,c	;volatile
   976                           
   977                           ;main.c: 65: OSCCONbits.SCS1=0;
   978  001CA2  92D3               	bcf	4051,1,c	;volatile
   979                           
   980                           ;main.c: 66: TRISA = 0b11110000;
   981  001CA4  0EF0               	movlw	240
   982  001CA6  6E92               	movwf	3986,c	;volatile
   983                           
   984                           ;main.c: 67: TRISB = 0;
   985  001CA8  0E00               	movlw	0
   986  001CAA  6E93               	movwf	3987,c	;volatile
   987                           
   988                           ;main.c: 68: TRISC = 0b00000111;
   989  001CAC  0E07               	movlw	7
   990  001CAE  6E94               	movwf	3988,c	;volatile
   991                           
   992                           ;main.c: 72: ANCON0=0b11111111;
   993  001CB0  010F               	movlb	15	; () banked
   994  001CB2  6948               	setf	72,b	;volatile
   995                           
   996                           ; BSR set to: 15
   997                           ;main.c: 74: ANCON1=0b11111111;
   998  001CB4  010F               	movlb	15	; () banked
   999  001CB6  6949               	setf	73,b	;volatile
  1000                           
  1001                           ;main.c: 75: ADCON0=0b00101101;
  1002  001CB8  0E2D               	movlw	45
  1003  001CBA  6EC2               	movwf	4034,c	;volatile
  1004                           
  1005                           ;main.c: 76: ADCON1=0b00010000;
  1006  001CBC  0E10               	movlw	16
  1007  001CBE  6EC1               	movwf	4033,c	;volatile
  1008                           
  1009                           ; BSR set to: 15
  1010                           ;main.c: 77: RTCCFGbits.RTCEN=1;
  1011  001CC0  010F               	movlb	15	; () banked
  1012  001CC2  8F3F               	bsf	63,7,b	;volatile
  1013                           
  1014                           ; BSR set to: 15
  1015                           ;main.c: 78: RTCCFGbits.RTCWREN=1;
  1016  001CC4  010F               	movlb	15	; () banked
  1017  001CC6  8B3F               	bsf	63,5,b	;volatile
  1018                           
  1019                           ; BSR set to: 15
  1020                           ;main.c: 79: T1CONbits.T1OSCEN=1;
  1021  001CC8  86CD               	bsf	4045,3,c	;volatile
  1022                           
  1023                           ; BSR set to: 15
  1024                           ;main.c: 80: Write_RTC();
  1025  001CCA  EC55  F00A         	call	_Write_RTC	;wreg free
  1026                           
  1027                           ;main.c: 81: lcd_init();
  1028  001CCE  ECCC  F00D         	call	_lcd_init	;wreg free
  1029                           
  1030                           ;main.c: 82: lcd_comand(0b00001100);
  1031  001CD2  0E0C               	movlw	12
  1032  001CD4  EC7F  F012         	call	_lcd_comand
  1033                           
  1034                           ;main.c: 83: LATBbits.LATB1 = 1;;
  1035  001CD8  828A               	bsf	3978,1,c	;volatile
  1036                           
  1037                           ;main.c: 84: LATBbits.LATB0 = 1;;
  1038  001CDA  808A               	bsf	3978,0,c	;volatile
  1039                           
  1040                           ;main.c: 87: home_callback_delay = 50;
  1041  001CDC  0E00               	movlw	0
  1042  001CDE  6E0C               	movwf	_home_callback_delay+1,c
  1043  001CE0  0E32               	movlw	50
  1044  001CE2  6E0B               	movwf	_home_callback_delay,c
  1045                           
  1046                           ;main.c: 88: menu_selected = 1;
  1047  001CE4  0E00               	movlw	0
  1048  001CE6  6E14               	movwf	_menu_selected+1,c
  1049  001CE8  0E01               	movlw	1
  1050  001CEA  6E13               	movwf	_menu_selected,c
  1051                           
  1052                           ;main.c: 89: menu_selector = 1;
  1053  001CEC  0E00               	movlw	0
  1054  001CEE  6E16               	movwf	_menu_selector+1,c
  1055  001CF0  0E01               	movlw	1
  1056  001CF2  6E15               	movwf	_menu_selector,c
  1057                           
  1058                           ;main.c: 90: submenu_selector = 1;
  1059  001CF4  0E00               	movlw	0
  1060  001CF6  6E1E               	movwf	_submenu_selector+1,c
  1061  001CF8  0E01               	movlw	1
  1062  001CFA  6E1D               	movwf	_submenu_selector,c
  1063                           
  1064                           ;main.c: 91: strcpy(pin, "1234");
  1065  001CFC  0E90               	movlw	low _pin
  1066  001CFE  6E28               	movwf	strcpy@to,c
  1067  001D00  0E00               	movlw	high _pin
  1068  001D02  6E29               	movwf	strcpy@to+1,c
  1069  001D04  0E6E               	movlw	low STR_1
  1070  001D06  6E2A               	movwf	strcpy@from,c
  1071  001D08  0E0F               	movlw	high STR_1
  1072  001D0A  6E2B               	movwf	strcpy@from+1,c
  1073  001D0C  EC94  F011         	call	_strcpy	;wreg free
  1074  001D10  0012               	return		;funcret
  1075  001D12                     __end_of_setup:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           postdec1	equ	0xFE5
  1084                           fsr1l	equ	0xFE1
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function _Write_RTC *****************
  1088 ;; Defined at:
  1089 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;		None               void
  1096 ;; Registers used:
  1097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    2
  1110 ;; This function calls:
  1111 ;;		_RtccWrOn
  1112 ;;		_RtccWriteDate
  1113 ;;		_RtccWriteTime
  1114 ;;		___awdiv
  1115 ;; This function is called by:
  1116 ;;		_setup
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text2
  1121  0014AA                     __ptext2:
  1122                           	opt stack 0
  1123  0014AA                     _Write_RTC:
  1124                           	opt stack 27
  1125                           
  1126                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1127                           
  1128                           ;incstack = 0
  1129  0014AA  EC5B  F012         	call	_RtccWrOn	;wreg free
  1130                           
  1131                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1132  0014AE  80A3               	bsf	4003,0,c	;volatile
  1133                           
  1134                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1135  0014B0  C019  F028         	movff	_segundo,___awdiv@dividend
  1136  0014B4  C01A  F029         	movff	_segundo+1,___awdiv@dividend+1
  1137  0014B8  0E00               	movlw	0
  1138  0014BA  6E2B               	movwf	___awdiv@divisor+1,c
  1139  0014BC  0E0A               	movlw	10
  1140  0014BE  6E2A               	movwf	___awdiv@divisor,c
  1141  0014C0  ECF1  F00C         	call	___awdiv	;wreg free
  1142  0014C4  5028               	movf	?___awdiv,w,c
  1143  0014C6  6E5D               	movwf	_segundo_d,c
  1144                           
  1145                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1146  0014C8  505D               	movf	_segundo_d,w,c
  1147  0014CA  0D0A               	mullw	10
  1148  0014CC  50F3               	movf	prodl,w,c
  1149  0014CE  0800               	sublw	0
  1150  0014D0  2419               	addwf	_segundo,w,c
  1151  0014D2  6E5E               	movwf	_segundo_u,c
  1152                           
  1153                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1154  0014D4  505D               	movf	_segundo_d,w,c
  1155  0014D6  0D10               	mullw	16
  1156  0014D8  50F3               	movf	prodl,w,c
  1157  0014DA  245E               	addwf	_segundo_u,w,c
  1158  0014DC  6E25               	movwf	_RtccTime+1,c
  1159                           
  1160                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1161  0014DE  C017  F028         	movff	_minuto,___awdiv@dividend
  1162  0014E2  C018  F029         	movff	_minuto+1,___awdiv@dividend+1
  1163  0014E6  0E00               	movlw	0
  1164  0014E8  6E2B               	movwf	___awdiv@divisor+1,c
  1165  0014EA  0E0A               	movlw	10
  1166  0014EC  6E2A               	movwf	___awdiv@divisor,c
  1167  0014EE  ECF1  F00C         	call	___awdiv	;wreg free
  1168  0014F2  5028               	movf	?___awdiv,w,c
  1169  0014F4  6E5B               	movwf	_minuto_d,c
  1170                           
  1171                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1172  0014F6  505B               	movf	_minuto_d,w,c
  1173  0014F8  0D0A               	mullw	10
  1174  0014FA  50F3               	movf	prodl,w,c
  1175  0014FC  0800               	sublw	0
  1176  0014FE  2417               	addwf	_minuto,w,c
  1177  001500  6E5C               	movwf	_minuto_u,c
  1178                           
  1179                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1180  001502  505B               	movf	_minuto_d,w,c
  1181  001504  0D10               	mullw	16
  1182  001506  50F3               	movf	prodl,w,c
  1183  001508  245C               	addwf	_minuto_u,w,c
  1184  00150A  6E26               	movwf	_RtccTime+2,c
  1185                           
  1186                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1187  00150C  C052  F028         	movff	_hora,___awdiv@dividend
  1188  001510  C053  F029         	movff	_hora+1,___awdiv@dividend+1
  1189  001514  0E00               	movlw	0
  1190  001516  6E2B               	movwf	___awdiv@divisor+1,c
  1191  001518  0E0A               	movlw	10
  1192  00151A  6E2A               	movwf	___awdiv@divisor,c
  1193  00151C  ECF1  F00C         	call	___awdiv	;wreg free
  1194  001520  5028               	movf	?___awdiv,w,c
  1195  001522  6E58               	movwf	_hora_d,c
  1196                           
  1197                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1198  001524  5058               	movf	_hora_d,w,c
  1199  001526  0D0A               	mullw	10
  1200  001528  50F3               	movf	prodl,w,c
  1201  00152A  0800               	sublw	0
  1202  00152C  2452               	addwf	_hora,w,c
  1203  00152E  6E59               	movwf	_hora_u,c
  1204                           
  1205                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1206  001530  5058               	movf	_hora_d,w,c
  1207  001532  0D10               	mullw	16
  1208  001534  50F3               	movf	prodl,w,c
  1209  001536  2459               	addwf	_hora_u,w,c
  1210  001538  6E27               	movwf	_RtccTime+3,c
  1211                           
  1212                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1213  00153A  C04C  F028         	movff	_anio,___awdiv@dividend
  1214  00153E  C04D  F029         	movff	_anio+1,___awdiv@dividend+1
  1215  001542  0E00               	movlw	0
  1216  001544  6E2B               	movwf	___awdiv@divisor+1,c
  1217  001546  0E0A               	movlw	10
  1218  001548  6E2A               	movwf	___awdiv@divisor,c
  1219  00154A  ECF1  F00C         	call	___awdiv	;wreg free
  1220  00154E  5028               	movf	?___awdiv,w,c
  1221  001550  6E56               	movwf	_anio_d,c
  1222                           
  1223                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1224  001552  5056               	movf	_anio_d,w,c
  1225  001554  0D0A               	mullw	10
  1226  001556  50F3               	movf	prodl,w,c
  1227  001558  0800               	sublw	0
  1228  00155A  244C               	addwf	_anio,w,c
  1229  00155C  0100               	movlb	0	; () banked
  1230  00155E  6F9A               	movwf	_anio_u& (0+255),b
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1234  001560  5056               	movf	_anio_d,w,c
  1235  001562  0D10               	mullw	16
  1236  001564  50F3               	movf	prodl,w,c
  1237  001566  0100               	movlb	0	; () banked
  1238  001568  259A               	addwf	_anio_u& (0+255),w,b
  1239  00156A  6E23               	movwf	_RtccDate+3,c
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1243  00156C  C054  F028         	movff	_mes,___awdiv@dividend
  1244  001570  C055  F029         	movff	_mes+1,___awdiv@dividend+1
  1245  001574  0E00               	movlw	0
  1246  001576  6E2B               	movwf	___awdiv@divisor+1,c
  1247  001578  0E0A               	movlw	10
  1248  00157A  6E2A               	movwf	___awdiv@divisor,c
  1249  00157C  ECF1  F00C         	call	___awdiv	;wreg free
  1250  001580  5028               	movf	?___awdiv,w,c
  1251  001582  6E5A               	movwf	_mes_d,c
  1252                           
  1253                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1254  001584  505A               	movf	_mes_d,w,c
  1255  001586  0D0A               	mullw	10
  1256  001588  50F3               	movf	prodl,w,c
  1257  00158A  0800               	sublw	0
  1258  00158C  2454               	addwf	_mes,w,c
  1259  00158E  0100               	movlb	0	; () banked
  1260  001590  6F9D               	movwf	_mes_u& (0+255),b
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1264  001592  505A               	movf	_mes_d,w,c
  1265  001594  0D10               	mullw	16
  1266  001596  50F3               	movf	prodl,w,c
  1267  001598  0100               	movlb	0	; () banked
  1268  00159A  259D               	addwf	_mes_u& (0+255),w,b
  1269  00159C  6E22               	movwf	_RtccDate+2,c
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1273  00159E  C04E  F028         	movff	_dia,___awdiv@dividend
  1274  0015A2  C04F  F029         	movff	_dia+1,___awdiv@dividend+1
  1275  0015A6  0E00               	movlw	0
  1276  0015A8  6E2B               	movwf	___awdiv@divisor+1,c
  1277  0015AA  0E0A               	movlw	10
  1278  0015AC  6E2A               	movwf	___awdiv@divisor,c
  1279  0015AE  ECF1  F00C         	call	___awdiv	;wreg free
  1280  0015B2  5028               	movf	?___awdiv,w,c
  1281  0015B4  6E57               	movwf	_fecha_d,c
  1282                           
  1283                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1284  0015B6  5057               	movf	_fecha_d,w,c
  1285  0015B8  0D0A               	mullw	10
  1286  0015BA  50F3               	movf	prodl,w,c
  1287  0015BC  0800               	sublw	0
  1288  0015BE  244E               	addwf	_dia,w,c
  1289  0015C0  0100               	movlb	0	; () banked
  1290  0015C2  6F9C               	movwf	_fecha_u& (0+255),b
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1294  0015C4  5057               	movf	_fecha_d,w,c
  1295  0015C6  0D10               	mullw	16
  1296  0015C8  50F3               	movf	prodl,w,c
  1297  0015CA  0100               	movlb	0	; () banked
  1298  0015CC  259C               	addwf	_fecha_u& (0+255),w,b
  1299  0015CE  6E21               	movwf	_RtccDate+1,c
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1303  0015D0  C050  F09B         	movff	_diasem,_dia_semana
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1307  0015D4  C050  F020         	movff	_diasem,_RtccDate
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1311  0015D8  0E24               	movlw	low _RtccTime
  1312  0015DA  6E28               	movwf	RtccWriteTime@pTm,c
  1313  0015DC  0E00               	movlw	high _RtccTime
  1314  0015DE  6E29               	movwf	RtccWriteTime@pTm+1,c
  1315  0015E0  0E01               	movlw	1
  1316  0015E2  6E2A               	movwf	RtccWriteTime@di,c
  1317  0015E4  ECA2  F00B         	call	_RtccWriteTime	;wreg free
  1318                           
  1319                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1320  0015E8  0E20               	movlw	low _RtccDate
  1321  0015EA  6E28               	movwf	RtccWriteDate@pDt,c
  1322  0015EC  0E00               	movlw	high _RtccDate
  1323  0015EE  6E29               	movwf	RtccWriteDate@pDt+1,c
  1324  0015F0  0E01               	movlw	1
  1325  0015F2  6E2A               	movwf	RtccWriteDate@di,c
  1326  0015F4  ECFF  F00A         	call	_RtccWriteDate	;wreg free
  1327                           
  1328                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1329  0015F8  010F               	movlb	15	; () banked
  1330  0015FA  8F3F               	bsf	63,7,b	;volatile
  1331                           
  1332                           ; BSR set to: 15
  1333  0015FC  0012               	return		;funcret
  1334  0015FE                     __end_of_Write_RTC:
  1335                           	opt stack 0
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           prodl	equ	0xFF3
  1341                           postinc0	equ	0xFEE
  1342                           wreg	equ	0xFE8
  1343                           postdec1	equ	0xFE5
  1344                           fsr1l	equ	0xFE1
  1345                           status	equ	0xFD8
  1346                           
  1347 ;; *************** function ___awdiv *****************
  1348 ;; Defined at:
  1349 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  dividend        2    0[COMRAM] int 
  1352 ;;  divisor         2    2[COMRAM] int 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  quotient        2    6[COMRAM] int 
  1355 ;;  sign            1    5[COMRAM] unsigned char 
  1356 ;;  counter         1    4[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2    0[COMRAM] int 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;Total ram usage:        8 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_Write_RTC
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text3
  1380  0019E2                     __ptext3:
  1381                           	opt stack 0
  1382  0019E2                     ___awdiv:
  1383                           	opt stack 28
  1384                           
  1385                           ; BSR set to: 15
  1386                           ;incstack = 0
  1387  0019E2  0E00               	movlw	0
  1388  0019E4  6E2D               	movwf	___awdiv@sign,c
  1389  0019E6  AE2B               	btfss	___awdiv@divisor+1,7,c
  1390  0019E8  D007               	goto	l2802
  1391  0019EA  6C2A               	negf	___awdiv@divisor,c
  1392  0019EC  1E2B               	comf	___awdiv@divisor+1,f,c
  1393  0019EE  B0D8               	btfsc	status,0,c
  1394  0019F0  2A2B               	incf	___awdiv@divisor+1,f,c
  1395  0019F2  0E01               	movlw	1
  1396  0019F4  6E2D               	movwf	___awdiv@sign,c
  1397  0019F6  D000               	goto	l2802
  1398  0019F8                     l2802:
  1399  0019F8  AE29               	btfss	___awdiv@dividend+1,7,c
  1400  0019FA  D007               	goto	l2808
  1401  0019FC  6C28               	negf	___awdiv@dividend,c
  1402  0019FE  1E29               	comf	___awdiv@dividend+1,f,c
  1403  001A00  B0D8               	btfsc	status,0,c
  1404  001A02  2A29               	incf	___awdiv@dividend+1,f,c
  1405  001A04  0E01               	movlw	1
  1406  001A06  1A2D               	xorwf	___awdiv@sign,f,c
  1407  001A08  D000               	goto	l2808
  1408  001A0A                     l2808:
  1409  001A0A  0E00               	movlw	0
  1410  001A0C  6E2F               	movwf	___awdiv@quotient+1,c
  1411  001A0E  0E00               	movlw	0
  1412  001A10  6E2E               	movwf	___awdiv@quotient,c
  1413  001A12  502A               	movf	___awdiv@divisor,w,c
  1414  001A14  102B               	iorwf	___awdiv@divisor+1,w,c
  1415  001A16  B4D8               	btfsc	status,2,c
  1416  001A18  D021               	goto	l2830
  1417  001A1A  0E01               	movlw	1
  1418  001A1C  6E2C               	movwf	___awdiv@counter,c
  1419  001A1E  D005               	goto	l2816
  1420  001A20                     l2814:
  1421  001A20  90D8               	bcf	status,0,c
  1422  001A22  362A               	rlcf	___awdiv@divisor,f,c
  1423  001A24  362B               	rlcf	___awdiv@divisor+1,f,c
  1424  001A26  2A2C               	incf	___awdiv@counter,f,c
  1425  001A28  D000               	goto	l2816
  1426  001A2A                     l2816:
  1427  001A2A  BE2B               	btfsc	___awdiv@divisor+1,7,c
  1428  001A2C  D002               	goto	l2818
  1429  001A2E  D7F8               	goto	l2814
  1430  001A30  D000               	goto	l2818
  1431  001A32                     l2818:
  1432  001A32  90D8               	bcf	status,0,c
  1433  001A34  362E               	rlcf	___awdiv@quotient,f,c
  1434  001A36  362F               	rlcf	___awdiv@quotient+1,f,c
  1435  001A38  502A               	movf	___awdiv@divisor,w,c
  1436  001A3A  5C28               	subwf	___awdiv@dividend,w,c
  1437  001A3C  502B               	movf	___awdiv@divisor+1,w,c
  1438  001A3E  5829               	subwfb	___awdiv@dividend+1,w,c
  1439  001A40  A0D8               	btfss	status,0,c
  1440  001A42  D006               	goto	l2826
  1441  001A44  502A               	movf	___awdiv@divisor,w,c
  1442  001A46  5E28               	subwf	___awdiv@dividend,f,c
  1443  001A48  502B               	movf	___awdiv@divisor+1,w,c
  1444  001A4A  5A29               	subwfb	___awdiv@dividend+1,f,c
  1445  001A4C  802E               	bsf	___awdiv@quotient,0,c
  1446  001A4E  D000               	goto	l2826
  1447  001A50                     l2826:
  1448  001A50  90D8               	bcf	status,0,c
  1449  001A52  322B               	rrcf	___awdiv@divisor+1,f,c
  1450  001A54  322A               	rrcf	___awdiv@divisor,f,c
  1451  001A56  2E2C               	decfsz	___awdiv@counter,f,c
  1452  001A58  D7EC               	goto	l2818
  1453  001A5A  D000               	goto	l2830
  1454  001A5C                     l2830:
  1455  001A5C  502D               	movf	___awdiv@sign,w,c
  1456  001A5E  B4D8               	btfsc	status,2,c
  1457  001A60  D005               	goto	l2834
  1458  001A62  6C2E               	negf	___awdiv@quotient,c
  1459  001A64  1E2F               	comf	___awdiv@quotient+1,f,c
  1460  001A66  B0D8               	btfsc	status,0,c
  1461  001A68  2A2F               	incf	___awdiv@quotient+1,f,c
  1462  001A6A  D000               	goto	l2834
  1463  001A6C                     l2834:
  1464  001A6C  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  1465  001A70  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  1466  001A74  0012               	return	
  1467  001A76  0012               	return		;funcret
  1468  001A78                     __end_of___awdiv:
  1469                           	opt stack 0
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           prodl	equ	0xFF3
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postdec1	equ	0xFE5
  1478                           fsr1l	equ	0xFE1
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _RtccWriteTime *****************
  1482 ;; Defined at:
  1483 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  pTm             2    0[COMRAM] PTR const struct .
  1486 ;;		 -> RtccTime(4), 
  1487 ;;  di              1    2[COMRAM] enum E7121
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  tempHourWDay    2    9[COMRAM] struct .
  1490 ;;  tempMinSec      2    7[COMRAM] struct .
  1491 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1492 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1493 ;;  wasOn           1    4[COMRAM] enum E7121
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      enum E7337
  1496 ;; Registers used:
  1497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1504 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1506 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1507 ;;Total ram usage:       11 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    1
  1510 ;; This function calls:
  1511 ;;		_RtccWrOn
  1512 ;; This function is called by:
  1513 ;;		_Write_RTC
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text4
  1518  001744                     __ptext4:
  1519                           	opt stack 0
  1520  001744                     _RtccWriteTime:
  1521                           	opt stack 27
  1522                           
  1523                           ;incstack = 0
  1524  001744  0E00               	movlw	0
  1525  001746  6E2D               	movwf	RtccWriteTime@wasAlrm,c
  1526  001748  EE20 F002          	lfsr	2,2
  1527  00174C  5028               	movf	RtccWriteTime@pTm,w,c
  1528  00174E  26D9               	addwf	fsr2l,f,c
  1529  001750  5029               	movf	RtccWriteTime@pTm+1,w,c
  1530  001752  22DA               	addwfc	fsr2h,f,c
  1531  001754  0E5A               	movlw	90
  1532  001756  60DF               	cpfslt	indf2,c
  1533  001758  0012               	return	
  1534  00175A  EE20 F001          	lfsr	2,1
  1535  00175E  5028               	movf	RtccWriteTime@pTm,w,c
  1536  001760  26D9               	addwf	fsr2l,f,c
  1537  001762  5029               	movf	RtccWriteTime@pTm+1,w,c
  1538  001764  22DA               	addwfc	fsr2h,f,c
  1539  001766  0E5A               	movlw	90
  1540  001768  60DF               	cpfslt	indf2,c
  1541  00176A  0012               	return	
  1542  00176C  EE20 F003          	lfsr	2,3
  1543  001770  5028               	movf	RtccWriteTime@pTm,w,c
  1544  001772  26D9               	addwf	fsr2l,f,c
  1545  001774  5029               	movf	RtccWriteTime@pTm+1,w,c
  1546  001776  22DA               	addwfc	fsr2h,f,c
  1547  001778  0E24               	movlw	36
  1548  00177A  64DF               	cpfsgt	indf2,c
  1549  00177C  D002               	goto	l2454
  1550  00177E  0012               	return	
  1551                           
  1552                           ;	Return value of _RtccWriteTime is never used
  1553  001780  0012               	return	
  1554  001782                     l2454:
  1555  001782  EE20 F002          	lfsr	2,2
  1556  001786  5028               	movf	RtccWriteTime@pTm,w,c
  1557  001788  26D9               	addwf	fsr2l,f,c
  1558  00178A  5029               	movf	RtccWriteTime@pTm+1,w,c
  1559  00178C  22DA               	addwfc	fsr2h,f,c
  1560  00178E  50DF               	movf	indf2,w,c
  1561  001790  6E30               	movwf	RtccWriteTime@tempMinSec+1,c
  1562  001792  EE20 F001          	lfsr	2,1
  1563  001796  5028               	movf	RtccWriteTime@pTm,w,c
  1564  001798  26D9               	addwf	fsr2l,f,c
  1565  00179A  5029               	movf	RtccWriteTime@pTm+1,w,c
  1566  00179C  22DA               	addwfc	fsr2h,f,c
  1567  00179E  50DF               	movf	indf2,w,c
  1568  0017A0  6E2F               	movwf	RtccWriteTime@tempMinSec,c
  1569  0017A2  502A               	movf	RtccWriteTime@di,w,c
  1570  0017A4  B4D8               	btfsc	status,2,c
  1571  0017A6  D002               	goto	l2460
  1572  0017A8  9CF2               	bcf	intcon,6,c	;volatile
  1573  0017AA  D000               	goto	l2460
  1574  0017AC                     l2460:
  1575  0017AC  0E00               	movlw	0
  1576  0017AE  BB3F               	btfsc	63,5,b	;volatile
  1577  0017B0  0E01               	movlw	1
  1578  0017B2  6E2E               	movwf	RtccWriteTime@wasWrEn,c
  1579  0017B4  502E               	movf	RtccWriteTime@wasWrEn,w,c
  1580  0017B6  A4D8               	btfss	status,2,c
  1581  0017B8  D003               	goto	l2464
  1582  0017BA  EC5B  F012         	call	_RtccWrOn	;wreg free
  1583  0017BE  D000               	goto	l2464
  1584  0017C0                     l2464:
  1585  0017C0  0E00               	movlw	0
  1586  0017C2  BF3F               	btfsc	63,7,b	;volatile
  1587  0017C4  0E01               	movlw	1
  1588  0017C6  6E2C               	movwf	RtccWriteTime@wasOn,c
  1589  0017C8  502C               	movf	RtccWriteTime@wasOn,w,c
  1590  0017CA  B4D8               	btfsc	status,2,c
  1591  0017CC  D007               	goto	l2470
  1592  0017CE  0E00               	movlw	0
  1593  0017D0  BE91               	btfsc	3985,7,c	;volatile
  1594  0017D2  0E01               	movlw	1
  1595  0017D4  6E2D               	movwf	RtccWriteTime@wasAlrm,c
  1596  0017D6  010F               	movlb	15	; () banked
  1597  0017D8  9F3F               	bcf	63,7,b	;volatile
  1598  0017DA  D000               	goto	l2470
  1599  0017DC                     l2470:
  1600  0017DC  0EFC               	movlw	252
  1601  0017DE  010F               	movlb	15	; () banked
  1602  0017E0  173F               	andwf	63,f,b	;volatile
  1603  0017E2  010F               	movlb	15	; () banked
  1604  0017E4  813F               	bsf	63,0,b	;volatile
  1605                           
  1606                           ; BSR set to: 15
  1607  0017E6  CF98 F031          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1608                           
  1609                           ; BSR set to: 15
  1610  0017EA  CF99 F032          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1611                           
  1612                           ; BSR set to: 15
  1613  0017EE  EE20 F003          	lfsr	2,3
  1614  0017F2  5028               	movf	RtccWriteTime@pTm,w,c
  1615  0017F4  26D9               	addwf	fsr2l,f,c
  1616  0017F6  5029               	movf	RtccWriteTime@pTm+1,w,c
  1617  0017F8  22DA               	addwfc	fsr2h,f,c
  1618  0017FA  50DF               	movf	indf2,w,c
  1619  0017FC  6E31               	movwf	RtccWriteTime@tempHourWDay,c
  1620                           
  1621                           ; BSR set to: 15
  1622  0017FE  0EFC               	movlw	252
  1623  001800  010F               	movlb	15	; () banked
  1624  001802  173F               	andwf	63,f,b	;volatile
  1625                           
  1626                           ; BSR set to: 15
  1627  001804  010F               	movlb	15	; () banked
  1628  001806  813F               	bsf	63,0,b	;volatile
  1629                           
  1630                           ; BSR set to: 15
  1631  001808  C031  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1632                           
  1633                           ; BSR set to: 15
  1634  00180C  C032  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1635                           
  1636                           ; BSR set to: 15
  1637  001810  C02F  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1638                           
  1639                           ; BSR set to: 15
  1640  001814  C030  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1641                           
  1642                           ; BSR set to: 15
  1643  001818  502C               	movf	RtccWriteTime@wasOn,w,c
  1644  00181A  B4D8               	btfsc	status,2,c
  1645  00181C  D00D               	goto	l2502
  1646                           
  1647                           ; BSR set to: 15
  1648  00181E  010F               	movlb	15	; () banked
  1649  001820  8F3F               	bsf	63,7,b	;volatile
  1650                           
  1651                           ; BSR set to: 15
  1652  001822  502D               	movf	RtccWriteTime@wasAlrm,w,c
  1653  001824  B4D8               	btfsc	status,2,c
  1654  001826  D002               	goto	l2498
  1655                           
  1656                           ; BSR set to: 15
  1657  001828  8E91               	bsf	3985,7,c	;volatile
  1658  00182A  D000               	goto	l2498
  1659  00182C                     l2498:
  1660                           
  1661                           ; BSR set to: 15
  1662  00182C  502E               	movf	RtccWriteTime@wasWrEn,w,c
  1663  00182E  B4D8               	btfsc	status,2,c
  1664  001830  D009               	goto	l2506
  1665                           
  1666                           ; BSR set to: 15
  1667  001832  EC5B  F012         	call	_RtccWrOn	;wreg free
  1668  001836  D006               	goto	l2506
  1669  001838                     l2502:
  1670  001838  502E               	movf	RtccWriteTime@wasWrEn,w,c
  1671  00183A  A4D8               	btfss	status,2,c
  1672  00183C  D003               	goto	l2506
  1673  00183E  010F               	movlb	15	; () banked
  1674  001840  9B3F               	bcf	63,5,b	;volatile
  1675                           
  1676                           ; BSR set to: 15
  1677  001842  D000               	goto	l2506
  1678  001844                     l2506:
  1679  001844  502A               	movf	RtccWriteTime@di,w,c
  1680  001846  B4D8               	btfsc	status,2,c
  1681  001848  0012               	return	
  1682  00184A  8CF2               	bsf	intcon,6,c	;volatile
  1683  00184C  0012               	return	
  1684                           
  1685                           ;	Return value of _RtccWriteTime is never used
  1686  00184E  0012               	return		;funcret
  1687  001850                     __end_of_RtccWriteTime:
  1688                           	opt stack 0
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           prodl	equ	0xFF3
  1694                           intcon	equ	0xFF2
  1695                           postinc0	equ	0xFEE
  1696                           wreg	equ	0xFE8
  1697                           postdec1	equ	0xFE5
  1698                           fsr1l	equ	0xFE1
  1699                           indf2	equ	0xFDF
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _RtccWriteDate *****************
  1705 ;; Defined at:
  1706 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  pDt             2    0[COMRAM] PTR const struct .
  1709 ;;		 -> RtccDate(4), 
  1710 ;;  di              1    2[COMRAM] enum E7121
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  tempHourWDay    2   11[COMRAM] struct .
  1713 ;;  tempDayMonth    2    9[COMRAM] struct .
  1714 ;;  tempYear        2    6[COMRAM] struct .
  1715 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1716 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1717 ;;  wasOn           1    4[COMRAM] enum E7121
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      enum E7337
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1727 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;Total ram usage:       13 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    1
  1734 ;; This function calls:
  1735 ;;		_RtccWrOn
  1736 ;; This function is called by:
  1737 ;;		_Write_RTC
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text5
  1742  0015FE                     __ptext5:
  1743                           	opt stack 0
  1744  0015FE                     _RtccWriteDate:
  1745                           	opt stack 27
  1746                           
  1747                           ;incstack = 0
  1748  0015FE  0E00               	movlw	0
  1749  001600  6E2D               	movwf	RtccWriteDate@wasAlrm,c
  1750  001602  EE20 F002          	lfsr	2,2
  1751  001606  5028               	movf	RtccWriteDate@pDt,w,c
  1752  001608  26D9               	addwf	fsr2l,f,c
  1753  00160A  5029               	movf	RtccWriteDate@pDt+1,w,c
  1754  00160C  22DA               	addwfc	fsr2h,f,c
  1755  00160E  0E13               	movlw	19
  1756  001610  60DF               	cpfslt	indf2,c
  1757  001612  0012               	return	
  1758  001614  EE20 F002          	lfsr	2,2
  1759  001618  5028               	movf	RtccWriteDate@pDt,w,c
  1760  00161A  26D9               	addwf	fsr2l,f,c
  1761  00161C  5029               	movf	RtccWriteDate@pDt+1,w,c
  1762  00161E  22DA               	addwfc	fsr2h,f,c
  1763  001620  50DF               	movf	indf2,w,c
  1764  001622  B4D8               	btfsc	status,2,c
  1765  001624  0012               	return	
  1766  001626  EE20 F001          	lfsr	2,1
  1767  00162A  5028               	movf	RtccWriteDate@pDt,w,c
  1768  00162C  26D9               	addwf	fsr2l,f,c
  1769  00162E  5029               	movf	RtccWriteDate@pDt+1,w,c
  1770  001630  22DA               	addwfc	fsr2h,f,c
  1771  001632  0E32               	movlw	50
  1772  001634  60DF               	cpfslt	indf2,c
  1773  001636  0012               	return	
  1774  001638  EE20 F001          	lfsr	2,1
  1775  00163C  5028               	movf	RtccWriteDate@pDt,w,c
  1776  00163E  26D9               	addwf	fsr2l,f,c
  1777  001640  5029               	movf	RtccWriteDate@pDt+1,w,c
  1778  001642  22DA               	addwfc	fsr2h,f,c
  1779  001644  50DF               	movf	indf2,w,c
  1780  001646  B4D8               	btfsc	status,2,c
  1781  001648  0012               	return	
  1782  00164A  EE20 F003          	lfsr	2,3
  1783  00164E  5028               	movf	RtccWriteDate@pDt,w,c
  1784  001650  26D9               	addwf	fsr2l,f,c
  1785  001652  5029               	movf	RtccWriteDate@pDt+1,w,c
  1786  001654  22DA               	addwfc	fsr2h,f,c
  1787  001656  0E99               	movlw	153
  1788  001658  64DF               	cpfsgt	indf2,c
  1789  00165A  D002               	goto	l2522
  1790  00165C  0012               	return	
  1791                           
  1792                           ;	Return value of _RtccWriteDate is never used
  1793  00165E  0012               	return	
  1794  001660                     l2522:
  1795  001660  EE20 F003          	lfsr	2,3
  1796  001664  5028               	movf	RtccWriteDate@pDt,w,c
  1797  001666  26D9               	addwf	fsr2l,f,c
  1798  001668  5029               	movf	RtccWriteDate@pDt+1,w,c
  1799  00166A  22DA               	addwfc	fsr2h,f,c
  1800  00166C  50DF               	movf	indf2,w,c
  1801  00166E  6E2E               	movwf	RtccWriteDate@tempYear,c
  1802  001670  EE20 F001          	lfsr	2,1
  1803  001674  5028               	movf	RtccWriteDate@pDt,w,c
  1804  001676  26D9               	addwf	fsr2l,f,c
  1805  001678  5029               	movf	RtccWriteDate@pDt+1,w,c
  1806  00167A  22DA               	addwfc	fsr2h,f,c
  1807  00167C  50DF               	movf	indf2,w,c
  1808  00167E  6E31               	movwf	RtccWriteDate@tempDayMonth,c
  1809  001680  EE20 F002          	lfsr	2,2
  1810  001684  5028               	movf	RtccWriteDate@pDt,w,c
  1811  001686  26D9               	addwf	fsr2l,f,c
  1812  001688  5029               	movf	RtccWriteDate@pDt+1,w,c
  1813  00168A  22DA               	addwfc	fsr2h,f,c
  1814  00168C  50DF               	movf	indf2,w,c
  1815  00168E  6E32               	movwf	RtccWriteDate@tempDayMonth+1,c
  1816  001690  502A               	movf	RtccWriteDate@di,w,c
  1817  001692  B4D8               	btfsc	status,2,c
  1818  001694  D002               	goto	l2528
  1819  001696  9CF2               	bcf	intcon,6,c	;volatile
  1820  001698  D000               	goto	l2528
  1821  00169A                     l2528:
  1822  00169A  0E00               	movlw	0
  1823  00169C  BB3F               	btfsc	63,5,b	;volatile
  1824  00169E  0E01               	movlw	1
  1825  0016A0  6E30               	movwf	RtccWriteDate@wasWrEn,c
  1826  0016A2  5030               	movf	RtccWriteDate@wasWrEn,w,c
  1827  0016A4  A4D8               	btfss	status,2,c
  1828  0016A6  D003               	goto	l2532
  1829  0016A8  EC5B  F012         	call	_RtccWrOn	;wreg free
  1830  0016AC  D000               	goto	l2532
  1831  0016AE                     l2532:
  1832  0016AE  0E00               	movlw	0
  1833  0016B0  BF3F               	btfsc	63,7,b	;volatile
  1834  0016B2  0E01               	movlw	1
  1835  0016B4  6E2C               	movwf	RtccWriteDate@wasOn,c
  1836  0016B6  502C               	movf	RtccWriteDate@wasOn,w,c
  1837  0016B8  B4D8               	btfsc	status,2,c
  1838  0016BA  D007               	goto	l2538
  1839  0016BC  0E00               	movlw	0
  1840  0016BE  BE91               	btfsc	3985,7,c	;volatile
  1841  0016C0  0E01               	movlw	1
  1842  0016C2  6E2D               	movwf	RtccWriteDate@wasAlrm,c
  1843  0016C4  010F               	movlb	15	; () banked
  1844  0016C6  9F3F               	bcf	63,7,b	;volatile
  1845  0016C8  D000               	goto	l2538
  1846  0016CA                     l2538:
  1847  0016CA  0EFC               	movlw	252
  1848  0016CC  010F               	movlb	15	; () banked
  1849  0016CE  173F               	andwf	63,f,b	;volatile
  1850  0016D0  010F               	movlb	15	; () banked
  1851  0016D2  813F               	bsf	63,0,b	;volatile
  1852                           
  1853                           ; BSR set to: 15
  1854  0016D4  CF98 F033          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  1855                           
  1856                           ; BSR set to: 15
  1857  0016D8  CF99 F034          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  1858                           
  1859                           ; BSR set to: 15
  1860  0016DC  C028  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  1861  0016E0  C029  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  1862  0016E4  50DF               	movf	indf2,w,c
  1863  0016E6  6E34               	movwf	RtccWriteDate@tempHourWDay+1,c
  1864                           
  1865                           ; BSR set to: 15
  1866  0016E8  0EFC               	movlw	252
  1867  0016EA  010F               	movlb	15	; () banked
  1868  0016EC  173F               	andwf	63,f,b	;volatile
  1869                           
  1870                           ; BSR set to: 15
  1871  0016EE  0E03               	movlw	3
  1872  0016F0  010F               	movlb	15	; () banked
  1873  0016F2  133F               	iorwf	63,f,b	;volatile
  1874                           
  1875                           ; BSR set to: 15
  1876  0016F4  C02E  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  1877                           
  1878                           ; BSR set to: 15
  1879  0016F8  C02F  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  1880                           
  1881                           ; BSR set to: 15
  1882  0016FC  C031  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  1883                           
  1884                           ; BSR set to: 15
  1885  001700  C032  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  1886                           
  1887                           ; BSR set to: 15
  1888  001704  C033  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  1889                           
  1890                           ; BSR set to: 15
  1891  001708  C034  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  1892                           
  1893                           ; BSR set to: 15
  1894  00170C  502C               	movf	RtccWriteDate@wasOn,w,c
  1895  00170E  B4D8               	btfsc	status,2,c
  1896  001710  D00D               	goto	l2574
  1897                           
  1898                           ; BSR set to: 15
  1899  001712  010F               	movlb	15	; () banked
  1900  001714  8F3F               	bsf	63,7,b	;volatile
  1901                           
  1902                           ; BSR set to: 15
  1903  001716  502D               	movf	RtccWriteDate@wasAlrm,w,c
  1904  001718  B4D8               	btfsc	status,2,c
  1905  00171A  D002               	goto	l2570
  1906                           
  1907                           ; BSR set to: 15
  1908  00171C  8E91               	bsf	3985,7,c	;volatile
  1909  00171E  D000               	goto	l2570
  1910  001720                     l2570:
  1911                           
  1912                           ; BSR set to: 15
  1913  001720  5030               	movf	RtccWriteDate@wasWrEn,w,c
  1914  001722  B4D8               	btfsc	status,2,c
  1915  001724  D009               	goto	l2578
  1916                           
  1917                           ; BSR set to: 15
  1918  001726  EC5B  F012         	call	_RtccWrOn	;wreg free
  1919  00172A  D006               	goto	l2578
  1920  00172C                     l2574:
  1921  00172C  5030               	movf	RtccWriteDate@wasWrEn,w,c
  1922  00172E  A4D8               	btfss	status,2,c
  1923  001730  D003               	goto	l2578
  1924  001732  010F               	movlb	15	; () banked
  1925  001734  9B3F               	bcf	63,5,b	;volatile
  1926                           
  1927                           ; BSR set to: 15
  1928  001736  D000               	goto	l2578
  1929  001738                     l2578:
  1930  001738  502A               	movf	RtccWriteDate@di,w,c
  1931  00173A  B4D8               	btfsc	status,2,c
  1932  00173C  0012               	return	
  1933  00173E  9CF2               	bcf	intcon,6,c	;volatile
  1934  001740  0012               	return	
  1935                           
  1936                           ;	Return value of _RtccWriteDate is never used
  1937  001742  0012               	return		;funcret
  1938  001744                     __end_of_RtccWriteDate:
  1939                           	opt stack 0
  1940                           tblptru	equ	0xFF8
  1941                           tblptrh	equ	0xFF7
  1942                           tblptrl	equ	0xFF6
  1943                           tablat	equ	0xFF5
  1944                           prodl	equ	0xFF3
  1945                           intcon	equ	0xFF2
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           postdec1	equ	0xFE5
  1949                           fsr1l	equ	0xFE1
  1950                           indf2	equ	0xFDF
  1951                           fsr2h	equ	0xFDA
  1952                           fsr2l	equ	0xFD9
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _RtccWrOn *****************
  1956 ;; Defined at:
  1957 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  data            2    0        unsigned int 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;		None               void
  1964 ;; Registers used:
  1965 ;;		wreg, status,2
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_Write_RTC
  1981 ;;		_RtccWriteDate
  1982 ;;		_RtccWriteTime
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text6
  1987  0024B6                     __ptext6:
  1988                           	opt stack 0
  1989  0024B6                     _RtccWrOn:
  1990                           	opt stack 27
  1991                           
  1992                           ;incstack = 0
  1993  0024B6  9CF2               	bcf	intcon,6,c	;volatile
  1994  0024B8  0E55               	movlw	85
  1995  0024BA  6EA7               	movwf	4007,c	;volatile
  1996  0024BC  0EAA               	movlw	170
  1997  0024BE  6EA7               	movwf	4007,c	;volatile
  1998  0024C0  010F               	movlb	15	; () banked
  1999  0024C2  8B3F               	bsf	63,5,b	;volatile
  2000                           
  2001                           ; BSR set to: 15
  2002  0024C4  8CF2               	bsf	intcon,6,c	;volatile
  2003                           
  2004                           ; BSR set to: 15
  2005  0024C6  0012               	return		;funcret
  2006  0024C8                     __end_of_RtccWrOn:
  2007                           	opt stack 0
  2008                           tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           prodl	equ	0xFF3
  2013                           intcon	equ	0xFF2
  2014                           postinc0	equ	0xFEE
  2015                           wreg	equ	0xFE8
  2016                           postdec1	equ	0xFE5
  2017                           fsr1l	equ	0xFE1
  2018                           indf2	equ	0xFDF
  2019                           fsr2h	equ	0xFDA
  2020                           fsr2l	equ	0xFD9
  2021                           status	equ	0xFD8
  2022                           
  2023 ;; *************** function _keyboard_control *****************
  2024 ;; Defined at:
  2025 ;;		line 354 in file "main.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;		None               void
  2032 ;; Registers used:
  2033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;Total ram usage:        1 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    9
  2046 ;; This function calls:
  2047 ;;		_button_A
  2048 ;;		_button_B
  2049 ;;		_button_C
  2050 ;;		_button_D
  2051 ;;		_button_asterisk
  2052 ;;		_button_hash
  2053 ;;		_button_number
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text7
  2060  001354                     __ptext7:
  2061                           	opt stack 0
  2062  001354                     _keyboard_control:
  2063                           	opt stack 21
  2064                           
  2065                           ;main.c: 356: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2066                           
  2067                           ; BSR set to: 15
  2068                           ;incstack = 0
  2069  001354  8089               	bsf	3977,0,c	;volatile
  2070  001356  9289               	bcf	3977,1,c	;volatile
  2071  001358  9489               	bcf	3977,2,c	;volatile
  2072  00135A  9689               	bcf	3977,3,c	;volatile
  2073                           
  2074                           ;main.c: 357: {
  2075                           ;main.c: 358: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2076  00135C  AA80               	btfss	3968,5,c	;volatile
  2077  00135E  D007               	goto	l259
  2078  001360  0E01               	movlw	1
  2079  001362  6E1F               	movwf	_key,c
  2080  001364  ECC4  F00E         	call	_button_number	;wreg free
  2081  001368  D000               	goto	l260
  2082  00136A                     l260:
  2083  00136A  BA80               	btfsc	3968,5,c	;volatile
  2084  00136C  D7FE               	goto	l260
  2085  00136E                     l259:
  2086                           
  2087                           ;main.c: 359: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2088  00136E  AE80               	btfss	3968,7,c	;volatile
  2089  001370  D007               	goto	l263
  2090  001372  0E02               	movlw	2
  2091  001374  6E1F               	movwf	_key,c
  2092  001376  ECC4  F00E         	call	_button_number	;wreg free
  2093  00137A  D000               	goto	l264
  2094  00137C                     l264:
  2095  00137C  BE80               	btfsc	3968,7,c	;volatile
  2096  00137E  D7FE               	goto	l264
  2097  001380                     l263:
  2098                           
  2099                           ;main.c: 360: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2100  001380  AC80               	btfss	3968,6,c	;volatile
  2101  001382  D007               	goto	l267
  2102  001384  0E03               	movlw	3
  2103  001386  6E1F               	movwf	_key,c
  2104  001388  ECC4  F00E         	call	_button_number	;wreg free
  2105  00138C  D000               	goto	l268
  2106  00138E                     l268:
  2107  00138E  BC80               	btfsc	3968,6,c	;volatile
  2108  001390  D7FE               	goto	l268
  2109  001392                     l267:
  2110                           
  2111                           ;main.c: 361: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2112  001392  A482               	btfss	3970,2,c	;volatile
  2113  001394  D007               	goto	l271
  2114  001396  0E0B               	movlw	11
  2115  001398  6E1F               	movwf	_key,c
  2116  00139A  EC5B  F011         	call	_button_A	;wreg free
  2117  00139E  D000               	goto	l272
  2118  0013A0                     l272:
  2119  0013A0  B482               	btfsc	3970,2,c	;volatile
  2120  0013A2  D7FE               	goto	l272
  2121  0013A4                     l271:
  2122                           
  2123                           ;main.c: 362: }
  2124                           ;main.c: 364: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2125  0013A4  9089               	bcf	3977,0,c	;volatile
  2126  0013A6  8289               	bsf	3977,1,c	;volatile
  2127  0013A8  9489               	bcf	3977,2,c	;volatile
  2128  0013AA  9689               	bcf	3977,3,c	;volatile
  2129                           
  2130                           ;main.c: 365: {
  2131                           ;main.c: 366: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2132  0013AC  AA80               	btfss	3968,5,c	;volatile
  2133  0013AE  D007               	goto	l275
  2134  0013B0  0E04               	movlw	4
  2135  0013B2  6E1F               	movwf	_key,c
  2136  0013B4  ECC4  F00E         	call	_button_number	;wreg free
  2137  0013B8  D000               	goto	l276
  2138  0013BA                     l276:
  2139  0013BA  BA80               	btfsc	3968,5,c	;volatile
  2140  0013BC  D7FE               	goto	l276
  2141  0013BE                     l275:
  2142                           
  2143                           ;main.c: 367: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2144  0013BE  AE80               	btfss	3968,7,c	;volatile
  2145  0013C0  D007               	goto	l279
  2146  0013C2  0E05               	movlw	5
  2147  0013C4  6E1F               	movwf	_key,c
  2148  0013C6  ECC4  F00E         	call	_button_number	;wreg free
  2149  0013CA  D000               	goto	l280
  2150  0013CC                     l280:
  2151  0013CC  BE80               	btfsc	3968,7,c	;volatile
  2152  0013CE  D7FE               	goto	l280
  2153  0013D0                     l279:
  2154                           
  2155                           ;main.c: 368: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2156  0013D0  AC80               	btfss	3968,6,c	;volatile
  2157  0013D2  D007               	goto	l283
  2158  0013D4  0E06               	movlw	6
  2159  0013D6  6E1F               	movwf	_key,c
  2160  0013D8  ECC4  F00E         	call	_button_number	;wreg free
  2161  0013DC  D000               	goto	l284
  2162  0013DE                     l284:
  2163  0013DE  BC80               	btfsc	3968,6,c	;volatile
  2164  0013E0  D7FE               	goto	l284
  2165  0013E2                     l283:
  2166                           
  2167                           ;main.c: 369: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2168  0013E2  A482               	btfss	3970,2,c	;volatile
  2169  0013E4  D007               	goto	l287
  2170  0013E6  0E0C               	movlw	12
  2171  0013E8  6E1F               	movwf	_key,c
  2172  0013EA  EC26  F010         	call	_button_B	;wreg free
  2173  0013EE  D000               	goto	l288
  2174  0013F0                     l288:
  2175  0013F0  B482               	btfsc	3970,2,c	;volatile
  2176  0013F2  D7FE               	goto	l288
  2177  0013F4                     l287:
  2178                           
  2179                           ;main.c: 370: }
  2180                           ;main.c: 372: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2181  0013F4  9089               	bcf	3977,0,c	;volatile
  2182  0013F6  9289               	bcf	3977,1,c	;volatile
  2183  0013F8  8489               	bsf	3977,2,c	;volatile
  2184  0013FA  9689               	bcf	3977,3,c	;volatile
  2185                           
  2186                           ;main.c: 373: {
  2187                           ;main.c: 374: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2188  0013FC  AA80               	btfss	3968,5,c	;volatile
  2189  0013FE  D007               	goto	l291
  2190  001400  0E07               	movlw	7
  2191  001402  6E1F               	movwf	_key,c
  2192  001404  ECC4  F00E         	call	_button_number	;wreg free
  2193  001408  D000               	goto	l292
  2194  00140A                     l292:
  2195  00140A  BA80               	btfsc	3968,5,c	;volatile
  2196  00140C  D7FE               	goto	l292
  2197  00140E                     l291:
  2198                           
  2199                           ;main.c: 375: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2200  00140E  AE80               	btfss	3968,7,c	;volatile
  2201  001410  D007               	goto	l295
  2202  001412  0E08               	movlw	8
  2203  001414  6E1F               	movwf	_key,c
  2204  001416  ECC4  F00E         	call	_button_number	;wreg free
  2205  00141A  D000               	goto	l296
  2206  00141C                     l296:
  2207  00141C  BE80               	btfsc	3968,7,c	;volatile
  2208  00141E  D7FE               	goto	l296
  2209  001420                     l295:
  2210                           
  2211                           ;main.c: 376: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2212  001420  AC80               	btfss	3968,6,c	;volatile
  2213  001422  D007               	goto	l299
  2214  001424  0E09               	movlw	9
  2215  001426  6E1F               	movwf	_key,c
  2216  001428  ECC4  F00E         	call	_button_number	;wreg free
  2217  00142C  D000               	goto	l300
  2218  00142E                     l300:
  2219  00142E  BC80               	btfsc	3968,6,c	;volatile
  2220  001430  D7FE               	goto	l300
  2221  001432                     l299:
  2222                           
  2223                           ;main.c: 377: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2224  001432  A482               	btfss	3970,2,c	;volatile
  2225  001434  D007               	goto	l303
  2226  001436  0E0D               	movlw	13
  2227  001438  6E1F               	movwf	_key,c
  2228  00143A  EC37  F012         	call	_button_C	;wreg free
  2229  00143E  D000               	goto	l304
  2230  001440                     l304:
  2231  001440  B482               	btfsc	3970,2,c	;volatile
  2232  001442  D7FE               	goto	l304
  2233  001444                     l303:
  2234                           
  2235                           ;main.c: 378: }
  2236                           ;main.c: 380: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2237  001444  9089               	bcf	3977,0,c	;volatile
  2238  001446  9289               	bcf	3977,1,c	;volatile
  2239  001448  9489               	bcf	3977,2,c	;volatile
  2240  00144A  8689               	bsf	3977,3,c	;volatile
  2241                           
  2242                           ;main.c: 381: {
  2243                           ;main.c: 382: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2244  00144C  AA80               	btfss	3968,5,c	;volatile
  2245  00144E  D007               	goto	l307
  2246  001450  0E0E               	movlw	14
  2247  001452  6E1F               	movwf	_key,c
  2248  001454  EC64  F012         	call	_button_asterisk	;wreg free
  2249  001458  D000               	goto	l308
  2250  00145A                     l308:
  2251  00145A  BA80               	btfsc	3968,5,c	;volatile
  2252  00145C  D7FE               	goto	l308
  2253  00145E                     l307:
  2254                           
  2255                           ;main.c: 383: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2256  00145E  AE80               	btfss	3968,7,c	;volatile
  2257  001460  D007               	goto	l311
  2258  001462  0E00               	movlw	0
  2259  001464  6E1F               	movwf	_key,c
  2260  001466  ECC4  F00E         	call	_button_number	;wreg free
  2261  00146A  D000               	goto	l312
  2262  00146C                     l312:
  2263  00146C  BE80               	btfsc	3968,7,c	;volatile
  2264  00146E  D7FE               	goto	l312
  2265  001470                     l311:
  2266                           
  2267                           ;main.c: 384: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2268  001470  AC80               	btfss	3968,6,c	;volatile
  2269  001472  D007               	goto	l315
  2270  001474  0E0F               	movlw	15
  2271  001476  6E1F               	movwf	_key,c
  2272  001478  EC51  F012         	call	_button_hash	;wreg free
  2273  00147C  D000               	goto	l316
  2274  00147E                     l316:
  2275  00147E  BC80               	btfsc	3968,6,c	;volatile
  2276  001480  D7FE               	goto	l316
  2277  001482                     l315:
  2278                           
  2279                           ;main.c: 385: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2280  001482  A482               	btfss	3970,2,c	;volatile
  2281  001484  D009               	goto	l3168
  2282  001486  0E10               	movlw	16
  2283  001488  6E1F               	movwf	_key,c
  2284  00148A  EC8B  F012         	call	_button_D	;wreg free
  2285  00148E  D000               	goto	l320
  2286  001490                     l320:
  2287  001490  A482               	btfss	3970,2,c	;volatile
  2288  001492  D002               	goto	l3168
  2289  001494  D7FD               	goto	l320
  2290  001496  D000               	goto	l3168
  2291  001498                     l3168:
  2292                           
  2293                           ;main.c: 386: }
  2294                           ;main.c: 388: _delay((unsigned long)((98)*(8000000/4000.0)));
  2295  001498  0EFF               	movlw	255
  2296  00149A  6E4B               	movwf	??_keyboard_control& (0+255),c
  2297  00149C  0E8A               	movlw	138
  2298  00149E                     u2377:
  2299  00149E  2EE8               	decfsz	wreg,f,c
  2300  0014A0  D7FE               	goto	u2377
  2301  0014A2  2E4B               	decfsz	??_keyboard_control& (0+255),f,c
  2302  0014A4  D7FC               	goto	u2377
  2303  0014A6  D000               	nop2	
  2304  0014A8  0012               	return		;funcret
  2305  0014AA                     __end_of_keyboard_control:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodl	equ	0xFF3
  2312                           intcon	equ	0xFF2
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1l	equ	0xFE1
  2317                           indf2	equ	0xFDF
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _button_number *****************
  2323 ;; Defined at:
  2324 ;;		line 335 in file "main.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;		None               void
  2331 ;; Registers used:
  2332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    5
  2345 ;; This function calls:
  2346 ;;		_lcd_putrs
  2347 ;;		_reset_home_callback
  2348 ;;		_sprintf
  2349 ;;		_strcat
  2350 ;; This function is called by:
  2351 ;;		_keyboard_control
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text8
  2356  001D88                     __ptext8:
  2357                           	opt stack 0
  2358  001D88                     _button_number:
  2359                           	opt stack 24
  2360                           
  2361                           ;main.c: 337: reset_home_callback();
  2362                           
  2363                           ;incstack = 0
  2364  001D88  EC90  F012         	call	_reset_home_callback	;wreg free
  2365                           
  2366                           ;main.c: 339: if(activity == 1){
  2367  001D8C  0403               	decf	_activity,w,c
  2368  001D8E  1004               	iorwf	_activity+1,w,c
  2369  001D90  A4D8               	btfss	status,2,c
  2370  001D92  D01E               	goto	l3016
  2371                           
  2372                           ;main.c: 341: lcd_putrs("*");
  2373  001D94  0E92               	movlw	low STR_35
  2374  001D96  6E30               	movwf	lcd_putrs@ptr,c
  2375  001D98  0E0F               	movlw	high STR_35
  2376  001D9A  6E31               	movwf	lcd_putrs@ptr+1,c
  2377  001D9C  EC51  F010         	call	_lcd_putrs	;wreg free
  2378                           
  2379                           ;main.c: 342: sprintf(buffer1, "%01u", key);
  2380  001DA0  0E7C               	movlw	low _buffer1
  2381  001DA2  6E34               	movwf	sprintf@sp,c
  2382  001DA4  0E00               	movlw	high _buffer1
  2383  001DA6  6E35               	movwf	sprintf@sp+1,c
  2384  001DA8  0E7D               	movlw	low STR_37
  2385  001DAA  6E36               	movwf	sprintf@f,c
  2386  001DAC  0E0F               	movlw	high STR_37
  2387  001DAE  6E37               	movwf	sprintf@f+1,c
  2388  001DB0  C01F  F038         	movff	_key,?_sprintf+4
  2389  001DB4  6A39               	clrf	?_sprintf+5,c
  2390  001DB6  ECCC  F007         	call	_sprintf	;wreg free
  2391                           
  2392                           ;main.c: 343: strcat(pin_input, buffer1);
  2393  001DBA  0E95               	movlw	low _pin_input
  2394  001DBC  6E28               	movwf	strcat@to,c
  2395  001DBE  0E00               	movlw	high _pin_input
  2396  001DC0  6E29               	movwf	strcat@to+1,c
  2397  001DC2  0E7C               	movlw	low _buffer1
  2398  001DC4  6E2A               	movwf	strcat@from,c
  2399  001DC6  0E00               	movlw	high _buffer1
  2400  001DC8  6E2B               	movwf	strcat@from+1,c
  2401  001DCA  EC15  F011         	call	_strcat	;wreg free
  2402                           
  2403                           ;main.c: 345: } else {
  2404  001DCE  0012               	return	
  2405  001DD0                     l3016:
  2406                           
  2407                           ;main.c: 347: sprintf(buffer1,"%01u",key);
  2408  001DD0  0E7C               	movlw	low _buffer1
  2409  001DD2  6E34               	movwf	sprintf@sp,c
  2410  001DD4  0E00               	movlw	high _buffer1
  2411  001DD6  6E35               	movwf	sprintf@sp+1,c
  2412  001DD8  0E7D               	movlw	low STR_37
  2413  001DDA  6E36               	movwf	sprintf@f,c
  2414  001DDC  0E0F               	movlw	high STR_37
  2415  001DDE  6E37               	movwf	sprintf@f+1,c
  2416  001DE0  C01F  F038         	movff	_key,?_sprintf+4
  2417  001DE4  6A39               	clrf	?_sprintf+5,c
  2418  001DE6  ECCC  F007         	call	_sprintf	;wreg free
  2419                           
  2420                           ;main.c: 348: lcd_putrs(buffer1);
  2421  001DEA  0E7C               	movlw	low _buffer1
  2422  001DEC  6E30               	movwf	lcd_putrs@ptr,c
  2423  001DEE  0E00               	movlw	high _buffer1
  2424  001DF0  6E31               	movwf	lcd_putrs@ptr+1,c
  2425  001DF2  EC51  F010         	call	_lcd_putrs	;wreg free
  2426  001DF6  0012               	return	
  2427  001DF8  0012               	return		;funcret
  2428  001DFA                     __end_of_button_number:
  2429                           	opt stack 0
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           prodl	equ	0xFF3
  2435                           intcon	equ	0xFF2
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           postdec1	equ	0xFE5
  2439                           fsr1l	equ	0xFE1
  2440                           indf2	equ	0xFDF
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _strcat *****************
  2446 ;; Defined at:
  2447 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  to              2    0[COMRAM] PTR unsigned char 
  2450 ;;		 -> pin_input(5), 
  2451 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2452 ;;		 -> buffer1(20), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  cp              2    4[COMRAM] PTR unsigned char 
  2455 ;;		 -> pin_input(5), 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2    0[COMRAM] PTR unsigned char 
  2458 ;; Registers used:
  2459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2468 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2469 ;;Total ram usage:        6 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_button_number
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text9
  2479  00222A                     __ptext9:
  2480                           	opt stack 0
  2481  00222A                     _strcat:
  2482                           	opt stack 28
  2483                           
  2484                           ;incstack = 0
  2485  00222A  C028  F02C         	movff	strcat@to,strcat@cp
  2486  00222E  C029  F02D         	movff	strcat@to+1,strcat@cp+1
  2487  002232  D003               	goto	l2788
  2488  002234                     l2786:
  2489  002234  4A2C               	infsnz	strcat@cp,f,c
  2490  002236  2A2D               	incf	strcat@cp+1,f,c
  2491  002238  D000               	goto	l2788
  2492  00223A                     l2788:
  2493  00223A  C02C  FFD9         	movff	strcat@cp,fsr2l
  2494  00223E  C02D  FFDA         	movff	strcat@cp+1,fsr2h
  2495  002242  50DF               	movf	indf2,w,c
  2496  002244  B4D8               	btfsc	status,2,c
  2497  002246  D007               	goto	l2792
  2498  002248  D7F5               	goto	l2786
  2499  00224A  D005               	goto	l2792
  2500  00224C                     l2790:
  2501  00224C  4A2C               	infsnz	strcat@cp,f,c
  2502  00224E  2A2D               	incf	strcat@cp+1,f,c
  2503  002250  4A2A               	infsnz	strcat@from,f,c
  2504  002252  2A2B               	incf	strcat@from+1,f,c
  2505  002254  D000               	goto	l2792
  2506  002256                     l2792:
  2507  002256  C02A  FFD9         	movff	strcat@from,fsr2l
  2508  00225A  C02B  FFDA         	movff	strcat@from+1,fsr2h
  2509  00225E  C02C  FFE1         	movff	strcat@cp,fsr1l
  2510  002262  C02D  FFE2         	movff	strcat@cp+1,fsr1h
  2511  002266  CFDF FFE7          	movff	indf2,indf1
  2512  00226A  50E7               	movf	indf1,w,c
  2513  00226C  A4D8               	btfss	status,2,c
  2514  00226E  D7EE               	goto	l2790
  2515                           
  2516                           ;	Return value of _strcat is never used
  2517  002270  0012               	return		;funcret
  2518  002272                     __end_of_strcat:
  2519                           	opt stack 0
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           prodl	equ	0xFF3
  2525                           intcon	equ	0xFF2
  2526                           postinc0	equ	0xFEE
  2527                           wreg	equ	0xFE8
  2528                           indf1	equ	0xFE7
  2529                           postdec1	equ	0xFE5
  2530                           fsr1h	equ	0xFE2
  2531                           fsr1l	equ	0xFE1
  2532                           indf2	equ	0xFDF
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _button_hash *****************
  2538 ;; Defined at:
  2539 ;;		line 325 in file "main.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;		None               void
  2546 ;; Registers used:
  2547 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    8
  2560 ;; This function calls:
  2561 ;;		_pin_input_validator
  2562 ;;		_reset_home_callback
  2563 ;; This function is called by:
  2564 ;;		_keyboard_control
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text10
  2569  0024A2                     __ptext10:
  2570                           	opt stack 0
  2571  0024A2                     _button_hash:
  2572                           	opt stack 21
  2573                           
  2574                           ;main.c: 327: reset_home_callback();
  2575                           
  2576                           ;incstack = 0
  2577  0024A2  EC90  F012         	call	_reset_home_callback	;wreg free
  2578                           
  2579                           ;main.c: 329: if(activity == 1){
  2580  0024A6  0403               	decf	_activity,w,c
  2581  0024A8  1004               	iorwf	_activity+1,w,c
  2582  0024AA  A4D8               	btfss	status,2,c
  2583  0024AC  0012               	return	
  2584                           
  2585                           ;main.c: 330: pin_input_validator();
  2586  0024AE  EC7B  F011         	call	_pin_input_validator	;wreg free
  2587  0024B2  0012               	return	
  2588  0024B4  0012               	return		;funcret
  2589  0024B6                     __end_of_button_hash:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodl	equ	0xFF3
  2596                           intcon	equ	0xFF2
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           indf1	equ	0xFE7
  2600                           postdec1	equ	0xFE5
  2601                           fsr1h	equ	0xFE2
  2602                           fsr1l	equ	0xFE1
  2603                           indf2	equ	0xFDF
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _pin_input_validator *****************
  2609 ;; Defined at:
  2610 ;;		line 233 in file "main.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  comparision     2   16[COMRAM] int 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;		None               void
  2617 ;; Registers used:
  2618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;Total ram usage:        2 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    7
  2631 ;; This function calls:
  2632 ;;		_activity_menu
  2633 ;;		_activity_pin
  2634 ;;		_strcmp
  2635 ;; This function is called by:
  2636 ;;		_button_hash
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text11
  2641  0022F6                     __ptext11:
  2642                           	opt stack 0
  2643  0022F6                     _pin_input_validator:
  2644                           	opt stack 21
  2645                           
  2646                           ;main.c: 235: int comparision = strcmp(pin, pin_input);
  2647                           
  2648                           ;incstack = 0
  2649  0022F6  0E90               	movlw	low _pin
  2650  0022F8  6E28               	movwf	strcmp@s1,c
  2651  0022FA  0E00               	movlw	high _pin
  2652  0022FC  6E29               	movwf	strcmp@s1+1,c
  2653  0022FE  0E95               	movlw	low _pin_input
  2654  002300  6E2A               	movwf	strcmp@s2,c
  2655  002302  0E00               	movlw	high _pin_input
  2656  002304  6E2B               	movwf	strcmp@s2+1,c
  2657  002306  EC7B  F010         	call	_strcmp	;wreg free
  2658  00230A  C028  F038         	movff	?_strcmp,pin_input_validator@comparision
  2659  00230E  C029  F039         	movff	?_strcmp+1,pin_input_validator@comparision+1
  2660                           
  2661                           ;main.c: 237: if( comparision == 0 ){
  2662  002312  5038               	movf	pin_input_validator@comparision,w,c
  2663  002314  1039               	iorwf	pin_input_validator@comparision+1,w,c
  2664  002316  A4D8               	btfss	status,2,c
  2665  002318  D003               	goto	l2782
  2666                           
  2667                           ;main.c: 238: activity_menu();
  2668  00231A  EC0C  F00E         	call	_activity_menu	;wreg free
  2669                           
  2670                           ;main.c: 239: }
  2671  00231E  0012               	return	
  2672  002320                     l2782:
  2673                           
  2674                           ;main.c: 240: else{
  2675                           ;main.c: 241: activity_pin();
  2676  002320  ECA2  F010         	call	_activity_pin	;wreg free
  2677  002324  0012               	return	
  2678  002326  0012               	return		;funcret
  2679  002328                     __end_of_pin_input_validator:
  2680                           	opt stack 0
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           prodl	equ	0xFF3
  2686                           intcon	equ	0xFF2
  2687                           postinc0	equ	0xFEE
  2688                           wreg	equ	0xFE8
  2689                           indf1	equ	0xFE7
  2690                           postdec1	equ	0xFE5
  2691                           fsr1h	equ	0xFE2
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _strcmp *****************
  2699 ;; Defined at:
  2700 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  2703 ;;		 -> pin(5), 
  2704 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  2705 ;;		 -> pin_input(5), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  r               1    5[COMRAM] char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  2    0[COMRAM] int 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;Total ram usage:        6 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_pin_input_validator
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text12
  2731  0020F6                     __ptext12:
  2732                           	opt stack 0
  2733  0020F6                     _strcmp:
  2734                           	opt stack 27
  2735                           
  2736                           ;incstack = 0
  2737  0020F6  D005               	goto	l2382
  2738  0020F8                     l2380:
  2739  0020F8  4A28               	infsnz	strcmp@s1,f,c
  2740  0020FA  2A29               	incf	strcmp@s1+1,f,c
  2741  0020FC  4A2A               	infsnz	strcmp@s2,f,c
  2742  0020FE  2A2B               	incf	strcmp@s2+1,f,c
  2743  002100  D000               	goto	l2382
  2744  002102                     l2382:
  2745  002102  C028  FFD9         	movff	strcmp@s1,fsr2l
  2746  002106  C029  FFDA         	movff	strcmp@s1+1,fsr2h
  2747  00210A  50DF               	movf	indf2,w,c
  2748  00210C  6E2C               	movwf	??_strcmp& (0+255),c
  2749  00210E  C02A  FFD9         	movff	strcmp@s2,fsr2l
  2750  002112  C02B  FFDA         	movff	strcmp@s2+1,fsr2h
  2751  002116  50DF               	movf	indf2,w,c
  2752  002118  0800               	sublw	0
  2753  00211A  242C               	addwf	??_strcmp,w,c
  2754  00211C  6E2D               	movwf	strcmp@r,c
  2755  00211E  502D               	movf	strcmp@r,w,c
  2756  002120  A4D8               	btfss	status,2,c
  2757  002122  D009               	goto	l2386
  2758  002124  C028  FFD9         	movff	strcmp@s1,fsr2l
  2759  002128  C029  FFDA         	movff	strcmp@s1+1,fsr2h
  2760  00212C  50DF               	movf	indf2,w,c
  2761  00212E  B4D8               	btfsc	status,2,c
  2762  002130  D002               	goto	l2386
  2763  002132  D7E2               	goto	l2380
  2764  002134  D000               	goto	l2386
  2765  002136                     l2386:
  2766  002136  502D               	movf	strcmp@r,w,c
  2767  002138  6E28               	movwf	?_strcmp,c
  2768  00213A  6A29               	clrf	?_strcmp+1,c
  2769  00213C  BE28               	btfsc	?_strcmp,7,c
  2770  00213E  0629               	decf	?_strcmp+1,f,c
  2771  002140  0012               	return	
  2772  002142  0012               	return		;funcret
  2773  002144                     __end_of_strcmp:
  2774                           	opt stack 0
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           prodl	equ	0xFF3
  2780                           intcon	equ	0xFF2
  2781                           postinc0	equ	0xFEE
  2782                           wreg	equ	0xFE8
  2783                           indf1	equ	0xFE7
  2784                           postdec1	equ	0xFE5
  2785                           fsr1h	equ	0xFE2
  2786                           fsr1l	equ	0xFE1
  2787                           indf2	equ	0xFDF
  2788                           fsr2h	equ	0xFDA
  2789                           fsr2l	equ	0xFD9
  2790                           status	equ	0xFD8
  2791                           
  2792 ;; *************** function _button_asterisk *****************
  2793 ;; Defined at:
  2794 ;;		line 317 in file "main.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;		None               void
  2801 ;; Registers used:
  2802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    5
  2815 ;; This function calls:
  2816 ;;		_lcd_putrs
  2817 ;;		_reset_home_callback
  2818 ;; This function is called by:
  2819 ;;		_keyboard_control
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text13
  2824  0024C8                     __ptext13:
  2825                           	opt stack 0
  2826  0024C8                     _button_asterisk:
  2827                           	opt stack 24
  2828                           
  2829                           ;main.c: 319: reset_home_callback();
  2830                           
  2831                           ;incstack = 0
  2832  0024C8  EC90  F012         	call	_reset_home_callback	;wreg free
  2833                           
  2834                           ;main.c: 321: lcd_putrs("*");
  2835  0024CC  0E92               	movlw	low STR_35
  2836  0024CE  6E30               	movwf	lcd_putrs@ptr,c
  2837  0024D0  0E0F               	movlw	high STR_35
  2838  0024D2  6E31               	movwf	lcd_putrs@ptr+1,c
  2839  0024D4  EC51  F010         	call	_lcd_putrs	;wreg free
  2840  0024D8  0012               	return		;funcret
  2841  0024DA                     __end_of_button_asterisk:
  2842                           	opt stack 0
  2843                           tblptru	equ	0xFF8
  2844                           tblptrh	equ	0xFF7
  2845                           tblptrl	equ	0xFF6
  2846                           tablat	equ	0xFF5
  2847                           prodl	equ	0xFF3
  2848                           intcon	equ	0xFF2
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           indf1	equ	0xFE7
  2852                           postdec1	equ	0xFE5
  2853                           fsr1h	equ	0xFE2
  2854                           fsr1l	equ	0xFE1
  2855                           indf2	equ	0xFDF
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function _button_D *****************
  2861 ;; Defined at:
  2862 ;;		line 308 in file "main.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;		None               void
  2869 ;; Registers used:
  2870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    7
  2883 ;; This function calls:
  2884 ;;		_activity_home
  2885 ;;		_reset_home_callback
  2886 ;; This function is called by:
  2887 ;;		_keyboard_control
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text14
  2892  002516                     __ptext14:
  2893                           	opt stack 0
  2894  002516                     _button_D:
  2895                           	opt stack 22
  2896                           
  2897                           ;main.c: 310: reset_home_callback();
  2898                           
  2899                           ;incstack = 0
  2900  002516  EC90  F012         	call	_reset_home_callback	;wreg free
  2901                           
  2902                           ;main.c: 312: activity_home();
  2903  00251A  ECC6  F011         	call	_activity_home	;wreg free
  2904  00251E  0012               	return		;funcret
  2905  002520                     __end_of_button_D:
  2906                           	opt stack 0
  2907                           tblptru	equ	0xFF8
  2908                           tblptrh	equ	0xFF7
  2909                           tblptrl	equ	0xFF6
  2910                           tablat	equ	0xFF5
  2911                           prodl	equ	0xFF3
  2912                           intcon	equ	0xFF2
  2913                           postinc0	equ	0xFEE
  2914                           wreg	equ	0xFE8
  2915                           indf1	equ	0xFE7
  2916                           postdec1	equ	0xFE5
  2917                           fsr1h	equ	0xFE2
  2918                           fsr1l	equ	0xFE1
  2919                           indf2	equ	0xFDF
  2920                           fsr2h	equ	0xFDA
  2921                           fsr2l	equ	0xFD9
  2922                           status	equ	0xFD8
  2923                           
  2924 ;; *************** function _button_C *****************
  2925 ;; Defined at:
  2926 ;;		line 298 in file "main.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    7
  2947 ;; This function calls:
  2948 ;;		_activity_menu
  2949 ;;		_reset_home_callback
  2950 ;; This function is called by:
  2951 ;;		_keyboard_control
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text15
  2956  00246E                     __ptext15:
  2957                           	opt stack 0
  2958  00246E                     _button_C:
  2959                           	opt stack 22
  2960                           
  2961                           ;main.c: 300: reset_home_callback();
  2962                           
  2963                           ;incstack = 0
  2964  00246E  EC90  F012         	call	_reset_home_callback	;wreg free
  2965                           
  2966                           ;main.c: 302: if(activity != 0 && activity != 1){
  2967  002472  5003               	movf	_activity,w,c
  2968  002474  1004               	iorwf	_activity+1,w,c
  2969  002476  B4D8               	btfsc	status,2,c
  2970  002478  0012               	return	
  2971  00247A  0403               	decf	_activity,w,c
  2972  00247C  1004               	iorwf	_activity+1,w,c
  2973  00247E  B4D8               	btfsc	status,2,c
  2974  002480  0012               	return	
  2975                           
  2976                           ;main.c: 303: activity_menu();
  2977  002482  EC0C  F00E         	call	_activity_menu	;wreg free
  2978  002486  0012               	return	
  2979  002488  0012               	return		;funcret
  2980  00248A                     __end_of_button_C:
  2981                           	opt stack 0
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           prodl	equ	0xFF3
  2987                           intcon	equ	0xFF2
  2988                           postinc0	equ	0xFEE
  2989                           wreg	equ	0xFE8
  2990                           indf1	equ	0xFE7
  2991                           postdec1	equ	0xFE5
  2992                           fsr1h	equ	0xFE2
  2993                           fsr1l	equ	0xFE1
  2994                           indf2	equ	0xFDF
  2995                           fsr2h	equ	0xFDA
  2996                           fsr2l	equ	0xFD9
  2997                           status	equ	0xFD8
  2998                           
  2999 ;; *************** function _activity_menu *****************
  3000 ;; Defined at:
  3001 ;;		line 127 in file "main.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;		None               void
  3008 ;; Registers used:
  3009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3019 ;;Total ram usage:        0 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    6
  3022 ;; This function calls:
  3023 ;;		_lcd_init
  3024 ;;		_lcd_write
  3025 ;; This function is called by:
  3026 ;;		_pin_input_validator
  3027 ;;		_button_C
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text16
  3032  001C18                     __ptext16:
  3033                           	opt stack 0
  3034  001C18                     _activity_menu:
  3035                           	opt stack 21
  3036                           
  3037                           ;main.c: 129: activity = 2;
  3038                           
  3039                           ;incstack = 0
  3040  001C18  0E00               	movlw	0
  3041  001C1A  6E04               	movwf	_activity+1,c
  3042  001C1C  0E02               	movlw	2
  3043  001C1E  6E03               	movwf	_activity,c
  3044                           
  3045                           ;main.c: 130: lcd_init();
  3046  001C20  ECCC  F00D         	call	_lcd_init	;wreg free
  3047                           
  3048                           ;main.c: 131: lcd_write(2,1,"Activar");
  3049  001C24  0E00               	movlw	0
  3050  001C26  6E33               	movwf	lcd_write@column+1,c
  3051  001C28  0E02               	movlw	2
  3052  001C2A  6E32               	movwf	lcd_write@column,c
  3053  001C2C  0E00               	movlw	0
  3054  001C2E  6E35               	movwf	lcd_write@row+1,c
  3055  001C30  0E01               	movlw	1
  3056  001C32  6E34               	movwf	lcd_write@row,c
  3057  001C34  0E4D               	movlw	low STR_7
  3058  001C36  6E36               	movwf	lcd_write@string,c
  3059  001C38  0E0F               	movlw	high STR_7
  3060  001C3A  6E37               	movwf	lcd_write@string+1,c
  3061  001C3C  EC45  F012         	call	_lcd_write	;wreg free
  3062                           
  3063                           ;main.c: 132: lcd_write(2,2,"Reloj");
  3064  001C40  0E00               	movlw	0
  3065  001C42  6E33               	movwf	lcd_write@column+1,c
  3066  001C44  0E02               	movlw	2
  3067  001C46  6E32               	movwf	lcd_write@column,c
  3068  001C48  0E00               	movlw	0
  3069  001C4A  6E35               	movwf	lcd_write@row+1,c
  3070  001C4C  0E02               	movlw	2
  3071  001C4E  6E34               	movwf	lcd_write@row,c
  3072  001C50  0E62               	movlw	low STR_8
  3073  001C52  6E36               	movwf	lcd_write@string,c
  3074  001C54  0E0F               	movlw	high STR_8
  3075  001C56  6E37               	movwf	lcd_write@string+1,c
  3076  001C58  EC45  F012         	call	_lcd_write	;wreg free
  3077                           
  3078                           ;main.c: 133: lcd_write(10,1,"Pin");
  3079  001C5C  0E00               	movlw	0
  3080  001C5E  6E33               	movwf	lcd_write@column+1,c
  3081  001C60  0E0A               	movlw	10
  3082  001C62  6E32               	movwf	lcd_write@column,c
  3083  001C64  0E00               	movlw	0
  3084  001C66  6E35               	movwf	lcd_write@row+1,c
  3085  001C68  0E01               	movlw	1
  3086  001C6A  6E34               	movwf	lcd_write@row,c
  3087  001C6C  0E86               	movlw	low STR_9
  3088  001C6E  6E36               	movwf	lcd_write@string,c
  3089  001C70  0E0F               	movlw	high STR_9
  3090  001C72  6E37               	movwf	lcd_write@string+1,c
  3091  001C74  EC45  F012         	call	_lcd_write	;wreg free
  3092                           
  3093                           ;main.c: 134: lcd_write(10,2,"Alarma");
  3094  001C78  0E00               	movlw	0
  3095  001C7A  6E33               	movwf	lcd_write@column+1,c
  3096  001C7C  0E0A               	movlw	10
  3097  001C7E  6E32               	movwf	lcd_write@column,c
  3098  001C80  0E00               	movlw	0
  3099  001C82  6E35               	movwf	lcd_write@row+1,c
  3100  001C84  0E02               	movlw	2
  3101  001C86  6E34               	movwf	lcd_write@row,c
  3102  001C88  0E55               	movlw	low STR_10
  3103  001C8A  6E36               	movwf	lcd_write@string,c
  3104  001C8C  0E0F               	movlw	high STR_10
  3105  001C8E  6E37               	movwf	lcd_write@string+1,c
  3106  001C90  EC45  F012         	call	_lcd_write	;wreg free
  3107  001C94  0012               	return		;funcret
  3108  001C96                     __end_of_activity_menu:
  3109                           	opt stack 0
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodl	equ	0xFF3
  3115                           intcon	equ	0xFF2
  3116                           postinc0	equ	0xFEE
  3117                           wreg	equ	0xFE8
  3118                           indf1	equ	0xFE7
  3119                           postdec1	equ	0xFE5
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _button_B *****************
  3128 ;; Defined at:
  3129 ;;		line 269 in file "main.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;		None               void
  3136 ;; Registers used:
  3137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;Total ram usage:        2 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    7
  3150 ;; This function calls:
  3151 ;;		_activity_submenu_activation
  3152 ;;		_activity_submenu_alarm
  3153 ;;		_activity_submenu_clock
  3154 ;;		_activity_submenu_pin
  3155 ;;		_reset_home_callback
  3156 ;; This function is called by:
  3157 ;;		_keyboard_control
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text17
  3162  00204C                     __ptext17:
  3163                           	opt stack 0
  3164  00204C                     _button_B:
  3165                           	opt stack 22
  3166                           
  3167                           ;main.c: 271: reset_home_callback();
  3168                           
  3169                           ;incstack = 0
  3170  00204C  EC90  F012         	call	_reset_home_callback	;wreg free
  3171                           
  3172                           ;main.c: 273: if(activity == 2){
  3173  002050  0E02               	movlw	2
  3174  002052  1803               	xorwf	_activity,w,c
  3175  002054  1004               	iorwf	_activity+1,w,c
  3176  002056  A4D8               	btfss	status,2,c
  3177  002058  0012               	return	
  3178                           
  3179                           ;main.c: 275: switch(menu_selected){
  3180  00205A  D00C               	goto	l2978
  3181  00205C                     l2968:
  3182                           
  3183                           ;main.c: 278: activity_submenu_activation();
  3184  00205C  ECC7  F00F         	call	_activity_submenu_activation	;wreg free
  3185                           
  3186                           ;main.c: 279: break;
  3187  002060  0012               	return	
  3188  002062                     l2970:
  3189                           
  3190                           ;main.c: 282: activity_submenu_clock();
  3191  002062  EC65  F00F         	call	_activity_submenu_clock	;wreg free
  3192                           
  3193                           ;main.c: 283: break;
  3194  002066  0012               	return	
  3195  002068                     l2972:
  3196                           
  3197                           ;main.c: 286: activity_submenu_pin();
  3198  002068  EC34  F00F         	call	_activity_submenu_pin	;wreg free
  3199                           
  3200                           ;main.c: 287: break;
  3201  00206C  0012               	return	
  3202  00206E                     l2974:
  3203                           
  3204                           ;main.c: 290: activity_submenu_alarm();
  3205  00206E  EC96  F00F         	call	_activity_submenu_alarm	;wreg free
  3206                           
  3207                           ;main.c: 292: }
  3208                           
  3209                           ;main.c: 291: break;
  3210  002072  0012               	return	
  3211  002074                     l2978:
  3212  002074  C013  F038         	movff	_menu_selected,??_button_B
  3213  002078  C014  F039         	movff	_menu_selected+1,??_button_B+1
  3214                           
  3215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3216                           ; Switch size 1, requested type "space"
  3217                           ; Number of cases is 1, Range of values is 0 to 0
  3218                           ; switch strategies available:
  3219                           ; Name         Instructions Cycles
  3220                           ; simple_byte            4     3 (average)
  3221                           ;	Chosen strategy is simple_byte
  3222  00207C  5039               	movf	??_button_B+1,w,c
  3223  00207E  0A00               	xorlw	0	; case 0
  3224  002080  A4D8               	btfss	status,2,c
  3225  002082  0012               	return	
  3226                           
  3227                           ; Switch size 1, requested type "space"
  3228                           ; Number of cases is 4, Range of values is 1 to 4
  3229                           ; switch strategies available:
  3230                           ; Name         Instructions Cycles
  3231                           ; simple_byte           13     7 (average)
  3232                           ;	Chosen strategy is simple_byte
  3233  002084  5038               	movf	??_button_B,w,c
  3234  002086  0A01               	xorlw	1	; case 1
  3235  002088  B4D8               	btfsc	status,2,c
  3236  00208A  D7E8               	goto	l2968
  3237  00208C  0A03               	xorlw	3	; case 2
  3238  00208E  B4D8               	btfsc	status,2,c
  3239  002090  D7E8               	goto	l2970
  3240  002092  0A01               	xorlw	1	; case 3
  3241  002094  B4D8               	btfsc	status,2,c
  3242  002096  D7E8               	goto	l2972
  3243  002098  0A07               	xorlw	7	; case 4
  3244  00209A  B4D8               	btfsc	status,2,c
  3245  00209C  D7E8               	goto	l2974
  3246  00209E  0012               	return	
  3247  0020A0  0012               	return		;funcret
  3248  0020A2                     __end_of_button_B:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           prodl	equ	0xFF3
  3255                           intcon	equ	0xFF2
  3256                           postinc0	equ	0xFEE
  3257                           wreg	equ	0xFE8
  3258                           indf1	equ	0xFE7
  3259                           postdec1	equ	0xFE5
  3260                           fsr1h	equ	0xFE2
  3261                           fsr1l	equ	0xFE1
  3262                           indf2	equ	0xFDF
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _activity_submenu_pin *****************
  3268 ;; Defined at:
  3269 ;;		line 213 in file "main.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;Total ram usage:        0 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    6
  3290 ;; This function calls:
  3291 ;;		_lcd_init
  3292 ;;		_lcd_write
  3293 ;; This function is called by:
  3294 ;;		_button_B
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text18
  3299  001E68                     __ptext18:
  3300                           	opt stack 0
  3301  001E68                     _activity_submenu_pin:
  3302                           	opt stack 22
  3303                           
  3304                           ;main.c: 215: activity = 5;
  3305                           
  3306                           ;incstack = 0
  3307  001E68  0E00               	movlw	0
  3308  001E6A  6E04               	movwf	_activity+1,c
  3309  001E6C  0E05               	movlw	5
  3310  001E6E  6E03               	movwf	_activity,c
  3311                           
  3312                           ;main.c: 216: lcd_init();
  3313  001E70  ECCC  F00D         	call	_lcd_init	;wreg free
  3314                           
  3315                           ;main.c: 217: lcd_write(1,1,"Pin");
  3316  001E74  0E00               	movlw	0
  3317  001E76  6E33               	movwf	lcd_write@column+1,c
  3318  001E78  0E01               	movlw	1
  3319  001E7A  6E32               	movwf	lcd_write@column,c
  3320  001E7C  0E00               	movlw	0
  3321  001E7E  6E35               	movwf	lcd_write@row+1,c
  3322  001E80  0E01               	movlw	1
  3323  001E82  6E34               	movwf	lcd_write@row,c
  3324  001E84  0E86               	movlw	low STR_9
  3325  001E86  6E36               	movwf	lcd_write@string,c
  3326  001E88  0E0F               	movlw	high STR_9
  3327  001E8A  6E37               	movwf	lcd_write@string+1,c
  3328  001E8C  EC45  F012         	call	_lcd_write	;wreg free
  3329                           
  3330                           ;main.c: 218: lcd_write(10,1,"Cambiar");
  3331  001E90  0E00               	movlw	0
  3332  001E92  6E33               	movwf	lcd_write@column+1,c
  3333  001E94  0E0A               	movlw	10
  3334  001E96  6E32               	movwf	lcd_write@column,c
  3335  001E98  0E00               	movlw	0
  3336  001E9A  6E35               	movwf	lcd_write@row+1,c
  3337  001E9C  0E01               	movlw	1
  3338  001E9E  6E34               	movwf	lcd_write@row,c
  3339  001EA0  0E45               	movlw	low STR_30
  3340  001EA2  6E36               	movwf	lcd_write@string,c
  3341  001EA4  0E0F               	movlw	high STR_30
  3342  001EA6  6E37               	movwf	lcd_write@string+1,c
  3343  001EA8  EC45  F012         	call	_lcd_write	;wreg free
  3344                           
  3345                           ;main.c: 219: lcd_write(10,2,"Reset");
  3346  001EAC  0E00               	movlw	0
  3347  001EAE  6E33               	movwf	lcd_write@column+1,c
  3348  001EB0  0E0A               	movlw	10
  3349  001EB2  6E32               	movwf	lcd_write@column,c
  3350  001EB4  0E00               	movlw	0
  3351  001EB6  6E35               	movwf	lcd_write@row+1,c
  3352  001EB8  0E02               	movlw	2
  3353  001EBA  6E34               	movwf	lcd_write@row,c
  3354  001EBC  0E68               	movlw	low STR_31
  3355  001EBE  6E36               	movwf	lcd_write@string,c
  3356  001EC0  0E0F               	movlw	high STR_31
  3357  001EC2  6E37               	movwf	lcd_write@string+1,c
  3358  001EC4  EC45  F012         	call	_lcd_write	;wreg free
  3359  001EC8  0012               	return		;funcret
  3360  001ECA                     __end_of_activity_submenu_pin:
  3361                           	opt stack 0
  3362                           tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           prodl	equ	0xFF3
  3367                           intcon	equ	0xFF2
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           indf1	equ	0xFE7
  3371                           postdec1	equ	0xFE5
  3372                           fsr1h	equ	0xFE2
  3373                           fsr1l	equ	0xFE1
  3374                           indf2	equ	0xFDF
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8
  3378                           
  3379 ;; *************** function _activity_submenu_clock *****************
  3380 ;; Defined at:
  3381 ;;		line 203 in file "main.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;		None               void
  3388 ;; Registers used:
  3389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    6
  3402 ;; This function calls:
  3403 ;;		_lcd_init
  3404 ;;		_lcd_write
  3405 ;; This function is called by:
  3406 ;;		_button_B
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text19
  3411  001ECA                     __ptext19:
  3412                           	opt stack 0
  3413  001ECA                     _activity_submenu_clock:
  3414                           	opt stack 22
  3415                           
  3416                           ;main.c: 205: activity = 3;
  3417                           
  3418                           ;incstack = 0
  3419  001ECA  0E00               	movlw	0
  3420  001ECC  6E04               	movwf	_activity+1,c
  3421  001ECE  0E03               	movlw	3
  3422  001ED0  6E03               	movwf	_activity,c
  3423                           
  3424                           ;main.c: 206: lcd_init();
  3425  001ED2  ECCC  F00D         	call	_lcd_init	;wreg free
  3426                           
  3427                           ;main.c: 207: lcd_write(1,1,"Reloj");
  3428  001ED6  0E00               	movlw	0
  3429  001ED8  6E33               	movwf	lcd_write@column+1,c
  3430  001EDA  0E01               	movlw	1
  3431  001EDC  6E32               	movwf	lcd_write@column,c
  3432  001EDE  0E00               	movlw	0
  3433  001EE0  6E35               	movwf	lcd_write@row+1,c
  3434  001EE2  0E01               	movlw	1
  3435  001EE4  6E34               	movwf	lcd_write@row,c
  3436  001EE6  0E62               	movlw	low STR_8
  3437  001EE8  6E36               	movwf	lcd_write@string,c
  3438  001EEA  0E0F               	movlw	high STR_8
  3439  001EEC  6E37               	movwf	lcd_write@string+1,c
  3440  001EEE  EC45  F012         	call	_lcd_write	;wreg free
  3441                           
  3442                           ;main.c: 208: lcd_write(10,1,"Fecha");
  3443  001EF2  0E00               	movlw	0
  3444  001EF4  6E33               	movwf	lcd_write@column+1,c
  3445  001EF6  0E0A               	movlw	10
  3446  001EF8  6E32               	movwf	lcd_write@column,c
  3447  001EFA  0E00               	movlw	0
  3448  001EFC  6E35               	movwf	lcd_write@row+1,c
  3449  001EFE  0E01               	movlw	1
  3450  001F00  6E34               	movwf	lcd_write@row,c
  3451  001F02  0E5C               	movlw	low STR_27
  3452  001F04  6E36               	movwf	lcd_write@string,c
  3453  001F06  0E0F               	movlw	high STR_27
  3454  001F08  6E37               	movwf	lcd_write@string+1,c
  3455  001F0A  EC45  F012         	call	_lcd_write	;wreg free
  3456                           
  3457                           ;main.c: 209: lcd_write(10,2,"Hora");
  3458  001F0E  0E00               	movlw	0
  3459  001F10  6E33               	movwf	lcd_write@column+1,c
  3460  001F12  0E0A               	movlw	10
  3461  001F14  6E32               	movwf	lcd_write@column,c
  3462  001F16  0E00               	movlw	0
  3463  001F18  6E35               	movwf	lcd_write@row+1,c
  3464  001F1A  0E02               	movlw	2
  3465  001F1C  6E34               	movwf	lcd_write@row,c
  3466  001F1E  0E73               	movlw	low STR_28
  3467  001F20  6E36               	movwf	lcd_write@string,c
  3468  001F22  0E0F               	movlw	high STR_28
  3469  001F24  6E37               	movwf	lcd_write@string+1,c
  3470  001F26  EC45  F012         	call	_lcd_write	;wreg free
  3471  001F2A  0012               	return		;funcret
  3472  001F2C                     __end_of_activity_submenu_clock:
  3473                           	opt stack 0
  3474                           tblptru	equ	0xFF8
  3475                           tblptrh	equ	0xFF7
  3476                           tblptrl	equ	0xFF6
  3477                           tablat	equ	0xFF5
  3478                           prodl	equ	0xFF3
  3479                           intcon	equ	0xFF2
  3480                           postinc0	equ	0xFEE
  3481                           wreg	equ	0xFE8
  3482                           indf1	equ	0xFE7
  3483                           postdec1	equ	0xFE5
  3484                           fsr1h	equ	0xFE2
  3485                           fsr1l	equ	0xFE1
  3486                           indf2	equ	0xFDF
  3487                           fsr2h	equ	0xFDA
  3488                           fsr2l	equ	0xFD9
  3489                           status	equ	0xFD8
  3490                           
  3491 ;; *************** function _activity_submenu_alarm *****************
  3492 ;; Defined at:
  3493 ;;		line 223 in file "main.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    6
  3514 ;; This function calls:
  3515 ;;		_lcd_init
  3516 ;;		_lcd_write
  3517 ;; This function is called by:
  3518 ;;		_button_B
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text20
  3523  001F2C                     __ptext20:
  3524                           	opt stack 0
  3525  001F2C                     _activity_submenu_alarm:
  3526                           	opt stack 22
  3527                           
  3528                           ;main.c: 225: activity = 6;
  3529                           
  3530                           ;incstack = 0
  3531  001F2C  0E00               	movlw	0
  3532  001F2E  6E04               	movwf	_activity+1,c
  3533  001F30  0E06               	movlw	6
  3534  001F32  6E03               	movwf	_activity,c
  3535                           
  3536                           ;main.c: 226: lcd_init();
  3537  001F34  ECCC  F00D         	call	_lcd_init	;wreg free
  3538                           
  3539                           ;main.c: 227: lcd_write(1,1,"Alarma");
  3540  001F38  0E00               	movlw	0
  3541  001F3A  6E33               	movwf	lcd_write@column+1,c
  3542  001F3C  0E01               	movlw	1
  3543  001F3E  6E32               	movwf	lcd_write@column,c
  3544  001F40  0E00               	movlw	0
  3545  001F42  6E35               	movwf	lcd_write@row+1,c
  3546  001F44  0E01               	movlw	1
  3547  001F46  6E34               	movwf	lcd_write@row,c
  3548  001F48  0E55               	movlw	low STR_10
  3549  001F4A  6E36               	movwf	lcd_write@string,c
  3550  001F4C  0E0F               	movlw	high STR_10
  3551  001F4E  6E37               	movwf	lcd_write@string+1,c
  3552  001F50  EC45  F012         	call	_lcd_write	;wreg free
  3553                           
  3554                           ;main.c: 228: lcd_write(10,1,"Volumen");
  3555  001F54  0E00               	movlw	0
  3556  001F56  6E33               	movwf	lcd_write@column+1,c
  3557  001F58  0E0A               	movlw	10
  3558  001F5A  6E32               	movwf	lcd_write@column,c
  3559  001F5C  0E00               	movlw	0
  3560  001F5E  6E35               	movwf	lcd_write@row+1,c
  3561  001F60  0E01               	movlw	1
  3562  001F62  6E34               	movwf	lcd_write@row,c
  3563  001F64  0E3D               	movlw	low STR_33
  3564  001F66  6E36               	movwf	lcd_write@string,c
  3565  001F68  0E0F               	movlw	high STR_33
  3566  001F6A  6E37               	movwf	lcd_write@string+1,c
  3567  001F6C  EC45  F012         	call	_lcd_write	;wreg free
  3568                           
  3569                           ;main.c: 229: lcd_write(10,2,"Tono");
  3570  001F70  0E00               	movlw	0
  3571  001F72  6E33               	movwf	lcd_write@column+1,c
  3572  001F74  0E0A               	movlw	10
  3573  001F76  6E32               	movwf	lcd_write@column,c
  3574  001F78  0E00               	movlw	0
  3575  001F7A  6E35               	movwf	lcd_write@row+1,c
  3576  001F7C  0E02               	movlw	2
  3577  001F7E  6E34               	movwf	lcd_write@row,c
  3578  001F80  0E78               	movlw	low STR_34
  3579  001F82  6E36               	movwf	lcd_write@string,c
  3580  001F84  0E0F               	movlw	high STR_34
  3581  001F86  6E37               	movwf	lcd_write@string+1,c
  3582  001F88  EC45  F012         	call	_lcd_write	;wreg free
  3583  001F8C  0012               	return		;funcret
  3584  001F8E                     __end_of_activity_submenu_alarm:
  3585                           	opt stack 0
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           indf1	equ	0xFE7
  3595                           postdec1	equ	0xFE5
  3596                           fsr1h	equ	0xFE2
  3597                           fsr1l	equ	0xFE1
  3598                           indf2	equ	0xFDF
  3599                           fsr2h	equ	0xFDA
  3600                           fsr2l	equ	0xFD9
  3601                           status	equ	0xFD8
  3602                           
  3603 ;; *************** function _activity_submenu_activation *****************
  3604 ;; Defined at:
  3605 ;;		line 193 in file "main.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    6
  3626 ;; This function calls:
  3627 ;;		_lcd_init
  3628 ;;		_lcd_write
  3629 ;; This function is called by:
  3630 ;;		_button_B
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text21
  3635  001F8E                     __ptext21:
  3636                           	opt stack 0
  3637  001F8E                     _activity_submenu_activation:
  3638                           	opt stack 22
  3639                           
  3640                           ;main.c: 195: activity = 4;
  3641                           
  3642                           ;incstack = 0
  3643  001F8E  0E00               	movlw	0
  3644  001F90  6E04               	movwf	_activity+1,c
  3645  001F92  0E04               	movlw	4
  3646  001F94  6E03               	movwf	_activity,c
  3647                           
  3648                           ;main.c: 196: lcd_init();
  3649  001F96  ECCC  F00D         	call	_lcd_init	;wreg free
  3650                           
  3651                           ;main.c: 197: lcd_write(1,1,"Activar");
  3652  001F9A  0E00               	movlw	0
  3653  001F9C  6E33               	movwf	lcd_write@column+1,c
  3654  001F9E  0E01               	movlw	1
  3655  001FA0  6E32               	movwf	lcd_write@column,c
  3656  001FA2  0E00               	movlw	0
  3657  001FA4  6E35               	movwf	lcd_write@row+1,c
  3658  001FA6  0E01               	movlw	1
  3659  001FA8  6E34               	movwf	lcd_write@row,c
  3660  001FAA  0E4D               	movlw	low STR_7
  3661  001FAC  6E36               	movwf	lcd_write@string,c
  3662  001FAE  0E0F               	movlw	high STR_7
  3663  001FB0  6E37               	movwf	lcd_write@string+1,c
  3664  001FB2  EC45  F012         	call	_lcd_write	;wreg free
  3665                           
  3666                           ;main.c: 198: lcd_write(10,1,"SI");
  3667  001FB6  0E00               	movlw	0
  3668  001FB8  6E33               	movwf	lcd_write@column+1,c
  3669  001FBA  0E0A               	movlw	10
  3670  001FBC  6E32               	movwf	lcd_write@column,c
  3671  001FBE  0E00               	movlw	0
  3672  001FC0  6E35               	movwf	lcd_write@row+1,c
  3673  001FC2  0E01               	movlw	1
  3674  001FC4  6E34               	movwf	lcd_write@row,c
  3675  001FC6  0E8A               	movlw	low STR_24
  3676  001FC8  6E36               	movwf	lcd_write@string,c
  3677  001FCA  0E0F               	movlw	high STR_24
  3678  001FCC  6E37               	movwf	lcd_write@string+1,c
  3679  001FCE  EC45  F012         	call	_lcd_write	;wreg free
  3680                           
  3681                           ;main.c: 199: lcd_write(10,2,"NO");
  3682  001FD2  0E00               	movlw	0
  3683  001FD4  6E33               	movwf	lcd_write@column+1,c
  3684  001FD6  0E0A               	movlw	10
  3685  001FD8  6E32               	movwf	lcd_write@column,c
  3686  001FDA  0E00               	movlw	0
  3687  001FDC  6E35               	movwf	lcd_write@row+1,c
  3688  001FDE  0E02               	movlw	2
  3689  001FE0  6E34               	movwf	lcd_write@row,c
  3690  001FE2  0E8D               	movlw	low STR_25
  3691  001FE4  6E36               	movwf	lcd_write@string,c
  3692  001FE6  0E0F               	movlw	high STR_25
  3693  001FE8  6E37               	movwf	lcd_write@string+1,c
  3694  001FEA  EC45  F012         	call	_lcd_write	;wreg free
  3695  001FEE  0012               	return		;funcret
  3696  001FF0                     __end_of_activity_submenu_activation:
  3697                           	opt stack 0
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodl	equ	0xFF3
  3703                           intcon	equ	0xFF2
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           indf1	equ	0xFE7
  3707                           postdec1	equ	0xFE5
  3708                           fsr1h	equ	0xFE2
  3709                           fsr1l	equ	0xFE1
  3710                           indf2	equ	0xFDF
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           
  3715 ;; *************** function _button_A *****************
  3716 ;; Defined at:
  3717 ;;		line 245 in file "main.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;		None               void
  3724 ;; Registers used:
  3725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3735 ;;Total ram usage:        2 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    7
  3738 ;; This function calls:
  3739 ;;		_action_menu_selector
  3740 ;;		_action_submenu_selector
  3741 ;;		_activity_pin
  3742 ;;		_reset_home_callback
  3743 ;; This function is called by:
  3744 ;;		_keyboard_control
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text22
  3749  0022B6                     __ptext22:
  3750                           	opt stack 0
  3751  0022B6                     _button_A:
  3752                           	opt stack 22
  3753                           
  3754                           ;main.c: 247: reset_home_callback();
  3755                           
  3756                           ;incstack = 0
  3757  0022B6  EC90  F012         	call	_reset_home_callback	;wreg free
  3758                           
  3759                           ;main.c: 249: switch(activity){
  3760  0022BA  D009               	goto	l2956
  3761  0022BC                     l2948:
  3762                           
  3763                           ;main.c: 252: activity_pin();
  3764  0022BC  ECA2  F010         	call	_activity_pin	;wreg free
  3765                           
  3766                           ;main.c: 256: break;
  3767                           
  3768                           ;main.c: 255: case 1:
  3769                           
  3770                           ;main.c: 253: break;
  3771  0022C0  0012               	return	
  3772  0022C2                     l2950:
  3773                           
  3774                           ;main.c: 259: action_menu_selector();
  3775  0022C2  ECFE  F008         	call	_action_menu_selector	;wreg free
  3776                           
  3777                           ;main.c: 260: break;
  3778  0022C6  0012               	return	
  3779  0022C8                     l2952:
  3780                           
  3781                           ;main.c: 263: action_submenu_selector();
  3782  0022C8  EC9D  F00C         	call	_action_submenu_selector	;wreg free
  3783                           
  3784                           ;main.c: 265: }
  3785                           
  3786                           ;main.c: 264: break;
  3787  0022CC  0012               	return	
  3788  0022CE                     l2956:
  3789  0022CE  C003  F03A         	movff	_activity,??_button_A
  3790  0022D2  C004  F03B         	movff	_activity+1,??_button_A+1
  3791                           
  3792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3793                           ; Switch size 1, requested type "space"
  3794                           ; Number of cases is 1, Range of values is 0 to 0
  3795                           ; switch strategies available:
  3796                           ; Name         Instructions Cycles
  3797                           ; simple_byte            4     3 (average)
  3798                           ;	Chosen strategy is simple_byte
  3799  0022D6  503B               	movf	??_button_A+1,w,c
  3800  0022D8  0A00               	xorlw	0	; case 0
  3801  0022DA  A4D8               	btfss	status,2,c
  3802  0022DC  D7F5               	goto	l2952
  3803                           
  3804                           ; Switch size 1, requested type "space"
  3805                           ; Number of cases is 3, Range of values is 0 to 2
  3806                           ; switch strategies available:
  3807                           ; Name         Instructions Cycles
  3808                           ; simple_byte           10     6 (average)
  3809                           ;	Chosen strategy is simple_byte
  3810  0022DE  503A               	movf	??_button_A,w,c
  3811  0022E0  0A00               	xorlw	0	; case 0
  3812  0022E2  B4D8               	btfsc	status,2,c
  3813  0022E4  D7EB               	goto	l2948
  3814  0022E6  0A01               	xorlw	1	; case 1
  3815  0022E8  B4D8               	btfsc	status,2,c
  3816  0022EA  0012               	return	
  3817  0022EC  0A03               	xorlw	3	; case 2
  3818  0022EE  B4D8               	btfsc	status,2,c
  3819  0022F0  D7E8               	goto	l2950
  3820  0022F2  D7EA               	goto	l2952
  3821  0022F4  0012               	return		;funcret
  3822  0022F6                     __end_of_button_A:
  3823                           	opt stack 0
  3824                           tblptru	equ	0xFF8
  3825                           tblptrh	equ	0xFF7
  3826                           tblptrl	equ	0xFF6
  3827                           tablat	equ	0xFF5
  3828                           prodl	equ	0xFF3
  3829                           intcon	equ	0xFF2
  3830                           postinc0	equ	0xFEE
  3831                           wreg	equ	0xFE8
  3832                           indf1	equ	0xFE7
  3833                           postdec1	equ	0xFE5
  3834                           fsr1h	equ	0xFE2
  3835                           fsr1l	equ	0xFE1
  3836                           indf2	equ	0xFDF
  3837                           fsr2h	equ	0xFDA
  3838                           fsr2l	equ	0xFD9
  3839                           status	equ	0xFD8
  3840                           
  3841 ;; *************** function _activity_pin *****************
  3842 ;; Defined at:
  3843 ;;		line 117 in file "main.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;		None               void
  3850 ;; Registers used:
  3851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3861 ;;Total ram usage:        0 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    6
  3864 ;; This function calls:
  3865 ;;		_lcd_comand
  3866 ;;		_lcd_gotoxy
  3867 ;;		_lcd_init
  3868 ;;		_lcd_write
  3869 ;;		_strcpy
  3870 ;; This function is called by:
  3871 ;;		_pin_input_validator
  3872 ;;		_button_A
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text23
  3877  002144                     __ptext23:
  3878                           	opt stack 0
  3879  002144                     _activity_pin:
  3880                           	opt stack 21
  3881                           
  3882                           ;main.c: 119: activity = 1;
  3883                           
  3884                           ;incstack = 0
  3885  002144  0E00               	movlw	0
  3886  002146  6E04               	movwf	_activity+1,c
  3887  002148  0E01               	movlw	1
  3888  00214A  6E03               	movwf	_activity,c
  3889                           
  3890                           ;main.c: 120: strcpy(pin_input, "");
  3891  00214C  0E95               	movlw	low _pin_input
  3892  00214E  6E28               	movwf	strcpy@to,c
  3893  002150  0E00               	movlw	high _pin_input
  3894  002152  6E29               	movwf	strcpy@to+1,c
  3895  002154  0E91               	movlw	low (STR_12+1)
  3896  002156  6E2A               	movwf	strcpy@from,c
  3897  002158  0E0F               	movlw	high (STR_12+1)
  3898  00215A  6E2B               	movwf	strcpy@from+1,c
  3899  00215C  EC94  F011         	call	_strcpy	;wreg free
  3900                           
  3901                           ;main.c: 121: lcd_init();
  3902  002160  ECCC  F00D         	call	_lcd_init	;wreg free
  3903                           
  3904                           ;main.c: 122: lcd_write(1,1,"Ingrese su PIN:");
  3905  002164  0E00               	movlw	0
  3906  002166  6E33               	movwf	lcd_write@column+1,c
  3907  002168  0E01               	movlw	1
  3908  00216A  6E32               	movwf	lcd_write@column,c
  3909  00216C  0E00               	movlw	0
  3910  00216E  6E35               	movwf	lcd_write@row+1,c
  3911  002170  0E01               	movlw	1
  3912  002172  6E34               	movwf	lcd_write@row,c
  3913  002174  0E0F               	movlw	low STR_6
  3914  002176  6E36               	movwf	lcd_write@string,c
  3915  002178  0E0F               	movlw	high STR_6
  3916  00217A  6E37               	movwf	lcd_write@string+1,c
  3917  00217C  EC45  F012         	call	_lcd_write	;wreg free
  3918                           
  3919                           ;main.c: 123: lcd_gotoxy(1,2);
  3920  002180  0E02               	movlw	2
  3921  002182  6E2C               	movwf	lcd_gotoxy@y,c
  3922  002184  0E01               	movlw	1
  3923  002186  EC03  F012         	call	_lcd_gotoxy
  3924                           
  3925                           ;main.c: 124: lcd_comand(0b00001111);
  3926  00218A  0E0F               	movlw	15
  3927  00218C  EC7F  F012         	call	_lcd_comand
  3928  002190  0012               	return		;funcret
  3929  002192                     __end_of_activity_pin:
  3930                           	opt stack 0
  3931                           tblptru	equ	0xFF8
  3932                           tblptrh	equ	0xFF7
  3933                           tblptrl	equ	0xFF6
  3934                           tablat	equ	0xFF5
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           indf1	equ	0xFE7
  3940                           postdec1	equ	0xFE5
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _strcpy *****************
  3949 ;; Defined at:
  3950 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  to              2    0[COMRAM] PTR unsigned char 
  3953 ;;		 -> pin_input(5), pin(5), 
  3954 ;;  from            2    2[COMRAM] PTR const unsigned char 
  3955 ;;		 -> STR_5(1), STR_1(5), 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  cp              2    4[COMRAM] PTR unsigned char 
  3958 ;;		 -> pin_input(5), pin(5), 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  2    0[COMRAM] PTR unsigned char 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;Total ram usage:        6 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_setup
  3978 ;;		_activity_pin
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text24
  3983  002328                     __ptext24:
  3984                           	opt stack 0
  3985  002328                     _strcpy:
  3986                           	opt stack 29
  3987                           
  3988                           ;incstack = 0
  3989  002328  C028  F02C         	movff	strcpy@to,strcpy@cp
  3990  00232C  C029  F02D         	movff	strcpy@to+1,strcpy@cp+1
  3991  002330  D005               	goto	l2344
  3992  002332                     l2342:
  3993  002332  4A2C               	infsnz	strcpy@cp,f,c
  3994  002334  2A2D               	incf	strcpy@cp+1,f,c
  3995  002336  4A2A               	infsnz	strcpy@from,f,c
  3996  002338  2A2B               	incf	strcpy@from+1,f,c
  3997  00233A  D000               	goto	l2344
  3998  00233C                     l2344:
  3999  00233C  C02A  FFF6         	movff	strcpy@from,tblptrl
  4000  002340  C02B  FFF7         	movff	strcpy@from+1,tblptrh
  4001  002344                     	if	0	;tblptru may be non-zero
  4002  002344                     	endif
  4003  002344                     	if	0	;tblptru may be non-zero
  4004  002344                     	endif
  4005  002344  C02C  FFD9         	movff	strcpy@cp,fsr2l
  4006  002348  C02D  FFDA         	movff	strcpy@cp+1,fsr2h
  4007  00234C  0008               	tblrd		*
  4008  00234E  CFF5 FFDF          	movff	tablat,indf2
  4009  002352  50DF               	movf	indf2,w,c
  4010  002354  A4D8               	btfss	status,2,c
  4011  002356  D7ED               	goto	l2342
  4012                           
  4013                           ;	Return value of _strcpy is never used
  4014  002358  0012               	return		;funcret
  4015  00235A                     __end_of_strcpy:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodl	equ	0xFF3
  4022                           intcon	equ	0xFF2
  4023                           postinc0	equ	0xFEE
  4024                           wreg	equ	0xFE8
  4025                           indf1	equ	0xFE7
  4026                           postdec1	equ	0xFE5
  4027                           fsr1h	equ	0xFE2
  4028                           fsr1l	equ	0xFE1
  4029                           indf2	equ	0xFDF
  4030                           fsr2h	equ	0xFDA
  4031                           fsr2l	equ	0xFD9
  4032                           status	equ	0xFD8
  4033                           
  4034 ;; *************** function _lcd_comand *****************
  4035 ;; Defined at:
  4036 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  d               1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  d               1    4[COMRAM] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;		None               void
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4054 ;;Total ram usage:        1 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    2
  4057 ;; This function calls:
  4058 ;;		_lcd_send_byte
  4059 ;; This function is called by:
  4060 ;;		_setup
  4061 ;;		_activity_pin
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text25
  4066  0024FE                     __ptext25:
  4067                           	opt stack 0
  4068  0024FE                     _lcd_comand:
  4069                           	opt stack 27
  4070                           
  4071                           ;incstack = 0
  4072                           ;lcd_comand@d stored from wreg
  4073  0024FE  6E2C               	movwf	lcd_comand@d,c
  4074                           
  4075                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  4076  002500  C02C  F02A         	movff	lcd_comand@d,lcd_send_byte@n
  4077  002504  0E00               	movlw	0
  4078  002506  ECAD  F011         	call	_lcd_send_byte
  4079  00250A  0012               	return		;funcret
  4080  00250C                     __end_of_lcd_comand:
  4081                           	opt stack 0
  4082                           tblptru	equ	0xFF8
  4083                           tblptrh	equ	0xFF7
  4084                           tblptrl	equ	0xFF6
  4085                           tablat	equ	0xFF5
  4086                           prodl	equ	0xFF3
  4087                           intcon	equ	0xFF2
  4088                           postinc0	equ	0xFEE
  4089                           wreg	equ	0xFE8
  4090                           indf1	equ	0xFE7
  4091                           postdec1	equ	0xFE5
  4092                           fsr1h	equ	0xFE2
  4093                           fsr1l	equ	0xFE1
  4094                           indf2	equ	0xFDF
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _action_submenu_selector *****************
  4100 ;; Defined at:
  4101 ;;		line 174 in file "main.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;		None
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;		None               void
  4108 ;; Registers used:
  4109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4119 ;;Total ram usage:        2 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    6
  4122 ;; This function calls:
  4123 ;;		_lcd_write
  4124 ;; This function is called by:
  4125 ;;		_button_A
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text26
  4130  00193A                     __ptext26:
  4131                           	opt stack 0
  4132  00193A                     _action_submenu_selector:
  4133                           	opt stack 22
  4134                           
  4135                           ;main.c: 176: switch(submenu_selector){
  4136                           
  4137                           ;incstack = 0
  4138  00193A  D042               	goto	l2730
  4139  00193C                     l2716:
  4140                           
  4141                           ;main.c: 179: lcd_write(9,1,">");
  4142  00193C  0E00               	movlw	0
  4143  00193E  6E33               	movwf	lcd_write@column+1,c
  4144  001940  0E09               	movlw	9
  4145  001942  6E32               	movwf	lcd_write@column,c
  4146  001944  0E00               	movlw	0
  4147  001946  6E35               	movwf	lcd_write@row+1,c
  4148  001948  0E01               	movlw	1
  4149  00194A  6E34               	movwf	lcd_write@row,c
  4150  00194C  0E94               	movlw	low STR_11
  4151  00194E  6E36               	movwf	lcd_write@string,c
  4152  001950  0E0F               	movlw	high STR_11
  4153  001952  6E37               	movwf	lcd_write@string+1,c
  4154  001954  EC45  F012         	call	_lcd_write	;wreg free
  4155                           
  4156                           ;main.c: 180: submenu_selector = 2;
  4157  001958  0E00               	movlw	0
  4158  00195A  6E1E               	movwf	_submenu_selector+1,c
  4159  00195C  0E02               	movlw	2
  4160  00195E  6E1D               	movwf	_submenu_selector,c
  4161                           
  4162                           ;main.c: 181: lcd_write(9,2," ");
  4163  001960  0E00               	movlw	0
  4164  001962  6E33               	movwf	lcd_write@column+1,c
  4165  001964  0E09               	movlw	9
  4166  001966  6E32               	movwf	lcd_write@column,c
  4167  001968  0E00               	movlw	0
  4168  00196A  6E35               	movwf	lcd_write@row+1,c
  4169  00196C  0E02               	movlw	2
  4170  00196E  6E34               	movwf	lcd_write@row,c
  4171  001970  0E90               	movlw	low STR_12
  4172  001972  6E36               	movwf	lcd_write@string,c
  4173  001974  0E0F               	movlw	high STR_12
  4174  001976  6E37               	movwf	lcd_write@string+1,c
  4175  001978  EC45  F012         	call	_lcd_write	;wreg free
  4176                           
  4177                           ;main.c: 182: break;
  4178  00197C  0012               	return	
  4179  00197E                     l2722:
  4180                           
  4181                           ;main.c: 185: lcd_write(9,2,">");
  4182  00197E  0E00               	movlw	0
  4183  001980  6E33               	movwf	lcd_write@column+1,c
  4184  001982  0E09               	movlw	9
  4185  001984  6E32               	movwf	lcd_write@column,c
  4186  001986  0E00               	movlw	0
  4187  001988  6E35               	movwf	lcd_write@row+1,c
  4188  00198A  0E02               	movlw	2
  4189  00198C  6E34               	movwf	lcd_write@row,c
  4190  00198E  0E94               	movlw	low STR_11
  4191  001990  6E36               	movwf	lcd_write@string,c
  4192  001992  0E0F               	movlw	high STR_11
  4193  001994  6E37               	movwf	lcd_write@string+1,c
  4194  001996  EC45  F012         	call	_lcd_write	;wreg free
  4195                           
  4196                           ;main.c: 186: submenu_selector = 1;
  4197  00199A  0E00               	movlw	0
  4198  00199C  6E1E               	movwf	_submenu_selector+1,c
  4199  00199E  0E01               	movlw	1
  4200  0019A0  6E1D               	movwf	_submenu_selector,c
  4201                           
  4202                           ;main.c: 187: lcd_write(9,1," ");
  4203  0019A2  0E00               	movlw	0
  4204  0019A4  6E33               	movwf	lcd_write@column+1,c
  4205  0019A6  0E09               	movlw	9
  4206  0019A8  6E32               	movwf	lcd_write@column,c
  4207  0019AA  0E00               	movlw	0
  4208  0019AC  6E35               	movwf	lcd_write@row+1,c
  4209  0019AE  0E01               	movlw	1
  4210  0019B0  6E34               	movwf	lcd_write@row,c
  4211  0019B2  0E90               	movlw	low STR_12
  4212  0019B4  6E36               	movwf	lcd_write@string,c
  4213  0019B6  0E0F               	movlw	high STR_12
  4214  0019B8  6E37               	movwf	lcd_write@string+1,c
  4215  0019BA  EC45  F012         	call	_lcd_write	;wreg free
  4216                           
  4217                           ;main.c: 189: }
  4218                           
  4219                           ;main.c: 188: break;
  4220  0019BE  0012               	return	
  4221  0019C0                     l2730:
  4222  0019C0  C01D  F038         	movff	_submenu_selector,??_action_submenu_selector
  4223  0019C4  C01E  F039         	movff	_submenu_selector+1,??_action_submenu_selector+1
  4224                           
  4225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4226                           ; Switch size 1, requested type "space"
  4227                           ; Number of cases is 1, Range of values is 0 to 0
  4228                           ; switch strategies available:
  4229                           ; Name         Instructions Cycles
  4230                           ; simple_byte            4     3 (average)
  4231                           ;	Chosen strategy is simple_byte
  4232  0019C8  5039               	movf	??_action_submenu_selector+1,w,c
  4233  0019CA  0A00               	xorlw	0	; case 0
  4234  0019CC  A4D8               	btfss	status,2,c
  4235  0019CE  0012               	return	
  4236                           
  4237                           ; Switch size 1, requested type "space"
  4238                           ; Number of cases is 2, Range of values is 1 to 2
  4239                           ; switch strategies available:
  4240                           ; Name         Instructions Cycles
  4241                           ; simple_byte            7     4 (average)
  4242                           ;	Chosen strategy is simple_byte
  4243  0019D0  5038               	movf	??_action_submenu_selector,w,c
  4244  0019D2  0A01               	xorlw	1	; case 1
  4245  0019D4  B4D8               	btfsc	status,2,c
  4246  0019D6  D7B2               	goto	l2716
  4247  0019D8  0A03               	xorlw	3	; case 2
  4248  0019DA  A4D8               	btfss	status,2,c
  4249  0019DC  0012               	return	
  4250  0019DE  D7CF               	goto	l2722
  4251  0019E0  0012               	return		;funcret
  4252  0019E2                     __end_of_action_submenu_selector:
  4253                           	opt stack 0
  4254                           tblptru	equ	0xFF8
  4255                           tblptrh	equ	0xFF7
  4256                           tblptrl	equ	0xFF6
  4257                           tablat	equ	0xFF5
  4258                           prodl	equ	0xFF3
  4259                           intcon	equ	0xFF2
  4260                           postinc0	equ	0xFEE
  4261                           wreg	equ	0xFE8
  4262                           indf1	equ	0xFE7
  4263                           postdec1	equ	0xFE5
  4264                           fsr1h	equ	0xFE2
  4265                           fsr1l	equ	0xFE1
  4266                           indf2	equ	0xFDF
  4267                           fsr2h	equ	0xFDA
  4268                           fsr2l	equ	0xFD9
  4269                           status	equ	0xFD8
  4270                           
  4271 ;; *************** function _action_menu_selector *****************
  4272 ;; Defined at:
  4273 ;;		line 138 in file "main.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;		None               void
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4291 ;;Total ram usage:        2 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    6
  4294 ;; This function calls:
  4295 ;;		_lcd_write
  4296 ;; This function is called by:
  4297 ;;		_button_A
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text27
  4302  0011FC                     __ptext27:
  4303                           	opt stack 0
  4304  0011FC                     _action_menu_selector:
  4305                           	opt stack 22
  4306                           
  4307                           ;main.c: 140: switch(menu_selector){
  4308                           
  4309                           ;incstack = 0
  4310  0011FC  D094               	goto	l2708
  4311  0011FE                     l2682:
  4312                           
  4313                           ;main.c: 143: lcd_write(1,1,">");
  4314  0011FE  0E00               	movlw	0
  4315  001200  6E33               	movwf	lcd_write@column+1,c
  4316  001202  0E01               	movlw	1
  4317  001204  6E32               	movwf	lcd_write@column,c
  4318  001206  0E00               	movlw	0
  4319  001208  6E35               	movwf	lcd_write@row+1,c
  4320  00120A  0E01               	movlw	1
  4321  00120C  6E34               	movwf	lcd_write@row,c
  4322  00120E  0E94               	movlw	low STR_11
  4323  001210  6E36               	movwf	lcd_write@string,c
  4324  001212  0E0F               	movlw	high STR_11
  4325  001214  6E37               	movwf	lcd_write@string+1,c
  4326  001216  EC45  F012         	call	_lcd_write	;wreg free
  4327                           
  4328                           ;main.c: 144: menu_selector = 2;
  4329  00121A  0E00               	movlw	0
  4330  00121C  6E16               	movwf	_menu_selector+1,c
  4331  00121E  0E02               	movlw	2
  4332  001220  6E15               	movwf	_menu_selector,c
  4333                           
  4334                           ;main.c: 145: menu_selected = 1;
  4335  001222  0E00               	movlw	0
  4336  001224  6E14               	movwf	_menu_selected+1,c
  4337  001226  0E01               	movlw	1
  4338  001228  6E13               	movwf	_menu_selected,c
  4339                           
  4340                           ;main.c: 146: lcd_write(9,2," ");
  4341  00122A  0E00               	movlw	0
  4342  00122C  6E33               	movwf	lcd_write@column+1,c
  4343  00122E  0E09               	movlw	9
  4344  001230  6E32               	movwf	lcd_write@column,c
  4345  001232  0E00               	movlw	0
  4346  001234  6E35               	movwf	lcd_write@row+1,c
  4347  001236  0E02               	movlw	2
  4348  001238  6E34               	movwf	lcd_write@row,c
  4349  00123A  0E90               	movlw	low STR_12
  4350  00123C  6E36               	movwf	lcd_write@string,c
  4351  00123E  0E0F               	movlw	high STR_12
  4352  001240  6E37               	movwf	lcd_write@string+1,c
  4353  001242  EC45  F012         	call	_lcd_write	;wreg free
  4354                           
  4355                           ;main.c: 147: break;
  4356  001246  0012               	return	
  4357  001248                     l2688:
  4358                           
  4359                           ;main.c: 150: lcd_write(1,2,">");
  4360  001248  0E00               	movlw	0
  4361  00124A  6E33               	movwf	lcd_write@column+1,c
  4362  00124C  0E01               	movlw	1
  4363  00124E  6E32               	movwf	lcd_write@column,c
  4364  001250  0E00               	movlw	0
  4365  001252  6E35               	movwf	lcd_write@row+1,c
  4366  001254  0E02               	movlw	2
  4367  001256  6E34               	movwf	lcd_write@row,c
  4368  001258  0E94               	movlw	low STR_11
  4369  00125A  6E36               	movwf	lcd_write@string,c
  4370  00125C  0E0F               	movlw	high STR_11
  4371  00125E  6E37               	movwf	lcd_write@string+1,c
  4372  001260  EC45  F012         	call	_lcd_write	;wreg free
  4373                           
  4374                           ;main.c: 151: menu_selector = 3;
  4375  001264  0E00               	movlw	0
  4376  001266  6E16               	movwf	_menu_selector+1,c
  4377  001268  0E03               	movlw	3
  4378  00126A  6E15               	movwf	_menu_selector,c
  4379                           
  4380                           ;main.c: 152: menu_selected = 2;
  4381  00126C  0E00               	movlw	0
  4382  00126E  6E14               	movwf	_menu_selected+1,c
  4383  001270  0E02               	movlw	2
  4384  001272  6E13               	movwf	_menu_selected,c
  4385                           
  4386                           ;main.c: 153: lcd_write(1,1," ");
  4387  001274  0E00               	movlw	0
  4388  001276  6E33               	movwf	lcd_write@column+1,c
  4389  001278  0E01               	movlw	1
  4390  00127A  6E32               	movwf	lcd_write@column,c
  4391  00127C  0E00               	movlw	0
  4392  00127E  6E35               	movwf	lcd_write@row+1,c
  4393  001280  0E01               	movlw	1
  4394  001282  6E34               	movwf	lcd_write@row,c
  4395  001284  0E90               	movlw	low STR_12
  4396  001286  6E36               	movwf	lcd_write@string,c
  4397  001288  0E0F               	movlw	high STR_12
  4398  00128A  6E37               	movwf	lcd_write@string+1,c
  4399  00128C  EC45  F012         	call	_lcd_write	;wreg free
  4400                           
  4401                           ;main.c: 154: break;
  4402  001290  0012               	return	
  4403  001292                     l2694:
  4404                           
  4405                           ;main.c: 157: lcd_write(9,1,">");
  4406  001292  0E00               	movlw	0
  4407  001294  6E33               	movwf	lcd_write@column+1,c
  4408  001296  0E09               	movlw	9
  4409  001298  6E32               	movwf	lcd_write@column,c
  4410  00129A  0E00               	movlw	0
  4411  00129C  6E35               	movwf	lcd_write@row+1,c
  4412  00129E  0E01               	movlw	1
  4413  0012A0  6E34               	movwf	lcd_write@row,c
  4414  0012A2  0E94               	movlw	low STR_11
  4415  0012A4  6E36               	movwf	lcd_write@string,c
  4416  0012A6  0E0F               	movlw	high STR_11
  4417  0012A8  6E37               	movwf	lcd_write@string+1,c
  4418  0012AA  EC45  F012         	call	_lcd_write	;wreg free
  4419                           
  4420                           ;main.c: 158: menu_selector = 4;
  4421  0012AE  0E00               	movlw	0
  4422  0012B0  6E16               	movwf	_menu_selector+1,c
  4423  0012B2  0E04               	movlw	4
  4424  0012B4  6E15               	movwf	_menu_selector,c
  4425                           
  4426                           ;main.c: 159: menu_selected = 3;
  4427  0012B6  0E00               	movlw	0
  4428  0012B8  6E14               	movwf	_menu_selected+1,c
  4429  0012BA  0E03               	movlw	3
  4430  0012BC  6E13               	movwf	_menu_selected,c
  4431                           
  4432                           ;main.c: 160: lcd_write(1,2," ");
  4433  0012BE  0E00               	movlw	0
  4434  0012C0  6E33               	movwf	lcd_write@column+1,c
  4435  0012C2  0E01               	movlw	1
  4436  0012C4  6E32               	movwf	lcd_write@column,c
  4437  0012C6  0E00               	movlw	0
  4438  0012C8  6E35               	movwf	lcd_write@row+1,c
  4439  0012CA  0E02               	movlw	2
  4440  0012CC  6E34               	movwf	lcd_write@row,c
  4441  0012CE  0E90               	movlw	low STR_12
  4442  0012D0  6E36               	movwf	lcd_write@string,c
  4443  0012D2  0E0F               	movlw	high STR_12
  4444  0012D4  6E37               	movwf	lcd_write@string+1,c
  4445  0012D6  EC45  F012         	call	_lcd_write	;wreg free
  4446                           
  4447                           ;main.c: 161: break;
  4448  0012DA  0012               	return	
  4449  0012DC                     l2700:
  4450                           
  4451                           ;main.c: 164: lcd_write(9,2,">");
  4452  0012DC  0E00               	movlw	0
  4453  0012DE  6E33               	movwf	lcd_write@column+1,c
  4454  0012E0  0E09               	movlw	9
  4455  0012E2  6E32               	movwf	lcd_write@column,c
  4456  0012E4  0E00               	movlw	0
  4457  0012E6  6E35               	movwf	lcd_write@row+1,c
  4458  0012E8  0E02               	movlw	2
  4459  0012EA  6E34               	movwf	lcd_write@row,c
  4460  0012EC  0E94               	movlw	low STR_11
  4461  0012EE  6E36               	movwf	lcd_write@string,c
  4462  0012F0  0E0F               	movlw	high STR_11
  4463  0012F2  6E37               	movwf	lcd_write@string+1,c
  4464  0012F4  EC45  F012         	call	_lcd_write	;wreg free
  4465                           
  4466                           ;main.c: 165: menu_selector = 1;
  4467  0012F8  0E00               	movlw	0
  4468  0012FA  6E16               	movwf	_menu_selector+1,c
  4469  0012FC  0E01               	movlw	1
  4470  0012FE  6E15               	movwf	_menu_selector,c
  4471                           
  4472                           ;main.c: 166: menu_selected = 4;
  4473  001300  0E00               	movlw	0
  4474  001302  6E14               	movwf	_menu_selected+1,c
  4475  001304  0E04               	movlw	4
  4476  001306  6E13               	movwf	_menu_selected,c
  4477                           
  4478                           ;main.c: 167: lcd_write(9,1," ");
  4479  001308  0E00               	movlw	0
  4480  00130A  6E33               	movwf	lcd_write@column+1,c
  4481  00130C  0E09               	movlw	9
  4482  00130E  6E32               	movwf	lcd_write@column,c
  4483  001310  0E00               	movlw	0
  4484  001312  6E35               	movwf	lcd_write@row+1,c
  4485  001314  0E01               	movlw	1
  4486  001316  6E34               	movwf	lcd_write@row,c
  4487  001318  0E90               	movlw	low STR_12
  4488  00131A  6E36               	movwf	lcd_write@string,c
  4489  00131C  0E0F               	movlw	high STR_12
  4490  00131E  6E37               	movwf	lcd_write@string+1,c
  4491  001320  EC45  F012         	call	_lcd_write	;wreg free
  4492                           
  4493                           ;main.c: 170: }
  4494                           
  4495                           ;main.c: 168: break;
  4496  001324  0012               	return	
  4497  001326                     l2708:
  4498  001326  C015  F038         	movff	_menu_selector,??_action_menu_selector
  4499  00132A  C016  F039         	movff	_menu_selector+1,??_action_menu_selector+1
  4500                           
  4501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4502                           ; Switch size 1, requested type "space"
  4503                           ; Number of cases is 1, Range of values is 0 to 0
  4504                           ; switch strategies available:
  4505                           ; Name         Instructions Cycles
  4506                           ; simple_byte            4     3 (average)
  4507                           ;	Chosen strategy is simple_byte
  4508  00132E  5039               	movf	??_action_menu_selector+1,w,c
  4509  001330  0A00               	xorlw	0	; case 0
  4510  001332  A4D8               	btfss	status,2,c
  4511  001334  0012               	return	
  4512                           
  4513                           ; Switch size 1, requested type "space"
  4514                           ; Number of cases is 4, Range of values is 1 to 4
  4515                           ; switch strategies available:
  4516                           ; Name         Instructions Cycles
  4517                           ; simple_byte           13     7 (average)
  4518                           ;	Chosen strategy is simple_byte
  4519  001336  5038               	movf	??_action_menu_selector,w,c
  4520  001338  0A01               	xorlw	1	; case 1
  4521  00133A  B4D8               	btfsc	status,2,c
  4522  00133C  D760               	goto	l2682
  4523  00133E  0A03               	xorlw	3	; case 2
  4524  001340  B4D8               	btfsc	status,2,c
  4525  001342  D782               	goto	l2688
  4526  001344  0A01               	xorlw	1	; case 3
  4527  001346  B4D8               	btfsc	status,2,c
  4528  001348  D7A4               	goto	l2694
  4529  00134A  0A07               	xorlw	7	; case 4
  4530  00134C  A4D8               	btfss	status,2,c
  4531  00134E  0012               	return	
  4532  001350  D7C5               	goto	l2700
  4533  001352  0012               	return		;funcret
  4534  001354                     __end_of_action_menu_selector:
  4535                           	opt stack 0
  4536                           tblptru	equ	0xFF8
  4537                           tblptrh	equ	0xFF7
  4538                           tblptrl	equ	0xFF6
  4539                           tablat	equ	0xFF5
  4540                           prodl	equ	0xFF3
  4541                           intcon	equ	0xFF2
  4542                           postinc0	equ	0xFEE
  4543                           wreg	equ	0xFE8
  4544                           indf1	equ	0xFE7
  4545                           postdec1	equ	0xFE5
  4546                           fsr1h	equ	0xFE2
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           fsr2h	equ	0xFDA
  4550                           fsr2l	equ	0xFD9
  4551                           status	equ	0xFD8
  4552                           
  4553 ;; *************** function _home_clock_refresh *****************
  4554 ;; Defined at:
  4555 ;;		line 100 in file "main.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    6
  4576 ;; This function calls:
  4577 ;;		_lcd_write
  4578 ;;		_sprintf
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text28
  4585  001A78                     __ptext28:
  4586                           	opt stack 0
  4587  001A78                     _home_clock_refresh:
  4588                           	opt stack 24
  4589                           
  4590                           ;main.c: 102: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  4591                           
  4592                           ;incstack = 0
  4593  001A78  0E7C               	movlw	low _buffer1
  4594  001A7A  6E34               	movwf	sprintf@sp,c
  4595  001A7C  0E00               	movlw	high _buffer1
  4596  001A7E  6E35               	movwf	sprintf@sp+1,c
  4597  001A80  0E1F               	movlw	low STR_2
  4598  001A82  6E36               	movwf	sprintf@f,c
  4599  001A84  0E0F               	movlw	high STR_2
  4600  001A86  6E37               	movwf	sprintf@f+1,c
  4601  001A88  C04E  F038         	movff	_dia,?_sprintf+4
  4602  001A8C  C04F  F039         	movff	_dia+1,?_sprintf+5
  4603  001A90  C054  F03A         	movff	_mes,?_sprintf+6
  4604  001A94  C055  F03B         	movff	_mes+1,?_sprintf+7
  4605  001A98  C04C  F03C         	movff	_anio,?_sprintf+8
  4606  001A9C  C04D  F03D         	movff	_anio+1,?_sprintf+9
  4607  001AA0  ECCC  F007         	call	_sprintf	;wreg free
  4608                           
  4609                           ;main.c: 103: lcd_write(9,1,buffer1);
  4610  001AA4  0E00               	movlw	0
  4611  001AA6  6E33               	movwf	lcd_write@column+1,c
  4612  001AA8  0E09               	movlw	9
  4613  001AAA  6E32               	movwf	lcd_write@column,c
  4614  001AAC  0E00               	movlw	0
  4615  001AAE  6E35               	movwf	lcd_write@row+1,c
  4616  001AB0  0E01               	movlw	1
  4617  001AB2  6E34               	movwf	lcd_write@row,c
  4618  001AB4  0E7C               	movlw	low _buffer1
  4619  001AB6  6E36               	movwf	lcd_write@string,c
  4620  001AB8  0E00               	movlw	high _buffer1
  4621  001ABA  6E37               	movwf	lcd_write@string+1,c
  4622  001ABC  EC45  F012         	call	_lcd_write	;wreg free
  4623                           
  4624                           ;main.c: 104: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  4625  001AC0  0E7C               	movlw	low _buffer1
  4626  001AC2  6E34               	movwf	sprintf@sp,c
  4627  001AC4  0E00               	movlw	high _buffer1
  4628  001AC6  6E35               	movwf	sprintf@sp+1,c
  4629  001AC8  0E2E               	movlw	low STR_3
  4630  001ACA  6E36               	movwf	sprintf@f,c
  4631  001ACC  0E0F               	movlw	high STR_3
  4632  001ACE  6E37               	movwf	sprintf@f+1,c
  4633  001AD0  C052  F038         	movff	_hora,?_sprintf+4
  4634  001AD4  C053  F039         	movff	_hora+1,?_sprintf+5
  4635  001AD8  C017  F03A         	movff	_minuto,?_sprintf+6
  4636  001ADC  C018  F03B         	movff	_minuto+1,?_sprintf+7
  4637  001AE0  C019  F03C         	movff	_segundo,?_sprintf+8
  4638  001AE4  C01A  F03D         	movff	_segundo+1,?_sprintf+9
  4639  001AE8  ECCC  F007         	call	_sprintf	;wreg free
  4640                           
  4641                           ;main.c: 105: lcd_write(9,2,buffer1);
  4642  001AEC  0E00               	movlw	0
  4643  001AEE  6E33               	movwf	lcd_write@column+1,c
  4644  001AF0  0E09               	movlw	9
  4645  001AF2  6E32               	movwf	lcd_write@column,c
  4646  001AF4  0E00               	movlw	0
  4647  001AF6  6E35               	movwf	lcd_write@row+1,c
  4648  001AF8  0E02               	movlw	2
  4649  001AFA  6E34               	movwf	lcd_write@row,c
  4650  001AFC  0E7C               	movlw	low _buffer1
  4651  001AFE  6E36               	movwf	lcd_write@string,c
  4652  001B00  0E00               	movlw	high _buffer1
  4653  001B02  6E37               	movwf	lcd_write@string+1,c
  4654  001B04  EC45  F012         	call	_lcd_write	;wreg free
  4655  001B08  0012               	return		;funcret
  4656  001B0A                     __end_of_home_clock_refresh:
  4657                           	opt stack 0
  4658                           tblptru	equ	0xFF8
  4659                           tblptrh	equ	0xFF7
  4660                           tblptrl	equ	0xFF6
  4661                           tablat	equ	0xFF5
  4662                           prodl	equ	0xFF3
  4663                           intcon	equ	0xFF2
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           indf1	equ	0xFE7
  4667                           postdec1	equ	0xFE5
  4668                           fsr1h	equ	0xFE2
  4669                           fsr1l	equ	0xFE1
  4670                           indf2	equ	0xFDF
  4671                           fsr2h	equ	0xFDA
  4672                           fsr2l	equ	0xFD9
  4673                           status	equ	0xFD8
  4674                           
  4675 ;; *************** function _sprintf *****************
  4676 ;; Defined at:
  4677 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  sp              2   12[COMRAM] PTR unsigned char 
  4680 ;;		 -> buffer1(20), 
  4681 ;;  f               2   14[COMRAM] PTR const unsigned char 
  4682 ;;		 -> STR_38(5), STR_37(5), STR_3(15), STR_2(15), 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  tmpval          4    0        struct .
  4685 ;;  cp              3    0        PTR const unsigned char 
  4686 ;;  width           2   32[COMRAM] int 
  4687 ;;  val             2   29[COMRAM] unsigned int 
  4688 ;;  ap              2   26[COMRAM] PTR void [1]
  4689 ;;		 -> ?_sprintf(2), 
  4690 ;;  len             2    0        unsigned int 
  4691 ;;  c               1   34[COMRAM] char 
  4692 ;;  prec            1   31[COMRAM] char 
  4693 ;;  flag            1   28[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  2   12[COMRAM] int 
  4696 ;; Registers used:
  4697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4703 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4704 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4706 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4707 ;;Total ram usage:       23 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    1
  4710 ;; This function calls:
  4711 ;;		___lwdiv
  4712 ;;		___lwmod
  4713 ;;		___wmul
  4714 ;;		_isdigit
  4715 ;; This function is called by:
  4716 ;;		_home_clock_refresh
  4717 ;;		_button_number
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text29
  4722  000F98                     __ptext29:
  4723                           	opt stack 0
  4724  000F98                     _sprintf:
  4725                           	opt stack 27
  4726                           
  4727                           ;doprnt.c: 494: va_list ap;
  4728                           ;doprnt.c: 499: signed char c;
  4729                           ;doprnt.c: 501: int width;
  4730                           ;doprnt.c: 506: signed char prec;
  4731                           ;doprnt.c: 508: unsigned char flag;
  4732                           ;doprnt.c: 523: union {
  4733                           ;doprnt.c: 524: unsigned long vd;
  4734                           ;doprnt.c: 525: double integ;
  4735                           ;doprnt.c: 526: } tmpval;
  4736                           ;doprnt.c: 528: unsigned int val;
  4737                           ;doprnt.c: 529: unsigned len;
  4738                           ;doprnt.c: 530: const char * cp;
  4739                           ;doprnt.c: 533: *ap = __va_start();
  4740                           
  4741                           ;incstack = 0
  4742  000F98  0E38               	movlw	low (?_sprintf+4)
  4743  000F9A  6E42               	movwf	sprintf@ap,c
  4744  000F9C  0E00               	movlw	high (?_sprintf+4)
  4745  000F9E  6E43               	movwf	sprintf@ap+1,c
  4746                           
  4747                           ;doprnt.c: 536: while(c = *f++) {
  4748  000FA0  D117               	goto	l2668
  4749  000FA2                     l2586:
  4750                           
  4751                           ;doprnt.c: 538: if(c != '%')
  4752  000FA2  0E25               	movlw	37
  4753  000FA4  184A               	xorwf	sprintf@c,w,c
  4754  000FA6  B4D8               	btfsc	status,2,c
  4755  000FA8  D009               	goto	l2592
  4756                           
  4757                           ;doprnt.c: 540: {
  4758                           ;doprnt.c: 541: ((*sp++ = (c)));
  4759  000FAA  C034  FFD9         	movff	sprintf@sp,fsr2l
  4760  000FAE  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  4761  000FB2  C04A  FFDF         	movff	sprintf@c,indf2
  4762  000FB6  4A34               	infsnz	sprintf@sp,f,c
  4763  000FB8  2A35               	incf	sprintf@sp+1,f,c
  4764                           
  4765                           ;doprnt.c: 542: continue;
  4766  000FBA  D10A               	goto	l2668
  4767  000FBC                     l2592:
  4768                           
  4769                           ;doprnt.c: 543: }
  4770                           ;doprnt.c: 546: width = 0;
  4771  000FBC  0E00               	movlw	0
  4772  000FBE  6E49               	movwf	sprintf@width+1,c
  4773  000FC0  0E00               	movlw	0
  4774  000FC2  6E48               	movwf	sprintf@width,c
  4775                           
  4776                           ;doprnt.c: 548: flag = 0;
  4777  000FC4  0E00               	movlw	0
  4778  000FC6  6E44               	movwf	sprintf@flag,c
  4779                           
  4780                           ;doprnt.c: 551: switch(*f) {
  4781                           
  4782                           ;doprnt.c: 550: for(;;) {
  4783  000FC8  D005               	goto	l2598
  4784  000FCA                     l2594:
  4785                           
  4786                           ;doprnt.c: 580: flag |= 0x04;
  4787  000FCA  8444               	bsf	sprintf@flag,2,c
  4788                           
  4789                           ;doprnt.c: 581: f++;
  4790  000FCC  4A36               	infsnz	sprintf@f,f,c
  4791  000FCE  2A37               	incf	sprintf@f+1,f,c
  4792                           
  4793                           ;doprnt.c: 582: continue;
  4794  000FD0  D001               	goto	l2598
  4795                           
  4796                           ;doprnt.c: 584: }
  4797  000FD2  D00B               	goto	l2600
  4798  000FD4                     l2598:
  4799  000FD4  C036  FFF6         	movff	sprintf@f,tblptrl
  4800  000FD8  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4801  000FDC                     	if	0	;tblptru may be non-zero
  4802  000FDC                     	endif
  4803  000FDC                     	if	0	;tblptru may be non-zero
  4804  000FDC                     	endif
  4805  000FDC  0008               	tblrd		*
  4806  000FDE  50F5               	movf	tablat,w,c
  4807                           
  4808                           ; Switch size 1, requested type "space"
  4809                           ; Number of cases is 1, Range of values is 48 to 48
  4810                           ; switch strategies available:
  4811                           ; Name         Instructions Cycles
  4812                           ; simple_byte            4     3 (average)
  4813                           ;	Chosen strategy is simple_byte
  4814  000FE0  0A30               	xorlw	48	; case 48
  4815  000FE2  B4D8               	btfsc	status,2,c
  4816  000FE4  D7F2               	goto	l2594
  4817                           
  4818                           ;doprnt.c: 585: break;
  4819  000FE6  D001               	goto	l2600
  4820                           
  4821                           ;doprnt.c: 586: }
  4822  000FE8  D7F5               	goto	l2598
  4823  000FEA                     l2600:
  4824                           
  4825                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4826  000FEA  C036  FFF6         	movff	sprintf@f,tblptrl
  4827  000FEE  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4828  000FF2                     	if	0	;tblptru may be non-zero
  4829  000FF2                     	endif
  4830  000FF2                     	if	0	;tblptru may be non-zero
  4831  000FF2                     	endif
  4832  000FF2  0008               	tblrd		*
  4833  000FF4  50F5               	movf	tablat,w,c
  4834  000FF6  EC15  F012         	call	_isdigit
  4835  000FFA  A0D8               	btfss	status,0,c
  4836  000FFC  D03A               	goto	l2616
  4837                           
  4838                           ;doprnt.c: 598: width = 0;
  4839  000FFE  0E00               	movlw	0
  4840  001000  6E49               	movwf	sprintf@width+1,c
  4841  001002  0E00               	movlw	0
  4842  001004  6E48               	movwf	sprintf@width,c
  4843  001006  D000               	goto	l2604
  4844  001008                     l2604:
  4845                           
  4846                           ;doprnt.c: 600: width *= 10;
  4847  001008  C048  F028         	movff	sprintf@width,___wmul@multiplier
  4848  00100C  C049  F029         	movff	sprintf@width+1,___wmul@multiplier+1
  4849  001010  0E00               	movlw	0
  4850  001012  6E2B               	movwf	___wmul@multiplicand+1,c
  4851  001014  0E0A               	movlw	10
  4852  001016  6E2A               	movwf	___wmul@multiplicand,c
  4853  001018  ECEF  F011         	call	___wmul	;wreg free
  4854  00101C  C028  F048         	movff	?___wmul,sprintf@width
  4855  001020  C029  F049         	movff	?___wmul+1,sprintf@width+1
  4856                           
  4857                           ;doprnt.c: 601: width += *f++ - '0';
  4858  001024  0ED0               	movlw	208
  4859  001026  6E3E               	movwf	??_sprintf& (0+255),c
  4860  001028  0EFF               	movlw	255
  4861  00102A  6E3F               	movwf	(??_sprintf+1)& (0+255),c
  4862  00102C  C036  FFF6         	movff	sprintf@f,tblptrl
  4863  001030  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4864  001034                     	if	0	;tblptru may be non-zero
  4865  001034                     	endif
  4866  001034                     	if	0	;tblptru may be non-zero
  4867  001034                     	endif
  4868  001034  0008               	tblrd		*
  4869  001036  50F5               	movf	tablat,w,c
  4870  001038  6E40               	movwf	(??_sprintf+2)& (0+255),c
  4871  00103A  6A41               	clrf	(??_sprintf+3)& (0+255),c
  4872  00103C  503E               	movf	??_sprintf,w,c
  4873  00103E  2640               	addwf	??_sprintf+2,f,c
  4874  001040  503F               	movf	??_sprintf+1,w,c
  4875  001042  2241               	addwfc	??_sprintf+3,f,c
  4876  001044  5040               	movf	??_sprintf+2,w,c
  4877  001046  2648               	addwf	sprintf@width,f,c
  4878  001048  5041               	movf	??_sprintf+3,w,c
  4879  00104A  2249               	addwfc	sprintf@width+1,f,c
  4880  00104C  4A36               	infsnz	sprintf@f,f,c
  4881  00104E  2A37               	incf	sprintf@f+1,f,c
  4882                           
  4883                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4884  001050  C036  FFF6         	movff	sprintf@f,tblptrl
  4885  001054  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4886  001058                     	if	0	;tblptru may be non-zero
  4887  001058                     	endif
  4888  001058                     	if	0	;tblptru may be non-zero
  4889  001058                     	endif
  4890  001058  0008               	tblrd		*
  4891  00105A  50F5               	movf	tablat,w,c
  4892  00105C  EC15  F012         	call	_isdigit
  4893  001060  A0D8               	btfss	status,0,c
  4894  001062  D007               	goto	l2616
  4895  001064  D7D1               	goto	l2604
  4896                           
  4897                           ;doprnt.c: 608: }
  4898                           ;doprnt.c: 635: switch(c = *f++) {
  4899  001066  D005               	goto	l2616
  4900                           
  4901                           ;doprnt.c: 638: goto alldone;
  4902                           
  4903                           ;doprnt.c: 637: case 0:
  4904  001068  D0C1               	goto	l2670
  4905                           
  4906                           ;doprnt.c: 813: continue;
  4907                           
  4908                           ;doprnt.c: 802: default:
  4909  00106A  D0B2               	goto	l2668
  4910  00106C                     l2612:
  4911                           
  4912                           ;doprnt.c: 818: flag |= 0xC0;
  4913  00106C  0EC0               	movlw	192
  4914  00106E  1244               	iorwf	sprintf@flag,f,c
  4915                           
  4916                           ;doprnt.c: 822: }
  4917                           
  4918                           ;doprnt.c: 819: break;
  4919  001070  D011               	goto	l2618
  4920  001072                     l2616:
  4921  001072  C036  FFF6         	movff	sprintf@f,tblptrl
  4922  001076  C037  FFF7         	movff	sprintf@f+1,tblptrh
  4923  00107A  4A36               	infsnz	sprintf@f,f,c
  4924  00107C  2A37               	incf	sprintf@f+1,f,c
  4925  00107E                     	if	0	;tblptru may be non-zero
  4926  00107E                     	endif
  4927  00107E                     	if	0	;tblptru may be non-zero
  4928  00107E                     	endif
  4929  00107E  0008               	tblrd		*
  4930  001080  CFF5 F04A          	movff	tablat,sprintf@c
  4931  001084  504A               	movf	sprintf@c,w,c
  4932                           
  4933                           ; Switch size 1, requested type "space"
  4934                           ; Number of cases is 2, Range of values is 0 to 117
  4935                           ; switch strategies available:
  4936                           ; Name         Instructions Cycles
  4937                           ; simple_byte            7     4 (average)
  4938                           ;	Chosen strategy is simple_byte
  4939  001086  0A00               	xorlw	0	; case 0
  4940  001088  B4D8               	btfsc	status,2,c
  4941  00108A  D0B0               	goto	l2670
  4942  00108C  0A75               	xorlw	117	; case 117
  4943  00108E  B4D8               	btfsc	status,2,c
  4944  001090  D7ED               	goto	l2612
  4945  001092  D09E               	goto	l2668
  4946  001094                     l2618:
  4947                           
  4948                           ;doprnt.c: 1273: {
  4949                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4950  001094  C042  FFD9         	movff	sprintf@ap,fsr2l
  4951  001098  C043  FFDA         	movff	sprintf@ap+1,fsr2h
  4952  00109C  CFDE F045          	movff	postinc2,sprintf@val
  4953  0010A0  CFDD F046          	movff	postdec2,sprintf@val+1
  4954  0010A4  0E02               	movlw	2
  4955  0010A6  2642               	addwf	sprintf@ap,f,c
  4956  0010A8  0E00               	movlw	0
  4957  0010AA  2243               	addwfc	sprintf@ap+1,f,c
  4958                           
  4959                           ;doprnt.c: 1287: }
  4960                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4961  0010AC  0E01               	movlw	1
  4962  0010AE  6E4A               	movwf	sprintf@c,c
  4963  0010B0                     l2624:
  4964  0010B0  0E05               	movlw	5
  4965  0010B2  184A               	xorwf	sprintf@c,w,c
  4966  0010B4  B4D8               	btfsc	status,2,c
  4967  0010B6  D016               	goto	l2636
  4968  0010B8  D001               	goto	l2628
  4969  0010BA  D014               	goto	l2636
  4970  0010BC                     l2628:
  4971                           
  4972                           ;doprnt.c: 1306: if(val < dpowers[c])
  4973  0010BC  504A               	movf	sprintf@c,w,c
  4974  0010BE  0D02               	mullw	2
  4975  0010C0  0E01               	movlw	low _dpowers
  4976  0010C2  24F3               	addwf	prodl,w,c
  4977  0010C4  6EF6               	movwf	tblptrl,c
  4978  0010C6  0E0F               	movlw	high _dpowers
  4979  0010C8  20F4               	addwfc	prodh,w,c
  4980  0010CA  6EF7               	movwf	tblptrh,c
  4981  0010CC                     	if	0	;There are less than 3 active tblptr bytes
  4982  0010CC                     	endif
  4983  0010CC  0009               	tblrd		*+
  4984  0010CE  50F5               	movf	tablat,w,c
  4985  0010D0  5C45               	subwf	sprintf@val,w,c
  4986  0010D2  0009               	tblrd		*+
  4987  0010D4  50F5               	movf	tablat,w,c
  4988  0010D6  5846               	subwfb	sprintf@val+1,w,c
  4989  0010D8  A0D8               	btfss	status,0,c
  4990  0010DA  D004               	goto	l2636
  4991  0010DC  D001               	goto	l2632
  4992                           
  4993                           ;doprnt.c: 1307: break;
  4994  0010DE  D002               	goto	l2636
  4995  0010E0                     l2632:
  4996  0010E0  2A4A               	incf	sprintf@c,f,c
  4997  0010E2  D7E6               	goto	l2624
  4998  0010E4                     l2636:
  4999                           
  5000                           ;doprnt.c: 1381: if(width > c)
  5001  0010E4  0E80               	movlw	128
  5002  0010E6  BE4A               	btfsc	sprintf@c,7,c
  5003  0010E8  0E7F               	movlw	127
  5004  0010EA  6E3E               	movwf	??_sprintf& (0+255),c
  5005  0010EC  5048               	movf	sprintf@width,w,c
  5006  0010EE  5C4A               	subwf	sprintf@c,w,c
  5007  0010F0  5049               	movf	sprintf@width+1,w,c
  5008  0010F2  0A80               	xorlw	128
  5009  0010F4  583E               	subwfb	??_sprintf& (0+255),w,c
  5010  0010F6  B0D8               	btfsc	status,0,c
  5011  0010F8  D007               	goto	l2640
  5012                           
  5013                           ;doprnt.c: 1382: width -= c;
  5014  0010FA  504A               	movf	sprintf@c,w,c
  5015  0010FC  5E48               	subwf	sprintf@width,f,c
  5016  0010FE  0E00               	movlw	0
  5017  001100  BE4A               	btfsc	sprintf@c,7,c
  5018  001102  0EFF               	movlw	255
  5019  001104  5A49               	subwfb	sprintf@width+1,f,c
  5020  001106  D005               	goto	l2642
  5021  001108                     l2640:
  5022                           
  5023                           ;doprnt.c: 1383: else
  5024                           ;doprnt.c: 1384: width = 0;
  5025  001108  0E00               	movlw	0
  5026  00110A  6E49               	movwf	sprintf@width+1,c
  5027  00110C  0E00               	movlw	0
  5028  00110E  6E48               	movwf	sprintf@width,c
  5029  001110  D000               	goto	l2642
  5030  001112                     l2642:
  5031                           
  5032                           ;doprnt.c: 1387: if(flag & 0x04) {
  5033  001112  A444               	btfss	sprintf@flag,2,c
  5034  001114  D015               	goto	l2652
  5035                           
  5036                           ;doprnt.c: 1415: if(width)
  5037  001116  5048               	movf	sprintf@width,w,c
  5038  001118  1049               	iorwf	sprintf@width+1,w,c
  5039  00111A  B4D8               	btfsc	status,2,c
  5040  00111C  D026               	goto	l432
  5041  00111E                     l2646:
  5042                           
  5043                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5044  00111E  C034  FFD9         	movff	sprintf@sp,fsr2l
  5045  001122  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  5046  001126  0E30               	movlw	48
  5047  001128  6EDF               	movwf	indf2,c
  5048  00112A  4A34               	infsnz	sprintf@sp,f,c
  5049  00112C  2A35               	incf	sprintf@sp+1,f,c
  5050                           
  5051                           ;doprnt.c: 1418: while(--width);
  5052  00112E  0648               	decf	sprintf@width,f,c
  5053  001130  A0D8               	btfss	status,0,c
  5054  001132  0649               	decf	sprintf@width+1,f,c
  5055  001134  5048               	movf	sprintf@width,w,c
  5056  001136  1049               	iorwf	sprintf@width+1,w,c
  5057  001138  B4D8               	btfsc	status,2,c
  5058  00113A  D017               	goto	l432
  5059  00113C  D7F0               	goto	l2646
  5060                           
  5061                           ;doprnt.c: 1420: } else
  5062  00113E  D015               	goto	l432
  5063  001140                     l2652:
  5064                           
  5065                           ;doprnt.c: 1422: {
  5066                           ;doprnt.c: 1424: if(width
  5067                           ;doprnt.c: 1428: )
  5068  001140  5048               	movf	sprintf@width,w,c
  5069  001142  1049               	iorwf	sprintf@width+1,w,c
  5070  001144  B4D8               	btfsc	status,2,c
  5071  001146  D011               	goto	l432
  5072  001148                     l2654:
  5073                           
  5074                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5075  001148  C034  FFD9         	movff	sprintf@sp,fsr2l
  5076  00114C  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  5077  001150  0E20               	movlw	32
  5078  001152  6EDF               	movwf	indf2,c
  5079  001154  4A34               	infsnz	sprintf@sp,f,c
  5080  001156  2A35               	incf	sprintf@sp+1,f,c
  5081                           
  5082                           ;doprnt.c: 1431: while(--width);
  5083  001158  0648               	decf	sprintf@width,f,c
  5084  00115A  A0D8               	btfss	status,0,c
  5085  00115C  0649               	decf	sprintf@width+1,f,c
  5086  00115E  5048               	movf	sprintf@width,w,c
  5087  001160  1049               	iorwf	sprintf@width+1,w,c
  5088  001162  B4D8               	btfsc	status,2,c
  5089  001164  D002               	goto	l432
  5090  001166  D7F0               	goto	l2654
  5091  001168  D000               	goto	l432
  5092  00116A                     l432:
  5093                           
  5094                           ;doprnt.c: 1469: }
  5095                           ;doprnt.c: 1472: prec = c;
  5096  00116A  C04A  F047         	movff	sprintf@c,sprintf@prec
  5097                           
  5098                           ;doprnt.c: 1474: while(prec--) {
  5099  00116E  D02A               	goto	l2666
  5100  001170                     l2660:
  5101                           
  5102                           ;doprnt.c: 1478: {
  5103                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5104  001170  5047               	movf	sprintf@prec,w,c
  5105  001172  0D02               	mullw	2
  5106  001174  0E01               	movlw	low _dpowers
  5107  001176  24F3               	addwf	prodl,w,c
  5108  001178  6EF6               	movwf	tblptrl,c
  5109  00117A  0E0F               	movlw	high _dpowers
  5110  00117C  20F4               	addwfc	prodh,w,c
  5111  00117E  6EF7               	movwf	tblptrh,c
  5112  001180                     	if	0	;There are less than 3 active tblptr bytes
  5113  001180                     	endif
  5114  001180  0009               	tblrd		*+
  5115  001182  CFF5 F02A          	movff	tablat,___lwdiv@divisor
  5116  001186  000A               	tblrd		*-
  5117  001188  CFF5 F02B          	movff	tablat,___lwdiv@divisor+1
  5118  00118C  C045  F028         	movff	sprintf@val,___lwdiv@dividend
  5119  001190  C046  F029         	movff	sprintf@val+1,___lwdiv@dividend+1
  5120  001194  ECF8  F00F         	call	___lwdiv	;wreg free
  5121  001198  C028  F02F         	movff	?___lwdiv,___lwmod@dividend
  5122  00119C  C029  F030         	movff	?___lwdiv+1,___lwmod@dividend+1
  5123  0011A0  0E00               	movlw	0
  5124  0011A2  6E32               	movwf	___lwmod@divisor+1,c
  5125  0011A4  0E0A               	movlw	10
  5126  0011A6  6E31               	movwf	___lwmod@divisor,c
  5127  0011A8  ECC9  F010         	call	___lwmod	;wreg free
  5128  0011AC  502F               	movf	?___lwmod,w,c
  5129  0011AE  0F30               	addlw	48
  5130  0011B0  6E4A               	movwf	sprintf@c,c
  5131                           
  5132                           ;doprnt.c: 1523: }
  5133                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5134  0011B2  C034  FFD9         	movff	sprintf@sp,fsr2l
  5135  0011B6  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  5136  0011BA  C04A  FFDF         	movff	sprintf@c,indf2
  5137  0011BE  4A34               	infsnz	sprintf@sp,f,c
  5138  0011C0  2A35               	incf	sprintf@sp+1,f,c
  5139  0011C2  D000               	goto	l2666
  5140  0011C4                     l2666:
  5141  0011C4  0647               	decf	sprintf@prec,f,c
  5142  0011C6  2847               	incf	sprintf@prec,w,c
  5143  0011C8  B4D8               	btfsc	status,2,c
  5144  0011CA  D002               	goto	l2668
  5145  0011CC  D7D1               	goto	l2660
  5146  0011CE  D000               	goto	l2668
  5147  0011D0                     l2668:
  5148  0011D0  C036  FFF6         	movff	sprintf@f,tblptrl
  5149  0011D4  C037  FFF7         	movff	sprintf@f+1,tblptrh
  5150  0011D8  4A36               	infsnz	sprintf@f,f,c
  5151  0011DA  2A37               	incf	sprintf@f+1,f,c
  5152  0011DC                     	if	0	;tblptru may be non-zero
  5153  0011DC                     	endif
  5154  0011DC                     	if	0	;tblptru may be non-zero
  5155  0011DC                     	endif
  5156  0011DC  0008               	tblrd		*
  5157  0011DE  CFF5 F04A          	movff	tablat,sprintf@c
  5158  0011E2  504A               	movf	sprintf@c,w,c
  5159  0011E4  B4D8               	btfsc	status,2,c
  5160  0011E6  D002               	goto	l2670
  5161  0011E8  D6DC               	goto	l2586
  5162  0011EA  D000               	goto	l2670
  5163  0011EC                     l2670:
  5164                           
  5165                           ;doprnt.c: 1538: *sp = 0;
  5166  0011EC  C034  FFD9         	movff	sprintf@sp,fsr2l
  5167  0011F0  C035  FFDA         	movff	sprintf@sp+1,fsr2h
  5168  0011F4  0E00               	movlw	0
  5169  0011F6  6EDF               	movwf	indf2,c
  5170  0011F8  0012               	return	
  5171                           
  5172                           ;doprnt.c: 1540: return 0;
  5173                           ;	Return value of _sprintf is never used
  5174  0011FA  0012               	return		;funcret
  5175  0011FC                     __end_of_sprintf:
  5176                           	opt stack 0
  5177                           tblptru	equ	0xFF8
  5178                           tblptrh	equ	0xFF7
  5179                           tblptrl	equ	0xFF6
  5180                           tablat	equ	0xFF5
  5181                           prodh	equ	0xFF4
  5182                           prodl	equ	0xFF3
  5183                           intcon	equ	0xFF2
  5184                           postinc0	equ	0xFEE
  5185                           wreg	equ	0xFE8
  5186                           indf1	equ	0xFE7
  5187                           postdec1	equ	0xFE5
  5188                           fsr1h	equ	0xFE2
  5189                           fsr1l	equ	0xFE1
  5190                           indf2	equ	0xFDF
  5191                           postinc2	equ	0xFDE
  5192                           postdec2	equ	0xFDD
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function _isdigit *****************
  5198 ;; Defined at:
  5199 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  c               1    wreg     unsigned char 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  c               1    2[COMRAM] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;		None               void
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5216 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5217 ;;Total ram usage:        3 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_sprintf
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text30
  5227  00242A                     __ptext30:
  5228                           	opt stack 0
  5229  00242A                     _isdigit:
  5230                           	opt stack 27
  5231                           
  5232                           ;incstack = 0
  5233                           ;isdigit@c stored from wreg
  5234  00242A  6E2A               	movwf	isdigit@c,c
  5235  00242C  0E00               	movlw	0
  5236  00242E  6E29               	movwf	_isdigit$2134,c
  5237  002430  0E3A               	movlw	58
  5238  002432  602A               	cpfslt	isdigit@c,c
  5239  002434  D006               	goto	l2398
  5240  002436  0E2F               	movlw	47
  5241  002438  642A               	cpfsgt	isdigit@c,c
  5242  00243A  D003               	goto	l2398
  5243  00243C  0E01               	movlw	1
  5244  00243E  6E29               	movwf	_isdigit$2134,c
  5245  002440  D000               	goto	l2398
  5246  002442                     l2398:
  5247  002442  C029  F028         	movff	_isdigit$2134,??_isdigit
  5248  002446  3028               	rrcf	??_isdigit,w,c
  5249  002448  0012               	return	
  5250  00244A  0012               	return		;funcret
  5251  00244C                     __end_of_isdigit:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           prodh	equ	0xFF4
  5258                           prodl	equ	0xFF3
  5259                           intcon	equ	0xFF2
  5260                           postinc0	equ	0xFEE
  5261                           wreg	equ	0xFE8
  5262                           indf1	equ	0xFE7
  5263                           postdec1	equ	0xFE5
  5264                           fsr1h	equ	0xFE2
  5265                           fsr1l	equ	0xFE1
  5266                           indf2	equ	0xFDF
  5267                           postinc2	equ	0xFDE
  5268                           postdec2	equ	0xFDD
  5269                           fsr2h	equ	0xFDA
  5270                           fsr2l	equ	0xFD9
  5271                           status	equ	0xFD8
  5272                           
  5273 ;; *************** function ___wmul *****************
  5274 ;; Defined at:
  5275 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  multiplier      2    0[COMRAM] unsigned int 
  5278 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  product         2    4[COMRAM] unsigned int 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  2    0[COMRAM] unsigned int 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0, prodl, prodh
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;Total ram usage:        6 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_sprintf
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text31
  5304  0023DE                     __ptext31:
  5305                           	opt stack 0
  5306  0023DE                     ___wmul:
  5307                           	opt stack 27
  5308                           
  5309                           ;incstack = 0
  5310  0023DE  5028               	movf	___wmul@multiplier,w,c
  5311  0023E0  022A               	mulwf	___wmul@multiplicand,c
  5312  0023E2  CFF3 F02C          	movff	prodl,___wmul@product
  5313  0023E6  CFF4 F02D          	movff	prodh,___wmul@product+1
  5314  0023EA  5028               	movf	___wmul@multiplier,w,c
  5315  0023EC  022B               	mulwf	___wmul@multiplicand+1,c
  5316  0023EE  50F3               	movf	prodl,w,c
  5317  0023F0  262D               	addwf	___wmul@product+1,f,c
  5318  0023F2  5029               	movf	___wmul@multiplier+1,w,c
  5319  0023F4  022A               	mulwf	___wmul@multiplicand,c
  5320  0023F6  50F3               	movf	prodl,w,c
  5321  0023F8  262D               	addwf	___wmul@product+1,f,c
  5322  0023FA  C02C  F028         	movff	___wmul@product,?___wmul
  5323  0023FE  C02D  F029         	movff	___wmul@product+1,?___wmul+1
  5324  002402  0012               	return	
  5325  002404  0012               	return		;funcret
  5326  002406                     __end_of___wmul:
  5327                           	opt stack 0
  5328                           tblptru	equ	0xFF8
  5329                           tblptrh	equ	0xFF7
  5330                           tblptrl	equ	0xFF6
  5331                           tablat	equ	0xFF5
  5332                           prodh	equ	0xFF4
  5333                           prodl	equ	0xFF3
  5334                           intcon	equ	0xFF2
  5335                           postinc0	equ	0xFEE
  5336                           wreg	equ	0xFE8
  5337                           indf1	equ	0xFE7
  5338                           postdec1	equ	0xFE5
  5339                           fsr1h	equ	0xFE2
  5340                           fsr1l	equ	0xFE1
  5341                           indf2	equ	0xFDF
  5342                           postinc2	equ	0xFDE
  5343                           postdec2	equ	0xFDD
  5344                           fsr2h	equ	0xFDA
  5345                           fsr2l	equ	0xFD9
  5346                           status	equ	0xFD8
  5347                           
  5348 ;; *************** function ___lwmod *****************
  5349 ;; Defined at:
  5350 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  dividend        2    7[COMRAM] unsigned int 
  5353 ;;  divisor         2    9[COMRAM] unsigned int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  counter         1   11[COMRAM] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  2    7[COMRAM] unsigned int 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5369 ;;Total ram usage:        5 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_sprintf
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text32
  5379  002192                     __ptext32:
  5380                           	opt stack 0
  5381  002192                     ___lwmod:
  5382                           	opt stack 27
  5383                           
  5384                           ;incstack = 0
  5385  002192  5031               	movf	___lwmod@divisor,w,c
  5386  002194  1032               	iorwf	___lwmod@divisor+1,w,c
  5387  002196  B4D8               	btfsc	status,2,c
  5388  002198  D01D               	goto	l1086
  5389  00219A  0E01               	movlw	1
  5390  00219C  6E33               	movwf	___lwmod@counter,c
  5391  00219E  D005               	goto	l2436
  5392  0021A0                     l2434:
  5393  0021A0  90D8               	bcf	status,0,c
  5394  0021A2  3631               	rlcf	___lwmod@divisor,f,c
  5395  0021A4  3632               	rlcf	___lwmod@divisor+1,f,c
  5396  0021A6  2A33               	incf	___lwmod@counter,f,c
  5397  0021A8  D000               	goto	l2436
  5398  0021AA                     l2436:
  5399  0021AA  BE32               	btfsc	___lwmod@divisor+1,7,c
  5400  0021AC  D002               	goto	l2438
  5401  0021AE  D7F8               	goto	l2434
  5402  0021B0  D000               	goto	l2438
  5403  0021B2                     l2438:
  5404  0021B2  5031               	movf	___lwmod@divisor,w,c
  5405  0021B4  5C2F               	subwf	___lwmod@dividend,w,c
  5406  0021B6  5032               	movf	___lwmod@divisor+1,w,c
  5407  0021B8  5830               	subwfb	___lwmod@dividend+1,w,c
  5408  0021BA  A0D8               	btfss	status,0,c
  5409  0021BC  D005               	goto	l2442
  5410  0021BE  5031               	movf	___lwmod@divisor,w,c
  5411  0021C0  5E2F               	subwf	___lwmod@dividend,f,c
  5412  0021C2  5032               	movf	___lwmod@divisor+1,w,c
  5413  0021C4  5A30               	subwfb	___lwmod@dividend+1,f,c
  5414  0021C6  D000               	goto	l2442
  5415  0021C8                     l2442:
  5416  0021C8  90D8               	bcf	status,0,c
  5417  0021CA  3232               	rrcf	___lwmod@divisor+1,f,c
  5418  0021CC  3231               	rrcf	___lwmod@divisor,f,c
  5419  0021CE  2E33               	decfsz	___lwmod@counter,f,c
  5420  0021D0  D7F0               	goto	l2438
  5421  0021D2  D000               	goto	l1086
  5422  0021D4                     l1086:
  5423  0021D4  C02F  F02F         	movff	___lwmod@dividend,?___lwmod
  5424  0021D8  C030  F030         	movff	___lwmod@dividend+1,?___lwmod+1
  5425  0021DC  0012               	return		;funcret
  5426  0021DE                     __end_of___lwmod:
  5427                           	opt stack 0
  5428                           tblptru	equ	0xFF8
  5429                           tblptrh	equ	0xFF7
  5430                           tblptrl	equ	0xFF6
  5431                           tablat	equ	0xFF5
  5432                           prodh	equ	0xFF4
  5433                           prodl	equ	0xFF3
  5434                           intcon	equ	0xFF2
  5435                           postinc0	equ	0xFEE
  5436                           wreg	equ	0xFE8
  5437                           indf1	equ	0xFE7
  5438                           postdec1	equ	0xFE5
  5439                           fsr1h	equ	0xFE2
  5440                           fsr1l	equ	0xFE1
  5441                           indf2	equ	0xFDF
  5442                           postinc2	equ	0xFDE
  5443                           postdec2	equ	0xFDD
  5444                           fsr2h	equ	0xFDA
  5445                           fsr2l	equ	0xFD9
  5446                           status	equ	0xFD8
  5447                           
  5448 ;; *************** function ___lwdiv *****************
  5449 ;; Defined at:
  5450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  dividend        2    0[COMRAM] unsigned int 
  5453 ;;  divisor         2    2[COMRAM] unsigned int 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  quotient        2    4[COMRAM] unsigned int 
  5456 ;;  counter         1    6[COMRAM] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  2    0[COMRAM] unsigned int 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5467 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;Total ram usage:        7 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_sprintf
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text33
  5480  001FF0                     __ptext33:
  5481                           	opt stack 0
  5482  001FF0                     ___lwdiv:
  5483                           	opt stack 27
  5484                           
  5485                           ;incstack = 0
  5486  001FF0  0E00               	movlw	0
  5487  001FF2  6E2D               	movwf	___lwdiv@quotient+1,c
  5488  001FF4  0E00               	movlw	0
  5489  001FF6  6E2C               	movwf	___lwdiv@quotient,c
  5490  001FF8  502A               	movf	___lwdiv@divisor,w,c
  5491  001FFA  102B               	iorwf	___lwdiv@divisor+1,w,c
  5492  001FFC  B4D8               	btfsc	status,2,c
  5493  001FFE  D021               	goto	l1076
  5494  002000  0E01               	movlw	1
  5495  002002  6E2E               	movwf	___lwdiv@counter,c
  5496  002004  D005               	goto	l2416
  5497  002006                     l2414:
  5498  002006  90D8               	bcf	status,0,c
  5499  002008  362A               	rlcf	___lwdiv@divisor,f,c
  5500  00200A  362B               	rlcf	___lwdiv@divisor+1,f,c
  5501  00200C  2A2E               	incf	___lwdiv@counter,f,c
  5502  00200E  D000               	goto	l2416
  5503  002010                     l2416:
  5504  002010  BE2B               	btfsc	___lwdiv@divisor+1,7,c
  5505  002012  D002               	goto	l2418
  5506  002014  D7F8               	goto	l2414
  5507  002016  D000               	goto	l2418
  5508  002018                     l2418:
  5509  002018  90D8               	bcf	status,0,c
  5510  00201A  362C               	rlcf	___lwdiv@quotient,f,c
  5511  00201C  362D               	rlcf	___lwdiv@quotient+1,f,c
  5512  00201E  502A               	movf	___lwdiv@divisor,w,c
  5513  002020  5C28               	subwf	___lwdiv@dividend,w,c
  5514  002022  502B               	movf	___lwdiv@divisor+1,w,c
  5515  002024  5829               	subwfb	___lwdiv@dividend+1,w,c
  5516  002026  A0D8               	btfss	status,0,c
  5517  002028  D006               	goto	l2426
  5518  00202A  502A               	movf	___lwdiv@divisor,w,c
  5519  00202C  5E28               	subwf	___lwdiv@dividend,f,c
  5520  00202E  502B               	movf	___lwdiv@divisor+1,w,c
  5521  002030  5A29               	subwfb	___lwdiv@dividend+1,f,c
  5522  002032  802C               	bsf	___lwdiv@quotient,0,c
  5523  002034  D000               	goto	l2426
  5524  002036                     l2426:
  5525  002036  90D8               	bcf	status,0,c
  5526  002038  322B               	rrcf	___lwdiv@divisor+1,f,c
  5527  00203A  322A               	rrcf	___lwdiv@divisor,f,c
  5528  00203C  2E2E               	decfsz	___lwdiv@counter,f,c
  5529  00203E  D7EC               	goto	l2418
  5530  002040  D000               	goto	l1076
  5531  002042                     l1076:
  5532  002042  C02C  F028         	movff	___lwdiv@quotient,?___lwdiv
  5533  002046  C02D  F029         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5534  00204A  0012               	return		;funcret
  5535  00204C                     __end_of___lwdiv:
  5536                           	opt stack 0
  5537                           tblptru	equ	0xFF8
  5538                           tblptrh	equ	0xFF7
  5539                           tblptrl	equ	0xFF6
  5540                           tablat	equ	0xFF5
  5541                           prodh	equ	0xFF4
  5542                           prodl	equ	0xFF3
  5543                           intcon	equ	0xFF2
  5544                           postinc0	equ	0xFEE
  5545                           wreg	equ	0xFE8
  5546                           indf1	equ	0xFE7
  5547                           postdec1	equ	0xFE5
  5548                           fsr1h	equ	0xFE2
  5549                           fsr1l	equ	0xFE1
  5550                           indf2	equ	0xFDF
  5551                           postinc2	equ	0xFDE
  5552                           postdec2	equ	0xFDD
  5553                           fsr2h	equ	0xFDA
  5554                           fsr2l	equ	0xFD9
  5555                           status	equ	0xFD8
  5556                           
  5557 ;; *************** function _check_home_callback *****************
  5558 ;; Defined at:
  5559 ;;		line 392 in file "main.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;		None               void
  5566 ;; Registers used:
  5567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5577 ;;Total ram usage:        0 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    7
  5580 ;; This function calls:
  5581 ;;		_activity_home
  5582 ;;		_reset_home_callback
  5583 ;; This function is called by:
  5584 ;;		_main
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text34
  5589  00244C                     __ptext34:
  5590                           	opt stack 0
  5591  00244C                     _check_home_callback:
  5592                           	opt stack 23
  5593                           
  5594                           ;main.c: 394: if(activity != 0){
  5595                           
  5596                           ;incstack = 0
  5597  00244C  5003               	movf	_activity,w,c
  5598  00244E  1004               	iorwf	_activity+1,w,c
  5599  002450  B4D8               	btfsc	status,2,c
  5600  002452  0012               	return	
  5601                           
  5602                           ;main.c: 396: home_callback--;
  5603  002454  0609               	decf	_home_callback,f,c
  5604  002456  A0D8               	btfss	status,0,c
  5605  002458  060A               	decf	_home_callback+1,f,c
  5606                           
  5607                           ;main.c: 398: if(home_callback == 0){
  5608  00245A  5009               	movf	_home_callback,w,c
  5609  00245C  100A               	iorwf	_home_callback+1,w,c
  5610  00245E  A4D8               	btfss	status,2,c
  5611  002460  0012               	return	
  5612                           
  5613                           ;main.c: 400: reset_home_callback();
  5614  002462  EC90  F012         	call	_reset_home_callback	;wreg free
  5615                           
  5616                           ;main.c: 402: activity_home();
  5617  002466  ECC6  F011         	call	_activity_home	;wreg free
  5618  00246A  0012               	return	
  5619  00246C  0012               	return		;funcret
  5620  00246E                     __end_of_check_home_callback:
  5621                           	opt stack 0
  5622                           tblptru	equ	0xFF8
  5623                           tblptrh	equ	0xFF7
  5624                           tblptrl	equ	0xFF6
  5625                           tablat	equ	0xFF5
  5626                           prodh	equ	0xFF4
  5627                           prodl	equ	0xFF3
  5628                           intcon	equ	0xFF2
  5629                           postinc0	equ	0xFEE
  5630                           wreg	equ	0xFE8
  5631                           indf1	equ	0xFE7
  5632                           postdec1	equ	0xFE5
  5633                           fsr1h	equ	0xFE2
  5634                           fsr1l	equ	0xFE1
  5635                           indf2	equ	0xFDF
  5636                           postinc2	equ	0xFDE
  5637                           postdec2	equ	0xFDD
  5638                           fsr2h	equ	0xFDA
  5639                           fsr2l	equ	0xFD9
  5640                           status	equ	0xFD8
  5641                           
  5642 ;; *************** function _reset_home_callback *****************
  5643 ;; Defined at:
  5644 ;;		line 94 in file "main.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;		None               void
  5651 ;; Registers used:
  5652 ;;		None
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_button_A
  5668 ;;		_button_B
  5669 ;;		_button_C
  5670 ;;		_button_D
  5671 ;;		_button_asterisk
  5672 ;;		_button_hash
  5673 ;;		_button_number
  5674 ;;		_check_home_callback
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text35
  5679  002520                     __ptext35:
  5680                           	opt stack 0
  5681  002520                     _reset_home_callback:
  5682                           	opt stack 28
  5683                           
  5684                           ;main.c: 96: home_callback = home_callback_delay;
  5685                           
  5686                           ;incstack = 0
  5687  002520  C00B  F009         	movff	_home_callback_delay,_home_callback
  5688  002524  C00C  F00A         	movff	_home_callback_delay+1,_home_callback+1
  5689  002528  0012               	return		;funcret
  5690  00252A                     __end_of_reset_home_callback:
  5691                           	opt stack 0
  5692                           tblptru	equ	0xFF8
  5693                           tblptrh	equ	0xFF7
  5694                           tblptrl	equ	0xFF6
  5695                           tablat	equ	0xFF5
  5696                           prodh	equ	0xFF4
  5697                           prodl	equ	0xFF3
  5698                           intcon	equ	0xFF2
  5699                           postinc0	equ	0xFEE
  5700                           wreg	equ	0xFE8
  5701                           indf1	equ	0xFE7
  5702                           postdec1	equ	0xFE5
  5703                           fsr1h	equ	0xFE2
  5704                           fsr1l	equ	0xFE1
  5705                           indf2	equ	0xFDF
  5706                           postinc2	equ	0xFDE
  5707                           postdec2	equ	0xFDD
  5708                           fsr2h	equ	0xFDA
  5709                           fsr2l	equ	0xFD9
  5710                           status	equ	0xFD8
  5711                           
  5712 ;; *************** function _activity_home *****************
  5713 ;; Defined at:
  5714 ;;		line 109 in file "main.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;		None               void
  5721 ;; Registers used:
  5722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5732 ;;Total ram usage:        0 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    6
  5735 ;; This function calls:
  5736 ;;		_lcd_init
  5737 ;;		_lcd_write
  5738 ;; This function is called by:
  5739 ;;		_button_D
  5740 ;;		_check_home_callback
  5741 ;;		_main
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text36
  5746  00238C                     __ptext36:
  5747                           	opt stack 0
  5748  00238C                     _activity_home:
  5749                           	opt stack 22
  5750                           
  5751                           ;main.c: 111: activity = 0;
  5752                           
  5753                           ;incstack = 0
  5754  00238C  0E00               	movlw	0
  5755  00238E  6E04               	movwf	_activity+1,c
  5756  002390  0E00               	movlw	0
  5757  002392  6E03               	movwf	_activity,c
  5758                           
  5759                           ;main.c: 112: lcd_init();
  5760  002394  ECCC  F00D         	call	_lcd_init	;wreg free
  5761                           
  5762                           ;main.c: 113: lcd_write(1,1,"X28");
  5763  002398  0E00               	movlw	0
  5764  00239A  6E33               	movwf	lcd_write@column+1,c
  5765  00239C  0E01               	movlw	1
  5766  00239E  6E32               	movwf	lcd_write@column,c
  5767  0023A0  0E00               	movlw	0
  5768  0023A2  6E35               	movwf	lcd_write@row+1,c
  5769  0023A4  0E01               	movlw	1
  5770  0023A6  6E34               	movwf	lcd_write@row,c
  5771  0023A8  0E82               	movlw	low STR_4
  5772  0023AA  6E36               	movwf	lcd_write@string,c
  5773  0023AC  0E0F               	movlw	high STR_4
  5774  0023AE  6E37               	movwf	lcd_write@string+1,c
  5775  0023B0  EC45  F012         	call	_lcd_write	;wreg free
  5776  0023B4  0012               	return		;funcret
  5777  0023B6                     __end_of_activity_home:
  5778                           	opt stack 0
  5779                           tblptru	equ	0xFF8
  5780                           tblptrh	equ	0xFF7
  5781                           tblptrl	equ	0xFF6
  5782                           tablat	equ	0xFF5
  5783                           prodh	equ	0xFF4
  5784                           prodl	equ	0xFF3
  5785                           intcon	equ	0xFF2
  5786                           postinc0	equ	0xFEE
  5787                           wreg	equ	0xFE8
  5788                           indf1	equ	0xFE7
  5789                           postdec1	equ	0xFE5
  5790                           fsr1h	equ	0xFE2
  5791                           fsr1l	equ	0xFE1
  5792                           indf2	equ	0xFDF
  5793                           postinc2	equ	0xFDE
  5794                           postdec2	equ	0xFDD
  5795                           fsr2h	equ	0xFDA
  5796                           fsr2l	equ	0xFD9
  5797                           status	equ	0xFD8
  5798                           
  5799 ;; *************** function _lcd_write *****************
  5800 ;; Defined at:
  5801 ;;		line 52 in file "main.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  column          2   10[COMRAM] int 
  5804 ;;  row             2   12[COMRAM] int 
  5805 ;;  string          2   14[COMRAM] PTR unsigned char 
  5806 ;;		 -> STR_34(5), STR_33(8), STR_32(7), STR_31(6), 
  5807 ;;		 -> STR_30(8), STR_29(4), STR_28(5), STR_27(6), 
  5808 ;;		 -> STR_26(6), STR_25(3), STR_24(3), STR_23(8), 
  5809 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  5810 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  5811 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  5812 ;;		 -> STR_10(7), STR_9(4), STR_8(6), STR_7(8), 
  5813 ;;		 -> STR_6(16), STR_4(4), buffer1(20), 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;		None               void
  5818 ;; Registers used:
  5819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5825 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5829 ;;Total ram usage:        6 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    5
  5832 ;; This function calls:
  5833 ;;		_lcd_gotoxy
  5834 ;;		_lcd_putrs
  5835 ;; This function is called by:
  5836 ;;		_home_clock_refresh
  5837 ;;		_activity_home
  5838 ;;		_activity_pin
  5839 ;;		_activity_menu
  5840 ;;		_action_menu_selector
  5841 ;;		_action_submenu_selector
  5842 ;;		_activity_submenu_activation
  5843 ;;		_activity_submenu_clock
  5844 ;;		_activity_submenu_pin
  5845 ;;		_activity_submenu_alarm
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text37
  5850  00248A                     __ptext37:
  5851                           	opt stack 0
  5852  00248A                     _lcd_write:
  5853                           	opt stack 21
  5854                           
  5855                           ;main.c: 53: lcd_gotoxy(column, row);
  5856                           
  5857                           ;incstack = 0
  5858  00248A  C034  F02C         	movff	lcd_write@row,lcd_gotoxy@y
  5859  00248E  5032               	movf	lcd_write@column,w,c
  5860  002490  EC03  F012         	call	_lcd_gotoxy
  5861                           
  5862                           ;main.c: 54: lcd_putrs(string);
  5863  002494  C036  F030         	movff	lcd_write@string,lcd_putrs@ptr
  5864  002498  C037  F031         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  5865  00249C  EC51  F010         	call	_lcd_putrs	;wreg free
  5866  0024A0  0012               	return		;funcret
  5867  0024A2                     __end_of_lcd_write:
  5868                           	opt stack 0
  5869                           tblptru	equ	0xFF8
  5870                           tblptrh	equ	0xFF7
  5871                           tblptrl	equ	0xFF6
  5872                           tablat	equ	0xFF5
  5873                           prodh	equ	0xFF4
  5874                           prodl	equ	0xFF3
  5875                           intcon	equ	0xFF2
  5876                           postinc0	equ	0xFEE
  5877                           wreg	equ	0xFE8
  5878                           indf1	equ	0xFE7
  5879                           postdec1	equ	0xFE5
  5880                           fsr1h	equ	0xFE2
  5881                           fsr1l	equ	0xFE1
  5882                           indf2	equ	0xFDF
  5883                           postinc2	equ	0xFDE
  5884                           postdec2	equ	0xFDD
  5885                           fsr2h	equ	0xFDA
  5886                           fsr2l	equ	0xFD9
  5887                           status	equ	0xFD8
  5888                           
  5889 ;; *************** function _lcd_putrs *****************
  5890 ;; Defined at:
  5891 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  5894 ;;		 -> STR_36(2), STR_35(2), STR_34(5), STR_33(8), 
  5895 ;;		 -> STR_32(7), STR_31(6), STR_30(8), STR_29(4), 
  5896 ;;		 -> STR_28(5), STR_27(6), STR_26(6), STR_25(3), 
  5897 ;;		 -> STR_24(3), STR_23(8), STR_22(2), STR_21(2), 
  5898 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
  5899 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  5900 ;;		 -> STR_12(2), STR_11(2), STR_10(7), STR_9(4), 
  5901 ;;		 -> STR_8(6), STR_7(8), STR_6(16), STR_4(4), 
  5902 ;;		 -> buffer1(20), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;		None               void
  5907 ;; Registers used:
  5908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5918 ;;Total ram usage:        2 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; Hardware stack levels required when called:    4
  5921 ;; This function calls:
  5922 ;;		_lcd_putc
  5923 ;; This function is called by:
  5924 ;;		_lcd_write
  5925 ;;		_button_asterisk
  5926 ;;		_button_number
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text38
  5931  0020A2                     __ptext38:
  5932                           	opt stack 0
  5933  0020A2                     _lcd_putrs:
  5934                           	opt stack 24
  5935                           
  5936                           ;unmc_lcd_216.c: 223: while(*ptr){
  5937                           
  5938                           ;incstack = 0
  5939  0020A2  D015               	goto	l2300
  5940  0020A4                     l2296:
  5941                           
  5942                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  5943  0020A4  C030  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5944  0020A8  C031  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5945  0020AC  6AF8               	clrf	tblptru,c
  5946  0020AE  0E0E               	movlw	(high __ramtop+-1)
  5947  0020B0  64F7               	cpfsgt	tblptrh,c
  5948  0020B2  D003               	bra	u1297
  5949  0020B4  0008               	tblrd		*
  5950  0020B6  50F5               	movf	tablat,w,c
  5951  0020B8  D005               	bra	u1290
  5952  0020BA                     u1297:
  5953  0020BA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5954  0020BE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5955  0020C2  50EF               	movf	indf0,w,c
  5956  0020C4                     u1290:
  5957  0020C4  ECEF  F010         	call	_lcd_putc
  5958  0020C8  4A30               	infsnz	lcd_putrs@ptr,f,c
  5959  0020CA  2A31               	incf	lcd_putrs@ptr+1,f,c
  5960  0020CC  D000               	goto	l2300
  5961  0020CE                     l2300:
  5962  0020CE  C030  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5963  0020D2  C031  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5964  0020D6  6AF8               	clrf	tblptru,c
  5965  0020D8  0E0E               	movlw	(high __ramtop+-1)
  5966  0020DA  64F7               	cpfsgt	tblptrh,c
  5967  0020DC  D003               	bra	u1307
  5968  0020DE  0008               	tblrd		*
  5969  0020E0  50F5               	movf	tablat,w,c
  5970  0020E2  D005               	bra	u1300
  5971  0020E4                     u1307:
  5972  0020E4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5973  0020E8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5974  0020EC  50EF               	movf	indf0,w,c
  5975  0020EE                     u1300:
  5976  0020EE  0900               	iorlw	0
  5977  0020F0  A4D8               	btfss	status,2,c
  5978  0020F2  D7D8               	goto	l2296
  5979  0020F4  0012               	return		;funcret
  5980  0020F6                     __end_of_lcd_putrs:
  5981                           	opt stack 0
  5982                           tblptru	equ	0xFF8
  5983                           tblptrh	equ	0xFF7
  5984                           tblptrl	equ	0xFF6
  5985                           tablat	equ	0xFF5
  5986                           prodh	equ	0xFF4
  5987                           prodl	equ	0xFF3
  5988                           intcon	equ	0xFF2
  5989                           indf0	equ	0xFEF
  5990                           postinc0	equ	0xFEE
  5991                           fsr0h	equ	0xFEA
  5992                           fsr0l	equ	0xFE9
  5993                           wreg	equ	0xFE8
  5994                           indf1	equ	0xFE7
  5995                           postdec1	equ	0xFE5
  5996                           fsr1h	equ	0xFE2
  5997                           fsr1l	equ	0xFE1
  5998                           indf2	equ	0xFDF
  5999                           postinc2	equ	0xFDE
  6000                           postdec2	equ	0xFDD
  6001                           fsr2h	equ	0xFDA
  6002                           fsr2l	equ	0xFD9
  6003                           status	equ	0xFD8
  6004                           
  6005 ;; *************** function _lcd_putc *****************
  6006 ;; Defined at:
  6007 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  c               1    wreg     unsigned char 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  c               1    7[COMRAM] unsigned char 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;		None               void
  6014 ;; Registers used:
  6015 ;;		wreg, status,2, status,0, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;Total ram usage:        1 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    3
  6028 ;; This function calls:
  6029 ;;		_lcd_gotoxy
  6030 ;;		_lcd_send_byte
  6031 ;; This function is called by:
  6032 ;;		_lcd_putrs
  6033 ;;		_lcd_puts
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text39
  6038  0021DE                     __ptext39:
  6039                           	opt stack 0
  6040  0021DE                     _lcd_putc:
  6041                           	opt stack 24
  6042                           
  6043                           ;incstack = 0
  6044                           ;lcd_putc@c stored from wreg
  6045  0021DE  6E2F               	movwf	lcd_putc@c,c
  6046                           
  6047                           ;unmc_lcd_216.c: 173: switch(c){
  6048  0021E0  D018               	goto	l2288
  6049  0021E2                     l2278:
  6050                           
  6051                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  6052  0021E2  0E01               	movlw	1
  6053  0021E4  6E2A               	movwf	lcd_send_byte@n,c
  6054  0021E6  0E00               	movlw	0
  6055  0021E8  ECAD  F011         	call	_lcd_send_byte
  6056                           
  6057                           ;unmc_lcd_216.c: 176: break;
  6058  0021EC  0012               	return	
  6059  0021EE                     l2280:
  6060                           
  6061                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  6062  0021EE  0E02               	movlw	2
  6063  0021F0  6E2C               	movwf	lcd_gotoxy@y,c
  6064  0021F2  0E01               	movlw	1
  6065  0021F4  EC03  F012         	call	_lcd_gotoxy
  6066                           
  6067                           ;unmc_lcd_216.c: 179: break;
  6068  0021F8  0012               	return	
  6069  0021FA                     l2282:
  6070                           
  6071                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  6072  0021FA  0E10               	movlw	16
  6073  0021FC  6E2A               	movwf	lcd_send_byte@n,c
  6074  0021FE  0E00               	movlw	0
  6075  002200  ECAD  F011         	call	_lcd_send_byte
  6076                           
  6077                           ;unmc_lcd_216.c: 182: break;
  6078  002204  0012               	return	
  6079  002206                     l2284:
  6080                           
  6081                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  6082  002206  C02F  F02A         	movff	lcd_putc@c,lcd_send_byte@n
  6083  00220A  0E01               	movlw	1
  6084  00220C  ECAD  F011         	call	_lcd_send_byte
  6085                           
  6086                           ;unmc_lcd_216.c: 186: }
  6087                           
  6088                           ;unmc_lcd_216.c: 185: break;
  6089  002210  0012               	return	
  6090  002212                     l2288:
  6091  002212  502F               	movf	lcd_putc@c,w,c
  6092                           
  6093                           ; Switch size 1, requested type "space"
  6094                           ; Number of cases is 3, Range of values is 8 to 12
  6095                           ; switch strategies available:
  6096                           ; Name         Instructions Cycles
  6097                           ; simple_byte           10     6 (average)
  6098                           ;	Chosen strategy is simple_byte
  6099  002214  0A08               	xorlw	8	; case 8
  6100  002216  B4D8               	btfsc	status,2,c
  6101  002218  D7F0               	goto	l2282
  6102  00221A  0A02               	xorlw	2	; case 10
  6103  00221C  B4D8               	btfsc	status,2,c
  6104  00221E  D7E7               	goto	l2280
  6105  002220  0A06               	xorlw	6	; case 12
  6106  002222  B4D8               	btfsc	status,2,c
  6107  002224  D7DE               	goto	l2278
  6108  002226  D7EF               	goto	l2284
  6109  002228  0012               	return		;funcret
  6110  00222A                     __end_of_lcd_putc:
  6111                           	opt stack 0
  6112                           tblptru	equ	0xFF8
  6113                           tblptrh	equ	0xFF7
  6114                           tblptrl	equ	0xFF6
  6115                           tablat	equ	0xFF5
  6116                           prodh	equ	0xFF4
  6117                           prodl	equ	0xFF3
  6118                           intcon	equ	0xFF2
  6119                           indf0	equ	0xFEF
  6120                           postinc0	equ	0xFEE
  6121                           fsr0h	equ	0xFEA
  6122                           fsr0l	equ	0xFE9
  6123                           wreg	equ	0xFE8
  6124                           indf1	equ	0xFE7
  6125                           postdec1	equ	0xFE5
  6126                           fsr1h	equ	0xFE2
  6127                           fsr1l	equ	0xFE1
  6128                           indf2	equ	0xFDF
  6129                           postinc2	equ	0xFDE
  6130                           postdec2	equ	0xFDD
  6131                           fsr2h	equ	0xFDA
  6132                           fsr2l	equ	0xFD9
  6133                           status	equ	0xFD8
  6134                           
  6135 ;; *************** function _lcd_gotoxy *****************
  6136 ;; Defined at:
  6137 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  x               1    wreg     unsigned char 
  6140 ;;  y               1    4[COMRAM] unsigned char 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  x               1    5[COMRAM] unsigned char 
  6143 ;;  address         1    6[COMRAM] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;		None               void
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6157 ;;Total ram usage:        3 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    2
  6160 ;; This function calls:
  6161 ;;		_lcd_send_byte
  6162 ;; This function is called by:
  6163 ;;		_lcd_write
  6164 ;;		_activity_pin
  6165 ;;		_lcd_putc
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text40
  6170  002406                     __ptext40:
  6171                           	opt stack 0
  6172  002406                     _lcd_gotoxy:
  6173                           	opt stack 24
  6174                           
  6175                           ;incstack = 0
  6176                           ;lcd_gotoxy@x stored from wreg
  6177  002406  6E2D               	movwf	lcd_gotoxy@x,c
  6178                           
  6179                           ;unmc_lcd_216.c: 159: int8 address;
  6180                           ;unmc_lcd_216.c: 161: if(y != 1)
  6181  002408  042C               	decf	lcd_gotoxy@y,w,c
  6182  00240A  B4D8               	btfsc	status,2,c
  6183  00240C  D002               	goto	l2270
  6184                           
  6185                           ;unmc_lcd_216.c: 162: address = 0x40;
  6186  00240E  0E40               	movlw	64
  6187  002410  D001               	goto	L1
  6188  002412                     l2270:
  6189                           
  6190                           ;unmc_lcd_216.c: 163: else
  6191                           ;unmc_lcd_216.c: 164: address=0;
  6192  002412  0E00               	movlw	0
  6193  002414                     L1:
  6194  002414  6E2E               	movwf	lcd_gotoxy@address,c
  6195  002416  D000               	goto	l2272
  6196  002418                     l2272:
  6197                           
  6198                           ;unmc_lcd_216.c: 166: address += x-1;
  6199  002418  042D               	decf	lcd_gotoxy@x,w,c
  6200  00241A  262E               	addwf	lcd_gotoxy@address,f,c
  6201                           
  6202                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  6203  00241C  502E               	movf	lcd_gotoxy@address,w,c
  6204  00241E  0980               	iorlw	128
  6205  002420  6E2A               	movwf	lcd_send_byte@n,c
  6206  002422  0E00               	movlw	0
  6207  002424  ECAD  F011         	call	_lcd_send_byte
  6208  002428  0012               	return		;funcret
  6209  00242A                     __end_of_lcd_gotoxy:
  6210                           	opt stack 0
  6211                           tblptru	equ	0xFF8
  6212                           tblptrh	equ	0xFF7
  6213                           tblptrl	equ	0xFF6
  6214                           tablat	equ	0xFF5
  6215                           prodh	equ	0xFF4
  6216                           prodl	equ	0xFF3
  6217                           intcon	equ	0xFF2
  6218                           indf0	equ	0xFEF
  6219                           postinc0	equ	0xFEE
  6220                           fsr0h	equ	0xFEA
  6221                           fsr0l	equ	0xFE9
  6222                           wreg	equ	0xFE8
  6223                           indf1	equ	0xFE7
  6224                           postdec1	equ	0xFE5
  6225                           fsr1h	equ	0xFE2
  6226                           fsr1l	equ	0xFE1
  6227                           indf2	equ	0xFDF
  6228                           postinc2	equ	0xFDE
  6229                           postdec2	equ	0xFDD
  6230                           fsr2h	equ	0xFDA
  6231                           fsr2l	equ	0xFD9
  6232                           status	equ	0xFD8
  6233                           
  6234 ;; *************** function _lcd_init *****************
  6235 ;; Defined at:
  6236 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;		None
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  i               1    4[COMRAM] unsigned char 
  6241 ;; Return value:  Size  Location     Type
  6242 ;;		None               void
  6243 ;; Registers used:
  6244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;Total ram usage:        1 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; Hardware stack levels required when called:    2
  6257 ;; This function calls:
  6258 ;;		_Delay1KTCYx
  6259 ;;		_lcd_send_byte
  6260 ;;		_lcd_send_nibble
  6261 ;; This function is called by:
  6262 ;;		_setup
  6263 ;;		_activity_home
  6264 ;;		_activity_pin
  6265 ;;		_activity_menu
  6266 ;;		_activity_submenu_activation
  6267 ;;		_activity_submenu_clock
  6268 ;;		_activity_submenu_pin
  6269 ;;		_activity_submenu_alarm
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text41
  6274  001B98                     __ptext41:
  6275                           	opt stack 0
  6276  001B98                     _lcd_init:
  6277                           	opt stack 27
  6278                           
  6279                           ;unmc_lcd_216.c: 120: int8 i;
  6280                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  6281                           
  6282                           ;incstack = 0
  6283  001B98  9693               	bcf	3987,3,c	;volatile
  6284                           
  6285                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  6286  001B9A  9493               	bcf	3987,2,c	;volatile
  6287                           
  6288                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  6289  001B9C  968A               	bcf	3978,3,c	;volatile
  6290                           
  6291                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  6292  001B9E  948A               	bcf	3978,2,c	;volatile
  6293                           
  6294                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  6295  001BA0  9893               	bcf	3987,4,c	;volatile
  6296                           
  6297                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  6298  001BA2  9A93               	bcf	3987,5,c	;volatile
  6299                           
  6300                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  6301  001BA4  9C93               	bcf	3987,6,c	;volatile
  6302                           
  6303                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  6304  001BA6  9E93               	bcf	3987,7,c	;volatile
  6305                           
  6306                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  6307  001BA8  0E0A               	movlw	10
  6308  001BAA  EC76  F012         	call	_Delay1KTCYx
  6309                           
  6310                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  6311  001BAE  0E0A               	movlw	10
  6312  001BB0  EC76  F012         	call	_Delay1KTCYx
  6313                           
  6314                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  6315  001BB4  0E0A               	movlw	10
  6316  001BB6  EC76  F012         	call	_Delay1KTCYx
  6317                           
  6318                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  6319  001BBA  0E00               	movlw	0
  6320  001BBC  6E2C               	movwf	lcd_init@i,c
  6321  001BBE                     l2312:
  6322  001BBE  0E02               	movlw	2
  6323  001BC0  642C               	cpfsgt	lcd_init@i,c
  6324  001BC2  D001               	goto	l2316
  6325  001BC4  D008               	goto	l2322
  6326  001BC6                     l2316:
  6327                           
  6328                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  6329  001BC6  0E03               	movlw	3
  6330  001BC8  EC89  F00E         	call	_lcd_send_nibble
  6331                           
  6332                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  6333  001BCC  0E0A               	movlw	10
  6334  001BCE  EC76  F012         	call	_Delay1KTCYx
  6335  001BD2  2A2C               	incf	lcd_init@i,f,c
  6336  001BD4  D7F4               	goto	l2312
  6337  001BD6                     l2322:
  6338                           
  6339                           ;unmc_lcd_216.c: 146: }
  6340                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  6341  001BD6  0E02               	movlw	2
  6342  001BD8  EC89  F00E         	call	_lcd_send_nibble
  6343                           
  6344                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  6345  001BDC  0E00               	movlw	0
  6346  001BDE  6E2C               	movwf	lcd_init@i,c
  6347  001BE0  0E03               	movlw	3
  6348  001BE2  642C               	cpfsgt	lcd_init@i,c
  6349  001BE4  D002               	goto	l2330
  6350  001BE6  0012               	return	
  6351  001BE8  0012               	return	
  6352  001BEA                     l2330:
  6353                           
  6354                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  6355  001BEA  502C               	movf	lcd_init@i,w,c
  6356  001BEC  0D01               	mullw	1
  6357  001BEE  0E0B               	movlw	low _LCD_INIT_STRING
  6358  001BF0  24F3               	addwf	prodl,w,c
  6359  001BF2  6EF6               	movwf	tblptrl,c
  6360  001BF4  0E0F               	movlw	high _LCD_INIT_STRING
  6361  001BF6  20F4               	addwfc	prodh,w,c
  6362  001BF8  6EF7               	movwf	tblptrh,c
  6363  001BFA                     	if	0	;There are less than 3 active tblptr bytes
  6364  001BFA                     	endif
  6365  001BFA  0008               	tblrd		*
  6366  001BFC  CFF5 F02A          	movff	tablat,lcd_send_byte@n
  6367  001C00  0E00               	movlw	0
  6368  001C02  ECAD  F011         	call	_lcd_send_byte
  6369                           
  6370                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  6371  001C06  0E0A               	movlw	10
  6372  001C08  EC76  F012         	call	_Delay1KTCYx
  6373  001C0C  2A2C               	incf	lcd_init@i,f,c
  6374  001C0E  0E03               	movlw	3
  6375  001C10  642C               	cpfsgt	lcd_init@i,c
  6376  001C12  D7EB               	goto	l2330
  6377  001C14  0012               	return	
  6378  001C16  0012               	return		;funcret
  6379  001C18                     __end_of_lcd_init:
  6380                           	opt stack 0
  6381                           tblptru	equ	0xFF8
  6382                           tblptrh	equ	0xFF7
  6383                           tblptrl	equ	0xFF6
  6384                           tablat	equ	0xFF5
  6385                           prodh	equ	0xFF4
  6386                           prodl	equ	0xFF3
  6387                           intcon	equ	0xFF2
  6388                           indf0	equ	0xFEF
  6389                           postinc0	equ	0xFEE
  6390                           fsr0h	equ	0xFEA
  6391                           fsr0l	equ	0xFE9
  6392                           wreg	equ	0xFE8
  6393                           indf1	equ	0xFE7
  6394                           postdec1	equ	0xFE5
  6395                           fsr1h	equ	0xFE2
  6396                           fsr1l	equ	0xFE1
  6397                           indf2	equ	0xFDF
  6398                           postinc2	equ	0xFDE
  6399                           postdec2	equ	0xFDD
  6400                           fsr2h	equ	0xFDA
  6401                           fsr2l	equ	0xFD9
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _lcd_send_byte *****************
  6405 ;; Defined at:
  6406 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  address         1    wreg     unsigned char 
  6409 ;;  n               1    2[COMRAM] unsigned char 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  address         1    3[COMRAM] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;		None               void
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6421 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;Total ram usage:        2 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    1
  6428 ;; This function calls:
  6429 ;;		_Delay100TCYx
  6430 ;;		_lcd_send_nibble
  6431 ;; This function is called by:
  6432 ;;		_lcd_init
  6433 ;;		_lcd_gotoxy
  6434 ;;		_lcd_putc
  6435 ;;		_lcd_comand
  6436 ;;		_lcd_setcursor_vb
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text42
  6441  00235A                     __ptext42:
  6442                           	opt stack 0
  6443  00235A                     _lcd_send_byte:
  6444                           	opt stack 27
  6445                           
  6446                           ;incstack = 0
  6447                           ;lcd_send_byte@address stored from wreg
  6448  00235A  6E2B               	movwf	lcd_send_byte@address,c
  6449                           
  6450                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  6451  00235C  968A               	bcf	3978,3,c	;volatile
  6452                           
  6453                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  6454  00235E  0E02               	movlw	2
  6455  002360  EC6D  F012         	call	_Delay100TCYx
  6456                           
  6457                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  6458  002364  9893               	bcf	3987,4,c	;volatile
  6459                           
  6460                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  6461  002366  9A93               	bcf	3987,5,c	;volatile
  6462                           
  6463                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  6464  002368  9C93               	bcf	3987,6,c	;volatile
  6465                           
  6466                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  6467  00236A  9E93               	bcf	3987,7,c	;volatile
  6468                           
  6469                           ;unmc_lcd_216.c: 101: if(address)
  6470  00236C  502B               	movf	lcd_send_byte@address,w,c
  6471  00236E  B4D8               	btfsc	status,2,c
  6472  002370  D002               	goto	l353
  6473                           
  6474                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  6475  002372  868A               	bsf	3978,3,c	;volatile
  6476  002374  D001               	goto	l354
  6477  002376                     l353:
  6478                           
  6479                           ;unmc_lcd_216.c: 103: else
  6480                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  6481  002376  968A               	bcf	3978,3,c	;volatile
  6482  002378                     l354:
  6483                           
  6484                           ;unmc_lcd_216.c: 106: __nop();
  6485  002378  F000               	nop	
  6486                           
  6487                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  6488  00237A  382A               	swapf	lcd_send_byte@n,w,c
  6489  00237C  0B0F               	andlw	15
  6490  00237E  EC89  F00E         	call	_lcd_send_nibble
  6491                           
  6492                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  6493  002382  502A               	movf	lcd_send_byte@n,w,c
  6494  002384  0B0F               	andlw	15
  6495  002386  EC89  F00E         	call	_lcd_send_nibble
  6496  00238A  0012               	return		;funcret
  6497  00238C                     __end_of_lcd_send_byte:
  6498                           	opt stack 0
  6499                           tblptru	equ	0xFF8
  6500                           tblptrh	equ	0xFF7
  6501                           tblptrl	equ	0xFF6
  6502                           tablat	equ	0xFF5
  6503                           prodh	equ	0xFF4
  6504                           prodl	equ	0xFF3
  6505                           intcon	equ	0xFF2
  6506                           indf0	equ	0xFEF
  6507                           postinc0	equ	0xFEE
  6508                           fsr0h	equ	0xFEA
  6509                           fsr0l	equ	0xFE9
  6510                           wreg	equ	0xFE8
  6511                           indf1	equ	0xFE7
  6512                           postdec1	equ	0xFE5
  6513                           fsr1h	equ	0xFE2
  6514                           fsr1l	equ	0xFE1
  6515                           indf2	equ	0xFDF
  6516                           postinc2	equ	0xFDE
  6517                           postdec2	equ	0xFDD
  6518                           fsr2h	equ	0xFDA
  6519                           fsr2l	equ	0xFD9
  6520                           status	equ	0xFD8
  6521                           
  6522 ;; *************** function _lcd_send_nibble *****************
  6523 ;; Defined at:
  6524 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  nibble          1    wreg     unsigned char 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  nibble          1    1[COMRAM] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;		None               void
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;Total ram usage:        2 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; This function calls:
  6545 ;;		Nothing
  6546 ;; This function is called by:
  6547 ;;		_lcd_send_byte
  6548 ;;		_lcd_init
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text43
  6553  001D12                     __ptext43:
  6554                           	opt stack 0
  6555  001D12                     _lcd_send_nibble:
  6556                           	opt stack 28
  6557                           
  6558                           ;incstack = 0
  6559                           ;lcd_send_nibble@nibble stored from wreg
  6560  001D12  6E29               	movwf	lcd_send_nibble@nibble,c
  6561                           
  6562                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  6563  001D14  A029               	btfss	lcd_send_nibble@nibble,0,c
  6564  001D16  D003               	goto	u1190
  6565  001D18  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6566  001D1A  2A28               	incf	??_lcd_send_nibble& (0+255),f,c
  6567  001D1C  D001               	goto	u1208
  6568  001D1E                     u1190:
  6569  001D1E  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6570  001D20                     u1208:
  6571  001D20  3A28               	swapf	??_lcd_send_nibble,f,c
  6572  001D22  508A               	movf	3978,w,c	;volatile
  6573  001D24  1828               	xorwf	??_lcd_send_nibble,w,c
  6574  001D26  0BEF               	andlw	-17
  6575  001D28  1828               	xorwf	??_lcd_send_nibble,w,c
  6576  001D2A  6E8A               	movwf	3978,c	;volatile
  6577                           
  6578                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  6579  001D2C  A229               	btfss	lcd_send_nibble@nibble,1,c
  6580  001D2E  D003               	goto	u1210
  6581  001D30  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6582  001D32  2A28               	incf	??_lcd_send_nibble& (0+255),f,c
  6583  001D34  D001               	goto	u1228
  6584  001D36                     u1210:
  6585  001D36  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6586  001D38                     u1228:
  6587  001D38  3A28               	swapf	??_lcd_send_nibble,f,c
  6588  001D3A  4628               	rlncf	??_lcd_send_nibble,f,c
  6589  001D3C  508A               	movf	3978,w,c	;volatile
  6590  001D3E  1828               	xorwf	??_lcd_send_nibble,w,c
  6591  001D40  0BDF               	andlw	-33
  6592  001D42  1828               	xorwf	??_lcd_send_nibble,w,c
  6593  001D44  6E8A               	movwf	3978,c	;volatile
  6594                           
  6595                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  6596  001D46  A429               	btfss	lcd_send_nibble@nibble,2,c
  6597  001D48  D003               	goto	u1230
  6598  001D4A  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6599  001D4C  2A28               	incf	??_lcd_send_nibble& (0+255),f,c
  6600  001D4E  D001               	goto	u1248
  6601  001D50                     u1230:
  6602  001D50  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6603  001D52                     u1248:
  6604  001D52  3A28               	swapf	??_lcd_send_nibble,f,c
  6605  001D54  4628               	rlncf	??_lcd_send_nibble,f,c
  6606  001D56  4628               	rlncf	??_lcd_send_nibble,f,c
  6607  001D58  508A               	movf	3978,w,c	;volatile
  6608  001D5A  1828               	xorwf	??_lcd_send_nibble,w,c
  6609  001D5C  0BBF               	andlw	-65
  6610  001D5E  1828               	xorwf	??_lcd_send_nibble,w,c
  6611  001D60  6E8A               	movwf	3978,c	;volatile
  6612                           
  6613                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  6614  001D62  A629               	btfss	lcd_send_nibble@nibble,3,c
  6615  001D64  D003               	goto	u1250
  6616  001D66  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6617  001D68  2A28               	incf	??_lcd_send_nibble& (0+255),f,c
  6618  001D6A  D001               	goto	u1268
  6619  001D6C                     u1250:
  6620  001D6C  6A28               	clrf	??_lcd_send_nibble& (0+255),c
  6621  001D6E                     u1268:
  6622  001D6E  3228               	rrcf	??_lcd_send_nibble,f,c
  6623  001D70  3228               	rrcf	??_lcd_send_nibble,f,c
  6624  001D72  508A               	movf	3978,w,c	;volatile
  6625  001D74  1828               	xorwf	??_lcd_send_nibble,w,c
  6626  001D76  0B7F               	andlw	-129
  6627  001D78  1828               	xorwf	??_lcd_send_nibble,w,c
  6628  001D7A  6E8A               	movwf	3978,c	;volatile
  6629                           
  6630                           ;unmc_lcd_216.c: 32: __nop();
  6631  001D7C  F000               	nop	
  6632                           
  6633                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  6634  001D7E  848A               	bsf	3978,2,c	;volatile
  6635                           
  6636                           ;unmc_lcd_216.c: 34: __nop();__nop();
  6637  001D80  F000               	nop	
  6638  001D82  F000               	nop	
  6639                           
  6640                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  6641  001D84  948A               	bcf	3978,2,c	;volatile
  6642  001D86  0012               	return		;funcret
  6643  001D88                     __end_of_lcd_send_nibble:
  6644                           	opt stack 0
  6645                           tblptru	equ	0xFF8
  6646                           tblptrh	equ	0xFF7
  6647                           tblptrl	equ	0xFF6
  6648                           tablat	equ	0xFF5
  6649                           prodh	equ	0xFF4
  6650                           prodl	equ	0xFF3
  6651                           intcon	equ	0xFF2
  6652                           indf0	equ	0xFEF
  6653                           postinc0	equ	0xFEE
  6654                           fsr0h	equ	0xFEA
  6655                           fsr0l	equ	0xFE9
  6656                           wreg	equ	0xFE8
  6657                           indf1	equ	0xFE7
  6658                           postdec1	equ	0xFE5
  6659                           fsr1h	equ	0xFE2
  6660                           fsr1l	equ	0xFE1
  6661                           indf2	equ	0xFDF
  6662                           postinc2	equ	0xFDE
  6663                           postdec2	equ	0xFDD
  6664                           fsr2h	equ	0xFDA
  6665                           fsr2l	equ	0xFD9
  6666                           status	equ	0xFD8
  6667                           
  6668 ;; *************** function _Delay100TCYx *****************
  6669 ;; Defined at:
  6670 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  unit            1    wreg     unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  unit            1    0[COMRAM] unsigned char 
  6675 ;; Return value:  Size  Location     Type
  6676 ;;		None               void
  6677 ;; Registers used:
  6678 ;;		wreg
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6688 ;;Total ram usage:        1 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_lcd_send_byte
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text44
  6698  0024DA                     __ptext44:
  6699                           	opt stack 0
  6700  0024DA                     _Delay100TCYx:
  6701                           	opt stack 27
  6702                           
  6703                           ;incstack = 0
  6704                           ;Delay100TCYx@unit stored from wreg
  6705  0024DA  6E28               	movwf	Delay100TCYx@unit,c
  6706  0024DC  0E21               	movlw	33
  6707  0024DE                     u2387:
  6708  0024DE  2EE8               	decfsz	wreg,f,c
  6709  0024E0  D7FE               	goto	u2387
  6710  0024E2  F000               	nop	
  6711  0024E4  2E28               	decfsz	Delay100TCYx@unit,f,c
  6712  0024E6  D7FA               	goto	l2244
  6713  0024E8  0012               	return	
  6714  0024EA  0012               	return		;funcret
  6715  0024EC                     __end_of_Delay100TCYx:
  6716                           	opt stack 0
  6717                           tblptru	equ	0xFF8
  6718                           tblptrh	equ	0xFF7
  6719                           tblptrl	equ	0xFF6
  6720                           tablat	equ	0xFF5
  6721                           prodh	equ	0xFF4
  6722                           prodl	equ	0xFF3
  6723                           intcon	equ	0xFF2
  6724                           indf0	equ	0xFEF
  6725                           postinc0	equ	0xFEE
  6726                           fsr0h	equ	0xFEA
  6727                           fsr0l	equ	0xFE9
  6728                           wreg	equ	0xFE8
  6729                           indf1	equ	0xFE7
  6730                           postdec1	equ	0xFE5
  6731                           fsr1h	equ	0xFE2
  6732                           fsr1l	equ	0xFE1
  6733                           indf2	equ	0xFDF
  6734                           postinc2	equ	0xFDE
  6735                           postdec2	equ	0xFDD
  6736                           fsr2h	equ	0xFDA
  6737                           fsr2l	equ	0xFD9
  6738                           status	equ	0xFD8
  6739                           
  6740 ;; *************** function _Delay1KTCYx *****************
  6741 ;; Defined at:
  6742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  unit            1    wreg     unsigned char 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  unit            1    0[COMRAM] unsigned char 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;		None               void
  6749 ;; Registers used:
  6750 ;;		wreg
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;Total ram usage:        1 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_lcd_init
  6766 ;;		_DelayPORXLCD
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text45
  6771  0024EC                     __ptext45:
  6772                           	opt stack 0
  6773  0024EC                     _Delay1KTCYx:
  6774                           	opt stack 28
  6775                           
  6776                           ;incstack = 0
  6777                           ;Delay1KTCYx@unit stored from wreg
  6778  0024EC  6E28               	movwf	Delay1KTCYx@unit,c
  6779  0024EE  0EFA               	movlw	250
  6780  0024F0                     u2397:
  6781  0024F0  F000               	nop	
  6782  0024F2  2EE8               	decfsz	wreg,f,c
  6783  0024F4  D7FD               	goto	u2397
  6784  0024F6  2E28               	decfsz	Delay1KTCYx@unit,f,c
  6785  0024F8  D7FA               	goto	l2290
  6786  0024FA  0012               	return	
  6787  0024FC  0012               	return		;funcret
  6788  0024FE                     __end_of_Delay1KTCYx:
  6789                           	opt stack 0
  6790                           tblptru	equ	0xFF8
  6791                           tblptrh	equ	0xFF7
  6792                           tblptrl	equ	0xFF6
  6793                           tablat	equ	0xFF5
  6794                           prodh	equ	0xFF4
  6795                           prodl	equ	0xFF3
  6796                           intcon	equ	0xFF2
  6797                           indf0	equ	0xFEF
  6798                           postinc0	equ	0xFEE
  6799                           fsr0h	equ	0xFEA
  6800                           fsr0l	equ	0xFE9
  6801                           wreg	equ	0xFE8
  6802                           indf1	equ	0xFE7
  6803                           postdec1	equ	0xFE5
  6804                           fsr1h	equ	0xFE2
  6805                           fsr1l	equ	0xFE1
  6806                           indf2	equ	0xFDF
  6807                           postinc2	equ	0xFDE
  6808                           postdec2	equ	0xFDD
  6809                           fsr2h	equ	0xFDA
  6810                           fsr2l	equ	0xFD9
  6811                           status	equ	0xFD8
  6812                           
  6813 ;; *************** function _Read_RTC *****************
  6814 ;; Defined at:
  6815 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;		None               void
  6822 ;; Registers used:
  6823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6833 ;;Total ram usage:        0 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    1
  6836 ;; This function calls:
  6837 ;;		_RtccReadDate
  6838 ;;		_RtccReadTime
  6839 ;; This function is called by:
  6840 ;;		_main
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text46
  6845  001850                     __ptext46:
  6846                           	opt stack 0
  6847  001850                     _Read_RTC:
  6848                           	opt stack 29
  6849                           
  6850                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  6851                           
  6852                           ;incstack = 0
  6853  001850  0E24               	movlw	low _RtccTime
  6854  001852  6E28               	movwf	RtccReadTime@pTm,c
  6855  001854  0E00               	movlw	high _RtccTime
  6856  001856  6E29               	movwf	RtccReadTime@pTm+1,c
  6857  001858  ECFD  F00E         	call	_RtccReadTime	;wreg free
  6858                           
  6859                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  6860  00185C  5025               	movf	_RtccTime+1,w,c
  6861  00185E  0B0F               	andlw	15
  6862  001860  6E5E               	movwf	_segundo_u,c
  6863                           
  6864                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  6865  001862  3825               	swapf	_RtccTime+1,w,c
  6866  001864  0B0F               	andlw	15
  6867  001866  0B0F               	andlw	15
  6868  001868  6E5D               	movwf	_segundo_d,c
  6869                           
  6870                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  6871  00186A  5026               	movf	_RtccTime+2,w,c
  6872  00186C  0B0F               	andlw	15
  6873  00186E  6E5C               	movwf	_minuto_u,c
  6874                           
  6875                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  6876  001870  3826               	swapf	_RtccTime+2,w,c
  6877  001872  0B0F               	andlw	15
  6878  001874  0B0F               	andlw	15
  6879  001876  6E5B               	movwf	_minuto_d,c
  6880                           
  6881                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  6882  001878  5027               	movf	_RtccTime+3,w,c
  6883  00187A  0B0F               	andlw	15
  6884  00187C  6E59               	movwf	_hora_u,c
  6885                           
  6886                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  6887  00187E  3827               	swapf	_RtccTime+3,w,c
  6888  001880  0B0F               	andlw	15
  6889  001882  0B0F               	andlw	15
  6890  001884  6E58               	movwf	_hora_d,c
  6891                           
  6892                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  6893  001886  0E20               	movlw	low _RtccDate
  6894  001888  6E28               	movwf	RtccReadDate@pDt,c
  6895  00188A  0E00               	movlw	high _RtccDate
  6896  00188C  6E29               	movwf	RtccReadDate@pDt+1,c
  6897  00188E  EC85  F00D         	call	_RtccReadDate	;wreg free
  6898                           
  6899                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  6900  001892  5021               	movf	_RtccDate+1,w,c
  6901  001894  0B0F               	andlw	15
  6902  001896  0100               	movlb	0	; () banked
  6903  001898  6F9C               	movwf	_fecha_u& (0+255),b
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  6907  00189A  3821               	swapf	_RtccDate+1,w,c
  6908  00189C  0B0F               	andlw	15
  6909  00189E  0B0F               	andlw	15
  6910  0018A0  6E57               	movwf	_fecha_d,c
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  6914  0018A2  5022               	movf	_RtccDate+2,w,c
  6915  0018A4  0B0F               	andlw	15
  6916  0018A6  0100               	movlb	0	; () banked
  6917  0018A8  6F9D               	movwf	_mes_u& (0+255),b
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  6921  0018AA  3822               	swapf	_RtccDate+2,w,c
  6922  0018AC  0B0F               	andlw	15
  6923  0018AE  0B0F               	andlw	15
  6924  0018B0  6E5A               	movwf	_mes_d,c
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  6928  0018B2  C020  F09B         	movff	_RtccDate,_dia_semana
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  6932  0018B6  5023               	movf	_RtccDate+3,w,c
  6933  0018B8  0B0F               	andlw	15
  6934  0018BA  0100               	movlb	0	; () banked
  6935  0018BC  6F9A               	movwf	_anio_u& (0+255),b
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  6939  0018BE  3823               	swapf	_RtccDate+3,w,c
  6940  0018C0  0B0F               	andlw	15
  6941  0018C2  0B0F               	andlw	15
  6942  0018C4  6E56               	movwf	_anio_d,c
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  6946  0018C6  505D               	movf	_segundo_d,w,c
  6947  0018C8  0D0A               	mullw	10
  6948  0018CA  505E               	movf	_segundo_u,w,c
  6949  0018CC  24F3               	addwf	prodl,w,c
  6950  0018CE  6E19               	movwf	_segundo,c
  6951  0018D0  0E00               	movlw	0
  6952  0018D2  20F4               	addwfc	prodh,w,c
  6953  0018D4  6E1A               	movwf	_segundo+1,c
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  6957  0018D6  505B               	movf	_minuto_d,w,c
  6958  0018D8  0D0A               	mullw	10
  6959  0018DA  505C               	movf	_minuto_u,w,c
  6960  0018DC  24F3               	addwf	prodl,w,c
  6961  0018DE  6E17               	movwf	_minuto,c
  6962  0018E0  0E00               	movlw	0
  6963  0018E2  20F4               	addwfc	prodh,w,c
  6964  0018E4  6E18               	movwf	_minuto+1,c
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  6968  0018E6  5058               	movf	_hora_d,w,c
  6969  0018E8  0D0A               	mullw	10
  6970  0018EA  5059               	movf	_hora_u,w,c
  6971  0018EC  24F3               	addwf	prodl,w,c
  6972  0018EE  6E52               	movwf	_hora,c
  6973  0018F0  0E00               	movlw	0
  6974  0018F2  20F4               	addwfc	prodh,w,c
  6975  0018F4  6E53               	movwf	_hora+1,c
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  6979  0018F6  5057               	movf	_fecha_d,w,c
  6980  0018F8  0D0A               	mullw	10
  6981  0018FA  0100               	movlb	0	; () banked
  6982  0018FC  519C               	movf	_fecha_u& (0+255),w,b
  6983  0018FE  24F3               	addwf	prodl,w,c
  6984  001900  6E4E               	movwf	_dia,c
  6985  001902  0100               	movlb	0	; () banked
  6986  001904  0E00               	movlw	0
  6987  001906  20F4               	addwfc	prodh,w,c
  6988  001908  6E4F               	movwf	_dia+1,c
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  6992  00190A  C09B  F050         	movff	_dia_semana,_diasem
  6993  00190E  6A51               	clrf	_diasem+1,c
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  6997  001910  505A               	movf	_mes_d,w,c
  6998  001912  0D0A               	mullw	10
  6999  001914  0100               	movlb	0	; () banked
  7000  001916  519D               	movf	_mes_u& (0+255),w,b
  7001  001918  24F3               	addwf	prodl,w,c
  7002  00191A  6E54               	movwf	_mes,c
  7003  00191C  0100               	movlb	0	; () banked
  7004  00191E  0E00               	movlw	0
  7005  001920  20F4               	addwfc	prodh,w,c
  7006  001922  6E55               	movwf	_mes+1,c
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  7010  001924  5056               	movf	_anio_d,w,c
  7011  001926  0D0A               	mullw	10
  7012  001928  0100               	movlb	0	; () banked
  7013  00192A  519A               	movf	_anio_u& (0+255),w,b
  7014  00192C  24F3               	addwf	prodl,w,c
  7015  00192E  6E4C               	movwf	_anio,c
  7016  001930  0100               	movlb	0	; () banked
  7017  001932  0E00               	movlw	0
  7018  001934  20F4               	addwfc	prodh,w,c
  7019  001936  6E4D               	movwf	_anio+1,c
  7020                           
  7021                           ; BSR set to: 0
  7022  001938  0012               	return		;funcret
  7023  00193A                     __end_of_Read_RTC:
  7024                           	opt stack 0
  7025                           tblptru	equ	0xFF8
  7026                           tblptrh	equ	0xFF7
  7027                           tblptrl	equ	0xFF6
  7028                           tablat	equ	0xFF5
  7029                           prodh	equ	0xFF4
  7030                           prodl	equ	0xFF3
  7031                           intcon	equ	0xFF2
  7032                           indf0	equ	0xFEF
  7033                           postinc0	equ	0xFEE
  7034                           fsr0h	equ	0xFEA
  7035                           fsr0l	equ	0xFE9
  7036                           wreg	equ	0xFE8
  7037                           indf1	equ	0xFE7
  7038                           postdec1	equ	0xFE5
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           indf2	equ	0xFDF
  7042                           postinc2	equ	0xFDE
  7043                           postdec2	equ	0xFDD
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function _RtccReadTime *****************
  7049 ;; Defined at:
  7050 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  pTm             2    0[COMRAM] PTR struct .
  7053 ;;		 -> RtccTime(4), 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  rTD0            8   10[COMRAM] struct .
  7056 ;;  rTD1            8    2[COMRAM] struct .
  7057 ;; Return value:  Size  Location     Type
  7058 ;;		None               void
  7059 ;; Registers used:
  7060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7070 ;;Total ram usage:       18 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_Read_RTC
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text47
  7080  001DFA                     __ptext47:
  7081                           	opt stack 0
  7082  001DFA                     _RtccReadTime:
  7083                           	opt stack 29
  7084  001DFA  0EFC               	movlw	252
  7085  001DFC  010F               	movlb	15	; () banked
  7086  001DFE  173F               	andwf	63,f,b	;volatile
  7087                           
  7088                           ; BSR set to: 15
  7089  001E00  010F               	movlb	15	; () banked
  7090  001E02  813F               	bsf	63,0,b	;volatile
  7091                           
  7092                           ; BSR set to: 15
  7093  001E04  CF98 F036          	movff	3992,RtccReadTime@rTD0+4	;volatile
  7094                           
  7095                           ; BSR set to: 15
  7096  001E08  CF99 F037          	movff	3993,RtccReadTime@rTD0+5	;volatile
  7097                           
  7098                           ; BSR set to: 15
  7099  001E0C  CF98 F038          	movff	3992,RtccReadTime@rTD0+6	;volatile
  7100                           
  7101                           ; BSR set to: 15
  7102  001E10  CF99 F039          	movff	3993,RtccReadTime@rTD0+7	;volatile
  7103                           
  7104                           ; BSR set to: 15
  7105  001E14  0EFC               	movlw	252
  7106  001E16  010F               	movlb	15	; () banked
  7107  001E18  173F               	andwf	63,f,b	;volatile
  7108  001E1A  010F               	movlb	15	; () banked
  7109  001E1C  813F               	bsf	63,0,b	;volatile
  7110                           
  7111                           ; BSR set to: 15
  7112  001E1E  CF98 F02E          	movff	3992,RtccReadTime@rTD1+4	;volatile
  7113                           
  7114                           ; BSR set to: 15
  7115  001E22  CF99 F02F          	movff	3993,RtccReadTime@rTD1+5	;volatile
  7116                           
  7117                           ; BSR set to: 15
  7118  001E26  CF98 F030          	movff	3992,RtccReadTime@rTD1+6	;volatile
  7119                           
  7120                           ; BSR set to: 15
  7121  001E2A  CF99 F031          	movff	3993,RtccReadTime@rTD1+7	;volatile
  7122                           
  7123                           ; BSR set to: 15
  7124  001E2E  5030               	movf	RtccReadTime@rTD1+6,w,c
  7125  001E30  1838               	xorwf	RtccReadTime@rTD0+6,w,c
  7126  001E32  A4D8               	btfss	status,2,c
  7127  001E34  D7E2               	goto	l2888
  7128                           
  7129                           ; BSR set to: 15
  7130                           
  7131                           ; BSR set to: 15
  7132  001E36  EE20 F003          	lfsr	2,3
  7133  001E3A  5028               	movf	RtccReadTime@pTm,w,c
  7134  001E3C  26D9               	addwf	fsr2l,f,c
  7135  001E3E  5029               	movf	RtccReadTime@pTm+1,w,c
  7136  001E40  22DA               	addwfc	fsr2h,f,c
  7137  001E42  C036  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  7138  001E46  EE20 F002          	lfsr	2,2
  7139  001E4A  5028               	movf	RtccReadTime@pTm,w,c
  7140  001E4C  26D9               	addwf	fsr2l,f,c
  7141  001E4E  5029               	movf	RtccReadTime@pTm+1,w,c
  7142  001E50  22DA               	addwfc	fsr2h,f,c
  7143  001E52  C039  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  7144  001E56  EE20 F001          	lfsr	2,1
  7145  001E5A  5028               	movf	RtccReadTime@pTm,w,c
  7146  001E5C  26D9               	addwf	fsr2l,f,c
  7147  001E5E  5029               	movf	RtccReadTime@pTm+1,w,c
  7148  001E60  22DA               	addwfc	fsr2h,f,c
  7149  001E62  C038  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  7150                           
  7151                           ; BSR set to: 15
  7152  001E66  0012               	return		;funcret
  7153  001E68                     __end_of_RtccReadTime:
  7154                           	opt stack 0
  7155                           tblptru	equ	0xFF8
  7156                           tblptrh	equ	0xFF7
  7157                           tblptrl	equ	0xFF6
  7158                           tablat	equ	0xFF5
  7159                           prodh	equ	0xFF4
  7160                           prodl	equ	0xFF3
  7161                           intcon	equ	0xFF2
  7162                           indf0	equ	0xFEF
  7163                           postinc0	equ	0xFEE
  7164                           fsr0h	equ	0xFEA
  7165                           fsr0l	equ	0xFE9
  7166                           wreg	equ	0xFE8
  7167                           indf1	equ	0xFE7
  7168                           postdec1	equ	0xFE5
  7169                           fsr1h	equ	0xFE2
  7170                           fsr1l	equ	0xFE1
  7171                           indf2	equ	0xFDF
  7172                           postinc2	equ	0xFDE
  7173                           postdec2	equ	0xFDD
  7174                           fsr2h	equ	0xFDA
  7175                           fsr2l	equ	0xFD9
  7176                           status	equ	0xFD8
  7177                           
  7178 ;; *************** function _RtccReadDate *****************
  7179 ;; Defined at:
  7180 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  pDt             2    0[COMRAM] PTR struct .
  7183 ;;		 -> RtccDate(4), 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  rTD0            8   10[COMRAM] struct .
  7186 ;;  rTD1            8    2[COMRAM] struct .
  7187 ;; Return value:  Size  Location     Type
  7188 ;;		None               void
  7189 ;; Registers used:
  7190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7197 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7199 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7200 ;;Total ram usage:       18 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_Read_RTC
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text48
  7210  001B0A                     __ptext48:
  7211                           	opt stack 0
  7212  001B0A                     _RtccReadDate:
  7213                           	opt stack 29
  7214  001B0A  0EFC               	movlw	252
  7215  001B0C  010F               	movlb	15	; () banked
  7216  001B0E  173F               	andwf	63,f,b	;volatile
  7217  001B10  0E03               	movlw	3
  7218  001B12  010F               	movlb	15	; () banked
  7219  001B14  133F               	iorwf	63,f,b	;volatile
  7220                           
  7221                           ; BSR set to: 15
  7222  001B16  CF98 F032          	movff	3992,RtccReadDate@rTD0	;volatile
  7223                           
  7224                           ; BSR set to: 15
  7225  001B1A  CF99 F033          	movff	3993,RtccReadDate@rTD0+1	;volatile
  7226                           
  7227                           ; BSR set to: 15
  7228  001B1E  CF98 F034          	movff	3992,RtccReadDate@rTD0+2	;volatile
  7229                           
  7230                           ; BSR set to: 15
  7231  001B22  CF99 F035          	movff	3993,RtccReadDate@rTD0+3	;volatile
  7232                           
  7233                           ; BSR set to: 15
  7234  001B26  CF98 F036          	movff	3992,RtccReadDate@rTD0+4	;volatile
  7235                           
  7236                           ; BSR set to: 15
  7237  001B2A  CF99 F037          	movff	3993,RtccReadDate@rTD0+5	;volatile
  7238  001B2E  0EFC               	movlw	252
  7239  001B30  010F               	movlb	15	; () banked
  7240  001B32  173F               	andwf	63,f,b	;volatile
  7241  001B34  0E03               	movlw	3
  7242  001B36  010F               	movlb	15	; () banked
  7243  001B38  133F               	iorwf	63,f,b	;volatile
  7244                           
  7245                           ; BSR set to: 15
  7246  001B3A  CF98 F02A          	movff	3992,RtccReadDate@rTD1	;volatile
  7247                           
  7248                           ; BSR set to: 15
  7249  001B3E  CF99 F02B          	movff	3993,RtccReadDate@rTD1+1	;volatile
  7250                           
  7251                           ; BSR set to: 15
  7252  001B42  CF98 F02C          	movff	3992,RtccReadDate@rTD1+2	;volatile
  7253                           
  7254                           ; BSR set to: 15
  7255  001B46  CF99 F02D          	movff	3993,RtccReadDate@rTD1+3	;volatile
  7256                           
  7257                           ; BSR set to: 15
  7258  001B4A  CF98 F02E          	movff	3992,RtccReadDate@rTD1+4	;volatile
  7259                           
  7260                           ; BSR set to: 15
  7261  001B4E  CF99 F02F          	movff	3993,RtccReadDate@rTD1+5	;volatile
  7262  001B52  502C               	movf	RtccReadDate@rTD1+2,w,c
  7263  001B54  1834               	xorwf	RtccReadDate@rTD0+2,w,c
  7264  001B56  A4D8               	btfss	status,2,c
  7265  001B58  D7D8               	goto	l2914
  7266                           
  7267                           ; BSR set to: 15
  7268                           
  7269                           ; BSR set to: 15
  7270  001B5A  EE20 F001          	lfsr	2,1
  7271  001B5E  5028               	movf	RtccReadDate@pDt,w,c
  7272  001B60  26D9               	addwf	fsr2l,f,c
  7273  001B62  5029               	movf	RtccReadDate@pDt+1,w,c
  7274  001B64  22DA               	addwfc	fsr2h,f,c
  7275  001B66  C034  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  7276  001B6A  EE20 F002          	lfsr	2,2
  7277  001B6E  5028               	movf	RtccReadDate@pDt,w,c
  7278  001B70  26D9               	addwf	fsr2l,f,c
  7279  001B72  5029               	movf	RtccReadDate@pDt+1,w,c
  7280  001B74  22DA               	addwfc	fsr2h,f,c
  7281  001B76  C035  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  7282                           
  7283                           ; BSR set to: 15
  7284  001B7A  C028  FFD9         	movff	RtccReadDate@pDt,fsr2l
  7285  001B7E  C029  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  7286  001B82  C037  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  7287                           
  7288                           ; BSR set to: 15
  7289  001B86  EE20 F003          	lfsr	2,3
  7290  001B8A  5028               	movf	RtccReadDate@pDt,w,c
  7291  001B8C  26D9               	addwf	fsr2l,f,c
  7292  001B8E  5029               	movf	RtccReadDate@pDt+1,w,c
  7293  001B90  22DA               	addwfc	fsr2h,f,c
  7294  001B92  C032  FFDF         	movff	RtccReadDate@rTD0,indf2
  7295                           
  7296                           ; BSR set to: 15
  7297  001B96  0012               	return		;funcret
  7298  001B98                     __end_of_RtccReadDate:
  7299                           	opt stack 0
  7300                           tblptru	equ	0xFF8
  7301                           tblptrh	equ	0xFF7
  7302                           tblptrl	equ	0xFF6
  7303                           tablat	equ	0xFF5
  7304                           prodh	equ	0xFF4
  7305                           prodl	equ	0xFF3
  7306                           intcon	equ	0xFF2
  7307                           indf0	equ	0xFEF
  7308                           postinc0	equ	0xFEE
  7309                           fsr0h	equ	0xFEA
  7310                           fsr0l	equ	0xFE9
  7311                           wreg	equ	0xFE8
  7312                           indf1	equ	0xFE7
  7313                           postdec1	equ	0xFE5
  7314                           fsr1h	equ	0xFE2
  7315                           fsr1l	equ	0xFE1
  7316                           indf2	equ	0xFDF
  7317                           postinc2	equ	0xFDE
  7318                           postdec2	equ	0xFDD
  7319                           fsr2h	equ	0xFDA
  7320                           fsr2l	equ	0xFD9
  7321                           status	equ	0xFD8
  7322                           tblptru	equ	0xFF8
  7323                           tblptrh	equ	0xFF7
  7324                           tblptrl	equ	0xFF6
  7325                           tablat	equ	0xFF5
  7326                           prodh	equ	0xFF4
  7327                           prodl	equ	0xFF3
  7328                           intcon	equ	0xFF2
  7329                           indf0	equ	0xFEF
  7330                           postinc0	equ	0xFEE
  7331                           fsr0h	equ	0xFEA
  7332                           fsr0l	equ	0xFE9
  7333                           wreg	equ	0xFE8
  7334                           indf1	equ	0xFE7
  7335                           postdec1	equ	0xFE5
  7336                           fsr1h	equ	0xFE2
  7337                           fsr1l	equ	0xFE1
  7338                           indf2	equ	0xFDF
  7339                           postinc2	equ	0xFDE
  7340                           postdec2	equ	0xFDD
  7341                           fsr2h	equ	0xFDA
  7342                           fsr2l	equ	0xFD9
  7343                           status	equ	0xFD8
  7344                           
  7345                           	psect	rparam
  7346  0000                     tblptru	equ	0xFF8
  7347                           tblptrh	equ	0xFF7
  7348                           tblptrl	equ	0xFF6
  7349                           tablat	equ	0xFF5
  7350                           prodh	equ	0xFF4
  7351                           prodl	equ	0xFF3
  7352                           intcon	equ	0xFF2
  7353                           indf0	equ	0xFEF
  7354                           postinc0	equ	0xFEE
  7355                           fsr0h	equ	0xFEA
  7356                           fsr0l	equ	0xFE9
  7357                           wreg	equ	0xFE8
  7358                           indf1	equ	0xFE7
  7359                           postdec1	equ	0xFE5
  7360                           fsr1h	equ	0xFE2
  7361                           fsr1l	equ	0xFE1
  7362                           indf2	equ	0xFDF
  7363                           postinc2	equ	0xFDE
  7364                           postdec2	equ	0xFDD
  7365                           fsr2h	equ	0xFDA
  7366                           fsr2l	equ	0xFD9
  7367                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    14
    Data        10
    BSS         97
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      95
    BANK0           160      0      62
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[1]), STR_1(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_38(CODE[5]), STR_37(CODE[5]), STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[5]), STR_33(CODE[8]), 
		 -> STR_32(CODE[7]), STR_31(CODE[6]), STR_30(CODE[8]), STR_29(CODE[4]), 
		 -> STR_28(CODE[5]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[8]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[7]), STR_9(CODE[4]), 
		 -> STR_8(CODE[6]), STR_7(CODE[8]), STR_6(CODE[16]), STR_4(CODE[4]), 
		 -> buffer1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    lcd_write@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_34(CODE[5]), STR_33(CODE[8]), STR_32(CODE[7]), STR_31(CODE[6]), 
		 -> STR_30(CODE[8]), STR_29(CODE[4]), STR_28(CODE[5]), STR_27(CODE[6]), 
		 -> STR_26(CODE[6]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[8]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[7]), STR_9(CODE[4]), STR_8(CODE[6]), STR_7(CODE[8]), 
		 -> STR_6(CODE[16]), STR_4(CODE[4]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _button_hash->_pin_input_validator
    _button_asterisk->_lcd_putrs
    _activity_menu->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_clock->_lcd_write
    _activity_submenu_alarm->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_action_menu_selector
    _button_A->_action_submenu_selector
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _action_submenu_selector->_lcd_write
    _action_menu_selector->_lcd_write
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  151928
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4102
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  116143
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    4252
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   21698
                _pin_input_validator
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  2     2      0   21698
                                             16 COMRAM     2     2      0
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0    1854
                          _lcd_putrs
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0    9797
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0    9797
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0   39188
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
             _activity_submenu_alarm
             _activity_submenu_clock
               _activity_submenu_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_pin                                 0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_clock                               0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_alarm                               0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_activation                          0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   29557
                                             18 COMRAM     2     2      0
               _action_menu_selector
            _action_submenu_selector
                       _activity_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   11659
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     331
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _action_submenu_selector                              2     2      0    8949
                                             16 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _action_menu_selector                                 2     2      0    8949
                                             16 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   11121
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2172
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0    9797
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _activity_home                                        0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6    8949
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1854
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1553
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1     885
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _keyboard_control
     _button_A
       _action_menu_selector
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _action_submenu_selector
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_B
       _activity_submenu_activation
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_alarm
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_clock
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_pin
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_C
       _activity_menu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
     _button_hash
       _pin_input_validator
         _activity_menu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _reset_home_callback
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3E       5       38.8%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9D       6        0.0%
DATA                 0      0      9D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 13 22:29:27 2016

              ??_action_menu_selector 0038                                     _a 0001  
                                   _b 0005                                     _c 0007  
                                   _i 000D                                     _j 000F  
                                   _k 0011                        ?_lcd_send_byte 002A  
                        ___awdiv@sign 002D                   ___wmul@multiplicand 002A  
                         lcd_comand@d 002C                          __CFG_CP0$OFF 000000  
                     lcd_write@column 0032                                   l300 142E  
                                 l311 1470                                   l303 1444  
                                 l320 1490                                   l312 146C  
                                 l304 1440                                   l315 1482  
                                 l307 145E                                   l316 147E  
                                 l308 145A                                   l260 136A  
                                 l271 13A4                                   l263 1380  
                                 l432 116A                                   l280 13CC  
                                 l272 13A0                                   l264 137C  
                                 l353 2376                                   l354 2378  
                                 l291 140E                                   l283 13E2  
                                 l275 13BE                                   l267 1392  
                                 l259 136E                                   l292 140A  
                                 l284 13DE                                   l276 13BA  
                                 l268 138E                                   l295 1420  
                                 l287 13F4                                   l279 13D0  
                                 l296 141C                                   l288 13F0  
                                 l299 1432                 ??_check_home_callback 0038  
                                 _dia 004E                                   _key 001F  
                                 _mes 0054                                   _pin 0090  
                     lcd_write@string 0036                                   wreg 000FE8  
                     RtccReadDate@pDt 0028                           lcd_gotoxy@x 002D  
                         lcd_gotoxy@y 002C                     ??_button_asterisk 0032  
                                l2300 20CE                                  l1076 2042  
                                l1086 21D4                                  l2312 1BBE  
                                l3016 1DD0                                  l2330 1BEA  
                                l2322 1BD6                                  l2244 24DC  
                                l2316 1BC6                                  l2270 2412  
                                l2414 2006                                  l2342 2332  
                                l2502 1838                                  l2272 2418  
                                l2280 21EE                                  l2416 2010  
                                l2600 0FEA                                  l2344 233C  
                                l2290 24EE                                  l2282 21FA  
                                l2426 2036                                  l2418 2018  
                                l2442 21C8                                  l2434 21A0  
                                l2522 1660                                  l2506 1844  
                                l2284 2206                                  l2436 21AA  
                                l2612 106C                                  l2604 1008  
                                l2700 12DC                                  l2380 20F8  
                                l2532 16AE                                  l2460 17AC  
                                l2278 21E2                                  l2438 21B2  
                                l2382 2102                                  l2470 17DC  
                                l2454 1782                                  l2288 2212  
                                l2296 20A4                                  l2640 1108  
                                l2632 10E0                                  l2624 10B0  
                                l2616 1072                                  l3168 1498  
                                l2528 169A                                  l2464 17C0  
                                l2642 1112                                  l2618 1094  
                                l2722 197E                                  l2730 19C0  
                                l2386 2136                                  l2570 1720  
                                l2538 16CA                                  l2802 19F8  
                                l3186 23C0                                  l2660 1170  
                                l2652 1140                                  l2636 10E4  
                                l2628 10BC                                  l2708 1326  
                                l2716 193C                                  l2398 2442  
                                l2654 1148                                  l2646 111E  
                                l2670 11EC                                  l2574 172C  
                                l2814 1A20                                  l2830 1A5C  
                                l2592 0FBC                                  l2816 1A2A  
                                l2808 1A0A                                  l2914 1B0A  
                                l2666 11C4                                  l2594 0FCA  
                                l2586 0FA2                                  l2682 11FE  
                                l2578 1738                                  l2498 182C  
                                l2834 1A6C                                  l2826 1A50  
                                l2818 1A32                                  l2668 11D0  
                                l2598 0FD4                                  l2694 1292  
                                l2950 22C2                                  l2782 2320  
                                l2790 224C                                  l2688 1248  
                                l2952 22C8                                  l2792 2256  
                                l2970 2062                                  l2786 2234  
                                l2948 22BC                                  l2956 22CE  
                                l2972 2068                                  l2788 223A  
                                l2974 206E                                  l2888 1DFA  
                                l2968 205C                                  l2978 2074  
                                STR_1 0F6E                                  STR_2 0F1F  
                                STR_3 0F2E                                  STR_4 0F82  
                                STR_5 0F91                                  STR_6 0F0F  
                                STR_7 0F4D                                  STR_8 0F62  
                                STR_9 0F86                                  u1210 1D36  
                                u1300 20EE                                  u1230 1D50  
                                u1208 1D20                                  u1250 1D6C  
                                u1307 20E4                                  u1228 1D38  
                                u1190 1D1E                                  u1248 1D52  
                                u1290 20C4                                  u1268 1D6E  
                                u1297 20BA                                  u2377 149E  
                                u2387 24DE                                  u2397 24F0  
                    ?_lcd_send_nibble 0028                                  _anio 004C  
                                _flag 02F8                                  _main 23B6  
                                _hora 0052                                  fsr0h 000FEA  
                                fsr1h 000FE2                                  indf0 000FEF  
                                fsr0l 000FE9                                  fsr2h 000FDA  
                                indf1 000FE7                                  fsr1l 000FE1  
                                indf2 000FDF                                  fsr2l 000FD9  
                       __CFG_T1DIG$ON 000000                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                       __CFG_IESO$OFF 000000                      RtccReadDate@rTD0 0032  
                    RtccReadDate@rTD1 002A                  __end_of_activity_pin 2192  
                        ___param_bank 000010       __size_of_activity_submenu_alarm 0062  
     __size_of_activity_submenu_clock 0062                       RtccReadTime@pTm 0028  
                         _Delay1KTCYx 24EC                         __CFG_PLLDIV$1 000000  
                               ?_main 0028                       __end_of___awdiv 1A78  
                               STR_10 0F55                                 STR_11 0F94  
                               STR_20 0F90                                 STR_12 0F90  
                               STR_21 0F94                                 STR_13 0F94  
                               STR_22 0F90                                 STR_14 0F90  
                               STR_30 0F45                                 STR_15 0F94  
                               STR_23 0F4D                                 STR_31 0F68  
                               STR_16 0F90                                 STR_32 0F55  
                               STR_24 0F8A                                 STR_17 0F94  
                               STR_25 0F8D                                 STR_33 0F3D  
                               STR_18 0F90                                 STR_26 0F62  
                               STR_34 0F78                                 STR_19 0F94  
                               STR_35 0F92                                 STR_27 0F5C  
                               STR_36 0F92                                 STR_28 0F73  
                               STR_29 0F86                                 STR_37 0F7D  
                               STR_38 0F7D                 __size_of_Delay100TCYx 0012  
                     ___awdiv@divisor 002A                       __end_of___lwdiv 204C  
                     __end_of___lwmod 21DE                       ___awdiv@counter 002C  
                               _TRISA 000F92                                 _TRISB 000F93  
                               _TRISC 000F94                          ?_button_hash 0028  
                      __CFG_FCMEN$OFF 000000                       __end_of_dpowers 0F0B  
                               _mes_d 005A                                 _mes_u 009D  
                     __end_of_isdigit 244C                                 _setup 1C96  
                               _state 001B                        __pbitbssCOMRAM 02F8  
                               tablat 000FF5                   _reset_home_callback 2520  
                        lcd_putrs@ptr 0030                                 status 000FD8  
                     __end_of_sprintf 11FC                 __end_of_activity_home 23B6  
               __end_of_activity_menu 1C96                          lcd_write@row 0034  
             __CFG_DSWDTOSC$INTOSCREF 000000                       __initialization 2272  
                        _Delay100TCYx 24DA                          __end_of_main 23DE  
                     ??_lcd_send_byte 002B                      RtccReadTime@rTD0 0032  
                    RtccReadTime@rTD1 002A                      __end_of_Read_RTC 193A  
             _action_submenu_selector 193A                  ?_reset_home_callback 0028  
                              ??_main 004C                         __activetblptr 000002  
                    __end_of_RtccWrOn 24C8                _activity_submenu_alarm 1F2C  
              _activity_submenu_clock 1ECA                                _ADCON0 000FC2  
                              _ADCON1 000FC1                                _EECON2 000FA7  
                              _ANCON0 000F48                                _ANCON1 000F49  
                    ___awdiv@dividend 0028                                ?_setup 0028  
                      __CFG_WDTEN$OFF 000000          __size_of_pin_input_validator 0032  
                    RtccWriteDate@pDt 0028                                _RTCCFG 000F3F  
                      __CFG_WPCFG$OFF 000000                         _home_callback 0009  
                      __CFG_WPDIS$OFF 000000                   _home_callback_delay 000B  
                      __CFG_XINST$OFF 000000                      __end_of_lcd_init 1C18  
          __end_of_home_clock_refresh 1B0A                      __end_of_lcd_putc 222A  
                              ___wmul 23DE                             ??___awdiv 002C  
                      __CFG_STVREN$ON 000000                                _diasem 0050  
                              _anio_d 0056                                _anio_u 009A  
                           ??___lwdiv 002C                             ??___lwmod 0033  
               ??_reset_home_callback 0028                                _hora_d 0058  
                              _hora_u 0059                      __end_of_button_A 22F6  
                    __end_of_button_B 20A2                      __end_of_button_C 248A  
                    __end_of_button_D 2520                                clear_0 2278  
                              clear_1 2286                      ___awdiv@quotient 002E  
                              _minuto 0017                 __end_of_RtccWriteDate 1744  
                              _strcat 222A                                _strcmp 20F6  
               __end_of_RtccWriteTime 1850                                _strcpy 2328  
                    RtccWriteTime@pTm 0028                          __pdataCOMRAM 004C  
                           ??_isdigit 0028                __size_of_button_number 0072  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                           ??_sprintf 003E                 __size_of_activity_pin 004E  
                          __accesstop 0060               __end_of__initialization 22AC  
                  __size_of_Write_RTC 0154                         ___rparam_used 000001  
           ??_action_submenu_selector 0038             __size_of_keyboard_control 0156  
                      __pcstackCOMRAM 0028                         __end_of_setup 1D12  
                     __CFG_DSWDTPS$G2 000000                       _button_asterisk 24C8  
                     __CFG_OSC$INTOSC 000000                          _activity_pin 2144  
                   lcd_gotoxy@address 002E                  __size_of_button_hash 0014  
                  __size_of_lcd_putrs 0054                    __size_of_lcd_write 0018  
                        sprintf@width 0048                               ??_setup 0035  
                          __pbssBANK0 0060                             ?_Read_RTC 0028  
                          _dia_semana 009B             RtccWriteTime@tempHourWDay 0031  
                          __pnvCOMRAM 0056         __size_of_activity_submenu_pin 0062  
                       _button_number 1D88                             ?_RtccWrOn 0028  
                      lcd_send_byte@n 002A                               ?___wmul 0028  
                       ?_RtccReadDate 0028           __end_of_check_home_callback 246E  
                       ?_RtccReadTime 0028         __size_of_action_menu_selector 0158  
                        ?_Delay1KTCYx 0028                               ?_strcat 0028  
                             ?_strcmp 0028                               ?_strcpy 0028  
                   __end_of_Write_RTC 15FE                            _lcd_comand 24FE  
     __end_of_action_submenu_selector 19E2                            _lcd_gotoxy 2406  
                             _RTCVALH 000F99                               _RTCVALL 000F98  
                           ?_lcd_init 0028                             ?_lcd_putc 0028  
                       _menu_selected 0013                         _menu_selector 0015  
                          ??_Read_RTC 003A                             ?_button_A 0028  
                           ?_button_B 0028                             ?_button_C 0028  
                           ?_button_D 0028                        ?_button_number 0028  
                             __Hparam 0000                               __Lparam 0000  
            __size_of_lcd_send_nibble 0076               __end_of_button_asterisk 24DA  
                          ??_RtccWrOn 0028                        ??_RtccReadDate 002A  
                      ??_RtccReadTime 002A                               ___awdiv 19E2  
                   __end_of_lcd_putrs 20F6                     __end_of_lcd_write 24A2  
                     __size_of___wmul 0028                               ___lwdiv 1FF0  
                             ___lwmod 2192                          __psmallconst 0F00  
                         _RtccTimeVal 0078                               __pcinit 2272  
                             _fecha_d 0057                               _fecha_u 009C  
                             __ramtop 0F00                   _pin_input_validator 22F6  
                             __ptext0 23B6                               __ptext1 1C96  
                             __ptext2 14AA                               __ptext3 19E2  
                             __ptext4 1744                               __ptext5 15FE  
                             __ptext6 24B6                               __ptext7 1354  
                             __ptext8 1D88                               __ptext9 222A  
        ?_activity_submenu_activation 0028                               _buffer1 007C  
             ?_activity_submenu_alarm 0028                       __size_of_strcat 0048  
                     __size_of_strcmp 004E                       __size_of_strcpy 0032  
             ?_activity_submenu_clock 0028                             _T1CONbits 000FCD  
                             _dpowers 0F01                               _isdigit 242A  
                             _segundo 0019                               _sprintf 0F98  
                          ??_lcd_init 002C                            ??_lcd_putc 002F  
                end_of_initialization 22AC                  ?_pin_input_validator 0028  
                lcd_send_byte@address 002B                            ??_button_A 003A  
                       __Lmediumconst 0000                            ??_button_B 0038  
                          ??_button_C 0038                            ??_button_D 0038  
                    _keyboard_control 1354                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc2 000FDE                 __end_of_lcd_send_byte 238C  
                             strcmp@r 002D        __end_of_activity_submenu_alarm 1F8E  
      __end_of_activity_submenu_clock 1F2C                             _PORTAbits 000F80  
                           _PORTCbits 000F82                      __CFG_DSBOREN$OFF 000000  
                         ?_lcd_comand 0028                    _home_clock_refresh 1A78  
                    __CFG_CPUDIV$OSC1 000000                             _TRISBbits 000F93  
              __size_of_activity_home 002A                __size_of_activity_menu 007E  
                         ?_lcd_gotoxy 002C                       _LCD_INIT_STRING 0F0B  
                 ?_home_clock_refresh 0028                 ??_pin_input_validator 0038  
                     ??_button_number 004B                      __CFG_IOL1WAY$OFF 000000  
           RtccWriteDate@tempDayMonth 0031           __end_of_reset_home_callback 252A  
                 __CFG_MSSP7B_EN$MSK7 000000                      ?_button_asterisk 0028  
                    Delay100TCYx@unit 0028                  ??_home_clock_refresh 004B  
                      __end_of___wmul 2406                         __pidataCOMRAM 250C  
           RtccWriteDate@tempHourWDay 0033                     ??_lcd_send_nibble 0028  
                __size_of_Delay1KTCYx 0012                      __CFG_DSWDTEN$OFF 000000  
                      __end_of_strcat 2272                        __end_of_strcmp 2144  
                      __end_of_strcpy 235A                   start_initialization 2272  
                __end_of_RtccReadDate 1B98                  __end_of_RtccReadTime 1E68  
                RtccWriteTime@wasAlrm 002D                  RtccWriteTime@wasWrEn 002E  
__size_of_activity_submenu_activation 0062                __size_of_RtccWriteDate 0146  
                     RtccWriteDate@di 002A                __size_of_RtccWriteTime 010C  
                   __size_of_Read_RTC 00EA                         _activity_home 238C  
                       _activity_menu 1C18                   __size_of_lcd_comand 000E  
                 __size_of_lcd_gotoxy 0024                              ??___wmul 002C  
                   __size_of_RtccWrOn 0012                       RtccWriteTime@di 002A  
                    __CFG_LPT1OSC$OFF 000000                              ??_strcat 002C  
                            ??_strcmp 002C                              ??_strcpy 002C  
        __end_of_activity_submenu_pin 1ECA                           _ALRMCFGbits 000F91  
             __end_of_LCD_INIT_STRING 0F0F                         ??_button_hash 003A  
                         __pbssCOMRAM 0001                             _Write_RTC 14AA  
                        _isdigit$2134 0029          __end_of_action_menu_selector 1354  
                     Delay1KTCYx@unit 0028                     __size_of_lcd_init 0080  
                         sprintf@flag 0044                     __size_of_lcd_putc 004C  
                         sprintf@prec 0047              ?_action_submenu_selector 0028  
                           __pnvBANK0 009A                        ?_activity_home 0028  
                      ?_activity_menu 0028                     __size_of_button_A 0040  
                   __size_of_button_B 0056                     __size_of_button_C 001C  
                   __size_of_button_D 000A                      ___lwdiv@dividend 0028  
                       ?_Delay100TCYx 0028                              ?___awdiv 0028  
                            ?___lwdiv 0028                              ?___lwmod 002F  
             RtccWriteTime@tempMinSec 002F                             _lcd_putrs 20A2  
                           _lcd_write 248A                      _submenu_selector 001D  
                       _RtccWriteDate 15FE                           __smallconst 0F00  
                       _RtccWriteTime 1744          __size_of_check_home_callback 0022  
                            ?_isdigit 0028                  __CFG_RTCOSC$T1OSCREF 000000  
            __end_of_keyboard_control 14AA                            ?_Write_RTC 0028  
                    ___lwdiv@quotient 002C                              ?_sprintf 0034  
                      __size_of_setup 007C                   __end_of_button_hash 24B6  
                    _RtccAlrmTimeDate 0060                        ___wmul@product 002C  
                            _LATAbits 000F89                              _LATBbits 000F8A  
                           _pin_input 0095                              _PIE3bits 000FA3  
                           _segundo_d 005D                        ??_Delay100TCYx 0028  
                           _segundo_u 005E                      __CFG_WDTPS$32768 000000  
                  RtccWriteDate@wasOn 002C                    _Rtcc_read_TimeDate 0070  
                      ?_RtccWriteDate 0028                            ?_lcd_putrs 0030  
                          ?_lcd_write 0032                     ___wmul@multiplier 0028  
                      ?_RtccWriteTime 0028                             lcd_init@i 002C  
               __size_of_RtccReadDate 008E                          ??_lcd_comand 002C  
                           lcd_putc@c 002F                 __size_of_RtccReadTime 006E  
                        ??_lcd_gotoxy 002D                             copy_data0 22A0  
                            _Read_RTC 1850                       ??_activity_home 0038  
                     ??_activity_menu 0038                  _activity_submenu_pin 1E68  
                     _lcd_send_nibble 1D12                              __Hrparam 0000  
                            _RtccDate 0020                              __Lrparam 0000  
                            _RtccTime 0024                              _RtccWrOn 24B6  
                  __end_of_lcd_comand 250C                    __end_of_lcd_gotoxy 242A  
                        _RtccReadDate 1B0A                      __size_of___awdiv 0096  
                        _RtccReadTime 1DFA                  _action_menu_selector 11FC  
                    __size_of___lwdiv 005C                      __size_of___lwmod 004C  
                        _RtccTimeDate 0068                            sprintf@val 0045  
                          strcat@from 002A                           _button_hash 24A2  
                       ?_activity_pin 0028                              _activity 0003  
         __end_of_pin_input_validator 2328                      __size_of_isdigit 0022  
                     ___lwdiv@divisor 002A                           ??_Write_RTC 0035  
                     ___lwdiv@counter 002E                              __ptext10 24A2  
                            __ptext11 22F6                              __ptext20 1F2C  
                            __ptext12 20F6                              __ptext21 1F8E  
                            __ptext13 24C8                              __ptext30 242A  
                            __ptext22 22B6                              __ptext14 2516  
                            __ptext31 23DE                              __ptext23 2144  
                            __ptext15 246E                              __ptext40 2406  
                            __ptext32 2192                              __ptext24 2328  
                            __ptext16 1C18                              __ptext41 1B98  
                            __ptext33 1FF0                              __ptext25 24FE  
                            __ptext17 204C                              __ptext42 235A  
                            __ptext34 244C                              __ptext26 193A  
                            __ptext18 1E68                              __ptext43 1D12  
                            __ptext35 2520                              __ptext27 11FC  
                            __ptext19 1ECA                              __ptext44 24DA  
                            __ptext36 238C                              __ptext28 1A78  
                            __ptext45 24EC                              __ptext37 248A  
                            __ptext29 0F98                              __ptext46 1850  
                            __ptext38 20A2                              __ptext47 1DFA  
                            __ptext39 21DE                              __ptext48 1B0A  
                            _lcd_init 1B98                              _lcd_putc 21DE  
                    __size_of_sprintf 0264                            strcpy@from 002A  
              __size_of_lcd_send_byte 0032                              _button_A 22B6  
                            _button_B 204C                              _button_C 246E  
                            _button_D 2516                         __size_of_main 0028  
               __end_of_button_number 1DFA                 ?_activity_submenu_pin 0028  
                            _minuto_d 005B                              _minuto_u 005C  
               ?_action_menu_selector 0028                         ??_Delay1KTCYx 0028  
                     ??_RtccWriteDate 002B           __size_of_home_clock_refresh 0092  
                     ??_RtccWriteTime 002B   __end_of_activity_submenu_activation 1FF0  
         _activity_submenu_activation 1F8E          __size_of_reset_home_callback 000A  
                         ??_lcd_putrs 0032                           ??_lcd_write 0038  
            __size_of_button_asterisk 0012                        ??_activity_pin 0038  
                         _OSCTUNEbits 000F9B                            _INTCONbits 000FF2  
                  RtccWriteTime@wasOn 002C                  __end_of_Delay100TCYx 24EC  
       ??_activity_submenu_activation 0038                              isdigit@c 002A  
                           sprintf@ap 0042               __end_of_lcd_send_nibble 1D88  
                           sprintf@sp 0034                      ___lwmod@dividend 002F  
                 _check_home_callback 244C                            _OSCCONbits 000FD3  
            ??_activity_submenu_alarm 0038              ??_activity_submenu_clock 0038  
               RtccWriteDate@tempYear 002E                         _lcd_send_byte 235A  
    __size_of_action_submenu_selector 00A8                            _RTCCFGbits 000F3F  
                            sprintf@c 004A                              sprintf@f 0036  
                            strcat@cp 002C                              strcat@to 0028  
                ?_check_home_callback 0028                              strcmp@s1 0028  
                            strcmp@s2 002A                       ___lwmod@divisor 0031  
                            strcpy@cp 002C                              strcpy@to 0028  
                 __end_of_Delay1KTCYx 24FE                       ___lwmod@counter 0033  
      pin_input_validator@comparision 0038                  RtccWriteDate@wasAlrm 002D  
                RtccWriteDate@wasWrEn 0030                     ?_keyboard_control 0028  
                  ??_keyboard_control 004B                ??_activity_submenu_pin 0038  
               lcd_send_nibble@nibble 0029  
