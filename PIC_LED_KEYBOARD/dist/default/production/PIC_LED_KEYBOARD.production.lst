

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Sep 14 00:13:46 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataCOMRAM
    77  0025AE                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _anio
    81  0025AE  0010               	dw	16
    82                           
    83                           ;initializer for _dia
    84  0025B0  0006               	dw	6
    85                           
    86                           ;initializer for _diasem
    87  0025B2  0002               	dw	2
    88                           
    89                           ;initializer for _hora
    90  0025B4  0012               	dw	18
    91                           
    92                           ;initializer for _mes
    93  0025B6  0009               	dw	9
    94                           
    95                           	psect	smallconst
    96  000F00                     __psmallconst:
    97                           	opt stack 0
    98  000F00  00                 	db	0
    99  000F01                     _dpowers:
   100                           	opt stack 0
   101  000F01  0001               	dw	1
   102  000F03  000A               	dw	10
   103  000F05  0064               	dw	100
   104  000F07  03E8               	dw	1000
   105  000F09  2710               	dw	10000
   106  000F0B                     __end_of_dpowers:
   107                           	opt stack 0
   108  000F0B                     _LCD_INIT_STRING:
   109                           	opt stack 0
   110  000F0B  28                 	db	40
   111  000F0C  0C                 	db	12
   112  000F0D  01                 	db	1
   113  000F0E  06                 	db	6
   114  000F0F                     __end_of_LCD_INIT_STRING:
   115                           	opt stack 0
   116  000F0F                     STR_16:
   117                           
   118                           ; BSR set to: 15
   119  000F0F  49                 	db	73	;'I'
   120  000F10  6E                 	db	110	;'n'
   121  000F11  67                 	db	103	;'g'
   122  000F12  72                 	db	114	;'r'
   123  000F13  65                 	db	101	;'e'
   124  000F14  73                 	db	115	;'s'
   125  000F15  65                 	db	101	;'e'
   126  000F16  20                 	db	32
   127  000F17  73                 	db	115	;'s'
   128  000F18  75                 	db	117	;'u'
   129  000F19  20                 	db	32
   130  000F1A  50                 	db	80	;'P'
   131  000F1B  49                 	db	73	;'I'
   132  000F1C  4E                 	db	78	;'N'
   133  000F1D  3A                 	db	58	;':'
   134  000F1E  00                 	db	0
   135  000F1F                     STR_2:
   136                           
   137                           ; BSR set to: 15
   138  000F1F  25                 	db	37
   139  000F20  30                 	db	48	;'0'
   140  000F21  32                 	db	50	;'2'
   141  000F22  75                 	db	117	;'u'
   142  000F23  2F                 	db	47
   143  000F24  25                 	db	37
   144  000F25  30                 	db	48	;'0'
   145  000F26  32                 	db	50	;'2'
   146  000F27  75                 	db	117	;'u'
   147  000F28  2F                 	db	47
   148  000F29  25                 	db	37
   149  000F2A  30                 	db	48	;'0'
   150  000F2B  32                 	db	50	;'2'
   151  000F2C  75                 	db	117	;'u'
   152  000F2D  00                 	db	0
   153  000F2E                     STR_3:
   154                           
   155                           ; BSR set to: 15
   156  000F2E  25                 	db	37
   157  000F2F  30                 	db	48	;'0'
   158  000F30  32                 	db	50	;'2'
   159  000F31  75                 	db	117	;'u'
   160  000F32  3A                 	db	58	;':'
   161  000F33  25                 	db	37
   162  000F34  30                 	db	48	;'0'
   163  000F35  32                 	db	50	;'2'
   164  000F36  75                 	db	117	;'u'
   165  000F37  3A                 	db	58	;':'
   166  000F38  25                 	db	37
   167  000F39  30                 	db	48	;'0'
   168  000F3A  32                 	db	50	;'2'
   169  000F3B  75                 	db	117	;'u'
   170  000F3C  00                 	db	0
   171  000F3D                     STR_35:
   172                           
   173                           ; BSR set to: 15
   174  000F3D  56                 	db	86	;'V'
   175  000F3E  6F                 	db	111	;'o'
   176  000F3F  6C                 	db	108	;'l'
   177  000F40  75                 	db	117	;'u'
   178  000F41  6D                 	db	109	;'m'
   179  000F42  65                 	db	101	;'e'
   180  000F43  6E                 	db	110	;'n'
   181  000F44  00                 	db	0
   182  000F45                     STR_32:
   183                           
   184                           ; BSR set to: 15
   185  000F45  43                 	db	67	;'C'
   186  000F46  61                 	db	97	;'a'
   187  000F47  6D                 	db	109	;'m'
   188  000F48  62                 	db	98	;'b'
   189  000F49  69                 	db	105	;'i'
   190  000F4A  61                 	db	97	;'a'
   191  000F4B  72                 	db	114	;'r'
   192  000F4C  00                 	db	0
   193  000F4D                     STR_17:
   194                           
   195                           ; BSR set to: 15
   196  000F4D  41                 	db	65	;'A'
   197  000F4E  63                 	db	99	;'c'
   198  000F4F  74                 	db	116	;'t'
   199  000F50  69                 	db	105	;'i'
   200  000F51  76                 	db	118	;'v'
   201  000F52  61                 	db	97	;'a'
   202  000F53  72                 	db	114	;'r'
   203  000F54  00                 	db	0
   204  000F55                     STR_4:
   205                           
   206                           ; BSR set to: 15
   207  000F55  41                 	db	65	;'A'
   208  000F56  43                 	db	67	;'C'
   209  000F57  54                 	db	84	;'T'
   210  000F58  3A                 	db	58	;':'
   211  000F59  4F                 	db	79	;'O'
   212  000F5A  4B                 	db	75	;'K'
   213  000F5B  00                 	db	0
   214  000F5C                     STR_5:
   215                           
   216                           ; BSR set to: 15
   217  000F5C  41                 	db	65	;'A'
   218  000F5D  43                 	db	67	;'C'
   219  000F5E  54                 	db	84	;'T'
   220  000F5F  3A                 	db	58	;':'
   221  000F60  4E                 	db	78	;'N'
   222  000F61  4F                 	db	79	;'O'
   223  000F62  00                 	db	0
   224  000F63                     STR_20:
   225                           
   226                           ; BSR set to: 15
   227  000F63  41                 	db	65	;'A'
   228  000F64  6C                 	db	108	;'l'
   229  000F65  61                 	db	97	;'a'
   230  000F66  72                 	db	114	;'r'
   231  000F67  6D                 	db	109	;'m'
   232  000F68  61                 	db	97	;'a'
   233  000F69  00                 	db	0
   234  000F6A                     STR_29:
   235                           
   236                           ; BSR set to: 15
   237  000F6A  46                 	db	70	;'F'
   238  000F6B  65                 	db	101	;'e'
   239  000F6C  63                 	db	99	;'c'
   240  000F6D  68                 	db	104	;'h'
   241  000F6E  61                 	db	97	;'a'
   242  000F6F  00                 	db	0
   243  000F70                     STR_18:
   244                           
   245                           ; BSR set to: 15
   246  000F70  52                 	db	82	;'R'
   247  000F71  65                 	db	101	;'e'
   248  000F72  6C                 	db	108	;'l'
   249  000F73  6F                 	db	111	;'o'
   250  000F74  6A                 	db	106	;'j'
   251  000F75  00                 	db	0
   252  000F76                     STR_33:
   253                           
   254                           ; BSR set to: 15
   255  000F76  52                 	db	82	;'R'
   256  000F77  65                 	db	101	;'e'
   257  000F78  73                 	db	115	;'s'
   258  000F79  65                 	db	101	;'e'
   259  000F7A  74                 	db	116	;'t'
   260  000F7B  00                 	db	0
   261  000F7C                     STR_1:
   262                           
   263                           ; BSR set to: 15
   264  000F7C  31                 	db	49	;'1'
   265  000F7D  32                 	db	50	;'2'
   266  000F7E  33                 	db	51	;'3'
   267  000F7F  34                 	db	52	;'4'
   268  000F80  00                 	db	0
   269  000F81                     STR_30:
   270                           
   271                           ; BSR set to: 15
   272  000F81  48                 	db	72	;'H'
   273  000F82  6F                 	db	111	;'o'
   274  000F83  72                 	db	114	;'r'
   275  000F84  61                 	db	97	;'a'
   276  000F85  00                 	db	0
   277  000F86                     STR_36:
   278                           
   279                           ; BSR set to: 15
   280  000F86  54                 	db	84	;'T'
   281  000F87  6F                 	db	111	;'o'
   282  000F88  6E                 	db	110	;'n'
   283  000F89  6F                 	db	111	;'o'
   284  000F8A  00                 	db	0
   285  000F8B                     STR_38:
   286                           
   287                           ; BSR set to: 15
   288  000F8B  25                 	db	37
   289  000F8C  30                 	db	48	;'0'
   290  000F8D  31                 	db	49	;'1'
   291  000F8E  75                 	db	117	;'u'
   292  000F8F  00                 	db	0
   293  000F90                     STR_14:
   294                           
   295                           ; BSR set to: 15
   296  000F90  58                 	db	88	;'X'
   297  000F91  32                 	db	50	;'2'
   298  000F92  38                 	db	56	;'8'
   299  000F93  00                 	db	0
   300  000F94                     STR_19:
   301                           
   302                           ; BSR set to: 15
   303  000F94  50                 	db	80	;'P'
   304  000F95  69                 	db	105	;'i'
   305  000F96  6E                 	db	110	;'n'
   306  000F97  00                 	db	0
   307  000F98                     STR_26:
   308                           
   309                           ; BSR set to: 15
   310  000F98  53                 	db	83	;'S'
   311  000F99  49                 	db	73	;'I'
   312  000F9A  00                 	db	0
   313  000F9B                     STR_7:
   314                           
   315                           ; BSR set to: 15
   316  000F9B  20                 	db	32
   317  000F9C  00                 	db	0
   318  000F9D                     STR_37:
   319                           
   320                           ; BSR set to: 15
   321  000F9D  2A                 	db	42
   322  000F9E  00                 	db	0
   323  000F9F                     STR_6:
   324                           
   325                           ; BSR set to: 15
   326  000F9F  3E                 	db	62	;'>'
   327  000FA0  00                 	db	0
   328  0000                     
   329                           ; #config settings
   330  000FA1  00                 	db	0	; dummy byte at the end
   331  0000                     
   332                           	psect	nvCOMRAM
   333  00004A                     __pnvCOMRAM:
   334                           	opt stack 0
   335  00004A                     _anio_d:
   336                           	opt stack 0
   337  00004A                     	ds	1
   338  00004B                     _fecha_d:
   339                           	opt stack 0
   340  00004B                     	ds	1
   341  00004C                     _fecha_u:
   342                           	opt stack 0
   343  00004C                     	ds	1
   344  00004D                     _hora_d:
   345                           	opt stack 0
   346  00004D                     	ds	1
   347  00004E                     _hora_u:
   348                           	opt stack 0
   349  00004E                     	ds	1
   350  00004F                     _mes_d:
   351                           	opt stack 0
   352  00004F                     	ds	1
   353  000050                     _mes_u:
   354                           	opt stack 0
   355  000050                     	ds	1
   356  000051                     _minuto_d:
   357                           	opt stack 0
   358  000051                     	ds	1
   359  000052                     _minuto_u:
   360                           	opt stack 0
   361  000052                     	ds	1
   362  000053                     _segundo_d:
   363                           	opt stack 0
   364  000053                     	ds	1
   365  000054                     _segundo_u:
   366                           	opt stack 0
   367  000054                     	ds	1
   368                           
   369                           	psect	nvBANK0
   370  00009A                     __pnvBANK0:
   371                           	opt stack 0
   372  00009A                     _anio_u:
   373                           	opt stack 0
   374  00009A                     	ds	1
   375  00009B                     _dia_semana:
   376                           	opt stack 0
   377  00009B                     	ds	1
   378  0000                     _ANCON0	set	3912
   379  0000                     _ANCON1	set	3913
   380  0000                     _RTCCFG	set	3903
   381  0000                     _RTCCFGbits	set	3903
   382  0000                     _ADCON0	set	4034
   383  0000                     _ADCON1	set	4033
   384  0000                     _ALRMCFGbits	set	3985
   385  0000                     _EECON2	set	4007
   386  0000                     _INTCONbits	set	4082
   387  0000                     _LATAbits	set	3977
   388  0000                     _LATBbits	set	3978
   389  0000                     _OSCCONbits	set	4051
   390  0000                     _OSCTUNEbits	set	3995
   391  0000                     _PIE3bits	set	4003
   392  0000                     _PORTAbits	set	3968
   393  0000                     _PORTCbits	set	3970
   394  0000                     _RTCVALH	set	3993
   395  0000                     _RTCVALL	set	3992
   396  0000                     _T1CONbits	set	4045
   397  0000                     _TRISA	set	3986
   398  0000                     _TRISB	set	3987
   399  0000                     _TRISBbits	set	3987
   400  0000                     _TRISC	set	3988
   401                           
   402                           	psect	cinit
   403  0020F8                     __pcinit:
   404                           	opt stack 0
   405  0020F8                     start_initialization:
   406                           	opt stack 0
   407  0020F8                     __initialization:
   408                           	opt stack 0
   409                           
   410                           ; Clear objects allocated to BANK0 (58 bytes)
   411  0020F8  EE00  F060         	lfsr	0,__pbssBANK0
   412  0020FC  0E3A               	movlw	58
   413  0020FE                     clear_0:
   414  0020FE  6AEE               	clrf	postinc0,c
   415  002100  06E8               	decf	wreg,f,c
   416  002102  E1FD               	bnz	clear_0
   417                           
   418                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   419  002104  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   420                           
   421                           ; Clear objects allocated to COMRAM (37 bytes)
   422  002106  EE00  F001         	lfsr	0,__pbssCOMRAM
   423  00210A  0E25               	movlw	37
   424  00210C                     clear_1:
   425  00210C  6AEE               	clrf	postinc0,c
   426  00210E  06E8               	decf	wreg,f,c
   427  002110  E1FD               	bnz	clear_1
   428                           
   429                           ; Initialize objects allocated to COMRAM (10 bytes)
   430                           ; load TBLPTR registers with __pidataCOMRAM
   431  002112  0EAE               	movlw	low __pidataCOMRAM
   432  002114  6EF6               	movwf	tblptrl,c
   433  002116  0E25               	movlw	high __pidataCOMRAM
   434  002118  6EF7               	movwf	tblptrh,c
   435  00211A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   436  00211C  6EF8               	movwf	tblptru,c
   437  00211E  EE00  F055         	lfsr	0,__pdataCOMRAM
   438  002122  EE10 F00A          	lfsr	1,10
   439  002126                     copy_data0:
   440  002126  0009               	tblrd		*+
   441  002128  CFF5 FFEE          	movff	tablat,postinc0
   442  00212C  50E5               	movf	postdec1,w,c
   443  00212E  50E1               	movf	fsr1l,w,c
   444  002130  E1FA               	bnz	copy_data0
   445  002132                     end_of_initialization:
   446                           	opt stack 0
   447  002132                     __end_of__initialization:
   448                           	opt stack 0
   449  002132  0E00               	movlw	low (__Lmediumconst shr (0+16))
   450  002134  6EF8               	movwf	tblptru,c
   451  002136  0100               	movlb	0
   452  002138  EF1E  F012         	goto	_main	;jump to C main() function
   453                           tblptru	equ	0xFF8
   454                           tblptrh	equ	0xFF7
   455                           tblptrl	equ	0xFF6
   456                           tablat	equ	0xFF5
   457                           postinc0	equ	0xFEE
   458                           wreg	equ	0xFE8
   459                           postdec1	equ	0xFE5
   460                           fsr1l	equ	0xFE1
   461                           
   462                           	psect	bitbssCOMRAM
   463  0002F8                     __pbitbssCOMRAM:
   464                           	opt stack 0
   465  0002F8                     _flag:
   466                           	opt stack 0
   467  0002F8                     	ds	1
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	bssCOMRAM
   478  000001                     __pbssCOMRAM:
   479                           	opt stack 0
   480  000001                     _a:
   481                           	opt stack 0
   482  000001                     	ds	2
   483  000003                     _activity:
   484                           	opt stack 0
   485  000003                     	ds	2
   486  000005                     _b:
   487                           	opt stack 0
   488  000005                     	ds	2
   489  000007                     _c:
   490                           	opt stack 0
   491  000007                     	ds	2
   492  000009                     _home_callback:
   493                           	opt stack 0
   494  000009                     	ds	2
   495  00000B                     _home_callback_delay:
   496                           	opt stack 0
   497  00000B                     	ds	2
   498  00000D                     _i:
   499                           	opt stack 0
   500  00000D                     	ds	2
   501  00000F                     _j:
   502                           	opt stack 0
   503  00000F                     	ds	2
   504  000011                     _k:
   505                           	opt stack 0
   506  000011                     	ds	2
   507  000013                     _menu_selected:
   508                           	opt stack 0
   509  000013                     	ds	2
   510  000015                     _minuto:
   511                           	opt stack 0
   512  000015                     	ds	2
   513  000017                     _segundo:
   514                           	opt stack 0
   515  000017                     	ds	2
   516  000019                     _state:
   517                           	opt stack 0
   518  000019                     	ds	2
   519  00001B                     _submenu_selected:
   520                           	opt stack 0
   521  00001B                     	ds	2
   522  00001D                     _key:
   523                           	opt stack 0
   524  00001D                     	ds	1
   525  00001E                     _RtccDate:
   526                           	opt stack 0
   527  00001E                     	ds	4
   528  000022                     _RtccTime:
   529                           	opt stack 0
   530  000022                     	ds	4
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           postinc0	equ	0xFEE
   536                           wreg	equ	0xFE8
   537                           postdec1	equ	0xFE5
   538                           fsr1l	equ	0xFE1
   539                           
   540                           	psect	dataCOMRAM
   541  000055                     __pdataCOMRAM:
   542                           	opt stack 0
   543  000055                     _anio:
   544                           	opt stack 0
   545  000055                     	ds	2
   546  000057                     _dia:
   547                           	opt stack 0
   548  000057                     	ds	2
   549  000059                     _diasem:
   550                           	opt stack 0
   551  000059                     	ds	2
   552  00005B                     _hora:
   553                           	opt stack 0
   554  00005B                     	ds	2
   555  00005D                     _mes:
   556                           	opt stack 0
   557  00005D                     	ds	2
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           postdec1	equ	0xFE5
   565                           fsr1l	equ	0xFE1
   566                           
   567                           	psect	bssBANK0
   568  000060                     __pbssBANK0:
   569                           	opt stack 0
   570  000060                     _RtccAlrmTimeDate:
   571                           	opt stack 0
   572  000060                     	ds	8
   573  000068                     _RtccTimeDate:
   574                           	opt stack 0
   575  000068                     	ds	8
   576  000070                     _Rtcc_read_TimeDate:
   577                           	opt stack 0
   578  000070                     	ds	8
   579  000078                     _RtccTimeVal:
   580                           	opt stack 0
   581  000078                     	ds	4
   582  00007C                     _buffer1:
   583                           	opt stack 0
   584  00007C                     	ds	20
   585  000090                     _pin:
   586                           	opt stack 0
   587  000090                     	ds	5
   588  000095                     _pin_input:
   589                           	opt stack 0
   590  000095                     	ds	5
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           postdec1	equ	0xFE5
   598                           fsr1l	equ	0xFE1
   599                           
   600                           	psect	cstackCOMRAM
   601  000026                     __pcstackCOMRAM:
   602                           	opt stack 0
   603  000026                     ??_isdigit:
   604  000026                     ??_lcd_send_nibble:
   605  000026                     ?_strcmp:
   606                           	opt stack 0
   607  000026                     ?___wmul:
   608                           	opt stack 0
   609  000026                     ?___awdiv:
   610                           	opt stack 0
   611  000026                     ?___lwdiv:
   612                           	opt stack 0
   613  000026                     Delay100TCYx@unit:
   614                           	opt stack 0
   615  000026                     Delay1KTCYx@unit:
   616                           	opt stack 0
   617  000026                     RtccReadDate@pDt:
   618                           	opt stack 0
   619  000026                     RtccReadTime@pTm:
   620                           	opt stack 0
   621  000026                     RtccWriteDate@pDt:
   622                           	opt stack 0
   623  000026                     RtccWriteTime@pTm:
   624                           	opt stack 0
   625  000026                     ___wmul@multiplier:
   626                           	opt stack 0
   627  000026                     ___awdiv@dividend:
   628                           	opt stack 0
   629  000026                     ___lwdiv@dividend:
   630                           	opt stack 0
   631  000026                     strcat@to:
   632                           	opt stack 0
   633  000026                     strcmp@s1:
   634                           	opt stack 0
   635  000026                     strcpy@to:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x0
   639  000026                     	ds	1
   640  000027                     lcd_send_nibble@nibble:
   641                           	opt stack 0
   642  000027                     _isdigit$2152:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x1
   646  000027                     	ds	1
   647  000028                     lcd_send_byte@n:
   648                           	opt stack 0
   649  000028                     RtccWriteDate@di:
   650                           	opt stack 0
   651  000028                     RtccWriteTime@di:
   652                           	opt stack 0
   653  000028                     isdigit@c:
   654                           	opt stack 0
   655  000028                     ___wmul@multiplicand:
   656                           	opt stack 0
   657  000028                     ___awdiv@divisor:
   658                           	opt stack 0
   659  000028                     ___lwdiv@divisor:
   660                           	opt stack 0
   661  000028                     strcat@from:
   662                           	opt stack 0
   663  000028                     strcmp@s2:
   664                           	opt stack 0
   665  000028                     strcpy@from:
   666                           	opt stack 0
   667  000028                     RtccReadDate@rTD1:
   668                           	opt stack 0
   669  000028                     RtccReadTime@rTD1:
   670                           	opt stack 0
   671                           
   672                           ; 8 bytes @ 0x2
   673  000028                     	ds	1
   674  000029                     lcd_send_byte@address:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x3
   678  000029                     	ds	1
   679  00002A                     ??_strcmp:
   680  00002A                     lcd_init@i:
   681                           	opt stack 0
   682  00002A                     lcd_gotoxy@y:
   683                           	opt stack 0
   684  00002A                     lcd_comand@d:
   685                           	opt stack 0
   686  00002A                     RtccWriteDate@wasOn:
   687                           	opt stack 0
   688  00002A                     RtccWriteTime@wasOn:
   689                           	opt stack 0
   690  00002A                     ___awdiv@counter:
   691                           	opt stack 0
   692  00002A                     ___wmul@product:
   693                           	opt stack 0
   694  00002A                     ___lwdiv@quotient:
   695                           	opt stack 0
   696  00002A                     strcat@cp:
   697                           	opt stack 0
   698  00002A                     strcpy@cp:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x4
   702  00002A                     	ds	1
   703  00002B                     lcd_gotoxy@x:
   704                           	opt stack 0
   705  00002B                     RtccWriteDate@wasAlrm:
   706                           	opt stack 0
   707  00002B                     RtccWriteTime@wasAlrm:
   708                           	opt stack 0
   709  00002B                     ___awdiv@sign:
   710                           	opt stack 0
   711  00002B                     strcmp@r:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x5
   715  00002B                     	ds	1
   716  00002C                     lcd_gotoxy@address:
   717                           	opt stack 0
   718  00002C                     RtccWriteTime@wasWrEn:
   719                           	opt stack 0
   720  00002C                     ___lwdiv@counter:
   721                           	opt stack 0
   722  00002C                     RtccWriteDate@tempYear:
   723                           	opt stack 0
   724  00002C                     ___awdiv@quotient:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x6
   728  00002C                     	ds	1
   729  00002D                     ?___lwmod:
   730                           	opt stack 0
   731  00002D                     lcd_putc@c:
   732                           	opt stack 0
   733  00002D                     RtccWriteTime@tempMinSec:
   734                           	opt stack 0
   735  00002D                     ___lwmod@dividend:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x7
   739  00002D                     	ds	1
   740  00002E                     RtccWriteDate@wasWrEn:
   741                           	opt stack 0
   742  00002E                     lcd_putrs@ptr:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x8
   746  00002E                     	ds	1
   747  00002F                     RtccWriteDate@tempDayMonth:
   748                           	opt stack 0
   749  00002F                     RtccWriteTime@tempHourWDay:
   750                           	opt stack 0
   751  00002F                     ___lwmod@divisor:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x9
   755  00002F                     	ds	1
   756  000030                     lcd_write@column:
   757                           	opt stack 0
   758  000030                     RtccReadDate@rTD0:
   759                           	opt stack 0
   760  000030                     RtccReadTime@rTD0:
   761                           	opt stack 0
   762                           
   763                           ; 8 bytes @ 0xA
   764  000030                     	ds	1
   765  000031                     ___lwmod@counter:
   766                           	opt stack 0
   767  000031                     RtccWriteDate@tempHourWDay:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0xB
   771  000031                     	ds	1
   772  000032                     ?_sprintf:
   773                           	opt stack 0
   774  000032                     lcd_write@row:
   775                           	opt stack 0
   776  000032                     sprintf@sp:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0xC
   780  000032                     	ds	1
   781  000033                     
   782                           ; 0 bytes @ 0xD
   783  000033                     	ds	1
   784  000034                     lcd_write@string:
   785                           	opt stack 0
   786  000034                     sprintf@f:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0xE
   790  000034                     	ds	2
   791  000036                     ??_action_menu_selector:
   792  000036                     ??_action_submenu_selector:
   793  000036                     ??_button_B_menu:
   794  000036                     ??_button_B_submenu_activation:
   795  000036                     pin_input_validator@comparision:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x10
   799  000036                     	ds	2
   800  000038                     ??_button_A:
   801  000038                     ??_button_B:
   802  000038                     
   803                           ; 0 bytes @ 0x12
   804  000038                     	ds	4
   805  00003C                     ??_sprintf:
   806                           
   807                           ; 0 bytes @ 0x16
   808  00003C                     	ds	4
   809  000040                     sprintf@ap:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x1A
   813  000040                     	ds	2
   814  000042                     sprintf@flag:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x1C
   818  000042                     	ds	1
   819  000043                     sprintf@val:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x1D
   823  000043                     	ds	2
   824  000045                     sprintf@prec:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x1F
   828  000045                     	ds	1
   829  000046                     sprintf@width:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x20
   833  000046                     	ds	2
   834  000048                     sprintf@c:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x22
   838  000048                     	ds	1
   839  000049                     ??_keyboard_control:
   840                           
   841                           ; 0 bytes @ 0x23
   842  000049                     	ds	1
   843  00004A                     tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           postdec1	equ	0xFE5
   850                           fsr1l	equ	0xFE1
   851                           
   852                           ; 0 bytes @ 0x24
   853 ;;
   854 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   855 ;;
   856 ;; *************** function _main *****************
   857 ;; Defined at:
   858 ;;		line 474 in file "main.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  2  364[None  ] int 
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels required when called:   11
   878 ;; This function calls:
   879 ;;		_Read_RTC
   880 ;;		_activity_home
   881 ;;		_check_home_callback
   882 ;;		_home_clock_refresh
   883 ;;		_home_state_refresh
   884 ;;		_keyboard_control
   885 ;;		_setup
   886 ;; This function is called by:
   887 ;;		Startup code after reset
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text0
   892  00243C                     __ptext0:
   893                           	opt stack 0
   894  00243C                     _main:
   895                           	opt stack 20
   896                           
   897                           ;main.c: 476: setup();
   898                           
   899                           ; BSR set to: 15
   900                           ;incstack = 0
   901  00243C  EC83  F00D         	call	_setup	;wreg free
   902                           
   903                           ;main.c: 478: activity_home();
   904  002440  EC34  F012         	call	_activity_home	;wreg free
   905  002444  D000               	goto	l3364
   906  002446                     l3364:
   907                           
   908                           ;main.c: 482: check_home_callback();
   909  002446  EC80  F012         	call	_check_home_callback	;wreg free
   910                           
   911                           ;main.c: 484: Read_RTC();
   912  00244A  EC7D  F00B         	call	_Read_RTC	;wreg free
   913                           
   914                           ;main.c: 486: keyboard_control();
   915  00244E  EC03  F009         	call	_keyboard_control	;wreg free
   916                           
   917                           ;main.c: 488: if(activity == 0){
   918  002452  5003               	movf	_activity,w,c
   919  002454  1004               	iorwf	_activity+1,w,c
   920  002456  A4D8               	btfss	status,2,c
   921  002458  D7F6               	goto	l3364
   922                           
   923                           ;main.c: 489: home_clock_refresh();
   924  00245A  EC37  F00C         	call	_home_clock_refresh	;wreg free
   925                           
   926                           ;main.c: 490: home_state_refresh();
   927  00245E  EC21  F00F         	call	_home_state_refresh	;wreg free
   928  002462  D7F1               	goto	l3364
   929                           
   930                           ;main.c: 491: }
   931                           ;main.c: 493: }
   932                           ;main.c: 495: return 0;
   933                           ;	Return value of _main is never used
   934  002464  EF00  F000         	goto	start
   935  002468                     __end_of_main:
   936                           	opt stack 0
   937                           tblptru	equ	0xFF8
   938                           tblptrh	equ	0xFF7
   939                           tblptrl	equ	0xFF6
   940                           tablat	equ	0xFF5
   941                           postinc0	equ	0xFEE
   942                           wreg	equ	0xFE8
   943                           postdec1	equ	0xFE5
   944                           fsr1l	equ	0xFE1
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _setup *****************
   948 ;; Defined at:
   949 ;;		line 58 in file "main.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;		None               void
   956 ;; Registers used:
   957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    3
   970 ;; This function calls:
   971 ;;		_Write_RTC
   972 ;;		_lcd_comand
   973 ;;		_lcd_init
   974 ;;		_strcpy
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text1
   981  001B06                     __ptext1:
   982                           	opt stack 0
   983  001B06                     _setup:
   984                           	opt stack 27
   985                           
   986                           ;main.c: 60: OSCTUNEbits.INTSRC=1;
   987                           
   988                           ;incstack = 0
   989  001B06  8E9B               	bsf	3995,7,c	;volatile
   990                           
   991                           ;main.c: 61: OSCTUNEbits.PLLEN=0;
   992  001B08  9C9B               	bcf	3995,6,c	;volatile
   993                           
   994                           ;main.c: 62: OSCCONbits.IRCF0=1;
   995  001B0A  88D3               	bsf	4051,4,c	;volatile
   996                           
   997                           ;main.c: 63: OSCCONbits.IRCF1=1;
   998  001B0C  8AD3               	bsf	4051,5,c	;volatile
   999                           
  1000                           ;main.c: 64: OSCCONbits.IRCF2=1;
  1001  001B0E  8CD3               	bsf	4051,6,c	;volatile
  1002                           
  1003                           ;main.c: 65: OSCCONbits.SCS0=0;
  1004  001B10  90D3               	bcf	4051,0,c	;volatile
  1005                           
  1006                           ;main.c: 66: OSCCONbits.SCS1=0;
  1007  001B12  92D3               	bcf	4051,1,c	;volatile
  1008                           
  1009                           ;main.c: 67: TRISA = 0b11110000;
  1010  001B14  0EF0               	movlw	240
  1011  001B16  6E92               	movwf	3986,c	;volatile
  1012                           
  1013                           ;main.c: 68: TRISB = 0;
  1014  001B18  0E00               	movlw	0
  1015  001B1A  6E93               	movwf	3987,c	;volatile
  1016                           
  1017                           ;main.c: 69: TRISC = 0b00000111;
  1018  001B1C  0E07               	movlw	7
  1019  001B1E  6E94               	movwf	3988,c	;volatile
  1020                           
  1021                           ;main.c: 73: ANCON0=0b11111111;
  1022  001B20  010F               	movlb	15	; () banked
  1023  001B22  6948               	setf	72,b	;volatile
  1024                           
  1025                           ; BSR set to: 15
  1026                           ;main.c: 75: ANCON1=0b11111111;
  1027  001B24  010F               	movlb	15	; () banked
  1028  001B26  6949               	setf	73,b	;volatile
  1029                           
  1030                           ;main.c: 76: ADCON0=0b00101101;
  1031  001B28  0E2D               	movlw	45
  1032  001B2A  6EC2               	movwf	4034,c	;volatile
  1033                           
  1034                           ;main.c: 77: ADCON1=0b00010000;
  1035  001B2C  0E10               	movlw	16
  1036  001B2E  6EC1               	movwf	4033,c	;volatile
  1037                           
  1038                           ; BSR set to: 15
  1039                           ;main.c: 78: RTCCFGbits.RTCEN=1;
  1040  001B30  010F               	movlb	15	; () banked
  1041  001B32  8F3F               	bsf	63,7,b	;volatile
  1042                           
  1043                           ; BSR set to: 15
  1044                           ;main.c: 79: RTCCFGbits.RTCWREN=1;
  1045  001B34  010F               	movlb	15	; () banked
  1046  001B36  8B3F               	bsf	63,5,b	;volatile
  1047                           
  1048                           ; BSR set to: 15
  1049                           ;main.c: 80: T1CONbits.T1OSCEN=1;
  1050  001B38  86CD               	bsf	4045,3,c	;volatile
  1051                           
  1052                           ; BSR set to: 15
  1053                           ;main.c: 81: Write_RTC();
  1054  001B3A  ECAE  F009         	call	_Write_RTC	;wreg free
  1055                           
  1056                           ;main.c: 82: lcd_init();
  1057  001B3E  EC08  F00D         	call	_lcd_init	;wreg free
  1058                           
  1059                           ;main.c: 83: lcd_comand(0b00001100);
  1060  001B42  0E0C               	movlw	12
  1061  001B44  ECD0  F012         	call	_lcd_comand
  1062                           
  1063                           ;main.c: 84: LATBbits.LATB1 = 1;;
  1064  001B48  828A               	bsf	3978,1,c	;volatile
  1065                           
  1066                           ;main.c: 85: LATBbits.LATB0 = 1;;
  1067  001B4A  808A               	bsf	3978,0,c	;volatile
  1068                           
  1069                           ;main.c: 88: home_callback_delay = 50;
  1070  001B4C  0E00               	movlw	0
  1071  001B4E  6E0C               	movwf	_home_callback_delay+1,c
  1072  001B50  0E32               	movlw	50
  1073  001B52  6E0B               	movwf	_home_callback_delay,c
  1074                           
  1075                           ;main.c: 89: menu_selected = 0;
  1076  001B54  0E00               	movlw	0
  1077  001B56  6E14               	movwf	_menu_selected+1,c
  1078  001B58  0E00               	movlw	0
  1079  001B5A  6E13               	movwf	_menu_selected,c
  1080                           
  1081                           ;main.c: 90: submenu_selected = 0;
  1082  001B5C  0E00               	movlw	0
  1083  001B5E  6E1C               	movwf	_submenu_selected+1,c
  1084  001B60  0E00               	movlw	0
  1085  001B62  6E1B               	movwf	_submenu_selected,c
  1086                           
  1087                           ;main.c: 91: strcpy(pin, "1234");
  1088  001B64  0E90               	movlw	low _pin
  1089  001B66  6E26               	movwf	strcpy@to,c
  1090  001B68  0E00               	movlw	high _pin
  1091  001B6A  6E27               	movwf	strcpy@to+1,c
  1092  001B6C  0E7C               	movlw	low STR_1
  1093  001B6E  6E28               	movwf	strcpy@from,c
  1094  001B70  0E0F               	movlw	high STR_1
  1095  001B72  6E29               	movwf	strcpy@from+1,c
  1096  001B74  ECD4  F011         	call	_strcpy	;wreg free
  1097  001B78  0012               	return		;funcret
  1098  001B7A                     __end_of_setup:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           postdec1	equ	0xFE5
  1107                           fsr1l	equ	0xFE1
  1108                           status	equ	0xFD8
  1109                           
  1110 ;; *************** function _Write_RTC *****************
  1111 ;; Defined at:
  1112 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;		None               void
  1119 ;; Registers used:
  1120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    2
  1133 ;; This function calls:
  1134 ;;		_RtccWrOn
  1135 ;;		_RtccWriteDate
  1136 ;;		_RtccWriteTime
  1137 ;;		___awdiv
  1138 ;; This function is called by:
  1139 ;;		_setup
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text2
  1144  00135C                     __ptext2:
  1145                           	opt stack 0
  1146  00135C                     _Write_RTC:
  1147                           	opt stack 27
  1148                           
  1149                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1150                           
  1151                           ;incstack = 0
  1152  00135C  ECB5  F012         	call	_RtccWrOn	;wreg free
  1153                           
  1154                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1155  001360  80A3               	bsf	4003,0,c	;volatile
  1156                           
  1157                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1158  001362  C017  F026         	movff	_segundo,___awdiv@dividend
  1159  001366  C018  F027         	movff	_segundo+1,___awdiv@dividend+1
  1160  00136A  0E00               	movlw	0
  1161  00136C  6E29               	movwf	___awdiv@divisor+1,c
  1162  00136E  0E0A               	movlw	10
  1163  001370  6E28               	movwf	___awdiv@divisor,c
  1164  001372  ECEC  F00B         	call	___awdiv	;wreg free
  1165  001376  5026               	movf	?___awdiv,w,c
  1166  001378  6E53               	movwf	_segundo_d,c
  1167                           
  1168                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1169  00137A  5053               	movf	_segundo_d,w,c
  1170  00137C  0D0A               	mullw	10
  1171  00137E  50F3               	movf	prodl,w,c
  1172  001380  0800               	sublw	0
  1173  001382  2417               	addwf	_segundo,w,c
  1174  001384  6E54               	movwf	_segundo_u,c
  1175                           
  1176                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1177  001386  5053               	movf	_segundo_d,w,c
  1178  001388  0D10               	mullw	16
  1179  00138A  50F3               	movf	prodl,w,c
  1180  00138C  2454               	addwf	_segundo_u,w,c
  1181  00138E  6E23               	movwf	_RtccTime+1,c
  1182                           
  1183                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1184  001390  C015  F026         	movff	_minuto,___awdiv@dividend
  1185  001394  C016  F027         	movff	_minuto+1,___awdiv@dividend+1
  1186  001398  0E00               	movlw	0
  1187  00139A  6E29               	movwf	___awdiv@divisor+1,c
  1188  00139C  0E0A               	movlw	10
  1189  00139E  6E28               	movwf	___awdiv@divisor,c
  1190  0013A0  ECEC  F00B         	call	___awdiv	;wreg free
  1191  0013A4  5026               	movf	?___awdiv,w,c
  1192  0013A6  6E51               	movwf	_minuto_d,c
  1193                           
  1194                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1195  0013A8  5051               	movf	_minuto_d,w,c
  1196  0013AA  0D0A               	mullw	10
  1197  0013AC  50F3               	movf	prodl,w,c
  1198  0013AE  0800               	sublw	0
  1199  0013B0  2415               	addwf	_minuto,w,c
  1200  0013B2  6E52               	movwf	_minuto_u,c
  1201                           
  1202                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1203  0013B4  5051               	movf	_minuto_d,w,c
  1204  0013B6  0D10               	mullw	16
  1205  0013B8  50F3               	movf	prodl,w,c
  1206  0013BA  2452               	addwf	_minuto_u,w,c
  1207  0013BC  6E24               	movwf	_RtccTime+2,c
  1208                           
  1209                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1210  0013BE  C05B  F026         	movff	_hora,___awdiv@dividend
  1211  0013C2  C05C  F027         	movff	_hora+1,___awdiv@dividend+1
  1212  0013C6  0E00               	movlw	0
  1213  0013C8  6E29               	movwf	___awdiv@divisor+1,c
  1214  0013CA  0E0A               	movlw	10
  1215  0013CC  6E28               	movwf	___awdiv@divisor,c
  1216  0013CE  ECEC  F00B         	call	___awdiv	;wreg free
  1217  0013D2  5026               	movf	?___awdiv,w,c
  1218  0013D4  6E4D               	movwf	_hora_d,c
  1219                           
  1220                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1221  0013D6  504D               	movf	_hora_d,w,c
  1222  0013D8  0D0A               	mullw	10
  1223  0013DA  50F3               	movf	prodl,w,c
  1224  0013DC  0800               	sublw	0
  1225  0013DE  245B               	addwf	_hora,w,c
  1226  0013E0  6E4E               	movwf	_hora_u,c
  1227                           
  1228                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1229  0013E2  504D               	movf	_hora_d,w,c
  1230  0013E4  0D10               	mullw	16
  1231  0013E6  50F3               	movf	prodl,w,c
  1232  0013E8  244E               	addwf	_hora_u,w,c
  1233  0013EA  6E25               	movwf	_RtccTime+3,c
  1234                           
  1235                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1236  0013EC  C055  F026         	movff	_anio,___awdiv@dividend
  1237  0013F0  C056  F027         	movff	_anio+1,___awdiv@dividend+1
  1238  0013F4  0E00               	movlw	0
  1239  0013F6  6E29               	movwf	___awdiv@divisor+1,c
  1240  0013F8  0E0A               	movlw	10
  1241  0013FA  6E28               	movwf	___awdiv@divisor,c
  1242  0013FC  ECEC  F00B         	call	___awdiv	;wreg free
  1243  001400  5026               	movf	?___awdiv,w,c
  1244  001402  6E4A               	movwf	_anio_d,c
  1245                           
  1246                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1247  001404  504A               	movf	_anio_d,w,c
  1248  001406  0D0A               	mullw	10
  1249  001408  50F3               	movf	prodl,w,c
  1250  00140A  0800               	sublw	0
  1251  00140C  2455               	addwf	_anio,w,c
  1252  00140E  0100               	movlb	0	; () banked
  1253  001410  6F9A               	movwf	_anio_u& (0+255),b
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1257  001412  504A               	movf	_anio_d,w,c
  1258  001414  0D10               	mullw	16
  1259  001416  50F3               	movf	prodl,w,c
  1260  001418  0100               	movlb	0	; () banked
  1261  00141A  259A               	addwf	_anio_u& (0+255),w,b
  1262  00141C  6E21               	movwf	_RtccDate+3,c
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1266  00141E  C05D  F026         	movff	_mes,___awdiv@dividend
  1267  001422  C05E  F027         	movff	_mes+1,___awdiv@dividend+1
  1268  001426  0E00               	movlw	0
  1269  001428  6E29               	movwf	___awdiv@divisor+1,c
  1270  00142A  0E0A               	movlw	10
  1271  00142C  6E28               	movwf	___awdiv@divisor,c
  1272  00142E  ECEC  F00B         	call	___awdiv	;wreg free
  1273  001432  5026               	movf	?___awdiv,w,c
  1274  001434  6E4F               	movwf	_mes_d,c
  1275                           
  1276                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1277  001436  504F               	movf	_mes_d,w,c
  1278  001438  0D0A               	mullw	10
  1279  00143A  50F3               	movf	prodl,w,c
  1280  00143C  0800               	sublw	0
  1281  00143E  245D               	addwf	_mes,w,c
  1282  001440  6E50               	movwf	_mes_u,c
  1283                           
  1284                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1285  001442  504F               	movf	_mes_d,w,c
  1286  001444  0D10               	mullw	16
  1287  001446  50F3               	movf	prodl,w,c
  1288  001448  2450               	addwf	_mes_u,w,c
  1289  00144A  6E20               	movwf	_RtccDate+2,c
  1290                           
  1291                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1292  00144C  C057  F026         	movff	_dia,___awdiv@dividend
  1293  001450  C058  F027         	movff	_dia+1,___awdiv@dividend+1
  1294  001454  0E00               	movlw	0
  1295  001456  6E29               	movwf	___awdiv@divisor+1,c
  1296  001458  0E0A               	movlw	10
  1297  00145A  6E28               	movwf	___awdiv@divisor,c
  1298  00145C  ECEC  F00B         	call	___awdiv	;wreg free
  1299  001460  5026               	movf	?___awdiv,w,c
  1300  001462  6E4B               	movwf	_fecha_d,c
  1301                           
  1302                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1303  001464  504B               	movf	_fecha_d,w,c
  1304  001466  0D0A               	mullw	10
  1305  001468  50F3               	movf	prodl,w,c
  1306  00146A  0800               	sublw	0
  1307  00146C  2457               	addwf	_dia,w,c
  1308  00146E  6E4C               	movwf	_fecha_u,c
  1309                           
  1310                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1311  001470  504B               	movf	_fecha_d,w,c
  1312  001472  0D10               	mullw	16
  1313  001474  50F3               	movf	prodl,w,c
  1314  001476  244C               	addwf	_fecha_u,w,c
  1315  001478  6E1F               	movwf	_RtccDate+1,c
  1316                           
  1317                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1318  00147A  C059  F09B         	movff	_diasem,_dia_semana
  1319                           
  1320                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1321  00147E  C059  F01E         	movff	_diasem,_RtccDate
  1322                           
  1323                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1324  001482  0E22               	movlw	low _RtccTime
  1325  001484  6E26               	movwf	RtccWriteTime@pTm,c
  1326  001486  0E00               	movlw	high _RtccTime
  1327  001488  6E27               	movwf	RtccWriteTime@pTm+1,c
  1328  00148A  0E01               	movlw	1
  1329  00148C  6E28               	movwf	RtccWriteTime@di,c
  1330  00148E  ECF7  F00A         	call	_RtccWriteTime	;wreg free
  1331                           
  1332                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1333  001492  0E1E               	movlw	low _RtccDate
  1334  001494  6E26               	movwf	RtccWriteDate@pDt,c
  1335  001496  0E00               	movlw	high _RtccDate
  1336  001498  6E27               	movwf	RtccWriteDate@pDt+1,c
  1337  00149A  0E01               	movlw	1
  1338  00149C  6E28               	movwf	RtccWriteDate@di,c
  1339  00149E  EC54  F00A         	call	_RtccWriteDate	;wreg free
  1340                           
  1341                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1342  0014A2  010F               	movlb	15	; () banked
  1343  0014A4  8F3F               	bsf	63,7,b	;volatile
  1344                           
  1345                           ; BSR set to: 15
  1346  0014A6  0012               	return		;funcret
  1347  0014A8                     __end_of_Write_RTC:
  1348                           	opt stack 0
  1349                           tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           prodl	equ	0xFF3
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           postdec1	equ	0xFE5
  1357                           fsr1l	equ	0xFE1
  1358                           status	equ	0xFD8
  1359                           
  1360 ;; *************** function ___awdiv *****************
  1361 ;; Defined at:
  1362 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  dividend        2    0[COMRAM] int 
  1365 ;;  divisor         2    2[COMRAM] int 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  quotient        2    6[COMRAM] int 
  1368 ;;  sign            1    5[COMRAM] unsigned char 
  1369 ;;  counter         1    4[COMRAM] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2    0[COMRAM] int 
  1372 ;; Registers used:
  1373 ;;		wreg, status,2, status,0
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1380 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1382 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1383 ;;Total ram usage:        8 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_Write_RTC
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text3
  1393  0017D8                     __ptext3:
  1394                           	opt stack 0
  1395  0017D8                     ___awdiv:
  1396                           	opt stack 28
  1397                           
  1398                           ; BSR set to: 15
  1399                           ;incstack = 0
  1400  0017D8  0E00               	movlw	0
  1401  0017DA  6E2B               	movwf	___awdiv@sign,c
  1402  0017DC  AE29               	btfss	___awdiv@divisor+1,7,c
  1403  0017DE  D007               	goto	l2984
  1404  0017E0  6C28               	negf	___awdiv@divisor,c
  1405  0017E2  1E29               	comf	___awdiv@divisor+1,f,c
  1406  0017E4  B0D8               	btfsc	status,0,c
  1407  0017E6  2A29               	incf	___awdiv@divisor+1,f,c
  1408  0017E8  0E01               	movlw	1
  1409  0017EA  6E2B               	movwf	___awdiv@sign,c
  1410  0017EC  D000               	goto	l2984
  1411  0017EE                     l2984:
  1412  0017EE  AE27               	btfss	___awdiv@dividend+1,7,c
  1413  0017F0  D007               	goto	l2990
  1414  0017F2  6C26               	negf	___awdiv@dividend,c
  1415  0017F4  1E27               	comf	___awdiv@dividend+1,f,c
  1416  0017F6  B0D8               	btfsc	status,0,c
  1417  0017F8  2A27               	incf	___awdiv@dividend+1,f,c
  1418  0017FA  0E01               	movlw	1
  1419  0017FC  1A2B               	xorwf	___awdiv@sign,f,c
  1420  0017FE  D000               	goto	l2990
  1421  001800                     l2990:
  1422  001800  0E00               	movlw	0
  1423  001802  6E2D               	movwf	___awdiv@quotient+1,c
  1424  001804  0E00               	movlw	0
  1425  001806  6E2C               	movwf	___awdiv@quotient,c
  1426  001808  5028               	movf	___awdiv@divisor,w,c
  1427  00180A  1029               	iorwf	___awdiv@divisor+1,w,c
  1428  00180C  B4D8               	btfsc	status,2,c
  1429  00180E  D021               	goto	l3012
  1430  001810  0E01               	movlw	1
  1431  001812  6E2A               	movwf	___awdiv@counter,c
  1432  001814  D005               	goto	l2998
  1433  001816                     l2996:
  1434  001816  90D8               	bcf	status,0,c
  1435  001818  3628               	rlcf	___awdiv@divisor,f,c
  1436  00181A  3629               	rlcf	___awdiv@divisor+1,f,c
  1437  00181C  2A2A               	incf	___awdiv@counter,f,c
  1438  00181E  D000               	goto	l2998
  1439  001820                     l2998:
  1440  001820  BE29               	btfsc	___awdiv@divisor+1,7,c
  1441  001822  D002               	goto	l3000
  1442  001824  D7F8               	goto	l2996
  1443  001826  D000               	goto	l3000
  1444  001828                     l3000:
  1445  001828  90D8               	bcf	status,0,c
  1446  00182A  362C               	rlcf	___awdiv@quotient,f,c
  1447  00182C  362D               	rlcf	___awdiv@quotient+1,f,c
  1448  00182E  5028               	movf	___awdiv@divisor,w,c
  1449  001830  5C26               	subwf	___awdiv@dividend,w,c
  1450  001832  5029               	movf	___awdiv@divisor+1,w,c
  1451  001834  5827               	subwfb	___awdiv@dividend+1,w,c
  1452  001836  A0D8               	btfss	status,0,c
  1453  001838  D006               	goto	l3008
  1454  00183A  5028               	movf	___awdiv@divisor,w,c
  1455  00183C  5E26               	subwf	___awdiv@dividend,f,c
  1456  00183E  5029               	movf	___awdiv@divisor+1,w,c
  1457  001840  5A27               	subwfb	___awdiv@dividend+1,f,c
  1458  001842  802C               	bsf	___awdiv@quotient,0,c
  1459  001844  D000               	goto	l3008
  1460  001846                     l3008:
  1461  001846  90D8               	bcf	status,0,c
  1462  001848  3229               	rrcf	___awdiv@divisor+1,f,c
  1463  00184A  3228               	rrcf	___awdiv@divisor,f,c
  1464  00184C  2E2A               	decfsz	___awdiv@counter,f,c
  1465  00184E  D7EC               	goto	l3000
  1466  001850  D000               	goto	l3012
  1467  001852                     l3012:
  1468  001852  502B               	movf	___awdiv@sign,w,c
  1469  001854  B4D8               	btfsc	status,2,c
  1470  001856  D005               	goto	l3016
  1471  001858  6C2C               	negf	___awdiv@quotient,c
  1472  00185A  1E2D               	comf	___awdiv@quotient+1,f,c
  1473  00185C  B0D8               	btfsc	status,0,c
  1474  00185E  2A2D               	incf	___awdiv@quotient+1,f,c
  1475  001860  D000               	goto	l3016
  1476  001862                     l3016:
  1477  001862  C02C  F026         	movff	___awdiv@quotient,?___awdiv
  1478  001866  C02D  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  1479  00186A  0012               	return	
  1480  00186C  0012               	return		;funcret
  1481  00186E                     __end_of___awdiv:
  1482                           	opt stack 0
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           prodl	equ	0xFF3
  1488                           postinc0	equ	0xFEE
  1489                           wreg	equ	0xFE8
  1490                           postdec1	equ	0xFE5
  1491                           fsr1l	equ	0xFE1
  1492                           status	equ	0xFD8
  1493                           
  1494 ;; *************** function _RtccWriteTime *****************
  1495 ;; Defined at:
  1496 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  pTm             2    0[COMRAM] PTR const struct .
  1499 ;;		 -> RtccTime(4), 
  1500 ;;  di              1    2[COMRAM] enum E7121
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  tempHourWDay    2    9[COMRAM] struct .
  1503 ;;  tempMinSec      2    7[COMRAM] struct .
  1504 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1505 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1506 ;;  wasOn           1    4[COMRAM] enum E7121
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      enum E7337
  1509 ;; Registers used:
  1510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1516 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1517 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1519 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1520 ;;Total ram usage:       11 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    1
  1523 ;; This function calls:
  1524 ;;		_RtccWrOn
  1525 ;; This function is called by:
  1526 ;;		_Write_RTC
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text4
  1531  0015EE                     __ptext4:
  1532                           	opt stack 0
  1533  0015EE                     _RtccWriteTime:
  1534                           	opt stack 27
  1535                           
  1536                           ;incstack = 0
  1537  0015EE  0E00               	movlw	0
  1538  0015F0  6E2B               	movwf	RtccWriteTime@wasAlrm,c
  1539  0015F2  EE20 F002          	lfsr	2,2
  1540  0015F6  5026               	movf	RtccWriteTime@pTm,w,c
  1541  0015F8  26D9               	addwf	fsr2l,f,c
  1542  0015FA  5027               	movf	RtccWriteTime@pTm+1,w,c
  1543  0015FC  22DA               	addwfc	fsr2h,f,c
  1544  0015FE  0E5A               	movlw	90
  1545  001600  60DF               	cpfslt	indf2,c
  1546  001602  0012               	return	
  1547  001604  EE20 F001          	lfsr	2,1
  1548  001608  5026               	movf	RtccWriteTime@pTm,w,c
  1549  00160A  26D9               	addwf	fsr2l,f,c
  1550  00160C  5027               	movf	RtccWriteTime@pTm+1,w,c
  1551  00160E  22DA               	addwfc	fsr2h,f,c
  1552  001610  0E5A               	movlw	90
  1553  001612  60DF               	cpfslt	indf2,c
  1554  001614  0012               	return	
  1555  001616  EE20 F003          	lfsr	2,3
  1556  00161A  5026               	movf	RtccWriteTime@pTm,w,c
  1557  00161C  26D9               	addwf	fsr2l,f,c
  1558  00161E  5027               	movf	RtccWriteTime@pTm+1,w,c
  1559  001620  22DA               	addwfc	fsr2h,f,c
  1560  001622  0E24               	movlw	36
  1561  001624  64DF               	cpfsgt	indf2,c
  1562  001626  D002               	goto	l2672
  1563  001628  0012               	return	
  1564                           
  1565                           ;	Return value of _RtccWriteTime is never used
  1566  00162A  0012               	return	
  1567  00162C                     l2672:
  1568  00162C  EE20 F002          	lfsr	2,2
  1569  001630  5026               	movf	RtccWriteTime@pTm,w,c
  1570  001632  26D9               	addwf	fsr2l,f,c
  1571  001634  5027               	movf	RtccWriteTime@pTm+1,w,c
  1572  001636  22DA               	addwfc	fsr2h,f,c
  1573  001638  50DF               	movf	indf2,w,c
  1574  00163A  6E2E               	movwf	RtccWriteTime@tempMinSec+1,c
  1575  00163C  EE20 F001          	lfsr	2,1
  1576  001640  5026               	movf	RtccWriteTime@pTm,w,c
  1577  001642  26D9               	addwf	fsr2l,f,c
  1578  001644  5027               	movf	RtccWriteTime@pTm+1,w,c
  1579  001646  22DA               	addwfc	fsr2h,f,c
  1580  001648  50DF               	movf	indf2,w,c
  1581  00164A  6E2D               	movwf	RtccWriteTime@tempMinSec,c
  1582  00164C  5028               	movf	RtccWriteTime@di,w,c
  1583  00164E  B4D8               	btfsc	status,2,c
  1584  001650  D002               	goto	l2678
  1585  001652  9CF2               	bcf	intcon,6,c	;volatile
  1586  001654  D000               	goto	l2678
  1587  001656                     l2678:
  1588  001656  0E00               	movlw	0
  1589  001658  BB3F               	btfsc	63,5,b	;volatile
  1590  00165A  0E01               	movlw	1
  1591  00165C  6E2C               	movwf	RtccWriteTime@wasWrEn,c
  1592  00165E  502C               	movf	RtccWriteTime@wasWrEn,w,c
  1593  001660  A4D8               	btfss	status,2,c
  1594  001662  D003               	goto	l2682
  1595  001664  ECB5  F012         	call	_RtccWrOn	;wreg free
  1596  001668  D000               	goto	l2682
  1597  00166A                     l2682:
  1598  00166A  0E00               	movlw	0
  1599  00166C  BF3F               	btfsc	63,7,b	;volatile
  1600  00166E  0E01               	movlw	1
  1601  001670  6E2A               	movwf	RtccWriteTime@wasOn,c
  1602  001672  502A               	movf	RtccWriteTime@wasOn,w,c
  1603  001674  B4D8               	btfsc	status,2,c
  1604  001676  D007               	goto	l2688
  1605  001678  0E00               	movlw	0
  1606  00167A  BE91               	btfsc	3985,7,c	;volatile
  1607  00167C  0E01               	movlw	1
  1608  00167E  6E2B               	movwf	RtccWriteTime@wasAlrm,c
  1609  001680  010F               	movlb	15	; () banked
  1610  001682  9F3F               	bcf	63,7,b	;volatile
  1611  001684  D000               	goto	l2688
  1612  001686                     l2688:
  1613  001686  0EFC               	movlw	252
  1614  001688  010F               	movlb	15	; () banked
  1615  00168A  173F               	andwf	63,f,b	;volatile
  1616  00168C  010F               	movlb	15	; () banked
  1617  00168E  813F               	bsf	63,0,b	;volatile
  1618                           
  1619                           ; BSR set to: 15
  1620  001690  CF98 F02F          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1621                           
  1622                           ; BSR set to: 15
  1623  001694  CF99 F030          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1624                           
  1625                           ; BSR set to: 15
  1626  001698  EE20 F003          	lfsr	2,3
  1627  00169C  5026               	movf	RtccWriteTime@pTm,w,c
  1628  00169E  26D9               	addwf	fsr2l,f,c
  1629  0016A0  5027               	movf	RtccWriteTime@pTm+1,w,c
  1630  0016A2  22DA               	addwfc	fsr2h,f,c
  1631  0016A4  50DF               	movf	indf2,w,c
  1632  0016A6  6E2F               	movwf	RtccWriteTime@tempHourWDay,c
  1633                           
  1634                           ; BSR set to: 15
  1635  0016A8  0EFC               	movlw	252
  1636  0016AA  010F               	movlb	15	; () banked
  1637  0016AC  173F               	andwf	63,f,b	;volatile
  1638                           
  1639                           ; BSR set to: 15
  1640  0016AE  010F               	movlb	15	; () banked
  1641  0016B0  813F               	bsf	63,0,b	;volatile
  1642                           
  1643                           ; BSR set to: 15
  1644  0016B2  C02F  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1645                           
  1646                           ; BSR set to: 15
  1647  0016B6  C030  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1648                           
  1649                           ; BSR set to: 15
  1650  0016BA  C02D  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1651                           
  1652                           ; BSR set to: 15
  1653  0016BE  C02E  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1654                           
  1655                           ; BSR set to: 15
  1656  0016C2  502A               	movf	RtccWriteTime@wasOn,w,c
  1657  0016C4  B4D8               	btfsc	status,2,c
  1658  0016C6  D00D               	goto	l2720
  1659                           
  1660                           ; BSR set to: 15
  1661  0016C8  010F               	movlb	15	; () banked
  1662  0016CA  8F3F               	bsf	63,7,b	;volatile
  1663                           
  1664                           ; BSR set to: 15
  1665  0016CC  502B               	movf	RtccWriteTime@wasAlrm,w,c
  1666  0016CE  B4D8               	btfsc	status,2,c
  1667  0016D0  D002               	goto	l2716
  1668                           
  1669                           ; BSR set to: 15
  1670  0016D2  8E91               	bsf	3985,7,c	;volatile
  1671  0016D4  D000               	goto	l2716
  1672  0016D6                     l2716:
  1673                           
  1674                           ; BSR set to: 15
  1675  0016D6  502C               	movf	RtccWriteTime@wasWrEn,w,c
  1676  0016D8  B4D8               	btfsc	status,2,c
  1677  0016DA  D009               	goto	l2724
  1678                           
  1679                           ; BSR set to: 15
  1680  0016DC  ECB5  F012         	call	_RtccWrOn	;wreg free
  1681  0016E0  D006               	goto	l2724
  1682  0016E2                     l2720:
  1683  0016E2  502C               	movf	RtccWriteTime@wasWrEn,w,c
  1684  0016E4  A4D8               	btfss	status,2,c
  1685  0016E6  D003               	goto	l2724
  1686  0016E8  010F               	movlb	15	; () banked
  1687  0016EA  9B3F               	bcf	63,5,b	;volatile
  1688                           
  1689                           ; BSR set to: 15
  1690  0016EC  D000               	goto	l2724
  1691  0016EE                     l2724:
  1692  0016EE  5028               	movf	RtccWriteTime@di,w,c
  1693  0016F0  B4D8               	btfsc	status,2,c
  1694  0016F2  0012               	return	
  1695  0016F4  8CF2               	bsf	intcon,6,c	;volatile
  1696  0016F6  0012               	return	
  1697                           
  1698                           ;	Return value of _RtccWriteTime is never used
  1699  0016F8  0012               	return		;funcret
  1700  0016FA                     __end_of_RtccWriteTime:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           prodl	equ	0xFF3
  1707                           intcon	equ	0xFF2
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           postdec1	equ	0xFE5
  1711                           fsr1l	equ	0xFE1
  1712                           indf2	equ	0xFDF
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _RtccWriteDate *****************
  1718 ;; Defined at:
  1719 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  pDt             2    0[COMRAM] PTR const struct .
  1722 ;;		 -> RtccDate(4), 
  1723 ;;  di              1    2[COMRAM] enum E7121
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  tempHourWDay    2   11[COMRAM] struct .
  1726 ;;  tempDayMonth    2    9[COMRAM] struct .
  1727 ;;  tempYear        2    6[COMRAM] struct .
  1728 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1729 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1730 ;;  wasOn           1    4[COMRAM] enum E7121
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      enum E7337
  1733 ;; Registers used:
  1734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1740 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1744 ;;Total ram usage:       13 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    1
  1747 ;; This function calls:
  1748 ;;		_RtccWrOn
  1749 ;; This function is called by:
  1750 ;;		_Write_RTC
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text5
  1755  0014A8                     __ptext5:
  1756                           	opt stack 0
  1757  0014A8                     _RtccWriteDate:
  1758                           	opt stack 27
  1759                           
  1760                           ;incstack = 0
  1761  0014A8  0E00               	movlw	0
  1762  0014AA  6E2B               	movwf	RtccWriteDate@wasAlrm,c
  1763  0014AC  EE20 F002          	lfsr	2,2
  1764  0014B0  5026               	movf	RtccWriteDate@pDt,w,c
  1765  0014B2  26D9               	addwf	fsr2l,f,c
  1766  0014B4  5027               	movf	RtccWriteDate@pDt+1,w,c
  1767  0014B6  22DA               	addwfc	fsr2h,f,c
  1768  0014B8  0E13               	movlw	19
  1769  0014BA  60DF               	cpfslt	indf2,c
  1770  0014BC  0012               	return	
  1771  0014BE  EE20 F002          	lfsr	2,2
  1772  0014C2  5026               	movf	RtccWriteDate@pDt,w,c
  1773  0014C4  26D9               	addwf	fsr2l,f,c
  1774  0014C6  5027               	movf	RtccWriteDate@pDt+1,w,c
  1775  0014C8  22DA               	addwfc	fsr2h,f,c
  1776  0014CA  50DF               	movf	indf2,w,c
  1777  0014CC  B4D8               	btfsc	status,2,c
  1778  0014CE  0012               	return	
  1779  0014D0  EE20 F001          	lfsr	2,1
  1780  0014D4  5026               	movf	RtccWriteDate@pDt,w,c
  1781  0014D6  26D9               	addwf	fsr2l,f,c
  1782  0014D8  5027               	movf	RtccWriteDate@pDt+1,w,c
  1783  0014DA  22DA               	addwfc	fsr2h,f,c
  1784  0014DC  0E32               	movlw	50
  1785  0014DE  60DF               	cpfslt	indf2,c
  1786  0014E0  0012               	return	
  1787  0014E2  EE20 F001          	lfsr	2,1
  1788  0014E6  5026               	movf	RtccWriteDate@pDt,w,c
  1789  0014E8  26D9               	addwf	fsr2l,f,c
  1790  0014EA  5027               	movf	RtccWriteDate@pDt+1,w,c
  1791  0014EC  22DA               	addwfc	fsr2h,f,c
  1792  0014EE  50DF               	movf	indf2,w,c
  1793  0014F0  B4D8               	btfsc	status,2,c
  1794  0014F2  0012               	return	
  1795  0014F4  EE20 F003          	lfsr	2,3
  1796  0014F8  5026               	movf	RtccWriteDate@pDt,w,c
  1797  0014FA  26D9               	addwf	fsr2l,f,c
  1798  0014FC  5027               	movf	RtccWriteDate@pDt+1,w,c
  1799  0014FE  22DA               	addwfc	fsr2h,f,c
  1800  001500  0E99               	movlw	153
  1801  001502  64DF               	cpfsgt	indf2,c
  1802  001504  D002               	goto	l2740
  1803  001506  0012               	return	
  1804                           
  1805                           ;	Return value of _RtccWriteDate is never used
  1806  001508  0012               	return	
  1807  00150A                     l2740:
  1808  00150A  EE20 F003          	lfsr	2,3
  1809  00150E  5026               	movf	RtccWriteDate@pDt,w,c
  1810  001510  26D9               	addwf	fsr2l,f,c
  1811  001512  5027               	movf	RtccWriteDate@pDt+1,w,c
  1812  001514  22DA               	addwfc	fsr2h,f,c
  1813  001516  50DF               	movf	indf2,w,c
  1814  001518  6E2C               	movwf	RtccWriteDate@tempYear,c
  1815  00151A  EE20 F001          	lfsr	2,1
  1816  00151E  5026               	movf	RtccWriteDate@pDt,w,c
  1817  001520  26D9               	addwf	fsr2l,f,c
  1818  001522  5027               	movf	RtccWriteDate@pDt+1,w,c
  1819  001524  22DA               	addwfc	fsr2h,f,c
  1820  001526  50DF               	movf	indf2,w,c
  1821  001528  6E2F               	movwf	RtccWriteDate@tempDayMonth,c
  1822  00152A  EE20 F002          	lfsr	2,2
  1823  00152E  5026               	movf	RtccWriteDate@pDt,w,c
  1824  001530  26D9               	addwf	fsr2l,f,c
  1825  001532  5027               	movf	RtccWriteDate@pDt+1,w,c
  1826  001534  22DA               	addwfc	fsr2h,f,c
  1827  001536  50DF               	movf	indf2,w,c
  1828  001538  6E30               	movwf	RtccWriteDate@tempDayMonth+1,c
  1829  00153A  5028               	movf	RtccWriteDate@di,w,c
  1830  00153C  B4D8               	btfsc	status,2,c
  1831  00153E  D002               	goto	l2746
  1832  001540  9CF2               	bcf	intcon,6,c	;volatile
  1833  001542  D000               	goto	l2746
  1834  001544                     l2746:
  1835  001544  0E00               	movlw	0
  1836  001546  BB3F               	btfsc	63,5,b	;volatile
  1837  001548  0E01               	movlw	1
  1838  00154A  6E2E               	movwf	RtccWriteDate@wasWrEn,c
  1839  00154C  502E               	movf	RtccWriteDate@wasWrEn,w,c
  1840  00154E  A4D8               	btfss	status,2,c
  1841  001550  D003               	goto	l2750
  1842  001552  ECB5  F012         	call	_RtccWrOn	;wreg free
  1843  001556  D000               	goto	l2750
  1844  001558                     l2750:
  1845  001558  0E00               	movlw	0
  1846  00155A  BF3F               	btfsc	63,7,b	;volatile
  1847  00155C  0E01               	movlw	1
  1848  00155E  6E2A               	movwf	RtccWriteDate@wasOn,c
  1849  001560  502A               	movf	RtccWriteDate@wasOn,w,c
  1850  001562  B4D8               	btfsc	status,2,c
  1851  001564  D007               	goto	l2756
  1852  001566  0E00               	movlw	0
  1853  001568  BE91               	btfsc	3985,7,c	;volatile
  1854  00156A  0E01               	movlw	1
  1855  00156C  6E2B               	movwf	RtccWriteDate@wasAlrm,c
  1856  00156E  010F               	movlb	15	; () banked
  1857  001570  9F3F               	bcf	63,7,b	;volatile
  1858  001572  D000               	goto	l2756
  1859  001574                     l2756:
  1860  001574  0EFC               	movlw	252
  1861  001576  010F               	movlb	15	; () banked
  1862  001578  173F               	andwf	63,f,b	;volatile
  1863  00157A  010F               	movlb	15	; () banked
  1864  00157C  813F               	bsf	63,0,b	;volatile
  1865                           
  1866                           ; BSR set to: 15
  1867  00157E  CF98 F031          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  1868                           
  1869                           ; BSR set to: 15
  1870  001582  CF99 F032          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  1871                           
  1872                           ; BSR set to: 15
  1873  001586  C026  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  1874  00158A  C027  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  1875  00158E  50DF               	movf	indf2,w,c
  1876  001590  6E32               	movwf	RtccWriteDate@tempHourWDay+1,c
  1877                           
  1878                           ; BSR set to: 15
  1879  001592  0EFC               	movlw	252
  1880  001594  010F               	movlb	15	; () banked
  1881  001596  173F               	andwf	63,f,b	;volatile
  1882                           
  1883                           ; BSR set to: 15
  1884  001598  0E03               	movlw	3
  1885  00159A  010F               	movlb	15	; () banked
  1886  00159C  133F               	iorwf	63,f,b	;volatile
  1887                           
  1888                           ; BSR set to: 15
  1889  00159E  C02C  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  1890                           
  1891                           ; BSR set to: 15
  1892  0015A2  C02D  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  1893                           
  1894                           ; BSR set to: 15
  1895  0015A6  C02F  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  1896                           
  1897                           ; BSR set to: 15
  1898  0015AA  C030  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  1899                           
  1900                           ; BSR set to: 15
  1901  0015AE  C031  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  1902                           
  1903                           ; BSR set to: 15
  1904  0015B2  C032  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  1905                           
  1906                           ; BSR set to: 15
  1907  0015B6  502A               	movf	RtccWriteDate@wasOn,w,c
  1908  0015B8  B4D8               	btfsc	status,2,c
  1909  0015BA  D00D               	goto	l2792
  1910                           
  1911                           ; BSR set to: 15
  1912  0015BC  010F               	movlb	15	; () banked
  1913  0015BE  8F3F               	bsf	63,7,b	;volatile
  1914                           
  1915                           ; BSR set to: 15
  1916  0015C0  502B               	movf	RtccWriteDate@wasAlrm,w,c
  1917  0015C2  B4D8               	btfsc	status,2,c
  1918  0015C4  D002               	goto	l2788
  1919                           
  1920                           ; BSR set to: 15
  1921  0015C6  8E91               	bsf	3985,7,c	;volatile
  1922  0015C8  D000               	goto	l2788
  1923  0015CA                     l2788:
  1924                           
  1925                           ; BSR set to: 15
  1926  0015CA  502E               	movf	RtccWriteDate@wasWrEn,w,c
  1927  0015CC  B4D8               	btfsc	status,2,c
  1928  0015CE  D009               	goto	l2796
  1929                           
  1930                           ; BSR set to: 15
  1931  0015D0  ECB5  F012         	call	_RtccWrOn	;wreg free
  1932  0015D4  D006               	goto	l2796
  1933  0015D6                     l2792:
  1934  0015D6  502E               	movf	RtccWriteDate@wasWrEn,w,c
  1935  0015D8  A4D8               	btfss	status,2,c
  1936  0015DA  D003               	goto	l2796
  1937  0015DC  010F               	movlb	15	; () banked
  1938  0015DE  9B3F               	bcf	63,5,b	;volatile
  1939                           
  1940                           ; BSR set to: 15
  1941  0015E0  D000               	goto	l2796
  1942  0015E2                     l2796:
  1943  0015E2  5028               	movf	RtccWriteDate@di,w,c
  1944  0015E4  B4D8               	btfsc	status,2,c
  1945  0015E6  0012               	return	
  1946  0015E8  9CF2               	bcf	intcon,6,c	;volatile
  1947  0015EA  0012               	return	
  1948                           
  1949                           ;	Return value of _RtccWriteDate is never used
  1950  0015EC  0012               	return		;funcret
  1951  0015EE                     __end_of_RtccWriteDate:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           prodl	equ	0xFF3
  1958                           intcon	equ	0xFF2
  1959                           postinc0	equ	0xFEE
  1960                           wreg	equ	0xFE8
  1961                           postdec1	equ	0xFE5
  1962                           fsr1l	equ	0xFE1
  1963                           indf2	equ	0xFDF
  1964                           fsr2h	equ	0xFDA
  1965                           fsr2l	equ	0xFD9
  1966                           status	equ	0xFD8
  1967                           
  1968 ;; *************** function _RtccWrOn *****************
  1969 ;; Defined at:
  1970 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  data            2    0        unsigned int 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;		None               void
  1977 ;; Registers used:
  1978 ;;		wreg, status,2
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_Write_RTC
  1994 ;;		_RtccWriteDate
  1995 ;;		_RtccWriteTime
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text6
  2000  00256A                     __ptext6:
  2001                           	opt stack 0
  2002  00256A                     _RtccWrOn:
  2003                           	opt stack 27
  2004                           
  2005                           ;incstack = 0
  2006  00256A  9CF2               	bcf	intcon,6,c	;volatile
  2007  00256C  0E55               	movlw	85
  2008  00256E  6EA7               	movwf	4007,c	;volatile
  2009  002570  0EAA               	movlw	170
  2010  002572  6EA7               	movwf	4007,c	;volatile
  2011  002574  010F               	movlb	15	; () banked
  2012  002576  8B3F               	bsf	63,5,b	;volatile
  2013                           
  2014                           ; BSR set to: 15
  2015  002578  8CF2               	bsf	intcon,6,c	;volatile
  2016                           
  2017                           ; BSR set to: 15
  2018  00257A  0012               	return		;funcret
  2019  00257C                     __end_of_RtccWrOn:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodl	equ	0xFF3
  2026                           intcon	equ	0xFF2
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1l	equ	0xFE1
  2031                           indf2	equ	0xFDF
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _keyboard_control *****************
  2037 ;; Defined at:
  2038 ;;		line 419 in file "main.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;		None               void
  2045 ;; Registers used:
  2046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;Total ram usage:        1 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:   10
  2059 ;; This function calls:
  2060 ;;		_button_A
  2061 ;;		_button_B
  2062 ;;		_button_C
  2063 ;;		_button_D
  2064 ;;		_button_asterisk
  2065 ;;		_button_hash
  2066 ;;		_button_number
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text7
  2073  001206                     __ptext7:
  2074                           	opt stack 0
  2075  001206                     _keyboard_control:
  2076                           	opt stack 20
  2077                           
  2078                           ;main.c: 421: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2079                           
  2080                           ; BSR set to: 15
  2081                           ;incstack = 0
  2082  001206  8089               	bsf	3977,0,c	;volatile
  2083  001208  9289               	bcf	3977,1,c	;volatile
  2084  00120A  9489               	bcf	3977,2,c	;volatile
  2085  00120C  9689               	bcf	3977,3,c	;volatile
  2086                           
  2087                           ;main.c: 422: {
  2088                           ;main.c: 423: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2089  00120E  AA80               	btfss	3968,5,c	;volatile
  2090  001210  D007               	goto	l293
  2091  001212  0E01               	movlw	1
  2092  001214  6E1D               	movwf	_key,c
  2093  001216  ECF4  F00D         	call	_button_number	;wreg free
  2094  00121A  D000               	goto	l294
  2095  00121C                     l294:
  2096  00121C  BA80               	btfsc	3968,5,c	;volatile
  2097  00121E  D7FE               	goto	l294
  2098  001220                     l293:
  2099                           
  2100                           ;main.c: 424: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2101  001220  AE80               	btfss	3968,7,c	;volatile
  2102  001222  D007               	goto	l297
  2103  001224  0E02               	movlw	2
  2104  001226  6E1D               	movwf	_key,c
  2105  001228  ECF4  F00D         	call	_button_number	;wreg free
  2106  00122C  D000               	goto	l298
  2107  00122E                     l298:
  2108  00122E  BE80               	btfsc	3968,7,c	;volatile
  2109  001230  D7FE               	goto	l298
  2110  001232                     l297:
  2111                           
  2112                           ;main.c: 425: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2113  001232  AC80               	btfss	3968,6,c	;volatile
  2114  001234  D007               	goto	l301
  2115  001236  0E03               	movlw	3
  2116  001238  6E1D               	movwf	_key,c
  2117  00123A  ECF4  F00D         	call	_button_number	;wreg free
  2118  00123E  D000               	goto	l302
  2119  001240                     l302:
  2120  001240  BC80               	btfsc	3968,6,c	;volatile
  2121  001242  D7FE               	goto	l302
  2122  001244                     l301:
  2123                           
  2124                           ;main.c: 426: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2125  001244  A482               	btfss	3970,2,c	;volatile
  2126  001246  D007               	goto	l305
  2127  001248  0E0B               	movlw	11
  2128  00124A  6E1D               	movwf	_key,c
  2129  00124C  EC64  F011         	call	_button_A	;wreg free
  2130  001250  D000               	goto	l306
  2131  001252                     l306:
  2132  001252  B482               	btfsc	3970,2,c	;volatile
  2133  001254  D7FE               	goto	l306
  2134  001256                     l305:
  2135                           
  2136                           ;main.c: 427: }
  2137                           ;main.c: 429: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2138  001256  9089               	bcf	3977,0,c	;volatile
  2139  001258  8289               	bsf	3977,1,c	;volatile
  2140  00125A  9489               	bcf	3977,2,c	;volatile
  2141  00125C  9689               	bcf	3977,3,c	;volatile
  2142                           
  2143                           ;main.c: 430: {
  2144                           ;main.c: 431: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2145  00125E  AA80               	btfss	3968,5,c	;volatile
  2146  001260  D007               	goto	l309
  2147  001262  0E04               	movlw	4
  2148  001264  6E1D               	movwf	_key,c
  2149  001266  ECF4  F00D         	call	_button_number	;wreg free
  2150  00126A  D000               	goto	l310
  2151  00126C                     l310:
  2152  00126C  BA80               	btfsc	3968,5,c	;volatile
  2153  00126E  D7FE               	goto	l310
  2154  001270                     l309:
  2155                           
  2156                           ;main.c: 432: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2157  001270  AE80               	btfss	3968,7,c	;volatile
  2158  001272  D007               	goto	l313
  2159  001274  0E05               	movlw	5
  2160  001276  6E1D               	movwf	_key,c
  2161  001278  ECF4  F00D         	call	_button_number	;wreg free
  2162  00127C  D000               	goto	l314
  2163  00127E                     l314:
  2164  00127E  BE80               	btfsc	3968,7,c	;volatile
  2165  001280  D7FE               	goto	l314
  2166  001282                     l313:
  2167                           
  2168                           ;main.c: 433: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2169  001282  AC80               	btfss	3968,6,c	;volatile
  2170  001284  D007               	goto	l317
  2171  001286  0E06               	movlw	6
  2172  001288  6E1D               	movwf	_key,c
  2173  00128A  ECF4  F00D         	call	_button_number	;wreg free
  2174  00128E  D000               	goto	l318
  2175  001290                     l318:
  2176  001290  BC80               	btfsc	3968,6,c	;volatile
  2177  001292  D7FE               	goto	l318
  2178  001294                     l317:
  2179                           
  2180                           ;main.c: 434: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2181  001294  A482               	btfss	3970,2,c	;volatile
  2182  001296  D007               	goto	l321
  2183  001298  0E0C               	movlw	12
  2184  00129A  6E1D               	movwf	_key,c
  2185  00129C  ECA1  F011         	call	_button_B	;wreg free
  2186  0012A0  D000               	goto	l322
  2187  0012A2                     l322:
  2188  0012A2  B482               	btfsc	3970,2,c	;volatile
  2189  0012A4  D7FE               	goto	l322
  2190  0012A6                     l321:
  2191                           
  2192                           ;main.c: 435: }
  2193                           ;main.c: 437: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2194  0012A6  9089               	bcf	3977,0,c	;volatile
  2195  0012A8  9289               	bcf	3977,1,c	;volatile
  2196  0012AA  8489               	bsf	3977,2,c	;volatile
  2197  0012AC  9689               	bcf	3977,3,c	;volatile
  2198                           
  2199                           ;main.c: 438: {
  2200                           ;main.c: 439: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2201  0012AE  AA80               	btfss	3968,5,c	;volatile
  2202  0012B0  D007               	goto	l325
  2203  0012B2  0E07               	movlw	7
  2204  0012B4  6E1D               	movwf	_key,c
  2205  0012B6  ECF4  F00D         	call	_button_number	;wreg free
  2206  0012BA  D000               	goto	l326
  2207  0012BC                     l326:
  2208  0012BC  BA80               	btfsc	3968,5,c	;volatile
  2209  0012BE  D7FE               	goto	l326
  2210  0012C0                     l325:
  2211                           
  2212                           ;main.c: 440: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2213  0012C0  AE80               	btfss	3968,7,c	;volatile
  2214  0012C2  D007               	goto	l329
  2215  0012C4  0E08               	movlw	8
  2216  0012C6  6E1D               	movwf	_key,c
  2217  0012C8  ECF4  F00D         	call	_button_number	;wreg free
  2218  0012CC  D000               	goto	l330
  2219  0012CE                     l330:
  2220  0012CE  BE80               	btfsc	3968,7,c	;volatile
  2221  0012D0  D7FE               	goto	l330
  2222  0012D2                     l329:
  2223                           
  2224                           ;main.c: 441: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2225  0012D2  AC80               	btfss	3968,6,c	;volatile
  2226  0012D4  D007               	goto	l333
  2227  0012D6  0E09               	movlw	9
  2228  0012D8  6E1D               	movwf	_key,c
  2229  0012DA  ECF4  F00D         	call	_button_number	;wreg free
  2230  0012DE  D000               	goto	l334
  2231  0012E0                     l334:
  2232  0012E0  BC80               	btfsc	3968,6,c	;volatile
  2233  0012E2  D7FE               	goto	l334
  2234  0012E4                     l333:
  2235                           
  2236                           ;main.c: 442: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2237  0012E4  A482               	btfss	3970,2,c	;volatile
  2238  0012E6  D007               	goto	l337
  2239  0012E8  0E0D               	movlw	13
  2240  0012EA  6E1D               	movwf	_key,c
  2241  0012EC  EC91  F012         	call	_button_C	;wreg free
  2242  0012F0  D000               	goto	l338
  2243  0012F2                     l338:
  2244  0012F2  B482               	btfsc	3970,2,c	;volatile
  2245  0012F4  D7FE               	goto	l338
  2246  0012F6                     l337:
  2247                           
  2248                           ;main.c: 443: }
  2249                           ;main.c: 445: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2250  0012F6  9089               	bcf	3977,0,c	;volatile
  2251  0012F8  9289               	bcf	3977,1,c	;volatile
  2252  0012FA  9489               	bcf	3977,2,c	;volatile
  2253  0012FC  8689               	bsf	3977,3,c	;volatile
  2254                           
  2255                           ;main.c: 446: {
  2256                           ;main.c: 447: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2257  0012FE  AA80               	btfss	3968,5,c	;volatile
  2258  001300  D007               	goto	l341
  2259  001302  0E0E               	movlw	14
  2260  001304  6E1D               	movwf	_key,c
  2261  001306  ECE6  F012         	call	_button_asterisk	;wreg free
  2262  00130A  D000               	goto	l342
  2263  00130C                     l342:
  2264  00130C  BA80               	btfsc	3968,5,c	;volatile
  2265  00130E  D7FE               	goto	l342
  2266  001310                     l341:
  2267                           
  2268                           ;main.c: 448: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2269  001310  AE80               	btfss	3968,7,c	;volatile
  2270  001312  D007               	goto	l345
  2271  001314  0E00               	movlw	0
  2272  001316  6E1D               	movwf	_key,c
  2273  001318  ECF4  F00D         	call	_button_number	;wreg free
  2274  00131C  D000               	goto	l346
  2275  00131E                     l346:
  2276  00131E  BE80               	btfsc	3968,7,c	;volatile
  2277  001320  D7FE               	goto	l346
  2278  001322                     l345:
  2279                           
  2280                           ;main.c: 449: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2281  001322  AC80               	btfss	3968,6,c	;volatile
  2282  001324  D007               	goto	l349
  2283  001326  0E0F               	movlw	15
  2284  001328  6E1D               	movwf	_key,c
  2285  00132A  ECAB  F012         	call	_button_hash	;wreg free
  2286  00132E  D000               	goto	l350
  2287  001330                     l350:
  2288  001330  BC80               	btfsc	3968,6,c	;volatile
  2289  001332  D7FE               	goto	l350
  2290  001334                     l349:
  2291                           
  2292                           ;main.c: 450: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2293  001334  A482               	btfss	3970,2,c	;volatile
  2294  001336  D009               	goto	l3346
  2295  001338  0E10               	movlw	16
  2296  00133A  6E1D               	movwf	_key,c
  2297  00133C  ECDC  F012         	call	_button_D	;wreg free
  2298  001340  D000               	goto	l354
  2299  001342                     l354:
  2300  001342  A482               	btfss	3970,2,c	;volatile
  2301  001344  D002               	goto	l3346
  2302  001346  D7FD               	goto	l354
  2303  001348  D000               	goto	l3346
  2304  00134A                     l3346:
  2305                           
  2306                           ;main.c: 451: }
  2307                           ;main.c: 453: _delay((unsigned long)((98)*(8000000/4000.0)));
  2308  00134A  0EFF               	movlw	255
  2309  00134C  6E49               	movwf	??_keyboard_control& (0+255),c
  2310  00134E  0E8A               	movlw	138
  2311  001350                     u2377:
  2312  001350  2EE8               	decfsz	wreg,f,c
  2313  001352  D7FE               	goto	u2377
  2314  001354  2E49               	decfsz	??_keyboard_control& (0+255),f,c
  2315  001356  D7FC               	goto	u2377
  2316  001358  D000               	nop2	
  2317  00135A  0012               	return		;funcret
  2318  00135C                     __end_of_keyboard_control:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           prodl	equ	0xFF3
  2325                           intcon	equ	0xFF2
  2326                           postinc0	equ	0xFEE
  2327                           wreg	equ	0xFE8
  2328                           postdec1	equ	0xFE5
  2329                           fsr1l	equ	0xFE1
  2330                           indf2	equ	0xFDF
  2331                           fsr2h	equ	0xFDA
  2332                           fsr2l	equ	0xFD9
  2333                           status	equ	0xFD8
  2334                           
  2335 ;; *************** function _button_number *****************
  2336 ;; Defined at:
  2337 ;;		line 400 in file "main.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;		None               void
  2344 ;; Registers used:
  2345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2355 ;;Total ram usage:        0 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    5
  2358 ;; This function calls:
  2359 ;;		_lcd_putrs
  2360 ;;		_reset_home_callback
  2361 ;;		_sprintf
  2362 ;;		_strcat
  2363 ;; This function is called by:
  2364 ;;		_keyboard_control
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text8
  2369  001BE8                     __ptext8:
  2370                           	opt stack 0
  2371  001BE8                     _button_number:
  2372                           	opt stack 24
  2373                           
  2374                           ;main.c: 402: reset_home_callback();
  2375                           
  2376                           ;incstack = 0
  2377  001BE8  ECE1  F012         	call	_reset_home_callback	;wreg free
  2378                           
  2379                           ;main.c: 404: if(activity == 1){
  2380  001BEC  0403               	decf	_activity,w,c
  2381  001BEE  1004               	iorwf	_activity+1,w,c
  2382  001BF0  A4D8               	btfss	status,2,c
  2383  001BF2  D01E               	goto	l3188
  2384                           
  2385                           ;main.c: 406: lcd_putrs("*");
  2386  001BF4  0E9D               	movlw	low STR_37
  2387  001BF6  6E2E               	movwf	lcd_putrs@ptr,c
  2388  001BF8  0E0F               	movlw	high STR_37
  2389  001BFA  6E2F               	movwf	lcd_putrs@ptr+1,c
  2390  001BFC  EC4C  F00F         	call	_lcd_putrs	;wreg free
  2391                           
  2392                           ;main.c: 407: sprintf(buffer1, "%01u", key);
  2393  001C00  0E7C               	movlw	low _buffer1
  2394  001C02  6E32               	movwf	sprintf@sp,c
  2395  001C04  0E00               	movlw	high _buffer1
  2396  001C06  6E33               	movwf	sprintf@sp+1,c
  2397  001C08  0E8B               	movlw	low STR_38
  2398  001C0A  6E34               	movwf	sprintf@f,c
  2399  001C0C  0E0F               	movlw	high STR_38
  2400  001C0E  6E35               	movwf	sprintf@f+1,c
  2401  001C10  C01D  F036         	movff	_key,?_sprintf+4
  2402  001C14  6A37               	clrf	?_sprintf+5,c
  2403  001C16  ECD1  F007         	call	_sprintf	;wreg free
  2404                           
  2405                           ;main.c: 408: strcat(pin_input, buffer1);
  2406  001C1A  0E95               	movlw	low _pin_input
  2407  001C1C  6E26               	movwf	strcat@to,c
  2408  001C1E  0E00               	movlw	high _pin_input
  2409  001C20  6E27               	movwf	strcat@to+1,c
  2410  001C22  0E7C               	movlw	low _buffer1
  2411  001C24  6E28               	movwf	strcat@from,c
  2412  001C26  0E00               	movlw	high _buffer1
  2413  001C28  6E29               	movwf	strcat@from+1,c
  2414  001C2A  EC10  F010         	call	_strcat	;wreg free
  2415                           
  2416                           ;main.c: 410: } else {
  2417  001C2E  0012               	return	
  2418  001C30                     l3188:
  2419                           
  2420                           ;main.c: 412: sprintf(buffer1,"%01u",key);
  2421  001C30  0E7C               	movlw	low _buffer1
  2422  001C32  6E32               	movwf	sprintf@sp,c
  2423  001C34  0E00               	movlw	high _buffer1
  2424  001C36  6E33               	movwf	sprintf@sp+1,c
  2425  001C38  0E8B               	movlw	low STR_38
  2426  001C3A  6E34               	movwf	sprintf@f,c
  2427  001C3C  0E0F               	movlw	high STR_38
  2428  001C3E  6E35               	movwf	sprintf@f+1,c
  2429  001C40  C01D  F036         	movff	_key,?_sprintf+4
  2430  001C44  6A37               	clrf	?_sprintf+5,c
  2431  001C46  ECD1  F007         	call	_sprintf	;wreg free
  2432  001C4A  0012               	return	
  2433  001C4C  0012               	return		;funcret
  2434  001C4E                     __end_of_button_number:
  2435                           	opt stack 0
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postdec1	equ	0xFE5
  2445                           fsr1l	equ	0xFE1
  2446                           indf2	equ	0xFDF
  2447                           fsr2h	equ	0xFDA
  2448                           fsr2l	equ	0xFD9
  2449                           status	equ	0xFD8
  2450                           
  2451 ;; *************** function _strcat *****************
  2452 ;; Defined at:
  2453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  to              2    0[COMRAM] PTR unsigned char 
  2456 ;;		 -> pin_input(5), 
  2457 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2458 ;;		 -> buffer1(20), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  cp              2    4[COMRAM] PTR unsigned char 
  2461 ;;		 -> pin_input(5), 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2    0[COMRAM] PTR unsigned char 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;Total ram usage:        6 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_button_number
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text9
  2485  002020                     __ptext9:
  2486                           	opt stack 0
  2487  002020                     _strcat:
  2488                           	opt stack 28
  2489                           
  2490                           ;incstack = 0
  2491  002020  C026  F02A         	movff	strcat@to,strcat@cp
  2492  002024  C027  F02B         	movff	strcat@to+1,strcat@cp+1
  2493  002028  D003               	goto	l2970
  2494  00202A                     l2968:
  2495  00202A  4A2A               	infsnz	strcat@cp,f,c
  2496  00202C  2A2B               	incf	strcat@cp+1,f,c
  2497  00202E  D000               	goto	l2970
  2498  002030                     l2970:
  2499  002030  C02A  FFD9         	movff	strcat@cp,fsr2l
  2500  002034  C02B  FFDA         	movff	strcat@cp+1,fsr2h
  2501  002038  50DF               	movf	indf2,w,c
  2502  00203A  B4D8               	btfsc	status,2,c
  2503  00203C  D007               	goto	l2974
  2504  00203E  D7F5               	goto	l2968
  2505  002040  D005               	goto	l2974
  2506  002042                     l2972:
  2507  002042  4A2A               	infsnz	strcat@cp,f,c
  2508  002044  2A2B               	incf	strcat@cp+1,f,c
  2509  002046  4A28               	infsnz	strcat@from,f,c
  2510  002048  2A29               	incf	strcat@from+1,f,c
  2511  00204A  D000               	goto	l2974
  2512  00204C                     l2974:
  2513  00204C  C028  FFD9         	movff	strcat@from,fsr2l
  2514  002050  C029  FFDA         	movff	strcat@from+1,fsr2h
  2515  002054  C02A  FFE1         	movff	strcat@cp,fsr1l
  2516  002058  C02B  FFE2         	movff	strcat@cp+1,fsr1h
  2517  00205C  CFDF FFE7          	movff	indf2,indf1
  2518  002060  50E7               	movf	indf1,w,c
  2519  002062  A4D8               	btfss	status,2,c
  2520  002064  D7EE               	goto	l2972
  2521                           
  2522                           ;	Return value of _strcat is never used
  2523  002066  0012               	return		;funcret
  2524  002068                     __end_of_strcat:
  2525                           	opt stack 0
  2526                           tblptru	equ	0xFF8
  2527                           tblptrh	equ	0xFF7
  2528                           tblptrl	equ	0xFF6
  2529                           tablat	equ	0xFF5
  2530                           prodl	equ	0xFF3
  2531                           intcon	equ	0xFF2
  2532                           postinc0	equ	0xFEE
  2533                           wreg	equ	0xFE8
  2534                           indf1	equ	0xFE7
  2535                           postdec1	equ	0xFE5
  2536                           fsr1h	equ	0xFE2
  2537                           fsr1l	equ	0xFE1
  2538                           indf2	equ	0xFDF
  2539                           fsr2h	equ	0xFDA
  2540                           fsr2l	equ	0xFD9
  2541                           status	equ	0xFD8
  2542                           
  2543 ;; *************** function _button_hash *****************
  2544 ;; Defined at:
  2545 ;;		line 390 in file "main.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;		None               void
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    9
  2566 ;; This function calls:
  2567 ;;		_pin_input_validator
  2568 ;;		_reset_home_callback
  2569 ;; This function is called by:
  2570 ;;		_keyboard_control
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text10
  2575  002556                     __ptext10:
  2576                           	opt stack 0
  2577  002556                     _button_hash:
  2578                           	opt stack 20
  2579                           
  2580                           ;main.c: 392: reset_home_callback();
  2581                           
  2582                           ;incstack = 0
  2583  002556  ECE1  F012         	call	_reset_home_callback	;wreg free
  2584                           
  2585                           ;main.c: 394: if(activity == 1){
  2586  00255A  0403               	decf	_activity,w,c
  2587  00255C  1004               	iorwf	_activity+1,w,c
  2588  00255E  A4D8               	btfss	status,2,c
  2589  002560  0012               	return	
  2590                           
  2591                           ;main.c: 395: pin_input_validator();
  2592  002562  ECBB  F011         	call	_pin_input_validator	;wreg free
  2593  002566  0012               	return	
  2594  002568  0012               	return		;funcret
  2595  00256A                     __end_of_button_hash:
  2596                           	opt stack 0
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodl	equ	0xFF3
  2602                           intcon	equ	0xFF2
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           indf1	equ	0xFE7
  2606                           postdec1	equ	0xFE5
  2607                           fsr1h	equ	0xFE2
  2608                           fsr1l	equ	0xFE1
  2609                           indf2	equ	0xFDF
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _pin_input_validator *****************
  2615 ;; Defined at:
  2616 ;;		line 269 in file "main.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  comparision     2   16[COMRAM] int 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;		None               void
  2623 ;; Registers used:
  2624 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;Total ram usage:        2 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    8
  2637 ;; This function calls:
  2638 ;;		_activity_menu
  2639 ;;		_activity_pin
  2640 ;;		_strcmp
  2641 ;; This function is called by:
  2642 ;;		_button_hash
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text11
  2647  002376                     __ptext11:
  2648                           	opt stack 0
  2649  002376                     _pin_input_validator:
  2650                           	opt stack 20
  2651                           
  2652                           ;main.c: 271: int comparision = strcmp(pin, pin_input);
  2653                           
  2654                           ;incstack = 0
  2655  002376  0E90               	movlw	low _pin
  2656  002378  6E26               	movwf	strcmp@s1,c
  2657  00237A  0E00               	movlw	high _pin
  2658  00237C  6E27               	movwf	strcmp@s1+1,c
  2659  00237E  0E95               	movlw	low _pin_input
  2660  002380  6E28               	movwf	strcmp@s2,c
  2661  002382  0E00               	movlw	high _pin_input
  2662  002384  6E29               	movwf	strcmp@s2+1,c
  2663  002386  EC76  F00F         	call	_strcmp	;wreg free
  2664  00238A  C026  F036         	movff	?_strcmp,pin_input_validator@comparision
  2665  00238E  C027  F037         	movff	?_strcmp+1,pin_input_validator@comparision+1
  2666                           
  2667                           ;main.c: 273: if( comparision == 0 ){
  2668  002392  5036               	movf	pin_input_validator@comparision,w,c
  2669  002394  1037               	iorwf	pin_input_validator@comparision+1,w,c
  2670  002396  A4D8               	btfss	status,2,c
  2671  002398  D003               	goto	l2930
  2672                           
  2673                           ;main.c: 274: activity_menu();
  2674  00239A  ECC7  F00C         	call	_activity_menu	;wreg free
  2675                           
  2676                           ;main.c: 275: }
  2677  00239E  0012               	return	
  2678  0023A0                     l2930:
  2679                           
  2680                           ;main.c: 276: else{
  2681                           ;main.c: 277: activity_pin();
  2682  0023A0  EC9D  F00F         	call	_activity_pin	;wreg free
  2683  0023A4  0012               	return	
  2684  0023A6  0012               	return		;funcret
  2685  0023A8                     __end_of_pin_input_validator:
  2686                           	opt stack 0
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           prodl	equ	0xFF3
  2692                           intcon	equ	0xFF2
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           indf1	equ	0xFE7
  2696                           postdec1	equ	0xFE5
  2697                           fsr1h	equ	0xFE2
  2698                           fsr1l	equ	0xFE1
  2699                           indf2	equ	0xFDF
  2700                           fsr2h	equ	0xFDA
  2701                           fsr2l	equ	0xFD9
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _strcmp *****************
  2705 ;; Defined at:
  2706 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  2709 ;;		 -> pin(5), 
  2710 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  2711 ;;		 -> pin_input(5), 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  r               1    5[COMRAM] char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2    0[COMRAM] int 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2726 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2727 ;;Total ram usage:        6 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_pin_input_validator
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text12
  2737  001EEC                     __ptext12:
  2738                           	opt stack 0
  2739  001EEC                     _strcmp:
  2740                           	opt stack 27
  2741                           
  2742                           ;incstack = 0
  2743  001EEC  D005               	goto	l2600
  2744  001EEE                     l2598:
  2745  001EEE  4A26               	infsnz	strcmp@s1,f,c
  2746  001EF0  2A27               	incf	strcmp@s1+1,f,c
  2747  001EF2  4A28               	infsnz	strcmp@s2,f,c
  2748  001EF4  2A29               	incf	strcmp@s2+1,f,c
  2749  001EF6  D000               	goto	l2600
  2750  001EF8                     l2600:
  2751  001EF8  C026  FFD9         	movff	strcmp@s1,fsr2l
  2752  001EFC  C027  FFDA         	movff	strcmp@s1+1,fsr2h
  2753  001F00  50DF               	movf	indf2,w,c
  2754  001F02  6E2A               	movwf	??_strcmp& (0+255),c
  2755  001F04  C028  FFD9         	movff	strcmp@s2,fsr2l
  2756  001F08  C029  FFDA         	movff	strcmp@s2+1,fsr2h
  2757  001F0C  50DF               	movf	indf2,w,c
  2758  001F0E  0800               	sublw	0
  2759  001F10  242A               	addwf	??_strcmp,w,c
  2760  001F12  6E2B               	movwf	strcmp@r,c
  2761  001F14  502B               	movf	strcmp@r,w,c
  2762  001F16  A4D8               	btfss	status,2,c
  2763  001F18  D009               	goto	l2604
  2764  001F1A  C026  FFD9         	movff	strcmp@s1,fsr2l
  2765  001F1E  C027  FFDA         	movff	strcmp@s1+1,fsr2h
  2766  001F22  50DF               	movf	indf2,w,c
  2767  001F24  B4D8               	btfsc	status,2,c
  2768  001F26  D002               	goto	l2604
  2769  001F28  D7E2               	goto	l2598
  2770  001F2A  D000               	goto	l2604
  2771  001F2C                     l2604:
  2772  001F2C  502B               	movf	strcmp@r,w,c
  2773  001F2E  6E26               	movwf	?_strcmp,c
  2774  001F30  6A27               	clrf	?_strcmp+1,c
  2775  001F32  BE26               	btfsc	?_strcmp,7,c
  2776  001F34  0627               	decf	?_strcmp+1,f,c
  2777  001F36  0012               	return	
  2778  001F38  0012               	return		;funcret
  2779  001F3A                     __end_of_strcmp:
  2780                           	opt stack 0
  2781                           tblptru	equ	0xFF8
  2782                           tblptrh	equ	0xFF7
  2783                           tblptrl	equ	0xFF6
  2784                           tablat	equ	0xFF5
  2785                           prodl	equ	0xFF3
  2786                           intcon	equ	0xFF2
  2787                           postinc0	equ	0xFEE
  2788                           wreg	equ	0xFE8
  2789                           indf1	equ	0xFE7
  2790                           postdec1	equ	0xFE5
  2791                           fsr1h	equ	0xFE2
  2792                           fsr1l	equ	0xFE1
  2793                           indf2	equ	0xFDF
  2794                           fsr2h	equ	0xFDA
  2795                           fsr2l	equ	0xFD9
  2796                           status	equ	0xFD8
  2797                           
  2798 ;; *************** function _button_asterisk *****************
  2799 ;; Defined at:
  2800 ;;		line 382 in file "main.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;		None               void
  2807 ;; Registers used:
  2808 ;;		cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    1
  2821 ;; This function calls:
  2822 ;;		_reset_home_callback
  2823 ;; This function is called by:
  2824 ;;		_keyboard_control
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text13
  2829  0025CC                     __ptext13:
  2830                           	opt stack 0
  2831  0025CC                     _button_asterisk:
  2832                           	opt stack 28
  2833                           
  2834                           ;main.c: 384: reset_home_callback();
  2835                           
  2836                           ;incstack = 0
  2837  0025CC  ECE1  F012         	call	_reset_home_callback	;wreg free
  2838  0025D0  0012               	return		;funcret
  2839  0025D2                     __end_of_button_asterisk:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodl	equ	0xFF3
  2846                           intcon	equ	0xFF2
  2847                           postinc0	equ	0xFEE
  2848                           wreg	equ	0xFE8
  2849                           indf1	equ	0xFE7
  2850                           postdec1	equ	0xFE5
  2851                           fsr1h	equ	0xFE2
  2852                           fsr1l	equ	0xFE1
  2853                           indf2	equ	0xFDF
  2854                           fsr2h	equ	0xFDA
  2855                           fsr2l	equ	0xFD9
  2856                           status	equ	0xFD8
  2857                           
  2858 ;; *************** function _button_D *****************
  2859 ;; Defined at:
  2860 ;;		line 374 in file "main.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;		None               void
  2867 ;; Registers used:
  2868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    7
  2881 ;; This function calls:
  2882 ;;		_activity_home
  2883 ;;		_reset_home_callback
  2884 ;; This function is called by:
  2885 ;;		_keyboard_control
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text14
  2890  0025B8                     __ptext14:
  2891                           	opt stack 0
  2892  0025B8                     _button_D:
  2893                           	opt stack 22
  2894                           
  2895                           ;main.c: 376: reset_home_callback();
  2896                           
  2897                           ;incstack = 0
  2898  0025B8  ECE1  F012         	call	_reset_home_callback	;wreg free
  2899                           
  2900                           ;main.c: 378: activity_home();
  2901  0025BC  EC34  F012         	call	_activity_home	;wreg free
  2902  0025C0  0012               	return		;funcret
  2903  0025C2                     __end_of_button_D:
  2904                           	opt stack 0
  2905                           tblptru	equ	0xFF8
  2906                           tblptrh	equ	0xFF7
  2907                           tblptrl	equ	0xFF6
  2908                           tablat	equ	0xFF5
  2909                           prodl	equ	0xFF3
  2910                           intcon	equ	0xFF2
  2911                           postinc0	equ	0xFEE
  2912                           wreg	equ	0xFE8
  2913                           indf1	equ	0xFE7
  2914                           postdec1	equ	0xFE5
  2915                           fsr1h	equ	0xFE2
  2916                           fsr1l	equ	0xFE1
  2917                           indf2	equ	0xFDF
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function _button_C *****************
  2923 ;; Defined at:
  2924 ;;		line 364 in file "main.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;		None               void
  2931 ;; Registers used:
  2932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2942 ;;Total ram usage:        0 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    8
  2945 ;; This function calls:
  2946 ;;		_activity_menu
  2947 ;;		_reset_home_callback
  2948 ;; This function is called by:
  2949 ;;		_keyboard_control
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text15
  2954  002522                     __ptext15:
  2955                           	opt stack 0
  2956  002522                     _button_C:
  2957                           	opt stack 21
  2958                           
  2959                           ;main.c: 366: reset_home_callback();
  2960                           
  2961                           ;incstack = 0
  2962  002522  ECE1  F012         	call	_reset_home_callback	;wreg free
  2963                           
  2964                           ;main.c: 368: if(activity != 0 && activity != 1){
  2965  002526  5003               	movf	_activity,w,c
  2966  002528  1004               	iorwf	_activity+1,w,c
  2967  00252A  B4D8               	btfsc	status,2,c
  2968  00252C  0012               	return	
  2969  00252E  0403               	decf	_activity,w,c
  2970  002530  1004               	iorwf	_activity+1,w,c
  2971  002532  B4D8               	btfsc	status,2,c
  2972  002534  0012               	return	
  2973                           
  2974                           ;main.c: 369: activity_menu();
  2975  002536  ECC7  F00C         	call	_activity_menu	;wreg free
  2976  00253A  0012               	return	
  2977  00253C  0012               	return		;funcret
  2978  00253E                     __end_of_button_C:
  2979                           	opt stack 0
  2980                           tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           tblptrl	equ	0xFF6
  2983                           tablat	equ	0xFF5
  2984                           prodl	equ	0xFF3
  2985                           intcon	equ	0xFF2
  2986                           postinc0	equ	0xFEE
  2987                           wreg	equ	0xFE8
  2988                           indf1	equ	0xFE7
  2989                           postdec1	equ	0xFE5
  2990                           fsr1h	equ	0xFE2
  2991                           fsr1l	equ	0xFE1
  2992                           indf2	equ	0xFDF
  2993                           fsr2h	equ	0xFDA
  2994                           fsr2l	equ	0xFD9
  2995                           status	equ	0xFD8
  2996                           
  2997 ;; *************** function _activity_menu *****************
  2998 ;; Defined at:
  2999 ;;		line 189 in file "main.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;Total ram usage:        0 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    7
  3020 ;; This function calls:
  3021 ;;		_action_menu_selector_0
  3022 ;;		_lcd_init
  3023 ;;		_lcd_write
  3024 ;; This function is called by:
  3025 ;;		_pin_input_validator
  3026 ;;		_button_C
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text16
  3031  00198E                     __ptext16:
  3032                           	opt stack 0
  3033  00198E                     _activity_menu:
  3034                           	opt stack 20
  3035                           
  3036                           ;main.c: 191: activity = 2;
  3037                           
  3038                           ;incstack = 0
  3039  00198E  0E00               	movlw	0
  3040  001990  6E04               	movwf	_activity+1,c
  3041  001992  0E02               	movlw	2
  3042  001994  6E03               	movwf	_activity,c
  3043                           
  3044                           ;main.c: 192: lcd_init();
  3045  001996  EC08  F00D         	call	_lcd_init	;wreg free
  3046                           
  3047                           ;main.c: 193: lcd_write(2,1,"Activar");
  3048  00199A  0E00               	movlw	0
  3049  00199C  6E31               	movwf	lcd_write@column+1,c
  3050  00199E  0E02               	movlw	2
  3051  0019A0  6E30               	movwf	lcd_write@column,c
  3052  0019A2  0E00               	movlw	0
  3053  0019A4  6E33               	movwf	lcd_write@row+1,c
  3054  0019A6  0E01               	movlw	1
  3055  0019A8  6E32               	movwf	lcd_write@row,c
  3056  0019AA  0E4D               	movlw	low STR_17
  3057  0019AC  6E34               	movwf	lcd_write@string,c
  3058  0019AE  0E0F               	movlw	high STR_17
  3059  0019B0  6E35               	movwf	lcd_write@string+1,c
  3060  0019B2  EC9F  F012         	call	_lcd_write	;wreg free
  3061                           
  3062                           ;main.c: 194: lcd_write(2,2,"Reloj");
  3063  0019B6  0E00               	movlw	0
  3064  0019B8  6E31               	movwf	lcd_write@column+1,c
  3065  0019BA  0E02               	movlw	2
  3066  0019BC  6E30               	movwf	lcd_write@column,c
  3067  0019BE  0E00               	movlw	0
  3068  0019C0  6E33               	movwf	lcd_write@row+1,c
  3069  0019C2  0E02               	movlw	2
  3070  0019C4  6E32               	movwf	lcd_write@row,c
  3071  0019C6  0E70               	movlw	low STR_18
  3072  0019C8  6E34               	movwf	lcd_write@string,c
  3073  0019CA  0E0F               	movlw	high STR_18
  3074  0019CC  6E35               	movwf	lcd_write@string+1,c
  3075  0019CE  EC9F  F012         	call	_lcd_write	;wreg free
  3076                           
  3077                           ;main.c: 195: lcd_write(10,1,"Pin");
  3078  0019D2  0E00               	movlw	0
  3079  0019D4  6E31               	movwf	lcd_write@column+1,c
  3080  0019D6  0E0A               	movlw	10
  3081  0019D8  6E30               	movwf	lcd_write@column,c
  3082  0019DA  0E00               	movlw	0
  3083  0019DC  6E33               	movwf	lcd_write@row+1,c
  3084  0019DE  0E01               	movlw	1
  3085  0019E0  6E32               	movwf	lcd_write@row,c
  3086  0019E2  0E94               	movlw	low STR_19
  3087  0019E4  6E34               	movwf	lcd_write@string,c
  3088  0019E6  0E0F               	movlw	high STR_19
  3089  0019E8  6E35               	movwf	lcd_write@string+1,c
  3090  0019EA  EC9F  F012         	call	_lcd_write	;wreg free
  3091                           
  3092                           ;main.c: 196: lcd_write(10,2,"Alarma");
  3093  0019EE  0E00               	movlw	0
  3094  0019F0  6E31               	movwf	lcd_write@column+1,c
  3095  0019F2  0E0A               	movlw	10
  3096  0019F4  6E30               	movwf	lcd_write@column,c
  3097  0019F6  0E00               	movlw	0
  3098  0019F8  6E33               	movwf	lcd_write@row+1,c
  3099  0019FA  0E02               	movlw	2
  3100  0019FC  6E32               	movwf	lcd_write@row,c
  3101  0019FE  0E63               	movlw	low STR_20
  3102  001A00  6E34               	movwf	lcd_write@string,c
  3103  001A02  0E0F               	movlw	high STR_20
  3104  001A04  6E35               	movwf	lcd_write@string+1,c
  3105  001A06  EC9F  F012         	call	_lcd_write	;wreg free
  3106                           
  3107                           ;main.c: 197: action_menu_selector_0();
  3108  001A0A  EC43  F011         	call	_action_menu_selector_0	;wreg free
  3109  001A0E  0012               	return		;funcret
  3110  001A10                     __end_of_activity_menu:
  3111                           	opt stack 0
  3112                           tblptru	equ	0xFF8
  3113                           tblptrh	equ	0xFF7
  3114                           tblptrl	equ	0xFF6
  3115                           tablat	equ	0xFF5
  3116                           prodl	equ	0xFF3
  3117                           intcon	equ	0xFF2
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           indf1	equ	0xFE7
  3121                           postdec1	equ	0xFE5
  3122                           fsr1h	equ	0xFE2
  3123                           fsr1l	equ	0xFE1
  3124                           indf2	equ	0xFDF
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _button_B *****************
  3130 ;; Defined at:
  3131 ;;		line 346 in file "main.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;		None               void
  3138 ;; Registers used:
  3139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;Total ram usage:        2 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    9
  3152 ;; This function calls:
  3153 ;;		_button_B_menu
  3154 ;;		_button_B_submenu_activation
  3155 ;;		_reset_home_callback
  3156 ;; This function is called by:
  3157 ;;		_keyboard_control
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text17
  3162  002342                     __ptext17:
  3163                           	opt stack 0
  3164  002342                     _button_B:
  3165                           	opt stack 20
  3166                           
  3167                           ;main.c: 348: reset_home_callback();
  3168                           
  3169                           ;incstack = 0
  3170  002342  ECE1  F012         	call	_reset_home_callback	;wreg free
  3171                           
  3172                           ;main.c: 350: switch(activity){
  3173  002346  D006               	goto	l3152
  3174  002348                     l3146:
  3175                           
  3176                           ;main.c: 353: button_B_menu();
  3177  002348  EC34  F010         	call	_button_B_menu	;wreg free
  3178                           
  3179                           ;main.c: 354: break;
  3180  00234C  0012               	return	
  3181  00234E                     l3148:
  3182                           
  3183                           ;main.c: 357: button_B_submenu_activation();
  3184  00234E  EC84  F011         	call	_button_B_submenu_activation	;wreg free
  3185                           
  3186                           ;main.c: 360: }
  3187                           
  3188                           ;main.c: 358: break;
  3189  002352  0012               	return	
  3190  002354                     l3152:
  3191  002354  C003  F038         	movff	_activity,??_button_B
  3192  002358  C004  F039         	movff	_activity+1,??_button_B+1
  3193                           
  3194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3195                           ; Switch size 1, requested type "space"
  3196                           ; Number of cases is 1, Range of values is 0 to 0
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte            4     3 (average)
  3200                           ;	Chosen strategy is simple_byte
  3201  00235C  5039               	movf	??_button_B+1,w,c
  3202  00235E  0A00               	xorlw	0	; case 0
  3203  002360  A4D8               	btfss	status,2,c
  3204  002362  0012               	return	
  3205                           
  3206                           ; Switch size 1, requested type "space"
  3207                           ; Number of cases is 2, Range of values is 2 to 4
  3208                           ; switch strategies available:
  3209                           ; Name         Instructions Cycles
  3210                           ; simple_byte            7     4 (average)
  3211                           ;	Chosen strategy is simple_byte
  3212  002364  5038               	movf	??_button_B,w,c
  3213  002366  0A02               	xorlw	2	; case 2
  3214  002368  B4D8               	btfsc	status,2,c
  3215  00236A  D7EE               	goto	l3146
  3216  00236C  0A06               	xorlw	6	; case 4
  3217  00236E  A4D8               	btfss	status,2,c
  3218  002370  0012               	return	
  3219  002372  D7ED               	goto	l3148
  3220  002374  0012               	return		;funcret
  3221  002376                     __end_of_button_B:
  3222                           	opt stack 0
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           prodl	equ	0xFF3
  3228                           intcon	equ	0xFF2
  3229                           postinc0	equ	0xFEE
  3230                           wreg	equ	0xFE8
  3231                           indf1	equ	0xFE7
  3232                           postdec1	equ	0xFE5
  3233                           fsr1h	equ	0xFE2
  3234                           fsr1l	equ	0xFE1
  3235                           indf2	equ	0xFDF
  3236                           fsr2h	equ	0xFDA
  3237                           fsr2l	equ	0xFD9
  3238                           status	equ	0xFD8
  3239                           
  3240 ;; *************** function _button_B_submenu_activation *****************
  3241 ;; Defined at:
  3242 ;;		line 328 in file "main.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;		None               void
  3249 ;; Registers used:
  3250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3260 ;;Total ram usage:        2 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    7
  3263 ;; This function calls:
  3264 ;;		_activity_home
  3265 ;; This function is called by:
  3266 ;;		_button_B
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text18
  3271  002308                     __ptext18:
  3272                           	opt stack 0
  3273  002308                     _button_B_submenu_activation:
  3274                           	opt stack 21
  3275                           
  3276                           ;main.c: 330: switch(submenu_selected){
  3277                           
  3278                           ;incstack = 0
  3279  002308  D009               	goto	l2958
  3280  00230A                     l2952:
  3281                           
  3282                           ;main.c: 333: state = 1;
  3283  00230A  0E00               	movlw	0
  3284  00230C  6E1A               	movwf	_state+1,c
  3285  00230E  0E01               	movlw	1
  3286  002310  D003               	goto	L1
  3287  002312                     l2954:
  3288                           
  3289                           ;main.c: 337: state = 0;
  3290  002312  0E00               	movlw	0
  3291  002314  6E1A               	movwf	_state+1,c
  3292  002316  0E00               	movlw	0
  3293  002318                     L1:
  3294  002318  6E19               	movwf	_state,c
  3295                           
  3296                           ;main.c: 340: }
  3297                           
  3298                           ;main.c: 338: break;
  3299  00231A  D010               	goto	l2960
  3300  00231C                     l2958:
  3301  00231C  C01B  F036         	movff	_submenu_selected,??_button_B_submenu_activation
  3302  002320  C01C  F037         	movff	_submenu_selected+1,??_button_B_submenu_activation+1
  3303                           
  3304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3305                           ; Switch size 1, requested type "space"
  3306                           ; Number of cases is 1, Range of values is 0 to 0
  3307                           ; switch strategies available:
  3308                           ; Name         Instructions Cycles
  3309                           ; simple_byte            4     3 (average)
  3310                           ;	Chosen strategy is simple_byte
  3311  002324  5037               	movf	??_button_B_submenu_activation+1,w,c
  3312  002326  0A00               	xorlw	0	; case 0
  3313  002328  A4D8               	btfss	status,2,c
  3314  00232A  D008               	goto	l2960
  3315                           
  3316                           ; Switch size 1, requested type "space"
  3317                           ; Number of cases is 2, Range of values is 0 to 1
  3318                           ; switch strategies available:
  3319                           ; Name         Instructions Cycles
  3320                           ; simple_byte            7     4 (average)
  3321                           ;	Chosen strategy is simple_byte
  3322  00232C  5036               	movf	??_button_B_submenu_activation,w,c
  3323  00232E  0A00               	xorlw	0	; case 0
  3324  002330  B4D8               	btfsc	status,2,c
  3325  002332  D7EB               	goto	l2952
  3326  002334  0A01               	xorlw	1	; case 1
  3327  002336  B4D8               	btfsc	status,2,c
  3328  002338  D7EC               	goto	l2954
  3329  00233A  D000               	goto	l2960
  3330  00233C                     l2960:
  3331                           
  3332                           ;main.c: 342: activity_home();
  3333  00233C  EC34  F012         	call	_activity_home	;wreg free
  3334  002340  0012               	return		;funcret
  3335  002342                     __end_of_button_B_submenu_activation:
  3336                           	opt stack 0
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           prodl	equ	0xFF3
  3342                           intcon	equ	0xFF2
  3343                           postinc0	equ	0xFEE
  3344                           wreg	equ	0xFE8
  3345                           indf1	equ	0xFE7
  3346                           postdec1	equ	0xFE5
  3347                           fsr1h	equ	0xFE2
  3348                           fsr1l	equ	0xFE1
  3349                           indf2	equ	0xFDF
  3350                           fsr2h	equ	0xFDA
  3351                           fsr2l	equ	0xFD9
  3352                           status	equ	0xFD8
  3353                           
  3354 ;; *************** function _button_B_menu *****************
  3355 ;; Defined at:
  3356 ;;		line 305 in file "main.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;		None               void
  3363 ;; Registers used:
  3364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;Total ram usage:        2 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    8
  3377 ;; This function calls:
  3378 ;;		_activity_submenu_activation
  3379 ;;		_activity_submenu_alarm
  3380 ;;		_activity_submenu_clock
  3381 ;;		_activity_submenu_pin
  3382 ;; This function is called by:
  3383 ;;		_button_B
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text19
  3388  002068                     __ptext19:
  3389                           	opt stack 0
  3390  002068                     _button_B_menu:
  3391                           	opt stack 20
  3392                           
  3393                           ;main.c: 307: switch(menu_selected){
  3394                           
  3395                           ;incstack = 0
  3396  002068  D00C               	goto	l2944
  3397  00206A                     l2934:
  3398                           
  3399                           ;main.c: 310: activity_submenu_activation();
  3400  00206A  ECC0  F00E         	call	_activity_submenu_activation	;wreg free
  3401                           
  3402                           ;main.c: 311: break;
  3403  00206E  0012               	return	
  3404  002070                     l2936:
  3405                           
  3406                           ;main.c: 314: activity_submenu_clock();
  3407  002070  EC5A  F00E         	call	_activity_submenu_clock	;wreg free
  3408                           
  3409                           ;main.c: 315: break;
  3410  002074  0012               	return	
  3411  002076                     l2938:
  3412                           
  3413                           ;main.c: 318: activity_submenu_pin();
  3414  002076  EC27  F00E         	call	_activity_submenu_pin	;wreg free
  3415                           
  3416                           ;main.c: 319: break;
  3417  00207A  0012               	return	
  3418  00207C                     l2940:
  3419                           
  3420                           ;main.c: 322: activity_submenu_alarm();
  3421  00207C  EC8D  F00E         	call	_activity_submenu_alarm	;wreg free
  3422                           
  3423                           ;main.c: 325: }
  3424                           
  3425                           ;main.c: 323: break;
  3426  002080  0012               	return	
  3427  002082                     l2944:
  3428  002082  C013  F036         	movff	_menu_selected,??_button_B_menu
  3429  002086  C014  F037         	movff	_menu_selected+1,??_button_B_menu+1
  3430                           
  3431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3432                           ; Switch size 1, requested type "space"
  3433                           ; Number of cases is 1, Range of values is 0 to 0
  3434                           ; switch strategies available:
  3435                           ; Name         Instructions Cycles
  3436                           ; simple_byte            4     3 (average)
  3437                           ;	Chosen strategy is simple_byte
  3438  00208A  5037               	movf	??_button_B_menu+1,w,c
  3439  00208C  0A00               	xorlw	0	; case 0
  3440  00208E  A4D8               	btfss	status,2,c
  3441  002090  0012               	return	
  3442                           
  3443                           ; Switch size 1, requested type "space"
  3444                           ; Number of cases is 4, Range of values is 0 to 3
  3445                           ; switch strategies available:
  3446                           ; Name         Instructions Cycles
  3447                           ; simple_byte           13     7 (average)
  3448                           ;	Chosen strategy is simple_byte
  3449  002092  5036               	movf	??_button_B_menu,w,c
  3450  002094  0A00               	xorlw	0	; case 0
  3451  002096  B4D8               	btfsc	status,2,c
  3452  002098  D7E8               	goto	l2934
  3453  00209A  0A01               	xorlw	1	; case 1
  3454  00209C  B4D8               	btfsc	status,2,c
  3455  00209E  D7E8               	goto	l2936
  3456  0020A0  0A03               	xorlw	3	; case 2
  3457  0020A2  B4D8               	btfsc	status,2,c
  3458  0020A4  D7E8               	goto	l2938
  3459  0020A6  0A01               	xorlw	1	; case 3
  3460  0020A8  A4D8               	btfss	status,2,c
  3461  0020AA  0012               	return	
  3462  0020AC  D7E7               	goto	l2940
  3463  0020AE  0012               	return		;funcret
  3464  0020B0                     __end_of_button_B_menu:
  3465                           	opt stack 0
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           prodl	equ	0xFF3
  3471                           intcon	equ	0xFF2
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           indf1	equ	0xFE7
  3475                           postdec1	equ	0xFE5
  3476                           fsr1h	equ	0xFE2
  3477                           fsr1l	equ	0xFE1
  3478                           indf2	equ	0xFDF
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           
  3483 ;; *************** function _activity_submenu_pin *****************
  3484 ;; Defined at:
  3485 ;;		line 249 in file "main.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;		None               void
  3492 ;; Registers used:
  3493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;Total ram usage:        0 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    7
  3506 ;; This function calls:
  3507 ;;		_action_submenu_selector_0
  3508 ;;		_lcd_init
  3509 ;;		_lcd_write
  3510 ;; This function is called by:
  3511 ;;		_button_B_menu
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text20
  3516  001C4E                     __ptext20:
  3517                           	opt stack 0
  3518  001C4E                     _activity_submenu_pin:
  3519                           	opt stack 20
  3520                           
  3521                           ;main.c: 251: activity = 5;
  3522                           
  3523                           ;incstack = 0
  3524  001C4E  0E00               	movlw	0
  3525  001C50  6E04               	movwf	_activity+1,c
  3526  001C52  0E05               	movlw	5
  3527  001C54  6E03               	movwf	_activity,c
  3528                           
  3529                           ;main.c: 252: lcd_init();
  3530  001C56  EC08  F00D         	call	_lcd_init	;wreg free
  3531                           
  3532                           ;main.c: 253: lcd_write(1,1,"Pin");
  3533  001C5A  0E00               	movlw	0
  3534  001C5C  6E31               	movwf	lcd_write@column+1,c
  3535  001C5E  0E01               	movlw	1
  3536  001C60  6E30               	movwf	lcd_write@column,c
  3537  001C62  0E00               	movlw	0
  3538  001C64  6E33               	movwf	lcd_write@row+1,c
  3539  001C66  0E01               	movlw	1
  3540  001C68  6E32               	movwf	lcd_write@row,c
  3541  001C6A  0E94               	movlw	low STR_19
  3542  001C6C  6E34               	movwf	lcd_write@string,c
  3543  001C6E  0E0F               	movlw	high STR_19
  3544  001C70  6E35               	movwf	lcd_write@string+1,c
  3545  001C72  EC9F  F012         	call	_lcd_write	;wreg free
  3546                           
  3547                           ;main.c: 254: lcd_write(10,1,"Cambiar");
  3548  001C76  0E00               	movlw	0
  3549  001C78  6E31               	movwf	lcd_write@column+1,c
  3550  001C7A  0E0A               	movlw	10
  3551  001C7C  6E30               	movwf	lcd_write@column,c
  3552  001C7E  0E00               	movlw	0
  3553  001C80  6E33               	movwf	lcd_write@row+1,c
  3554  001C82  0E01               	movlw	1
  3555  001C84  6E32               	movwf	lcd_write@row,c
  3556  001C86  0E45               	movlw	low STR_32
  3557  001C88  6E34               	movwf	lcd_write@string,c
  3558  001C8A  0E0F               	movlw	high STR_32
  3559  001C8C  6E35               	movwf	lcd_write@string+1,c
  3560  001C8E  EC9F  F012         	call	_lcd_write	;wreg free
  3561                           
  3562                           ;main.c: 255: lcd_write(10,2,"Reset");
  3563  001C92  0E00               	movlw	0
  3564  001C94  6E31               	movwf	lcd_write@column+1,c
  3565  001C96  0E0A               	movlw	10
  3566  001C98  6E30               	movwf	lcd_write@column,c
  3567  001C9A  0E00               	movlw	0
  3568  001C9C  6E33               	movwf	lcd_write@row+1,c
  3569  001C9E  0E02               	movlw	2
  3570  001CA0  6E32               	movwf	lcd_write@row,c
  3571  001CA2  0E76               	movlw	low STR_33
  3572  001CA4  6E34               	movwf	lcd_write@string,c
  3573  001CA6  0E0F               	movlw	high STR_33
  3574  001CA8  6E35               	movwf	lcd_write@string+1,c
  3575  001CAA  EC9F  F012         	call	_lcd_write	;wreg free
  3576                           
  3577                           ;main.c: 256: action_submenu_selector_0();
  3578  001CAE  ECBF  F010         	call	_action_submenu_selector_0	;wreg free
  3579  001CB2  0012               	return		;funcret
  3580  001CB4                     __end_of_activity_submenu_pin:
  3581                           	opt stack 0
  3582                           tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           prodl	equ	0xFF3
  3587                           intcon	equ	0xFF2
  3588                           postinc0	equ	0xFEE
  3589                           wreg	equ	0xFE8
  3590                           indf1	equ	0xFE7
  3591                           postdec1	equ	0xFE5
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           indf2	equ	0xFDF
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599 ;; *************** function _activity_submenu_clock *****************
  3600 ;; Defined at:
  3601 ;;		line 238 in file "main.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;		None               void
  3608 ;; Registers used:
  3609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    7
  3622 ;; This function calls:
  3623 ;;		_action_submenu_selector_0
  3624 ;;		_lcd_init
  3625 ;;		_lcd_write
  3626 ;; This function is called by:
  3627 ;;		_button_B_menu
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text21
  3632  001CB4                     __ptext21:
  3633                           	opt stack 0
  3634  001CB4                     _activity_submenu_clock:
  3635                           	opt stack 20
  3636                           
  3637                           ;main.c: 240: activity = 3;
  3638                           
  3639                           ;incstack = 0
  3640  001CB4  0E00               	movlw	0
  3641  001CB6  6E04               	movwf	_activity+1,c
  3642  001CB8  0E03               	movlw	3
  3643  001CBA  6E03               	movwf	_activity,c
  3644                           
  3645                           ;main.c: 241: lcd_init();
  3646  001CBC  EC08  F00D         	call	_lcd_init	;wreg free
  3647                           
  3648                           ;main.c: 242: lcd_write(1,1,"Reloj");
  3649  001CC0  0E00               	movlw	0
  3650  001CC2  6E31               	movwf	lcd_write@column+1,c
  3651  001CC4  0E01               	movlw	1
  3652  001CC6  6E30               	movwf	lcd_write@column,c
  3653  001CC8  0E00               	movlw	0
  3654  001CCA  6E33               	movwf	lcd_write@row+1,c
  3655  001CCC  0E01               	movlw	1
  3656  001CCE  6E32               	movwf	lcd_write@row,c
  3657  001CD0  0E70               	movlw	low STR_18
  3658  001CD2  6E34               	movwf	lcd_write@string,c
  3659  001CD4  0E0F               	movlw	high STR_18
  3660  001CD6  6E35               	movwf	lcd_write@string+1,c
  3661  001CD8  EC9F  F012         	call	_lcd_write	;wreg free
  3662                           
  3663                           ;main.c: 243: lcd_write(10,1,"Fecha");
  3664  001CDC  0E00               	movlw	0
  3665  001CDE  6E31               	movwf	lcd_write@column+1,c
  3666  001CE0  0E0A               	movlw	10
  3667  001CE2  6E30               	movwf	lcd_write@column,c
  3668  001CE4  0E00               	movlw	0
  3669  001CE6  6E33               	movwf	lcd_write@row+1,c
  3670  001CE8  0E01               	movlw	1
  3671  001CEA  6E32               	movwf	lcd_write@row,c
  3672  001CEC  0E6A               	movlw	low STR_29
  3673  001CEE  6E34               	movwf	lcd_write@string,c
  3674  001CF0  0E0F               	movlw	high STR_29
  3675  001CF2  6E35               	movwf	lcd_write@string+1,c
  3676  001CF4  EC9F  F012         	call	_lcd_write	;wreg free
  3677                           
  3678                           ;main.c: 244: lcd_write(10,2,"Hora");
  3679  001CF8  0E00               	movlw	0
  3680  001CFA  6E31               	movwf	lcd_write@column+1,c
  3681  001CFC  0E0A               	movlw	10
  3682  001CFE  6E30               	movwf	lcd_write@column,c
  3683  001D00  0E00               	movlw	0
  3684  001D02  6E33               	movwf	lcd_write@row+1,c
  3685  001D04  0E02               	movlw	2
  3686  001D06  6E32               	movwf	lcd_write@row,c
  3687  001D08  0E81               	movlw	low STR_30
  3688  001D0A  6E34               	movwf	lcd_write@string,c
  3689  001D0C  0E0F               	movlw	high STR_30
  3690  001D0E  6E35               	movwf	lcd_write@string+1,c
  3691  001D10  EC9F  F012         	call	_lcd_write	;wreg free
  3692                           
  3693                           ;main.c: 245: action_submenu_selector_0();
  3694  001D14  ECBF  F010         	call	_action_submenu_selector_0	;wreg free
  3695  001D18  0012               	return		;funcret
  3696  001D1A                     __end_of_activity_submenu_clock:
  3697                           	opt stack 0
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodl	equ	0xFF3
  3703                           intcon	equ	0xFF2
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           indf1	equ	0xFE7
  3707                           postdec1	equ	0xFE5
  3708                           fsr1h	equ	0xFE2
  3709                           fsr1l	equ	0xFE1
  3710                           indf2	equ	0xFDF
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           
  3715 ;; *************** function _activity_submenu_alarm *****************
  3716 ;; Defined at:
  3717 ;;		line 259 in file "main.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;		None               void
  3724 ;; Registers used:
  3725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    7
  3738 ;; This function calls:
  3739 ;;		_action_submenu_selector_0
  3740 ;;		_lcd_init
  3741 ;;		_lcd_write
  3742 ;; This function is called by:
  3743 ;;		_button_B_menu
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text22
  3748  001D1A                     __ptext22:
  3749                           	opt stack 0
  3750  001D1A                     _activity_submenu_alarm:
  3751                           	opt stack 20
  3752                           
  3753                           ;main.c: 261: activity = 6;
  3754                           
  3755                           ;incstack = 0
  3756  001D1A  0E00               	movlw	0
  3757  001D1C  6E04               	movwf	_activity+1,c
  3758  001D1E  0E06               	movlw	6
  3759  001D20  6E03               	movwf	_activity,c
  3760                           
  3761                           ;main.c: 262: lcd_init();
  3762  001D22  EC08  F00D         	call	_lcd_init	;wreg free
  3763                           
  3764                           ;main.c: 263: lcd_write(1,1,"Alarma");
  3765  001D26  0E00               	movlw	0
  3766  001D28  6E31               	movwf	lcd_write@column+1,c
  3767  001D2A  0E01               	movlw	1
  3768  001D2C  6E30               	movwf	lcd_write@column,c
  3769  001D2E  0E00               	movlw	0
  3770  001D30  6E33               	movwf	lcd_write@row+1,c
  3771  001D32  0E01               	movlw	1
  3772  001D34  6E32               	movwf	lcd_write@row,c
  3773  001D36  0E63               	movlw	low STR_20
  3774  001D38  6E34               	movwf	lcd_write@string,c
  3775  001D3A  0E0F               	movlw	high STR_20
  3776  001D3C  6E35               	movwf	lcd_write@string+1,c
  3777  001D3E  EC9F  F012         	call	_lcd_write	;wreg free
  3778                           
  3779                           ;main.c: 264: lcd_write(10,1,"Volumen");
  3780  001D42  0E00               	movlw	0
  3781  001D44  6E31               	movwf	lcd_write@column+1,c
  3782  001D46  0E0A               	movlw	10
  3783  001D48  6E30               	movwf	lcd_write@column,c
  3784  001D4A  0E00               	movlw	0
  3785  001D4C  6E33               	movwf	lcd_write@row+1,c
  3786  001D4E  0E01               	movlw	1
  3787  001D50  6E32               	movwf	lcd_write@row,c
  3788  001D52  0E3D               	movlw	low STR_35
  3789  001D54  6E34               	movwf	lcd_write@string,c
  3790  001D56  0E0F               	movlw	high STR_35
  3791  001D58  6E35               	movwf	lcd_write@string+1,c
  3792  001D5A  EC9F  F012         	call	_lcd_write	;wreg free
  3793                           
  3794                           ;main.c: 265: lcd_write(10,2,"Tono");
  3795  001D5E  0E00               	movlw	0
  3796  001D60  6E31               	movwf	lcd_write@column+1,c
  3797  001D62  0E0A               	movlw	10
  3798  001D64  6E30               	movwf	lcd_write@column,c
  3799  001D66  0E00               	movlw	0
  3800  001D68  6E33               	movwf	lcd_write@row+1,c
  3801  001D6A  0E02               	movlw	2
  3802  001D6C  6E32               	movwf	lcd_write@row,c
  3803  001D6E  0E86               	movlw	low STR_36
  3804  001D70  6E34               	movwf	lcd_write@string,c
  3805  001D72  0E0F               	movlw	high STR_36
  3806  001D74  6E35               	movwf	lcd_write@string+1,c
  3807  001D76  EC9F  F012         	call	_lcd_write	;wreg free
  3808                           
  3809                           ;main.c: 266: action_submenu_selector_0();
  3810  001D7A  ECBF  F010         	call	_action_submenu_selector_0	;wreg free
  3811  001D7E  0012               	return		;funcret
  3812  001D80                     __end_of_activity_submenu_alarm:
  3813                           	opt stack 0
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           prodl	equ	0xFF3
  3819                           intcon	equ	0xFF2
  3820                           postinc0	equ	0xFEE
  3821                           wreg	equ	0xFE8
  3822                           indf1	equ	0xFE7
  3823                           postdec1	equ	0xFE5
  3824                           fsr1h	equ	0xFE2
  3825                           fsr1l	equ	0xFE1
  3826                           indf2	equ	0xFDF
  3827                           fsr2h	equ	0xFDA
  3828                           fsr2l	equ	0xFD9
  3829                           status	equ	0xFD8
  3830                           
  3831 ;; *************** function _activity_submenu_activation *****************
  3832 ;; Defined at:
  3833 ;;		line 228 in file "main.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;		None               void
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3851 ;;Total ram usage:        0 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    7
  3854 ;; This function calls:
  3855 ;;		_action_submenu_selector_0
  3856 ;;		_lcd_init
  3857 ;;		_lcd_write
  3858 ;; This function is called by:
  3859 ;;		_button_B_menu
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text23
  3864  001D80                     __ptext23:
  3865                           	opt stack 0
  3866  001D80                     _activity_submenu_activation:
  3867                           	opt stack 20
  3868                           
  3869                           ;main.c: 230: activity = 4;
  3870                           
  3871                           ;incstack = 0
  3872  001D80  0E00               	movlw	0
  3873  001D82  6E04               	movwf	_activity+1,c
  3874  001D84  0E04               	movlw	4
  3875  001D86  6E03               	movwf	_activity,c
  3876                           
  3877                           ;main.c: 231: lcd_init();
  3878  001D88  EC08  F00D         	call	_lcd_init	;wreg free
  3879                           
  3880                           ;main.c: 232: lcd_write(1,1,"Activar");
  3881  001D8C  0E00               	movlw	0
  3882  001D8E  6E31               	movwf	lcd_write@column+1,c
  3883  001D90  0E01               	movlw	1
  3884  001D92  6E30               	movwf	lcd_write@column,c
  3885  001D94  0E00               	movlw	0
  3886  001D96  6E33               	movwf	lcd_write@row+1,c
  3887  001D98  0E01               	movlw	1
  3888  001D9A  6E32               	movwf	lcd_write@row,c
  3889  001D9C  0E4D               	movlw	low STR_17
  3890  001D9E  6E34               	movwf	lcd_write@string,c
  3891  001DA0  0E0F               	movlw	high STR_17
  3892  001DA2  6E35               	movwf	lcd_write@string+1,c
  3893  001DA4  EC9F  F012         	call	_lcd_write	;wreg free
  3894                           
  3895                           ;main.c: 233: lcd_write(10,1,"SI");
  3896  001DA8  0E00               	movlw	0
  3897  001DAA  6E31               	movwf	lcd_write@column+1,c
  3898  001DAC  0E0A               	movlw	10
  3899  001DAE  6E30               	movwf	lcd_write@column,c
  3900  001DB0  0E00               	movlw	0
  3901  001DB2  6E33               	movwf	lcd_write@row+1,c
  3902  001DB4  0E01               	movlw	1
  3903  001DB6  6E32               	movwf	lcd_write@row,c
  3904  001DB8  0E98               	movlw	low STR_26
  3905  001DBA  6E34               	movwf	lcd_write@string,c
  3906  001DBC  0E0F               	movlw	high STR_26
  3907  001DBE  6E35               	movwf	lcd_write@string+1,c
  3908  001DC0  EC9F  F012         	call	_lcd_write	;wreg free
  3909                           
  3910                           ;main.c: 234: lcd_write(10,2,"NO");
  3911  001DC4  0E00               	movlw	0
  3912  001DC6  6E31               	movwf	lcd_write@column+1,c
  3913  001DC8  0E0A               	movlw	10
  3914  001DCA  6E30               	movwf	lcd_write@column,c
  3915  001DCC  0E00               	movlw	0
  3916  001DCE  6E33               	movwf	lcd_write@row+1,c
  3917  001DD0  0E02               	movlw	2
  3918  001DD2  6E32               	movwf	lcd_write@row,c
  3919  001DD4  0E60               	movlw	low (STR_5+4)
  3920  001DD6  6E34               	movwf	lcd_write@string,c
  3921  001DD8  0E0F               	movlw	high (STR_5+4)
  3922  001DDA  6E35               	movwf	lcd_write@string+1,c
  3923  001DDC  EC9F  F012         	call	_lcd_write	;wreg free
  3924                           
  3925                           ;main.c: 235: action_submenu_selector_0();
  3926  001DE0  ECBF  F010         	call	_action_submenu_selector_0	;wreg free
  3927  001DE4  0012               	return		;funcret
  3928  001DE6                     __end_of_activity_submenu_activation:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodl	equ	0xFF3
  3935                           intcon	equ	0xFF2
  3936                           postinc0	equ	0xFEE
  3937                           wreg	equ	0xFE8
  3938                           indf1	equ	0xFE7
  3939                           postdec1	equ	0xFE5
  3940                           fsr1h	equ	0xFE2
  3941                           fsr1l	equ	0xFE1
  3942                           indf2	equ	0xFDF
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           status	equ	0xFD8
  3946                           
  3947 ;; *************** function _button_A *****************
  3948 ;; Defined at:
  3949 ;;		line 281 in file "main.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;		None               void
  3956 ;; Registers used:
  3957 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;Total ram usage:        2 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    8
  3970 ;; This function calls:
  3971 ;;		_action_menu_selector
  3972 ;;		_action_submenu_selector
  3973 ;;		_activity_pin
  3974 ;;		_reset_home_callback
  3975 ;; This function is called by:
  3976 ;;		_keyboard_control
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text24
  3981  0022C8                     __ptext24:
  3982                           	opt stack 0
  3983  0022C8                     _button_A:
  3984                           	opt stack 21
  3985                           
  3986                           ;main.c: 283: reset_home_callback();
  3987                           
  3988                           ;incstack = 0
  3989  0022C8  ECE1  F012         	call	_reset_home_callback	;wreg free
  3990                           
  3991                           ;main.c: 285: switch(activity){
  3992  0022CC  D009               	goto	l3138
  3993  0022CE                     l3130:
  3994                           
  3995                           ;main.c: 288: activity_pin();
  3996  0022CE  EC9D  F00F         	call	_activity_pin	;wreg free
  3997                           
  3998                           ;main.c: 292: break;
  3999                           
  4000                           ;main.c: 291: case 1:
  4001                           
  4002                           ;main.c: 289: break;
  4003  0022D2  0012               	return	
  4004  0022D4                     l3132:
  4005                           
  4006                           ;main.c: 295: action_menu_selector();
  4007  0022D4  EC58  F010         	call	_action_menu_selector	;wreg free
  4008                           
  4009                           ;main.c: 296: break;
  4010  0022D8  0012               	return	
  4011  0022DA                     l3134:
  4012                           
  4013                           ;main.c: 299: action_submenu_selector();
  4014  0022DA  EC06  F012         	call	_action_submenu_selector	;wreg free
  4015                           
  4016                           ;main.c: 301: }
  4017                           
  4018                           ;main.c: 300: break;
  4019  0022DE  0012               	return	
  4020  0022E0                     l3138:
  4021  0022E0  C003  F038         	movff	_activity,??_button_A
  4022  0022E4  C004  F039         	movff	_activity+1,??_button_A+1
  4023                           
  4024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4025                           ; Switch size 1, requested type "space"
  4026                           ; Number of cases is 1, Range of values is 0 to 0
  4027                           ; switch strategies available:
  4028                           ; Name         Instructions Cycles
  4029                           ; simple_byte            4     3 (average)
  4030                           ;	Chosen strategy is simple_byte
  4031  0022E8  5039               	movf	??_button_A+1,w,c
  4032  0022EA  0A00               	xorlw	0	; case 0
  4033  0022EC  A4D8               	btfss	status,2,c
  4034  0022EE  D7F5               	goto	l3134
  4035                           
  4036                           ; Switch size 1, requested type "space"
  4037                           ; Number of cases is 3, Range of values is 0 to 2
  4038                           ; switch strategies available:
  4039                           ; Name         Instructions Cycles
  4040                           ; simple_byte           10     6 (average)
  4041                           ;	Chosen strategy is simple_byte
  4042  0022F0  5038               	movf	??_button_A,w,c
  4043  0022F2  0A00               	xorlw	0	; case 0
  4044  0022F4  B4D8               	btfsc	status,2,c
  4045  0022F6  D7EB               	goto	l3130
  4046  0022F8  0A01               	xorlw	1	; case 1
  4047  0022FA  B4D8               	btfsc	status,2,c
  4048  0022FC  0012               	return	
  4049  0022FE  0A03               	xorlw	3	; case 2
  4050  002300  B4D8               	btfsc	status,2,c
  4051  002302  D7E8               	goto	l3132
  4052  002304  D7EA               	goto	l3134
  4053  002306  0012               	return		;funcret
  4054  002308                     __end_of_button_A:
  4055                           	opt stack 0
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodl	equ	0xFF3
  4061                           intcon	equ	0xFF2
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           indf1	equ	0xFE7
  4065                           postdec1	equ	0xFE5
  4066                           fsr1h	equ	0xFE2
  4067                           fsr1l	equ	0xFE1
  4068                           indf2	equ	0xFDF
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _activity_pin *****************
  4074 ;; Defined at:
  4075 ;;		line 179 in file "main.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;		None               void
  4082 ;; Registers used:
  4083 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    6
  4096 ;; This function calls:
  4097 ;;		_lcd_comand
  4098 ;;		_lcd_gotoxy
  4099 ;;		_lcd_init
  4100 ;;		_lcd_write
  4101 ;;		_strcpy
  4102 ;; This function is called by:
  4103 ;;		_pin_input_validator
  4104 ;;		_button_A
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text25
  4109  001F3A                     __ptext25:
  4110                           	opt stack 0
  4111  001F3A                     _activity_pin:
  4112                           	opt stack 21
  4113                           
  4114                           ;main.c: 181: activity = 1;
  4115                           
  4116                           ;incstack = 0
  4117  001F3A  0E00               	movlw	0
  4118  001F3C  6E04               	movwf	_activity+1,c
  4119  001F3E  0E01               	movlw	1
  4120  001F40  6E03               	movwf	_activity,c
  4121                           
  4122                           ;main.c: 182: strcpy(pin_input, "");
  4123  001F42  0E95               	movlw	low _pin_input
  4124  001F44  6E26               	movwf	strcpy@to,c
  4125  001F46  0E00               	movlw	high _pin_input
  4126  001F48  6E27               	movwf	strcpy@to+1,c
  4127  001F4A  0E9C               	movlw	low (STR_7+1)
  4128  001F4C  6E28               	movwf	strcpy@from,c
  4129  001F4E  0E0F               	movlw	high (STR_7+1)
  4130  001F50  6E29               	movwf	strcpy@from+1,c
  4131  001F52  ECD4  F011         	call	_strcpy	;wreg free
  4132                           
  4133                           ;main.c: 183: lcd_init();
  4134  001F56  EC08  F00D         	call	_lcd_init	;wreg free
  4135                           
  4136                           ;main.c: 184: lcd_write(1,1,"Ingrese su PIN:");
  4137  001F5A  0E00               	movlw	0
  4138  001F5C  6E31               	movwf	lcd_write@column+1,c
  4139  001F5E  0E01               	movlw	1
  4140  001F60  6E30               	movwf	lcd_write@column,c
  4141  001F62  0E00               	movlw	0
  4142  001F64  6E33               	movwf	lcd_write@row+1,c
  4143  001F66  0E01               	movlw	1
  4144  001F68  6E32               	movwf	lcd_write@row,c
  4145  001F6A  0E0F               	movlw	low STR_16
  4146  001F6C  6E34               	movwf	lcd_write@string,c
  4147  001F6E  0E0F               	movlw	high STR_16
  4148  001F70  6E35               	movwf	lcd_write@string+1,c
  4149  001F72  EC9F  F012         	call	_lcd_write	;wreg free
  4150                           
  4151                           ;main.c: 185: lcd_gotoxy(1,2);
  4152  001F76  0E02               	movlw	2
  4153  001F78  6E2A               	movwf	lcd_gotoxy@y,c
  4154  001F7A  0E01               	movlw	1
  4155  001F7C  EC5D  F012         	call	_lcd_gotoxy
  4156                           
  4157                           ;main.c: 186: lcd_comand(0b00001111);
  4158  001F80  0E0F               	movlw	15
  4159  001F82  ECD0  F012         	call	_lcd_comand
  4160  001F86  0012               	return		;funcret
  4161  001F88                     __end_of_activity_pin:
  4162                           	opt stack 0
  4163                           tblptru	equ	0xFF8
  4164                           tblptrh	equ	0xFF7
  4165                           tblptrl	equ	0xFF6
  4166                           tablat	equ	0xFF5
  4167                           prodl	equ	0xFF3
  4168                           intcon	equ	0xFF2
  4169                           postinc0	equ	0xFEE
  4170                           wreg	equ	0xFE8
  4171                           indf1	equ	0xFE7
  4172                           postdec1	equ	0xFE5
  4173                           fsr1h	equ	0xFE2
  4174                           fsr1l	equ	0xFE1
  4175                           indf2	equ	0xFDF
  4176                           fsr2h	equ	0xFDA
  4177                           fsr2l	equ	0xFD9
  4178                           status	equ	0xFD8
  4179                           
  4180 ;; *************** function _strcpy *****************
  4181 ;; Defined at:
  4182 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  to              2    0[COMRAM] PTR unsigned char 
  4185 ;;		 -> pin_input(5), pin(5), 
  4186 ;;  from            2    2[COMRAM] PTR const unsigned char 
  4187 ;;		 -> STR_15(1), STR_1(5), 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  cp              2    4[COMRAM] PTR unsigned char 
  4190 ;;		 -> pin_input(5), pin(5), 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  2    0[COMRAM] PTR unsigned char 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4203 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4204 ;;Total ram usage:        6 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_setup
  4210 ;;		_activity_pin
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text26
  4215  0023A8                     __ptext26:
  4216                           	opt stack 0
  4217  0023A8                     _strcpy:
  4218                           	opt stack 29
  4219                           
  4220                           ;incstack = 0
  4221  0023A8  C026  F02A         	movff	strcpy@to,strcpy@cp
  4222  0023AC  C027  F02B         	movff	strcpy@to+1,strcpy@cp+1
  4223  0023B0  D005               	goto	l2470
  4224  0023B2                     l2468:
  4225  0023B2  4A2A               	infsnz	strcpy@cp,f,c
  4226  0023B4  2A2B               	incf	strcpy@cp+1,f,c
  4227  0023B6  4A28               	infsnz	strcpy@from,f,c
  4228  0023B8  2A29               	incf	strcpy@from+1,f,c
  4229  0023BA  D000               	goto	l2470
  4230  0023BC                     l2470:
  4231  0023BC  C028  FFF6         	movff	strcpy@from,tblptrl
  4232  0023C0  C029  FFF7         	movff	strcpy@from+1,tblptrh
  4233  0023C4                     	if	0	;tblptru may be non-zero
  4234  0023C4                     	endif
  4235  0023C4                     	if	0	;tblptru may be non-zero
  4236  0023C4                     	endif
  4237  0023C4  C02A  FFD9         	movff	strcpy@cp,fsr2l
  4238  0023C8  C02B  FFDA         	movff	strcpy@cp+1,fsr2h
  4239  0023CC  0008               	tblrd		*
  4240  0023CE  CFF5 FFDF          	movff	tablat,indf2
  4241  0023D2  50DF               	movf	indf2,w,c
  4242  0023D4  A4D8               	btfss	status,2,c
  4243  0023D6  D7ED               	goto	l2468
  4244                           
  4245                           ;	Return value of _strcpy is never used
  4246  0023D8  0012               	return		;funcret
  4247  0023DA                     __end_of_strcpy:
  4248                           	opt stack 0
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           prodl	equ	0xFF3
  4254                           intcon	equ	0xFF2
  4255                           postinc0	equ	0xFEE
  4256                           wreg	equ	0xFE8
  4257                           indf1	equ	0xFE7
  4258                           postdec1	equ	0xFE5
  4259                           fsr1h	equ	0xFE2
  4260                           fsr1l	equ	0xFE1
  4261                           indf2	equ	0xFDF
  4262                           fsr2h	equ	0xFDA
  4263                           fsr2l	equ	0xFD9
  4264                           status	equ	0xFD8
  4265                           
  4266 ;; *************** function _lcd_comand *****************
  4267 ;; Defined at:
  4268 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  d               1    wreg     unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  d               1    4[COMRAM] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;		None               void
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4286 ;;Total ram usage:        1 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    2
  4289 ;; This function calls:
  4290 ;;		_lcd_send_byte
  4291 ;; This function is called by:
  4292 ;;		_setup
  4293 ;;		_activity_pin
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text27
  4298  0025A0                     __ptext27:
  4299                           	opt stack 0
  4300  0025A0                     _lcd_comand:
  4301                           	opt stack 27
  4302                           
  4303                           ;incstack = 0
  4304                           ;lcd_comand@d stored from wreg
  4305  0025A0  6E2A               	movwf	lcd_comand@d,c
  4306                           
  4307                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  4308  0025A2  C02A  F028         	movff	lcd_comand@d,lcd_send_byte@n
  4309  0025A6  0E00               	movlw	0
  4310  0025A8  ECED  F011         	call	_lcd_send_byte
  4311  0025AC  0012               	return		;funcret
  4312  0025AE                     __end_of_lcd_comand:
  4313                           	opt stack 0
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodl	equ	0xFF3
  4319                           intcon	equ	0xFF2
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           indf1	equ	0xFE7
  4323                           postdec1	equ	0xFE5
  4324                           fsr1h	equ	0xFE2
  4325                           fsr1l	equ	0xFE1
  4326                           indf2	equ	0xFDF
  4327                           fsr2h	equ	0xFDA
  4328                           fsr2l	equ	0xFD9
  4329                           status	equ	0xFD8
  4330                           
  4331 ;; *************** function _action_submenu_selector *****************
  4332 ;; Defined at:
  4333 ;;		line 213 in file "main.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;		None
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;		None               void
  4340 ;; Registers used:
  4341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4351 ;;Total ram usage:        2 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    7
  4354 ;; This function calls:
  4355 ;;		_action_submenu_selector_0
  4356 ;;		_action_submenu_selector_1
  4357 ;; This function is called by:
  4358 ;;		_button_A
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text28
  4363  00240C                     __ptext28:
  4364                           	opt stack 0
  4365  00240C                     _action_submenu_selector:
  4366                           	opt stack 21
  4367                           
  4368                           ;main.c: 215: switch(submenu_selected){
  4369                           
  4370                           ;incstack = 0
  4371  00240C  D006               	goto	l2918
  4372  00240E                     l2912:
  4373                           
  4374                           ;main.c: 218: action_submenu_selector_1();
  4375  00240E  EC9E  F010         	call	_action_submenu_selector_1	;wreg free
  4376                           
  4377                           ;main.c: 219: break;
  4378  002412  0012               	return	
  4379  002414                     l2914:
  4380                           
  4381                           ;main.c: 222: action_submenu_selector_0();
  4382  002414  ECBF  F010         	call	_action_submenu_selector_0	;wreg free
  4383                           
  4384                           ;main.c: 224: }
  4385                           
  4386                           ;main.c: 223: break;
  4387  002418  0012               	return	
  4388  00241A                     l2918:
  4389  00241A  C01B  F036         	movff	_submenu_selected,??_action_submenu_selector
  4390  00241E  C01C  F037         	movff	_submenu_selected+1,??_action_submenu_selector+1
  4391                           
  4392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4393                           ; Switch size 1, requested type "space"
  4394                           ; Number of cases is 1, Range of values is 0 to 0
  4395                           ; switch strategies available:
  4396                           ; Name         Instructions Cycles
  4397                           ; simple_byte            4     3 (average)
  4398                           ;	Chosen strategy is simple_byte
  4399  002422  5037               	movf	??_action_submenu_selector+1,w,c
  4400  002424  0A00               	xorlw	0	; case 0
  4401  002426  A4D8               	btfss	status,2,c
  4402  002428  0012               	return	
  4403                           
  4404                           ; Switch size 1, requested type "space"
  4405                           ; Number of cases is 2, Range of values is 0 to 1
  4406                           ; switch strategies available:
  4407                           ; Name         Instructions Cycles
  4408                           ; simple_byte            7     4 (average)
  4409                           ;	Chosen strategy is simple_byte
  4410  00242A  5036               	movf	??_action_submenu_selector,w,c
  4411  00242C  0A00               	xorlw	0	; case 0
  4412  00242E  B4D8               	btfsc	status,2,c
  4413  002430  D7EE               	goto	l2912
  4414  002432  0A01               	xorlw	1	; case 1
  4415  002434  A4D8               	btfss	status,2,c
  4416  002436  0012               	return	
  4417  002438  D7ED               	goto	l2914
  4418  00243A  0012               	return		;funcret
  4419  00243C                     __end_of_action_submenu_selector:
  4420                           	opt stack 0
  4421                           tblptru	equ	0xFF8
  4422                           tblptrh	equ	0xFF7
  4423                           tblptrl	equ	0xFF6
  4424                           tablat	equ	0xFF5
  4425                           prodl	equ	0xFF3
  4426                           intcon	equ	0xFF2
  4427                           postinc0	equ	0xFEE
  4428                           wreg	equ	0xFE8
  4429                           indf1	equ	0xFE7
  4430                           postdec1	equ	0xFE5
  4431                           fsr1h	equ	0xFE2
  4432                           fsr1l	equ	0xFE1
  4433                           indf2	equ	0xFDF
  4434                           fsr2h	equ	0xFDA
  4435                           fsr2l	equ	0xFD9
  4436                           status	equ	0xFD8
  4437                           
  4438 ;; *************** function _action_submenu_selector_1 *****************
  4439 ;; Defined at:
  4440 ;;		line 207 in file "main.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;		None
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;		None
  4445 ;; Return value:  Size  Location     Type
  4446 ;;		None               void
  4447 ;; Registers used:
  4448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;Total ram usage:        0 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    6
  4461 ;; This function calls:
  4462 ;;		_lcd_write
  4463 ;; This function is called by:
  4464 ;;		_action_submenu_selector
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text29
  4469  00213C                     __ptext29:
  4470                           	opt stack 0
  4471  00213C                     _action_submenu_selector_1:
  4472                           	opt stack 21
  4473                           
  4474                           ;main.c: 208: lcd_write(9,2,">");
  4475                           
  4476                           ;incstack = 0
  4477  00213C  0E00               	movlw	0
  4478  00213E  6E31               	movwf	lcd_write@column+1,c
  4479  002140  0E09               	movlw	9
  4480  002142  6E30               	movwf	lcd_write@column,c
  4481  002144  0E00               	movlw	0
  4482  002146  6E33               	movwf	lcd_write@row+1,c
  4483  002148  0E02               	movlw	2
  4484  00214A  6E32               	movwf	lcd_write@row,c
  4485  00214C  0E9F               	movlw	low STR_6
  4486  00214E  6E34               	movwf	lcd_write@string,c
  4487  002150  0E0F               	movlw	high STR_6
  4488  002152  6E35               	movwf	lcd_write@string+1,c
  4489  002154  EC9F  F012         	call	_lcd_write	;wreg free
  4490                           
  4491                           ;main.c: 209: submenu_selected = 1;
  4492  002158  0E00               	movlw	0
  4493  00215A  6E1C               	movwf	_submenu_selected+1,c
  4494  00215C  0E01               	movlw	1
  4495  00215E  6E1B               	movwf	_submenu_selected,c
  4496                           
  4497                           ;main.c: 210: lcd_write(9,1," ");
  4498  002160  0E00               	movlw	0
  4499  002162  6E31               	movwf	lcd_write@column+1,c
  4500  002164  0E09               	movlw	9
  4501  002166  6E30               	movwf	lcd_write@column,c
  4502  002168  0E00               	movlw	0
  4503  00216A  6E33               	movwf	lcd_write@row+1,c
  4504  00216C  0E01               	movlw	1
  4505  00216E  6E32               	movwf	lcd_write@row,c
  4506  002170  0E9B               	movlw	low STR_7
  4507  002172  6E34               	movwf	lcd_write@string,c
  4508  002174  0E0F               	movlw	high STR_7
  4509  002176  6E35               	movwf	lcd_write@string+1,c
  4510  002178  EC9F  F012         	call	_lcd_write	;wreg free
  4511  00217C  0012               	return		;funcret
  4512  00217E                     __end_of_action_submenu_selector_1:
  4513                           	opt stack 0
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           prodl	equ	0xFF3
  4519                           intcon	equ	0xFF2
  4520                           postinc0	equ	0xFEE
  4521                           wreg	equ	0xFE8
  4522                           indf1	equ	0xFE7
  4523                           postdec1	equ	0xFE5
  4524                           fsr1h	equ	0xFE2
  4525                           fsr1l	equ	0xFE1
  4526                           indf2	equ	0xFDF
  4527                           fsr2h	equ	0xFDA
  4528                           fsr2l	equ	0xFD9
  4529                           status	equ	0xFD8
  4530                           
  4531 ;; *************** function _action_submenu_selector_0 *****************
  4532 ;; Defined at:
  4533 ;;		line 201 in file "main.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;		None               void
  4540 ;; Registers used:
  4541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;Total ram usage:        0 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    6
  4554 ;; This function calls:
  4555 ;;		_lcd_write
  4556 ;; This function is called by:
  4557 ;;		_action_submenu_selector
  4558 ;;		_activity_submenu_activation
  4559 ;;		_activity_submenu_clock
  4560 ;;		_activity_submenu_pin
  4561 ;;		_activity_submenu_alarm
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text30
  4566  00217E                     __ptext30:
  4567                           	opt stack 0
  4568  00217E                     _action_submenu_selector_0:
  4569                           	opt stack 20
  4570                           
  4571                           ;main.c: 202: lcd_write(9,1,">");
  4572                           
  4573                           ;incstack = 0
  4574  00217E  0E00               	movlw	0
  4575  002180  6E31               	movwf	lcd_write@column+1,c
  4576  002182  0E09               	movlw	9
  4577  002184  6E30               	movwf	lcd_write@column,c
  4578  002186  0E00               	movlw	0
  4579  002188  6E33               	movwf	lcd_write@row+1,c
  4580  00218A  0E01               	movlw	1
  4581  00218C  6E32               	movwf	lcd_write@row,c
  4582  00218E  0E9F               	movlw	low STR_6
  4583  002190  6E34               	movwf	lcd_write@string,c
  4584  002192  0E0F               	movlw	high STR_6
  4585  002194  6E35               	movwf	lcd_write@string+1,c
  4586  002196  EC9F  F012         	call	_lcd_write	;wreg free
  4587                           
  4588                           ;main.c: 203: submenu_selected = 0;
  4589  00219A  0E00               	movlw	0
  4590  00219C  6E1C               	movwf	_submenu_selected+1,c
  4591  00219E  0E00               	movlw	0
  4592  0021A0  6E1B               	movwf	_submenu_selected,c
  4593                           
  4594                           ;main.c: 204: lcd_write(9,2," ");
  4595  0021A2  0E00               	movlw	0
  4596  0021A4  6E31               	movwf	lcd_write@column+1,c
  4597  0021A6  0E09               	movlw	9
  4598  0021A8  6E30               	movwf	lcd_write@column,c
  4599  0021AA  0E00               	movlw	0
  4600  0021AC  6E33               	movwf	lcd_write@row+1,c
  4601  0021AE  0E02               	movlw	2
  4602  0021B0  6E32               	movwf	lcd_write@row,c
  4603  0021B2  0E9B               	movlw	low STR_7
  4604  0021B4  6E34               	movwf	lcd_write@string,c
  4605  0021B6  0E0F               	movlw	high STR_7
  4606  0021B8  6E35               	movwf	lcd_write@string+1,c
  4607  0021BA  EC9F  F012         	call	_lcd_write	;wreg free
  4608  0021BE  0012               	return		;funcret
  4609  0021C0                     __end_of_action_submenu_selector_0:
  4610                           	opt stack 0
  4611                           tblptru	equ	0xFF8
  4612                           tblptrh	equ	0xFF7
  4613                           tblptrl	equ	0xFF6
  4614                           tablat	equ	0xFF5
  4615                           prodl	equ	0xFF3
  4616                           intcon	equ	0xFF2
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           indf1	equ	0xFE7
  4620                           postdec1	equ	0xFE5
  4621                           fsr1h	equ	0xFE2
  4622                           fsr1l	equ	0xFE1
  4623                           indf2	equ	0xFDF
  4624                           fsr2h	equ	0xFDA
  4625                           fsr2l	equ	0xFD9
  4626                           status	equ	0xFD8
  4627                           
  4628 ;; *************** function _action_menu_selector *****************
  4629 ;; Defined at:
  4630 ;;		line 147 in file "main.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;		None               void
  4637 ;; Registers used:
  4638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4648 ;;Total ram usage:        2 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    7
  4651 ;; This function calls:
  4652 ;;		_action_menu_selector_0
  4653 ;;		_action_menu_selector_1
  4654 ;;		_action_menu_selector_2
  4655 ;;		_action_menu_selector_3
  4656 ;; This function is called by:
  4657 ;;		_button_A
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text31
  4662  0020B0                     __ptext31:
  4663                           	opt stack 0
  4664  0020B0                     _action_menu_selector:
  4665                           	opt stack 21
  4666                           
  4667                           ;main.c: 149: switch(menu_selected){
  4668                           
  4669                           ;incstack = 0
  4670  0020B0  D00C               	goto	l2904
  4671  0020B2                     l2894:
  4672                           
  4673                           ;main.c: 152: action_menu_selector_1();
  4674  0020B2  EC22  F011         	call	_action_menu_selector_1	;wreg free
  4675                           
  4676                           ;main.c: 153: break;
  4677  0020B6  0012               	return	
  4678  0020B8                     l2896:
  4679                           
  4680                           ;main.c: 156: action_menu_selector_2();
  4681  0020B8  EC01  F011         	call	_action_menu_selector_2	;wreg free
  4682                           
  4683                           ;main.c: 157: break;
  4684  0020BC  0012               	return	
  4685  0020BE                     l2898:
  4686                           
  4687                           ;main.c: 160: action_menu_selector_3();
  4688  0020BE  ECE0  F010         	call	_action_menu_selector_3	;wreg free
  4689                           
  4690                           ;main.c: 161: break;
  4691  0020C2  0012               	return	
  4692  0020C4                     l2900:
  4693                           
  4694                           ;main.c: 164: action_menu_selector_0();
  4695  0020C4  EC43  F011         	call	_action_menu_selector_0	;wreg free
  4696                           
  4697                           ;main.c: 167: }
  4698                           
  4699                           ;main.c: 165: break;
  4700  0020C8  0012               	return	
  4701  0020CA                     l2904:
  4702  0020CA  C013  F036         	movff	_menu_selected,??_action_menu_selector
  4703  0020CE  C014  F037         	movff	_menu_selected+1,??_action_menu_selector+1
  4704                           
  4705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4706                           ; Switch size 1, requested type "space"
  4707                           ; Number of cases is 1, Range of values is 0 to 0
  4708                           ; switch strategies available:
  4709                           ; Name         Instructions Cycles
  4710                           ; simple_byte            4     3 (average)
  4711                           ;	Chosen strategy is simple_byte
  4712  0020D2  5037               	movf	??_action_menu_selector+1,w,c
  4713  0020D4  0A00               	xorlw	0	; case 0
  4714  0020D6  A4D8               	btfss	status,2,c
  4715  0020D8  0012               	return	
  4716                           
  4717                           ; Switch size 1, requested type "space"
  4718                           ; Number of cases is 4, Range of values is 0 to 3
  4719                           ; switch strategies available:
  4720                           ; Name         Instructions Cycles
  4721                           ; simple_byte           13     7 (average)
  4722                           ;	Chosen strategy is simple_byte
  4723  0020DA  5036               	movf	??_action_menu_selector,w,c
  4724  0020DC  0A00               	xorlw	0	; case 0
  4725  0020DE  B4D8               	btfsc	status,2,c
  4726  0020E0  D7E8               	goto	l2894
  4727  0020E2  0A01               	xorlw	1	; case 1
  4728  0020E4  B4D8               	btfsc	status,2,c
  4729  0020E6  D7E8               	goto	l2896
  4730  0020E8  0A03               	xorlw	3	; case 2
  4731  0020EA  B4D8               	btfsc	status,2,c
  4732  0020EC  D7E8               	goto	l2898
  4733  0020EE  0A01               	xorlw	1	; case 3
  4734  0020F0  A4D8               	btfss	status,2,c
  4735  0020F2  0012               	return	
  4736  0020F4  D7E7               	goto	l2900
  4737  0020F6  0012               	return		;funcret
  4738  0020F8                     __end_of_action_menu_selector:
  4739                           	opt stack 0
  4740                           tblptru	equ	0xFF8
  4741                           tblptrh	equ	0xFF7
  4742                           tblptrl	equ	0xFF6
  4743                           tablat	equ	0xFF5
  4744                           prodl	equ	0xFF3
  4745                           intcon	equ	0xFF2
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           indf1	equ	0xFE7
  4749                           postdec1	equ	0xFE5
  4750                           fsr1h	equ	0xFE2
  4751                           fsr1l	equ	0xFE1
  4752                           indf2	equ	0xFDF
  4753                           fsr2h	equ	0xFDA
  4754                           fsr2l	equ	0xFD9
  4755                           status	equ	0xFD8
  4756                           
  4757 ;; *************** function _action_menu_selector_3 *****************
  4758 ;; Defined at:
  4759 ;;		line 141 in file "main.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;		None
  4764 ;; Return value:  Size  Location     Type
  4765 ;;		None               void
  4766 ;; Registers used:
  4767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;Total ram usage:        0 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    6
  4780 ;; This function calls:
  4781 ;;		_lcd_write
  4782 ;; This function is called by:
  4783 ;;		_action_menu_selector
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text32
  4788  0021C0                     __ptext32:
  4789                           	opt stack 0
  4790  0021C0                     _action_menu_selector_3:
  4791                           	opt stack 21
  4792                           
  4793                           ;main.c: 142: lcd_write(9,2,">");
  4794                           
  4795                           ;incstack = 0
  4796  0021C0  0E00               	movlw	0
  4797  0021C2  6E31               	movwf	lcd_write@column+1,c
  4798  0021C4  0E09               	movlw	9
  4799  0021C6  6E30               	movwf	lcd_write@column,c
  4800  0021C8  0E00               	movlw	0
  4801  0021CA  6E33               	movwf	lcd_write@row+1,c
  4802  0021CC  0E02               	movlw	2
  4803  0021CE  6E32               	movwf	lcd_write@row,c
  4804  0021D0  0E9F               	movlw	low STR_6
  4805  0021D2  6E34               	movwf	lcd_write@string,c
  4806  0021D4  0E0F               	movlw	high STR_6
  4807  0021D6  6E35               	movwf	lcd_write@string+1,c
  4808  0021D8  EC9F  F012         	call	_lcd_write	;wreg free
  4809                           
  4810                           ;main.c: 143: menu_selected = 3;
  4811  0021DC  0E00               	movlw	0
  4812  0021DE  6E14               	movwf	_menu_selected+1,c
  4813  0021E0  0E03               	movlw	3
  4814  0021E2  6E13               	movwf	_menu_selected,c
  4815                           
  4816                           ;main.c: 144: lcd_write(9,1," ");
  4817  0021E4  0E00               	movlw	0
  4818  0021E6  6E31               	movwf	lcd_write@column+1,c
  4819  0021E8  0E09               	movlw	9
  4820  0021EA  6E30               	movwf	lcd_write@column,c
  4821  0021EC  0E00               	movlw	0
  4822  0021EE  6E33               	movwf	lcd_write@row+1,c
  4823  0021F0  0E01               	movlw	1
  4824  0021F2  6E32               	movwf	lcd_write@row,c
  4825  0021F4  0E9B               	movlw	low STR_7
  4826  0021F6  6E34               	movwf	lcd_write@string,c
  4827  0021F8  0E0F               	movlw	high STR_7
  4828  0021FA  6E35               	movwf	lcd_write@string+1,c
  4829  0021FC  EC9F  F012         	call	_lcd_write	;wreg free
  4830  002200  0012               	return		;funcret
  4831  002202                     __end_of_action_menu_selector_3:
  4832                           	opt stack 0
  4833                           tblptru	equ	0xFF8
  4834                           tblptrh	equ	0xFF7
  4835                           tblptrl	equ	0xFF6
  4836                           tablat	equ	0xFF5
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           postinc0	equ	0xFEE
  4840                           wreg	equ	0xFE8
  4841                           indf1	equ	0xFE7
  4842                           postdec1	equ	0xFE5
  4843                           fsr1h	equ	0xFE2
  4844                           fsr1l	equ	0xFE1
  4845                           indf2	equ	0xFDF
  4846                           fsr2h	equ	0xFDA
  4847                           fsr2l	equ	0xFD9
  4848                           status	equ	0xFD8
  4849                           
  4850 ;; *************** function _action_menu_selector_2 *****************
  4851 ;; Defined at:
  4852 ;;		line 135 in file "main.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;		None               void
  4859 ;; Registers used:
  4860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    6
  4873 ;; This function calls:
  4874 ;;		_lcd_write
  4875 ;; This function is called by:
  4876 ;;		_action_menu_selector
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text33
  4881  002202                     __ptext33:
  4882                           	opt stack 0
  4883  002202                     _action_menu_selector_2:
  4884                           	opt stack 21
  4885                           
  4886                           ;main.c: 136: lcd_write(9,1,">");
  4887                           
  4888                           ;incstack = 0
  4889  002202  0E00               	movlw	0
  4890  002204  6E31               	movwf	lcd_write@column+1,c
  4891  002206  0E09               	movlw	9
  4892  002208  6E30               	movwf	lcd_write@column,c
  4893  00220A  0E00               	movlw	0
  4894  00220C  6E33               	movwf	lcd_write@row+1,c
  4895  00220E  0E01               	movlw	1
  4896  002210  6E32               	movwf	lcd_write@row,c
  4897  002212  0E9F               	movlw	low STR_6
  4898  002214  6E34               	movwf	lcd_write@string,c
  4899  002216  0E0F               	movlw	high STR_6
  4900  002218  6E35               	movwf	lcd_write@string+1,c
  4901  00221A  EC9F  F012         	call	_lcd_write	;wreg free
  4902                           
  4903                           ;main.c: 137: menu_selected = 2;
  4904  00221E  0E00               	movlw	0
  4905  002220  6E14               	movwf	_menu_selected+1,c
  4906  002222  0E02               	movlw	2
  4907  002224  6E13               	movwf	_menu_selected,c
  4908                           
  4909                           ;main.c: 138: lcd_write(1,2," ");
  4910  002226  0E00               	movlw	0
  4911  002228  6E31               	movwf	lcd_write@column+1,c
  4912  00222A  0E01               	movlw	1
  4913  00222C  6E30               	movwf	lcd_write@column,c
  4914  00222E  0E00               	movlw	0
  4915  002230  6E33               	movwf	lcd_write@row+1,c
  4916  002232  0E02               	movlw	2
  4917  002234  6E32               	movwf	lcd_write@row,c
  4918  002236  0E9B               	movlw	low STR_7
  4919  002238  6E34               	movwf	lcd_write@string,c
  4920  00223A  0E0F               	movlw	high STR_7
  4921  00223C  6E35               	movwf	lcd_write@string+1,c
  4922  00223E  EC9F  F012         	call	_lcd_write	;wreg free
  4923  002242  0012               	return		;funcret
  4924  002244                     __end_of_action_menu_selector_2:
  4925                           	opt stack 0
  4926                           tblptru	equ	0xFF8
  4927                           tblptrh	equ	0xFF7
  4928                           tblptrl	equ	0xFF6
  4929                           tablat	equ	0xFF5
  4930                           prodl	equ	0xFF3
  4931                           intcon	equ	0xFF2
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           indf1	equ	0xFE7
  4935                           postdec1	equ	0xFE5
  4936                           fsr1h	equ	0xFE2
  4937                           fsr1l	equ	0xFE1
  4938                           indf2	equ	0xFDF
  4939                           fsr2h	equ	0xFDA
  4940                           fsr2l	equ	0xFD9
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _action_menu_selector_1 *****************
  4944 ;; Defined at:
  4945 ;;		line 129 in file "main.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;		None               void
  4952 ;; Registers used:
  4953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    6
  4966 ;; This function calls:
  4967 ;;		_lcd_write
  4968 ;; This function is called by:
  4969 ;;		_action_menu_selector
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text34
  4974  002244                     __ptext34:
  4975                           	opt stack 0
  4976  002244                     _action_menu_selector_1:
  4977                           	opt stack 21
  4978                           
  4979                           ;main.c: 130: lcd_write(1,2,">");
  4980                           
  4981                           ;incstack = 0
  4982  002244  0E00               	movlw	0
  4983  002246  6E31               	movwf	lcd_write@column+1,c
  4984  002248  0E01               	movlw	1
  4985  00224A  6E30               	movwf	lcd_write@column,c
  4986  00224C  0E00               	movlw	0
  4987  00224E  6E33               	movwf	lcd_write@row+1,c
  4988  002250  0E02               	movlw	2
  4989  002252  6E32               	movwf	lcd_write@row,c
  4990  002254  0E9F               	movlw	low STR_6
  4991  002256  6E34               	movwf	lcd_write@string,c
  4992  002258  0E0F               	movlw	high STR_6
  4993  00225A  6E35               	movwf	lcd_write@string+1,c
  4994  00225C  EC9F  F012         	call	_lcd_write	;wreg free
  4995                           
  4996                           ;main.c: 131: menu_selected = 1;
  4997  002260  0E00               	movlw	0
  4998  002262  6E14               	movwf	_menu_selected+1,c
  4999  002264  0E01               	movlw	1
  5000  002266  6E13               	movwf	_menu_selected,c
  5001                           
  5002                           ;main.c: 132: lcd_write(1,1," ");
  5003  002268  0E00               	movlw	0
  5004  00226A  6E31               	movwf	lcd_write@column+1,c
  5005  00226C  0E01               	movlw	1
  5006  00226E  6E30               	movwf	lcd_write@column,c
  5007  002270  0E00               	movlw	0
  5008  002272  6E33               	movwf	lcd_write@row+1,c
  5009  002274  0E01               	movlw	1
  5010  002276  6E32               	movwf	lcd_write@row,c
  5011  002278  0E9B               	movlw	low STR_7
  5012  00227A  6E34               	movwf	lcd_write@string,c
  5013  00227C  0E0F               	movlw	high STR_7
  5014  00227E  6E35               	movwf	lcd_write@string+1,c
  5015  002280  EC9F  F012         	call	_lcd_write	;wreg free
  5016  002284  0012               	return		;funcret
  5017  002286                     __end_of_action_menu_selector_1:
  5018                           	opt stack 0
  5019                           tblptru	equ	0xFF8
  5020                           tblptrh	equ	0xFF7
  5021                           tblptrl	equ	0xFF6
  5022                           tablat	equ	0xFF5
  5023                           prodl	equ	0xFF3
  5024                           intcon	equ	0xFF2
  5025                           postinc0	equ	0xFEE
  5026                           wreg	equ	0xFE8
  5027                           indf1	equ	0xFE7
  5028                           postdec1	equ	0xFE5
  5029                           fsr1h	equ	0xFE2
  5030                           fsr1l	equ	0xFE1
  5031                           indf2	equ	0xFDF
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _action_menu_selector_0 *****************
  5037 ;; Defined at:
  5038 ;;		line 123 in file "main.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;		None               void
  5045 ;; Registers used:
  5046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    6
  5059 ;; This function calls:
  5060 ;;		_lcd_write
  5061 ;; This function is called by:
  5062 ;;		_action_menu_selector
  5063 ;;		_activity_menu
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text35
  5068  002286                     __ptext35:
  5069                           	opt stack 0
  5070  002286                     _action_menu_selector_0:
  5071                           	opt stack 20
  5072                           
  5073                           ;main.c: 124: lcd_write(1,1,">");
  5074                           
  5075                           ;incstack = 0
  5076  002286  0E00               	movlw	0
  5077  002288  6E31               	movwf	lcd_write@column+1,c
  5078  00228A  0E01               	movlw	1
  5079  00228C  6E30               	movwf	lcd_write@column,c
  5080  00228E  0E00               	movlw	0
  5081  002290  6E33               	movwf	lcd_write@row+1,c
  5082  002292  0E01               	movlw	1
  5083  002294  6E32               	movwf	lcd_write@row,c
  5084  002296  0E9F               	movlw	low STR_6
  5085  002298  6E34               	movwf	lcd_write@string,c
  5086  00229A  0E0F               	movlw	high STR_6
  5087  00229C  6E35               	movwf	lcd_write@string+1,c
  5088  00229E  EC9F  F012         	call	_lcd_write	;wreg free
  5089                           
  5090                           ;main.c: 125: menu_selected = 0;
  5091  0022A2  0E00               	movlw	0
  5092  0022A4  6E14               	movwf	_menu_selected+1,c
  5093  0022A6  0E00               	movlw	0
  5094  0022A8  6E13               	movwf	_menu_selected,c
  5095                           
  5096                           ;main.c: 126: lcd_write(9,2," ");
  5097  0022AA  0E00               	movlw	0
  5098  0022AC  6E31               	movwf	lcd_write@column+1,c
  5099  0022AE  0E09               	movlw	9
  5100  0022B0  6E30               	movwf	lcd_write@column,c
  5101  0022B2  0E00               	movlw	0
  5102  0022B4  6E33               	movwf	lcd_write@row+1,c
  5103  0022B6  0E02               	movlw	2
  5104  0022B8  6E32               	movwf	lcd_write@row,c
  5105  0022BA  0E9B               	movlw	low STR_7
  5106  0022BC  6E34               	movwf	lcd_write@string,c
  5107  0022BE  0E0F               	movlw	high STR_7
  5108  0022C0  6E35               	movwf	lcd_write@string+1,c
  5109  0022C2  EC9F  F012         	call	_lcd_write	;wreg free
  5110  0022C6  0012               	return		;funcret
  5111  0022C8                     __end_of_action_menu_selector_0:
  5112                           	opt stack 0
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           prodl	equ	0xFF3
  5118                           intcon	equ	0xFF2
  5119                           postinc0	equ	0xFEE
  5120                           wreg	equ	0xFE8
  5121                           indf1	equ	0xFE7
  5122                           postdec1	equ	0xFE5
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           indf2	equ	0xFDF
  5126                           fsr2h	equ	0xFDA
  5127                           fsr2l	equ	0xFD9
  5128                           status	equ	0xFD8
  5129                           
  5130 ;; *************** function _home_state_refresh *****************
  5131 ;; Defined at:
  5132 ;;		line 109 in file "main.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;		None               void
  5139 ;; Registers used:
  5140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;Total ram usage:        0 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    6
  5153 ;; This function calls:
  5154 ;;		_lcd_write
  5155 ;;		_sprintf
  5156 ;; This function is called by:
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text36
  5162  001E42                     __ptext36:
  5163                           	opt stack 0
  5164  001E42                     _home_state_refresh:
  5165                           	opt stack 24
  5166                           
  5167                           ;main.c: 111: if(state == 1){
  5168                           
  5169                           ;incstack = 0
  5170  001E42  0419               	decf	_state,w,c
  5171  001E44  101A               	iorwf	_state+1,w,c
  5172  001E46  A4D8               	btfss	status,2,c
  5173  001E48  D00C               	goto	l3274
  5174                           
  5175                           ;main.c: 112: sprintf(buffer1,"ACT:OK");
  5176  001E4A  0E7C               	movlw	low _buffer1
  5177  001E4C  6E32               	movwf	sprintf@sp,c
  5178  001E4E  0E00               	movlw	high _buffer1
  5179  001E50  6E33               	movwf	sprintf@sp+1,c
  5180  001E52  0E55               	movlw	low STR_4
  5181  001E54  6E34               	movwf	sprintf@f,c
  5182  001E56  0E0F               	movlw	high STR_4
  5183  001E58  6E35               	movwf	sprintf@f+1,c
  5184  001E5A  ECD1  F007         	call	_sprintf	;wreg free
  5185                           
  5186                           ;main.c: 113: LATBbits.LATB1 = 1;;
  5187  001E5E  828A               	bsf	3978,1,c	;volatile
  5188                           
  5189                           ;main.c: 114: }
  5190  001E60  D00C               	goto	l3278
  5191  001E62                     l3274:
  5192                           
  5193                           ;main.c: 115: else{
  5194                           ;main.c: 116: sprintf(buffer1,"ACT:NO");
  5195  001E62  0E7C               	movlw	low _buffer1
  5196  001E64  6E32               	movwf	sprintf@sp,c
  5197  001E66  0E00               	movlw	high _buffer1
  5198  001E68  6E33               	movwf	sprintf@sp+1,c
  5199  001E6A  0E5C               	movlw	low STR_5
  5200  001E6C  6E34               	movwf	sprintf@f,c
  5201  001E6E  0E0F               	movlw	high STR_5
  5202  001E70  6E35               	movwf	sprintf@f+1,c
  5203  001E72  ECD1  F007         	call	_sprintf	;wreg free
  5204                           
  5205                           ;main.c: 117: LATBbits.LATB1 = 0;;
  5206  001E76  928A               	bcf	3978,1,c	;volatile
  5207  001E78  D000               	goto	l3278
  5208  001E7A                     l3278:
  5209                           
  5210                           ;main.c: 118: }
  5211                           ;main.c: 119: lcd_write(1,2,buffer1);
  5212  001E7A  0E00               	movlw	0
  5213  001E7C  6E31               	movwf	lcd_write@column+1,c
  5214  001E7E  0E01               	movlw	1
  5215  001E80  6E30               	movwf	lcd_write@column,c
  5216  001E82  0E00               	movlw	0
  5217  001E84  6E33               	movwf	lcd_write@row+1,c
  5218  001E86  0E02               	movlw	2
  5219  001E88  6E32               	movwf	lcd_write@row,c
  5220  001E8A  0E7C               	movlw	low _buffer1
  5221  001E8C  6E34               	movwf	lcd_write@string,c
  5222  001E8E  0E00               	movlw	high _buffer1
  5223  001E90  6E35               	movwf	lcd_write@string+1,c
  5224  001E92  EC9F  F012         	call	_lcd_write	;wreg free
  5225  001E96  0012               	return		;funcret
  5226  001E98                     __end_of_home_state_refresh:
  5227                           	opt stack 0
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodl	equ	0xFF3
  5233                           intcon	equ	0xFF2
  5234                           postinc0	equ	0xFEE
  5235                           wreg	equ	0xFE8
  5236                           indf1	equ	0xFE7
  5237                           postdec1	equ	0xFE5
  5238                           fsr1h	equ	0xFE2
  5239                           fsr1l	equ	0xFE1
  5240                           indf2	equ	0xFDF
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function _home_clock_refresh *****************
  5246 ;; Defined at:
  5247 ;;		line 100 in file "main.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;		None               void
  5254 ;; Registers used:
  5255 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;Total ram usage:        0 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    6
  5268 ;; This function calls:
  5269 ;;		_lcd_write
  5270 ;;		_sprintf
  5271 ;; This function is called by:
  5272 ;;		_main
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text37
  5277  00186E                     __ptext37:
  5278                           	opt stack 0
  5279  00186E                     _home_clock_refresh:
  5280                           	opt stack 24
  5281                           
  5282                           ;main.c: 102: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  5283                           
  5284                           ;incstack = 0
  5285  00186E  0E7C               	movlw	low _buffer1
  5286  001870  6E32               	movwf	sprintf@sp,c
  5287  001872  0E00               	movlw	high _buffer1
  5288  001874  6E33               	movwf	sprintf@sp+1,c
  5289  001876  0E1F               	movlw	low STR_2
  5290  001878  6E34               	movwf	sprintf@f,c
  5291  00187A  0E0F               	movlw	high STR_2
  5292  00187C  6E35               	movwf	sprintf@f+1,c
  5293  00187E  C057  F036         	movff	_dia,?_sprintf+4
  5294  001882  C058  F037         	movff	_dia+1,?_sprintf+5
  5295  001886  C05D  F038         	movff	_mes,?_sprintf+6
  5296  00188A  C05E  F039         	movff	_mes+1,?_sprintf+7
  5297  00188E  C055  F03A         	movff	_anio,?_sprintf+8
  5298  001892  C056  F03B         	movff	_anio+1,?_sprintf+9
  5299  001896  ECD1  F007         	call	_sprintf	;wreg free
  5300                           
  5301                           ;main.c: 103: lcd_write(9,1,buffer1);
  5302  00189A  0E00               	movlw	0
  5303  00189C  6E31               	movwf	lcd_write@column+1,c
  5304  00189E  0E09               	movlw	9
  5305  0018A0  6E30               	movwf	lcd_write@column,c
  5306  0018A2  0E00               	movlw	0
  5307  0018A4  6E33               	movwf	lcd_write@row+1,c
  5308  0018A6  0E01               	movlw	1
  5309  0018A8  6E32               	movwf	lcd_write@row,c
  5310  0018AA  0E7C               	movlw	low _buffer1
  5311  0018AC  6E34               	movwf	lcd_write@string,c
  5312  0018AE  0E00               	movlw	high _buffer1
  5313  0018B0  6E35               	movwf	lcd_write@string+1,c
  5314  0018B2  EC9F  F012         	call	_lcd_write	;wreg free
  5315                           
  5316                           ;main.c: 104: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  5317  0018B6  0E7C               	movlw	low _buffer1
  5318  0018B8  6E32               	movwf	sprintf@sp,c
  5319  0018BA  0E00               	movlw	high _buffer1
  5320  0018BC  6E33               	movwf	sprintf@sp+1,c
  5321  0018BE  0E2E               	movlw	low STR_3
  5322  0018C0  6E34               	movwf	sprintf@f,c
  5323  0018C2  0E0F               	movlw	high STR_3
  5324  0018C4  6E35               	movwf	sprintf@f+1,c
  5325  0018C6  C05B  F036         	movff	_hora,?_sprintf+4
  5326  0018CA  C05C  F037         	movff	_hora+1,?_sprintf+5
  5327  0018CE  C015  F038         	movff	_minuto,?_sprintf+6
  5328  0018D2  C016  F039         	movff	_minuto+1,?_sprintf+7
  5329  0018D6  C017  F03A         	movff	_segundo,?_sprintf+8
  5330  0018DA  C018  F03B         	movff	_segundo+1,?_sprintf+9
  5331  0018DE  ECD1  F007         	call	_sprintf	;wreg free
  5332                           
  5333                           ;main.c: 105: lcd_write(9,2,buffer1);
  5334  0018E2  0E00               	movlw	0
  5335  0018E4  6E31               	movwf	lcd_write@column+1,c
  5336  0018E6  0E09               	movlw	9
  5337  0018E8  6E30               	movwf	lcd_write@column,c
  5338  0018EA  0E00               	movlw	0
  5339  0018EC  6E33               	movwf	lcd_write@row+1,c
  5340  0018EE  0E02               	movlw	2
  5341  0018F0  6E32               	movwf	lcd_write@row,c
  5342  0018F2  0E7C               	movlw	low _buffer1
  5343  0018F4  6E34               	movwf	lcd_write@string,c
  5344  0018F6  0E00               	movlw	high _buffer1
  5345  0018F8  6E35               	movwf	lcd_write@string+1,c
  5346  0018FA  EC9F  F012         	call	_lcd_write	;wreg free
  5347  0018FE  0012               	return		;funcret
  5348  001900                     __end_of_home_clock_refresh:
  5349                           	opt stack 0
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           prodl	equ	0xFF3
  5355                           intcon	equ	0xFF2
  5356                           postinc0	equ	0xFEE
  5357                           wreg	equ	0xFE8
  5358                           indf1	equ	0xFE7
  5359                           postdec1	equ	0xFE5
  5360                           fsr1h	equ	0xFE2
  5361                           fsr1l	equ	0xFE1
  5362                           indf2	equ	0xFDF
  5363                           fsr2h	equ	0xFDA
  5364                           fsr2l	equ	0xFD9
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function _sprintf *****************
  5368 ;; Defined at:
  5369 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  sp              2   12[COMRAM] PTR unsigned char 
  5372 ;;		 -> buffer1(20), 
  5373 ;;  f               2   14[COMRAM] PTR const unsigned char 
  5374 ;;		 -> STR_39(5), STR_38(5), STR_5(7), STR_4(7), 
  5375 ;;		 -> STR_3(15), STR_2(15), 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  tmpval          4    0        struct .
  5378 ;;  cp              3    0        PTR const unsigned char 
  5379 ;;  width           2   32[COMRAM] int 
  5380 ;;  val             2   29[COMRAM] unsigned int 
  5381 ;;  ap              2   26[COMRAM] PTR void [1]
  5382 ;;		 -> ?_sprintf(2), 
  5383 ;;  len             2    0        unsigned int 
  5384 ;;  c               1   34[COMRAM] char 
  5385 ;;  prec            1   31[COMRAM] char 
  5386 ;;  flag            1   28[COMRAM] unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  2   12[COMRAM] int 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5396 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5397 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5399 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5400 ;;Total ram usage:       23 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    1
  5403 ;; This function calls:
  5404 ;;		___lwdiv
  5405 ;;		___lwmod
  5406 ;;		___wmul
  5407 ;;		_isdigit
  5408 ;; This function is called by:
  5409 ;;		_home_clock_refresh
  5410 ;;		_home_state_refresh
  5411 ;;		_button_number
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text38
  5416  000FA2                     __ptext38:
  5417                           	opt stack 0
  5418  000FA2                     _sprintf:
  5419                           	opt stack 27
  5420                           
  5421                           ;doprnt.c: 494: va_list ap;
  5422                           ;doprnt.c: 499: signed char c;
  5423                           ;doprnt.c: 501: int width;
  5424                           ;doprnt.c: 506: signed char prec;
  5425                           ;doprnt.c: 508: unsigned char flag;
  5426                           ;doprnt.c: 523: union {
  5427                           ;doprnt.c: 524: unsigned long vd;
  5428                           ;doprnt.c: 525: double integ;
  5429                           ;doprnt.c: 526: } tmpval;
  5430                           ;doprnt.c: 528: unsigned int val;
  5431                           ;doprnt.c: 529: unsigned len;
  5432                           ;doprnt.c: 530: const char * cp;
  5433                           ;doprnt.c: 533: *ap = __va_start();
  5434                           
  5435                           ;incstack = 0
  5436  000FA2  0E36               	movlw	low (?_sprintf+4)
  5437  000FA4  6E40               	movwf	sprintf@ap,c
  5438  000FA6  0E00               	movlw	high (?_sprintf+4)
  5439  000FA8  6E41               	movwf	sprintf@ap+1,c
  5440                           
  5441                           ;doprnt.c: 536: while(c = *f++) {
  5442  000FAA  D117               	goto	l2886
  5443  000FAC                     l2804:
  5444                           
  5445                           ;doprnt.c: 538: if(c != '%')
  5446  000FAC  0E25               	movlw	37
  5447  000FAE  1848               	xorwf	sprintf@c,w,c
  5448  000FB0  B4D8               	btfsc	status,2,c
  5449  000FB2  D009               	goto	l2810
  5450                           
  5451                           ;doprnt.c: 540: {
  5452                           ;doprnt.c: 541: ((*sp++ = (c)));
  5453  000FB4  C032  FFD9         	movff	sprintf@sp,fsr2l
  5454  000FB8  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5455  000FBC  C048  FFDF         	movff	sprintf@c,indf2
  5456  000FC0  4A32               	infsnz	sprintf@sp,f,c
  5457  000FC2  2A33               	incf	sprintf@sp+1,f,c
  5458                           
  5459                           ;doprnt.c: 542: continue;
  5460  000FC4  D10A               	goto	l2886
  5461  000FC6                     l2810:
  5462                           
  5463                           ;doprnt.c: 543: }
  5464                           ;doprnt.c: 546: width = 0;
  5465  000FC6  0E00               	movlw	0
  5466  000FC8  6E47               	movwf	sprintf@width+1,c
  5467  000FCA  0E00               	movlw	0
  5468  000FCC  6E46               	movwf	sprintf@width,c
  5469                           
  5470                           ;doprnt.c: 548: flag = 0;
  5471  000FCE  0E00               	movlw	0
  5472  000FD0  6E42               	movwf	sprintf@flag,c
  5473                           
  5474                           ;doprnt.c: 551: switch(*f) {
  5475                           
  5476                           ;doprnt.c: 550: for(;;) {
  5477  000FD2  D005               	goto	l2816
  5478  000FD4                     l2812:
  5479                           
  5480                           ;doprnt.c: 580: flag |= 0x04;
  5481  000FD4  8442               	bsf	sprintf@flag,2,c
  5482                           
  5483                           ;doprnt.c: 581: f++;
  5484  000FD6  4A34               	infsnz	sprintf@f,f,c
  5485  000FD8  2A35               	incf	sprintf@f+1,f,c
  5486                           
  5487                           ;doprnt.c: 582: continue;
  5488  000FDA  D001               	goto	l2816
  5489                           
  5490                           ;doprnt.c: 584: }
  5491  000FDC  D00B               	goto	l2818
  5492  000FDE                     l2816:
  5493  000FDE  C034  FFF6         	movff	sprintf@f,tblptrl
  5494  000FE2  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5495  000FE6                     	if	0	;tblptru may be non-zero
  5496  000FE6                     	endif
  5497  000FE6                     	if	0	;tblptru may be non-zero
  5498  000FE6                     	endif
  5499  000FE6  0008               	tblrd		*
  5500  000FE8  50F5               	movf	tablat,w,c
  5501                           
  5502                           ; Switch size 1, requested type "space"
  5503                           ; Number of cases is 1, Range of values is 48 to 48
  5504                           ; switch strategies available:
  5505                           ; Name         Instructions Cycles
  5506                           ; simple_byte            4     3 (average)
  5507                           ;	Chosen strategy is simple_byte
  5508  000FEA  0A30               	xorlw	48	; case 48
  5509  000FEC  B4D8               	btfsc	status,2,c
  5510  000FEE  D7F2               	goto	l2812
  5511                           
  5512                           ;doprnt.c: 585: break;
  5513  000FF0  D001               	goto	l2818
  5514                           
  5515                           ;doprnt.c: 586: }
  5516  000FF2  D7F5               	goto	l2816
  5517  000FF4                     l2818:
  5518                           
  5519                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5520  000FF4  C034  FFF6         	movff	sprintf@f,tblptrl
  5521  000FF8  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5522  000FFC                     	if	0	;tblptru may be non-zero
  5523  000FFC                     	endif
  5524  000FFC                     	if	0	;tblptru may be non-zero
  5525  000FFC                     	endif
  5526  000FFC  0008               	tblrd		*
  5527  000FFE  50F5               	movf	tablat,w,c
  5528  001000  EC6F  F012         	call	_isdigit
  5529  001004  A0D8               	btfss	status,0,c
  5530  001006  D03A               	goto	l2834
  5531                           
  5532                           ;doprnt.c: 598: width = 0;
  5533  001008  0E00               	movlw	0
  5534  00100A  6E47               	movwf	sprintf@width+1,c
  5535  00100C  0E00               	movlw	0
  5536  00100E  6E46               	movwf	sprintf@width,c
  5537  001010  D000               	goto	l2822
  5538  001012                     l2822:
  5539                           
  5540                           ;doprnt.c: 600: width *= 10;
  5541  001012  C046  F026         	movff	sprintf@width,___wmul@multiplier
  5542  001016  C047  F027         	movff	sprintf@width+1,___wmul@multiplier+1
  5543  00101A  0E00               	movlw	0
  5544  00101C  6E29               	movwf	___wmul@multiplicand+1,c
  5545  00101E  0E0A               	movlw	10
  5546  001020  6E28               	movwf	___wmul@multiplicand,c
  5547  001022  EC49  F012         	call	___wmul	;wreg free
  5548  001026  C026  F046         	movff	?___wmul,sprintf@width
  5549  00102A  C027  F047         	movff	?___wmul+1,sprintf@width+1
  5550                           
  5551                           ;doprnt.c: 601: width += *f++ - '0';
  5552  00102E  0ED0               	movlw	208
  5553  001030  6E3C               	movwf	??_sprintf& (0+255),c
  5554  001032  0EFF               	movlw	255
  5555  001034  6E3D               	movwf	(??_sprintf+1)& (0+255),c
  5556  001036  C034  FFF6         	movff	sprintf@f,tblptrl
  5557  00103A  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5558  00103E                     	if	0	;tblptru may be non-zero
  5559  00103E                     	endif
  5560  00103E                     	if	0	;tblptru may be non-zero
  5561  00103E                     	endif
  5562  00103E  0008               	tblrd		*
  5563  001040  50F5               	movf	tablat,w,c
  5564  001042  6E3E               	movwf	(??_sprintf+2)& (0+255),c
  5565  001044  6A3F               	clrf	(??_sprintf+3)& (0+255),c
  5566  001046  503C               	movf	??_sprintf,w,c
  5567  001048  263E               	addwf	??_sprintf+2,f,c
  5568  00104A  503D               	movf	??_sprintf+1,w,c
  5569  00104C  223F               	addwfc	??_sprintf+3,f,c
  5570  00104E  503E               	movf	??_sprintf+2,w,c
  5571  001050  2646               	addwf	sprintf@width,f,c
  5572  001052  503F               	movf	??_sprintf+3,w,c
  5573  001054  2247               	addwfc	sprintf@width+1,f,c
  5574  001056  4A34               	infsnz	sprintf@f,f,c
  5575  001058  2A35               	incf	sprintf@f+1,f,c
  5576                           
  5577                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5578  00105A  C034  FFF6         	movff	sprintf@f,tblptrl
  5579  00105E  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5580  001062                     	if	0	;tblptru may be non-zero
  5581  001062                     	endif
  5582  001062                     	if	0	;tblptru may be non-zero
  5583  001062                     	endif
  5584  001062  0008               	tblrd		*
  5585  001064  50F5               	movf	tablat,w,c
  5586  001066  EC6F  F012         	call	_isdigit
  5587  00106A  A0D8               	btfss	status,0,c
  5588  00106C  D007               	goto	l2834
  5589  00106E  D7D1               	goto	l2822
  5590                           
  5591                           ;doprnt.c: 608: }
  5592                           ;doprnt.c: 635: switch(c = *f++) {
  5593  001070  D005               	goto	l2834
  5594                           
  5595                           ;doprnt.c: 638: goto alldone;
  5596                           
  5597                           ;doprnt.c: 637: case 0:
  5598  001072  D0C1               	goto	l2888
  5599                           
  5600                           ;doprnt.c: 813: continue;
  5601                           
  5602                           ;doprnt.c: 802: default:
  5603  001074  D0B2               	goto	l2886
  5604  001076                     l2830:
  5605                           
  5606                           ;doprnt.c: 818: flag |= 0xC0;
  5607  001076  0EC0               	movlw	192
  5608  001078  1242               	iorwf	sprintf@flag,f,c
  5609                           
  5610                           ;doprnt.c: 822: }
  5611                           
  5612                           ;doprnt.c: 819: break;
  5613  00107A  D011               	goto	l2836
  5614  00107C                     l2834:
  5615  00107C  C034  FFF6         	movff	sprintf@f,tblptrl
  5616  001080  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5617  001084  4A34               	infsnz	sprintf@f,f,c
  5618  001086  2A35               	incf	sprintf@f+1,f,c
  5619  001088                     	if	0	;tblptru may be non-zero
  5620  001088                     	endif
  5621  001088                     	if	0	;tblptru may be non-zero
  5622  001088                     	endif
  5623  001088  0008               	tblrd		*
  5624  00108A  CFF5 F048          	movff	tablat,sprintf@c
  5625  00108E  5048               	movf	sprintf@c,w,c
  5626                           
  5627                           ; Switch size 1, requested type "space"
  5628                           ; Number of cases is 2, Range of values is 0 to 117
  5629                           ; switch strategies available:
  5630                           ; Name         Instructions Cycles
  5631                           ; simple_byte            7     4 (average)
  5632                           ;	Chosen strategy is simple_byte
  5633  001090  0A00               	xorlw	0	; case 0
  5634  001092  B4D8               	btfsc	status,2,c
  5635  001094  D0B0               	goto	l2888
  5636  001096  0A75               	xorlw	117	; case 117
  5637  001098  B4D8               	btfsc	status,2,c
  5638  00109A  D7ED               	goto	l2830
  5639  00109C  D09E               	goto	l2886
  5640  00109E                     l2836:
  5641                           
  5642                           ;doprnt.c: 1273: {
  5643                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5644  00109E  C040  FFD9         	movff	sprintf@ap,fsr2l
  5645  0010A2  C041  FFDA         	movff	sprintf@ap+1,fsr2h
  5646  0010A6  CFDE F043          	movff	postinc2,sprintf@val
  5647  0010AA  CFDD F044          	movff	postdec2,sprintf@val+1
  5648  0010AE  0E02               	movlw	2
  5649  0010B0  2640               	addwf	sprintf@ap,f,c
  5650  0010B2  0E00               	movlw	0
  5651  0010B4  2241               	addwfc	sprintf@ap+1,f,c
  5652                           
  5653                           ;doprnt.c: 1287: }
  5654                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5655  0010B6  0E01               	movlw	1
  5656  0010B8  6E48               	movwf	sprintf@c,c
  5657  0010BA                     l2842:
  5658  0010BA  0E05               	movlw	5
  5659  0010BC  1848               	xorwf	sprintf@c,w,c
  5660  0010BE  B4D8               	btfsc	status,2,c
  5661  0010C0  D016               	goto	l2854
  5662  0010C2  D001               	goto	l2846
  5663  0010C4  D014               	goto	l2854
  5664  0010C6                     l2846:
  5665                           
  5666                           ;doprnt.c: 1306: if(val < dpowers[c])
  5667  0010C6  5048               	movf	sprintf@c,w,c
  5668  0010C8  0D02               	mullw	2
  5669  0010CA  0E01               	movlw	low _dpowers
  5670  0010CC  24F3               	addwf	prodl,w,c
  5671  0010CE  6EF6               	movwf	tblptrl,c
  5672  0010D0  0E0F               	movlw	high _dpowers
  5673  0010D2  20F4               	addwfc	prodh,w,c
  5674  0010D4  6EF7               	movwf	tblptrh,c
  5675  0010D6                     	if	0	;There are less than 3 active tblptr bytes
  5676  0010D6                     	endif
  5677  0010D6  0009               	tblrd		*+
  5678  0010D8  50F5               	movf	tablat,w,c
  5679  0010DA  5C43               	subwf	sprintf@val,w,c
  5680  0010DC  0009               	tblrd		*+
  5681  0010DE  50F5               	movf	tablat,w,c
  5682  0010E0  5844               	subwfb	sprintf@val+1,w,c
  5683  0010E2  A0D8               	btfss	status,0,c
  5684  0010E4  D004               	goto	l2854
  5685  0010E6  D001               	goto	l2850
  5686                           
  5687                           ;doprnt.c: 1307: break;
  5688  0010E8  D002               	goto	l2854
  5689  0010EA                     l2850:
  5690  0010EA  2A48               	incf	sprintf@c,f,c
  5691  0010EC  D7E6               	goto	l2842
  5692  0010EE                     l2854:
  5693                           
  5694                           ;doprnt.c: 1381: if(width > c)
  5695  0010EE  0E80               	movlw	128
  5696  0010F0  BE48               	btfsc	sprintf@c,7,c
  5697  0010F2  0E7F               	movlw	127
  5698  0010F4  6E3C               	movwf	??_sprintf& (0+255),c
  5699  0010F6  5046               	movf	sprintf@width,w,c
  5700  0010F8  5C48               	subwf	sprintf@c,w,c
  5701  0010FA  5047               	movf	sprintf@width+1,w,c
  5702  0010FC  0A80               	xorlw	128
  5703  0010FE  583C               	subwfb	??_sprintf& (0+255),w,c
  5704  001100  B0D8               	btfsc	status,0,c
  5705  001102  D007               	goto	l2858
  5706                           
  5707                           ;doprnt.c: 1382: width -= c;
  5708  001104  5048               	movf	sprintf@c,w,c
  5709  001106  5E46               	subwf	sprintf@width,f,c
  5710  001108  0E00               	movlw	0
  5711  00110A  BE48               	btfsc	sprintf@c,7,c
  5712  00110C  0EFF               	movlw	255
  5713  00110E  5A47               	subwfb	sprintf@width+1,f,c
  5714  001110  D005               	goto	l2860
  5715  001112                     l2858:
  5716                           
  5717                           ;doprnt.c: 1383: else
  5718                           ;doprnt.c: 1384: width = 0;
  5719  001112  0E00               	movlw	0
  5720  001114  6E47               	movwf	sprintf@width+1,c
  5721  001116  0E00               	movlw	0
  5722  001118  6E46               	movwf	sprintf@width,c
  5723  00111A  D000               	goto	l2860
  5724  00111C                     l2860:
  5725                           
  5726                           ;doprnt.c: 1387: if(flag & 0x04) {
  5727  00111C  A442               	btfss	sprintf@flag,2,c
  5728  00111E  D015               	goto	l2870
  5729                           
  5730                           ;doprnt.c: 1415: if(width)
  5731  001120  5046               	movf	sprintf@width,w,c
  5732  001122  1047               	iorwf	sprintf@width+1,w,c
  5733  001124  B4D8               	btfsc	status,2,c
  5734  001126  D026               	goto	l466
  5735  001128                     l2864:
  5736                           
  5737                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5738  001128  C032  FFD9         	movff	sprintf@sp,fsr2l
  5739  00112C  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5740  001130  0E30               	movlw	48
  5741  001132  6EDF               	movwf	indf2,c
  5742  001134  4A32               	infsnz	sprintf@sp,f,c
  5743  001136  2A33               	incf	sprintf@sp+1,f,c
  5744                           
  5745                           ;doprnt.c: 1418: while(--width);
  5746  001138  0646               	decf	sprintf@width,f,c
  5747  00113A  A0D8               	btfss	status,0,c
  5748  00113C  0647               	decf	sprintf@width+1,f,c
  5749  00113E  5046               	movf	sprintf@width,w,c
  5750  001140  1047               	iorwf	sprintf@width+1,w,c
  5751  001142  B4D8               	btfsc	status,2,c
  5752  001144  D017               	goto	l466
  5753  001146  D7F0               	goto	l2864
  5754                           
  5755                           ;doprnt.c: 1420: } else
  5756  001148  D015               	goto	l466
  5757  00114A                     l2870:
  5758                           
  5759                           ;doprnt.c: 1422: {
  5760                           ;doprnt.c: 1424: if(width
  5761                           ;doprnt.c: 1428: )
  5762  00114A  5046               	movf	sprintf@width,w,c
  5763  00114C  1047               	iorwf	sprintf@width+1,w,c
  5764  00114E  B4D8               	btfsc	status,2,c
  5765  001150  D011               	goto	l466
  5766  001152                     l2872:
  5767                           
  5768                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5769  001152  C032  FFD9         	movff	sprintf@sp,fsr2l
  5770  001156  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5771  00115A  0E20               	movlw	32
  5772  00115C  6EDF               	movwf	indf2,c
  5773  00115E  4A32               	infsnz	sprintf@sp,f,c
  5774  001160  2A33               	incf	sprintf@sp+1,f,c
  5775                           
  5776                           ;doprnt.c: 1431: while(--width);
  5777  001162  0646               	decf	sprintf@width,f,c
  5778  001164  A0D8               	btfss	status,0,c
  5779  001166  0647               	decf	sprintf@width+1,f,c
  5780  001168  5046               	movf	sprintf@width,w,c
  5781  00116A  1047               	iorwf	sprintf@width+1,w,c
  5782  00116C  B4D8               	btfsc	status,2,c
  5783  00116E  D002               	goto	l466
  5784  001170  D7F0               	goto	l2872
  5785  001172  D000               	goto	l466
  5786  001174                     l466:
  5787                           
  5788                           ;doprnt.c: 1469: }
  5789                           ;doprnt.c: 1472: prec = c;
  5790  001174  C048  F045         	movff	sprintf@c,sprintf@prec
  5791                           
  5792                           ;doprnt.c: 1474: while(prec--) {
  5793  001178  D02A               	goto	l2884
  5794  00117A                     l2878:
  5795                           
  5796                           ;doprnt.c: 1478: {
  5797                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5798  00117A  5045               	movf	sprintf@prec,w,c
  5799  00117C  0D02               	mullw	2
  5800  00117E  0E01               	movlw	low _dpowers
  5801  001180  24F3               	addwf	prodl,w,c
  5802  001182  6EF6               	movwf	tblptrl,c
  5803  001184  0E0F               	movlw	high _dpowers
  5804  001186  20F4               	addwfc	prodh,w,c
  5805  001188  6EF7               	movwf	tblptrh,c
  5806  00118A                     	if	0	;There are less than 3 active tblptr bytes
  5807  00118A                     	endif
  5808  00118A  0009               	tblrd		*+
  5809  00118C  CFF5 F028          	movff	tablat,___lwdiv@divisor
  5810  001190  000A               	tblrd		*-
  5811  001192  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  5812  001196  C043  F026         	movff	sprintf@val,___lwdiv@dividend
  5813  00119A  C044  F027         	movff	sprintf@val+1,___lwdiv@dividend+1
  5814  00119E  ECF3  F00E         	call	___lwdiv	;wreg free
  5815  0011A2  C026  F02D         	movff	?___lwdiv,___lwmod@dividend
  5816  0011A6  C027  F02E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5817  0011AA  0E00               	movlw	0
  5818  0011AC  6E30               	movwf	___lwmod@divisor+1,c
  5819  0011AE  0E0A               	movlw	10
  5820  0011B0  6E2F               	movwf	___lwmod@divisor,c
  5821  0011B2  ECC4  F00F         	call	___lwmod	;wreg free
  5822  0011B6  502D               	movf	?___lwmod,w,c
  5823  0011B8  0F30               	addlw	48
  5824  0011BA  6E48               	movwf	sprintf@c,c
  5825                           
  5826                           ;doprnt.c: 1523: }
  5827                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5828  0011BC  C032  FFD9         	movff	sprintf@sp,fsr2l
  5829  0011C0  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5830  0011C4  C048  FFDF         	movff	sprintf@c,indf2
  5831  0011C8  4A32               	infsnz	sprintf@sp,f,c
  5832  0011CA  2A33               	incf	sprintf@sp+1,f,c
  5833  0011CC  D000               	goto	l2884
  5834  0011CE                     l2884:
  5835  0011CE  0645               	decf	sprintf@prec,f,c
  5836  0011D0  2845               	incf	sprintf@prec,w,c
  5837  0011D2  B4D8               	btfsc	status,2,c
  5838  0011D4  D002               	goto	l2886
  5839  0011D6  D7D1               	goto	l2878
  5840  0011D8  D000               	goto	l2886
  5841  0011DA                     l2886:
  5842  0011DA  C034  FFF6         	movff	sprintf@f,tblptrl
  5843  0011DE  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5844  0011E2  4A34               	infsnz	sprintf@f,f,c
  5845  0011E4  2A35               	incf	sprintf@f+1,f,c
  5846  0011E6                     	if	0	;tblptru may be non-zero
  5847  0011E6                     	endif
  5848  0011E6                     	if	0	;tblptru may be non-zero
  5849  0011E6                     	endif
  5850  0011E6  0008               	tblrd		*
  5851  0011E8  CFF5 F048          	movff	tablat,sprintf@c
  5852  0011EC  5048               	movf	sprintf@c,w,c
  5853  0011EE  B4D8               	btfsc	status,2,c
  5854  0011F0  D002               	goto	l2888
  5855  0011F2  D6DC               	goto	l2804
  5856  0011F4  D000               	goto	l2888
  5857  0011F6                     l2888:
  5858                           
  5859                           ;doprnt.c: 1538: *sp = 0;
  5860  0011F6  C032  FFD9         	movff	sprintf@sp,fsr2l
  5861  0011FA  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5862  0011FE  0E00               	movlw	0
  5863  001200  6EDF               	movwf	indf2,c
  5864  001202  0012               	return	
  5865                           
  5866                           ;doprnt.c: 1540: return 0;
  5867                           ;	Return value of _sprintf is never used
  5868  001204  0012               	return		;funcret
  5869  001206                     __end_of_sprintf:
  5870                           	opt stack 0
  5871                           tblptru	equ	0xFF8
  5872                           tblptrh	equ	0xFF7
  5873                           tblptrl	equ	0xFF6
  5874                           tablat	equ	0xFF5
  5875                           prodh	equ	0xFF4
  5876                           prodl	equ	0xFF3
  5877                           intcon	equ	0xFF2
  5878                           postinc0	equ	0xFEE
  5879                           wreg	equ	0xFE8
  5880                           indf1	equ	0xFE7
  5881                           postdec1	equ	0xFE5
  5882                           fsr1h	equ	0xFE2
  5883                           fsr1l	equ	0xFE1
  5884                           indf2	equ	0xFDF
  5885                           postinc2	equ	0xFDE
  5886                           postdec2	equ	0xFDD
  5887                           fsr2h	equ	0xFDA
  5888                           fsr2l	equ	0xFD9
  5889                           status	equ	0xFD8
  5890                           
  5891 ;; *************** function _isdigit *****************
  5892 ;; Defined at:
  5893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  c               1    wreg     unsigned char 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;  c               1    2[COMRAM] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;		None               void
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5910 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5911 ;;Total ram usage:        3 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_sprintf
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text39
  5921  0024DE                     __ptext39:
  5922                           	opt stack 0
  5923  0024DE                     _isdigit:
  5924                           	opt stack 27
  5925                           
  5926                           ;incstack = 0
  5927                           ;isdigit@c stored from wreg
  5928  0024DE  6E28               	movwf	isdigit@c,c
  5929  0024E0  0E00               	movlw	0
  5930  0024E2  6E27               	movwf	_isdigit$2152,c
  5931  0024E4  0E3A               	movlw	58
  5932  0024E6  6028               	cpfslt	isdigit@c,c
  5933  0024E8  D006               	goto	l2616
  5934  0024EA  0E2F               	movlw	47
  5935  0024EC  6428               	cpfsgt	isdigit@c,c
  5936  0024EE  D003               	goto	l2616
  5937  0024F0  0E01               	movlw	1
  5938  0024F2  6E27               	movwf	_isdigit$2152,c
  5939  0024F4  D000               	goto	l2616
  5940  0024F6                     l2616:
  5941  0024F6  C027  F026         	movff	_isdigit$2152,??_isdigit
  5942  0024FA  3026               	rrcf	??_isdigit,w,c
  5943  0024FC  0012               	return	
  5944  0024FE  0012               	return		;funcret
  5945  002500                     __end_of_isdigit:
  5946                           	opt stack 0
  5947                           tblptru	equ	0xFF8
  5948                           tblptrh	equ	0xFF7
  5949                           tblptrl	equ	0xFF6
  5950                           tablat	equ	0xFF5
  5951                           prodh	equ	0xFF4
  5952                           prodl	equ	0xFF3
  5953                           intcon	equ	0xFF2
  5954                           postinc0	equ	0xFEE
  5955                           wreg	equ	0xFE8
  5956                           indf1	equ	0xFE7
  5957                           postdec1	equ	0xFE5
  5958                           fsr1h	equ	0xFE2
  5959                           fsr1l	equ	0xFE1
  5960                           indf2	equ	0xFDF
  5961                           postinc2	equ	0xFDE
  5962                           postdec2	equ	0xFDD
  5963                           fsr2h	equ	0xFDA
  5964                           fsr2l	equ	0xFD9
  5965                           status	equ	0xFD8
  5966                           
  5967 ;; *************** function ___wmul *****************
  5968 ;; Defined at:
  5969 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  multiplier      2    0[COMRAM] unsigned int 
  5972 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  product         2    4[COMRAM] unsigned int 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2    0[COMRAM] unsigned int 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, prodl, prodh
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;Total ram usage:        6 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_sprintf
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text40
  5998  002492                     __ptext40:
  5999                           	opt stack 0
  6000  002492                     ___wmul:
  6001                           	opt stack 27
  6002                           
  6003                           ;incstack = 0
  6004  002492  5026               	movf	___wmul@multiplier,w,c
  6005  002494  0228               	mulwf	___wmul@multiplicand,c
  6006  002496  CFF3 F02A          	movff	prodl,___wmul@product
  6007  00249A  CFF4 F02B          	movff	prodh,___wmul@product+1
  6008  00249E  5026               	movf	___wmul@multiplier,w,c
  6009  0024A0  0229               	mulwf	___wmul@multiplicand+1,c
  6010  0024A2  50F3               	movf	prodl,w,c
  6011  0024A4  262B               	addwf	___wmul@product+1,f,c
  6012  0024A6  5027               	movf	___wmul@multiplier+1,w,c
  6013  0024A8  0228               	mulwf	___wmul@multiplicand,c
  6014  0024AA  50F3               	movf	prodl,w,c
  6015  0024AC  262B               	addwf	___wmul@product+1,f,c
  6016  0024AE  C02A  F026         	movff	___wmul@product,?___wmul
  6017  0024B2  C02B  F027         	movff	___wmul@product+1,?___wmul+1
  6018  0024B6  0012               	return	
  6019  0024B8  0012               	return		;funcret
  6020  0024BA                     __end_of___wmul:
  6021                           	opt stack 0
  6022                           tblptru	equ	0xFF8
  6023                           tblptrh	equ	0xFF7
  6024                           tblptrl	equ	0xFF6
  6025                           tablat	equ	0xFF5
  6026                           prodh	equ	0xFF4
  6027                           prodl	equ	0xFF3
  6028                           intcon	equ	0xFF2
  6029                           postinc0	equ	0xFEE
  6030                           wreg	equ	0xFE8
  6031                           indf1	equ	0xFE7
  6032                           postdec1	equ	0xFE5
  6033                           fsr1h	equ	0xFE2
  6034                           fsr1l	equ	0xFE1
  6035                           indf2	equ	0xFDF
  6036                           postinc2	equ	0xFDE
  6037                           postdec2	equ	0xFDD
  6038                           fsr2h	equ	0xFDA
  6039                           fsr2l	equ	0xFD9
  6040                           status	equ	0xFD8
  6041                           
  6042 ;; *************** function ___lwmod *****************
  6043 ;; Defined at:
  6044 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  dividend        2    7[COMRAM] unsigned int 
  6047 ;;  divisor         2    9[COMRAM] unsigned int 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  counter         1   11[COMRAM] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  2    7[COMRAM] unsigned int 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6062 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6063 ;;Total ram usage:        5 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_sprintf
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text41
  6073  001F88                     __ptext41:
  6074                           	opt stack 0
  6075  001F88                     ___lwmod:
  6076                           	opt stack 27
  6077                           
  6078                           ;incstack = 0
  6079  001F88  502F               	movf	___lwmod@divisor,w,c
  6080  001F8A  1030               	iorwf	___lwmod@divisor+1,w,c
  6081  001F8C  B4D8               	btfsc	status,2,c
  6082  001F8E  D01D               	goto	l1120
  6083  001F90  0E01               	movlw	1
  6084  001F92  6E31               	movwf	___lwmod@counter,c
  6085  001F94  D005               	goto	l2654
  6086  001F96                     l2652:
  6087  001F96  90D8               	bcf	status,0,c
  6088  001F98  362F               	rlcf	___lwmod@divisor,f,c
  6089  001F9A  3630               	rlcf	___lwmod@divisor+1,f,c
  6090  001F9C  2A31               	incf	___lwmod@counter,f,c
  6091  001F9E  D000               	goto	l2654
  6092  001FA0                     l2654:
  6093  001FA0  BE30               	btfsc	___lwmod@divisor+1,7,c
  6094  001FA2  D002               	goto	l2656
  6095  001FA4  D7F8               	goto	l2652
  6096  001FA6  D000               	goto	l2656
  6097  001FA8                     l2656:
  6098  001FA8  502F               	movf	___lwmod@divisor,w,c
  6099  001FAA  5C2D               	subwf	___lwmod@dividend,w,c
  6100  001FAC  5030               	movf	___lwmod@divisor+1,w,c
  6101  001FAE  582E               	subwfb	___lwmod@dividend+1,w,c
  6102  001FB0  A0D8               	btfss	status,0,c
  6103  001FB2  D005               	goto	l2660
  6104  001FB4  502F               	movf	___lwmod@divisor,w,c
  6105  001FB6  5E2D               	subwf	___lwmod@dividend,f,c
  6106  001FB8  5030               	movf	___lwmod@divisor+1,w,c
  6107  001FBA  5A2E               	subwfb	___lwmod@dividend+1,f,c
  6108  001FBC  D000               	goto	l2660
  6109  001FBE                     l2660:
  6110  001FBE  90D8               	bcf	status,0,c
  6111  001FC0  3230               	rrcf	___lwmod@divisor+1,f,c
  6112  001FC2  322F               	rrcf	___lwmod@divisor,f,c
  6113  001FC4  2E31               	decfsz	___lwmod@counter,f,c
  6114  001FC6  D7F0               	goto	l2656
  6115  001FC8  D000               	goto	l1120
  6116  001FCA                     l1120:
  6117  001FCA  C02D  F02D         	movff	___lwmod@dividend,?___lwmod
  6118  001FCE  C02E  F02E         	movff	___lwmod@dividend+1,?___lwmod+1
  6119  001FD2  0012               	return		;funcret
  6120  001FD4                     __end_of___lwmod:
  6121                           	opt stack 0
  6122                           tblptru	equ	0xFF8
  6123                           tblptrh	equ	0xFF7
  6124                           tblptrl	equ	0xFF6
  6125                           tablat	equ	0xFF5
  6126                           prodh	equ	0xFF4
  6127                           prodl	equ	0xFF3
  6128                           intcon	equ	0xFF2
  6129                           postinc0	equ	0xFEE
  6130                           wreg	equ	0xFE8
  6131                           indf1	equ	0xFE7
  6132                           postdec1	equ	0xFE5
  6133                           fsr1h	equ	0xFE2
  6134                           fsr1l	equ	0xFE1
  6135                           indf2	equ	0xFDF
  6136                           postinc2	equ	0xFDE
  6137                           postdec2	equ	0xFDD
  6138                           fsr2h	equ	0xFDA
  6139                           fsr2l	equ	0xFD9
  6140                           status	equ	0xFD8
  6141                           
  6142 ;; *************** function ___lwdiv *****************
  6143 ;; Defined at:
  6144 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  dividend        2    0[COMRAM] unsigned int 
  6147 ;;  divisor         2    2[COMRAM] unsigned int 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  quotient        2    4[COMRAM] unsigned int 
  6150 ;;  counter         1    6[COMRAM] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  2    0[COMRAM] unsigned int 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6161 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;Total ram usage:        7 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_sprintf
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text42
  6174  001DE6                     __ptext42:
  6175                           	opt stack 0
  6176  001DE6                     ___lwdiv:
  6177                           	opt stack 27
  6178                           
  6179                           ;incstack = 0
  6180  001DE6  0E00               	movlw	0
  6181  001DE8  6E2B               	movwf	___lwdiv@quotient+1,c
  6182  001DEA  0E00               	movlw	0
  6183  001DEC  6E2A               	movwf	___lwdiv@quotient,c
  6184  001DEE  5028               	movf	___lwdiv@divisor,w,c
  6185  001DF0  1029               	iorwf	___lwdiv@divisor+1,w,c
  6186  001DF2  B4D8               	btfsc	status,2,c
  6187  001DF4  D021               	goto	l1110
  6188  001DF6  0E01               	movlw	1
  6189  001DF8  6E2C               	movwf	___lwdiv@counter,c
  6190  001DFA  D005               	goto	l2634
  6191  001DFC                     l2632:
  6192  001DFC  90D8               	bcf	status,0,c
  6193  001DFE  3628               	rlcf	___lwdiv@divisor,f,c
  6194  001E00  3629               	rlcf	___lwdiv@divisor+1,f,c
  6195  001E02  2A2C               	incf	___lwdiv@counter,f,c
  6196  001E04  D000               	goto	l2634
  6197  001E06                     l2634:
  6198  001E06  BE29               	btfsc	___lwdiv@divisor+1,7,c
  6199  001E08  D002               	goto	l2636
  6200  001E0A  D7F8               	goto	l2632
  6201  001E0C  D000               	goto	l2636
  6202  001E0E                     l2636:
  6203  001E0E  90D8               	bcf	status,0,c
  6204  001E10  362A               	rlcf	___lwdiv@quotient,f,c
  6205  001E12  362B               	rlcf	___lwdiv@quotient+1,f,c
  6206  001E14  5028               	movf	___lwdiv@divisor,w,c
  6207  001E16  5C26               	subwf	___lwdiv@dividend,w,c
  6208  001E18  5029               	movf	___lwdiv@divisor+1,w,c
  6209  001E1A  5827               	subwfb	___lwdiv@dividend+1,w,c
  6210  001E1C  A0D8               	btfss	status,0,c
  6211  001E1E  D006               	goto	l2644
  6212  001E20  5028               	movf	___lwdiv@divisor,w,c
  6213  001E22  5E26               	subwf	___lwdiv@dividend,f,c
  6214  001E24  5029               	movf	___lwdiv@divisor+1,w,c
  6215  001E26  5A27               	subwfb	___lwdiv@dividend+1,f,c
  6216  001E28  802A               	bsf	___lwdiv@quotient,0,c
  6217  001E2A  D000               	goto	l2644
  6218  001E2C                     l2644:
  6219  001E2C  90D8               	bcf	status,0,c
  6220  001E2E  3229               	rrcf	___lwdiv@divisor+1,f,c
  6221  001E30  3228               	rrcf	___lwdiv@divisor,f,c
  6222  001E32  2E2C               	decfsz	___lwdiv@counter,f,c
  6223  001E34  D7EC               	goto	l2636
  6224  001E36  D000               	goto	l1110
  6225  001E38                     l1110:
  6226  001E38  C02A  F026         	movff	___lwdiv@quotient,?___lwdiv
  6227  001E3C  C02B  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6228  001E40  0012               	return		;funcret
  6229  001E42                     __end_of___lwdiv:
  6230                           	opt stack 0
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           postinc0	equ	0xFEE
  6239                           wreg	equ	0xFE8
  6240                           indf1	equ	0xFE7
  6241                           postdec1	equ	0xFE5
  6242                           fsr1h	equ	0xFE2
  6243                           fsr1l	equ	0xFE1
  6244                           indf2	equ	0xFDF
  6245                           postinc2	equ	0xFDE
  6246                           postdec2	equ	0xFDD
  6247                           fsr2h	equ	0xFDA
  6248                           fsr2l	equ	0xFD9
  6249                           status	equ	0xFD8
  6250                           
  6251 ;; *************** function _check_home_callback *****************
  6252 ;; Defined at:
  6253 ;;		line 457 in file "main.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;		None
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;		None               void
  6260 ;; Registers used:
  6261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;Total ram usage:        0 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    7
  6274 ;; This function calls:
  6275 ;;		_activity_home
  6276 ;;		_reset_home_callback
  6277 ;; This function is called by:
  6278 ;;		_main
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text43
  6283  002500                     __ptext43:
  6284                           	opt stack 0
  6285  002500                     _check_home_callback:
  6286                           	opt stack 23
  6287                           
  6288                           ;main.c: 459: if(activity != 0){
  6289                           
  6290                           ;incstack = 0
  6291  002500  5003               	movf	_activity,w,c
  6292  002502  1004               	iorwf	_activity+1,w,c
  6293  002504  B4D8               	btfsc	status,2,c
  6294  002506  0012               	return	
  6295                           
  6296                           ;main.c: 461: home_callback--;
  6297  002508  0609               	decf	_home_callback,f,c
  6298  00250A  A0D8               	btfss	status,0,c
  6299  00250C  060A               	decf	_home_callback+1,f,c
  6300                           
  6301                           ;main.c: 463: if(home_callback == 0){
  6302  00250E  5009               	movf	_home_callback,w,c
  6303  002510  100A               	iorwf	_home_callback+1,w,c
  6304  002512  A4D8               	btfss	status,2,c
  6305  002514  0012               	return	
  6306                           
  6307                           ;main.c: 465: reset_home_callback();
  6308  002516  ECE1  F012         	call	_reset_home_callback	;wreg free
  6309                           
  6310                           ;main.c: 467: activity_home();
  6311  00251A  EC34  F012         	call	_activity_home	;wreg free
  6312  00251E  0012               	return	
  6313  002520  0012               	return		;funcret
  6314  002522                     __end_of_check_home_callback:
  6315                           	opt stack 0
  6316                           tblptru	equ	0xFF8
  6317                           tblptrh	equ	0xFF7
  6318                           tblptrl	equ	0xFF6
  6319                           tablat	equ	0xFF5
  6320                           prodh	equ	0xFF4
  6321                           prodl	equ	0xFF3
  6322                           intcon	equ	0xFF2
  6323                           postinc0	equ	0xFEE
  6324                           wreg	equ	0xFE8
  6325                           indf1	equ	0xFE7
  6326                           postdec1	equ	0xFE5
  6327                           fsr1h	equ	0xFE2
  6328                           fsr1l	equ	0xFE1
  6329                           indf2	equ	0xFDF
  6330                           postinc2	equ	0xFDE
  6331                           postdec2	equ	0xFDD
  6332                           fsr2h	equ	0xFDA
  6333                           fsr2l	equ	0xFD9
  6334                           status	equ	0xFD8
  6335                           
  6336 ;; *************** function _reset_home_callback *****************
  6337 ;; Defined at:
  6338 ;;		line 94 in file "main.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;		None
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;		None               void
  6345 ;; Registers used:
  6346 ;;		None
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;Total ram usage:        0 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_button_A
  6362 ;;		_button_B
  6363 ;;		_button_C
  6364 ;;		_button_D
  6365 ;;		_button_asterisk
  6366 ;;		_button_hash
  6367 ;;		_button_number
  6368 ;;		_check_home_callback
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text44
  6373  0025C2                     __ptext44:
  6374                           	opt stack 0
  6375  0025C2                     _reset_home_callback:
  6376                           	opt stack 28
  6377                           
  6378                           ;main.c: 96: home_callback = home_callback_delay;
  6379                           
  6380                           ;incstack = 0
  6381  0025C2  C00B  F009         	movff	_home_callback_delay,_home_callback
  6382  0025C6  C00C  F00A         	movff	_home_callback_delay+1,_home_callback+1
  6383  0025CA  0012               	return		;funcret
  6384  0025CC                     __end_of_reset_home_callback:
  6385                           	opt stack 0
  6386                           tblptru	equ	0xFF8
  6387                           tblptrh	equ	0xFF7
  6388                           tblptrl	equ	0xFF6
  6389                           tablat	equ	0xFF5
  6390                           prodh	equ	0xFF4
  6391                           prodl	equ	0xFF3
  6392                           intcon	equ	0xFF2
  6393                           postinc0	equ	0xFEE
  6394                           wreg	equ	0xFE8
  6395                           indf1	equ	0xFE7
  6396                           postdec1	equ	0xFE5
  6397                           fsr1h	equ	0xFE2
  6398                           fsr1l	equ	0xFE1
  6399                           indf2	equ	0xFDF
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function _activity_home *****************
  6407 ;; Defined at:
  6408 ;;		line 171 in file "main.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;		None               void
  6415 ;; Registers used:
  6416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    6
  6429 ;; This function calls:
  6430 ;;		_lcd_init
  6431 ;;		_lcd_write
  6432 ;; This function is called by:
  6433 ;;		_button_B_submenu_activation
  6434 ;;		_button_D
  6435 ;;		_check_home_callback
  6436 ;;		_main
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text45
  6441  002468                     __ptext45:
  6442                           	opt stack 0
  6443  002468                     _activity_home:
  6444                           	opt stack 22
  6445                           
  6446                           ;main.c: 173: activity = 0;
  6447                           
  6448                           ;incstack = 0
  6449  002468  0E00               	movlw	0
  6450  00246A  6E04               	movwf	_activity+1,c
  6451  00246C  0E00               	movlw	0
  6452  00246E  6E03               	movwf	_activity,c
  6453                           
  6454                           ;main.c: 174: lcd_init();
  6455  002470  EC08  F00D         	call	_lcd_init	;wreg free
  6456                           
  6457                           ;main.c: 175: lcd_write(1,1,"X28");
  6458  002474  0E00               	movlw	0
  6459  002476  6E31               	movwf	lcd_write@column+1,c
  6460  002478  0E01               	movlw	1
  6461  00247A  6E30               	movwf	lcd_write@column,c
  6462  00247C  0E00               	movlw	0
  6463  00247E  6E33               	movwf	lcd_write@row+1,c
  6464  002480  0E01               	movlw	1
  6465  002482  6E32               	movwf	lcd_write@row,c
  6466  002484  0E90               	movlw	low STR_14
  6467  002486  6E34               	movwf	lcd_write@string,c
  6468  002488  0E0F               	movlw	high STR_14
  6469  00248A  6E35               	movwf	lcd_write@string+1,c
  6470  00248C  EC9F  F012         	call	_lcd_write	;wreg free
  6471  002490  0012               	return		;funcret
  6472  002492                     __end_of_activity_home:
  6473                           	opt stack 0
  6474                           tblptru	equ	0xFF8
  6475                           tblptrh	equ	0xFF7
  6476                           tblptrl	equ	0xFF6
  6477                           tablat	equ	0xFF5
  6478                           prodh	equ	0xFF4
  6479                           prodl	equ	0xFF3
  6480                           intcon	equ	0xFF2
  6481                           postinc0	equ	0xFEE
  6482                           wreg	equ	0xFE8
  6483                           indf1	equ	0xFE7
  6484                           postdec1	equ	0xFE5
  6485                           fsr1h	equ	0xFE2
  6486                           fsr1l	equ	0xFE1
  6487                           indf2	equ	0xFDF
  6488                           postinc2	equ	0xFDE
  6489                           postdec2	equ	0xFDD
  6490                           fsr2h	equ	0xFDA
  6491                           fsr2l	equ	0xFD9
  6492                           status	equ	0xFD8
  6493                           
  6494 ;; *************** function _lcd_write *****************
  6495 ;; Defined at:
  6496 ;;		line 53 in file "main.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  column          2   10[COMRAM] int 
  6499 ;;  row             2   12[COMRAM] int 
  6500 ;;  string          2   14[COMRAM] PTR unsigned char 
  6501 ;;		 -> STR_36(5), STR_35(8), STR_34(7), STR_33(6), 
  6502 ;;		 -> STR_32(8), STR_31(4), STR_30(5), STR_29(6), 
  6503 ;;		 -> STR_28(6), STR_27(3), STR_26(3), STR_25(8), 
  6504 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_21(2), 
  6505 ;;		 -> STR_20(7), STR_19(4), STR_18(6), STR_17(8), 
  6506 ;;		 -> STR_16(16), STR_14(4), STR_13(2), STR_12(2), 
  6507 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  6508 ;;		 -> STR_7(2), STR_6(2), buffer1(20), 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;		None               void
  6513 ;; Registers used:
  6514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6520 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6524 ;;Total ram usage:        6 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    5
  6527 ;; This function calls:
  6528 ;;		_lcd_gotoxy
  6529 ;;		_lcd_putrs
  6530 ;; This function is called by:
  6531 ;;		_home_clock_refresh
  6532 ;;		_home_state_refresh
  6533 ;;		_action_menu_selector_0
  6534 ;;		_action_menu_selector_1
  6535 ;;		_action_menu_selector_2
  6536 ;;		_action_menu_selector_3
  6537 ;;		_activity_home
  6538 ;;		_activity_pin
  6539 ;;		_activity_menu
  6540 ;;		_action_submenu_selector_0
  6541 ;;		_action_submenu_selector_1
  6542 ;;		_activity_submenu_activation
  6543 ;;		_activity_submenu_clock
  6544 ;;		_activity_submenu_pin
  6545 ;;		_activity_submenu_alarm
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text46
  6550  00253E                     __ptext46:
  6551                           	opt stack 0
  6552  00253E                     _lcd_write:
  6553                           	opt stack 21
  6554                           
  6555                           ;main.c: 54: lcd_gotoxy(column, row);
  6556                           
  6557                           ;incstack = 0
  6558  00253E  C032  F02A         	movff	lcd_write@row,lcd_gotoxy@y
  6559  002542  5030               	movf	lcd_write@column,w,c
  6560  002544  EC5D  F012         	call	_lcd_gotoxy
  6561                           
  6562                           ;main.c: 55: lcd_putrs(string);
  6563  002548  C034  F02E         	movff	lcd_write@string,lcd_putrs@ptr
  6564  00254C  C035  F02F         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  6565  002550  EC4C  F00F         	call	_lcd_putrs	;wreg free
  6566  002554  0012               	return		;funcret
  6567  002556                     __end_of_lcd_write:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           prodh	equ	0xFF4
  6574                           prodl	equ	0xFF3
  6575                           intcon	equ	0xFF2
  6576                           postinc0	equ	0xFEE
  6577                           wreg	equ	0xFE8
  6578                           indf1	equ	0xFE7
  6579                           postdec1	equ	0xFE5
  6580                           fsr1h	equ	0xFE2
  6581                           fsr1l	equ	0xFE1
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _lcd_putrs *****************
  6590 ;; Defined at:
  6591 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  6594 ;;		 -> STR_37(2), STR_36(5), STR_35(8), STR_34(7), 
  6595 ;;		 -> STR_33(6), STR_32(8), STR_31(4), STR_30(5), 
  6596 ;;		 -> STR_29(6), STR_28(6), STR_27(3), STR_26(3), 
  6597 ;;		 -> STR_25(8), STR_24(2), STR_23(2), STR_22(2), 
  6598 ;;		 -> STR_21(2), STR_20(7), STR_19(4), STR_18(6), 
  6599 ;;		 -> STR_17(8), STR_16(16), STR_14(4), STR_13(2), 
  6600 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  6601 ;;		 -> STR_8(2), STR_7(2), STR_6(2), buffer1(20), 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;		None               void
  6606 ;; Registers used:
  6607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;Total ram usage:        2 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    4
  6620 ;; This function calls:
  6621 ;;		_lcd_putc
  6622 ;; This function is called by:
  6623 ;;		_lcd_write
  6624 ;;		_button_number
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text47
  6629  001E98                     __ptext47:
  6630                           	opt stack 0
  6631  001E98                     _lcd_putrs:
  6632                           	opt stack 24
  6633                           
  6634                           ;unmc_lcd_216.c: 223: while(*ptr){
  6635                           
  6636                           ;incstack = 0
  6637  001E98  D015               	goto	l2422
  6638  001E9A                     l2418:
  6639                           
  6640                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  6641  001E9A  C02E  FFF6         	movff	lcd_putrs@ptr,tblptrl
  6642  001E9E  C02F  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  6643  001EA2  6AF8               	clrf	tblptru,c
  6644  001EA4  0E0E               	movlw	(high __ramtop+-1)
  6645  001EA6  64F7               	cpfsgt	tblptrh,c
  6646  001EA8  D003               	bra	u1297
  6647  001EAA  0008               	tblrd		*
  6648  001EAC  50F5               	movf	tablat,w,c
  6649  001EAE  D005               	bra	u1290
  6650  001EB0                     u1297:
  6651  001EB0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6652  001EB4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6653  001EB8  50EF               	movf	indf0,w,c
  6654  001EBA                     u1290:
  6655  001EBA  ECEA  F00F         	call	_lcd_putc
  6656  001EBE  4A2E               	infsnz	lcd_putrs@ptr,f,c
  6657  001EC0  2A2F               	incf	lcd_putrs@ptr+1,f,c
  6658  001EC2  D000               	goto	l2422
  6659  001EC4                     l2422:
  6660  001EC4  C02E  FFF6         	movff	lcd_putrs@ptr,tblptrl
  6661  001EC8  C02F  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  6662  001ECC  6AF8               	clrf	tblptru,c
  6663  001ECE  0E0E               	movlw	(high __ramtop+-1)
  6664  001ED0  64F7               	cpfsgt	tblptrh,c
  6665  001ED2  D003               	bra	u1307
  6666  001ED4  0008               	tblrd		*
  6667  001ED6  50F5               	movf	tablat,w,c
  6668  001ED8  D005               	bra	u1300
  6669  001EDA                     u1307:
  6670  001EDA  CFF6 FFE9          	movff	tblptrl,fsr0l
  6671  001EDE  CFF7 FFEA          	movff	tblptrh,fsr0h
  6672  001EE2  50EF               	movf	indf0,w,c
  6673  001EE4                     u1300:
  6674  001EE4  0900               	iorlw	0
  6675  001EE6  A4D8               	btfss	status,2,c
  6676  001EE8  D7D8               	goto	l2418
  6677  001EEA  0012               	return		;funcret
  6678  001EEC                     __end_of_lcd_putrs:
  6679                           	opt stack 0
  6680                           tblptru	equ	0xFF8
  6681                           tblptrh	equ	0xFF7
  6682                           tblptrl	equ	0xFF6
  6683                           tablat	equ	0xFF5
  6684                           prodh	equ	0xFF4
  6685                           prodl	equ	0xFF3
  6686                           intcon	equ	0xFF2
  6687                           indf0	equ	0xFEF
  6688                           postinc0	equ	0xFEE
  6689                           fsr0h	equ	0xFEA
  6690                           fsr0l	equ	0xFE9
  6691                           wreg	equ	0xFE8
  6692                           indf1	equ	0xFE7
  6693                           postdec1	equ	0xFE5
  6694                           fsr1h	equ	0xFE2
  6695                           fsr1l	equ	0xFE1
  6696                           indf2	equ	0xFDF
  6697                           postinc2	equ	0xFDE
  6698                           postdec2	equ	0xFDD
  6699                           fsr2h	equ	0xFDA
  6700                           fsr2l	equ	0xFD9
  6701                           status	equ	0xFD8
  6702                           
  6703 ;; *************** function _lcd_putc *****************
  6704 ;; Defined at:
  6705 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  c               1    wreg     unsigned char 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  c               1    7[COMRAM] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;		None               void
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;Total ram usage:        1 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    3
  6726 ;; This function calls:
  6727 ;;		_lcd_gotoxy
  6728 ;;		_lcd_send_byte
  6729 ;; This function is called by:
  6730 ;;		_lcd_putrs
  6731 ;;		_lcd_puts
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text48
  6736  001FD4                     __ptext48:
  6737                           	opt stack 0
  6738  001FD4                     _lcd_putc:
  6739                           	opt stack 24
  6740                           
  6741                           ;incstack = 0
  6742                           ;lcd_putc@c stored from wreg
  6743  001FD4  6E2D               	movwf	lcd_putc@c,c
  6744                           
  6745                           ;unmc_lcd_216.c: 173: switch(c){
  6746  001FD6  D018               	goto	l2414
  6747  001FD8                     l2404:
  6748                           
  6749                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  6750  001FD8  0E01               	movlw	1
  6751  001FDA  6E28               	movwf	lcd_send_byte@n,c
  6752  001FDC  0E00               	movlw	0
  6753  001FDE  ECED  F011         	call	_lcd_send_byte
  6754                           
  6755                           ;unmc_lcd_216.c: 176: break;
  6756  001FE2  0012               	return	
  6757  001FE4                     l2406:
  6758                           
  6759                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  6760  001FE4  0E02               	movlw	2
  6761  001FE6  6E2A               	movwf	lcd_gotoxy@y,c
  6762  001FE8  0E01               	movlw	1
  6763  001FEA  EC5D  F012         	call	_lcd_gotoxy
  6764                           
  6765                           ;unmc_lcd_216.c: 179: break;
  6766  001FEE  0012               	return	
  6767  001FF0                     l2408:
  6768                           
  6769                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  6770  001FF0  0E10               	movlw	16
  6771  001FF2  6E28               	movwf	lcd_send_byte@n,c
  6772  001FF4  0E00               	movlw	0
  6773  001FF6  ECED  F011         	call	_lcd_send_byte
  6774                           
  6775                           ;unmc_lcd_216.c: 182: break;
  6776  001FFA  0012               	return	
  6777  001FFC                     l2410:
  6778                           
  6779                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  6780  001FFC  C02D  F028         	movff	lcd_putc@c,lcd_send_byte@n
  6781  002000  0E01               	movlw	1
  6782  002002  ECED  F011         	call	_lcd_send_byte
  6783                           
  6784                           ;unmc_lcd_216.c: 186: }
  6785                           
  6786                           ;unmc_lcd_216.c: 185: break;
  6787  002006  0012               	return	
  6788  002008                     l2414:
  6789  002008  502D               	movf	lcd_putc@c,w,c
  6790                           
  6791                           ; Switch size 1, requested type "space"
  6792                           ; Number of cases is 3, Range of values is 8 to 12
  6793                           ; switch strategies available:
  6794                           ; Name         Instructions Cycles
  6795                           ; simple_byte           10     6 (average)
  6796                           ;	Chosen strategy is simple_byte
  6797  00200A  0A08               	xorlw	8	; case 8
  6798  00200C  B4D8               	btfsc	status,2,c
  6799  00200E  D7F0               	goto	l2408
  6800  002010  0A02               	xorlw	2	; case 10
  6801  002012  B4D8               	btfsc	status,2,c
  6802  002014  D7E7               	goto	l2406
  6803  002016  0A06               	xorlw	6	; case 12
  6804  002018  B4D8               	btfsc	status,2,c
  6805  00201A  D7DE               	goto	l2404
  6806  00201C  D7EF               	goto	l2410
  6807  00201E  0012               	return		;funcret
  6808  002020                     __end_of_lcd_putc:
  6809                           	opt stack 0
  6810                           tblptru	equ	0xFF8
  6811                           tblptrh	equ	0xFF7
  6812                           tblptrl	equ	0xFF6
  6813                           tablat	equ	0xFF5
  6814                           prodh	equ	0xFF4
  6815                           prodl	equ	0xFF3
  6816                           intcon	equ	0xFF2
  6817                           indf0	equ	0xFEF
  6818                           postinc0	equ	0xFEE
  6819                           fsr0h	equ	0xFEA
  6820                           fsr0l	equ	0xFE9
  6821                           wreg	equ	0xFE8
  6822                           indf1	equ	0xFE7
  6823                           postdec1	equ	0xFE5
  6824                           fsr1h	equ	0xFE2
  6825                           fsr1l	equ	0xFE1
  6826                           indf2	equ	0xFDF
  6827                           postinc2	equ	0xFDE
  6828                           postdec2	equ	0xFDD
  6829                           fsr2h	equ	0xFDA
  6830                           fsr2l	equ	0xFD9
  6831                           status	equ	0xFD8
  6832                           
  6833 ;; *************** function _lcd_gotoxy *****************
  6834 ;; Defined at:
  6835 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  x               1    wreg     unsigned char 
  6838 ;;  y               1    4[COMRAM] unsigned char 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  x               1    5[COMRAM] unsigned char 
  6841 ;;  address         1    6[COMRAM] unsigned char 
  6842 ;; Return value:  Size  Location     Type
  6843 ;;		None               void
  6844 ;; Registers used:
  6845 ;;		wreg, status,2, status,0, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6851 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6855 ;;Total ram usage:        3 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; Hardware stack levels required when called:    2
  6858 ;; This function calls:
  6859 ;;		_lcd_send_byte
  6860 ;; This function is called by:
  6861 ;;		_lcd_write
  6862 ;;		_activity_pin
  6863 ;;		_lcd_putc
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text49
  6868  0024BA                     __ptext49:
  6869                           	opt stack 0
  6870  0024BA                     _lcd_gotoxy:
  6871                           	opt stack 24
  6872                           
  6873                           ;incstack = 0
  6874                           ;lcd_gotoxy@x stored from wreg
  6875  0024BA  6E2B               	movwf	lcd_gotoxy@x,c
  6876                           
  6877                           ;unmc_lcd_216.c: 159: int8 address;
  6878                           ;unmc_lcd_216.c: 161: if(y != 1)
  6879  0024BC  042A               	decf	lcd_gotoxy@y,w,c
  6880  0024BE  B4D8               	btfsc	status,2,c
  6881  0024C0  D002               	goto	l2396
  6882                           
  6883                           ;unmc_lcd_216.c: 162: address = 0x40;
  6884  0024C2  0E40               	movlw	64
  6885  0024C4  D001               	goto	L2
  6886  0024C6                     l2396:
  6887                           
  6888                           ;unmc_lcd_216.c: 163: else
  6889                           ;unmc_lcd_216.c: 164: address=0;
  6890  0024C6  0E00               	movlw	0
  6891  0024C8                     L2:
  6892  0024C8  6E2C               	movwf	lcd_gotoxy@address,c
  6893  0024CA  D000               	goto	l2398
  6894  0024CC                     l2398:
  6895                           
  6896                           ;unmc_lcd_216.c: 166: address += x-1;
  6897  0024CC  042B               	decf	lcd_gotoxy@x,w,c
  6898  0024CE  262C               	addwf	lcd_gotoxy@address,f,c
  6899                           
  6900                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  6901  0024D0  502C               	movf	lcd_gotoxy@address,w,c
  6902  0024D2  0980               	iorlw	128
  6903  0024D4  6E28               	movwf	lcd_send_byte@n,c
  6904  0024D6  0E00               	movlw	0
  6905  0024D8  ECED  F011         	call	_lcd_send_byte
  6906  0024DC  0012               	return		;funcret
  6907  0024DE                     __end_of_lcd_gotoxy:
  6908                           	opt stack 0
  6909                           tblptru	equ	0xFF8
  6910                           tblptrh	equ	0xFF7
  6911                           tblptrl	equ	0xFF6
  6912                           tablat	equ	0xFF5
  6913                           prodh	equ	0xFF4
  6914                           prodl	equ	0xFF3
  6915                           intcon	equ	0xFF2
  6916                           indf0	equ	0xFEF
  6917                           postinc0	equ	0xFEE
  6918                           fsr0h	equ	0xFEA
  6919                           fsr0l	equ	0xFE9
  6920                           wreg	equ	0xFE8
  6921                           indf1	equ	0xFE7
  6922                           postdec1	equ	0xFE5
  6923                           fsr1h	equ	0xFE2
  6924                           fsr1l	equ	0xFE1
  6925                           indf2	equ	0xFDF
  6926                           postinc2	equ	0xFDE
  6927                           postdec2	equ	0xFDD
  6928                           fsr2h	equ	0xFDA
  6929                           fsr2l	equ	0xFD9
  6930                           status	equ	0xFD8
  6931                           
  6932 ;; *************** function _lcd_init *****************
  6933 ;; Defined at:
  6934 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;		None
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  i               1    4[COMRAM] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;		None               void
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6952 ;;Total ram usage:        1 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    2
  6955 ;; This function calls:
  6956 ;;		_Delay1KTCYx
  6957 ;;		_lcd_send_byte
  6958 ;;		_lcd_send_nibble
  6959 ;; This function is called by:
  6960 ;;		_setup
  6961 ;;		_activity_home
  6962 ;;		_activity_pin
  6963 ;;		_activity_menu
  6964 ;;		_activity_submenu_activation
  6965 ;;		_activity_submenu_clock
  6966 ;;		_activity_submenu_pin
  6967 ;;		_activity_submenu_alarm
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text50
  6972  001A10                     __ptext50:
  6973                           	opt stack 0
  6974  001A10                     _lcd_init:
  6975                           	opt stack 27
  6976                           
  6977                           ;unmc_lcd_216.c: 120: int8 i;
  6978                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  6979                           
  6980                           ;incstack = 0
  6981  001A10  9693               	bcf	3987,3,c	;volatile
  6982                           
  6983                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  6984  001A12  9493               	bcf	3987,2,c	;volatile
  6985                           
  6986                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  6987  001A14  968A               	bcf	3978,3,c	;volatile
  6988                           
  6989                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  6990  001A16  948A               	bcf	3978,2,c	;volatile
  6991                           
  6992                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  6993  001A18  9893               	bcf	3987,4,c	;volatile
  6994                           
  6995                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  6996  001A1A  9A93               	bcf	3987,5,c	;volatile
  6997                           
  6998                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  6999  001A1C  9C93               	bcf	3987,6,c	;volatile
  7000                           
  7001                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  7002  001A1E  9E93               	bcf	3987,7,c	;volatile
  7003                           
  7004                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  7005  001A20  0E0A               	movlw	10
  7006  001A22  ECC7  F012         	call	_Delay1KTCYx
  7007                           
  7008                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  7009  001A26  0E0A               	movlw	10
  7010  001A28  ECC7  F012         	call	_Delay1KTCYx
  7011                           
  7012                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  7013  001A2C  0E0A               	movlw	10
  7014  001A2E  ECC7  F012         	call	_Delay1KTCYx
  7015                           
  7016                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  7017  001A32  0E00               	movlw	0
  7018  001A34  6E2A               	movwf	lcd_init@i,c
  7019  001A36                     l2438:
  7020  001A36  0E02               	movlw	2
  7021  001A38  642A               	cpfsgt	lcd_init@i,c
  7022  001A3A  D001               	goto	l2442
  7023  001A3C  D008               	goto	l2448
  7024  001A3E                     l2442:
  7025                           
  7026                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  7027  001A3E  0E03               	movlw	3
  7028  001A40  EC48  F00D         	call	_lcd_send_nibble
  7029                           
  7030                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  7031  001A44  0E0A               	movlw	10
  7032  001A46  ECC7  F012         	call	_Delay1KTCYx
  7033  001A4A  2A2A               	incf	lcd_init@i,f,c
  7034  001A4C  D7F4               	goto	l2438
  7035  001A4E                     l2448:
  7036                           
  7037                           ;unmc_lcd_216.c: 146: }
  7038                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  7039  001A4E  0E02               	movlw	2
  7040  001A50  EC48  F00D         	call	_lcd_send_nibble
  7041                           
  7042                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  7043  001A54  0E00               	movlw	0
  7044  001A56  6E2A               	movwf	lcd_init@i,c
  7045  001A58  0E03               	movlw	3
  7046  001A5A  642A               	cpfsgt	lcd_init@i,c
  7047  001A5C  D002               	goto	l2456
  7048  001A5E  0012               	return	
  7049  001A60  0012               	return	
  7050  001A62                     l2456:
  7051                           
  7052                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  7053  001A62  502A               	movf	lcd_init@i,w,c
  7054  001A64  0D01               	mullw	1
  7055  001A66  0E0B               	movlw	low _LCD_INIT_STRING
  7056  001A68  24F3               	addwf	prodl,w,c
  7057  001A6A  6EF6               	movwf	tblptrl,c
  7058  001A6C  0E0F               	movlw	high _LCD_INIT_STRING
  7059  001A6E  20F4               	addwfc	prodh,w,c
  7060  001A70  6EF7               	movwf	tblptrh,c
  7061  001A72                     	if	0	;There are less than 3 active tblptr bytes
  7062  001A72                     	endif
  7063  001A72  0008               	tblrd		*
  7064  001A74  CFF5 F028          	movff	tablat,lcd_send_byte@n
  7065  001A78  0E00               	movlw	0
  7066  001A7A  ECED  F011         	call	_lcd_send_byte
  7067                           
  7068                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  7069  001A7E  0E0A               	movlw	10
  7070  001A80  ECC7  F012         	call	_Delay1KTCYx
  7071  001A84  2A2A               	incf	lcd_init@i,f,c
  7072  001A86  0E03               	movlw	3
  7073  001A88  642A               	cpfsgt	lcd_init@i,c
  7074  001A8A  D7EB               	goto	l2456
  7075  001A8C  0012               	return	
  7076  001A8E  0012               	return		;funcret
  7077  001A90                     __end_of_lcd_init:
  7078                           	opt stack 0
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           prodh	equ	0xFF4
  7084                           prodl	equ	0xFF3
  7085                           intcon	equ	0xFF2
  7086                           indf0	equ	0xFEF
  7087                           postinc0	equ	0xFEE
  7088                           fsr0h	equ	0xFEA
  7089                           fsr0l	equ	0xFE9
  7090                           wreg	equ	0xFE8
  7091                           indf1	equ	0xFE7
  7092                           postdec1	equ	0xFE5
  7093                           fsr1h	equ	0xFE2
  7094                           fsr1l	equ	0xFE1
  7095                           indf2	equ	0xFDF
  7096                           postinc2	equ	0xFDE
  7097                           postdec2	equ	0xFDD
  7098                           fsr2h	equ	0xFDA
  7099                           fsr2l	equ	0xFD9
  7100                           status	equ	0xFD8
  7101                           
  7102 ;; *************** function _lcd_send_byte *****************
  7103 ;; Defined at:
  7104 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  address         1    wreg     unsigned char 
  7107 ;;  n               1    2[COMRAM] unsigned char 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  address         1    3[COMRAM] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;		None               void
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7119 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;Total ram usage:        2 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:    1
  7126 ;; This function calls:
  7127 ;;		_Delay100TCYx
  7128 ;;		_lcd_send_nibble
  7129 ;; This function is called by:
  7130 ;;		_lcd_init
  7131 ;;		_lcd_gotoxy
  7132 ;;		_lcd_putc
  7133 ;;		_lcd_comand
  7134 ;;		_lcd_setcursor_vb
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text51
  7139  0023DA                     __ptext51:
  7140                           	opt stack 0
  7141  0023DA                     _lcd_send_byte:
  7142                           	opt stack 27
  7143                           
  7144                           ;incstack = 0
  7145                           ;lcd_send_byte@address stored from wreg
  7146  0023DA  6E29               	movwf	lcd_send_byte@address,c
  7147                           
  7148                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  7149  0023DC  968A               	bcf	3978,3,c	;volatile
  7150                           
  7151                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  7152  0023DE  0E02               	movlw	2
  7153  0023E0  ECBE  F012         	call	_Delay100TCYx
  7154                           
  7155                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  7156  0023E4  9893               	bcf	3987,4,c	;volatile
  7157                           
  7158                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  7159  0023E6  9A93               	bcf	3987,5,c	;volatile
  7160                           
  7161                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  7162  0023E8  9C93               	bcf	3987,6,c	;volatile
  7163                           
  7164                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  7165  0023EA  9E93               	bcf	3987,7,c	;volatile
  7166                           
  7167                           ;unmc_lcd_216.c: 101: if(address)
  7168  0023EC  5029               	movf	lcd_send_byte@address,w,c
  7169  0023EE  B4D8               	btfsc	status,2,c
  7170  0023F0  D002               	goto	l387
  7171                           
  7172                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  7173  0023F2  868A               	bsf	3978,3,c	;volatile
  7174  0023F4  D001               	goto	l388
  7175  0023F6                     l387:
  7176                           
  7177                           ;unmc_lcd_216.c: 103: else
  7178                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  7179  0023F6  968A               	bcf	3978,3,c	;volatile
  7180  0023F8                     l388:
  7181                           
  7182                           ;unmc_lcd_216.c: 106: __nop();
  7183  0023F8  F000               	nop	
  7184                           
  7185                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  7186  0023FA  3828               	swapf	lcd_send_byte@n,w,c
  7187  0023FC  0B0F               	andlw	15
  7188  0023FE  EC48  F00D         	call	_lcd_send_nibble
  7189                           
  7190                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  7191  002402  5028               	movf	lcd_send_byte@n,w,c
  7192  002404  0B0F               	andlw	15
  7193  002406  EC48  F00D         	call	_lcd_send_nibble
  7194  00240A  0012               	return		;funcret
  7195  00240C                     __end_of_lcd_send_byte:
  7196                           	opt stack 0
  7197                           tblptru	equ	0xFF8
  7198                           tblptrh	equ	0xFF7
  7199                           tblptrl	equ	0xFF6
  7200                           tablat	equ	0xFF5
  7201                           prodh	equ	0xFF4
  7202                           prodl	equ	0xFF3
  7203                           intcon	equ	0xFF2
  7204                           indf0	equ	0xFEF
  7205                           postinc0	equ	0xFEE
  7206                           fsr0h	equ	0xFEA
  7207                           fsr0l	equ	0xFE9
  7208                           wreg	equ	0xFE8
  7209                           indf1	equ	0xFE7
  7210                           postdec1	equ	0xFE5
  7211                           fsr1h	equ	0xFE2
  7212                           fsr1l	equ	0xFE1
  7213                           indf2	equ	0xFDF
  7214                           postinc2	equ	0xFDE
  7215                           postdec2	equ	0xFDD
  7216                           fsr2h	equ	0xFDA
  7217                           fsr2l	equ	0xFD9
  7218                           status	equ	0xFD8
  7219                           
  7220 ;; *************** function _lcd_send_nibble *****************
  7221 ;; Defined at:
  7222 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  nibble          1    wreg     unsigned char 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  nibble          1    1[COMRAM] unsigned char 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;		None               void
  7229 ;; Registers used:
  7230 ;;		wreg, status,2, status,0
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;Total ram usage:        2 bytes
  7241 ;; Hardware stack levels used:    1
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_lcd_send_byte
  7246 ;;		_lcd_init
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text52
  7251  001A90                     __ptext52:
  7252                           	opt stack 0
  7253  001A90                     _lcd_send_nibble:
  7254                           	opt stack 28
  7255                           
  7256                           ;incstack = 0
  7257                           ;lcd_send_nibble@nibble stored from wreg
  7258  001A90  6E27               	movwf	lcd_send_nibble@nibble,c
  7259                           
  7260                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  7261  001A92  A027               	btfss	lcd_send_nibble@nibble,0,c
  7262  001A94  D003               	goto	u1190
  7263  001A96  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  7264  001A98  2A26               	incf	??_lcd_send_nibble& (0+255),f,c
  7265  001A9A  D001               	goto	u1208
  7266  001A9C                     u1190:
  7267  001A9C  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  7268  001A9E                     u1208:
  7269  001A9E  3A26               	swapf	??_lcd_send_nibble,f,c
  7270  001AA0  508A               	movf	3978,w,c	;volatile
  7271  001AA2  1826               	xorwf	??_lcd_send_nibble,w,c
  7272  001AA4  0BEF               	andlw	-17
  7273  001AA6  1826               	xorwf	??_lcd_send_nibble,w,c
  7274  001AA8  6E8A               	movwf	3978,c	;volatile
  7275                           
  7276                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  7277  001AAA  A227               	btfss	lcd_send_nibble@nibble,1,c
  7278  001AAC  D003               	goto	u1210
  7279  001AAE  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  7280  001AB0  2A26               	incf	??_lcd_send_nibble& (0+255),f,c
  7281  001AB2  D001               	goto	u1228
  7282  001AB4                     u1210:
  7283  001AB4  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  7284  001AB6                     u1228:
  7285  001AB6  3A26               	swapf	??_lcd_send_nibble,f,c
  7286  001AB8  4626               	rlncf	??_lcd_send_nibble,f,c
  7287  001ABA  508A               	movf	3978,w,c	;volatile
  7288  001ABC  1826               	xorwf	??_lcd_send_nibble,w,c
  7289  001ABE  0BDF               	andlw	-33
  7290  001AC0  1826               	xorwf	??_lcd_send_nibble,w,c
  7291  001AC2  6E8A               	movwf	3978,c	;volatile
  7292                           
  7293                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  7294  001AC4  A427               	btfss	lcd_send_nibble@nibble,2,c
  7295  001AC6  D003               	goto	u1230
  7296  001AC8  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  7297  001ACA  2A26               	incf	??_lcd_send_nibble& (0+255),f,c
  7298  001ACC  D001               	goto	u1248
  7299  001ACE                     u1230:
  7300  001ACE  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  7301  001AD0                     u1248:
  7302  001AD0  3A26               	swapf	??_lcd_send_nibble,f,c
  7303  001AD2  4626               	rlncf	??_lcd_send_nibble,f,c
  7304  001AD4  4626               	rlncf	??_lcd_send_nibble,f,c
  7305  001AD6  508A               	movf	3978,w,c	;volatile
  7306  001AD8  1826               	xorwf	??_lcd_send_nibble,w,c
  7307  001ADA  0BBF               	andlw	-65
  7308  001ADC  1826               	xorwf	??_lcd_send_nibble,w,c
  7309  001ADE  6E8A               	movwf	3978,c	;volatile
  7310                           
  7311                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  7312  001AE0  A627               	btfss	lcd_send_nibble@nibble,3,c
  7313  001AE2  D003               	goto	u1250
  7314  001AE4  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  7315  001AE6  2A26               	incf	??_lcd_send_nibble& (0+255),f,c
  7316  001AE8  D001               	goto	u1268
  7317  001AEA                     u1250:
  7318  001AEA  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  7319  001AEC                     u1268:
  7320  001AEC  3226               	rrcf	??_lcd_send_nibble,f,c
  7321  001AEE  3226               	rrcf	??_lcd_send_nibble,f,c
  7322  001AF0  508A               	movf	3978,w,c	;volatile
  7323  001AF2  1826               	xorwf	??_lcd_send_nibble,w,c
  7324  001AF4  0B7F               	andlw	-129
  7325  001AF6  1826               	xorwf	??_lcd_send_nibble,w,c
  7326  001AF8  6E8A               	movwf	3978,c	;volatile
  7327                           
  7328                           ;unmc_lcd_216.c: 32: __nop();
  7329  001AFA  F000               	nop	
  7330                           
  7331                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  7332  001AFC  848A               	bsf	3978,2,c	;volatile
  7333                           
  7334                           ;unmc_lcd_216.c: 34: __nop();__nop();
  7335  001AFE  F000               	nop	
  7336  001B00  F000               	nop	
  7337                           
  7338                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  7339  001B02  948A               	bcf	3978,2,c	;volatile
  7340  001B04  0012               	return		;funcret
  7341  001B06                     __end_of_lcd_send_nibble:
  7342                           	opt stack 0
  7343                           tblptru	equ	0xFF8
  7344                           tblptrh	equ	0xFF7
  7345                           tblptrl	equ	0xFF6
  7346                           tablat	equ	0xFF5
  7347                           prodh	equ	0xFF4
  7348                           prodl	equ	0xFF3
  7349                           intcon	equ	0xFF2
  7350                           indf0	equ	0xFEF
  7351                           postinc0	equ	0xFEE
  7352                           fsr0h	equ	0xFEA
  7353                           fsr0l	equ	0xFE9
  7354                           wreg	equ	0xFE8
  7355                           indf1	equ	0xFE7
  7356                           postdec1	equ	0xFE5
  7357                           fsr1h	equ	0xFE2
  7358                           fsr1l	equ	0xFE1
  7359                           indf2	equ	0xFDF
  7360                           postinc2	equ	0xFDE
  7361                           postdec2	equ	0xFDD
  7362                           fsr2h	equ	0xFDA
  7363                           fsr2l	equ	0xFD9
  7364                           status	equ	0xFD8
  7365                           
  7366 ;; *************** function _Delay100TCYx *****************
  7367 ;; Defined at:
  7368 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  unit            1    wreg     unsigned char 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  unit            1    0[COMRAM] unsigned char 
  7373 ;; Return value:  Size  Location     Type
  7374 ;;		None               void
  7375 ;; Registers used:
  7376 ;;		wreg
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7385 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7386 ;;Total ram usage:        1 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		_lcd_send_byte
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text53
  7396  00257C                     __ptext53:
  7397                           	opt stack 0
  7398  00257C                     _Delay100TCYx:
  7399                           	opt stack 27
  7400                           
  7401                           ;incstack = 0
  7402                           ;Delay100TCYx@unit stored from wreg
  7403  00257C  6E26               	movwf	Delay100TCYx@unit,c
  7404  00257E  0E21               	movlw	33
  7405  002580                     u2387:
  7406  002580  2EE8               	decfsz	wreg,f,c
  7407  002582  D7FE               	goto	u2387
  7408  002584  F000               	nop	
  7409  002586  2E26               	decfsz	Delay100TCYx@unit,f,c
  7410  002588  D7FA               	goto	l2370
  7411  00258A  0012               	return	
  7412  00258C  0012               	return		;funcret
  7413  00258E                     __end_of_Delay100TCYx:
  7414                           	opt stack 0
  7415                           tblptru	equ	0xFF8
  7416                           tblptrh	equ	0xFF7
  7417                           tblptrl	equ	0xFF6
  7418                           tablat	equ	0xFF5
  7419                           prodh	equ	0xFF4
  7420                           prodl	equ	0xFF3
  7421                           intcon	equ	0xFF2
  7422                           indf0	equ	0xFEF
  7423                           postinc0	equ	0xFEE
  7424                           fsr0h	equ	0xFEA
  7425                           fsr0l	equ	0xFE9
  7426                           wreg	equ	0xFE8
  7427                           indf1	equ	0xFE7
  7428                           postdec1	equ	0xFE5
  7429                           fsr1h	equ	0xFE2
  7430                           fsr1l	equ	0xFE1
  7431                           indf2	equ	0xFDF
  7432                           postinc2	equ	0xFDE
  7433                           postdec2	equ	0xFDD
  7434                           fsr2h	equ	0xFDA
  7435                           fsr2l	equ	0xFD9
  7436                           status	equ	0xFD8
  7437                           
  7438 ;; *************** function _Delay1KTCYx *****************
  7439 ;; Defined at:
  7440 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  unit            1    wreg     unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  unit            1    0[COMRAM] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;		None               void
  7447 ;; Registers used:
  7448 ;;		wreg
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;Total ram usage:        1 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_lcd_init
  7464 ;;		_DelayPORXLCD
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text54
  7469  00258E                     __ptext54:
  7470                           	opt stack 0
  7471  00258E                     _Delay1KTCYx:
  7472                           	opt stack 28
  7473                           
  7474                           ;incstack = 0
  7475                           ;Delay1KTCYx@unit stored from wreg
  7476  00258E  6E26               	movwf	Delay1KTCYx@unit,c
  7477  002590  0EFA               	movlw	250
  7478  002592                     u2397:
  7479  002592  F000               	nop	
  7480  002594  2EE8               	decfsz	wreg,f,c
  7481  002596  D7FD               	goto	u2397
  7482  002598  2E26               	decfsz	Delay1KTCYx@unit,f,c
  7483  00259A  D7FA               	goto	l2424
  7484  00259C  0012               	return	
  7485  00259E  0012               	return		;funcret
  7486  0025A0                     __end_of_Delay1KTCYx:
  7487                           	opt stack 0
  7488                           tblptru	equ	0xFF8
  7489                           tblptrh	equ	0xFF7
  7490                           tblptrl	equ	0xFF6
  7491                           tablat	equ	0xFF5
  7492                           prodh	equ	0xFF4
  7493                           prodl	equ	0xFF3
  7494                           intcon	equ	0xFF2
  7495                           indf0	equ	0xFEF
  7496                           postinc0	equ	0xFEE
  7497                           fsr0h	equ	0xFEA
  7498                           fsr0l	equ	0xFE9
  7499                           wreg	equ	0xFE8
  7500                           indf1	equ	0xFE7
  7501                           postdec1	equ	0xFE5
  7502                           fsr1h	equ	0xFE2
  7503                           fsr1l	equ	0xFE1
  7504                           indf2	equ	0xFDF
  7505                           postinc2	equ	0xFDE
  7506                           postdec2	equ	0xFDD
  7507                           fsr2h	equ	0xFDA
  7508                           fsr2l	equ	0xFD9
  7509                           status	equ	0xFD8
  7510                           
  7511 ;; *************** function _Read_RTC *****************
  7512 ;; Defined at:
  7513 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;		None               void
  7520 ;; Registers used:
  7521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7531 ;;Total ram usage:        0 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    1
  7534 ;; This function calls:
  7535 ;;		_RtccReadDate
  7536 ;;		_RtccReadTime
  7537 ;; This function is called by:
  7538 ;;		_main
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text55
  7543  0016FA                     __ptext55:
  7544                           	opt stack 0
  7545  0016FA                     _Read_RTC:
  7546                           	opt stack 29
  7547                           
  7548                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  7549                           
  7550                           ;incstack = 0
  7551  0016FA  0E22               	movlw	low _RtccTime
  7552  0016FC  6E26               	movwf	RtccReadTime@pTm,c
  7553  0016FE  0E00               	movlw	high _RtccTime
  7554  001700  6E27               	movwf	RtccReadTime@pTm+1,c
  7555  001702  ECBD  F00D         	call	_RtccReadTime	;wreg free
  7556                           
  7557                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  7558  001706  5023               	movf	_RtccTime+1,w,c
  7559  001708  0B0F               	andlw	15
  7560  00170A  6E54               	movwf	_segundo_u,c
  7561                           
  7562                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  7563  00170C  3823               	swapf	_RtccTime+1,w,c
  7564  00170E  0B0F               	andlw	15
  7565  001710  0B0F               	andlw	15
  7566  001712  6E53               	movwf	_segundo_d,c
  7567                           
  7568                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  7569  001714  5024               	movf	_RtccTime+2,w,c
  7570  001716  0B0F               	andlw	15
  7571  001718  6E52               	movwf	_minuto_u,c
  7572                           
  7573                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  7574  00171A  3824               	swapf	_RtccTime+2,w,c
  7575  00171C  0B0F               	andlw	15
  7576  00171E  0B0F               	andlw	15
  7577  001720  6E51               	movwf	_minuto_d,c
  7578                           
  7579                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  7580  001722  5025               	movf	_RtccTime+3,w,c
  7581  001724  0B0F               	andlw	15
  7582  001726  6E4E               	movwf	_hora_u,c
  7583                           
  7584                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  7585  001728  3825               	swapf	_RtccTime+3,w,c
  7586  00172A  0B0F               	andlw	15
  7587  00172C  0B0F               	andlw	15
  7588  00172E  6E4D               	movwf	_hora_d,c
  7589                           
  7590                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  7591  001730  0E1E               	movlw	low _RtccDate
  7592  001732  6E26               	movwf	RtccReadDate@pDt,c
  7593  001734  0E00               	movlw	high _RtccDate
  7594  001736  6E27               	movwf	RtccReadDate@pDt+1,c
  7595  001738  EC80  F00C         	call	_RtccReadDate	;wreg free
  7596                           
  7597                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  7598  00173C  501F               	movf	_RtccDate+1,w,c
  7599  00173E  0B0F               	andlw	15
  7600  001740  6E4C               	movwf	_fecha_u,c
  7601                           
  7602                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  7603  001742  381F               	swapf	_RtccDate+1,w,c
  7604  001744  0B0F               	andlw	15
  7605  001746  0B0F               	andlw	15
  7606  001748  6E4B               	movwf	_fecha_d,c
  7607                           
  7608                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  7609  00174A  5020               	movf	_RtccDate+2,w,c
  7610  00174C  0B0F               	andlw	15
  7611  00174E  6E50               	movwf	_mes_u,c
  7612                           
  7613                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  7614  001750  3820               	swapf	_RtccDate+2,w,c
  7615  001752  0B0F               	andlw	15
  7616  001754  0B0F               	andlw	15
  7617  001756  6E4F               	movwf	_mes_d,c
  7618                           
  7619                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  7620  001758  C01E  F09B         	movff	_RtccDate,_dia_semana
  7621                           
  7622                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  7623  00175C  5021               	movf	_RtccDate+3,w,c
  7624  00175E  0B0F               	andlw	15
  7625  001760  0100               	movlb	0	; () banked
  7626  001762  6F9A               	movwf	_anio_u& (0+255),b
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  7630  001764  3821               	swapf	_RtccDate+3,w,c
  7631  001766  0B0F               	andlw	15
  7632  001768  0B0F               	andlw	15
  7633  00176A  6E4A               	movwf	_anio_d,c
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  7637  00176C  5053               	movf	_segundo_d,w,c
  7638  00176E  0D0A               	mullw	10
  7639  001770  5054               	movf	_segundo_u,w,c
  7640  001772  24F3               	addwf	prodl,w,c
  7641  001774  6E17               	movwf	_segundo,c
  7642  001776  0E00               	movlw	0
  7643  001778  20F4               	addwfc	prodh,w,c
  7644  00177A  6E18               	movwf	_segundo+1,c
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  7648  00177C  5051               	movf	_minuto_d,w,c
  7649  00177E  0D0A               	mullw	10
  7650  001780  5052               	movf	_minuto_u,w,c
  7651  001782  24F3               	addwf	prodl,w,c
  7652  001784  6E15               	movwf	_minuto,c
  7653  001786  0E00               	movlw	0
  7654  001788  20F4               	addwfc	prodh,w,c
  7655  00178A  6E16               	movwf	_minuto+1,c
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  7659  00178C  504D               	movf	_hora_d,w,c
  7660  00178E  0D0A               	mullw	10
  7661  001790  504E               	movf	_hora_u,w,c
  7662  001792  24F3               	addwf	prodl,w,c
  7663  001794  6E5B               	movwf	_hora,c
  7664  001796  0E00               	movlw	0
  7665  001798  20F4               	addwfc	prodh,w,c
  7666  00179A  6E5C               	movwf	_hora+1,c
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  7670  00179C  504B               	movf	_fecha_d,w,c
  7671  00179E  0D0A               	mullw	10
  7672  0017A0  504C               	movf	_fecha_u,w,c
  7673  0017A2  24F3               	addwf	prodl,w,c
  7674  0017A4  6E57               	movwf	_dia,c
  7675  0017A6  0E00               	movlw	0
  7676  0017A8  20F4               	addwfc	prodh,w,c
  7677  0017AA  6E58               	movwf	_dia+1,c
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  7681  0017AC  C09B  F059         	movff	_dia_semana,_diasem
  7682  0017B0  6A5A               	clrf	_diasem+1,c
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  7686  0017B2  504F               	movf	_mes_d,w,c
  7687  0017B4  0D0A               	mullw	10
  7688  0017B6  5050               	movf	_mes_u,w,c
  7689  0017B8  24F3               	addwf	prodl,w,c
  7690  0017BA  6E5D               	movwf	_mes,c
  7691  0017BC  0E00               	movlw	0
  7692  0017BE  20F4               	addwfc	prodh,w,c
  7693  0017C0  6E5E               	movwf	_mes+1,c
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  7697  0017C2  504A               	movf	_anio_d,w,c
  7698  0017C4  0D0A               	mullw	10
  7699  0017C6  0100               	movlb	0	; () banked
  7700  0017C8  519A               	movf	_anio_u& (0+255),w,b
  7701  0017CA  24F3               	addwf	prodl,w,c
  7702  0017CC  6E55               	movwf	_anio,c
  7703  0017CE  0100               	movlb	0	; () banked
  7704  0017D0  0E00               	movlw	0
  7705  0017D2  20F4               	addwfc	prodh,w,c
  7706  0017D4  6E56               	movwf	_anio+1,c
  7707                           
  7708                           ; BSR set to: 0
  7709  0017D6  0012               	return		;funcret
  7710  0017D8                     __end_of_Read_RTC:
  7711                           	opt stack 0
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           prodh	equ	0xFF4
  7717                           prodl	equ	0xFF3
  7718                           intcon	equ	0xFF2
  7719                           indf0	equ	0xFEF
  7720                           postinc0	equ	0xFEE
  7721                           fsr0h	equ	0xFEA
  7722                           fsr0l	equ	0xFE9
  7723                           wreg	equ	0xFE8
  7724                           indf1	equ	0xFE7
  7725                           postdec1	equ	0xFE5
  7726                           fsr1h	equ	0xFE2
  7727                           fsr1l	equ	0xFE1
  7728                           indf2	equ	0xFDF
  7729                           postinc2	equ	0xFDE
  7730                           postdec2	equ	0xFDD
  7731                           fsr2h	equ	0xFDA
  7732                           fsr2l	equ	0xFD9
  7733                           status	equ	0xFD8
  7734                           
  7735 ;; *************** function _RtccReadTime *****************
  7736 ;; Defined at:
  7737 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  pTm             2    0[COMRAM] PTR struct .
  7740 ;;		 -> RtccTime(4), 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  rTD0            8   10[COMRAM] struct .
  7743 ;;  rTD1            8    2[COMRAM] struct .
  7744 ;; Return value:  Size  Location     Type
  7745 ;;		None               void
  7746 ;; Registers used:
  7747 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;Total ram usage:       18 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_Read_RTC
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text56
  7767  001B7A                     __ptext56:
  7768                           	opt stack 0
  7769  001B7A                     _RtccReadTime:
  7770                           	opt stack 29
  7771  001B7A  0EFC               	movlw	252
  7772  001B7C  010F               	movlb	15	; () banked
  7773  001B7E  173F               	andwf	63,f,b	;volatile
  7774                           
  7775                           ; BSR set to: 15
  7776  001B80  010F               	movlb	15	; () banked
  7777  001B82  813F               	bsf	63,0,b	;volatile
  7778                           
  7779                           ; BSR set to: 15
  7780  001B84  CF98 F034          	movff	3992,RtccReadTime@rTD0+4	;volatile
  7781                           
  7782                           ; BSR set to: 15
  7783  001B88  CF99 F035          	movff	3993,RtccReadTime@rTD0+5	;volatile
  7784                           
  7785                           ; BSR set to: 15
  7786  001B8C  CF98 F036          	movff	3992,RtccReadTime@rTD0+6	;volatile
  7787                           
  7788                           ; BSR set to: 15
  7789  001B90  CF99 F037          	movff	3993,RtccReadTime@rTD0+7	;volatile
  7790                           
  7791                           ; BSR set to: 15
  7792  001B94  0EFC               	movlw	252
  7793  001B96  010F               	movlb	15	; () banked
  7794  001B98  173F               	andwf	63,f,b	;volatile
  7795  001B9A  010F               	movlb	15	; () banked
  7796  001B9C  813F               	bsf	63,0,b	;volatile
  7797                           
  7798                           ; BSR set to: 15
  7799  001B9E  CF98 F02C          	movff	3992,RtccReadTime@rTD1+4	;volatile
  7800                           
  7801                           ; BSR set to: 15
  7802  001BA2  CF99 F02D          	movff	3993,RtccReadTime@rTD1+5	;volatile
  7803                           
  7804                           ; BSR set to: 15
  7805  001BA6  CF98 F02E          	movff	3992,RtccReadTime@rTD1+6	;volatile
  7806                           
  7807                           ; BSR set to: 15
  7808  001BAA  CF99 F02F          	movff	3993,RtccReadTime@rTD1+7	;volatile
  7809                           
  7810                           ; BSR set to: 15
  7811  001BAE  502E               	movf	RtccReadTime@rTD1+6,w,c
  7812  001BB0  1836               	xorwf	RtccReadTime@rTD0+6,w,c
  7813  001BB2  A4D8               	btfss	status,2,c
  7814  001BB4  D7E2               	goto	l3070
  7815                           
  7816                           ; BSR set to: 15
  7817                           
  7818                           ; BSR set to: 15
  7819  001BB6  EE20 F003          	lfsr	2,3
  7820  001BBA  5026               	movf	RtccReadTime@pTm,w,c
  7821  001BBC  26D9               	addwf	fsr2l,f,c
  7822  001BBE  5027               	movf	RtccReadTime@pTm+1,w,c
  7823  001BC0  22DA               	addwfc	fsr2h,f,c
  7824  001BC2  C034  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  7825  001BC6  EE20 F002          	lfsr	2,2
  7826  001BCA  5026               	movf	RtccReadTime@pTm,w,c
  7827  001BCC  26D9               	addwf	fsr2l,f,c
  7828  001BCE  5027               	movf	RtccReadTime@pTm+1,w,c
  7829  001BD0  22DA               	addwfc	fsr2h,f,c
  7830  001BD2  C037  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  7831  001BD6  EE20 F001          	lfsr	2,1
  7832  001BDA  5026               	movf	RtccReadTime@pTm,w,c
  7833  001BDC  26D9               	addwf	fsr2l,f,c
  7834  001BDE  5027               	movf	RtccReadTime@pTm+1,w,c
  7835  001BE0  22DA               	addwfc	fsr2h,f,c
  7836  001BE2  C036  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  7837                           
  7838                           ; BSR set to: 15
  7839  001BE6  0012               	return		;funcret
  7840  001BE8                     __end_of_RtccReadTime:
  7841                           	opt stack 0
  7842                           tblptru	equ	0xFF8
  7843                           tblptrh	equ	0xFF7
  7844                           tblptrl	equ	0xFF6
  7845                           tablat	equ	0xFF5
  7846                           prodh	equ	0xFF4
  7847                           prodl	equ	0xFF3
  7848                           intcon	equ	0xFF2
  7849                           indf0	equ	0xFEF
  7850                           postinc0	equ	0xFEE
  7851                           fsr0h	equ	0xFEA
  7852                           fsr0l	equ	0xFE9
  7853                           wreg	equ	0xFE8
  7854                           indf1	equ	0xFE7
  7855                           postdec1	equ	0xFE5
  7856                           fsr1h	equ	0xFE2
  7857                           fsr1l	equ	0xFE1
  7858                           indf2	equ	0xFDF
  7859                           postinc2	equ	0xFDE
  7860                           postdec2	equ	0xFDD
  7861                           fsr2h	equ	0xFDA
  7862                           fsr2l	equ	0xFD9
  7863                           status	equ	0xFD8
  7864                           
  7865 ;; *************** function _RtccReadDate *****************
  7866 ;; Defined at:
  7867 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  pDt             2    0[COMRAM] PTR struct .
  7870 ;;		 -> RtccDate(4), 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  rTD0            8   10[COMRAM] struct .
  7873 ;;  rTD1            8    2[COMRAM] struct .
  7874 ;; Return value:  Size  Location     Type
  7875 ;;		None               void
  7876 ;; Registers used:
  7877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7884 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7886 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7887 ;;Total ram usage:       18 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; This function calls:
  7890 ;;		Nothing
  7891 ;; This function is called by:
  7892 ;;		_Read_RTC
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text57
  7897  001900                     __ptext57:
  7898                           	opt stack 0
  7899  001900                     _RtccReadDate:
  7900                           	opt stack 29
  7901  001900  0EFC               	movlw	252
  7902  001902  010F               	movlb	15	; () banked
  7903  001904  173F               	andwf	63,f,b	;volatile
  7904  001906  0E03               	movlw	3
  7905  001908  010F               	movlb	15	; () banked
  7906  00190A  133F               	iorwf	63,f,b	;volatile
  7907                           
  7908                           ; BSR set to: 15
  7909  00190C  CF98 F030          	movff	3992,RtccReadDate@rTD0	;volatile
  7910                           
  7911                           ; BSR set to: 15
  7912  001910  CF99 F031          	movff	3993,RtccReadDate@rTD0+1	;volatile
  7913                           
  7914                           ; BSR set to: 15
  7915  001914  CF98 F032          	movff	3992,RtccReadDate@rTD0+2	;volatile
  7916                           
  7917                           ; BSR set to: 15
  7918  001918  CF99 F033          	movff	3993,RtccReadDate@rTD0+3	;volatile
  7919                           
  7920                           ; BSR set to: 15
  7921  00191C  CF98 F034          	movff	3992,RtccReadDate@rTD0+4	;volatile
  7922                           
  7923                           ; BSR set to: 15
  7924  001920  CF99 F035          	movff	3993,RtccReadDate@rTD0+5	;volatile
  7925  001924  0EFC               	movlw	252
  7926  001926  010F               	movlb	15	; () banked
  7927  001928  173F               	andwf	63,f,b	;volatile
  7928  00192A  0E03               	movlw	3
  7929  00192C  010F               	movlb	15	; () banked
  7930  00192E  133F               	iorwf	63,f,b	;volatile
  7931                           
  7932                           ; BSR set to: 15
  7933  001930  CF98 F028          	movff	3992,RtccReadDate@rTD1	;volatile
  7934                           
  7935                           ; BSR set to: 15
  7936  001934  CF99 F029          	movff	3993,RtccReadDate@rTD1+1	;volatile
  7937                           
  7938                           ; BSR set to: 15
  7939  001938  CF98 F02A          	movff	3992,RtccReadDate@rTD1+2	;volatile
  7940                           
  7941                           ; BSR set to: 15
  7942  00193C  CF99 F02B          	movff	3993,RtccReadDate@rTD1+3	;volatile
  7943                           
  7944                           ; BSR set to: 15
  7945  001940  CF98 F02C          	movff	3992,RtccReadDate@rTD1+4	;volatile
  7946                           
  7947                           ; BSR set to: 15
  7948  001944  CF99 F02D          	movff	3993,RtccReadDate@rTD1+5	;volatile
  7949  001948  502A               	movf	RtccReadDate@rTD1+2,w,c
  7950  00194A  1832               	xorwf	RtccReadDate@rTD0+2,w,c
  7951  00194C  A4D8               	btfss	status,2,c
  7952  00194E  D7D8               	goto	l3096
  7953                           
  7954                           ; BSR set to: 15
  7955                           
  7956                           ; BSR set to: 15
  7957  001950  EE20 F001          	lfsr	2,1
  7958  001954  5026               	movf	RtccReadDate@pDt,w,c
  7959  001956  26D9               	addwf	fsr2l,f,c
  7960  001958  5027               	movf	RtccReadDate@pDt+1,w,c
  7961  00195A  22DA               	addwfc	fsr2h,f,c
  7962  00195C  C032  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  7963  001960  EE20 F002          	lfsr	2,2
  7964  001964  5026               	movf	RtccReadDate@pDt,w,c
  7965  001966  26D9               	addwf	fsr2l,f,c
  7966  001968  5027               	movf	RtccReadDate@pDt+1,w,c
  7967  00196A  22DA               	addwfc	fsr2h,f,c
  7968  00196C  C033  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  7969                           
  7970                           ; BSR set to: 15
  7971  001970  C026  FFD9         	movff	RtccReadDate@pDt,fsr2l
  7972  001974  C027  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  7973  001978  C035  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  7974                           
  7975                           ; BSR set to: 15
  7976  00197C  EE20 F003          	lfsr	2,3
  7977  001980  5026               	movf	RtccReadDate@pDt,w,c
  7978  001982  26D9               	addwf	fsr2l,f,c
  7979  001984  5027               	movf	RtccReadDate@pDt+1,w,c
  7980  001986  22DA               	addwfc	fsr2h,f,c
  7981  001988  C030  FFDF         	movff	RtccReadDate@rTD0,indf2
  7982                           
  7983                           ; BSR set to: 15
  7984  00198C  0012               	return		;funcret
  7985  00198E                     __end_of_RtccReadDate:
  7986                           	opt stack 0
  7987                           tblptru	equ	0xFF8
  7988                           tblptrh	equ	0xFF7
  7989                           tblptrl	equ	0xFF6
  7990                           tablat	equ	0xFF5
  7991                           prodh	equ	0xFF4
  7992                           prodl	equ	0xFF3
  7993                           intcon	equ	0xFF2
  7994                           indf0	equ	0xFEF
  7995                           postinc0	equ	0xFEE
  7996                           fsr0h	equ	0xFEA
  7997                           fsr0l	equ	0xFE9
  7998                           wreg	equ	0xFE8
  7999                           indf1	equ	0xFE7
  8000                           postdec1	equ	0xFE5
  8001                           fsr1h	equ	0xFE2
  8002                           fsr1l	equ	0xFE1
  8003                           indf2	equ	0xFDF
  8004                           postinc2	equ	0xFDE
  8005                           postdec2	equ	0xFDD
  8006                           fsr2h	equ	0xFDA
  8007                           fsr2l	equ	0xFD9
  8008                           status	equ	0xFD8
  8009                           tblptru	equ	0xFF8
  8010                           tblptrh	equ	0xFF7
  8011                           tblptrl	equ	0xFF6
  8012                           tablat	equ	0xFF5
  8013                           prodh	equ	0xFF4
  8014                           prodl	equ	0xFF3
  8015                           intcon	equ	0xFF2
  8016                           indf0	equ	0xFEF
  8017                           postinc0	equ	0xFEE
  8018                           fsr0h	equ	0xFEA
  8019                           fsr0l	equ	0xFE9
  8020                           wreg	equ	0xFE8
  8021                           indf1	equ	0xFE7
  8022                           postdec1	equ	0xFE5
  8023                           fsr1h	equ	0xFE2
  8024                           fsr1l	equ	0xFE1
  8025                           indf2	equ	0xFDF
  8026                           postinc2	equ	0xFDE
  8027                           postdec2	equ	0xFDD
  8028                           fsr2h	equ	0xFDA
  8029                           fsr2l	equ	0xFD9
  8030                           status	equ	0xFD8
  8031                           
  8032                           	psect	rparam
  8033  0000                     tblptru	equ	0xFF8
  8034                           tblptrh	equ	0xFF7
  8035                           tblptrl	equ	0xFF6
  8036                           tablat	equ	0xFF5
  8037                           prodh	equ	0xFF4
  8038                           prodl	equ	0xFF3
  8039                           intcon	equ	0xFF2
  8040                           indf0	equ	0xFEF
  8041                           postinc0	equ	0xFEE
  8042                           fsr0h	equ	0xFEA
  8043                           fsr0l	equ	0xFE9
  8044                           wreg	equ	0xFE8
  8045                           indf1	equ	0xFE7
  8046                           postdec1	equ	0xFE5
  8047                           fsr1h	equ	0xFE2
  8048                           fsr1l	equ	0xFE1
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           fsr2h	equ	0xFDA
  8053                           fsr2l	equ	0xFD9
  8054                           status	equ	0xFD8


Data Sizes:
    Strings     146
    Constant    14
    Data        10
    BSS         95
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      95
    BANK0           160      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[1]), STR_1(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_5(CODE[7]), STR_4(CODE[7]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[2]), STR_36(CODE[5]), STR_35(CODE[8]), STR_34(CODE[7]), 
		 -> STR_33(CODE[6]), STR_32(CODE[8]), STR_31(CODE[4]), STR_30(CODE[5]), 
		 -> STR_29(CODE[6]), STR_28(CODE[6]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[8]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_20(CODE[7]), STR_19(CODE[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[8]), STR_16(CODE[16]), STR_14(CODE[4]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), buffer1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    lcd_write@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_36(CODE[5]), STR_35(CODE[8]), STR_34(CODE[7]), STR_33(CODE[6]), 
		 -> STR_32(CODE[8]), STR_31(CODE[4]), STR_30(CODE[5]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[8]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[7]), STR_19(CODE[4]), STR_18(CODE[6]), STR_17(CODE[8]), 
		 -> STR_16(CODE[16]), STR_14(CODE[4]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _button_hash->_pin_input_validator
    _activity_menu->_lcd_write
    _button_B->_button_B_menu
    _button_B->_button_B_submenu_activation
    _activity_submenu_pin->_lcd_write
    _activity_submenu_clock->_lcd_write
    _activity_submenu_alarm->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_action_menu_selector
    _button_A->_action_submenu_selector
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _action_submenu_selector_1->_lcd_write
    _action_submenu_selector_0->_lcd_write
    _action_menu_selector_3->_lcd_write
    _action_menu_selector_2->_lcd_write
    _action_menu_selector_1->_lcd_write
    _action_menu_selector_0->_lcd_write
    _home_state_refresh->_sprintf
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  262786
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                 _home_state_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4102
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  215112
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    4380
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   30839
                _pin_input_validator
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  2     2      0   30839
                                             16 COMRAM     2     2      0
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0       0
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0    9861
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   18874
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   18874
             _action_menu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0   85357
                                             18 COMRAM     2     2      0
                      _button_B_menu
        _button_B_submenu_activation
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_activation                          2     2      0    9861
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_menu                                        2     2      0   75496
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
             _activity_submenu_alarm
             _activity_submenu_clock
               _activity_submenu_pin
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin                                 0     0      0   18874
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_clock                               0     0      0   18874
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_alarm                               0     0      0   18874
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_activation                          0     0      0   18874
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   65801
                                             18 COMRAM     2     2      0
               _action_menu_selector
            _action_submenu_selector
                       _activity_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   11723
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     331
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _action_submenu_selector                              2     2      0   18026
                                             16 COMRAM     2     2      0
          _action_submenu_selector_0
          _action_submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _action_submenu_selector_1                            0     0      0    9013
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _action_submenu_selector_0                            0     0      0    9013
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _action_menu_selector                                 2     2      0   36052
                                             16 COMRAM     2     2      0
             _action_menu_selector_0
             _action_menu_selector_1
             _action_menu_selector_2
             _action_menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_3                               0     0      0    9013
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_2                               0     0      0    9013
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_1                               0     0      0    9013
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _action_menu_selector_0                               0     0      0    9013
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _home_state_refresh                                   0     0      0   11441
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   11441
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2428
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0    9861
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _activity_home                                        0     0      0    9861
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6    9013
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1726
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1553
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1     885
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _home_state_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _keyboard_control
     _button_A
       _action_menu_selector
         _action_menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _action_submenu_selector
         _action_submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_B
       _button_B_menu
         _activity_submenu_activation
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_alarm
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_clock
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_activation
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_C
       _activity_menu
         _action_menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _reset_home_callback
     _button_hash
       _pin_input_validator
         _activity_menu
           _action_menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _reset_home_callback
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9B       6        0.0%
DATA                 0      0      9B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Sep 14 00:13:46 2016

              ??_action_menu_selector 0036                                     _a 0001  
                                   _b 0005                                     _c 0007  
                                   _i 000D                                     _j 000F  
                                   _k 0011                        ?_lcd_send_byte 0028  
                        ___awdiv@sign 002B                   ___wmul@multiplicand 0028  
                         lcd_comand@d 002A              ??_action_menu_selector_0 0036  
            ??_action_menu_selector_1 0036              ??_action_menu_selector_2 0036  
            ??_action_menu_selector_3 0036                          __CFG_CP0$OFF 000000  
                     lcd_write@column 0030                                   l301 1244  
                                 l310 126C                                   l302 1240  
                                 l321 12A6                                   l313 1282  
                                 l305 1256                                   l330 12CE  
                                 l322 12A2                                   l314 127E  
                                 l306 1252                                   l341 1310  
                                 l333 12E4                                   l325 12C0  
                                 l317 1294                                   l309 1270  
                                 l350 1330                                   l342 130C  
                                 l334 12E0                                   l326 12BC  
                                 l318 1290                                   l345 1322  
                                 l337 12F6                                   l329 12D2  
                                 l354 1342                                   l346 131E  
                                 l338 12F2                                   l349 1334  
                                 l293 1220                                   l294 121C  
                                 l297 1232                                   l466 1174  
                                 l298 122E                                   l387 23F6  
                                 l388 23F8                 ??_check_home_callback 0036  
                                 _dia 0057                                   _key 001D  
                                 _mes 005D                                   _pin 0090  
                     lcd_write@string 0034                                   wreg 000FE8  
                     RtccReadDate@pDt 0026                           lcd_gotoxy@x 002B  
                         lcd_gotoxy@y 002A                     ??_button_asterisk 0026  
                                l1110 1E38                                  l1120 1FCA  
                                l3000 1828                                  l3012 1852  
                                l3016 1862                                  l3008 1846  
                                l2410 1FFC                                  l3130 22CE  
                                l2404 1FD8                                  l3132 22D4  
                                l3070 1B7A                                  l2406 1FE4  
                                l2414 2008                                  l2422 1EC4  
                                l3134 22DA                                  l2424 2590  
                                l2408 1FF0                                  l3152 2354  
                                l2600 1EF8                                  l2370 257E  
                                l2442 1A3E                                  l2418 1E9A  
                                l3138 22E0                                  l3146 2348  
                                l3148 234E                                  l2604 1F2C  
                                l2438 1A36                                  l2470 23BC  
                                l3096 1900                                  l2456 1A62  
                                l2448 1A4E                                  l2632 1DFC  
                                l2616 24F6                                  l2720 16E2  
                                l2634 1E06                                  l2810 0FC6  
                                l3274 1E62                                  l3346 134A  
                                l2396 24C6                                  l2644 1E2C  
                                l2636 1E0E                                  l2660 1FBE  
                                l2652 1F96                                  l2812 0FD4  
                                l2804 0FAC                                  l2900 20C4  
                                l2468 23B2                                  l3188 1C30  
                                l2740 150A                                  l2724 16EE  
                                l2716 16D6                                  l3364 2446  
                                l2398 24CC                                  l2654 1FA0  
                                l2830 1076                                  l2822 1012  
                                l3278 1E7A                                  l2750 1558  
                                l2656 1FA8                                  l2816 0FDE  
                                l2904 20CA                                  l2912 240E  
                                l2672 162C                                  l2850 10EA  
                                l2842 10BA                                  l2834 107C  
                                l2818 0FF4                                  l2914 2414  
                                l2930 23A0                                  l2746 1544  
                                l2682 166A                                  l2860 111C  
                                l2836 109E                                  l2940 207C  
                                l2756 1574                                  l2870 114A  
                                l2854 10EE                                  l2846 10C6  
                                l2918 241A                                  l2934 206A  
                                l2598 1EEE                                  l2678 1656  
                                l2872 1152                                  l2864 1128  
                                l2936 2070                                  l2944 2082  
                                l2960 233C                                  l2952 230A  
                                l2792 15D6                                  l2688 1686  
                                l2858 1112                                  l2938 2076  
                                l2954 2312                                  l2970 2030  
                                l2884 11CE                                  l2972 2042  
                                l2796 15E2                                  l2788 15CA  
                                l2878 117A                                  l2886 11DA  
                                l2894 20B2                                  l2958 231C  
                                l2974 204C                                  l2990 1800  
                                l2888 11F6                                  l2896 20B8  
                                l2968 202A                                  l2984 17EE  
                                l2898 20BE                                  l2996 1816  
                                l2998 1820                                  STR_1 0F7C  
                                STR_2 0F1F                                  STR_3 0F2E  
                                STR_4 0F55                                  STR_5 0F5C  
                                STR_6 0F9F                                  STR_7 0F9B  
                                STR_8 0F9F                                  STR_9 0F9B  
                                u1210 1AB4                                  u1300 1EE4  
                                u1230 1ACE                                  u1208 1A9E  
                                u1250 1AEA                                  u1307 1EDA  
                                u1228 1AB6                                  u1190 1A9C  
                                u1248 1AD0                                  u1290 1EBA  
                                u1268 1AEC                                  u1297 1EB0  
                                u2377 1350                                  u2387 2580  
                                u2397 2592                      ?_lcd_send_nibble 0026  
                                _anio 0055                                  _flag 02F8  
                                _main 243C                                  _hora 005B  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                indf0 000FEF                                  fsr0l 000FE9  
                                fsr2h 000FDA                                  indf1 000FE7  
                                fsr1l 000FE1                                  indf2 000FDF  
                                fsr2l 000FD9                         __CFG_T1DIG$ON 000000  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0000                         __CFG_IESO$OFF 000000  
                    RtccReadDate@rTD0 0030                      RtccReadDate@rTD1 0028  
                __end_of_activity_pin 1F88                          ___param_bank 000010  
         ??_action_submenu_selector_0 0036           ??_action_submenu_selector_1 0036  
     __size_of_activity_submenu_alarm 0066       __size_of_activity_submenu_clock 0066  
                     RtccReadTime@pTm 0026                           _Delay1KTCYx 258E  
                       __CFG_PLLDIV$1 000000                                 ?_main 0026  
                     __end_of___awdiv 186E                                 STR_10 0F9F  
                               STR_11 0F9B                                 STR_12 0F9F  
                               STR_20 0F63                                 STR_13 0F9B  
                               STR_21 0F9F                                 STR_22 0F9B  
                               STR_14 0F90                                 STR_30 0F81  
                               STR_15 0F9C                                 STR_23 0F9F  
                               STR_31 0F94                                 STR_24 0F9B  
                               STR_32 0F45                                 STR_16 0F0F  
                               STR_25 0F4D                                 STR_33 0F76  
                               STR_17 0F4D                                 STR_34 0F63  
                               STR_26 0F98                                 STR_18 0F70  
                               STR_27 0F60                                 STR_19 0F94  
                               STR_35 0F3D                                 STR_28 0F70  
                               STR_36 0F86                                 STR_37 0F9D  
                               STR_29 0F6A                                 STR_38 0F8B  
                               STR_39 0F8B                 __size_of_Delay100TCYx 0012  
                     ___awdiv@divisor 0028                       __end_of___lwdiv 1E42  
                     __end_of___lwmod 1FD4                       ___awdiv@counter 002A  
                               _TRISA 000F92                                 _TRISB 000F93  
                               _TRISC 000F94                          ?_button_hash 0026  
                      __CFG_FCMEN$OFF 000000                       __end_of_dpowers 0F0B  
                               _mes_d 004F                                 _mes_u 0050  
                     __end_of_isdigit 2500                                 _setup 1B06  
                               _state 0019                        __pbitbssCOMRAM 02F8  
                               tablat 000FF5           __size_of_home_state_refresh 0056  
                 _reset_home_callback 25C2                          lcd_putrs@ptr 002E  
                               status 000FD8                       __end_of_sprintf 1206  
               __end_of_activity_home 2492                 __end_of_activity_menu 1A10  
                        lcd_write@row 0032               __CFG_DSWDTOSC$INTOSCREF 000000  
                     __initialization 20F8                          _Delay100TCYx 257C  
                        __end_of_main 2468                       ??_lcd_send_byte 0029  
                    RtccReadTime@rTD0 0030                      RtccReadTime@rTD1 0028  
                    __end_of_Read_RTC 17D8               _action_submenu_selector 240C  
                ?_reset_home_callback 0026                                ??_main 004A  
     __size_of_action_menu_selector_0 0042       __size_of_action_menu_selector_1 0042  
     __size_of_action_menu_selector_2 0042       __size_of_action_menu_selector_3 0042  
                       __activetblptr 000002                      __end_of_RtccWrOn 257C  
           _action_submenu_selector_0 217E             _action_submenu_selector_1 213C  
              _activity_submenu_alarm 1D1A                _activity_submenu_clock 1CB4  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _EECON2 000FA7                                _ANCON0 000F48  
                              _ANCON1 000F49                      ___awdiv@dividend 0026  
                              ?_setup 0026                        __CFG_WDTEN$OFF 000000  
        __size_of_pin_input_validator 0032                      RtccWriteDate@pDt 0026  
                              _RTCCFG 000F3F                        __CFG_WPCFG$OFF 000000  
                       _home_callback 0009                        __CFG_WPDIS$OFF 000000  
                 _home_callback_delay 000B                        __CFG_XINST$OFF 000000  
              __size_of_button_B_menu 0048                      __end_of_lcd_init 1A90  
          __end_of_home_clock_refresh 1900                      __end_of_lcd_putc 2020  
                              ___wmul 2492                             ??___awdiv 002A  
                      __CFG_STVREN$ON 000000                                _diasem 0059  
                              _anio_d 004A                                _anio_u 009A  
                           ??___lwdiv 002A                             ??___lwmod 0031  
               ??_reset_home_callback 0026                                _hora_d 004D  
                              _hora_u 004E                      __end_of_button_A 2308  
                    __end_of_button_B 2376                      __end_of_button_C 253E  
                    __end_of_button_D 25C2                                clear_0 20FE  
                              clear_1 210C                      ___awdiv@quotient 002C  
                              _minuto 0015   __end_of_button_B_submenu_activation 2342  
         _button_B_submenu_activation 2308                 __end_of_RtccWriteDate 15EE  
                              _strcat 2020                                _strcmp 1EEC  
               __end_of_RtccWriteTime 16FA                                _strcpy 23A8  
                    RtccWriteTime@pTm 0026                          __pdataCOMRAM 0055  
                           ??_isdigit 0026                __size_of_button_number 0066  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                           ??_sprintf 003C                 __size_of_activity_pin 004E  
                          __accesstop 0060               __end_of__initialization 2132  
              _action_menu_selector_0 2286                _action_menu_selector_1 2244  
              _action_menu_selector_2 2202                _action_menu_selector_3 21C0  
                  __size_of_Write_RTC 014C                         ___rparam_used 000001  
           ??_action_submenu_selector 0036             __size_of_keyboard_control 0156  
                      __pcstackCOMRAM 0026                         __end_of_setup 1B7A  
                     __CFG_DSWDTPS$G2 000000                       _button_asterisk 25CC  
                     __CFG_OSC$INTOSC 000000                         _button_B_menu 2068  
                        _activity_pin 1F3A                     lcd_gotoxy@address 002C  
                __size_of_button_hash 0014                    __size_of_lcd_putrs 0054  
                  __size_of_lcd_write 0018                          sprintf@width 0046  
                             ??_setup 0033                            __pbssBANK0 0060  
                           ?_Read_RTC 0026                            _dia_semana 009B  
           RtccWriteTime@tempHourWDay 002F                            __pnvCOMRAM 004A  
       __size_of_activity_submenu_pin 0066                         _button_number 1BE8  
                           ?_RtccWrOn 0026                        lcd_send_byte@n 0028  
                             ?___wmul 0026                         ?_RtccReadDate 0026  
         __end_of_check_home_callback 2522                         ?_RtccReadTime 0026  
       __size_of_action_menu_selector 0048                          ?_Delay1KTCYx 0026  
                             ?_strcat 0026                               ?_strcmp 0026  
                             ?_strcpy 0026                     __end_of_Write_RTC 14A8  
                      ?_button_B_menu 0026                            _lcd_comand 25A0  
     __end_of_action_submenu_selector 243C                            _lcd_gotoxy 24BA  
                             _RTCVALH 000F99                               _RTCVALL 000F98  
                           ?_lcd_init 0026                             ?_lcd_putc 0026  
                       _menu_selected 0013                            ??_Read_RTC 0038  
                           ?_button_A 0026                             ?_button_B 0026  
                           ?_button_C 0026                             ?_button_D 0026  
  __size_of_action_submenu_selector_0 0042    __size_of_action_submenu_selector_1 0042  
                      ?_button_number 0026                               __Hparam 0000  
                             __Lparam 0000              __size_of_lcd_send_nibble 0076  
             __end_of_button_asterisk 25D2                            ??_RtccWrOn 0026  
                      ??_RtccReadDate 0028                        ??_RtccReadTime 0028  
                             ___awdiv 17D8                     __end_of_lcd_putrs 1EEC  
                   __end_of_lcd_write 2556                       __size_of___wmul 0028  
                             ___lwdiv 1DE6                               ___lwmod 1F88  
                        __psmallconst 0F00                           _RtccTimeVal 0078  
                             __pcinit 20F8                               _fecha_d 004B  
                             _fecha_u 004C                               __ramtop 0F00  
                 _pin_input_validator 2376                               __ptext0 243C  
                             __ptext1 1B06                               __ptext2 135C  
                             __ptext3 17D8                               __ptext4 15EE  
                             __ptext5 14A8                               __ptext6 256A  
                             __ptext7 1206                               __ptext8 1BE8  
                             __ptext9 2020          ?_activity_submenu_activation 0026  
                             _buffer1 007C               ?_activity_submenu_alarm 0026  
                     __size_of_strcat 0048                       __size_of_strcmp 004E  
                     __size_of_strcpy 0032               ?_activity_submenu_clock 0026  
                           _T1CONbits 000FCD                               _dpowers 0F01  
                             _isdigit 24DE                               _segundo 0017  
          __end_of_home_state_refresh 1E98                               _sprintf 0FA2  
                          ??_lcd_init 002A                            ??_lcd_putc 002D  
                end_of_initialization 2132                  ?_pin_input_validator 0026  
                lcd_send_byte@address 0029                            ??_button_A 0038  
                       __Lmediumconst 0000                            ??_button_B 0038  
                          ??_button_C 0036                            ??_button_D 0036  
   __end_of_action_submenu_selector_0 21C0     __end_of_action_submenu_selector_1 217E  
                    _keyboard_control 1206                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc2 000FDE                 __end_of_lcd_send_byte 240C  
                             strcmp@r 002B        __end_of_activity_submenu_alarm 1D80  
      __end_of_activity_submenu_clock 1D1A                             _PORTAbits 000F80  
                           _PORTCbits 000F82                       ??_button_B_menu 0036  
                    __CFG_DSBOREN$OFF 000000                           ?_lcd_comand 0026  
                  _home_clock_refresh 186E                      __CFG_CPUDIV$OSC1 000000  
                           _TRISBbits 000F93                __size_of_activity_home 002A  
              __size_of_activity_menu 0082                           ?_lcd_gotoxy 002A  
             ?_action_menu_selector_0 0026               ?_action_menu_selector_1 0026  
             ?_action_menu_selector_2 0026               ?_action_menu_selector_3 0026  
                     _LCD_INIT_STRING 0F0B                   ?_home_clock_refresh 0026  
               ??_pin_input_validator 0036                       ??_button_number 0049  
                    __CFG_IOL1WAY$OFF 000000             RtccWriteDate@tempDayMonth 002F  
         __end_of_reset_home_callback 25CC                   __CFG_MSSP7B_EN$MSK7 000000  
                    ?_button_asterisk 0026                      Delay100TCYx@unit 0026  
                ??_home_clock_refresh 0049                        __end_of___wmul 24BA  
                       __pidataCOMRAM 25AE             RtccWriteDate@tempHourWDay 0031  
                   ??_lcd_send_nibble 0026                  __size_of_Delay1KTCYx 0012  
                    __CFG_DSWDTEN$OFF 000000                        __end_of_strcat 2068  
                      __end_of_strcmp 1F3A                        __end_of_strcpy 23DA  
                 start_initialization 20F8        __end_of_action_menu_selector_0 22C8  
      __end_of_action_menu_selector_1 2286        __end_of_action_menu_selector_2 2244  
      __end_of_action_menu_selector_3 2202                  __end_of_RtccReadDate 198E  
                __end_of_RtccReadTime 1BE8                  RtccWriteTime@wasAlrm 002B  
                RtccWriteTime@wasWrEn 002C  __size_of_activity_submenu_activation 0066  
              __size_of_RtccWriteDate 0146                       RtccWriteDate@di 0028  
              __size_of_RtccWriteTime 010C                     __size_of_Read_RTC 00DE  
                       _activity_home 2468                         _activity_menu 198E  
                 __size_of_lcd_comand 000E                   __size_of_lcd_gotoxy 0024  
                            ??___wmul 002A                     __size_of_RtccWrOn 0012  
                     RtccWriteTime@di 0028                      __CFG_LPT1OSC$OFF 000000  
                            ??_strcat 002A                              ??_strcmp 002A  
                            ??_strcpy 002A          __end_of_activity_submenu_pin 1CB4  
                         _ALRMCFGbits 000F91               __end_of_LCD_INIT_STRING 0F0F  
                       ??_button_hash 0038                           __pbssCOMRAM 0001  
                           _Write_RTC 135C                          _isdigit$2152 0027  
        __end_of_action_menu_selector 20F8                       Delay1KTCYx@unit 0026  
                   __size_of_lcd_init 0080                           sprintf@flag 0042  
                   __size_of_lcd_putc 004C                           sprintf@prec 0045  
            ?_action_submenu_selector 0026                             __pnvBANK0 009A  
                      ?_activity_home 0026                        ?_activity_menu 0026  
                   __size_of_button_A 0040                     __size_of_button_B 0034  
                   __size_of_button_C 001C                     __size_of_button_D 000A  
                    ___lwdiv@dividend 0026                         ?_Delay100TCYx 0026  
                            ?___awdiv 0026                              ?___lwdiv 0026  
                            ?___lwmod 002D               RtccWriteTime@tempMinSec 002D  
                           _lcd_putrs 1E98                             _lcd_write 253E  
                    _submenu_selected 001B                         _RtccWriteDate 14A8  
                         __smallconst 0F00                         _RtccWriteTime 15EE  
        __size_of_check_home_callback 0022                              ?_isdigit 0026  
                __CFG_RTCOSC$T1OSCREF 000000              __end_of_keyboard_control 135C  
                          ?_Write_RTC 0026                      ___lwdiv@quotient 002A  
                            ?_sprintf 0032                        __size_of_setup 0074  
                 __end_of_button_hash 256A                      _RtccAlrmTimeDate 0060  
                      ___wmul@product 002A                              _LATAbits 000F89  
                            _LATBbits 000F8A                             _pin_input 0095  
                            _PIE3bits 000FA3                             _segundo_d 0053  
                      ??_Delay100TCYx 0026                    _home_state_refresh 1E42  
                           _segundo_u 0054                      __CFG_WDTPS$32768 000000  
                  RtccWriteDate@wasOn 002A                   ?_home_state_refresh 0026  
                  _Rtcc_read_TimeDate 0070                        ?_RtccWriteDate 0026  
                          ?_lcd_putrs 002E                            ?_lcd_write 0030  
                   ___wmul@multiplier 0026                        ?_RtccWriteTime 0026  
        ?_button_B_submenu_activation 0026                             lcd_init@i 002A  
               __size_of_RtccReadDate 008E                          ??_lcd_comand 002A  
                           lcd_putc@c 002D                 __size_of_RtccReadTime 006E  
                        ??_lcd_gotoxy 002B                             copy_data0 2126  
                ??_home_state_refresh 0049                              _Read_RTC 16FA  
                     ??_activity_home 0036                       ??_activity_menu 0036  
                _activity_submenu_pin 1C4E                       _lcd_send_nibble 1A90  
                            __Hrparam 0000                              _RtccDate 001E  
                            __Lrparam 0000            ?_action_submenu_selector_0 0026  
          ?_action_submenu_selector_1 0026                              _RtccTime 0022  
                            _RtccWrOn 256A                    __end_of_lcd_comand 25AE  
                  __end_of_lcd_gotoxy 24DE                          _RtccReadDate 1900  
                    __size_of___awdiv 0096                          _RtccReadTime 1B7A  
                _action_menu_selector 20B0                      __size_of___lwdiv 005C  
                    __size_of___lwmod 004C                          _RtccTimeDate 0068  
                          sprintf@val 0043                 __end_of_button_B_menu 20B0  
       ??_button_B_submenu_activation 0036                            strcat@from 0028  
                         _button_hash 2556                         ?_activity_pin 0026  
                            _activity 0003           __end_of_pin_input_validator 23A8  
                    __size_of_isdigit 0022                       ___lwdiv@divisor 0028  
                         ??_Write_RTC 0033                       ___lwdiv@counter 002C  
                            __ptext10 2556                              __ptext11 2376  
                            __ptext20 1C4E                              __ptext12 1EEC  
                            __ptext21 1CB4                              __ptext13 25CC  
                            __ptext30 217E                              __ptext22 1D1A  
                            __ptext14 25B8                              __ptext31 20B0  
                            __ptext23 1D80                              __ptext15 2522  
                            __ptext40 2492                              __ptext32 21C0  
                            __ptext24 22C8                              __ptext16 198E  
                            __ptext41 1F88                              __ptext33 2202  
                            __ptext25 1F3A                              __ptext17 2342  
                            __ptext50 1A10                              __ptext42 1DE6  
                            __ptext34 2244                              __ptext26 23A8  
                            __ptext18 2308                              __ptext51 23DA  
                            __ptext43 2500                              __ptext35 2286  
                            __ptext27 25A0                              __ptext19 2068  
                            __ptext52 1A90                              __ptext44 25C2  
                            __ptext36 1E42                              __ptext28 240C  
                            __ptext53 257C                              __ptext45 2468  
                            __ptext37 186E                              __ptext29 213C  
                            __ptext54 258E                              __ptext46 253E  
                            __ptext38 0FA2                              __ptext55 16FA  
                            __ptext47 1E98                              __ptext39 24DE  
                            __ptext56 1B7A                              __ptext48 1FD4  
                            __ptext57 1900                              __ptext49 24BA  
                            _lcd_init 1A10                              _lcd_putc 1FD4  
                    __size_of_sprintf 0264                            strcpy@from 0028  
              __size_of_lcd_send_byte 0032                              _button_A 22C8  
                            _button_B 2342                              _button_C 2522  
                            _button_D 25B8                         __size_of_main 002C  
               __end_of_button_number 1C4E                 ?_activity_submenu_pin 0026  
                            _minuto_d 0051                              _minuto_u 0052  
               ?_action_menu_selector 0026                         ??_Delay1KTCYx 0026  
                     ??_RtccWriteDate 0029           __size_of_home_clock_refresh 0092  
                     ??_RtccWriteTime 0029   __end_of_activity_submenu_activation 1DE6  
         _activity_submenu_activation 1D80          __size_of_reset_home_callback 000A  
                         ??_lcd_putrs 0030                           ??_lcd_write 0036  
            __size_of_button_asterisk 0006                        ??_activity_pin 0036  
                         _OSCTUNEbits 000F9B                            _INTCONbits 000FF2  
                  RtccWriteTime@wasOn 002A                  __end_of_Delay100TCYx 258E  
       ??_activity_submenu_activation 0036                              isdigit@c 0028  
                           sprintf@ap 0040               __end_of_lcd_send_nibble 1B06  
                           sprintf@sp 0032                      ___lwmod@dividend 002D  
__size_of_button_B_submenu_activation 003A                   _check_home_callback 2500  
                          _OSCCONbits 000FD3              ??_activity_submenu_alarm 0036  
            ??_activity_submenu_clock 0036                 RtccWriteDate@tempYear 002C  
                       _lcd_send_byte 23DA      __size_of_action_submenu_selector 0030  
                          _RTCCFGbits 000F3F                              sprintf@c 0048  
                            sprintf@f 0034                              strcat@cp 002A  
                            strcat@to 0026                  ?_check_home_callback 0026  
                            strcmp@s1 0026                              strcmp@s2 0028  
                     ___lwmod@divisor 002F                              strcpy@cp 002A  
                            strcpy@to 0026                   __end_of_Delay1KTCYx 25A0  
                     ___lwmod@counter 0031        pin_input_validator@comparision 0036  
                RtccWriteDate@wasAlrm 002B                  RtccWriteDate@wasWrEn 002E  
                   ?_keyboard_control 0026                    ??_keyboard_control 0049  
              ??_activity_submenu_pin 0036                 lcd_send_nibble@nibble 0027  
