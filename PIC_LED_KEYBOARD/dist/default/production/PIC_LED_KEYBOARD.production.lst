

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Sep 17 19:17:22 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           	psect	idataCOMRAM
    89  0029F0                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _anio
    93  0029F0  0010               	dw	16
    94                           
    95                           ;initializer for _dia
    96  0029F2  0006               	dw	6
    97                           
    98                           ;initializer for _diasem
    99  0029F4  0002               	dw	2
   100                           
   101                           ;initializer for _hora
   102  0029F6  0012               	dw	18
   103                           
   104                           ;initializer for _mes
   105  0029F8  0009               	dw	9
   106                           
   107                           	psect	smallconst
   108  000F00                     __psmallconst:
   109                           	opt stack 0
   110  000F00  00                 	db	0
   111  000F01                     _dpowers:
   112                           	opt stack 0
   113  000F01  0001               	dw	1
   114  000F03  000A               	dw	10
   115  000F05  0064               	dw	100
   116  000F07  03E8               	dw	1000
   117  000F09  2710               	dw	10000
   118  000F0B                     __end_of_dpowers:
   119                           	opt stack 0
   120  000F0B                     _LCD_INIT_STRING:
   121                           	opt stack 0
   122  000F0B  28                 	db	40
   123  000F0C  0C                 	db	12
   124  000F0D  01                 	db	1
   125  000F0E  06                 	db	6
   126  000F0F                     __end_of_LCD_INIT_STRING:
   127                           	opt stack 0
   128  000F0F                     STR_15:
   129                           
   130                           ; BSR set to: 15
   131  000F0F  49                 	db	73	;'I'
   132  000F10  6E                 	db	110	;'n'
   133  000F11  67                 	db	103	;'g'
   134  000F12  72                 	db	114	;'r'
   135  000F13  65                 	db	101	;'e'
   136  000F14  73                 	db	115	;'s'
   137  000F15  65                 	db	101	;'e'
   138  000F16  20                 	db	32
   139  000F17  73                 	db	115	;'s'
   140  000F18  75                 	db	117	;'u'
   141  000F19  20                 	db	32
   142  000F1A  50                 	db	80	;'P'
   143  000F1B  49                 	db	73	;'I'
   144  000F1C  4E                 	db	78	;'N'
   145  000F1D  3A                 	db	58	;':'
   146  000F1E  00                 	db	0
   147  000F1F                     STR_41:
   148                           
   149                           ; BSR set to: 15
   150  000F1F  25                 	db	37
   151  000F20  30                 	db	48	;'0'
   152  000F21  32                 	db	50	;'2'
   153  000F22  75                 	db	117	;'u'
   154  000F23  2F                 	db	47
   155  000F24  25                 	db	37
   156  000F25  30                 	db	48	;'0'
   157  000F26  32                 	db	50	;'2'
   158  000F27  75                 	db	117	;'u'
   159  000F28  2F                 	db	47
   160  000F29  25                 	db	37
   161  000F2A  30                 	db	48	;'0'
   162  000F2B  32                 	db	50	;'2'
   163  000F2C  75                 	db	117	;'u'
   164  000F2D  00                 	db	0
   165  000F2E                     STR_42:
   166                           
   167                           ; BSR set to: 15
   168  000F2E  25                 	db	37
   169  000F2F  30                 	db	48	;'0'
   170  000F30  32                 	db	50	;'2'
   171  000F31  75                 	db	117	;'u'
   172  000F32  3A                 	db	58	;':'
   173  000F33  25                 	db	37
   174  000F34  30                 	db	48	;'0'
   175  000F35  32                 	db	50	;'2'
   176  000F36  75                 	db	117	;'u'
   177  000F37  3A                 	db	58	;':'
   178  000F38  25                 	db	37
   179  000F39  30                 	db	48	;'0'
   180  000F3A  32                 	db	50	;'2'
   181  000F3B  75                 	db	117	;'u'
   182  000F3C  00                 	db	0
   183  000F3D                     STR_39:
   184                           
   185                           ; BSR set to: 15
   186  000F3D  4E                 	db	78	;'N'
   187  000F3E  75                 	db	117	;'u'
   188  000F3F  65                 	db	101	;'e'
   189  000F40  76                 	db	118	;'v'
   190  000F41  6F                 	db	111	;'o'
   191  000F42  20                 	db	32
   192  000F43  50                 	db	80	;'P'
   193  000F44  49                 	db	73	;'I'
   194  000F45  4E                 	db	78	;'N'
   195  000F46  3A                 	db	58	;':'
   196  000F47  00                 	db	0
   197  000F48                     STR_27:
   198                           
   199                           ; BSR set to: 15
   200  000F48  56                 	db	86	;'V'
   201  000F49  6F                 	db	111	;'o'
   202  000F4A  6C                 	db	108	;'l'
   203  000F4B  75                 	db	117	;'u'
   204  000F4C  6D                 	db	109	;'m'
   205  000F4D  65                 	db	101	;'e'
   206  000F4E  6E                 	db	110	;'n'
   207  000F4F  00                 	db	0
   208  000F50                     STR_36:
   209                           
   210                           ; BSR set to: 15
   211  000F50  43                 	db	67	;'C'
   212  000F51  61                 	db	97	;'a'
   213  000F52  6D                 	db	109	;'m'
   214  000F53  62                 	db	98	;'b'
   215  000F54  69                 	db	105	;'i'
   216  000F55  61                 	db	97	;'a'
   217  000F56  72                 	db	114	;'r'
   218  000F57  00                 	db	0
   219  000F58                     STR_16:
   220                           
   221                           ; BSR set to: 15
   222  000F58  41                 	db	65	;'A'
   223  000F59  63                 	db	99	;'c'
   224  000F5A  74                 	db	116	;'t'
   225  000F5B  69                 	db	105	;'i'
   226  000F5C  76                 	db	118	;'v'
   227  000F5D  61                 	db	97	;'a'
   228  000F5E  72                 	db	114	;'r'
   229  000F5F  00                 	db	0
   230  000F60                     STR_33:
   231                           
   232                           ; BSR set to: 15
   233  000F60  42                 	db	66	;'B'
   234  000F61  65                 	db	101	;'e'
   235  000F62  65                 	db	101	;'e'
   236  000F63  70                 	db	112	;'p'
   237  000F64  20                 	db	32
   238  000F65  31                 	db	49	;'1'
   239  000F66  00                 	db	0
   240  000F67                     STR_47:
   241                           
   242                           ; BSR set to: 15
   243  000F67  54                 	db	84	;'T'
   244  000F68  4F                 	db	79	;'O'
   245  000F69  4E                 	db	78	;'N'
   246  000F6A  4F                 	db	79	;'O'
   247  000F6B  3A                 	db	58	;':'
   248  000F6C  31                 	db	49	;'1'
   249  000F6D  00                 	db	0
   250  000F6E                     STR_34:
   251                           
   252                           ; BSR set to: 15
   253  000F6E  42                 	db	66	;'B'
   254  000F6F  65                 	db	101	;'e'
   255  000F70  65                 	db	101	;'e'
   256  000F71  70                 	db	112	;'p'
   257  000F72  20                 	db	32
   258  000F73  32                 	db	50	;'2'
   259  000F74  00                 	db	0
   260  000F75                     STR_48:
   261                           
   262                           ; BSR set to: 15
   263  000F75  54                 	db	84	;'T'
   264  000F76  4F                 	db	79	;'O'
   265  000F77  4E                 	db	78	;'N'
   266  000F78  4F                 	db	79	;'O'
   267  000F79  3A                 	db	58	;':'
   268  000F7A  32                 	db	50	;'2'
   269  000F7B  00                 	db	0
   270  000F7C                     STR_45:
   271                           
   272                           ; BSR set to: 15
   273  000F7C  56                 	db	86	;'V'
   274  000F7D  4F                 	db	79	;'O'
   275  000F7E  4C                 	db	76	;'L'
   276  000F7F  3A                 	db	58	;':'
   277  000F80  42                 	db	66	;'B'
   278  000F81  41                 	db	65	;'A'
   279  000F82  00                 	db	0
   280  000F83                     STR_43:
   281                           
   282                           ; BSR set to: 15
   283  000F83  41                 	db	65	;'A'
   284  000F84  43                 	db	67	;'C'
   285  000F85  54                 	db	84	;'T'
   286  000F86  3A                 	db	58	;':'
   287  000F87  53                 	db	83	;'S'
   288  000F88  49                 	db	73	;'I'
   289  000F89  00                 	db	0
   290  000F8A                     STR_46:
   291                           
   292                           ; BSR set to: 15
   293  000F8A  56                 	db	86	;'V'
   294  000F8B  4F                 	db	79	;'O'
   295  000F8C  4C                 	db	76	;'L'
   296  000F8D  3A                 	db	58	;':'
   297  000F8E  41                 	db	65	;'A'
   298  000F8F  4C                 	db	76	;'L'
   299  000F90  00                 	db	0
   300  000F91                     STR_44:
   301                           
   302                           ; BSR set to: 15
   303  000F91  41                 	db	65	;'A'
   304  000F92  43                 	db	67	;'C'
   305  000F93  54                 	db	84	;'T'
   306  000F94  3A                 	db	58	;':'
   307  000F95  4E                 	db	78	;'N'
   308  000F96  4F                 	db	79	;'O'
   309  000F97  00                 	db	0
   310  000F98                     STR_19:
   311                           
   312                           ; BSR set to: 15
   313  000F98  41                 	db	65	;'A'
   314  000F99  6C                 	db	108	;'l'
   315  000F9A  61                 	db	97	;'a'
   316  000F9B  72                 	db	114	;'r'
   317  000F9C  6D                 	db	109	;'m'
   318  000F9D  61                 	db	97	;'a'
   319  000F9E  00                 	db	0
   320  000F9F                     STR_26:
   321                           
   322                           ; BSR set to: 15
   323  000F9F  53                 	db	83	;'S'
   324  000FA0  69                 	db	105	;'i'
   325  000FA1  72                 	db	114	;'r'
   326  000FA2  65                 	db	101	;'e'
   327  000FA3  6E                 	db	110	;'n'
   328  000FA4  61                 	db	97	;'a'
   329  000FA5  00                 	db	0
   330  000FA6                     STR_21:
   331                           
   332                           ; BSR set to: 15
   333  000FA6  46                 	db	70	;'F'
   334  000FA7  65                 	db	101	;'e'
   335  000FA8  63                 	db	99	;'c'
   336  000FA9  68                 	db	104	;'h'
   337  000FAA  61                 	db	97	;'a'
   338  000FAB  00                 	db	0
   339  000FAC                     STR_17:
   340                           
   341                           ; BSR set to: 15
   342  000FAC  52                 	db	82	;'R'
   343  000FAD  65                 	db	101	;'e'
   344  000FAE  6C                 	db	108	;'l'
   345  000FAF  6F                 	db	111	;'o'
   346  000FB0  6A                 	db	106	;'j'
   347  000FB1  00                 	db	0
   348  000FB2                     STR_37:
   349                           
   350                           ; BSR set to: 15
   351  000FB2  52                 	db	82	;'R'
   352  000FB3  65                 	db	101	;'e'
   353  000FB4  73                 	db	115	;'s'
   354  000FB5  65                 	db	101	;'e'
   355  000FB6  74                 	db	116	;'t'
   356  000FB7  00                 	db	0
   357  000FB8                     STR_40:
   358                           
   359                           ; BSR set to: 15
   360  000FB8  31                 	db	49	;'1'
   361  000FB9  32                 	db	50	;'2'
   362  000FBA  33                 	db	51	;'3'
   363  000FBB  34                 	db	52	;'4'
   364  000FBC  00                 	db	0
   365  000FBD                     STR_22:
   366                           
   367                           ; BSR set to: 15
   368  000FBD  48                 	db	72	;'H'
   369  000FBE  6F                 	db	111	;'o'
   370  000FBF  72                 	db	114	;'r'
   371  000FC0  61                 	db	97	;'a'
   372  000FC1  00                 	db	0
   373  000FC2                     STR_30:
   374                           
   375                           ; BSR set to: 15
   376  000FC2  42                 	db	66	;'B'
   377  000FC3  61                 	db	97	;'a'
   378  000FC4  6A                 	db	106	;'j'
   379  000FC5  6F                 	db	111	;'o'
   380  000FC6  00                 	db	0
   381  000FC7                     STR_28:
   382                           
   383                           ; BSR set to: 15
   384  000FC7  54                 	db	84	;'T'
   385  000FC8  6F                 	db	111	;'o'
   386  000FC9  6E                 	db	110	;'n'
   387  000FCA  6F                 	db	111	;'o'
   388  000FCB  00                 	db	0
   389  000FCC                     STR_31:
   390                           
   391                           ; BSR set to: 15
   392  000FCC  41                 	db	65	;'A'
   393  000FCD  6C                 	db	108	;'l'
   394  000FCE  74                 	db	116	;'t'
   395  000FCF  6F                 	db	111	;'o'
   396  000FD0  00                 	db	0
   397  000FD1                     STR_50:
   398                           
   399                           ; BSR set to: 15
   400  000FD1  25                 	db	37
   401  000FD2  30                 	db	48	;'0'
   402  000FD3  31                 	db	49	;'1'
   403  000FD4  75                 	db	117	;'u'
   404  000FD5  00                 	db	0
   405  000FD6                     STR_1:
   406                           
   407                           ; BSR set to: 15
   408  000FD6  58                 	db	88	;'X'
   409  000FD7  32                 	db	50	;'2'
   410  000FD8  38                 	db	56	;'8'
   411  000FD9  00                 	db	0
   412  000FDA                     STR_18:
   413                           
   414                           ; BSR set to: 15
   415  000FDA  50                 	db	80	;'P'
   416  000FDB  69                 	db	105	;'i'
   417  000FDC  6E                 	db	110	;'n'
   418  000FDD  00                 	db	0
   419  000FDE                     STR_24:
   420                           
   421                           ; BSR set to: 15
   422  000FDE  53                 	db	83	;'S'
   423  000FDF  69                 	db	105	;'i'
   424  000FE0  00                 	db	0
   425  000FE1                     STR_25:
   426                           
   427                           ; BSR set to: 15
   428  000FE1  4E                 	db	78	;'N'
   429  000FE2  6F                 	db	111	;'o'
   430  000FE3  00                 	db	0
   431  000FE4                     STR_3:
   432                           
   433                           ; BSR set to: 15
   434  000FE4  20                 	db	32
   435  000FE5  00                 	db	0
   436  000FE6                     STR_49:
   437                           
   438                           ; BSR set to: 15
   439  000FE6  2A                 	db	42
   440  000FE7  00                 	db	0
   441  000FE8                     STR_2:
   442                           
   443                           ; BSR set to: 15
   444  000FE8  3E                 	db	62	;'>'
   445  000FE9  00                 	db	0
   446  0000                     
   447                           ; #config settings
   448  000FEA  00                 	db	0	; dummy byte at the end
   449  0000                     
   450                           	psect	nvCOMRAM
   451  000059                     __pnvCOMRAM:
   452                           	opt stack 0
   453  000059                     _anio_d:
   454                           	opt stack 0
   455  000059                     	ds	1
   456  00005A                     _fecha_d:
   457                           	opt stack 0
   458  00005A                     	ds	1
   459  00005B                     _hora_d:
   460                           	opt stack 0
   461  00005B                     	ds	1
   462  00005C                     _mes_d:
   463                           	opt stack 0
   464  00005C                     	ds	1
   465  00005D                     _minuto_d:
   466                           	opt stack 0
   467  00005D                     	ds	1
   468  00005E                     _segundo_d:
   469                           	opt stack 0
   470  00005E                     	ds	1
   471                           
   472                           	psect	nvBANK0
   473  00009E                     __pnvBANK0:
   474                           	opt stack 0
   475  00009E                     _anio_u:
   476                           	opt stack 0
   477  00009E                     	ds	1
   478  00009F                     _dia_semana:
   479                           	opt stack 0
   480  00009F                     	ds	1
   481  0000A0                     _fecha_u:
   482                           	opt stack 0
   483  0000A0                     	ds	1
   484  0000A1                     _hora_u:
   485                           	opt stack 0
   486  0000A1                     	ds	1
   487  0000A2                     _mes_u:
   488                           	opt stack 0
   489  0000A2                     	ds	1
   490  0000A3                     _minuto_u:
   491                           	opt stack 0
   492  0000A3                     	ds	1
   493  0000A4                     _segundo_u:
   494                           	opt stack 0
   495  0000A4                     	ds	1
   496  0000                     _ANCON0	set	3912
   497  0000                     _ANCON1	set	3913
   498  0000                     _RTCCFG	set	3903
   499  0000                     _RTCCFGbits	set	3903
   500  0000                     _ADCON0	set	4034
   501  0000                     _ADCON1	set	4033
   502  0000                     _ALRMCFGbits	set	3985
   503  0000                     _EECON2	set	4007
   504  0000                     _INTCONbits	set	4082
   505  0000                     _LATAbits	set	3977
   506  0000                     _LATBbits	set	3978
   507  0000                     _OSCCONbits	set	4051
   508  0000                     _OSCTUNEbits	set	3995
   509  0000                     _PIE3bits	set	4003
   510  0000                     _PORTAbits	set	3968
   511  0000                     _PORTCbits	set	3970
   512  0000                     _RTCVALH	set	3993
   513  0000                     _RTCVALL	set	3992
   514  0000                     _T1CONbits	set	4045
   515  0000                     _TRISA	set	3986
   516  0000                     _TRISB	set	3987
   517  0000                     _TRISBbits	set	3987
   518  0000                     _TRISC	set	3988
   519                           
   520                           	psect	cinit
   521  002490                     __pcinit:
   522                           	opt stack 0
   523  002490                     start_initialization:
   524                           	opt stack 0
   525  002490                     __initialization:
   526                           	opt stack 0
   527                           
   528                           ; Clear objects allocated to BANK0 (62 bytes)
   529  002490  EE00  F060         	lfsr	0,__pbssBANK0
   530  002494  0E3E               	movlw	62
   531  002496                     clear_0:
   532  002496  6AEE               	clrf	postinc0,c
   533  002498  06E8               	decf	wreg,f,c
   534  00249A  E1FD               	bnz	clear_0
   535                           
   536                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   537  00249C  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   538                           
   539                           ; Clear objects allocated to COMRAM (41 bytes)
   540  00249E  EE00  F001         	lfsr	0,__pbssCOMRAM
   541  0024A2  0E29               	movlw	41
   542  0024A4                     clear_1:
   543  0024A4  6AEE               	clrf	postinc0,c
   544  0024A6  06E8               	decf	wreg,f,c
   545  0024A8  E1FD               	bnz	clear_1
   546                           
   547                           ; Initialize objects allocated to COMRAM (10 bytes)
   548                           ; load TBLPTR registers with __pidataCOMRAM
   549  0024AA  0EF0               	movlw	low __pidataCOMRAM
   550  0024AC  6EF6               	movwf	tblptrl,c
   551  0024AE  0E29               	movlw	high __pidataCOMRAM
   552  0024B0  6EF7               	movwf	tblptrh,c
   553  0024B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   554  0024B4  6EF8               	movwf	tblptru,c
   555  0024B6  EE00  F04F         	lfsr	0,__pdataCOMRAM
   556  0024BA  EE10 F00A          	lfsr	1,10
   557  0024BE                     copy_data0:
   558  0024BE  0009               	tblrd		*+
   559  0024C0  CFF5 FFEE          	movff	tablat,postinc0
   560  0024C4  50E5               	movf	postdec1,w,c
   561  0024C6  50E1               	movf	fsr1l,w,c
   562  0024C8  E1FA               	bnz	copy_data0
   563  0024CA                     end_of_initialization:
   564                           	opt stack 0
   565  0024CA                     __end_of__initialization:
   566                           	opt stack 0
   567  0024CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   568  0024CC  6EF8               	movwf	tblptru,c
   569  0024CE  0100               	movlb	0
   570  0024D0  EF0A  F014         	goto	_main	;jump to C main() function
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580                           	psect	bitbssCOMRAM
   581  0002F8                     __pbitbssCOMRAM:
   582                           	opt stack 0
   583  0002F8                     _flag:
   584                           	opt stack 0
   585  0002F8                     	ds	1
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           postdec1	equ	0xFE5
   593                           fsr1l	equ	0xFE1
   594                           
   595                           	psect	bssCOMRAM
   596  000001                     __pbssCOMRAM:
   597                           	opt stack 0
   598  000001                     _a:
   599                           	opt stack 0
   600  000001                     	ds	2
   601  000003                     _activity:
   602                           	opt stack 0
   603  000003                     	ds	2
   604  000005                     _alarm_tone:
   605                           	opt stack 0
   606  000005                     	ds	2
   607  000007                     _alarm_volume:
   608                           	opt stack 0
   609  000007                     	ds	2
   610  000009                     _b:
   611                           	opt stack 0
   612  000009                     	ds	2
   613  00000B                     _config_widget:
   614                           	opt stack 0
   615  00000B                     	ds	2
   616  00000D                     _config_widget_time:
   617                           	opt stack 0
   618  00000D                     	ds	2
   619  00000F                     _home_callback:
   620                           	opt stack 0
   621  00000F                     	ds	2
   622  000011                     _home_callback_delay:
   623                           	opt stack 0
   624  000011                     	ds	2
   625  000013                     _i:
   626                           	opt stack 0
   627  000013                     	ds	2
   628  000015                     _j:
   629                           	opt stack 0
   630  000015                     	ds	2
   631  000017                     _menu_selected:
   632                           	opt stack 0
   633  000017                     	ds	2
   634  000019                     _minuto:
   635                           	opt stack 0
   636  000019                     	ds	2
   637  00001B                     _segundo:
   638                           	opt stack 0
   639  00001B                     	ds	2
   640  00001D                     _state:
   641                           	opt stack 0
   642  00001D                     	ds	2
   643  00001F                     _submenu_selected:
   644                           	opt stack 0
   645  00001F                     	ds	2
   646  000021                     _key:
   647                           	opt stack 0
   648  000021                     	ds	1
   649  000022                     _RtccDate:
   650                           	opt stack 0
   651  000022                     	ds	4
   652  000026                     _RtccTime:
   653                           	opt stack 0
   654  000026                     	ds	4
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           postdec1	equ	0xFE5
   662                           fsr1l	equ	0xFE1
   663                           
   664                           	psect	dataCOMRAM
   665  00004F                     __pdataCOMRAM:
   666                           	opt stack 0
   667  00004F                     _anio:
   668                           	opt stack 0
   669  00004F                     	ds	2
   670  000051                     _dia:
   671                           	opt stack 0
   672  000051                     	ds	2
   673  000053                     _diasem:
   674                           	opt stack 0
   675  000053                     	ds	2
   676  000055                     _hora:
   677                           	opt stack 0
   678  000055                     	ds	2
   679  000057                     _mes:
   680                           	opt stack 0
   681  000057                     	ds	2
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           postinc0	equ	0xFEE
   687                           wreg	equ	0xFE8
   688                           postdec1	equ	0xFE5
   689                           fsr1l	equ	0xFE1
   690                           
   691                           	psect	bssBANK0
   692  000060                     __pbssBANK0:
   693                           	opt stack 0
   694  000060                     _RtccAlrmTimeDate:
   695                           	opt stack 0
   696  000060                     	ds	8
   697  000068                     _RtccTimeDate:
   698                           	opt stack 0
   699  000068                     	ds	8
   700  000070                     _Rtcc_read_TimeDate:
   701                           	opt stack 0
   702  000070                     	ds	8
   703  000078                     _RtccTimeVal:
   704                           	opt stack 0
   705  000078                     	ds	4
   706  00007C                     _c:
   707                           	opt stack 0
   708  00007C                     	ds	2
   709  00007E                     _k:
   710                           	opt stack 0
   711  00007E                     	ds	2
   712  000080                     _buffer1:
   713                           	opt stack 0
   714  000080                     	ds	20
   715  000094                     _pin:
   716                           	opt stack 0
   717  000094                     	ds	5
   718  000099                     _pin_input:
   719                           	opt stack 0
   720  000099                     	ds	5
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           postdec1	equ	0xFE5
   728                           fsr1l	equ	0xFE1
   729                           
   730                           	psect	cstackCOMRAM
   731  00002A                     __pcstackCOMRAM:
   732                           	opt stack 0
   733  00002A                     ??_isdigit:
   734  00002A                     ??_lcd_send_nibble:
   735  00002A                     ?_strcmp:
   736                           	opt stack 0
   737  00002A                     ?___wmul:
   738                           	opt stack 0
   739  00002A                     ?___awdiv:
   740                           	opt stack 0
   741  00002A                     ?___lwdiv:
   742                           	opt stack 0
   743  00002A                     Delay100TCYx@unit:
   744                           	opt stack 0
   745  00002A                     Delay1KTCYx@unit:
   746                           	opt stack 0
   747  00002A                     RtccReadDate@pDt:
   748                           	opt stack 0
   749  00002A                     RtccReadTime@pTm:
   750                           	opt stack 0
   751  00002A                     RtccWriteDate@pDt:
   752                           	opt stack 0
   753  00002A                     RtccWriteTime@pTm:
   754                           	opt stack 0
   755  00002A                     ___wmul@multiplier:
   756                           	opt stack 0
   757  00002A                     ___awdiv@dividend:
   758                           	opt stack 0
   759  00002A                     ___lwdiv@dividend:
   760                           	opt stack 0
   761  00002A                     strcat@to:
   762                           	opt stack 0
   763  00002A                     strcmp@s1:
   764                           	opt stack 0
   765  00002A                     strcpy@to:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x0
   769  00002A                     	ds	1
   770  00002B                     lcd_send_nibble@nibble:
   771                           	opt stack 0
   772  00002B                     _isdigit$2191:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x1
   776  00002B                     	ds	1
   777  00002C                     lcd_send_byte@n:
   778                           	opt stack 0
   779  00002C                     RtccWriteDate@di:
   780                           	opt stack 0
   781  00002C                     RtccWriteTime@di:
   782                           	opt stack 0
   783  00002C                     isdigit@c:
   784                           	opt stack 0
   785  00002C                     ___wmul@multiplicand:
   786                           	opt stack 0
   787  00002C                     ___awdiv@divisor:
   788                           	opt stack 0
   789  00002C                     ___lwdiv@divisor:
   790                           	opt stack 0
   791  00002C                     strcat@from:
   792                           	opt stack 0
   793  00002C                     strcmp@s2:
   794                           	opt stack 0
   795  00002C                     strcpy@from:
   796                           	opt stack 0
   797  00002C                     RtccReadDate@rTD1:
   798                           	opt stack 0
   799  00002C                     RtccReadTime@rTD1:
   800                           	opt stack 0
   801                           
   802                           ; 8 bytes @ 0x2
   803  00002C                     	ds	1
   804  00002D                     lcd_send_byte@address:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x3
   808  00002D                     	ds	1
   809  00002E                     ??_strcmp:
   810  00002E                     lcd_init@i:
   811                           	opt stack 0
   812  00002E                     lcd_gotoxy@y:
   813                           	opt stack 0
   814  00002E                     lcd_comand@d:
   815                           	opt stack 0
   816  00002E                     RtccWriteDate@wasOn:
   817                           	opt stack 0
   818  00002E                     RtccWriteTime@wasOn:
   819                           	opt stack 0
   820  00002E                     ___awdiv@counter:
   821                           	opt stack 0
   822  00002E                     ___wmul@product:
   823                           	opt stack 0
   824  00002E                     ___lwdiv@quotient:
   825                           	opt stack 0
   826  00002E                     strcat@cp:
   827                           	opt stack 0
   828  00002E                     strcpy@cp:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x4
   832  00002E                     	ds	1
   833  00002F                     lcd_gotoxy@x:
   834                           	opt stack 0
   835  00002F                     RtccWriteDate@wasAlrm:
   836                           	opt stack 0
   837  00002F                     RtccWriteTime@wasAlrm:
   838                           	opt stack 0
   839  00002F                     ___awdiv@sign:
   840                           	opt stack 0
   841  00002F                     strcmp@r:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x5
   845  00002F                     	ds	1
   846  000030                     lcd_gotoxy@address:
   847                           	opt stack 0
   848  000030                     RtccWriteTime@wasWrEn:
   849                           	opt stack 0
   850  000030                     ___lwdiv@counter:
   851                           	opt stack 0
   852  000030                     RtccWriteDate@tempYear:
   853                           	opt stack 0
   854  000030                     ___awdiv@quotient:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x6
   858  000030                     	ds	1
   859  000031                     ?___lwmod:
   860                           	opt stack 0
   861  000031                     lcd_putc@c:
   862                           	opt stack 0
   863  000031                     RtccWriteTime@tempMinSec:
   864                           	opt stack 0
   865  000031                     ___lwmod@dividend:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x7
   869  000031                     	ds	1
   870  000032                     RtccWriteDate@wasWrEn:
   871                           	opt stack 0
   872  000032                     lcd_putrs@ptr:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x8
   876  000032                     	ds	1
   877  000033                     RtccWriteDate@tempDayMonth:
   878                           	opt stack 0
   879  000033                     RtccWriteTime@tempHourWDay:
   880                           	opt stack 0
   881  000033                     ___lwmod@divisor:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x9
   885  000033                     	ds	1
   886  000034                     lcd_write@column:
   887                           	opt stack 0
   888  000034                     RtccReadDate@rTD0:
   889                           	opt stack 0
   890  000034                     RtccReadTime@rTD0:
   891                           	opt stack 0
   892                           
   893                           ; 8 bytes @ 0xA
   894  000034                     	ds	1
   895  000035                     ___lwmod@counter:
   896                           	opt stack 0
   897  000035                     RtccWriteDate@tempHourWDay:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0xB
   901  000035                     	ds	1
   902  000036                     ?_sprintf:
   903                           	opt stack 0
   904  000036                     lcd_write@row:
   905                           	opt stack 0
   906  000036                     sprintf@sp:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0xC
   910  000036                     	ds	1
   911  000037                     
   912                           ; 0 bytes @ 0xD
   913  000037                     	ds	1
   914  000038                     lcd_write@string:
   915                           	opt stack 0
   916  000038                     sprintf@f:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0xE
   920  000038                     	ds	2
   921  00003A                     ??_action_menu_selector:
   922  00003A                     ??_action_submenu_selector:
   923  00003A                     ??_button_B_menu:
   924  00003A                     ??_button_B_submenu_activation:
   925  00003A                     ??_button_B_submenu_pin_config:
   926  00003A                     ??_button_B_submenu_siren_config:
   927  00003A                     ??_button_B_submenu_siren_volume:
   928  00003A                     ??_button_B_submenu_siren_tone:
   929  00003A                     
   930                           ; 0 bytes @ 0x10
   931  00003A                     	ds	2
   932  00003C                     ??_button_A:
   933  00003C                     ??_button_B:
   934                           
   935                           ; 0 bytes @ 0x12
   936  00003C                     	ds	4
   937  000040                     ??_sprintf:
   938                           
   939                           ; 0 bytes @ 0x16
   940  000040                     	ds	4
   941  000044                     sprintf@ap:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x1A
   945  000044                     	ds	2
   946  000046                     sprintf@flag:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x1C
   950  000046                     	ds	1
   951  000047                     sprintf@val:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x1D
   955  000047                     	ds	2
   956  000049                     sprintf@prec:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x1F
   960  000049                     	ds	1
   961  00004A                     sprintf@width:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x20
   965  00004A                     	ds	2
   966  00004C                     sprintf@c:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x22
   970  00004C                     	ds	1
   971  00004D                     ??_home_config_refresh:
   972  00004D                     ??_keyboard_control:
   973                           
   974                           ; 0 bytes @ 0x23
   975  00004D                     	ds	2
   976  00004F                     tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           postdec1	equ	0xFE5
   983                           fsr1l	equ	0xFE1
   984                           
   985                           ; 0 bytes @ 0x25
   986 ;;
   987 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   988 ;;
   989 ;; *************** function _main *****************
   990 ;; Defined at:
   991 ;;		line 717 in file "main.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2  445[None  ] int 
   998 ;; Registers used:
   999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1009 ;;Total ram usage:        0 bytes
  1010 ;; Hardware stack levels required when called:   11
  1011 ;; This function calls:
  1012 ;;		_Read_RTC
  1013 ;;		_activity_home
  1014 ;;		_check_home_callback
  1015 ;;		_home_clock_refresh
  1016 ;;		_home_config_refresh
  1017 ;;		_keyboard_control
  1018 ;;		_setup
  1019 ;; This function is called by:
  1020 ;;		Startup code after reset
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text0
  1025  002814                     __ptext0:
  1026                           	opt stack 0
  1027  002814                     _main:
  1028                           	opt stack 20
  1029                           
  1030                           ;main.c: 719: setup();
  1031                           
  1032                           ; BSR set to: 15
  1033                           ;incstack = 0
  1034  002814  ECD9  F00D         	call	_setup	;wreg free
  1035                           
  1036                           ;main.c: 720: activity_home();
  1037  002818  EC35  F014         	call	_activity_home	;wreg free
  1038  00281C  D000               	goto	l3889
  1039  00281E                     l3889:
  1040                           
  1041                           ;main.c: 724: check_home_callback();
  1042  00281E  EC93  F014         	call	_check_home_callback	;wreg free
  1043                           
  1044                           ;main.c: 725: Read_RTC();
  1045  002822  ECAC  F00B         	call	_Read_RTC	;wreg free
  1046                           
  1047                           ;main.c: 726: keyboard_control();
  1048  002826  ECD8  F009         	call	_keyboard_control	;wreg free
  1049                           
  1050                           ;main.c: 728: if(activity == 0){
  1051  00282A  5003               	movf	_activity,w,c
  1052  00282C  1004               	iorwf	_activity+1,w,c
  1053  00282E  A4D8               	btfss	status,2,c
  1054  002830  D7F6               	goto	l3889
  1055                           
  1056                           ;main.c: 729: home_clock_refresh();
  1057  002832  ECC8  F00C         	call	_home_clock_refresh	;wreg free
  1058                           
  1059                           ;main.c: 730: home_config_refresh();
  1060  002836  EC2A  F00C         	call	_home_config_refresh	;wreg free
  1061  00283A  D7F1               	goto	l3889
  1062                           
  1063                           ;main.c: 731: }
  1064                           ;main.c: 733: }
  1065                           ;main.c: 735: return 0;
  1066                           ;	Return value of _main is never used
  1067  00283C  EF00  F000         	goto	start
  1068  002840                     __end_of_main:
  1069                           	opt stack 0
  1070                           tblptru	equ	0xFF8
  1071                           tblptrh	equ	0xFF7
  1072                           tblptrl	equ	0xFF6
  1073                           tablat	equ	0xFF5
  1074                           postinc0	equ	0xFEE
  1075                           wreg	equ	0xFE8
  1076                           postdec1	equ	0xFE5
  1077                           fsr1l	equ	0xFE1
  1078                           status	equ	0xFD8
  1079                           
  1080 ;; *************** function _setup *****************
  1081 ;; Defined at:
  1082 ;;		line 677 in file "main.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;		None               void
  1089 ;; Registers used:
  1090 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    3
  1103 ;; This function calls:
  1104 ;;		_Write_RTC
  1105 ;;		_lcd_comand
  1106 ;;		_lcd_init
  1107 ;;		_pin_reset
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text1
  1114  001BB2                     __ptext1:
  1115                           	opt stack 0
  1116  001BB2                     _setup:
  1117                           	opt stack 27
  1118                           
  1119                           ;main.c: 679: OSCTUNEbits.INTSRC=1;
  1120                           
  1121                           ;incstack = 0
  1122  001BB2  8E9B               	bsf	3995,7,c	;volatile
  1123                           
  1124                           ;main.c: 680: OSCTUNEbits.PLLEN=0;
  1125  001BB4  9C9B               	bcf	3995,6,c	;volatile
  1126                           
  1127                           ;main.c: 681: OSCCONbits.IRCF0=1;
  1128  001BB6  88D3               	bsf	4051,4,c	;volatile
  1129                           
  1130                           ;main.c: 682: OSCCONbits.IRCF1=1;
  1131  001BB8  8AD3               	bsf	4051,5,c	;volatile
  1132                           
  1133                           ;main.c: 683: OSCCONbits.IRCF2=1;
  1134  001BBA  8CD3               	bsf	4051,6,c	;volatile
  1135                           
  1136                           ;main.c: 684: OSCCONbits.SCS0=0;
  1137  001BBC  90D3               	bcf	4051,0,c	;volatile
  1138                           
  1139                           ;main.c: 685: OSCCONbits.SCS1=0;
  1140  001BBE  92D3               	bcf	4051,1,c	;volatile
  1141                           
  1142                           ;main.c: 686: TRISA = 0b11110000;
  1143  001BC0  0EF0               	movlw	240
  1144  001BC2  6E92               	movwf	3986,c	;volatile
  1145                           
  1146                           ;main.c: 687: TRISB = 0;
  1147  001BC4  0E00               	movlw	0
  1148  001BC6  6E93               	movwf	3987,c	;volatile
  1149                           
  1150                           ;main.c: 688: TRISC = 0b00000111;
  1151  001BC8  0E07               	movlw	7
  1152  001BCA  6E94               	movwf	3988,c	;volatile
  1153                           
  1154                           ;main.c: 692: ANCON0=0b11111111;
  1155  001BCC  010F               	movlb	15	; () banked
  1156  001BCE  6948               	setf	72,b	;volatile
  1157                           
  1158                           ; BSR set to: 15
  1159                           ;main.c: 694: ANCON1=0b11111111;
  1160  001BD0  010F               	movlb	15	; () banked
  1161  001BD2  6949               	setf	73,b	;volatile
  1162                           
  1163                           ;main.c: 695: ADCON0=0b00101101;
  1164  001BD4  0E2D               	movlw	45
  1165  001BD6  6EC2               	movwf	4034,c	;volatile
  1166                           
  1167                           ;main.c: 696: ADCON1=0b00010000;
  1168  001BD8  0E10               	movlw	16
  1169  001BDA  6EC1               	movwf	4033,c	;volatile
  1170                           
  1171                           ; BSR set to: 15
  1172                           ;main.c: 697: RTCCFGbits.RTCEN=1;
  1173  001BDC  010F               	movlb	15	; () banked
  1174  001BDE  8F3F               	bsf	63,7,b	;volatile
  1175                           
  1176                           ; BSR set to: 15
  1177                           ;main.c: 698: RTCCFGbits.RTCWREN=1;
  1178  001BE0  010F               	movlb	15	; () banked
  1179  001BE2  8B3F               	bsf	63,5,b	;volatile
  1180                           
  1181                           ; BSR set to: 15
  1182                           ;main.c: 699: T1CONbits.T1OSCEN=1;
  1183  001BE4  86CD               	bsf	4045,3,c	;volatile
  1184                           
  1185                           ; BSR set to: 15
  1186                           ;main.c: 700: Write_RTC();
  1187  001BE6  EC28  F009         	call	_Write_RTC	;wreg free
  1188                           
  1189                           ;main.c: 701: lcd_init();
  1190  001BEA  EC99  F00D         	call	_lcd_init	;wreg free
  1191                           
  1192                           ;main.c: 702: lcd_comand(0b00001100);
  1193  001BEE  0E0C               	movlw	12
  1194  001BF0  ECF1  F014         	call	_lcd_comand
  1195                           
  1196                           ;main.c: 703: LATBbits.LATB1 = 1;;
  1197  001BF4  828A               	bsf	3978,1,c	;volatile
  1198                           
  1199                           ;main.c: 704: LATBbits.LATB0 = 1;;
  1200  001BF6  808A               	bsf	3978,0,c	;volatile
  1201                           
  1202                           ;main.c: 707: home_callback_delay = 50;
  1203  001BF8  0E00               	movlw	0
  1204  001BFA  6E12               	movwf	_home_callback_delay+1,c
  1205  001BFC  0E32               	movlw	50
  1206  001BFE  6E11               	movwf	_home_callback_delay,c
  1207                           
  1208                           ;main.c: 708: config_widget = 0;
  1209  001C00  0E00               	movlw	0
  1210  001C02  6E0C               	movwf	_config_widget+1,c
  1211  001C04  0E00               	movlw	0
  1212  001C06  6E0B               	movwf	_config_widget,c
  1213                           
  1214                           ;main.c: 709: menu_selected = 0;
  1215  001C08  0E00               	movlw	0
  1216  001C0A  6E18               	movwf	_menu_selected+1,c
  1217  001C0C  0E00               	movlw	0
  1218  001C0E  6E17               	movwf	_menu_selected,c
  1219                           
  1220                           ;main.c: 710: submenu_selected = 0;
  1221  001C10  0E00               	movlw	0
  1222  001C12  6E20               	movwf	_submenu_selected+1,c
  1223  001C14  0E00               	movlw	0
  1224  001C16  6E1F               	movwf	_submenu_selected,c
  1225                           
  1226                           ;main.c: 711: alarm_volume = 0;
  1227  001C18  0E00               	movlw	0
  1228  001C1A  6E08               	movwf	_alarm_volume+1,c
  1229  001C1C  0E00               	movlw	0
  1230  001C1E  6E07               	movwf	_alarm_volume,c
  1231                           
  1232                           ;main.c: 712: alarm_tone = 0;
  1233  001C20  0E00               	movlw	0
  1234  001C22  6E06               	movwf	_alarm_tone+1,c
  1235  001C24  0E00               	movlw	0
  1236  001C26  6E05               	movwf	_alarm_tone,c
  1237                           
  1238                           ;main.c: 713: pin_reset();
  1239  001C28  ECCB  F014         	call	_pin_reset	;wreg free
  1240  001C2C  0012               	return		;funcret
  1241  001C2E                     __end_of_setup:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           postdec1	equ	0xFE5
  1250                           fsr1l	equ	0xFE1
  1251                           status	equ	0xFD8
  1252                           
  1253 ;; *************** function _Write_RTC *****************
  1254 ;; Defined at:
  1255 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;		None               void
  1262 ;; Registers used:
  1263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    2
  1276 ;; This function calls:
  1277 ;;		_RtccWrOn
  1278 ;;		_RtccWriteDate
  1279 ;;		_RtccWriteTime
  1280 ;;		___awdiv
  1281 ;; This function is called by:
  1282 ;;		_setup
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text2
  1287  001250                     __ptext2:
  1288                           	opt stack 0
  1289  001250                     _Write_RTC:
  1290                           	opt stack 27
  1291                           
  1292                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1293                           
  1294                           ;incstack = 0
  1295  001250  ECD6  F014         	call	_RtccWrOn	;wreg free
  1296                           
  1297                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1298  001254  80A3               	bsf	4003,0,c	;volatile
  1299                           
  1300                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1301  001256  C01B  F02A         	movff	_segundo,___awdiv@dividend
  1302  00125A  C01C  F02B         	movff	_segundo+1,___awdiv@dividend+1
  1303  00125E  0E00               	movlw	0
  1304  001260  6E2D               	movwf	___awdiv@divisor+1,c
  1305  001262  0E0A               	movlw	10
  1306  001264  6E2C               	movwf	___awdiv@divisor,c
  1307  001266  EC7D  F00C         	call	___awdiv	;wreg free
  1308  00126A  502A               	movf	?___awdiv,w,c
  1309  00126C  6E5E               	movwf	_segundo_d,c
  1310                           
  1311                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1312  00126E  505E               	movf	_segundo_d,w,c
  1313  001270  0D0A               	mullw	10
  1314  001272  50F3               	movf	prodl,w,c
  1315  001274  0800               	sublw	0
  1316  001276  241B               	addwf	_segundo,w,c
  1317  001278  0100               	movlb	0	; () banked
  1318  00127A  6FA4               	movwf	_segundo_u& (0+255),b
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1322  00127C  505E               	movf	_segundo_d,w,c
  1323  00127E  0D10               	mullw	16
  1324  001280  50F3               	movf	prodl,w,c
  1325  001282  0100               	movlb	0	; () banked
  1326  001284  25A4               	addwf	_segundo_u& (0+255),w,b
  1327  001286  6E27               	movwf	_RtccTime+1,c
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1331  001288  C019  F02A         	movff	_minuto,___awdiv@dividend
  1332  00128C  C01A  F02B         	movff	_minuto+1,___awdiv@dividend+1
  1333  001290  0E00               	movlw	0
  1334  001292  6E2D               	movwf	___awdiv@divisor+1,c
  1335  001294  0E0A               	movlw	10
  1336  001296  6E2C               	movwf	___awdiv@divisor,c
  1337  001298  EC7D  F00C         	call	___awdiv	;wreg free
  1338  00129C  502A               	movf	?___awdiv,w,c
  1339  00129E  6E5D               	movwf	_minuto_d,c
  1340                           
  1341                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1342  0012A0  505D               	movf	_minuto_d,w,c
  1343  0012A2  0D0A               	mullw	10
  1344  0012A4  50F3               	movf	prodl,w,c
  1345  0012A6  0800               	sublw	0
  1346  0012A8  2419               	addwf	_minuto,w,c
  1347  0012AA  0100               	movlb	0	; () banked
  1348  0012AC  6FA3               	movwf	_minuto_u& (0+255),b
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1352  0012AE  505D               	movf	_minuto_d,w,c
  1353  0012B0  0D10               	mullw	16
  1354  0012B2  50F3               	movf	prodl,w,c
  1355  0012B4  0100               	movlb	0	; () banked
  1356  0012B6  25A3               	addwf	_minuto_u& (0+255),w,b
  1357  0012B8  6E28               	movwf	_RtccTime+2,c
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1361  0012BA  C055  F02A         	movff	_hora,___awdiv@dividend
  1362  0012BE  C056  F02B         	movff	_hora+1,___awdiv@dividend+1
  1363  0012C2  0E00               	movlw	0
  1364  0012C4  6E2D               	movwf	___awdiv@divisor+1,c
  1365  0012C6  0E0A               	movlw	10
  1366  0012C8  6E2C               	movwf	___awdiv@divisor,c
  1367  0012CA  EC7D  F00C         	call	___awdiv	;wreg free
  1368  0012CE  502A               	movf	?___awdiv,w,c
  1369  0012D0  6E5B               	movwf	_hora_d,c
  1370                           
  1371                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1372  0012D2  505B               	movf	_hora_d,w,c
  1373  0012D4  0D0A               	mullw	10
  1374  0012D6  50F3               	movf	prodl,w,c
  1375  0012D8  0800               	sublw	0
  1376  0012DA  2455               	addwf	_hora,w,c
  1377  0012DC  0100               	movlb	0	; () banked
  1378  0012DE  6FA1               	movwf	_hora_u& (0+255),b
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1382  0012E0  505B               	movf	_hora_d,w,c
  1383  0012E2  0D10               	mullw	16
  1384  0012E4  50F3               	movf	prodl,w,c
  1385  0012E6  0100               	movlb	0	; () banked
  1386  0012E8  25A1               	addwf	_hora_u& (0+255),w,b
  1387  0012EA  6E29               	movwf	_RtccTime+3,c
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1391  0012EC  C04F  F02A         	movff	_anio,___awdiv@dividend
  1392  0012F0  C050  F02B         	movff	_anio+1,___awdiv@dividend+1
  1393  0012F4  0E00               	movlw	0
  1394  0012F6  6E2D               	movwf	___awdiv@divisor+1,c
  1395  0012F8  0E0A               	movlw	10
  1396  0012FA  6E2C               	movwf	___awdiv@divisor,c
  1397  0012FC  EC7D  F00C         	call	___awdiv	;wreg free
  1398  001300  502A               	movf	?___awdiv,w,c
  1399  001302  6E59               	movwf	_anio_d,c
  1400                           
  1401                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1402  001304  5059               	movf	_anio_d,w,c
  1403  001306  0D0A               	mullw	10
  1404  001308  50F3               	movf	prodl,w,c
  1405  00130A  0800               	sublw	0
  1406  00130C  244F               	addwf	_anio,w,c
  1407  00130E  0100               	movlb	0	; () banked
  1408  001310  6F9E               	movwf	_anio_u& (0+255),b
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1412  001312  5059               	movf	_anio_d,w,c
  1413  001314  0D10               	mullw	16
  1414  001316  50F3               	movf	prodl,w,c
  1415  001318  0100               	movlb	0	; () banked
  1416  00131A  259E               	addwf	_anio_u& (0+255),w,b
  1417  00131C  6E25               	movwf	_RtccDate+3,c
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1421  00131E  C057  F02A         	movff	_mes,___awdiv@dividend
  1422  001322  C058  F02B         	movff	_mes+1,___awdiv@dividend+1
  1423  001326  0E00               	movlw	0
  1424  001328  6E2D               	movwf	___awdiv@divisor+1,c
  1425  00132A  0E0A               	movlw	10
  1426  00132C  6E2C               	movwf	___awdiv@divisor,c
  1427  00132E  EC7D  F00C         	call	___awdiv	;wreg free
  1428  001332  502A               	movf	?___awdiv,w,c
  1429  001334  6E5C               	movwf	_mes_d,c
  1430                           
  1431                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1432  001336  505C               	movf	_mes_d,w,c
  1433  001338  0D0A               	mullw	10
  1434  00133A  50F3               	movf	prodl,w,c
  1435  00133C  0800               	sublw	0
  1436  00133E  2457               	addwf	_mes,w,c
  1437  001340  0100               	movlb	0	; () banked
  1438  001342  6FA2               	movwf	_mes_u& (0+255),b
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1442  001344  505C               	movf	_mes_d,w,c
  1443  001346  0D10               	mullw	16
  1444  001348  50F3               	movf	prodl,w,c
  1445  00134A  0100               	movlb	0	; () banked
  1446  00134C  25A2               	addwf	_mes_u& (0+255),w,b
  1447  00134E  6E24               	movwf	_RtccDate+2,c
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1451  001350  C051  F02A         	movff	_dia,___awdiv@dividend
  1452  001354  C052  F02B         	movff	_dia+1,___awdiv@dividend+1
  1453  001358  0E00               	movlw	0
  1454  00135A  6E2D               	movwf	___awdiv@divisor+1,c
  1455  00135C  0E0A               	movlw	10
  1456  00135E  6E2C               	movwf	___awdiv@divisor,c
  1457  001360  EC7D  F00C         	call	___awdiv	;wreg free
  1458  001364  502A               	movf	?___awdiv,w,c
  1459  001366  6E5A               	movwf	_fecha_d,c
  1460                           
  1461                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1462  001368  505A               	movf	_fecha_d,w,c
  1463  00136A  0D0A               	mullw	10
  1464  00136C  50F3               	movf	prodl,w,c
  1465  00136E  0800               	sublw	0
  1466  001370  2451               	addwf	_dia,w,c
  1467  001372  0100               	movlb	0	; () banked
  1468  001374  6FA0               	movwf	_fecha_u& (0+255),b
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1472  001376  505A               	movf	_fecha_d,w,c
  1473  001378  0D10               	mullw	16
  1474  00137A  50F3               	movf	prodl,w,c
  1475  00137C  0100               	movlb	0	; () banked
  1476  00137E  25A0               	addwf	_fecha_u& (0+255),w,b
  1477  001380  6E23               	movwf	_RtccDate+1,c
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1481  001382  C053  F09F         	movff	_diasem,_dia_semana
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1485  001386  C053  F022         	movff	_diasem,_RtccDate
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1489  00138A  0E26               	movlw	low _RtccTime
  1490  00138C  6E2A               	movwf	RtccWriteTime@pTm,c
  1491  00138E  0E00               	movlw	high _RtccTime
  1492  001390  6E2B               	movwf	RtccWriteTime@pTm+1,c
  1493  001392  0E01               	movlw	1
  1494  001394  6E2C               	movwf	RtccWriteTime@di,c
  1495  001396  EC26  F00B         	call	_RtccWriteTime	;wreg free
  1496                           
  1497                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1498  00139A  0E22               	movlw	low _RtccDate
  1499  00139C  6E2A               	movwf	RtccWriteDate@pDt,c
  1500  00139E  0E00               	movlw	high _RtccDate
  1501  0013A0  6E2B               	movwf	RtccWriteDate@pDt+1,c
  1502  0013A2  0E01               	movlw	1
  1503  0013A4  6E2C               	movwf	RtccWriteDate@di,c
  1504  0013A6  EC83  F00A         	call	_RtccWriteDate	;wreg free
  1505                           
  1506                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1507  0013AA  010F               	movlb	15	; () banked
  1508  0013AC  8F3F               	bsf	63,7,b	;volatile
  1509                           
  1510                           ; BSR set to: 15
  1511  0013AE  0012               	return		;funcret
  1512  0013B0                     __end_of_Write_RTC:
  1513                           	opt stack 0
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           prodl	equ	0xFF3
  1519                           postinc0	equ	0xFEE
  1520                           wreg	equ	0xFE8
  1521                           postdec1	equ	0xFE5
  1522                           fsr1l	equ	0xFE1
  1523                           status	equ	0xFD8
  1524                           
  1525 ;; *************** function ___awdiv *****************
  1526 ;; Defined at:
  1527 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  dividend        2    0[COMRAM] int 
  1530 ;;  divisor         2    2[COMRAM] int 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  quotient        2    6[COMRAM] int 
  1533 ;;  sign            1    5[COMRAM] unsigned char 
  1534 ;;  counter         1    4[COMRAM] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  2    0[COMRAM] int 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1545 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;Total ram usage:        8 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_Write_RTC
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text3
  1558  0018FA                     __ptext3:
  1559                           	opt stack 0
  1560  0018FA                     ___awdiv:
  1561                           	opt stack 28
  1562                           
  1563                           ; BSR set to: 15
  1564                           ;incstack = 0
  1565  0018FA  0E00               	movlw	0
  1566  0018FC  6E2F               	movwf	___awdiv@sign,c
  1567  0018FE  AE2D               	btfss	___awdiv@divisor+1,7,c
  1568  001900  D007               	goto	l3439
  1569  001902  6C2C               	negf	___awdiv@divisor,c
  1570  001904  1E2D               	comf	___awdiv@divisor+1,f,c
  1571  001906  B0D8               	btfsc	status,0,c
  1572  001908  2A2D               	incf	___awdiv@divisor+1,f,c
  1573  00190A  0E01               	movlw	1
  1574  00190C  6E2F               	movwf	___awdiv@sign,c
  1575  00190E  D000               	goto	l3439
  1576  001910                     l3439:
  1577  001910  AE2B               	btfss	___awdiv@dividend+1,7,c
  1578  001912  D007               	goto	l3445
  1579  001914  6C2A               	negf	___awdiv@dividend,c
  1580  001916  1E2B               	comf	___awdiv@dividend+1,f,c
  1581  001918  B0D8               	btfsc	status,0,c
  1582  00191A  2A2B               	incf	___awdiv@dividend+1,f,c
  1583  00191C  0E01               	movlw	1
  1584  00191E  1A2F               	xorwf	___awdiv@sign,f,c
  1585  001920  D000               	goto	l3445
  1586  001922                     l3445:
  1587  001922  0E00               	movlw	0
  1588  001924  6E31               	movwf	___awdiv@quotient+1,c
  1589  001926  0E00               	movlw	0
  1590  001928  6E30               	movwf	___awdiv@quotient,c
  1591  00192A  502C               	movf	___awdiv@divisor,w,c
  1592  00192C  102D               	iorwf	___awdiv@divisor+1,w,c
  1593  00192E  B4D8               	btfsc	status,2,c
  1594  001930  D021               	goto	l3467
  1595  001932  0E01               	movlw	1
  1596  001934  6E2E               	movwf	___awdiv@counter,c
  1597  001936  D005               	goto	l3453
  1598  001938                     l3451:
  1599  001938  90D8               	bcf	status,0,c
  1600  00193A  362C               	rlcf	___awdiv@divisor,f,c
  1601  00193C  362D               	rlcf	___awdiv@divisor+1,f,c
  1602  00193E  2A2E               	incf	___awdiv@counter,f,c
  1603  001940  D000               	goto	l3453
  1604  001942                     l3453:
  1605  001942  BE2D               	btfsc	___awdiv@divisor+1,7,c
  1606  001944  D002               	goto	l3455
  1607  001946  D7F8               	goto	l3451
  1608  001948  D000               	goto	l3455
  1609  00194A                     l3455:
  1610  00194A  90D8               	bcf	status,0,c
  1611  00194C  3630               	rlcf	___awdiv@quotient,f,c
  1612  00194E  3631               	rlcf	___awdiv@quotient+1,f,c
  1613  001950  502C               	movf	___awdiv@divisor,w,c
  1614  001952  5C2A               	subwf	___awdiv@dividend,w,c
  1615  001954  502D               	movf	___awdiv@divisor+1,w,c
  1616  001956  582B               	subwfb	___awdiv@dividend+1,w,c
  1617  001958  A0D8               	btfss	status,0,c
  1618  00195A  D006               	goto	l3463
  1619  00195C  502C               	movf	___awdiv@divisor,w,c
  1620  00195E  5E2A               	subwf	___awdiv@dividend,f,c
  1621  001960  502D               	movf	___awdiv@divisor+1,w,c
  1622  001962  5A2B               	subwfb	___awdiv@dividend+1,f,c
  1623  001964  8030               	bsf	___awdiv@quotient,0,c
  1624  001966  D000               	goto	l3463
  1625  001968                     l3463:
  1626  001968  90D8               	bcf	status,0,c
  1627  00196A  322D               	rrcf	___awdiv@divisor+1,f,c
  1628  00196C  322C               	rrcf	___awdiv@divisor,f,c
  1629  00196E  2E2E               	decfsz	___awdiv@counter,f,c
  1630  001970  D7EC               	goto	l3455
  1631  001972  D000               	goto	l3467
  1632  001974                     l3467:
  1633  001974  502F               	movf	___awdiv@sign,w,c
  1634  001976  B4D8               	btfsc	status,2,c
  1635  001978  D005               	goto	l3471
  1636  00197A  6C30               	negf	___awdiv@quotient,c
  1637  00197C  1E31               	comf	___awdiv@quotient+1,f,c
  1638  00197E  B0D8               	btfsc	status,0,c
  1639  001980  2A31               	incf	___awdiv@quotient+1,f,c
  1640  001982  D000               	goto	l3471
  1641  001984                     l3471:
  1642  001984  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  1643  001988  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  1644  00198C  0012               	return	
  1645  00198E  0012               	return		;funcret
  1646  001990                     __end_of___awdiv:
  1647                           	opt stack 0
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           prodl	equ	0xFF3
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           fsr1l	equ	0xFE1
  1657                           status	equ	0xFD8
  1658                           
  1659 ;; *************** function _RtccWriteTime *****************
  1660 ;; Defined at:
  1661 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  pTm             2    0[COMRAM] PTR const struct .
  1664 ;;		 -> RtccTime(4), 
  1665 ;;  di              1    2[COMRAM] enum E7121
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  tempHourWDay    2    9[COMRAM] struct .
  1668 ;;  tempMinSec      2    7[COMRAM] struct .
  1669 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1670 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1671 ;;  wasOn           1    4[COMRAM] enum E7121
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      enum E7481
  1674 ;; Registers used:
  1675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1681 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;Total ram usage:       11 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    1
  1688 ;; This function calls:
  1689 ;;		_RtccWrOn
  1690 ;; This function is called by:
  1691 ;;		_Write_RTC
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text4
  1696  00164C                     __ptext4:
  1697                           	opt stack 0
  1698  00164C                     _RtccWriteTime:
  1699                           	opt stack 27
  1700                           
  1701                           ;incstack = 0
  1702  00164C  0E00               	movlw	0
  1703  00164E  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1704  001650  EE20 F002          	lfsr	2,2
  1705  001654  502A               	movf	RtccWriteTime@pTm,w,c
  1706  001656  26D9               	addwf	fsr2l,f,c
  1707  001658  502B               	movf	RtccWriteTime@pTm+1,w,c
  1708  00165A  22DA               	addwfc	fsr2h,f,c
  1709  00165C  0E5A               	movlw	90
  1710  00165E  60DF               	cpfslt	indf2,c
  1711  001660  0012               	return	
  1712  001662  EE20 F001          	lfsr	2,1
  1713  001666  502A               	movf	RtccWriteTime@pTm,w,c
  1714  001668  26D9               	addwf	fsr2l,f,c
  1715  00166A  502B               	movf	RtccWriteTime@pTm+1,w,c
  1716  00166C  22DA               	addwfc	fsr2h,f,c
  1717  00166E  0E5A               	movlw	90
  1718  001670  60DF               	cpfslt	indf2,c
  1719  001672  0012               	return	
  1720  001674  EE20 F003          	lfsr	2,3
  1721  001678  502A               	movf	RtccWriteTime@pTm,w,c
  1722  00167A  26D9               	addwf	fsr2l,f,c
  1723  00167C  502B               	movf	RtccWriteTime@pTm+1,w,c
  1724  00167E  22DA               	addwfc	fsr2h,f,c
  1725  001680  0E24               	movlw	36
  1726  001682  64DF               	cpfsgt	indf2,c
  1727  001684  D002               	goto	l3063
  1728  001686  0012               	return	
  1729                           
  1730                           ;	Return value of _RtccWriteTime is never used
  1731  001688  0012               	return	
  1732  00168A                     l3063:
  1733  00168A  EE20 F002          	lfsr	2,2
  1734  00168E  502A               	movf	RtccWriteTime@pTm,w,c
  1735  001690  26D9               	addwf	fsr2l,f,c
  1736  001692  502B               	movf	RtccWriteTime@pTm+1,w,c
  1737  001694  22DA               	addwfc	fsr2h,f,c
  1738  001696  50DF               	movf	indf2,w,c
  1739  001698  6E32               	movwf	RtccWriteTime@tempMinSec+1,c
  1740  00169A  EE20 F001          	lfsr	2,1
  1741  00169E  502A               	movf	RtccWriteTime@pTm,w,c
  1742  0016A0  26D9               	addwf	fsr2l,f,c
  1743  0016A2  502B               	movf	RtccWriteTime@pTm+1,w,c
  1744  0016A4  22DA               	addwfc	fsr2h,f,c
  1745  0016A6  50DF               	movf	indf2,w,c
  1746  0016A8  6E31               	movwf	RtccWriteTime@tempMinSec,c
  1747  0016AA  502C               	movf	RtccWriteTime@di,w,c
  1748  0016AC  B4D8               	btfsc	status,2,c
  1749  0016AE  D002               	goto	l3069
  1750  0016B0  9CF2               	bcf	intcon,6,c	;volatile
  1751  0016B2  D000               	goto	l3069
  1752  0016B4                     l3069:
  1753  0016B4  0E00               	movlw	0
  1754  0016B6  BB3F               	btfsc	63,5,b	;volatile
  1755  0016B8  0E01               	movlw	1
  1756  0016BA  6E30               	movwf	RtccWriteTime@wasWrEn,c
  1757  0016BC  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1758  0016BE  A4D8               	btfss	status,2,c
  1759  0016C0  D003               	goto	l3073
  1760  0016C2  ECD6  F014         	call	_RtccWrOn	;wreg free
  1761  0016C6  D000               	goto	l3073
  1762  0016C8                     l3073:
  1763  0016C8  0E00               	movlw	0
  1764  0016CA  BF3F               	btfsc	63,7,b	;volatile
  1765  0016CC  0E01               	movlw	1
  1766  0016CE  6E2E               	movwf	RtccWriteTime@wasOn,c
  1767  0016D0  502E               	movf	RtccWriteTime@wasOn,w,c
  1768  0016D2  B4D8               	btfsc	status,2,c
  1769  0016D4  D007               	goto	l3079
  1770  0016D6  0E00               	movlw	0
  1771  0016D8  BE91               	btfsc	3985,7,c	;volatile
  1772  0016DA  0E01               	movlw	1
  1773  0016DC  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1774  0016DE  010F               	movlb	15	; () banked
  1775  0016E0  9F3F               	bcf	63,7,b	;volatile
  1776  0016E2  D000               	goto	l3079
  1777  0016E4                     l3079:
  1778  0016E4  0EFC               	movlw	252
  1779  0016E6  010F               	movlb	15	; () banked
  1780  0016E8  173F               	andwf	63,f,b	;volatile
  1781  0016EA  010F               	movlb	15	; () banked
  1782  0016EC  813F               	bsf	63,0,b	;volatile
  1783                           
  1784                           ; BSR set to: 15
  1785  0016EE  CF98 F033          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1786                           
  1787                           ; BSR set to: 15
  1788  0016F2  CF99 F034          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1789                           
  1790                           ; BSR set to: 15
  1791  0016F6  EE20 F003          	lfsr	2,3
  1792  0016FA  502A               	movf	RtccWriteTime@pTm,w,c
  1793  0016FC  26D9               	addwf	fsr2l,f,c
  1794  0016FE  502B               	movf	RtccWriteTime@pTm+1,w,c
  1795  001700  22DA               	addwfc	fsr2h,f,c
  1796  001702  50DF               	movf	indf2,w,c
  1797  001704  6E33               	movwf	RtccWriteTime@tempHourWDay,c
  1798                           
  1799                           ; BSR set to: 15
  1800  001706  0EFC               	movlw	252
  1801  001708  010F               	movlb	15	; () banked
  1802  00170A  173F               	andwf	63,f,b	;volatile
  1803                           
  1804                           ; BSR set to: 15
  1805  00170C  010F               	movlb	15	; () banked
  1806  00170E  813F               	bsf	63,0,b	;volatile
  1807                           
  1808                           ; BSR set to: 15
  1809  001710  C033  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1810                           
  1811                           ; BSR set to: 15
  1812  001714  C034  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1813                           
  1814                           ; BSR set to: 15
  1815  001718  C031  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1816                           
  1817                           ; BSR set to: 15
  1818  00171C  C032  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1819                           
  1820                           ; BSR set to: 15
  1821  001720  502E               	movf	RtccWriteTime@wasOn,w,c
  1822  001722  B4D8               	btfsc	status,2,c
  1823  001724  D00D               	goto	l3111
  1824                           
  1825                           ; BSR set to: 15
  1826  001726  010F               	movlb	15	; () banked
  1827  001728  8F3F               	bsf	63,7,b	;volatile
  1828                           
  1829                           ; BSR set to: 15
  1830  00172A  502F               	movf	RtccWriteTime@wasAlrm,w,c
  1831  00172C  B4D8               	btfsc	status,2,c
  1832  00172E  D002               	goto	l3107
  1833                           
  1834                           ; BSR set to: 15
  1835  001730  8E91               	bsf	3985,7,c	;volatile
  1836  001732  D000               	goto	l3107
  1837  001734                     l3107:
  1838                           
  1839                           ; BSR set to: 15
  1840  001734  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1841  001736  B4D8               	btfsc	status,2,c
  1842  001738  D009               	goto	l3115
  1843                           
  1844                           ; BSR set to: 15
  1845  00173A  ECD6  F014         	call	_RtccWrOn	;wreg free
  1846  00173E  D006               	goto	l3115
  1847  001740                     l3111:
  1848  001740  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1849  001742  A4D8               	btfss	status,2,c
  1850  001744  D003               	goto	l3115
  1851  001746  010F               	movlb	15	; () banked
  1852  001748  9B3F               	bcf	63,5,b	;volatile
  1853                           
  1854                           ; BSR set to: 15
  1855  00174A  D000               	goto	l3115
  1856  00174C                     l3115:
  1857  00174C  502C               	movf	RtccWriteTime@di,w,c
  1858  00174E  B4D8               	btfsc	status,2,c
  1859  001750  0012               	return	
  1860  001752  8CF2               	bsf	intcon,6,c	;volatile
  1861  001754  0012               	return	
  1862                           
  1863                           ;	Return value of _RtccWriteTime is never used
  1864  001756  0012               	return		;funcret
  1865  001758                     __end_of_RtccWriteTime:
  1866                           	opt stack 0
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           postdec1	equ	0xFE5
  1876                           fsr1l	equ	0xFE1
  1877                           indf2	equ	0xFDF
  1878                           fsr2h	equ	0xFDA
  1879                           fsr2l	equ	0xFD9
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _RtccWriteDate *****************
  1883 ;; Defined at:
  1884 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  pDt             2    0[COMRAM] PTR const struct .
  1887 ;;		 -> RtccDate(4), 
  1888 ;;  di              1    2[COMRAM] enum E7121
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  tempHourWDay    2   11[COMRAM] struct .
  1891 ;;  tempDayMonth    2    9[COMRAM] struct .
  1892 ;;  tempYear        2    6[COMRAM] struct .
  1893 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1894 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1895 ;;  wasOn           1    4[COMRAM] enum E7121
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      enum E7481
  1898 ;; Registers used:
  1899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1905 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1906 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1909 ;;Total ram usage:       13 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    1
  1912 ;; This function calls:
  1913 ;;		_RtccWrOn
  1914 ;; This function is called by:
  1915 ;;		_Write_RTC
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text5
  1920  001506                     __ptext5:
  1921                           	opt stack 0
  1922  001506                     _RtccWriteDate:
  1923                           	opt stack 27
  1924                           
  1925                           ;incstack = 0
  1926  001506  0E00               	movlw	0
  1927  001508  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  1928  00150A  EE20 F002          	lfsr	2,2
  1929  00150E  502A               	movf	RtccWriteDate@pDt,w,c
  1930  001510  26D9               	addwf	fsr2l,f,c
  1931  001512  502B               	movf	RtccWriteDate@pDt+1,w,c
  1932  001514  22DA               	addwfc	fsr2h,f,c
  1933  001516  0E13               	movlw	19
  1934  001518  60DF               	cpfslt	indf2,c
  1935  00151A  0012               	return	
  1936  00151C  EE20 F002          	lfsr	2,2
  1937  001520  502A               	movf	RtccWriteDate@pDt,w,c
  1938  001522  26D9               	addwf	fsr2l,f,c
  1939  001524  502B               	movf	RtccWriteDate@pDt+1,w,c
  1940  001526  22DA               	addwfc	fsr2h,f,c
  1941  001528  50DF               	movf	indf2,w,c
  1942  00152A  B4D8               	btfsc	status,2,c
  1943  00152C  0012               	return	
  1944  00152E  EE20 F001          	lfsr	2,1
  1945  001532  502A               	movf	RtccWriteDate@pDt,w,c
  1946  001534  26D9               	addwf	fsr2l,f,c
  1947  001536  502B               	movf	RtccWriteDate@pDt+1,w,c
  1948  001538  22DA               	addwfc	fsr2h,f,c
  1949  00153A  0E32               	movlw	50
  1950  00153C  60DF               	cpfslt	indf2,c
  1951  00153E  0012               	return	
  1952  001540  EE20 F001          	lfsr	2,1
  1953  001544  502A               	movf	RtccWriteDate@pDt,w,c
  1954  001546  26D9               	addwf	fsr2l,f,c
  1955  001548  502B               	movf	RtccWriteDate@pDt+1,w,c
  1956  00154A  22DA               	addwfc	fsr2h,f,c
  1957  00154C  50DF               	movf	indf2,w,c
  1958  00154E  B4D8               	btfsc	status,2,c
  1959  001550  0012               	return	
  1960  001552  EE20 F003          	lfsr	2,3
  1961  001556  502A               	movf	RtccWriteDate@pDt,w,c
  1962  001558  26D9               	addwf	fsr2l,f,c
  1963  00155A  502B               	movf	RtccWriteDate@pDt+1,w,c
  1964  00155C  22DA               	addwfc	fsr2h,f,c
  1965  00155E  0E99               	movlw	153
  1966  001560  64DF               	cpfsgt	indf2,c
  1967  001562  D002               	goto	l3131
  1968  001564  0012               	return	
  1969                           
  1970                           ;	Return value of _RtccWriteDate is never used
  1971  001566  0012               	return	
  1972  001568                     l3131:
  1973  001568  EE20 F003          	lfsr	2,3
  1974  00156C  502A               	movf	RtccWriteDate@pDt,w,c
  1975  00156E  26D9               	addwf	fsr2l,f,c
  1976  001570  502B               	movf	RtccWriteDate@pDt+1,w,c
  1977  001572  22DA               	addwfc	fsr2h,f,c
  1978  001574  50DF               	movf	indf2,w,c
  1979  001576  6E30               	movwf	RtccWriteDate@tempYear,c
  1980  001578  EE20 F001          	lfsr	2,1
  1981  00157C  502A               	movf	RtccWriteDate@pDt,w,c
  1982  00157E  26D9               	addwf	fsr2l,f,c
  1983  001580  502B               	movf	RtccWriteDate@pDt+1,w,c
  1984  001582  22DA               	addwfc	fsr2h,f,c
  1985  001584  50DF               	movf	indf2,w,c
  1986  001586  6E33               	movwf	RtccWriteDate@tempDayMonth,c
  1987  001588  EE20 F002          	lfsr	2,2
  1988  00158C  502A               	movf	RtccWriteDate@pDt,w,c
  1989  00158E  26D9               	addwf	fsr2l,f,c
  1990  001590  502B               	movf	RtccWriteDate@pDt+1,w,c
  1991  001592  22DA               	addwfc	fsr2h,f,c
  1992  001594  50DF               	movf	indf2,w,c
  1993  001596  6E34               	movwf	RtccWriteDate@tempDayMonth+1,c
  1994  001598  502C               	movf	RtccWriteDate@di,w,c
  1995  00159A  B4D8               	btfsc	status,2,c
  1996  00159C  D002               	goto	l3137
  1997  00159E  9CF2               	bcf	intcon,6,c	;volatile
  1998  0015A0  D000               	goto	l3137
  1999  0015A2                     l3137:
  2000  0015A2  0E00               	movlw	0
  2001  0015A4  BB3F               	btfsc	63,5,b	;volatile
  2002  0015A6  0E01               	movlw	1
  2003  0015A8  6E32               	movwf	RtccWriteDate@wasWrEn,c
  2004  0015AA  5032               	movf	RtccWriteDate@wasWrEn,w,c
  2005  0015AC  A4D8               	btfss	status,2,c
  2006  0015AE  D003               	goto	l3141
  2007  0015B0  ECD6  F014         	call	_RtccWrOn	;wreg free
  2008  0015B4  D000               	goto	l3141
  2009  0015B6                     l3141:
  2010  0015B6  0E00               	movlw	0
  2011  0015B8  BF3F               	btfsc	63,7,b	;volatile
  2012  0015BA  0E01               	movlw	1
  2013  0015BC  6E2E               	movwf	RtccWriteDate@wasOn,c
  2014  0015BE  502E               	movf	RtccWriteDate@wasOn,w,c
  2015  0015C0  B4D8               	btfsc	status,2,c
  2016  0015C2  D007               	goto	l3147
  2017  0015C4  0E00               	movlw	0
  2018  0015C6  BE91               	btfsc	3985,7,c	;volatile
  2019  0015C8  0E01               	movlw	1
  2020  0015CA  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  2021  0015CC  010F               	movlb	15	; () banked
  2022  0015CE  9F3F               	bcf	63,7,b	;volatile
  2023  0015D0  D000               	goto	l3147
  2024  0015D2                     l3147:
  2025  0015D2  0EFC               	movlw	252
  2026  0015D4  010F               	movlb	15	; () banked
  2027  0015D6  173F               	andwf	63,f,b	;volatile
  2028  0015D8  010F               	movlb	15	; () banked
  2029  0015DA  813F               	bsf	63,0,b	;volatile
  2030                           
  2031                           ; BSR set to: 15
  2032  0015DC  CF98 F035          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  2033                           
  2034                           ; BSR set to: 15
  2035  0015E0  CF99 F036          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  2036                           
  2037                           ; BSR set to: 15
  2038  0015E4  C02A  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  2039  0015E8  C02B  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  2040  0015EC  50DF               	movf	indf2,w,c
  2041  0015EE  6E36               	movwf	RtccWriteDate@tempHourWDay+1,c
  2042                           
  2043                           ; BSR set to: 15
  2044  0015F0  0EFC               	movlw	252
  2045  0015F2  010F               	movlb	15	; () banked
  2046  0015F4  173F               	andwf	63,f,b	;volatile
  2047                           
  2048                           ; BSR set to: 15
  2049  0015F6  0E03               	movlw	3
  2050  0015F8  010F               	movlb	15	; () banked
  2051  0015FA  133F               	iorwf	63,f,b	;volatile
  2052                           
  2053                           ; BSR set to: 15
  2054  0015FC  C030  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  2055                           
  2056                           ; BSR set to: 15
  2057  001600  C031  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  2058                           
  2059                           ; BSR set to: 15
  2060  001604  C033  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  2061                           
  2062                           ; BSR set to: 15
  2063  001608  C034  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  2064                           
  2065                           ; BSR set to: 15
  2066  00160C  C035  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  2067                           
  2068                           ; BSR set to: 15
  2069  001610  C036  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  2070                           
  2071                           ; BSR set to: 15
  2072  001614  502E               	movf	RtccWriteDate@wasOn,w,c
  2073  001616  B4D8               	btfsc	status,2,c
  2074  001618  D00D               	goto	l3183
  2075                           
  2076                           ; BSR set to: 15
  2077  00161A  010F               	movlb	15	; () banked
  2078  00161C  8F3F               	bsf	63,7,b	;volatile
  2079                           
  2080                           ; BSR set to: 15
  2081  00161E  502F               	movf	RtccWriteDate@wasAlrm,w,c
  2082  001620  B4D8               	btfsc	status,2,c
  2083  001622  D002               	goto	l3179
  2084                           
  2085                           ; BSR set to: 15
  2086  001624  8E91               	bsf	3985,7,c	;volatile
  2087  001626  D000               	goto	l3179
  2088  001628                     l3179:
  2089                           
  2090                           ; BSR set to: 15
  2091  001628  5032               	movf	RtccWriteDate@wasWrEn,w,c
  2092  00162A  B4D8               	btfsc	status,2,c
  2093  00162C  D009               	goto	l3187
  2094                           
  2095                           ; BSR set to: 15
  2096  00162E  ECD6  F014         	call	_RtccWrOn	;wreg free
  2097  001632  D006               	goto	l3187
  2098  001634                     l3183:
  2099  001634  5032               	movf	RtccWriteDate@wasWrEn,w,c
  2100  001636  A4D8               	btfss	status,2,c
  2101  001638  D003               	goto	l3187
  2102  00163A  010F               	movlb	15	; () banked
  2103  00163C  9B3F               	bcf	63,5,b	;volatile
  2104                           
  2105                           ; BSR set to: 15
  2106  00163E  D000               	goto	l3187
  2107  001640                     l3187:
  2108  001640  502C               	movf	RtccWriteDate@di,w,c
  2109  001642  B4D8               	btfsc	status,2,c
  2110  001644  0012               	return	
  2111  001646  9CF2               	bcf	intcon,6,c	;volatile
  2112  001648  0012               	return	
  2113                           
  2114                           ;	Return value of _RtccWriteDate is never used
  2115  00164A  0012               	return		;funcret
  2116  00164C                     __end_of_RtccWriteDate:
  2117                           	opt stack 0
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           prodl	equ	0xFF3
  2123                           intcon	equ	0xFF2
  2124                           postinc0	equ	0xFEE
  2125                           wreg	equ	0xFE8
  2126                           postdec1	equ	0xFE5
  2127                           fsr1l	equ	0xFE1
  2128                           indf2	equ	0xFDF
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _RtccWrOn *****************
  2134 ;; Defined at:
  2135 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  data            2    0        unsigned int 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;		None               void
  2142 ;; Registers used:
  2143 ;;		wreg, status,2
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_Write_RTC
  2159 ;;		_RtccWriteDate
  2160 ;;		_RtccWriteTime
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text6
  2165  0029AC                     __ptext6:
  2166                           	opt stack 0
  2167  0029AC                     _RtccWrOn:
  2168                           	opt stack 27
  2169                           
  2170                           ;incstack = 0
  2171  0029AC  9CF2               	bcf	intcon,6,c	;volatile
  2172  0029AE  0E55               	movlw	85
  2173  0029B0  6EA7               	movwf	4007,c	;volatile
  2174  0029B2  0EAA               	movlw	170
  2175  0029B4  6EA7               	movwf	4007,c	;volatile
  2176  0029B6  010F               	movlb	15	; () banked
  2177  0029B8  8B3F               	bsf	63,5,b	;volatile
  2178                           
  2179                           ; BSR set to: 15
  2180  0029BA  8CF2               	bsf	intcon,6,c	;volatile
  2181                           
  2182                           ; BSR set to: 15
  2183  0029BC  0012               	return		;funcret
  2184  0029BE                     __end_of_RtccWrOn:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           prodl	equ	0xFF3
  2191                           intcon	equ	0xFF2
  2192                           postinc0	equ	0xFEE
  2193                           wreg	equ	0xFE8
  2194                           postdec1	equ	0xFE5
  2195                           fsr1l	equ	0xFE1
  2196                           indf2	equ	0xFDF
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function _keyboard_control *****************
  2202 ;; Defined at:
  2203 ;;		line 639 in file "main.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;Total ram usage:        1 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:   10
  2224 ;; This function calls:
  2225 ;;		_button_A
  2226 ;;		_button_B
  2227 ;;		_button_C
  2228 ;;		_button_D
  2229 ;;		_button_asterisk
  2230 ;;		_button_hash
  2231 ;;		_button_number
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text7
  2238  0013B0                     __ptext7:
  2239                           	opt stack 0
  2240  0013B0                     _keyboard_control:
  2241                           	opt stack 20
  2242                           
  2243                           ;main.c: 641: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2244                           
  2245                           ; BSR set to: 15
  2246                           ;incstack = 0
  2247  0013B0  8089               	bsf	3977,0,c	;volatile
  2248  0013B2  9289               	bcf	3977,1,c	;volatile
  2249  0013B4  9489               	bcf	3977,2,c	;volatile
  2250  0013B6  9689               	bcf	3977,3,c	;volatile
  2251                           
  2252                           ;main.c: 642: {
  2253                           ;main.c: 643: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2254  0013B8  AA80               	btfss	3968,5,c	;volatile
  2255  0013BA  D007               	goto	l376
  2256  0013BC  0E01               	movlw	1
  2257  0013BE  6E21               	movwf	_key,c
  2258  0013C0  EC52  F00E         	call	_button_number	;wreg free
  2259  0013C4  D000               	goto	l377
  2260  0013C6                     l377:
  2261  0013C6  BA80               	btfsc	3968,5,c	;volatile
  2262  0013C8  D7FE               	goto	l377
  2263  0013CA                     l376:
  2264                           
  2265                           ;main.c: 644: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2266  0013CA  AE80               	btfss	3968,7,c	;volatile
  2267  0013CC  D007               	goto	l380
  2268  0013CE  0E02               	movlw	2
  2269  0013D0  6E21               	movwf	_key,c
  2270  0013D2  EC52  F00E         	call	_button_number	;wreg free
  2271  0013D6  D000               	goto	l381
  2272  0013D8                     l381:
  2273  0013D8  BE80               	btfsc	3968,7,c	;volatile
  2274  0013DA  D7FE               	goto	l381
  2275  0013DC                     l380:
  2276                           
  2277                           ;main.c: 645: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2278  0013DC  AC80               	btfss	3968,6,c	;volatile
  2279  0013DE  D007               	goto	l384
  2280  0013E0  0E03               	movlw	3
  2281  0013E2  6E21               	movwf	_key,c
  2282  0013E4  EC52  F00E         	call	_button_number	;wreg free
  2283  0013E8  D000               	goto	l385
  2284  0013EA                     l385:
  2285  0013EA  BC80               	btfsc	3968,6,c	;volatile
  2286  0013EC  D7FE               	goto	l385
  2287  0013EE                     l384:
  2288                           
  2289                           ;main.c: 646: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2290  0013EE  A482               	btfss	3970,2,c	;volatile
  2291  0013F0  D007               	goto	l388
  2292  0013F2  0E0B               	movlw	11
  2293  0013F4  6E21               	movwf	_key,c
  2294  0013F6  EC30  F013         	call	_button_A	;wreg free
  2295  0013FA  D000               	goto	l389
  2296  0013FC                     l389:
  2297  0013FC  B482               	btfsc	3970,2,c	;volatile
  2298  0013FE  D7FE               	goto	l389
  2299  001400                     l388:
  2300                           
  2301                           ;main.c: 647: }
  2302                           ;main.c: 649: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2303  001400  9089               	bcf	3977,0,c	;volatile
  2304  001402  8289               	bsf	3977,1,c	;volatile
  2305  001404  9489               	bcf	3977,2,c	;volatile
  2306  001406  9689               	bcf	3977,3,c	;volatile
  2307                           
  2308                           ;main.c: 650: {
  2309                           ;main.c: 651: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2310  001408  AA80               	btfss	3968,5,c	;volatile
  2311  00140A  D007               	goto	l392
  2312  00140C  0E04               	movlw	4
  2313  00140E  6E21               	movwf	_key,c
  2314  001410  EC52  F00E         	call	_button_number	;wreg free
  2315  001414  D000               	goto	l393
  2316  001416                     l393:
  2317  001416  BA80               	btfsc	3968,5,c	;volatile
  2318  001418  D7FE               	goto	l393
  2319  00141A                     l392:
  2320                           
  2321                           ;main.c: 652: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2322  00141A  AE80               	btfss	3968,7,c	;volatile
  2323  00141C  D007               	goto	l396
  2324  00141E  0E05               	movlw	5
  2325  001420  6E21               	movwf	_key,c
  2326  001422  EC52  F00E         	call	_button_number	;wreg free
  2327  001426  D000               	goto	l397
  2328  001428                     l397:
  2329  001428  BE80               	btfsc	3968,7,c	;volatile
  2330  00142A  D7FE               	goto	l397
  2331  00142C                     l396:
  2332                           
  2333                           ;main.c: 653: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2334  00142C  AC80               	btfss	3968,6,c	;volatile
  2335  00142E  D007               	goto	l400
  2336  001430  0E06               	movlw	6
  2337  001432  6E21               	movwf	_key,c
  2338  001434  EC52  F00E         	call	_button_number	;wreg free
  2339  001438  D000               	goto	l401
  2340  00143A                     l401:
  2341  00143A  BC80               	btfsc	3968,6,c	;volatile
  2342  00143C  D7FE               	goto	l401
  2343  00143E                     l400:
  2344                           
  2345                           ;main.c: 654: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2346  00143E  A482               	btfss	3970,2,c	;volatile
  2347  001440  D007               	goto	l404
  2348  001442  0E0C               	movlw	12
  2349  001444  6E21               	movwf	_key,c
  2350  001446  ECF3  F00F         	call	_button_B	;wreg free
  2351  00144A  D000               	goto	l405
  2352  00144C                     l405:
  2353  00144C  B482               	btfsc	3970,2,c	;volatile
  2354  00144E  D7FE               	goto	l405
  2355  001450                     l404:
  2356                           
  2357                           ;main.c: 655: }
  2358                           ;main.c: 657: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2359  001450  9089               	bcf	3977,0,c	;volatile
  2360  001452  9289               	bcf	3977,1,c	;volatile
  2361  001454  8489               	bsf	3977,2,c	;volatile
  2362  001456  9689               	bcf	3977,3,c	;volatile
  2363                           
  2364                           ;main.c: 658: {
  2365                           ;main.c: 659: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2366  001458  AA80               	btfss	3968,5,c	;volatile
  2367  00145A  D007               	goto	l408
  2368  00145C  0E07               	movlw	7
  2369  00145E  6E21               	movwf	_key,c
  2370  001460  EC52  F00E         	call	_button_number	;wreg free
  2371  001464  D000               	goto	l409
  2372  001466                     l409:
  2373  001466  BA80               	btfsc	3968,5,c	;volatile
  2374  001468  D7FE               	goto	l409
  2375  00146A                     l408:
  2376                           
  2377                           ;main.c: 660: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2378  00146A  AE80               	btfss	3968,7,c	;volatile
  2379  00146C  D007               	goto	l412
  2380  00146E  0E08               	movlw	8
  2381  001470  6E21               	movwf	_key,c
  2382  001472  EC52  F00E         	call	_button_number	;wreg free
  2383  001476  D000               	goto	l413
  2384  001478                     l413:
  2385  001478  BE80               	btfsc	3968,7,c	;volatile
  2386  00147A  D7FE               	goto	l413
  2387  00147C                     l412:
  2388                           
  2389                           ;main.c: 661: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2390  00147C  AC80               	btfss	3968,6,c	;volatile
  2391  00147E  D007               	goto	l416
  2392  001480  0E09               	movlw	9
  2393  001482  6E21               	movwf	_key,c
  2394  001484  EC52  F00E         	call	_button_number	;wreg free
  2395  001488  D000               	goto	l417
  2396  00148A                     l417:
  2397  00148A  BC80               	btfsc	3968,6,c	;volatile
  2398  00148C  D7FE               	goto	l417
  2399  00148E                     l416:
  2400                           
  2401                           ;main.c: 662: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2402  00148E  A482               	btfss	3970,2,c	;volatile
  2403  001490  D007               	goto	l420
  2404  001492  0E0D               	movlw	13
  2405  001494  6E21               	movwf	_key,c
  2406  001496  ECA4  F014         	call	_button_C	;wreg free
  2407  00149A  D000               	goto	l421
  2408  00149C                     l421:
  2409  00149C  B482               	btfsc	3970,2,c	;volatile
  2410  00149E  D7FE               	goto	l421
  2411  0014A0                     l420:
  2412                           
  2413                           ;main.c: 663: }
  2414                           ;main.c: 665: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2415  0014A0  9089               	bcf	3977,0,c	;volatile
  2416  0014A2  9289               	bcf	3977,1,c	;volatile
  2417  0014A4  9489               	bcf	3977,2,c	;volatile
  2418  0014A6  8689               	bsf	3977,3,c	;volatile
  2419                           
  2420                           ;main.c: 666: {
  2421                           ;main.c: 667: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2422  0014A8  AA80               	btfss	3968,5,c	;volatile
  2423  0014AA  D007               	goto	l424
  2424  0014AC  0E0E               	movlw	14
  2425  0014AE  6E21               	movwf	_key,c
  2426  0014B0  EC07  F015         	call	_button_asterisk	;wreg free
  2427  0014B4  D000               	goto	l425
  2428  0014B6                     l425:
  2429  0014B6  BA80               	btfsc	3968,5,c	;volatile
  2430  0014B8  D7FE               	goto	l425
  2431  0014BA                     l424:
  2432                           
  2433                           ;main.c: 668: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2434  0014BA  AE80               	btfss	3968,7,c	;volatile
  2435  0014BC  D007               	goto	l428
  2436  0014BE  0E00               	movlw	0
  2437  0014C0  6E21               	movwf	_key,c
  2438  0014C2  EC52  F00E         	call	_button_number	;wreg free
  2439  0014C6  D000               	goto	l429
  2440  0014C8                     l429:
  2441  0014C8  BE80               	btfsc	3968,7,c	;volatile
  2442  0014CA  D7FE               	goto	l429
  2443  0014CC                     l428:
  2444                           
  2445                           ;main.c: 669: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2446  0014CC  AC80               	btfss	3968,6,c	;volatile
  2447  0014CE  D007               	goto	l432
  2448  0014D0  0E0F               	movlw	15
  2449  0014D2  6E21               	movwf	_key,c
  2450  0014D4  EC5E  F014         	call	_button_hash	;wreg free
  2451  0014D8  D000               	goto	l433
  2452  0014DA                     l433:
  2453  0014DA  BC80               	btfsc	3968,6,c	;volatile
  2454  0014DC  D7FE               	goto	l433
  2455  0014DE                     l432:
  2456                           
  2457                           ;main.c: 670: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2458  0014DE  A482               	btfss	3970,2,c	;volatile
  2459  0014E0  D009               	goto	l3843
  2460  0014E2  0E10               	movlw	16
  2461  0014E4  6E21               	movwf	_key,c
  2462  0014E6  ECFD  F014         	call	_button_D	;wreg free
  2463  0014EA  D000               	goto	l437
  2464  0014EC                     l437:
  2465  0014EC  A482               	btfss	3970,2,c	;volatile
  2466  0014EE  D002               	goto	l3843
  2467  0014F0  D7FD               	goto	l437
  2468  0014F2  D000               	goto	l3843
  2469  0014F4                     l3843:
  2470                           
  2471                           ;main.c: 671: }
  2472                           ;main.c: 673: _delay((unsigned long)((98)*(8000000/4000.0)));
  2473  0014F4  0EFF               	movlw	255
  2474  0014F6  6E4D               	movwf	??_keyboard_control& (0+255),c
  2475  0014F8  0E8A               	movlw	138
  2476  0014FA                     u2577:
  2477  0014FA  2EE8               	decfsz	wreg,f,c
  2478  0014FC  D7FE               	goto	u2577
  2479  0014FE  2E4D               	decfsz	??_keyboard_control& (0+255),f,c
  2480  001500  D7FC               	goto	u2577
  2481  001502  D000               	nop2	
  2482  001504  0012               	return		;funcret
  2483  001506                     __end_of_keyboard_control:
  2484                           	opt stack 0
  2485                           tblptru	equ	0xFF8
  2486                           tblptrh	equ	0xFF7
  2487                           tblptrl	equ	0xFF6
  2488                           tablat	equ	0xFF5
  2489                           prodl	equ	0xFF3
  2490                           intcon	equ	0xFF2
  2491                           postinc0	equ	0xFEE
  2492                           wreg	equ	0xFE8
  2493                           postdec1	equ	0xFE5
  2494                           fsr1l	equ	0xFE1
  2495                           indf2	equ	0xFDF
  2496                           fsr2h	equ	0xFDA
  2497                           fsr2l	equ	0xFD9
  2498                           status	equ	0xFD8
  2499                           
  2500 ;; *************** function _button_number *****************
  2501 ;; Defined at:
  2502 ;;		line 621 in file "main.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;		None               void
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2520 ;;Total ram usage:        0 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    5
  2523 ;; This function calls:
  2524 ;;		_lcd_putrs
  2525 ;;		_reset_home_callback
  2526 ;;		_sprintf
  2527 ;;		_strcat
  2528 ;; This function is called by:
  2529 ;;		_keyboard_control
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text8
  2534  001CA4                     __ptext8:
  2535                           	opt stack 0
  2536  001CA4                     _button_number:
  2537                           	opt stack 24
  2538                           
  2539                           ;main.c: 623: reset_home_callback();
  2540                           
  2541                           ;incstack = 0
  2542  001CA4  EC02  F015         	call	_reset_home_callback	;wreg free
  2543                           
  2544                           ;main.c: 625: if(activity == 1 || activity == 6){
  2545  001CA8  0403               	decf	_activity,w,c
  2546  001CAA  1004               	iorwf	_activity+1,w,c
  2547  001CAC  B4D8               	btfsc	status,2,c
  2548  001CAE  D005               	goto	l3675
  2549  001CB0  0E06               	movlw	6
  2550  001CB2  1803               	xorwf	_activity,w,c
  2551  001CB4  1004               	iorwf	_activity+1,w,c
  2552  001CB6  A4D8               	btfss	status,2,c
  2553  001CB8  D01E               	goto	l3681
  2554  001CBA                     l3675:
  2555                           
  2556                           ;main.c: 626: lcd_putrs("*");
  2557  001CBA  0EE6               	movlw	low STR_49
  2558  001CBC  6E32               	movwf	lcd_putrs@ptr,c
  2559  001CBE  0E0F               	movlw	high STR_49
  2560  001CC0  6E33               	movwf	lcd_putrs@ptr+1,c
  2561  001CC2  EC53  F010         	call	_lcd_putrs	;wreg free
  2562                           
  2563                           ;main.c: 627: sprintf(buffer1, "%01u", key);
  2564  001CC6  0E80               	movlw	low _buffer1
  2565  001CC8  6E36               	movwf	sprintf@sp,c
  2566  001CCA  0E00               	movlw	high _buffer1
  2567  001CCC  6E37               	movwf	sprintf@sp+1,c
  2568  001CCE  0ED1               	movlw	low STR_50
  2569  001CD0  6E38               	movwf	sprintf@f,c
  2570  001CD2  0E0F               	movlw	high STR_50
  2571  001CD4  6E39               	movwf	sprintf@f+1,c
  2572  001CD6  C021  F03A         	movff	_key,?_sprintf+4
  2573  001CDA  6A3B               	clrf	?_sprintf+5,c
  2574  001CDC  ECF6  F007         	call	_sprintf	;wreg free
  2575                           
  2576                           ;main.c: 628: strcat(pin_input, buffer1);
  2577  001CE0  0E99               	movlw	low _pin_input
  2578  001CE2  6E2A               	movwf	strcat@to,c
  2579  001CE4  0E00               	movlw	high _pin_input
  2580  001CE6  6E2B               	movwf	strcat@to+1,c
  2581  001CE8  0E80               	movlw	low _buffer1
  2582  001CEA  6E2C               	movwf	strcat@from,c
  2583  001CEC  0E00               	movlw	high _buffer1
  2584  001CEE  6E2D               	movwf	strcat@from+1,c
  2585  001CF0  ECB9  F011         	call	_strcat	;wreg free
  2586                           
  2587                           ;main.c: 629: }
  2588  001CF4  0012               	return	
  2589  001CF6                     l3681:
  2590                           
  2591                           ;main.c: 630: else {
  2592                           ;main.c: 631: sprintf(buffer1,"%01u",key);
  2593  001CF6  0E80               	movlw	low _buffer1
  2594  001CF8  6E36               	movwf	sprintf@sp,c
  2595  001CFA  0E00               	movlw	high _buffer1
  2596  001CFC  6E37               	movwf	sprintf@sp+1,c
  2597  001CFE  0ED1               	movlw	low STR_50
  2598  001D00  6E38               	movwf	sprintf@f,c
  2599  001D02  0E0F               	movlw	high STR_50
  2600  001D04  6E39               	movwf	sprintf@f+1,c
  2601  001D06  C021  F03A         	movff	_key,?_sprintf+4
  2602  001D0A  6A3B               	clrf	?_sprintf+5,c
  2603  001D0C  ECF6  F007         	call	_sprintf	;wreg free
  2604  001D10  0012               	return	
  2605  001D12  0012               	return		;funcret
  2606  001D14                     __end_of_button_number:
  2607                           	opt stack 0
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           prodl	equ	0xFF3
  2613                           intcon	equ	0xFF2
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           fsr2h	equ	0xFDA
  2620                           fsr2l	equ	0xFD9
  2621                           status	equ	0xFD8
  2622                           
  2623 ;; *************** function _strcat *****************
  2624 ;; Defined at:
  2625 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  to              2    0[COMRAM] PTR unsigned char 
  2628 ;;		 -> pin_input(5), 
  2629 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2630 ;;		 -> buffer1(20), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  cp              2    4[COMRAM] PTR unsigned char 
  2633 ;;		 -> pin_input(5), 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  2    0[COMRAM] PTR unsigned char 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2646 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2647 ;;Total ram usage:        6 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_button_number
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text9
  2657  002372                     __ptext9:
  2658                           	opt stack 0
  2659  002372                     _strcat:
  2660                           	opt stack 28
  2661                           
  2662                           ;incstack = 0
  2663  002372  C02A  F02E         	movff	strcat@to,strcat@cp
  2664  002376  C02B  F02F         	movff	strcat@to+1,strcat@cp+1
  2665  00237A  D003               	goto	l3425
  2666  00237C                     l3423:
  2667  00237C  4A2E               	infsnz	strcat@cp,f,c
  2668  00237E  2A2F               	incf	strcat@cp+1,f,c
  2669  002380  D000               	goto	l3425
  2670  002382                     l3425:
  2671  002382  C02E  FFD9         	movff	strcat@cp,fsr2l
  2672  002386  C02F  FFDA         	movff	strcat@cp+1,fsr2h
  2673  00238A  50DF               	movf	indf2,w,c
  2674  00238C  B4D8               	btfsc	status,2,c
  2675  00238E  D007               	goto	l3429
  2676  002390  D7F5               	goto	l3423
  2677  002392  D005               	goto	l3429
  2678  002394                     l3427:
  2679  002394  4A2E               	infsnz	strcat@cp,f,c
  2680  002396  2A2F               	incf	strcat@cp+1,f,c
  2681  002398  4A2C               	infsnz	strcat@from,f,c
  2682  00239A  2A2D               	incf	strcat@from+1,f,c
  2683  00239C  D000               	goto	l3429
  2684  00239E                     l3429:
  2685  00239E  C02C  FFD9         	movff	strcat@from,fsr2l
  2686  0023A2  C02D  FFDA         	movff	strcat@from+1,fsr2h
  2687  0023A6  C02E  FFE1         	movff	strcat@cp,fsr1l
  2688  0023AA  C02F  FFE2         	movff	strcat@cp+1,fsr1h
  2689  0023AE  CFDF FFE7          	movff	indf2,indf1
  2690  0023B2  50E7               	movf	indf1,w,c
  2691  0023B4  A4D8               	btfss	status,2,c
  2692  0023B6  D7EE               	goto	l3427
  2693                           
  2694                           ;	Return value of _strcat is never used
  2695  0023B8  0012               	return		;funcret
  2696  0023BA                     __end_of_strcat:
  2697                           	opt stack 0
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodl	equ	0xFF3
  2703                           intcon	equ	0xFF2
  2704                           postinc0	equ	0xFEE
  2705                           wreg	equ	0xFE8
  2706                           indf1	equ	0xFE7
  2707                           postdec1	equ	0xFE5
  2708                           fsr1h	equ	0xFE2
  2709                           fsr1l	equ	0xFE1
  2710                           indf2	equ	0xFDF
  2711                           fsr2h	equ	0xFDA
  2712                           fsr2l	equ	0xFD9
  2713                           status	equ	0xFD8
  2714                           
  2715 ;; *************** function _button_hash *****************
  2716 ;; Defined at:
  2717 ;;		line 607 in file "main.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;		None               void
  2724 ;; Registers used:
  2725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    9
  2738 ;; This function calls:
  2739 ;;		_pin_input_validator
  2740 ;;		_pin_set
  2741 ;;		_reset_home_callback
  2742 ;; This function is called by:
  2743 ;;		_keyboard_control
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text10
  2748  0028BC                     __ptext10:
  2749                           	opt stack 0
  2750  0028BC                     _button_hash:
  2751                           	opt stack 20
  2752                           
  2753                           ;main.c: 609: reset_home_callback();
  2754                           
  2755                           ;incstack = 0
  2756  0028BC  EC02  F015         	call	_reset_home_callback	;wreg free
  2757                           
  2758                           ;main.c: 611: if(activity == 1){
  2759  0028C0  0403               	decf	_activity,w,c
  2760  0028C2  1004               	iorwf	_activity+1,w,c
  2761  0028C4  A4D8               	btfss	status,2,c
  2762  0028C6  D003               	goto	l3665
  2763                           
  2764                           ;main.c: 612: pin_input_validator();
  2765  0028C8  EC20  F014         	call	_pin_input_validator	;wreg free
  2766  0028CC  D000               	goto	l3665
  2767  0028CE                     l3665:
  2768                           
  2769                           ;main.c: 613: }
  2770                           ;main.c: 615: if(activity == 6){
  2771  0028CE  0E06               	movlw	6
  2772  0028D0  1803               	xorwf	_activity,w,c
  2773  0028D2  1004               	iorwf	_activity+1,w,c
  2774  0028D4  A4D8               	btfss	status,2,c
  2775  0028D6  0012               	return	
  2776                           
  2777                           ;main.c: 616: pin_set();
  2778  0028D8  ECB2  F014         	call	_pin_set	;wreg free
  2779  0028DC  0012               	return	
  2780  0028DE  0012               	return		;funcret
  2781  0028E0                     __end_of_button_hash:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           prodl	equ	0xFF3
  2788                           intcon	equ	0xFF2
  2789                           postinc0	equ	0xFEE
  2790                           wreg	equ	0xFE8
  2791                           indf1	equ	0xFE7
  2792                           postdec1	equ	0xFE5
  2793                           fsr1h	equ	0xFE2
  2794                           fsr1l	equ	0xFE1
  2795                           indf2	equ	0xFDF
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8
  2799                           
  2800 ;; *************** function _pin_set *****************
  2801 ;; Defined at:
  2802 ;;		line 305 in file "main.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    7
  2823 ;; This function calls:
  2824 ;;		_activity_home
  2825 ;;		_strcpy
  2826 ;; This function is called by:
  2827 ;;		_button_hash
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text11
  2832  002964                     __ptext11:
  2833                           	opt stack 0
  2834  002964                     _pin_set:
  2835                           	opt stack 21
  2836                           
  2837                           ;main.c: 307: strcpy(pin, pin_input);
  2838                           
  2839                           ;incstack = 0
  2840  002964  0E94               	movlw	low _pin
  2841  002966  6E2A               	movwf	strcpy@to,c
  2842  002968  0E00               	movlw	high _pin
  2843  00296A  6E2B               	movwf	strcpy@to+1,c
  2844  00296C  0E99               	movlw	low _pin_input
  2845  00296E  6E2C               	movwf	strcpy@from,c
  2846  002970  0E00               	movlw	high _pin_input
  2847  002972  6E2D               	movwf	strcpy@from+1,c
  2848  002974  EC25  F012         	call	_strcpy	;wreg free
  2849                           
  2850                           ;main.c: 308: activity_home();
  2851  002978  EC35  F014         	call	_activity_home	;wreg free
  2852  00297C  0012               	return		;funcret
  2853  00297E                     __end_of_pin_set:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodl	equ	0xFF3
  2860                           intcon	equ	0xFF2
  2861                           postinc0	equ	0xFEE
  2862                           wreg	equ	0xFE8
  2863                           indf1	equ	0xFE7
  2864                           postdec1	equ	0xFE5
  2865                           fsr1h	equ	0xFE2
  2866                           fsr1l	equ	0xFE1
  2867                           indf2	equ	0xFDF
  2868                           fsr2h	equ	0xFDA
  2869                           fsr2l	equ	0xFD9
  2870                           status	equ	0xFD8
  2871                           
  2872 ;; *************** function _pin_input_validator *****************
  2873 ;; Defined at:
  2874 ;;		line 312 in file "main.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;		None               void
  2881 ;; Registers used:
  2882 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;Total ram usage:        0 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:    8
  2895 ;; This function calls:
  2896 ;;		_activity_menu
  2897 ;;		_activity_pin
  2898 ;;		_strcmp
  2899 ;; This function is called by:
  2900 ;;		_button_hash
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text12
  2905  002840                     __ptext12:
  2906                           	opt stack 0
  2907  002840                     _pin_input_validator:
  2908                           	opt stack 20
  2909                           
  2910                           ;main.c: 314: if( strcmp(pin, pin_input) == 0 ){
  2911                           
  2912                           ;incstack = 0
  2913  002840  0E94               	movlw	low _pin
  2914  002842  6E2A               	movwf	strcmp@s1,c
  2915  002844  0E00               	movlw	high _pin
  2916  002846  6E2B               	movwf	strcmp@s1+1,c
  2917  002848  0E99               	movlw	low _pin_input
  2918  00284A  6E2C               	movwf	strcmp@s2,c
  2919  00284C  0E00               	movlw	high _pin_input
  2920  00284E  6E2D               	movwf	strcmp@s2+1,c
  2921  002850  ECF8  F010         	call	_strcmp	;wreg free
  2922  002854  502A               	movf	?_strcmp,w,c
  2923  002856  102B               	iorwf	?_strcmp+1,w,c
  2924  002858  A4D8               	btfss	status,2,c
  2925  00285A  D003               	goto	l3233
  2926                           
  2927                           ;main.c: 315: activity_menu();
  2928  00285C  EC58  F00D         	call	_activity_menu	;wreg free
  2929                           
  2930                           ;main.c: 316: }
  2931  002860  0012               	return	
  2932  002862                     l3233:
  2933                           
  2934                           ;main.c: 317: else {
  2935                           ;main.c: 318: activity_pin();
  2936  002862  EC46  F011         	call	_activity_pin	;wreg free
  2937  002866  0012               	return	
  2938  002868  0012               	return		;funcret
  2939  00286A                     __end_of_pin_input_validator:
  2940                           	opt stack 0
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           prodl	equ	0xFF3
  2946                           intcon	equ	0xFF2
  2947                           postinc0	equ	0xFEE
  2948                           wreg	equ	0xFE8
  2949                           indf1	equ	0xFE7
  2950                           postdec1	equ	0xFE5
  2951                           fsr1h	equ	0xFE2
  2952                           fsr1l	equ	0xFE1
  2953                           indf2	equ	0xFDF
  2954                           fsr2h	equ	0xFDA
  2955                           fsr2l	equ	0xFD9
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function _strcmp *****************
  2959 ;; Defined at:
  2960 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  2963 ;;		 -> pin(5), 
  2964 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  2965 ;;		 -> pin_input(5), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  r               1    5[COMRAM] char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2    0[COMRAM] int 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2981 ;;Total ram usage:        6 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_pin_input_validator
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text13
  2991  0021F0                     __ptext13:
  2992                           	opt stack 0
  2993  0021F0                     _strcmp:
  2994                           	opt stack 27
  2995                           
  2996                           ;incstack = 0
  2997  0021F0  D005               	goto	l2989
  2998  0021F2                     l2987:
  2999  0021F2  4A2A               	infsnz	strcmp@s1,f,c
  3000  0021F4  2A2B               	incf	strcmp@s1+1,f,c
  3001  0021F6  4A2C               	infsnz	strcmp@s2,f,c
  3002  0021F8  2A2D               	incf	strcmp@s2+1,f,c
  3003  0021FA  D000               	goto	l2989
  3004  0021FC                     l2989:
  3005  0021FC  C02A  FFD9         	movff	strcmp@s1,fsr2l
  3006  002200  C02B  FFDA         	movff	strcmp@s1+1,fsr2h
  3007  002204  50DF               	movf	indf2,w,c
  3008  002206  6E2E               	movwf	??_strcmp& (0+255),c
  3009  002208  C02C  FFD9         	movff	strcmp@s2,fsr2l
  3010  00220C  C02D  FFDA         	movff	strcmp@s2+1,fsr2h
  3011  002210  50DF               	movf	indf2,w,c
  3012  002212  0800               	sublw	0
  3013  002214  242E               	addwf	??_strcmp,w,c
  3014  002216  6E2F               	movwf	strcmp@r,c
  3015  002218  502F               	movf	strcmp@r,w,c
  3016  00221A  A4D8               	btfss	status,2,c
  3017  00221C  D009               	goto	l2993
  3018  00221E  C02A  FFD9         	movff	strcmp@s1,fsr2l
  3019  002222  C02B  FFDA         	movff	strcmp@s1+1,fsr2h
  3020  002226  50DF               	movf	indf2,w,c
  3021  002228  B4D8               	btfsc	status,2,c
  3022  00222A  D002               	goto	l2993
  3023  00222C  D7E2               	goto	l2987
  3024  00222E  D000               	goto	l2993
  3025  002230                     l2993:
  3026  002230  502F               	movf	strcmp@r,w,c
  3027  002232  6E2A               	movwf	?_strcmp,c
  3028  002234  6A2B               	clrf	?_strcmp+1,c
  3029  002236  BE2A               	btfsc	?_strcmp,7,c
  3030  002238  062B               	decf	?_strcmp+1,f,c
  3031  00223A  0012               	return	
  3032  00223C  0012               	return		;funcret
  3033  00223E                     __end_of_strcmp:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodl	equ	0xFF3
  3040                           intcon	equ	0xFF2
  3041                           postinc0	equ	0xFEE
  3042                           wreg	equ	0xFE8
  3043                           indf1	equ	0xFE7
  3044                           postdec1	equ	0xFE5
  3045                           fsr1h	equ	0xFE2
  3046                           fsr1l	equ	0xFE1
  3047                           indf2	equ	0xFDF
  3048                           fsr2h	equ	0xFDA
  3049                           fsr2l	equ	0xFD9
  3050                           status	equ	0xFD8
  3051                           
  3052 ;; *************** function _button_asterisk *****************
  3053 ;; Defined at:
  3054 ;;		line 600 in file "main.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;		None               void
  3061 ;; Registers used:
  3062 ;;		cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    1
  3075 ;; This function calls:
  3076 ;;		_reset_home_callback
  3077 ;; This function is called by:
  3078 ;;		_keyboard_control
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text14
  3083  002A0E                     __ptext14:
  3084                           	opt stack 0
  3085  002A0E                     _button_asterisk:
  3086                           	opt stack 28
  3087                           
  3088                           ;main.c: 602: reset_home_callback();
  3089                           
  3090                           ;incstack = 0
  3091  002A0E  EC02  F015         	call	_reset_home_callback	;wreg free
  3092  002A12  0012               	return		;funcret
  3093  002A14                     __end_of_button_asterisk:
  3094                           	opt stack 0
  3095                           tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           prodl	equ	0xFF3
  3100                           intcon	equ	0xFF2
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           indf1	equ	0xFE7
  3104                           postdec1	equ	0xFE5
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           indf2	equ	0xFDF
  3108                           fsr2h	equ	0xFDA
  3109                           fsr2l	equ	0xFD9
  3110                           status	equ	0xFD8
  3111                           
  3112 ;; *************** function _button_D *****************
  3113 ;; Defined at:
  3114 ;;		line 593 in file "main.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;		None               void
  3121 ;; Registers used:
  3122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3132 ;;Total ram usage:        0 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    7
  3135 ;; This function calls:
  3136 ;;		_activity_home
  3137 ;;		_reset_home_callback
  3138 ;; This function is called by:
  3139 ;;		_keyboard_control
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text15
  3144  0029FA                     __ptext15:
  3145                           	opt stack 0
  3146  0029FA                     _button_D:
  3147                           	opt stack 22
  3148                           
  3149                           ;main.c: 595: reset_home_callback();
  3150                           
  3151                           ;incstack = 0
  3152  0029FA  EC02  F015         	call	_reset_home_callback	;wreg free
  3153                           
  3154                           ;main.c: 596: activity_home();
  3155  0029FE  EC35  F014         	call	_activity_home	;wreg free
  3156  002A02  0012               	return		;funcret
  3157  002A04                     __end_of_button_D:
  3158                           	opt stack 0
  3159                           tblptru	equ	0xFF8
  3160                           tblptrh	equ	0xFF7
  3161                           tblptrl	equ	0xFF6
  3162                           tablat	equ	0xFF5
  3163                           prodl	equ	0xFF3
  3164                           intcon	equ	0xFF2
  3165                           postinc0	equ	0xFEE
  3166                           wreg	equ	0xFE8
  3167                           indf1	equ	0xFE7
  3168                           postdec1	equ	0xFE5
  3169                           fsr1h	equ	0xFE2
  3170                           fsr1l	equ	0xFE1
  3171                           indf2	equ	0xFDF
  3172                           fsr2h	equ	0xFDA
  3173                           fsr2l	equ	0xFD9
  3174                           status	equ	0xFD8
  3175                           
  3176 ;; *************** function _button_C *****************
  3177 ;; Defined at:
  3178 ;;		line 583 in file "main.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;		None               void
  3185 ;; Registers used:
  3186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;Total ram usage:        0 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    8
  3199 ;; This function calls:
  3200 ;;		_activity_menu
  3201 ;;		_reset_home_callback
  3202 ;; This function is called by:
  3203 ;;		_keyboard_control
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text16
  3208  002948                     __ptext16:
  3209                           	opt stack 0
  3210  002948                     _button_C:
  3211                           	opt stack 21
  3212                           
  3213                           ;main.c: 585: reset_home_callback();
  3214                           
  3215                           ;incstack = 0
  3216  002948  EC02  F015         	call	_reset_home_callback	;wreg free
  3217                           
  3218                           ;main.c: 587: if(activity != 0 && activity != 1){
  3219  00294C  5003               	movf	_activity,w,c
  3220  00294E  1004               	iorwf	_activity+1,w,c
  3221  002950  B4D8               	btfsc	status,2,c
  3222  002952  0012               	return	
  3223  002954  0403               	decf	_activity,w,c
  3224  002956  1004               	iorwf	_activity+1,w,c
  3225  002958  B4D8               	btfsc	status,2,c
  3226  00295A  0012               	return	
  3227                           
  3228                           ;main.c: 588: activity_menu();
  3229  00295C  EC58  F00D         	call	_activity_menu	;wreg free
  3230  002960  0012               	return	
  3231  002962  0012               	return		;funcret
  3232  002964                     __end_of_button_C:
  3233                           	opt stack 0
  3234                           tblptru	equ	0xFF8
  3235                           tblptrh	equ	0xFF7
  3236                           tblptrl	equ	0xFF6
  3237                           tablat	equ	0xFF5
  3238                           prodl	equ	0xFF3
  3239                           intcon	equ	0xFF2
  3240                           postinc0	equ	0xFEE
  3241                           wreg	equ	0xFE8
  3242                           indf1	equ	0xFE7
  3243                           postdec1	equ	0xFE5
  3244                           fsr1h	equ	0xFE2
  3245                           fsr1l	equ	0xFE1
  3246                           indf2	equ	0xFDF
  3247                           fsr2h	equ	0xFDA
  3248                           fsr2l	equ	0xFD9
  3249                           status	equ	0xFD8
  3250                           
  3251 ;; *************** function _activity_menu *****************
  3252 ;; Defined at:
  3253 ;;		line 207 in file "main.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    7
  3274 ;; This function calls:
  3275 ;;		_action_menu_selector_0
  3276 ;;		_lcd_init
  3277 ;;		_lcd_write
  3278 ;; This function is called by:
  3279 ;;		_pin_input_validator
  3280 ;;		_button_C
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text17
  3285  001AB0                     __ptext17:
  3286                           	opt stack 0
  3287  001AB0                     _activity_menu:
  3288                           	opt stack 20
  3289                           
  3290                           ;main.c: 209: activity = 2;
  3291                           
  3292                           ;incstack = 0
  3293  001AB0  0E00               	movlw	0
  3294  001AB2  6E04               	movwf	_activity+1,c
  3295  001AB4  0E02               	movlw	2
  3296  001AB6  6E03               	movwf	_activity,c
  3297                           
  3298                           ;main.c: 210: lcd_init();
  3299  001AB8  EC99  F00D         	call	_lcd_init	;wreg free
  3300                           
  3301                           ;main.c: 211: lcd_write(2,1,"Activar");
  3302  001ABC  0E00               	movlw	0
  3303  001ABE  6E35               	movwf	lcd_write@column+1,c
  3304  001AC0  0E02               	movlw	2
  3305  001AC2  6E34               	movwf	lcd_write@column,c
  3306  001AC4  0E00               	movlw	0
  3307  001AC6  6E37               	movwf	lcd_write@row+1,c
  3308  001AC8  0E01               	movlw	1
  3309  001ACA  6E36               	movwf	lcd_write@row,c
  3310  001ACC  0E58               	movlw	low STR_16
  3311  001ACE  6E38               	movwf	lcd_write@string,c
  3312  001AD0  0E0F               	movlw	high STR_16
  3313  001AD2  6E39               	movwf	lcd_write@string+1,c
  3314  001AD4  ECBF  F014         	call	_lcd_write	;wreg free
  3315                           
  3316                           ;main.c: 212: lcd_write(2,2,"Reloj");
  3317  001AD8  0E00               	movlw	0
  3318  001ADA  6E35               	movwf	lcd_write@column+1,c
  3319  001ADC  0E02               	movlw	2
  3320  001ADE  6E34               	movwf	lcd_write@column,c
  3321  001AE0  0E00               	movlw	0
  3322  001AE2  6E37               	movwf	lcd_write@row+1,c
  3323  001AE4  0E02               	movlw	2
  3324  001AE6  6E36               	movwf	lcd_write@row,c
  3325  001AE8  0EAC               	movlw	low STR_17
  3326  001AEA  6E38               	movwf	lcd_write@string,c
  3327  001AEC  0E0F               	movlw	high STR_17
  3328  001AEE  6E39               	movwf	lcd_write@string+1,c
  3329  001AF0  ECBF  F014         	call	_lcd_write	;wreg free
  3330                           
  3331                           ;main.c: 213: lcd_write(10,1,"Pin");
  3332  001AF4  0E00               	movlw	0
  3333  001AF6  6E35               	movwf	lcd_write@column+1,c
  3334  001AF8  0E0A               	movlw	10
  3335  001AFA  6E34               	movwf	lcd_write@column,c
  3336  001AFC  0E00               	movlw	0
  3337  001AFE  6E37               	movwf	lcd_write@row+1,c
  3338  001B00  0E01               	movlw	1
  3339  001B02  6E36               	movwf	lcd_write@row,c
  3340  001B04  0EDA               	movlw	low STR_18
  3341  001B06  6E38               	movwf	lcd_write@string,c
  3342  001B08  0E0F               	movlw	high STR_18
  3343  001B0A  6E39               	movwf	lcd_write@string+1,c
  3344  001B0C  ECBF  F014         	call	_lcd_write	;wreg free
  3345                           
  3346                           ;main.c: 214: lcd_write(10,2,"Alarma");
  3347  001B10  0E00               	movlw	0
  3348  001B12  6E35               	movwf	lcd_write@column+1,c
  3349  001B14  0E0A               	movlw	10
  3350  001B16  6E34               	movwf	lcd_write@column,c
  3351  001B18  0E00               	movlw	0
  3352  001B1A  6E37               	movwf	lcd_write@row+1,c
  3353  001B1C  0E02               	movlw	2
  3354  001B1E  6E36               	movwf	lcd_write@row,c
  3355  001B20  0E98               	movlw	low STR_19
  3356  001B22  6E38               	movwf	lcd_write@string,c
  3357  001B24  0E0F               	movlw	high STR_19
  3358  001B26  6E39               	movwf	lcd_write@string+1,c
  3359  001B28  ECBF  F014         	call	_lcd_write	;wreg free
  3360                           
  3361                           ;main.c: 215: action_menu_selector_0();
  3362  001B2C  EC0F  F013         	call	_action_menu_selector_0	;wreg free
  3363  001B30  0012               	return		;funcret
  3364  001B32                     __end_of_activity_menu:
  3365                           	opt stack 0
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           prodl	equ	0xFF3
  3371                           intcon	equ	0xFF2
  3372                           postinc0	equ	0xFEE
  3373                           wreg	equ	0xFE8
  3374                           indf1	equ	0xFE7
  3375                           postdec1	equ	0xFE5
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           indf2	equ	0xFDF
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function _button_B *****************
  3384 ;; Defined at:
  3385 ;;		line 550 in file "main.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;		None               void
  3392 ;; Registers used:
  3393 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3403 ;;Total ram usage:        2 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    9
  3406 ;; This function calls:
  3407 ;;		_button_B_menu
  3408 ;;		_button_B_submenu_activation
  3409 ;;		_button_B_submenu_pin_config
  3410 ;;		_button_B_submenu_siren_config
  3411 ;;		_button_B_submenu_siren_tone
  3412 ;;		_button_B_submenu_siren_volume
  3413 ;;		_reset_home_callback
  3414 ;; This function is called by:
  3415 ;;		_keyboard_control
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text18
  3420  001FE6                     __ptext18:
  3421                           	opt stack 0
  3422  001FE6                     _button_B:
  3423                           	opt stack 20
  3424                           
  3425                           ;main.c: 552: reset_home_callback();
  3426                           
  3427                           ;incstack = 0
  3428  001FE6  EC02  F015         	call	_reset_home_callback	;wreg free
  3429                           
  3430                           ;main.c: 554: switch(activity){
  3431  001FEA  D012               	goto	l3639
  3432  001FEC                     l3625:
  3433                           
  3434                           ;main.c: 557: button_B_menu();
  3435  001FEC  ECDD  F011         	call	_button_B_menu	;wreg free
  3436                           
  3437                           ;main.c: 558: break;
  3438  001FF0  0012               	return	
  3439  001FF2                     l3627:
  3440                           
  3441                           ;main.c: 561: button_B_submenu_activation();
  3442  001FF2  EC8A  F013         	call	_button_B_submenu_activation	;wreg free
  3443                           
  3444                           ;main.c: 562: break;
  3445  001FF6  0012               	return	
  3446  001FF8                     l3629:
  3447                           
  3448                           ;main.c: 565: button_B_submenu_pin_config();
  3449  001FF8  ECA7  F013         	call	_button_B_submenu_pin_config	;wreg free
  3450                           
  3451                           ;main.c: 566: break;
  3452  001FFC  0012               	return	
  3453  001FFE                     l3631:
  3454                           
  3455                           ;main.c: 569: button_B_submenu_siren_config();
  3456  001FFE  ECDA  F013         	call	_button_B_submenu_siren_config	;wreg free
  3457                           
  3458                           ;main.c: 570: break;
  3459  002002  0012               	return	
  3460  002004                     l3633:
  3461                           
  3462                           ;main.c: 573: button_B_submenu_siren_volume();
  3463  002004  EC50  F013         	call	_button_B_submenu_siren_volume	;wreg free
  3464                           
  3465                           ;main.c: 574: break;
  3466  002008  0012               	return	
  3467  00200A                     l3635:
  3468                           
  3469                           ;main.c: 577: button_B_submenu_siren_tone();
  3470  00200A  EC6D  F013         	call	_button_B_submenu_siren_tone	;wreg free
  3471                           
  3472                           ;main.c: 579: }
  3473                           
  3474                           ;main.c: 578: break;
  3475  00200E  0012               	return	
  3476  002010                     l3639:
  3477  002010  C003  F03C         	movff	_activity,??_button_B
  3478  002014  C004  F03D         	movff	_activity+1,??_button_B+1
  3479                           
  3480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3481                           ; Switch size 1, requested type "space"
  3482                           ; Number of cases is 1, Range of values is 0 to 0
  3483                           ; switch strategies available:
  3484                           ; Name         Instructions Cycles
  3485                           ; simple_byte            4     3 (average)
  3486                           ;	Chosen strategy is simple_byte
  3487  002018  503D               	movf	??_button_B+1,w,c
  3488  00201A  0A00               	xorlw	0	; case 0
  3489  00201C  A4D8               	btfss	status,2,c
  3490  00201E  0012               	return	
  3491                           
  3492                           ; Switch size 1, requested type "space"
  3493                           ; Number of cases is 6, Range of values is 2 to 9
  3494                           ; switch strategies available:
  3495                           ; Name         Instructions Cycles
  3496                           ; simple_byte           19    10 (average)
  3497                           ;	Chosen strategy is simple_byte
  3498  002020  503C               	movf	??_button_B,w,c
  3499  002022  0A02               	xorlw	2	; case 2
  3500  002024  B4D8               	btfsc	status,2,c
  3501  002026  D7E2               	goto	l3625
  3502  002028  0A06               	xorlw	6	; case 4
  3503  00202A  B4D8               	btfsc	status,2,c
  3504  00202C  D7E2               	goto	l3627
  3505  00202E  0A01               	xorlw	1	; case 5
  3506  002030  B4D8               	btfsc	status,2,c
  3507  002032  D7E2               	goto	l3629
  3508  002034  0A02               	xorlw	2	; case 7
  3509  002036  B4D8               	btfsc	status,2,c
  3510  002038  D7E2               	goto	l3631
  3511  00203A  0A0F               	xorlw	15	; case 8
  3512  00203C  B4D8               	btfsc	status,2,c
  3513  00203E  D7E2               	goto	l3633
  3514  002040  0A01               	xorlw	1	; case 9
  3515  002042  A4D8               	btfss	status,2,c
  3516  002044  0012               	return	
  3517  002046  D7E1               	goto	l3635
  3518  002048  0012               	return		;funcret
  3519  00204A                     __end_of_button_B:
  3520                           	opt stack 0
  3521                           tblptru	equ	0xFF8
  3522                           tblptrh	equ	0xFF7
  3523                           tblptrl	equ	0xFF6
  3524                           tablat	equ	0xFF5
  3525                           prodl	equ	0xFF3
  3526                           intcon	equ	0xFF2
  3527                           postinc0	equ	0xFEE
  3528                           wreg	equ	0xFE8
  3529                           indf1	equ	0xFE7
  3530                           postdec1	equ	0xFE5
  3531                           fsr1h	equ	0xFE2
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8
  3537                           
  3538 ;; *************** function _button_B_submenu_siren_volume *****************
  3539 ;; Defined at:
  3540 ;;		line 514 in file "main.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;		None               void
  3547 ;; Registers used:
  3548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;Total ram usage:        2 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    7
  3561 ;; This function calls:
  3562 ;;		_activity_home
  3563 ;; This function is called by:
  3564 ;;		_button_B
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text19
  3569  0026A0                     __ptext19:
  3570                           	opt stack 0
  3571  0026A0                     _button_B_submenu_siren_volume:
  3572                           	opt stack 21
  3573                           
  3574                           ;main.c: 516: switch(submenu_selected){
  3575                           
  3576                           ;incstack = 0
  3577  0026A0  D009               	goto	l3397
  3578  0026A2                     l3391:
  3579                           
  3580                           ;main.c: 519: alarm_volume = 0;
  3581  0026A2  0E00               	movlw	0
  3582  0026A4  6E08               	movwf	_alarm_volume+1,c
  3583  0026A6  0E00               	movlw	0
  3584  0026A8  D003               	goto	L1
  3585  0026AA                     l3393:
  3586                           
  3587                           ;main.c: 523: alarm_volume = 1;
  3588  0026AA  0E00               	movlw	0
  3589  0026AC  6E08               	movwf	_alarm_volume+1,c
  3590  0026AE  0E01               	movlw	1
  3591  0026B0                     L1:
  3592  0026B0  6E07               	movwf	_alarm_volume,c
  3593                           
  3594                           ;main.c: 526: }
  3595                           
  3596                           ;main.c: 524: break;
  3597  0026B2  D010               	goto	l3399
  3598  0026B4                     l3397:
  3599  0026B4  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_siren_volume
  3600  0026B8  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_siren_volume+1
  3601                           
  3602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3603                           ; Switch size 1, requested type "space"
  3604                           ; Number of cases is 1, Range of values is 0 to 0
  3605                           ; switch strategies available:
  3606                           ; Name         Instructions Cycles
  3607                           ; simple_byte            4     3 (average)
  3608                           ;	Chosen strategy is simple_byte
  3609  0026BC  503B               	movf	??_button_B_submenu_siren_volume+1,w,c
  3610  0026BE  0A00               	xorlw	0	; case 0
  3611  0026C0  A4D8               	btfss	status,2,c
  3612  0026C2  D008               	goto	l3399
  3613                           
  3614                           ; Switch size 1, requested type "space"
  3615                           ; Number of cases is 2, Range of values is 0 to 1
  3616                           ; switch strategies available:
  3617                           ; Name         Instructions Cycles
  3618                           ; simple_byte            7     4 (average)
  3619                           ;	Chosen strategy is simple_byte
  3620  0026C4  503A               	movf	??_button_B_submenu_siren_volume,w,c
  3621  0026C6  0A00               	xorlw	0	; case 0
  3622  0026C8  B4D8               	btfsc	status,2,c
  3623  0026CA  D7EB               	goto	l3391
  3624  0026CC  0A01               	xorlw	1	; case 1
  3625  0026CE  B4D8               	btfsc	status,2,c
  3626  0026D0  D7EC               	goto	l3393
  3627  0026D2  D000               	goto	l3399
  3628  0026D4                     l3399:
  3629                           
  3630                           ;main.c: 528: activity_home();
  3631  0026D4  EC35  F014         	call	_activity_home	;wreg free
  3632  0026D8  0012               	return		;funcret
  3633  0026DA                     __end_of_button_B_submenu_siren_volume:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           prodl	equ	0xFF3
  3640                           intcon	equ	0xFF2
  3641                           postinc0	equ	0xFEE
  3642                           wreg	equ	0xFE8
  3643                           indf1	equ	0xFE7
  3644                           postdec1	equ	0xFE5
  3645                           fsr1h	equ	0xFE2
  3646                           fsr1l	equ	0xFE1
  3647                           indf2	equ	0xFDF
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function _button_B_submenu_siren_tone *****************
  3653 ;; Defined at:
  3654 ;;		line 532 in file "main.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;		None               void
  3661 ;; Registers used:
  3662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3672 ;;Total ram usage:        2 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    7
  3675 ;; This function calls:
  3676 ;;		_activity_home
  3677 ;; This function is called by:
  3678 ;;		_button_B
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text20
  3683  0026DA                     __ptext20:
  3684                           	opt stack 0
  3685  0026DA                     _button_B_submenu_siren_tone:
  3686                           	opt stack 21
  3687                           
  3688                           ;main.c: 534: switch(submenu_selected){
  3689                           
  3690                           ;incstack = 0
  3691  0026DA  D009               	goto	l3413
  3692  0026DC                     l3407:
  3693                           
  3694                           ;main.c: 537: alarm_tone = 0;
  3695  0026DC  0E00               	movlw	0
  3696  0026DE  6E06               	movwf	_alarm_tone+1,c
  3697  0026E0  0E00               	movlw	0
  3698  0026E2  D003               	goto	L2
  3699  0026E4                     l3409:
  3700                           
  3701                           ;main.c: 541: alarm_tone = 1;
  3702  0026E4  0E00               	movlw	0
  3703  0026E6  6E06               	movwf	_alarm_tone+1,c
  3704  0026E8  0E01               	movlw	1
  3705  0026EA                     L2:
  3706  0026EA  6E05               	movwf	_alarm_tone,c
  3707                           
  3708                           ;main.c: 544: }
  3709                           
  3710                           ;main.c: 542: break;
  3711  0026EC  D010               	goto	l3415
  3712  0026EE                     l3413:
  3713  0026EE  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_siren_tone
  3714  0026F2  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_siren_tone+1
  3715                           
  3716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3717                           ; Switch size 1, requested type "space"
  3718                           ; Number of cases is 1, Range of values is 0 to 0
  3719                           ; switch strategies available:
  3720                           ; Name         Instructions Cycles
  3721                           ; simple_byte            4     3 (average)
  3722                           ;	Chosen strategy is simple_byte
  3723  0026F6  503B               	movf	??_button_B_submenu_siren_tone+1,w,c
  3724  0026F8  0A00               	xorlw	0	; case 0
  3725  0026FA  A4D8               	btfss	status,2,c
  3726  0026FC  D008               	goto	l3415
  3727                           
  3728                           ; Switch size 1, requested type "space"
  3729                           ; Number of cases is 2, Range of values is 0 to 1
  3730                           ; switch strategies available:
  3731                           ; Name         Instructions Cycles
  3732                           ; simple_byte            7     4 (average)
  3733                           ;	Chosen strategy is simple_byte
  3734  0026FE  503A               	movf	??_button_B_submenu_siren_tone,w,c
  3735  002700  0A00               	xorlw	0	; case 0
  3736  002702  B4D8               	btfsc	status,2,c
  3737  002704  D7EB               	goto	l3407
  3738  002706  0A01               	xorlw	1	; case 1
  3739  002708  B4D8               	btfsc	status,2,c
  3740  00270A  D7EC               	goto	l3409
  3741  00270C  D000               	goto	l3415
  3742  00270E                     l3415:
  3743                           
  3744                           ;main.c: 546: activity_home();
  3745  00270E  EC35  F014         	call	_activity_home	;wreg free
  3746  002712  0012               	return		;funcret
  3747  002714                     __end_of_button_B_submenu_siren_tone:
  3748                           	opt stack 0
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           prodl	equ	0xFF3
  3754                           intcon	equ	0xFF2
  3755                           postinc0	equ	0xFEE
  3756                           wreg	equ	0xFE8
  3757                           indf1	equ	0xFE7
  3758                           postdec1	equ	0xFE5
  3759                           fsr1h	equ	0xFE2
  3760                           fsr1l	equ	0xFE1
  3761                           indf2	equ	0xFDF
  3762                           fsr2h	equ	0xFDA
  3763                           fsr2l	equ	0xFD9
  3764                           status	equ	0xFD8
  3765                           
  3766 ;; *************** function _button_B_submenu_siren_config *****************
  3767 ;; Defined at:
  3768 ;;		line 498 in file "main.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;		None               void
  3775 ;; Registers used:
  3776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;Total ram usage:        2 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    8
  3789 ;; This function calls:
  3790 ;;		_activity_submenu_siren_tone
  3791 ;;		_activity_submenu_siren_volume
  3792 ;; This function is called by:
  3793 ;;		_button_B
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text21
  3798  0027B4                     __ptext21:
  3799                           	opt stack 0
  3800  0027B4                     _button_B_submenu_siren_config:
  3801                           	opt stack 20
  3802                           
  3803                           ;main.c: 500: switch(submenu_selected){
  3804                           
  3805                           ;incstack = 0
  3806  0027B4  D006               	goto	l3383
  3807  0027B6                     l3377:
  3808                           
  3809                           ;main.c: 503: activity_submenu_siren_volume();
  3810  0027B6  ECC1  F00E         	call	_activity_submenu_siren_volume	;wreg free
  3811                           
  3812                           ;main.c: 504: break;
  3813  0027BA  0012               	return	
  3814  0027BC                     l3379:
  3815                           
  3816                           ;main.c: 507: activity_submenu_siren_tone();
  3817  0027BC  ECF4  F00E         	call	_activity_submenu_siren_tone	;wreg free
  3818                           
  3819                           ;main.c: 510: }
  3820                           
  3821                           ;main.c: 508: break;
  3822  0027C0  0012               	return	
  3823  0027C2                     l3383:
  3824  0027C2  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_siren_config
  3825  0027C6  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_siren_config+1
  3826                           
  3827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3828                           ; Switch size 1, requested type "space"
  3829                           ; Number of cases is 1, Range of values is 0 to 0
  3830                           ; switch strategies available:
  3831                           ; Name         Instructions Cycles
  3832                           ; simple_byte            4     3 (average)
  3833                           ;	Chosen strategy is simple_byte
  3834  0027CA  503B               	movf	??_button_B_submenu_siren_config+1,w,c
  3835  0027CC  0A00               	xorlw	0	; case 0
  3836  0027CE  A4D8               	btfss	status,2,c
  3837  0027D0  0012               	return	
  3838                           
  3839                           ; Switch size 1, requested type "space"
  3840                           ; Number of cases is 2, Range of values is 0 to 1
  3841                           ; switch strategies available:
  3842                           ; Name         Instructions Cycles
  3843                           ; simple_byte            7     4 (average)
  3844                           ;	Chosen strategy is simple_byte
  3845  0027D2  503A               	movf	??_button_B_submenu_siren_config,w,c
  3846  0027D4  0A00               	xorlw	0	; case 0
  3847  0027D6  B4D8               	btfsc	status,2,c
  3848  0027D8  D7EE               	goto	l3377
  3849  0027DA  0A01               	xorlw	1	; case 1
  3850  0027DC  A4D8               	btfss	status,2,c
  3851  0027DE  0012               	return	
  3852  0027E0  D7ED               	goto	l3379
  3853  0027E2  0012               	return		;funcret
  3854  0027E4                     __end_of_button_B_submenu_siren_config:
  3855                           	opt stack 0
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           indf1	equ	0xFE7
  3865                           postdec1	equ	0xFE5
  3866                           fsr1h	equ	0xFE2
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873 ;; *************** function _activity_submenu_siren_volume *****************
  3874 ;; Defined at:
  3875 ;;		line 258 in file "main.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;		None               void
  3882 ;; Registers used:
  3883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;Total ram usage:        0 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    7
  3896 ;; This function calls:
  3897 ;;		_action_submenu_selector_0
  3898 ;;		_lcd_init
  3899 ;;		_lcd_write
  3900 ;; This function is called by:
  3901 ;;		_button_B_submenu_siren_config
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text22
  3906  001D82                     __ptext22:
  3907                           	opt stack 0
  3908  001D82                     _activity_submenu_siren_volume:
  3909                           	opt stack 20
  3910                           
  3911                           ;main.c: 260: activity = 8;
  3912                           
  3913                           ;incstack = 0
  3914  001D82  0E00               	movlw	0
  3915  001D84  6E04               	movwf	_activity+1,c
  3916  001D86  0E08               	movlw	8
  3917  001D88  6E03               	movwf	_activity,c
  3918                           
  3919                           ;main.c: 261: lcd_init();
  3920  001D8A  EC99  F00D         	call	_lcd_init	;wreg free
  3921                           
  3922                           ;main.c: 262: lcd_write(1,1,"Volumen");
  3923  001D8E  0E00               	movlw	0
  3924  001D90  6E35               	movwf	lcd_write@column+1,c
  3925  001D92  0E01               	movlw	1
  3926  001D94  6E34               	movwf	lcd_write@column,c
  3927  001D96  0E00               	movlw	0
  3928  001D98  6E37               	movwf	lcd_write@row+1,c
  3929  001D9A  0E01               	movlw	1
  3930  001D9C  6E36               	movwf	lcd_write@row,c
  3931  001D9E  0E48               	movlw	low STR_27
  3932  001DA0  6E38               	movwf	lcd_write@string,c
  3933  001DA2  0E0F               	movlw	high STR_27
  3934  001DA4  6E39               	movwf	lcd_write@string+1,c
  3935  001DA6  ECBF  F014         	call	_lcd_write	;wreg free
  3936                           
  3937                           ;main.c: 263: lcd_write(10,1,"Bajo");
  3938  001DAA  0E00               	movlw	0
  3939  001DAC  6E35               	movwf	lcd_write@column+1,c
  3940  001DAE  0E0A               	movlw	10
  3941  001DB0  6E34               	movwf	lcd_write@column,c
  3942  001DB2  0E00               	movlw	0
  3943  001DB4  6E37               	movwf	lcd_write@row+1,c
  3944  001DB6  0E01               	movlw	1
  3945  001DB8  6E36               	movwf	lcd_write@row,c
  3946  001DBA  0EC2               	movlw	low STR_30
  3947  001DBC  6E38               	movwf	lcd_write@string,c
  3948  001DBE  0E0F               	movlw	high STR_30
  3949  001DC0  6E39               	movwf	lcd_write@string+1,c
  3950  001DC2  ECBF  F014         	call	_lcd_write	;wreg free
  3951                           
  3952                           ;main.c: 264: lcd_write(10,2,"Alto");
  3953  001DC6  0E00               	movlw	0
  3954  001DC8  6E35               	movwf	lcd_write@column+1,c
  3955  001DCA  0E0A               	movlw	10
  3956  001DCC  6E34               	movwf	lcd_write@column,c
  3957  001DCE  0E00               	movlw	0
  3958  001DD0  6E37               	movwf	lcd_write@row+1,c
  3959  001DD2  0E02               	movlw	2
  3960  001DD4  6E36               	movwf	lcd_write@row,c
  3961  001DD6  0ECC               	movlw	low STR_31
  3962  001DD8  6E38               	movwf	lcd_write@string,c
  3963  001DDA  0E0F               	movlw	high STR_31
  3964  001DDC  6E39               	movwf	lcd_write@string+1,c
  3965  001DDE  ECBF  F014         	call	_lcd_write	;wreg free
  3966                           
  3967                           ;main.c: 265: action_submenu_selector_0();
  3968  001DE2  EC8B  F012         	call	_action_submenu_selector_0	;wreg free
  3969  001DE6  0012               	return		;funcret
  3970  001DE8                     __end_of_activity_submenu_siren_volume:
  3971                           	opt stack 0
  3972                           tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           postinc0	equ	0xFEE
  3979                           wreg	equ	0xFE8
  3980                           indf1	equ	0xFE7
  3981                           postdec1	equ	0xFE5
  3982                           fsr1h	equ	0xFE2
  3983                           fsr1l	equ	0xFE1
  3984                           indf2	equ	0xFDF
  3985                           fsr2h	equ	0xFDA
  3986                           fsr2l	equ	0xFD9
  3987                           status	equ	0xFD8
  3988                           
  3989 ;; *************** function _activity_submenu_siren_tone *****************
  3990 ;; Defined at:
  3991 ;;		line 269 in file "main.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;		None               void
  3998 ;; Registers used:
  3999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    7
  4012 ;; This function calls:
  4013 ;;		_action_submenu_selector_0
  4014 ;;		_lcd_init
  4015 ;;		_lcd_write
  4016 ;; This function is called by:
  4017 ;;		_button_B_submenu_siren_config
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text23
  4022  001DE8                     __ptext23:
  4023                           	opt stack 0
  4024  001DE8                     _activity_submenu_siren_tone:
  4025                           	opt stack 20
  4026                           
  4027                           ;main.c: 271: activity = 9;
  4028                           
  4029                           ;incstack = 0
  4030  001DE8  0E00               	movlw	0
  4031  001DEA  6E04               	movwf	_activity+1,c
  4032  001DEC  0E09               	movlw	9
  4033  001DEE  6E03               	movwf	_activity,c
  4034                           
  4035                           ;main.c: 272: lcd_init();
  4036  001DF0  EC99  F00D         	call	_lcd_init	;wreg free
  4037                           
  4038                           ;main.c: 273: lcd_write(1,1,"Tono");
  4039  001DF4  0E00               	movlw	0
  4040  001DF6  6E35               	movwf	lcd_write@column+1,c
  4041  001DF8  0E01               	movlw	1
  4042  001DFA  6E34               	movwf	lcd_write@column,c
  4043  001DFC  0E00               	movlw	0
  4044  001DFE  6E37               	movwf	lcd_write@row+1,c
  4045  001E00  0E01               	movlw	1
  4046  001E02  6E36               	movwf	lcd_write@row,c
  4047  001E04  0EC7               	movlw	low STR_28
  4048  001E06  6E38               	movwf	lcd_write@string,c
  4049  001E08  0E0F               	movlw	high STR_28
  4050  001E0A  6E39               	movwf	lcd_write@string+1,c
  4051  001E0C  ECBF  F014         	call	_lcd_write	;wreg free
  4052                           
  4053                           ;main.c: 274: lcd_write(10,1,"Beep 1");
  4054  001E10  0E00               	movlw	0
  4055  001E12  6E35               	movwf	lcd_write@column+1,c
  4056  001E14  0E0A               	movlw	10
  4057  001E16  6E34               	movwf	lcd_write@column,c
  4058  001E18  0E00               	movlw	0
  4059  001E1A  6E37               	movwf	lcd_write@row+1,c
  4060  001E1C  0E01               	movlw	1
  4061  001E1E  6E36               	movwf	lcd_write@row,c
  4062  001E20  0E60               	movlw	low STR_33
  4063  001E22  6E38               	movwf	lcd_write@string,c
  4064  001E24  0E0F               	movlw	high STR_33
  4065  001E26  6E39               	movwf	lcd_write@string+1,c
  4066  001E28  ECBF  F014         	call	_lcd_write	;wreg free
  4067                           
  4068                           ;main.c: 275: lcd_write(10,2,"Beep 2");
  4069  001E2C  0E00               	movlw	0
  4070  001E2E  6E35               	movwf	lcd_write@column+1,c
  4071  001E30  0E0A               	movlw	10
  4072  001E32  6E34               	movwf	lcd_write@column,c
  4073  001E34  0E00               	movlw	0
  4074  001E36  6E37               	movwf	lcd_write@row+1,c
  4075  001E38  0E02               	movlw	2
  4076  001E3A  6E36               	movwf	lcd_write@row,c
  4077  001E3C  0E6E               	movlw	low STR_34
  4078  001E3E  6E38               	movwf	lcd_write@string,c
  4079  001E40  0E0F               	movlw	high STR_34
  4080  001E42  6E39               	movwf	lcd_write@string+1,c
  4081  001E44  ECBF  F014         	call	_lcd_write	;wreg free
  4082                           
  4083                           ;main.c: 276: action_submenu_selector_0();
  4084  001E48  EC8B  F012         	call	_action_submenu_selector_0	;wreg free
  4085  001E4C  0012               	return		;funcret
  4086  001E4E                     __end_of_activity_submenu_siren_tone:
  4087                           	opt stack 0
  4088                           tblptru	equ	0xFF8
  4089                           tblptrh	equ	0xFF7
  4090                           tblptrl	equ	0xFF6
  4091                           tablat	equ	0xFF5
  4092                           prodl	equ	0xFF3
  4093                           intcon	equ	0xFF2
  4094                           postinc0	equ	0xFEE
  4095                           wreg	equ	0xFE8
  4096                           indf1	equ	0xFE7
  4097                           postdec1	equ	0xFE5
  4098                           fsr1h	equ	0xFE2
  4099                           fsr1l	equ	0xFE1
  4100                           indf2	equ	0xFDF
  4101                           fsr2h	equ	0xFDA
  4102                           fsr2l	equ	0xFD9
  4103                           status	equ	0xFD8
  4104                           
  4105 ;; *************** function _button_B_submenu_pin_config *****************
  4106 ;; Defined at:
  4107 ;;		line 481 in file "main.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;		None               void
  4114 ;; Registers used:
  4115 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4125 ;;Total ram usage:        2 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    7
  4128 ;; This function calls:
  4129 ;;		_activity_home
  4130 ;;		_activity_submenu_pin_set
  4131 ;;		_pin_reset
  4132 ;; This function is called by:
  4133 ;;		_button_B
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text24
  4138  00274E                     __ptext24:
  4139                           	opt stack 0
  4140  00274E                     _button_B_submenu_pin_config:
  4141                           	opt stack 21
  4142                           
  4143                           ;main.c: 483: switch(submenu_selected){
  4144                           
  4145                           ;incstack = 0
  4146  00274E  D008               	goto	l3369
  4147  002750                     l3361:
  4148                           
  4149                           ;main.c: 486: activity_submenu_pin_set();
  4150  002750  EC1F  F011         	call	_activity_submenu_pin_set	;wreg free
  4151                           
  4152                           ;main.c: 487: break;
  4153  002754  0012               	return	
  4154  002756                     l3363:
  4155                           
  4156                           ;main.c: 490: pin_reset();
  4157  002756  ECCB  F014         	call	_pin_reset	;wreg free
  4158                           
  4159                           ;main.c: 491: activity_home();
  4160  00275A  EC35  F014         	call	_activity_home	;wreg free
  4161                           
  4162                           ;main.c: 494: }
  4163                           
  4164                           ;main.c: 492: break;
  4165  00275E  0012               	return	
  4166  002760                     l3369:
  4167  002760  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_pin_config
  4168  002764  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_pin_config+1
  4169                           
  4170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4171                           ; Switch size 1, requested type "space"
  4172                           ; Number of cases is 1, Range of values is 0 to 0
  4173                           ; switch strategies available:
  4174                           ; Name         Instructions Cycles
  4175                           ; simple_byte            4     3 (average)
  4176                           ;	Chosen strategy is simple_byte
  4177  002768  503B               	movf	??_button_B_submenu_pin_config+1,w,c
  4178  00276A  0A00               	xorlw	0	; case 0
  4179  00276C  A4D8               	btfss	status,2,c
  4180  00276E  0012               	return	
  4181                           
  4182                           ; Switch size 1, requested type "space"
  4183                           ; Number of cases is 2, Range of values is 0 to 1
  4184                           ; switch strategies available:
  4185                           ; Name         Instructions Cycles
  4186                           ; simple_byte            7     4 (average)
  4187                           ;	Chosen strategy is simple_byte
  4188  002770  503A               	movf	??_button_B_submenu_pin_config,w,c
  4189  002772  0A00               	xorlw	0	; case 0
  4190  002774  B4D8               	btfsc	status,2,c
  4191  002776  D7EC               	goto	l3361
  4192  002778  0A01               	xorlw	1	; case 1
  4193  00277A  A4D8               	btfss	status,2,c
  4194  00277C  0012               	return	
  4195  00277E  D7EB               	goto	l3363
  4196  002780  0012               	return		;funcret
  4197  002782                     __end_of_button_B_submenu_pin_config:
  4198                           	opt stack 0
  4199                           tblptru	equ	0xFF8
  4200                           tblptrh	equ	0xFF7
  4201                           tblptrl	equ	0xFF6
  4202                           tablat	equ	0xFF5
  4203                           prodl	equ	0xFF3
  4204                           intcon	equ	0xFF2
  4205                           postinc0	equ	0xFEE
  4206                           wreg	equ	0xFE8
  4207                           indf1	equ	0xFE7
  4208                           postdec1	equ	0xFE5
  4209                           fsr1h	equ	0xFE2
  4210                           fsr1l	equ	0xFE1
  4211                           indf2	equ	0xFDF
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function _pin_reset *****************
  4217 ;; Defined at:
  4218 ;;		line 323 in file "main.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;		None               void
  4225 ;; Registers used:
  4226 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4236 ;;Total ram usage:        0 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    1
  4239 ;; This function calls:
  4240 ;;		_strcpy
  4241 ;; This function is called by:
  4242 ;;		_button_B_submenu_pin_config
  4243 ;;		_setup
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text25
  4248  002996                     __ptext25:
  4249                           	opt stack 0
  4250  002996                     _pin_reset:
  4251                           	opt stack 28
  4252                           
  4253                           ;main.c: 325: strcpy(pin, "1234");
  4254                           
  4255                           ;incstack = 0
  4256  002996  0E94               	movlw	low _pin
  4257  002998  6E2A               	movwf	strcpy@to,c
  4258  00299A  0E00               	movlw	high _pin
  4259  00299C  6E2B               	movwf	strcpy@to+1,c
  4260  00299E  0EB8               	movlw	low STR_40
  4261  0029A0  6E2C               	movwf	strcpy@from,c
  4262  0029A2  0E0F               	movlw	high STR_40
  4263  0029A4  6E2D               	movwf	strcpy@from+1,c
  4264  0029A6  EC25  F012         	call	_strcpy	;wreg free
  4265  0029AA  0012               	return		;funcret
  4266  0029AC                     __end_of_pin_reset:
  4267                           	opt stack 0
  4268                           tblptru	equ	0xFF8
  4269                           tblptrh	equ	0xFF7
  4270                           tblptrl	equ	0xFF6
  4271                           tablat	equ	0xFF5
  4272                           prodl	equ	0xFF3
  4273                           intcon	equ	0xFF2
  4274                           postinc0	equ	0xFEE
  4275                           wreg	equ	0xFE8
  4276                           indf1	equ	0xFE7
  4277                           postdec1	equ	0xFE5
  4278                           fsr1h	equ	0xFE2
  4279                           fsr1l	equ	0xFE1
  4280                           indf2	equ	0xFDF
  4281                           fsr2h	equ	0xFDA
  4282                           fsr2l	equ	0xFD9
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function _activity_submenu_pin_set *****************
  4286 ;; Defined at:
  4287 ;;		line 292 in file "main.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;		None               void
  4294 ;; Registers used:
  4295 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    6
  4308 ;; This function calls:
  4309 ;;		_lcd_comand
  4310 ;;		_lcd_gotoxy
  4311 ;;		_lcd_init
  4312 ;;		_lcd_write
  4313 ;;		_strcpy
  4314 ;; This function is called by:
  4315 ;;		_button_B_submenu_pin_config
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text26
  4320  00223E                     __ptext26:
  4321                           	opt stack 0
  4322  00223E                     _activity_submenu_pin_set:
  4323                           	opt stack 21
  4324                           
  4325                           ;main.c: 294: activity = 6;
  4326                           
  4327                           ;incstack = 0
  4328  00223E  0E00               	movlw	0
  4329  002240  6E04               	movwf	_activity+1,c
  4330  002242  0E06               	movlw	6
  4331  002244  6E03               	movwf	_activity,c
  4332                           
  4333                           ;main.c: 295: strcpy(pin_input, "");
  4334  002246  0E99               	movlw	low _pin_input
  4335  002248  6E2A               	movwf	strcpy@to,c
  4336  00224A  0E00               	movlw	high _pin_input
  4337  00224C  6E2B               	movwf	strcpy@to+1,c
  4338  00224E  0EE5               	movlw	low (STR_3+1)
  4339  002250  6E2C               	movwf	strcpy@from,c
  4340  002252  0E0F               	movlw	high (STR_3+1)
  4341  002254  6E2D               	movwf	strcpy@from+1,c
  4342  002256  EC25  F012         	call	_strcpy	;wreg free
  4343                           
  4344                           ;main.c: 296: lcd_init();
  4345  00225A  EC99  F00D         	call	_lcd_init	;wreg free
  4346                           
  4347                           ;main.c: 297: lcd_write(1,1,"Nuevo PIN:");
  4348  00225E  0E00               	movlw	0
  4349  002260  6E35               	movwf	lcd_write@column+1,c
  4350  002262  0E01               	movlw	1
  4351  002264  6E34               	movwf	lcd_write@column,c
  4352  002266  0E00               	movlw	0
  4353  002268  6E37               	movwf	lcd_write@row+1,c
  4354  00226A  0E01               	movlw	1
  4355  00226C  6E36               	movwf	lcd_write@row,c
  4356  00226E  0E3D               	movlw	low STR_39
  4357  002270  6E38               	movwf	lcd_write@string,c
  4358  002272  0E0F               	movlw	high STR_39
  4359  002274  6E39               	movwf	lcd_write@string+1,c
  4360  002276  ECBF  F014         	call	_lcd_write	;wreg free
  4361                           
  4362                           ;main.c: 298: lcd_gotoxy(1,2);
  4363  00227A  0E02               	movlw	2
  4364  00227C  6E2E               	movwf	lcd_gotoxy@y,c
  4365  00227E  0E01               	movlw	1
  4366  002280  EC70  F014         	call	_lcd_gotoxy
  4367                           
  4368                           ;main.c: 299: lcd_comand(0b00001111);
  4369  002284  0E0F               	movlw	15
  4370  002286  ECF1  F014         	call	_lcd_comand
  4371  00228A  0012               	return		;funcret
  4372  00228C                     __end_of_activity_submenu_pin_set:
  4373                           	opt stack 0
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodl	equ	0xFF3
  4379                           intcon	equ	0xFF2
  4380                           postinc0	equ	0xFEE
  4381                           wreg	equ	0xFE8
  4382                           indf1	equ	0xFE7
  4383                           postdec1	equ	0xFE5
  4384                           fsr1h	equ	0xFE2
  4385                           fsr1l	equ	0xFE1
  4386                           indf2	equ	0xFDF
  4387                           fsr2h	equ	0xFDA
  4388                           fsr2l	equ	0xFD9
  4389                           status	equ	0xFD8
  4390                           
  4391 ;; *************** function _button_B_submenu_activation *****************
  4392 ;; Defined at:
  4393 ;;		line 463 in file "main.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;		None               void
  4400 ;; Registers used:
  4401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4411 ;;Total ram usage:        2 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    7
  4414 ;; This function calls:
  4415 ;;		_activity_home
  4416 ;; This function is called by:
  4417 ;;		_button_B
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text27
  4422  002714                     __ptext27:
  4423                           	opt stack 0
  4424  002714                     _button_B_submenu_activation:
  4425                           	opt stack 21
  4426                           
  4427                           ;main.c: 465: switch(submenu_selected){
  4428                           
  4429                           ;incstack = 0
  4430  002714  D009               	goto	l3351
  4431  002716                     l3345:
  4432                           
  4433                           ;main.c: 468: state = 1;
  4434  002716  0E00               	movlw	0
  4435  002718  6E1E               	movwf	_state+1,c
  4436  00271A  0E01               	movlw	1
  4437  00271C  D003               	goto	L3
  4438  00271E                     l3347:
  4439                           
  4440                           ;main.c: 472: state = 0;
  4441  00271E  0E00               	movlw	0
  4442  002720  6E1E               	movwf	_state+1,c
  4443  002722  0E00               	movlw	0
  4444  002724                     L3:
  4445  002724  6E1D               	movwf	_state,c
  4446                           
  4447                           ;main.c: 475: }
  4448                           
  4449                           ;main.c: 473: break;
  4450  002726  D010               	goto	l3353
  4451  002728                     l3351:
  4452  002728  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_activation
  4453  00272C  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_activation+1
  4454                           
  4455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4456                           ; Switch size 1, requested type "space"
  4457                           ; Number of cases is 1, Range of values is 0 to 0
  4458                           ; switch strategies available:
  4459                           ; Name         Instructions Cycles
  4460                           ; simple_byte            4     3 (average)
  4461                           ;	Chosen strategy is simple_byte
  4462  002730  503B               	movf	??_button_B_submenu_activation+1,w,c
  4463  002732  0A00               	xorlw	0	; case 0
  4464  002734  A4D8               	btfss	status,2,c
  4465  002736  D008               	goto	l3353
  4466                           
  4467                           ; Switch size 1, requested type "space"
  4468                           ; Number of cases is 2, Range of values is 0 to 1
  4469                           ; switch strategies available:
  4470                           ; Name         Instructions Cycles
  4471                           ; simple_byte            7     4 (average)
  4472                           ;	Chosen strategy is simple_byte
  4473  002738  503A               	movf	??_button_B_submenu_activation,w,c
  4474  00273A  0A00               	xorlw	0	; case 0
  4475  00273C  B4D8               	btfsc	status,2,c
  4476  00273E  D7EB               	goto	l3345
  4477  002740  0A01               	xorlw	1	; case 1
  4478  002742  B4D8               	btfsc	status,2,c
  4479  002744  D7EC               	goto	l3347
  4480  002746  D000               	goto	l3353
  4481  002748                     l3353:
  4482                           
  4483                           ;main.c: 477: activity_home();
  4484  002748  EC35  F014         	call	_activity_home	;wreg free
  4485  00274C  0012               	return		;funcret
  4486  00274E                     __end_of_button_B_submenu_activation:
  4487                           	opt stack 0
  4488                           tblptru	equ	0xFF8
  4489                           tblptrh	equ	0xFF7
  4490                           tblptrl	equ	0xFF6
  4491                           tablat	equ	0xFF5
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           postinc0	equ	0xFEE
  4495                           wreg	equ	0xFE8
  4496                           indf1	equ	0xFE7
  4497                           postdec1	equ	0xFE5
  4498                           fsr1h	equ	0xFE2
  4499                           fsr1l	equ	0xFE1
  4500                           indf2	equ	0xFDF
  4501                           fsr2h	equ	0xFDA
  4502                           fsr2l	equ	0xFD9
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _button_B_menu *****************
  4506 ;; Defined at:
  4507 ;;		line 439 in file "main.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;		None               void
  4514 ;; Registers used:
  4515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4525 ;;Total ram usage:        2 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    8
  4528 ;; This function calls:
  4529 ;;		_activity_submenu_activation
  4530 ;;		_activity_submenu_clock
  4531 ;;		_activity_submenu_pin
  4532 ;;		_activity_submenu_siren
  4533 ;; This function is called by:
  4534 ;;		_button_B
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text28
  4539  0023BA                     __ptext28:
  4540                           	opt stack 0
  4541  0023BA                     _button_B_menu:
  4542                           	opt stack 20
  4543                           
  4544                           ;main.c: 441: switch(menu_selected){
  4545                           
  4546                           ;incstack = 0
  4547  0023BA  D00C               	goto	l3337
  4548  0023BC                     l3327:
  4549                           
  4550                           ;main.c: 444: activity_submenu_activation();
  4551  0023BC  ECC0  F00F         	call	_activity_submenu_activation	;wreg free
  4552                           
  4553                           ;main.c: 445: break;
  4554  0023C0  0012               	return	
  4555  0023C2                     l3329:
  4556                           
  4557                           ;main.c: 448: activity_submenu_clock();
  4558  0023C2  EC8D  F00F         	call	_activity_submenu_clock	;wreg free
  4559                           
  4560                           ;main.c: 449: break;
  4561  0023C6  0012               	return	
  4562  0023C8                     l3331:
  4563                           
  4564                           ;main.c: 452: activity_submenu_pin();
  4565  0023C8  EC5A  F00F         	call	_activity_submenu_pin	;wreg free
  4566                           
  4567                           ;main.c: 453: break;
  4568  0023CC  0012               	return	
  4569  0023CE                     l3333:
  4570                           
  4571                           ;main.c: 456: activity_submenu_siren();
  4572  0023CE  EC27  F00F         	call	_activity_submenu_siren	;wreg free
  4573                           
  4574                           ;main.c: 459: }
  4575                           
  4576                           ;main.c: 457: break;
  4577  0023D2  0012               	return	
  4578  0023D4                     l3337:
  4579  0023D4  C017  F03A         	movff	_menu_selected,??_button_B_menu
  4580  0023D8  C018  F03B         	movff	_menu_selected+1,??_button_B_menu+1
  4581                           
  4582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4583                           ; Switch size 1, requested type "space"
  4584                           ; Number of cases is 1, Range of values is 0 to 0
  4585                           ; switch strategies available:
  4586                           ; Name         Instructions Cycles
  4587                           ; simple_byte            4     3 (average)
  4588                           ;	Chosen strategy is simple_byte
  4589  0023DC  503B               	movf	??_button_B_menu+1,w,c
  4590  0023DE  0A00               	xorlw	0	; case 0
  4591  0023E0  A4D8               	btfss	status,2,c
  4592  0023E2  0012               	return	
  4593                           
  4594                           ; Switch size 1, requested type "space"
  4595                           ; Number of cases is 4, Range of values is 0 to 3
  4596                           ; switch strategies available:
  4597                           ; Name         Instructions Cycles
  4598                           ; simple_byte           13     7 (average)
  4599                           ;	Chosen strategy is simple_byte
  4600  0023E4  503A               	movf	??_button_B_menu,w,c
  4601  0023E6  0A00               	xorlw	0	; case 0
  4602  0023E8  B4D8               	btfsc	status,2,c
  4603  0023EA  D7E8               	goto	l3327
  4604  0023EC  0A01               	xorlw	1	; case 1
  4605  0023EE  B4D8               	btfsc	status,2,c
  4606  0023F0  D7E8               	goto	l3329
  4607  0023F2  0A03               	xorlw	3	; case 2
  4608  0023F4  B4D8               	btfsc	status,2,c
  4609  0023F6  D7E8               	goto	l3331
  4610  0023F8  0A01               	xorlw	1	; case 3
  4611  0023FA  A4D8               	btfss	status,2,c
  4612  0023FC  0012               	return	
  4613  0023FE  D7E7               	goto	l3333
  4614  002400  0012               	return		;funcret
  4615  002402                     __end_of_button_B_menu:
  4616                           	opt stack 0
  4617                           tblptru	equ	0xFF8
  4618                           tblptrh	equ	0xFF7
  4619                           tblptrl	equ	0xFF6
  4620                           tablat	equ	0xFF5
  4621                           prodl	equ	0xFF3
  4622                           intcon	equ	0xFF2
  4623                           postinc0	equ	0xFEE
  4624                           wreg	equ	0xFE8
  4625                           indf1	equ	0xFE7
  4626                           postdec1	equ	0xFE5
  4627                           fsr1h	equ	0xFE2
  4628                           fsr1l	equ	0xFE1
  4629                           indf2	equ	0xFDF
  4630                           fsr2h	equ	0xFDA
  4631                           fsr2l	equ	0xFD9
  4632                           status	equ	0xFD8
  4633                           
  4634 ;; *************** function _activity_submenu_siren *****************
  4635 ;; Defined at:
  4636 ;;		line 247 in file "main.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;		None               void
  4643 ;; Registers used:
  4644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    7
  4657 ;; This function calls:
  4658 ;;		_action_submenu_selector_0
  4659 ;;		_lcd_init
  4660 ;;		_lcd_write
  4661 ;; This function is called by:
  4662 ;;		_button_B_menu
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text29
  4667  001E4E                     __ptext29:
  4668                           	opt stack 0
  4669  001E4E                     _activity_submenu_siren:
  4670                           	opt stack 20
  4671                           
  4672                           ;main.c: 249: activity = 7;
  4673                           
  4674                           ;incstack = 0
  4675  001E4E  0E00               	movlw	0
  4676  001E50  6E04               	movwf	_activity+1,c
  4677  001E52  0E07               	movlw	7
  4678  001E54  6E03               	movwf	_activity,c
  4679                           
  4680                           ;main.c: 250: lcd_init();
  4681  001E56  EC99  F00D         	call	_lcd_init	;wreg free
  4682                           
  4683                           ;main.c: 251: lcd_write(1,1,"Sirena");
  4684  001E5A  0E00               	movlw	0
  4685  001E5C  6E35               	movwf	lcd_write@column+1,c
  4686  001E5E  0E01               	movlw	1
  4687  001E60  6E34               	movwf	lcd_write@column,c
  4688  001E62  0E00               	movlw	0
  4689  001E64  6E37               	movwf	lcd_write@row+1,c
  4690  001E66  0E01               	movlw	1
  4691  001E68  6E36               	movwf	lcd_write@row,c
  4692  001E6A  0E9F               	movlw	low STR_26
  4693  001E6C  6E38               	movwf	lcd_write@string,c
  4694  001E6E  0E0F               	movlw	high STR_26
  4695  001E70  6E39               	movwf	lcd_write@string+1,c
  4696  001E72  ECBF  F014         	call	_lcd_write	;wreg free
  4697                           
  4698                           ;main.c: 252: lcd_write(10,1,"Volumen");
  4699  001E76  0E00               	movlw	0
  4700  001E78  6E35               	movwf	lcd_write@column+1,c
  4701  001E7A  0E0A               	movlw	10
  4702  001E7C  6E34               	movwf	lcd_write@column,c
  4703  001E7E  0E00               	movlw	0
  4704  001E80  6E37               	movwf	lcd_write@row+1,c
  4705  001E82  0E01               	movlw	1
  4706  001E84  6E36               	movwf	lcd_write@row,c
  4707  001E86  0E48               	movlw	low STR_27
  4708  001E88  6E38               	movwf	lcd_write@string,c
  4709  001E8A  0E0F               	movlw	high STR_27
  4710  001E8C  6E39               	movwf	lcd_write@string+1,c
  4711  001E8E  ECBF  F014         	call	_lcd_write	;wreg free
  4712                           
  4713                           ;main.c: 253: lcd_write(10,2,"Tono");
  4714  001E92  0E00               	movlw	0
  4715  001E94  6E35               	movwf	lcd_write@column+1,c
  4716  001E96  0E0A               	movlw	10
  4717  001E98  6E34               	movwf	lcd_write@column,c
  4718  001E9A  0E00               	movlw	0
  4719  001E9C  6E37               	movwf	lcd_write@row+1,c
  4720  001E9E  0E02               	movlw	2
  4721  001EA0  6E36               	movwf	lcd_write@row,c
  4722  001EA2  0EC7               	movlw	low STR_28
  4723  001EA4  6E38               	movwf	lcd_write@string,c
  4724  001EA6  0E0F               	movlw	high STR_28
  4725  001EA8  6E39               	movwf	lcd_write@string+1,c
  4726  001EAA  ECBF  F014         	call	_lcd_write	;wreg free
  4727                           
  4728                           ;main.c: 254: action_submenu_selector_0();
  4729  001EAE  EC8B  F012         	call	_action_submenu_selector_0	;wreg free
  4730  001EB2  0012               	return		;funcret
  4731  001EB4                     __end_of_activity_submenu_siren:
  4732                           	opt stack 0
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodl	equ	0xFF3
  4738                           intcon	equ	0xFF2
  4739                           postinc0	equ	0xFEE
  4740                           wreg	equ	0xFE8
  4741                           indf1	equ	0xFE7
  4742                           postdec1	equ	0xFE5
  4743                           fsr1h	equ	0xFE2
  4744                           fsr1l	equ	0xFE1
  4745                           indf2	equ	0xFDF
  4746                           fsr2h	equ	0xFDA
  4747                           fsr2l	equ	0xFD9
  4748                           status	equ	0xFD8
  4749                           
  4750 ;; *************** function _activity_submenu_pin *****************
  4751 ;; Defined at:
  4752 ;;		line 282 in file "main.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;		None               void
  4759 ;; Registers used:
  4760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;Total ram usage:        0 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    7
  4773 ;; This function calls:
  4774 ;;		_action_submenu_selector_0
  4775 ;;		_lcd_init
  4776 ;;		_lcd_write
  4777 ;; This function is called by:
  4778 ;;		_button_B_menu
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text30
  4783  001EB4                     __ptext30:
  4784                           	opt stack 0
  4785  001EB4                     _activity_submenu_pin:
  4786                           	opt stack 20
  4787                           
  4788                           ;main.c: 284: activity = 5;
  4789                           
  4790                           ;incstack = 0
  4791  001EB4  0E00               	movlw	0
  4792  001EB6  6E04               	movwf	_activity+1,c
  4793  001EB8  0E05               	movlw	5
  4794  001EBA  6E03               	movwf	_activity,c
  4795                           
  4796                           ;main.c: 285: lcd_init();
  4797  001EBC  EC99  F00D         	call	_lcd_init	;wreg free
  4798                           
  4799                           ;main.c: 286: lcd_write(1,1,"Pin");
  4800  001EC0  0E00               	movlw	0
  4801  001EC2  6E35               	movwf	lcd_write@column+1,c
  4802  001EC4  0E01               	movlw	1
  4803  001EC6  6E34               	movwf	lcd_write@column,c
  4804  001EC8  0E00               	movlw	0
  4805  001ECA  6E37               	movwf	lcd_write@row+1,c
  4806  001ECC  0E01               	movlw	1
  4807  001ECE  6E36               	movwf	lcd_write@row,c
  4808  001ED0  0EDA               	movlw	low STR_18
  4809  001ED2  6E38               	movwf	lcd_write@string,c
  4810  001ED4  0E0F               	movlw	high STR_18
  4811  001ED6  6E39               	movwf	lcd_write@string+1,c
  4812  001ED8  ECBF  F014         	call	_lcd_write	;wreg free
  4813                           
  4814                           ;main.c: 287: lcd_write(10,1,"Cambiar");
  4815  001EDC  0E00               	movlw	0
  4816  001EDE  6E35               	movwf	lcd_write@column+1,c
  4817  001EE0  0E0A               	movlw	10
  4818  001EE2  6E34               	movwf	lcd_write@column,c
  4819  001EE4  0E00               	movlw	0
  4820  001EE6  6E37               	movwf	lcd_write@row+1,c
  4821  001EE8  0E01               	movlw	1
  4822  001EEA  6E36               	movwf	lcd_write@row,c
  4823  001EEC  0E50               	movlw	low STR_36
  4824  001EEE  6E38               	movwf	lcd_write@string,c
  4825  001EF0  0E0F               	movlw	high STR_36
  4826  001EF2  6E39               	movwf	lcd_write@string+1,c
  4827  001EF4  ECBF  F014         	call	_lcd_write	;wreg free
  4828                           
  4829                           ;main.c: 288: lcd_write(10,2,"Reset");
  4830  001EF8  0E00               	movlw	0
  4831  001EFA  6E35               	movwf	lcd_write@column+1,c
  4832  001EFC  0E0A               	movlw	10
  4833  001EFE  6E34               	movwf	lcd_write@column,c
  4834  001F00  0E00               	movlw	0
  4835  001F02  6E37               	movwf	lcd_write@row+1,c
  4836  001F04  0E02               	movlw	2
  4837  001F06  6E36               	movwf	lcd_write@row,c
  4838  001F08  0EB2               	movlw	low STR_37
  4839  001F0A  6E38               	movwf	lcd_write@string,c
  4840  001F0C  0E0F               	movlw	high STR_37
  4841  001F0E  6E39               	movwf	lcd_write@string+1,c
  4842  001F10  ECBF  F014         	call	_lcd_write	;wreg free
  4843                           
  4844                           ;main.c: 289: action_submenu_selector_0();
  4845  001F14  EC8B  F012         	call	_action_submenu_selector_0	;wreg free
  4846  001F18  0012               	return		;funcret
  4847  001F1A                     __end_of_activity_submenu_pin:
  4848                           	opt stack 0
  4849                           tblptru	equ	0xFF8
  4850                           tblptrh	equ	0xFF7
  4851                           tblptrl	equ	0xFF6
  4852                           tablat	equ	0xFF5
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           postinc0	equ	0xFEE
  4856                           wreg	equ	0xFE8
  4857                           indf1	equ	0xFE7
  4858                           postdec1	equ	0xFE5
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           indf2	equ	0xFDF
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           status	equ	0xFD8
  4865                           
  4866 ;; *************** function _activity_submenu_clock *****************
  4867 ;; Defined at:
  4868 ;;		line 221 in file "main.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;		None               void
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    7
  4889 ;; This function calls:
  4890 ;;		_action_submenu_selector_0
  4891 ;;		_lcd_init
  4892 ;;		_lcd_write
  4893 ;; This function is called by:
  4894 ;;		_button_B_menu
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text31
  4899  001F1A                     __ptext31:
  4900                           	opt stack 0
  4901  001F1A                     _activity_submenu_clock:
  4902                           	opt stack 20
  4903                           
  4904                           ;main.c: 223: activity = 3;
  4905                           
  4906                           ;incstack = 0
  4907  001F1A  0E00               	movlw	0
  4908  001F1C  6E04               	movwf	_activity+1,c
  4909  001F1E  0E03               	movlw	3
  4910  001F20  6E03               	movwf	_activity,c
  4911                           
  4912                           ;main.c: 224: lcd_init();
  4913  001F22  EC99  F00D         	call	_lcd_init	;wreg free
  4914                           
  4915                           ;main.c: 225: lcd_write(1,1,"Reloj");
  4916  001F26  0E00               	movlw	0
  4917  001F28  6E35               	movwf	lcd_write@column+1,c
  4918  001F2A  0E01               	movlw	1
  4919  001F2C  6E34               	movwf	lcd_write@column,c
  4920  001F2E  0E00               	movlw	0
  4921  001F30  6E37               	movwf	lcd_write@row+1,c
  4922  001F32  0E01               	movlw	1
  4923  001F34  6E36               	movwf	lcd_write@row,c
  4924  001F36  0EAC               	movlw	low STR_17
  4925  001F38  6E38               	movwf	lcd_write@string,c
  4926  001F3A  0E0F               	movlw	high STR_17
  4927  001F3C  6E39               	movwf	lcd_write@string+1,c
  4928  001F3E  ECBF  F014         	call	_lcd_write	;wreg free
  4929                           
  4930                           ;main.c: 226: lcd_write(10,1,"Fecha");
  4931  001F42  0E00               	movlw	0
  4932  001F44  6E35               	movwf	lcd_write@column+1,c
  4933  001F46  0E0A               	movlw	10
  4934  001F48  6E34               	movwf	lcd_write@column,c
  4935  001F4A  0E00               	movlw	0
  4936  001F4C  6E37               	movwf	lcd_write@row+1,c
  4937  001F4E  0E01               	movlw	1
  4938  001F50  6E36               	movwf	lcd_write@row,c
  4939  001F52  0EA6               	movlw	low STR_21
  4940  001F54  6E38               	movwf	lcd_write@string,c
  4941  001F56  0E0F               	movlw	high STR_21
  4942  001F58  6E39               	movwf	lcd_write@string+1,c
  4943  001F5A  ECBF  F014         	call	_lcd_write	;wreg free
  4944                           
  4945                           ;main.c: 227: lcd_write(10,2,"Hora");
  4946  001F5E  0E00               	movlw	0
  4947  001F60  6E35               	movwf	lcd_write@column+1,c
  4948  001F62  0E0A               	movlw	10
  4949  001F64  6E34               	movwf	lcd_write@column,c
  4950  001F66  0E00               	movlw	0
  4951  001F68  6E37               	movwf	lcd_write@row+1,c
  4952  001F6A  0E02               	movlw	2
  4953  001F6C  6E36               	movwf	lcd_write@row,c
  4954  001F6E  0EBD               	movlw	low STR_22
  4955  001F70  6E38               	movwf	lcd_write@string,c
  4956  001F72  0E0F               	movlw	high STR_22
  4957  001F74  6E39               	movwf	lcd_write@string+1,c
  4958  001F76  ECBF  F014         	call	_lcd_write	;wreg free
  4959                           
  4960                           ;main.c: 228: action_submenu_selector_0();
  4961  001F7A  EC8B  F012         	call	_action_submenu_selector_0	;wreg free
  4962  001F7E  0012               	return		;funcret
  4963  001F80                     __end_of_activity_submenu_clock:
  4964                           	opt stack 0
  4965                           tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           prodl	equ	0xFF3
  4970                           intcon	equ	0xFF2
  4971                           postinc0	equ	0xFEE
  4972                           wreg	equ	0xFE8
  4973                           indf1	equ	0xFE7
  4974                           postdec1	equ	0xFE5
  4975                           fsr1h	equ	0xFE2
  4976                           fsr1l	equ	0xFE1
  4977                           indf2	equ	0xFDF
  4978                           fsr2h	equ	0xFDA
  4979                           fsr2l	equ	0xFD9
  4980                           status	equ	0xFD8
  4981                           
  4982 ;; *************** function _activity_submenu_activation *****************
  4983 ;; Defined at:
  4984 ;;		line 234 in file "main.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;		None               void
  4991 ;; Registers used:
  4992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    7
  5005 ;; This function calls:
  5006 ;;		_action_submenu_selector_0
  5007 ;;		_lcd_init
  5008 ;;		_lcd_write
  5009 ;; This function is called by:
  5010 ;;		_button_B_menu
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text32
  5015  001F80                     __ptext32:
  5016                           	opt stack 0
  5017  001F80                     _activity_submenu_activation:
  5018                           	opt stack 20
  5019                           
  5020                           ;main.c: 236: activity = 4;
  5021                           
  5022                           ;incstack = 0
  5023  001F80  0E00               	movlw	0
  5024  001F82  6E04               	movwf	_activity+1,c
  5025  001F84  0E04               	movlw	4
  5026  001F86  6E03               	movwf	_activity,c
  5027                           
  5028                           ;main.c: 237: lcd_init();
  5029  001F88  EC99  F00D         	call	_lcd_init	;wreg free
  5030                           
  5031                           ;main.c: 238: lcd_write(1,1,"Activar");
  5032  001F8C  0E00               	movlw	0
  5033  001F8E  6E35               	movwf	lcd_write@column+1,c
  5034  001F90  0E01               	movlw	1
  5035  001F92  6E34               	movwf	lcd_write@column,c
  5036  001F94  0E00               	movlw	0
  5037  001F96  6E37               	movwf	lcd_write@row+1,c
  5038  001F98  0E01               	movlw	1
  5039  001F9A  6E36               	movwf	lcd_write@row,c
  5040  001F9C  0E58               	movlw	low STR_16
  5041  001F9E  6E38               	movwf	lcd_write@string,c
  5042  001FA0  0E0F               	movlw	high STR_16
  5043  001FA2  6E39               	movwf	lcd_write@string+1,c
  5044  001FA4  ECBF  F014         	call	_lcd_write	;wreg free
  5045                           
  5046                           ;main.c: 239: lcd_write(10,1,"Si");
  5047  001FA8  0E00               	movlw	0
  5048  001FAA  6E35               	movwf	lcd_write@column+1,c
  5049  001FAC  0E0A               	movlw	10
  5050  001FAE  6E34               	movwf	lcd_write@column,c
  5051  001FB0  0E00               	movlw	0
  5052  001FB2  6E37               	movwf	lcd_write@row+1,c
  5053  001FB4  0E01               	movlw	1
  5054  001FB6  6E36               	movwf	lcd_write@row,c
  5055  001FB8  0EDE               	movlw	low STR_24
  5056  001FBA  6E38               	movwf	lcd_write@string,c
  5057  001FBC  0E0F               	movlw	high STR_24
  5058  001FBE  6E39               	movwf	lcd_write@string+1,c
  5059  001FC0  ECBF  F014         	call	_lcd_write	;wreg free
  5060                           
  5061                           ;main.c: 240: lcd_write(10,2,"No");
  5062  001FC4  0E00               	movlw	0
  5063  001FC6  6E35               	movwf	lcd_write@column+1,c
  5064  001FC8  0E0A               	movlw	10
  5065  001FCA  6E34               	movwf	lcd_write@column,c
  5066  001FCC  0E00               	movlw	0
  5067  001FCE  6E37               	movwf	lcd_write@row+1,c
  5068  001FD0  0E02               	movlw	2
  5069  001FD2  6E36               	movwf	lcd_write@row,c
  5070  001FD4  0EE1               	movlw	low STR_25
  5071  001FD6  6E38               	movwf	lcd_write@string,c
  5072  001FD8  0E0F               	movlw	high STR_25
  5073  001FDA  6E39               	movwf	lcd_write@string+1,c
  5074  001FDC  ECBF  F014         	call	_lcd_write	;wreg free
  5075                           
  5076                           ;main.c: 241: action_submenu_selector_0();
  5077  001FE0  EC8B  F012         	call	_action_submenu_selector_0	;wreg free
  5078  001FE4  0012               	return		;funcret
  5079  001FE6                     __end_of_activity_submenu_activation:
  5080                           	opt stack 0
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           prodl	equ	0xFF3
  5086                           intcon	equ	0xFF2
  5087                           postinc0	equ	0xFEE
  5088                           wreg	equ	0xFE8
  5089                           indf1	equ	0xFE7
  5090                           postdec1	equ	0xFE5
  5091                           fsr1h	equ	0xFE2
  5092                           fsr1l	equ	0xFE1
  5093                           indf2	equ	0xFDF
  5094                           fsr2h	equ	0xFDA
  5095                           fsr2l	equ	0xFD9
  5096                           status	equ	0xFD8
  5097                           
  5098 ;; *************** function _button_A *****************
  5099 ;; Defined at:
  5100 ;;		line 415 in file "main.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;		None               void
  5107 ;; Registers used:
  5108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;Total ram usage:        2 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    8
  5121 ;; This function calls:
  5122 ;;		_action_menu_selector
  5123 ;;		_action_submenu_selector
  5124 ;;		_activity_pin
  5125 ;;		_reset_home_callback
  5126 ;; This function is called by:
  5127 ;;		_keyboard_control
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text33
  5132  002660                     __ptext33:
  5133                           	opt stack 0
  5134  002660                     _button_A:
  5135                           	opt stack 21
  5136                           
  5137                           ;main.c: 417: reset_home_callback();
  5138                           
  5139                           ;incstack = 0
  5140  002660  EC02  F015         	call	_reset_home_callback	;wreg free
  5141                           
  5142                           ;main.c: 419: switch(activity){
  5143  002664  D009               	goto	l3617
  5144  002666                     l3609:
  5145                           
  5146                           ;main.c: 422: activity_pin();
  5147  002666  EC46  F011         	call	_activity_pin	;wreg free
  5148                           
  5149                           ;main.c: 426: break;
  5150                           
  5151                           ;main.c: 425: case 1:
  5152                           
  5153                           ;main.c: 423: break;
  5154  00266A  0012               	return	
  5155  00266C                     l3611:
  5156                           
  5157                           ;main.c: 429: action_menu_selector();
  5158  00266C  EC01  F012         	call	_action_menu_selector	;wreg free
  5159                           
  5160                           ;main.c: 430: break;
  5161  002670  0012               	return	
  5162  002672                     l3613:
  5163                           
  5164                           ;main.c: 433: action_submenu_selector();
  5165  002672  ECF2  F013         	call	_action_submenu_selector	;wreg free
  5166                           
  5167                           ;main.c: 435: }
  5168                           
  5169                           ;main.c: 434: break;
  5170  002676  0012               	return	
  5171  002678                     l3617:
  5172  002678  C003  F03C         	movff	_activity,??_button_A
  5173  00267C  C004  F03D         	movff	_activity+1,??_button_A+1
  5174                           
  5175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5176                           ; Switch size 1, requested type "space"
  5177                           ; Number of cases is 1, Range of values is 0 to 0
  5178                           ; switch strategies available:
  5179                           ; Name         Instructions Cycles
  5180                           ; simple_byte            4     3 (average)
  5181                           ;	Chosen strategy is simple_byte
  5182  002680  503D               	movf	??_button_A+1,w,c
  5183  002682  0A00               	xorlw	0	; case 0
  5184  002684  A4D8               	btfss	status,2,c
  5185  002686  D7F5               	goto	l3613
  5186                           
  5187                           ; Switch size 1, requested type "space"
  5188                           ; Number of cases is 3, Range of values is 0 to 2
  5189                           ; switch strategies available:
  5190                           ; Name         Instructions Cycles
  5191                           ; simple_byte           10     6 (average)
  5192                           ;	Chosen strategy is simple_byte
  5193  002688  503C               	movf	??_button_A,w,c
  5194  00268A  0A00               	xorlw	0	; case 0
  5195  00268C  B4D8               	btfsc	status,2,c
  5196  00268E  D7EB               	goto	l3609
  5197  002690  0A01               	xorlw	1	; case 1
  5198  002692  B4D8               	btfsc	status,2,c
  5199  002694  0012               	return	
  5200  002696  0A03               	xorlw	3	; case 2
  5201  002698  B4D8               	btfsc	status,2,c
  5202  00269A  D7E8               	goto	l3611
  5203  00269C  D7EA               	goto	l3613
  5204  00269E  0012               	return		;funcret
  5205  0026A0                     __end_of_button_A:
  5206                           	opt stack 0
  5207                           tblptru	equ	0xFF8
  5208                           tblptrh	equ	0xFF7
  5209                           tblptrl	equ	0xFF6
  5210                           tablat	equ	0xFF5
  5211                           prodl	equ	0xFF3
  5212                           intcon	equ	0xFF2
  5213                           postinc0	equ	0xFEE
  5214                           wreg	equ	0xFE8
  5215                           indf1	equ	0xFE7
  5216                           postdec1	equ	0xFE5
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           indf2	equ	0xFDF
  5220                           fsr2h	equ	0xFDA
  5221                           fsr2l	equ	0xFD9
  5222                           status	equ	0xFD8
  5223                           
  5224 ;; *************** function _activity_pin *****************
  5225 ;; Defined at:
  5226 ;;		line 196 in file "main.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;		None               void
  5233 ;; Registers used:
  5234 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    6
  5247 ;; This function calls:
  5248 ;;		_lcd_comand
  5249 ;;		_lcd_gotoxy
  5250 ;;		_lcd_init
  5251 ;;		_lcd_write
  5252 ;;		_strcpy
  5253 ;; This function is called by:
  5254 ;;		_pin_input_validator
  5255 ;;		_button_A
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text34
  5260  00228C                     __ptext34:
  5261                           	opt stack 0
  5262  00228C                     _activity_pin:
  5263                           	opt stack 21
  5264                           
  5265                           ;main.c: 198: activity = 1;
  5266                           
  5267                           ;incstack = 0
  5268  00228C  0E00               	movlw	0
  5269  00228E  6E04               	movwf	_activity+1,c
  5270  002290  0E01               	movlw	1
  5271  002292  6E03               	movwf	_activity,c
  5272                           
  5273                           ;main.c: 199: strcpy(pin_input, "");
  5274  002294  0E99               	movlw	low _pin_input
  5275  002296  6E2A               	movwf	strcpy@to,c
  5276  002298  0E00               	movlw	high _pin_input
  5277  00229A  6E2B               	movwf	strcpy@to+1,c
  5278  00229C  0EE5               	movlw	low (STR_3+1)
  5279  00229E  6E2C               	movwf	strcpy@from,c
  5280  0022A0  0E0F               	movlw	high (STR_3+1)
  5281  0022A2  6E2D               	movwf	strcpy@from+1,c
  5282  0022A4  EC25  F012         	call	_strcpy	;wreg free
  5283                           
  5284                           ;main.c: 200: lcd_init();
  5285  0022A8  EC99  F00D         	call	_lcd_init	;wreg free
  5286                           
  5287                           ;main.c: 201: lcd_write(1,1,"Ingrese su PIN:");
  5288  0022AC  0E00               	movlw	0
  5289  0022AE  6E35               	movwf	lcd_write@column+1,c
  5290  0022B0  0E01               	movlw	1
  5291  0022B2  6E34               	movwf	lcd_write@column,c
  5292  0022B4  0E00               	movlw	0
  5293  0022B6  6E37               	movwf	lcd_write@row+1,c
  5294  0022B8  0E01               	movlw	1
  5295  0022BA  6E36               	movwf	lcd_write@row,c
  5296  0022BC  0E0F               	movlw	low STR_15
  5297  0022BE  6E38               	movwf	lcd_write@string,c
  5298  0022C0  0E0F               	movlw	high STR_15
  5299  0022C2  6E39               	movwf	lcd_write@string+1,c
  5300  0022C4  ECBF  F014         	call	_lcd_write	;wreg free
  5301                           
  5302                           ;main.c: 202: lcd_gotoxy(1,2);
  5303  0022C8  0E02               	movlw	2
  5304  0022CA  6E2E               	movwf	lcd_gotoxy@y,c
  5305  0022CC  0E01               	movlw	1
  5306  0022CE  EC70  F014         	call	_lcd_gotoxy
  5307                           
  5308                           ;main.c: 203: lcd_comand(0b00001111);
  5309  0022D2  0E0F               	movlw	15
  5310  0022D4  ECF1  F014         	call	_lcd_comand
  5311  0022D8  0012               	return		;funcret
  5312  0022DA                     __end_of_activity_pin:
  5313                           	opt stack 0
  5314                           tblptru	equ	0xFF8
  5315                           tblptrh	equ	0xFF7
  5316                           tblptrl	equ	0xFF6
  5317                           tablat	equ	0xFF5
  5318                           prodl	equ	0xFF3
  5319                           intcon	equ	0xFF2
  5320                           postinc0	equ	0xFEE
  5321                           wreg	equ	0xFE8
  5322                           indf1	equ	0xFE7
  5323                           postdec1	equ	0xFE5
  5324                           fsr1h	equ	0xFE2
  5325                           fsr1l	equ	0xFE1
  5326                           indf2	equ	0xFDF
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _strcpy *****************
  5332 ;; Defined at:
  5333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  to              2    0[COMRAM] PTR unsigned char 
  5336 ;;		 -> pin(5), pin_input(5), 
  5337 ;;  from            2    2[COMRAM] PTR const unsigned char 
  5338 ;;		 -> STR_40(5), STR_38(1), STR_14(1), pin_input(5), 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  cp              2    4[COMRAM] PTR unsigned char 
  5341 ;;		 -> pin(5), pin_input(5), 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  2    0[COMRAM] PTR unsigned char 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5354 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5355 ;;Total ram usage:        6 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_activity_pin
  5361 ;;		_activity_submenu_pin_set
  5362 ;;		_pin_set
  5363 ;;		_pin_reset
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text35
  5368  00244A                     __ptext35:
  5369                           	opt stack 0
  5370  00244A                     _strcpy:
  5371                           	opt stack 28
  5372                           
  5373                           ;incstack = 0
  5374  00244A  C02A  F02E         	movff	strcpy@to,strcpy@cp
  5375  00244E  C02B  F02F         	movff	strcpy@to+1,strcpy@cp+1
  5376  002452  D005               	goto	l2833
  5377  002454                     l2831:
  5378  002454  4A2E               	infsnz	strcpy@cp,f,c
  5379  002456  2A2F               	incf	strcpy@cp+1,f,c
  5380  002458  4A2C               	infsnz	strcpy@from,f,c
  5381  00245A  2A2D               	incf	strcpy@from+1,f,c
  5382  00245C  D000               	goto	l2833
  5383  00245E                     l2833:
  5384  00245E  C02C  FFF6         	movff	strcpy@from,tblptrl
  5385  002462  C02D  FFF7         	movff	strcpy@from+1,tblptrh
  5386  002466  6AF8               	clrf	tblptru,c
  5387  002468  C02E  FFD9         	movff	strcpy@cp,fsr2l
  5388  00246C  C02F  FFDA         	movff	strcpy@cp+1,fsr2h
  5389  002470  0E0E               	movlw	(high __ramtop+-1)
  5390  002472  64F7               	cpfsgt	tblptrh,c
  5391  002474  D003               	bra	u1467
  5392  002476  0008               	tblrd		*
  5393  002478  50F5               	movf	tablat,w,c
  5394  00247A  D005               	bra	u1460
  5395  00247C                     u1467:
  5396  00247C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5397  002480  CFF7 FFEA          	movff	tblptrh,fsr0h
  5398  002484  50EF               	movf	indf0,w,c
  5399  002486                     u1460:
  5400  002486  6EDF               	movwf	indf2,c
  5401  002488  50DF               	movf	indf2,w,c
  5402  00248A  A4D8               	btfss	status,2,c
  5403  00248C  D7E3               	goto	l2831
  5404                           
  5405                           ;	Return value of _strcpy is never used
  5406  00248E  0012               	return		;funcret
  5407  002490                     __end_of_strcpy:
  5408                           	opt stack 0
  5409                           tblptru	equ	0xFF8
  5410                           tblptrh	equ	0xFF7
  5411                           tblptrl	equ	0xFF6
  5412                           tablat	equ	0xFF5
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           indf0	equ	0xFEF
  5416                           postinc0	equ	0xFEE
  5417                           fsr0h	equ	0xFEA
  5418                           fsr0l	equ	0xFE9
  5419                           wreg	equ	0xFE8
  5420                           indf1	equ	0xFE7
  5421                           postdec1	equ	0xFE5
  5422                           fsr1h	equ	0xFE2
  5423                           fsr1l	equ	0xFE1
  5424                           indf2	equ	0xFDF
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8
  5428                           
  5429 ;; *************** function _lcd_comand *****************
  5430 ;; Defined at:
  5431 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  d               1    wreg     unsigned char 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  d               1    4[COMRAM] unsigned char 
  5436 ;; Return value:  Size  Location     Type
  5437 ;;		None               void
  5438 ;; Registers used:
  5439 ;;		wreg, status,2, status,0, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;Total ram usage:        1 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    2
  5452 ;; This function calls:
  5453 ;;		_lcd_send_byte
  5454 ;; This function is called by:
  5455 ;;		_activity_pin
  5456 ;;		_activity_submenu_pin_set
  5457 ;;		_setup
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text36
  5462  0029E2                     __ptext36:
  5463                           	opt stack 0
  5464  0029E2                     _lcd_comand:
  5465                           	opt stack 27
  5466                           
  5467                           ;incstack = 0
  5468                           ;lcd_comand@d stored from wreg
  5469  0029E2  6E2E               	movwf	lcd_comand@d,c
  5470                           
  5471                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  5472  0029E4  C02E  F02C         	movff	lcd_comand@d,lcd_send_byte@n
  5473  0029E8  0E00               	movlw	0
  5474  0029EA  ECC1  F013         	call	_lcd_send_byte
  5475  0029EE  0012               	return		;funcret
  5476  0029F0                     __end_of_lcd_comand:
  5477                           	opt stack 0
  5478                           tblptru	equ	0xFF8
  5479                           tblptrh	equ	0xFF7
  5480                           tblptrl	equ	0xFF6
  5481                           tablat	equ	0xFF5
  5482                           prodl	equ	0xFF3
  5483                           intcon	equ	0xFF2
  5484                           indf0	equ	0xFEF
  5485                           postinc0	equ	0xFEE
  5486                           fsr0h	equ	0xFEA
  5487                           fsr0l	equ	0xFE9
  5488                           wreg	equ	0xFE8
  5489                           indf1	equ	0xFE7
  5490                           postdec1	equ	0xFE5
  5491                           fsr1h	equ	0xFE2
  5492                           fsr1l	equ	0xFE1
  5493                           indf2	equ	0xFDF
  5494                           fsr2h	equ	0xFDA
  5495                           fsr2l	equ	0xFD9
  5496                           status	equ	0xFD8
  5497                           
  5498 ;; *************** function _action_submenu_selector *****************
  5499 ;; Defined at:
  5500 ;;		line 181 in file "main.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;		None               void
  5507 ;; Registers used:
  5508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5516 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5518 ;;Total ram usage:        2 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    7
  5521 ;; This function calls:
  5522 ;;		_action_submenu_selector_0
  5523 ;;		_action_submenu_selector_1
  5524 ;; This function is called by:
  5525 ;;		_button_A
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text37
  5530  0027E4                     __ptext37:
  5531                           	opt stack 0
  5532  0027E4                     _action_submenu_selector:
  5533                           	opt stack 21
  5534                           
  5535                           ;main.c: 183: switch(submenu_selected){
  5536                           
  5537                           ;incstack = 0
  5538  0027E4  D006               	goto	l3219
  5539  0027E6                     l3213:
  5540                           
  5541                           ;main.c: 186: action_submenu_selector_1();
  5542  0027E6  EC6A  F012         	call	_action_submenu_selector_1	;wreg free
  5543                           
  5544                           ;main.c: 187: break;
  5545  0027EA  0012               	return	
  5546  0027EC                     l3215:
  5547                           
  5548                           ;main.c: 190: action_submenu_selector_0();
  5549  0027EC  EC8B  F012         	call	_action_submenu_selector_0	;wreg free
  5550                           
  5551                           ;main.c: 192: }
  5552                           
  5553                           ;main.c: 191: break;
  5554  0027F0  0012               	return	
  5555  0027F2                     l3219:
  5556  0027F2  C01F  F03A         	movff	_submenu_selected,??_action_submenu_selector
  5557  0027F6  C020  F03B         	movff	_submenu_selected+1,??_action_submenu_selector+1
  5558                           
  5559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5560                           ; Switch size 1, requested type "space"
  5561                           ; Number of cases is 1, Range of values is 0 to 0
  5562                           ; switch strategies available:
  5563                           ; Name         Instructions Cycles
  5564                           ; simple_byte            4     3 (average)
  5565                           ;	Chosen strategy is simple_byte
  5566  0027FA  503B               	movf	??_action_submenu_selector+1,w,c
  5567  0027FC  0A00               	xorlw	0	; case 0
  5568  0027FE  A4D8               	btfss	status,2,c
  5569  002800  0012               	return	
  5570                           
  5571                           ; Switch size 1, requested type "space"
  5572                           ; Number of cases is 2, Range of values is 0 to 1
  5573                           ; switch strategies available:
  5574                           ; Name         Instructions Cycles
  5575                           ; simple_byte            7     4 (average)
  5576                           ;	Chosen strategy is simple_byte
  5577  002802  503A               	movf	??_action_submenu_selector,w,c
  5578  002804  0A00               	xorlw	0	; case 0
  5579  002806  B4D8               	btfsc	status,2,c
  5580  002808  D7EE               	goto	l3213
  5581  00280A  0A01               	xorlw	1	; case 1
  5582  00280C  A4D8               	btfss	status,2,c
  5583  00280E  0012               	return	
  5584  002810  D7ED               	goto	l3215
  5585  002812  0012               	return		;funcret
  5586  002814                     __end_of_action_submenu_selector:
  5587                           	opt stack 0
  5588                           tblptru	equ	0xFF8
  5589                           tblptrh	equ	0xFF7
  5590                           tblptrl	equ	0xFF6
  5591                           tablat	equ	0xFF5
  5592                           prodl	equ	0xFF3
  5593                           intcon	equ	0xFF2
  5594                           indf0	equ	0xFEF
  5595                           postinc0	equ	0xFEE
  5596                           fsr0h	equ	0xFEA
  5597                           fsr0l	equ	0xFE9
  5598                           wreg	equ	0xFE8
  5599                           indf1	equ	0xFE7
  5600                           postdec1	equ	0xFE5
  5601                           fsr1h	equ	0xFE2
  5602                           fsr1l	equ	0xFE1
  5603                           indf2	equ	0xFDF
  5604                           fsr2h	equ	0xFDA
  5605                           fsr2l	equ	0xFD9
  5606                           status	equ	0xFD8
  5607                           
  5608 ;; *************** function _action_submenu_selector_1 *****************
  5609 ;; Defined at:
  5610 ;;		line 173 in file "main.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;		None               void
  5617 ;; Registers used:
  5618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5628 ;;Total ram usage:        0 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    6
  5631 ;; This function calls:
  5632 ;;		_lcd_write
  5633 ;; This function is called by:
  5634 ;;		_action_submenu_selector
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text38
  5639  0024D4                     __ptext38:
  5640                           	opt stack 0
  5641  0024D4                     _action_submenu_selector_1:
  5642                           	opt stack 21
  5643                           
  5644                           ;main.c: 175: lcd_write(9,2,">");
  5645                           
  5646                           ;incstack = 0
  5647  0024D4  0E00               	movlw	0
  5648  0024D6  6E35               	movwf	lcd_write@column+1,c
  5649  0024D8  0E09               	movlw	9
  5650  0024DA  6E34               	movwf	lcd_write@column,c
  5651  0024DC  0E00               	movlw	0
  5652  0024DE  6E37               	movwf	lcd_write@row+1,c
  5653  0024E0  0E02               	movlw	2
  5654  0024E2  6E36               	movwf	lcd_write@row,c
  5655  0024E4  0EE8               	movlw	low STR_2
  5656  0024E6  6E38               	movwf	lcd_write@string,c
  5657  0024E8  0E0F               	movlw	high STR_2
  5658  0024EA  6E39               	movwf	lcd_write@string+1,c
  5659  0024EC  ECBF  F014         	call	_lcd_write	;wreg free
  5660                           
  5661                           ;main.c: 176: submenu_selected = 1;
  5662  0024F0  0E00               	movlw	0
  5663  0024F2  6E20               	movwf	_submenu_selected+1,c
  5664  0024F4  0E01               	movlw	1
  5665  0024F6  6E1F               	movwf	_submenu_selected,c
  5666                           
  5667                           ;main.c: 177: lcd_write(9,1," ");
  5668  0024F8  0E00               	movlw	0
  5669  0024FA  6E35               	movwf	lcd_write@column+1,c
  5670  0024FC  0E09               	movlw	9
  5671  0024FE  6E34               	movwf	lcd_write@column,c
  5672  002500  0E00               	movlw	0
  5673  002502  6E37               	movwf	lcd_write@row+1,c
  5674  002504  0E01               	movlw	1
  5675  002506  6E36               	movwf	lcd_write@row,c
  5676  002508  0EE4               	movlw	low STR_3
  5677  00250A  6E38               	movwf	lcd_write@string,c
  5678  00250C  0E0F               	movlw	high STR_3
  5679  00250E  6E39               	movwf	lcd_write@string+1,c
  5680  002510  ECBF  F014         	call	_lcd_write	;wreg free
  5681  002514  0012               	return		;funcret
  5682  002516                     __end_of_action_submenu_selector_1:
  5683                           	opt stack 0
  5684                           tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           prodl	equ	0xFF3
  5689                           intcon	equ	0xFF2
  5690                           indf0	equ	0xFEF
  5691                           postinc0	equ	0xFEE
  5692                           fsr0h	equ	0xFEA
  5693                           fsr0l	equ	0xFE9
  5694                           wreg	equ	0xFE8
  5695                           indf1	equ	0xFE7
  5696                           postdec1	equ	0xFE5
  5697                           fsr1h	equ	0xFE2
  5698                           fsr1l	equ	0xFE1
  5699                           indf2	equ	0xFDF
  5700                           fsr2h	equ	0xFDA
  5701                           fsr2l	equ	0xFD9
  5702                           status	equ	0xFD8
  5703                           
  5704 ;; *************** function _action_submenu_selector_0 *****************
  5705 ;; Defined at:
  5706 ;;		line 165 in file "main.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;		None               void
  5713 ;; Registers used:
  5714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;Total ram usage:        0 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    6
  5727 ;; This function calls:
  5728 ;;		_lcd_write
  5729 ;; This function is called by:
  5730 ;;		_action_submenu_selector
  5731 ;;		_activity_submenu_clock
  5732 ;;		_activity_submenu_activation
  5733 ;;		_activity_submenu_siren
  5734 ;;		_activity_submenu_siren_volume
  5735 ;;		_activity_submenu_siren_tone
  5736 ;;		_activity_submenu_pin
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text39
  5741  002516                     __ptext39:
  5742                           	opt stack 0
  5743  002516                     _action_submenu_selector_0:
  5744                           	opt stack 20
  5745                           
  5746                           ;main.c: 167: lcd_write(9,1,">");
  5747                           
  5748                           ;incstack = 0
  5749  002516  0E00               	movlw	0
  5750  002518  6E35               	movwf	lcd_write@column+1,c
  5751  00251A  0E09               	movlw	9
  5752  00251C  6E34               	movwf	lcd_write@column,c
  5753  00251E  0E00               	movlw	0
  5754  002520  6E37               	movwf	lcd_write@row+1,c
  5755  002522  0E01               	movlw	1
  5756  002524  6E36               	movwf	lcd_write@row,c
  5757  002526  0EE8               	movlw	low STR_2
  5758  002528  6E38               	movwf	lcd_write@string,c
  5759  00252A  0E0F               	movlw	high STR_2
  5760  00252C  6E39               	movwf	lcd_write@string+1,c
  5761  00252E  ECBF  F014         	call	_lcd_write	;wreg free
  5762                           
  5763                           ;main.c: 168: submenu_selected = 0;
  5764  002532  0E00               	movlw	0
  5765  002534  6E20               	movwf	_submenu_selected+1,c
  5766  002536  0E00               	movlw	0
  5767  002538  6E1F               	movwf	_submenu_selected,c
  5768                           
  5769                           ;main.c: 169: lcd_write(9,2," ");
  5770  00253A  0E00               	movlw	0
  5771  00253C  6E35               	movwf	lcd_write@column+1,c
  5772  00253E  0E09               	movlw	9
  5773  002540  6E34               	movwf	lcd_write@column,c
  5774  002542  0E00               	movlw	0
  5775  002544  6E37               	movwf	lcd_write@row+1,c
  5776  002546  0E02               	movlw	2
  5777  002548  6E36               	movwf	lcd_write@row,c
  5778  00254A  0EE4               	movlw	low STR_3
  5779  00254C  6E38               	movwf	lcd_write@string,c
  5780  00254E  0E0F               	movlw	high STR_3
  5781  002550  6E39               	movwf	lcd_write@string+1,c
  5782  002552  ECBF  F014         	call	_lcd_write	;wreg free
  5783  002556  0012               	return		;funcret
  5784  002558                     __end_of_action_submenu_selector_0:
  5785                           	opt stack 0
  5786                           tblptru	equ	0xFF8
  5787                           tblptrh	equ	0xFF7
  5788                           tblptrl	equ	0xFF6
  5789                           tablat	equ	0xFF5
  5790                           prodl	equ	0xFF3
  5791                           intcon	equ	0xFF2
  5792                           indf0	equ	0xFEF
  5793                           postinc0	equ	0xFEE
  5794                           fsr0h	equ	0xFEA
  5795                           fsr0l	equ	0xFE9
  5796                           wreg	equ	0xFE8
  5797                           indf1	equ	0xFE7
  5798                           postdec1	equ	0xFE5
  5799                           fsr1h	equ	0xFE2
  5800                           fsr1l	equ	0xFE1
  5801                           indf2	equ	0xFDF
  5802                           fsr2h	equ	0xFDA
  5803                           fsr2l	equ	0xFD9
  5804                           status	equ	0xFD8
  5805                           
  5806 ;; *************** function _action_menu_selector *****************
  5807 ;; Defined at:
  5808 ;;		line 139 in file "main.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;		None
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;		None               void
  5815 ;; Registers used:
  5816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;Total ram usage:        2 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    7
  5829 ;; This function calls:
  5830 ;;		_action_menu_selector_0
  5831 ;;		_action_menu_selector_1
  5832 ;;		_action_menu_selector_2
  5833 ;;		_action_menu_selector_3
  5834 ;; This function is called by:
  5835 ;;		_button_A
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text40
  5840  002402                     __ptext40:
  5841                           	opt stack 0
  5842  002402                     _action_menu_selector:
  5843                           	opt stack 21
  5844                           
  5845                           ;main.c: 141: switch(menu_selected){
  5846                           
  5847                           ;incstack = 0
  5848  002402  D00C               	goto	l3205
  5849  002404                     l3195:
  5850                           
  5851                           ;main.c: 144: action_menu_selector_1();
  5852  002404  ECEE  F012         	call	_action_menu_selector_1	;wreg free
  5853                           
  5854                           ;main.c: 145: break;
  5855  002408  0012               	return	
  5856  00240A                     l3197:
  5857                           
  5858                           ;main.c: 148: action_menu_selector_2();
  5859  00240A  ECCD  F012         	call	_action_menu_selector_2	;wreg free
  5860                           
  5861                           ;main.c: 149: break;
  5862  00240E  0012               	return	
  5863  002410                     l3199:
  5864                           
  5865                           ;main.c: 152: action_menu_selector_3();
  5866  002410  ECAC  F012         	call	_action_menu_selector_3	;wreg free
  5867                           
  5868                           ;main.c: 153: break;
  5869  002414  0012               	return	
  5870  002416                     l3201:
  5871                           
  5872                           ;main.c: 156: action_menu_selector_0();
  5873  002416  EC0F  F013         	call	_action_menu_selector_0	;wreg free
  5874                           
  5875                           ;main.c: 159: }
  5876                           
  5877                           ;main.c: 157: break;
  5878  00241A  0012               	return	
  5879  00241C                     l3205:
  5880  00241C  C017  F03A         	movff	_menu_selected,??_action_menu_selector
  5881  002420  C018  F03B         	movff	_menu_selected+1,??_action_menu_selector+1
  5882                           
  5883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5884                           ; Switch size 1, requested type "space"
  5885                           ; Number of cases is 1, Range of values is 0 to 0
  5886                           ; switch strategies available:
  5887                           ; Name         Instructions Cycles
  5888                           ; simple_byte            4     3 (average)
  5889                           ;	Chosen strategy is simple_byte
  5890  002424  503B               	movf	??_action_menu_selector+1,w,c
  5891  002426  0A00               	xorlw	0	; case 0
  5892  002428  A4D8               	btfss	status,2,c
  5893  00242A  0012               	return	
  5894                           
  5895                           ; Switch size 1, requested type "space"
  5896                           ; Number of cases is 4, Range of values is 0 to 3
  5897                           ; switch strategies available:
  5898                           ; Name         Instructions Cycles
  5899                           ; simple_byte           13     7 (average)
  5900                           ;	Chosen strategy is simple_byte
  5901  00242C  503A               	movf	??_action_menu_selector,w,c
  5902  00242E  0A00               	xorlw	0	; case 0
  5903  002430  B4D8               	btfsc	status,2,c
  5904  002432  D7E8               	goto	l3195
  5905  002434  0A01               	xorlw	1	; case 1
  5906  002436  B4D8               	btfsc	status,2,c
  5907  002438  D7E8               	goto	l3197
  5908  00243A  0A03               	xorlw	3	; case 2
  5909  00243C  B4D8               	btfsc	status,2,c
  5910  00243E  D7E8               	goto	l3199
  5911  002440  0A01               	xorlw	1	; case 3
  5912  002442  A4D8               	btfss	status,2,c
  5913  002444  0012               	return	
  5914  002446  D7E7               	goto	l3201
  5915  002448  0012               	return		;funcret
  5916  00244A                     __end_of_action_menu_selector:
  5917                           	opt stack 0
  5918                           tblptru	equ	0xFF8
  5919                           tblptrh	equ	0xFF7
  5920                           tblptrl	equ	0xFF6
  5921                           tablat	equ	0xFF5
  5922                           prodl	equ	0xFF3
  5923                           intcon	equ	0xFF2
  5924                           indf0	equ	0xFEF
  5925                           postinc0	equ	0xFEE
  5926                           fsr0h	equ	0xFEA
  5927                           fsr0l	equ	0xFE9
  5928                           wreg	equ	0xFE8
  5929                           indf1	equ	0xFE7
  5930                           postdec1	equ	0xFE5
  5931                           fsr1h	equ	0xFE2
  5932                           fsr1l	equ	0xFE1
  5933                           indf2	equ	0xFDF
  5934                           fsr2h	equ	0xFDA
  5935                           fsr2l	equ	0xFD9
  5936                           status	equ	0xFD8
  5937                           
  5938 ;; *************** function _action_menu_selector_3 *****************
  5939 ;; Defined at:
  5940 ;;		line 131 in file "main.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;		None
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;		None               void
  5947 ;; Registers used:
  5948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;Total ram usage:        0 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    6
  5961 ;; This function calls:
  5962 ;;		_lcd_write
  5963 ;; This function is called by:
  5964 ;;		_action_menu_selector
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text41
  5969  002558                     __ptext41:
  5970                           	opt stack 0
  5971  002558                     _action_menu_selector_3:
  5972                           	opt stack 21
  5973                           
  5974                           ;main.c: 133: lcd_write(9,2,">");
  5975                           
  5976                           ;incstack = 0
  5977  002558  0E00               	movlw	0
  5978  00255A  6E35               	movwf	lcd_write@column+1,c
  5979  00255C  0E09               	movlw	9
  5980  00255E  6E34               	movwf	lcd_write@column,c
  5981  002560  0E00               	movlw	0
  5982  002562  6E37               	movwf	lcd_write@row+1,c
  5983  002564  0E02               	movlw	2
  5984  002566  6E36               	movwf	lcd_write@row,c
  5985  002568  0EE8               	movlw	low STR_2
  5986  00256A  6E38               	movwf	lcd_write@string,c
  5987  00256C  0E0F               	movlw	high STR_2
  5988  00256E  6E39               	movwf	lcd_write@string+1,c
  5989  002570  ECBF  F014         	call	_lcd_write	;wreg free
  5990                           
  5991                           ;main.c: 134: menu_selected = 3;
  5992  002574  0E00               	movlw	0
  5993  002576  6E18               	movwf	_menu_selected+1,c
  5994  002578  0E03               	movlw	3
  5995  00257A  6E17               	movwf	_menu_selected,c
  5996                           
  5997                           ;main.c: 135: lcd_write(9,1," ");
  5998  00257C  0E00               	movlw	0
  5999  00257E  6E35               	movwf	lcd_write@column+1,c
  6000  002580  0E09               	movlw	9
  6001  002582  6E34               	movwf	lcd_write@column,c
  6002  002584  0E00               	movlw	0
  6003  002586  6E37               	movwf	lcd_write@row+1,c
  6004  002588  0E01               	movlw	1
  6005  00258A  6E36               	movwf	lcd_write@row,c
  6006  00258C  0EE4               	movlw	low STR_3
  6007  00258E  6E38               	movwf	lcd_write@string,c
  6008  002590  0E0F               	movlw	high STR_3
  6009  002592  6E39               	movwf	lcd_write@string+1,c
  6010  002594  ECBF  F014         	call	_lcd_write	;wreg free
  6011  002598  0012               	return		;funcret
  6012  00259A                     __end_of_action_menu_selector_3:
  6013                           	opt stack 0
  6014                           tblptru	equ	0xFF8
  6015                           tblptrh	equ	0xFF7
  6016                           tblptrl	equ	0xFF6
  6017                           tablat	equ	0xFF5
  6018                           prodl	equ	0xFF3
  6019                           intcon	equ	0xFF2
  6020                           indf0	equ	0xFEF
  6021                           postinc0	equ	0xFEE
  6022                           fsr0h	equ	0xFEA
  6023                           fsr0l	equ	0xFE9
  6024                           wreg	equ	0xFE8
  6025                           indf1	equ	0xFE7
  6026                           postdec1	equ	0xFE5
  6027                           fsr1h	equ	0xFE2
  6028                           fsr1l	equ	0xFE1
  6029                           indf2	equ	0xFDF
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function _action_menu_selector_2 *****************
  6035 ;; Defined at:
  6036 ;;		line 123 in file "main.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;		None               void
  6043 ;; Registers used:
  6044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    6
  6057 ;; This function calls:
  6058 ;;		_lcd_write
  6059 ;; This function is called by:
  6060 ;;		_action_menu_selector
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text42
  6065  00259A                     __ptext42:
  6066                           	opt stack 0
  6067  00259A                     _action_menu_selector_2:
  6068                           	opt stack 21
  6069                           
  6070                           ;main.c: 125: lcd_write(9,1,">");
  6071                           
  6072                           ;incstack = 0
  6073  00259A  0E00               	movlw	0
  6074  00259C  6E35               	movwf	lcd_write@column+1,c
  6075  00259E  0E09               	movlw	9
  6076  0025A0  6E34               	movwf	lcd_write@column,c
  6077  0025A2  0E00               	movlw	0
  6078  0025A4  6E37               	movwf	lcd_write@row+1,c
  6079  0025A6  0E01               	movlw	1
  6080  0025A8  6E36               	movwf	lcd_write@row,c
  6081  0025AA  0EE8               	movlw	low STR_2
  6082  0025AC  6E38               	movwf	lcd_write@string,c
  6083  0025AE  0E0F               	movlw	high STR_2
  6084  0025B0  6E39               	movwf	lcd_write@string+1,c
  6085  0025B2  ECBF  F014         	call	_lcd_write	;wreg free
  6086                           
  6087                           ;main.c: 126: menu_selected = 2;
  6088  0025B6  0E00               	movlw	0
  6089  0025B8  6E18               	movwf	_menu_selected+1,c
  6090  0025BA  0E02               	movlw	2
  6091  0025BC  6E17               	movwf	_menu_selected,c
  6092                           
  6093                           ;main.c: 127: lcd_write(1,2," ");
  6094  0025BE  0E00               	movlw	0
  6095  0025C0  6E35               	movwf	lcd_write@column+1,c
  6096  0025C2  0E01               	movlw	1
  6097  0025C4  6E34               	movwf	lcd_write@column,c
  6098  0025C6  0E00               	movlw	0
  6099  0025C8  6E37               	movwf	lcd_write@row+1,c
  6100  0025CA  0E02               	movlw	2
  6101  0025CC  6E36               	movwf	lcd_write@row,c
  6102  0025CE  0EE4               	movlw	low STR_3
  6103  0025D0  6E38               	movwf	lcd_write@string,c
  6104  0025D2  0E0F               	movlw	high STR_3
  6105  0025D4  6E39               	movwf	lcd_write@string+1,c
  6106  0025D6  ECBF  F014         	call	_lcd_write	;wreg free
  6107  0025DA  0012               	return		;funcret
  6108  0025DC                     __end_of_action_menu_selector_2:
  6109                           	opt stack 0
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodl	equ	0xFF3
  6115                           intcon	equ	0xFF2
  6116                           indf0	equ	0xFEF
  6117                           postinc0	equ	0xFEE
  6118                           fsr0h	equ	0xFEA
  6119                           fsr0l	equ	0xFE9
  6120                           wreg	equ	0xFE8
  6121                           indf1	equ	0xFE7
  6122                           postdec1	equ	0xFE5
  6123                           fsr1h	equ	0xFE2
  6124                           fsr1l	equ	0xFE1
  6125                           indf2	equ	0xFDF
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _action_menu_selector_1 *****************
  6131 ;; Defined at:
  6132 ;;		line 115 in file "main.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;		None               void
  6139 ;; Registers used:
  6140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;Total ram usage:        0 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    6
  6153 ;; This function calls:
  6154 ;;		_lcd_write
  6155 ;; This function is called by:
  6156 ;;		_action_menu_selector
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text43
  6161  0025DC                     __ptext43:
  6162                           	opt stack 0
  6163  0025DC                     _action_menu_selector_1:
  6164                           	opt stack 21
  6165                           
  6166                           ;main.c: 117: lcd_write(1,2,">");
  6167                           
  6168                           ;incstack = 0
  6169  0025DC  0E00               	movlw	0
  6170  0025DE  6E35               	movwf	lcd_write@column+1,c
  6171  0025E0  0E01               	movlw	1
  6172  0025E2  6E34               	movwf	lcd_write@column,c
  6173  0025E4  0E00               	movlw	0
  6174  0025E6  6E37               	movwf	lcd_write@row+1,c
  6175  0025E8  0E02               	movlw	2
  6176  0025EA  6E36               	movwf	lcd_write@row,c
  6177  0025EC  0EE8               	movlw	low STR_2
  6178  0025EE  6E38               	movwf	lcd_write@string,c
  6179  0025F0  0E0F               	movlw	high STR_2
  6180  0025F2  6E39               	movwf	lcd_write@string+1,c
  6181  0025F4  ECBF  F014         	call	_lcd_write	;wreg free
  6182                           
  6183                           ;main.c: 118: menu_selected = 1;
  6184  0025F8  0E00               	movlw	0
  6185  0025FA  6E18               	movwf	_menu_selected+1,c
  6186  0025FC  0E01               	movlw	1
  6187  0025FE  6E17               	movwf	_menu_selected,c
  6188                           
  6189                           ;main.c: 119: lcd_write(1,1," ");
  6190  002600  0E00               	movlw	0
  6191  002602  6E35               	movwf	lcd_write@column+1,c
  6192  002604  0E01               	movlw	1
  6193  002606  6E34               	movwf	lcd_write@column,c
  6194  002608  0E00               	movlw	0
  6195  00260A  6E37               	movwf	lcd_write@row+1,c
  6196  00260C  0E01               	movlw	1
  6197  00260E  6E36               	movwf	lcd_write@row,c
  6198  002610  0EE4               	movlw	low STR_3
  6199  002612  6E38               	movwf	lcd_write@string,c
  6200  002614  0E0F               	movlw	high STR_3
  6201  002616  6E39               	movwf	lcd_write@string+1,c
  6202  002618  ECBF  F014         	call	_lcd_write	;wreg free
  6203  00261C  0012               	return		;funcret
  6204  00261E                     __end_of_action_menu_selector_1:
  6205                           	opt stack 0
  6206                           tblptru	equ	0xFF8
  6207                           tblptrh	equ	0xFF7
  6208                           tblptrl	equ	0xFF6
  6209                           tablat	equ	0xFF5
  6210                           prodl	equ	0xFF3
  6211                           intcon	equ	0xFF2
  6212                           indf0	equ	0xFEF
  6213                           postinc0	equ	0xFEE
  6214                           fsr0h	equ	0xFEA
  6215                           fsr0l	equ	0xFE9
  6216                           wreg	equ	0xFE8
  6217                           indf1	equ	0xFE7
  6218                           postdec1	equ	0xFE5
  6219                           fsr1h	equ	0xFE2
  6220                           fsr1l	equ	0xFE1
  6221                           indf2	equ	0xFDF
  6222                           fsr2h	equ	0xFDA
  6223                           fsr2l	equ	0xFD9
  6224                           status	equ	0xFD8
  6225                           
  6226 ;; *************** function _action_menu_selector_0 *****************
  6227 ;; Defined at:
  6228 ;;		line 107 in file "main.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;		None               void
  6235 ;; Registers used:
  6236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    6
  6249 ;; This function calls:
  6250 ;;		_lcd_write
  6251 ;; This function is called by:
  6252 ;;		_action_menu_selector
  6253 ;;		_activity_menu
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text44
  6258  00261E                     __ptext44:
  6259                           	opt stack 0
  6260  00261E                     _action_menu_selector_0:
  6261                           	opt stack 20
  6262                           
  6263                           ;main.c: 109: lcd_write(1,1,">");
  6264                           
  6265                           ;incstack = 0
  6266  00261E  0E00               	movlw	0
  6267  002620  6E35               	movwf	lcd_write@column+1,c
  6268  002622  0E01               	movlw	1
  6269  002624  6E34               	movwf	lcd_write@column,c
  6270  002626  0E00               	movlw	0
  6271  002628  6E37               	movwf	lcd_write@row+1,c
  6272  00262A  0E01               	movlw	1
  6273  00262C  6E36               	movwf	lcd_write@row,c
  6274  00262E  0EE8               	movlw	low STR_2
  6275  002630  6E38               	movwf	lcd_write@string,c
  6276  002632  0E0F               	movlw	high STR_2
  6277  002634  6E39               	movwf	lcd_write@string+1,c
  6278  002636  ECBF  F014         	call	_lcd_write	;wreg free
  6279                           
  6280                           ;main.c: 110: menu_selected = 0;
  6281  00263A  0E00               	movlw	0
  6282  00263C  6E18               	movwf	_menu_selected+1,c
  6283  00263E  0E00               	movlw	0
  6284  002640  6E17               	movwf	_menu_selected,c
  6285                           
  6286                           ;main.c: 111: lcd_write(9,2," ");
  6287  002642  0E00               	movlw	0
  6288  002644  6E35               	movwf	lcd_write@column+1,c
  6289  002646  0E09               	movlw	9
  6290  002648  6E34               	movwf	lcd_write@column,c
  6291  00264A  0E00               	movlw	0
  6292  00264C  6E37               	movwf	lcd_write@row+1,c
  6293  00264E  0E02               	movlw	2
  6294  002650  6E36               	movwf	lcd_write@row,c
  6295  002652  0EE4               	movlw	low STR_3
  6296  002654  6E38               	movwf	lcd_write@string,c
  6297  002656  0E0F               	movlw	high STR_3
  6298  002658  6E39               	movwf	lcd_write@string+1,c
  6299  00265A  ECBF  F014         	call	_lcd_write	;wreg free
  6300  00265E  0012               	return		;funcret
  6301  002660                     __end_of_action_menu_selector_0:
  6302                           	opt stack 0
  6303                           tblptru	equ	0xFF8
  6304                           tblptrh	equ	0xFF7
  6305                           tblptrl	equ	0xFF6
  6306                           tablat	equ	0xFF5
  6307                           prodl	equ	0xFF3
  6308                           intcon	equ	0xFF2
  6309                           indf0	equ	0xFEF
  6310                           postinc0	equ	0xFEE
  6311                           fsr0h	equ	0xFEA
  6312                           fsr0l	equ	0xFE9
  6313                           wreg	equ	0xFE8
  6314                           indf1	equ	0xFE7
  6315                           postdec1	equ	0xFE5
  6316                           fsr1h	equ	0xFE2
  6317                           fsr1l	equ	0xFE1
  6318                           indf2	equ	0xFDF
  6319                           fsr2h	equ	0xFDA
  6320                           fsr2l	equ	0xFD9
  6321                           status	equ	0xFD8
  6322                           
  6323 ;; *************** function _home_config_refresh *****************
  6324 ;; Defined at:
  6325 ;;		line 376 in file "main.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;		None               void
  6332 ;; Registers used:
  6333 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;Total ram usage:        2 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    7
  6346 ;; This function calls:
  6347 ;;		_home_state_refresh
  6348 ;;		_home_tone_refresh
  6349 ;;		_home_volume_refresh
  6350 ;; This function is called by:
  6351 ;;		_main
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text45
  6356  001854                     __ptext45:
  6357                           	opt stack 0
  6358  001854                     _home_config_refresh:
  6359                           	opt stack 23
  6360                           
  6361                           ;main.c: 378: if(state == 1){LATBbits.LATB1 = 1;;}
  6362                           
  6363                           ;incstack = 0
  6364  001854  041D               	decf	_state,w,c
  6365  001856  101E               	iorwf	_state+1,w,c
  6366  001858  A4D8               	btfss	status,2,c
  6367  00185A  D002               	goto	l3745
  6368  00185C  828A               	bsf	3978,1,c	;volatile
  6369  00185E  D000               	goto	l3745
  6370  001860                     l3745:
  6371                           
  6372                           ;main.c: 379: if(state == 0){LATBbits.LATB1 = 0;;}
  6373  001860  501D               	movf	_state,w,c
  6374  001862  101E               	iorwf	_state+1,w,c
  6375  001864  A4D8               	btfss	status,2,c
  6376  001866  D002               	goto	l3749
  6377  001868  928A               	bcf	3978,1,c	;volatile
  6378  00186A  D000               	goto	l3749
  6379  00186C                     l3749:
  6380                           
  6381                           ;main.c: 381: config_widget_time++;
  6382  00186C  4A0D               	infsnz	_config_widget_time,f,c
  6383  00186E  2A0E               	incf	_config_widget_time+1,f,c
  6384                           
  6385                           ;main.c: 383: switch(config_widget){
  6386  001870  D030               	goto	l3771
  6387  001872                     l3751:
  6388                           
  6389                           ;main.c: 386: home_state_refresh();
  6390  001872  ECCF  F010         	call	_home_state_refresh	;wreg free
  6391                           
  6392                           ;main.c: 387: if(config_widget_time == 5){
  6393  001876  0E05               	movlw	5
  6394  001878  180D               	xorwf	_config_widget_time,w,c
  6395  00187A  100E               	iorwf	_config_widget_time+1,w,c
  6396  00187C  A4D8               	btfss	status,2,c
  6397  00187E  0012               	return	
  6398                           
  6399                           ;main.c: 388: config_widget_time = 0;
  6400  001880  0E00               	movlw	0
  6401  001882  6E0E               	movwf	_config_widget_time+1,c
  6402  001884  0E00               	movlw	0
  6403  001886  6E0D               	movwf	_config_widget_time,c
  6404                           
  6405                           ;main.c: 389: config_widget = 1;
  6406  001888  0E00               	movlw	0
  6407  00188A  6E0C               	movwf	_config_widget+1,c
  6408  00188C  0E01               	movlw	1
  6409  00188E  6E0B               	movwf	_config_widget,c
  6410                           
  6411                           ;main.c: 390: }
  6412                           ;main.c: 391: break;
  6413  001890  0012               	return	
  6414  001892                     l3757:
  6415                           
  6416                           ;main.c: 394: home_volume_refresh();
  6417  001892  EC7D  F010         	call	_home_volume_refresh	;wreg free
  6418                           
  6419                           ;main.c: 395: if(config_widget_time == 5){
  6420  001896  0E05               	movlw	5
  6421  001898  180D               	xorwf	_config_widget_time,w,c
  6422  00189A  100E               	iorwf	_config_widget_time+1,w,c
  6423  00189C  A4D8               	btfss	status,2,c
  6424  00189E  0012               	return	
  6425                           
  6426                           ;main.c: 396: config_widget_time = 0;
  6427  0018A0  0E00               	movlw	0
  6428  0018A2  6E0E               	movwf	_config_widget_time+1,c
  6429  0018A4  0E00               	movlw	0
  6430  0018A6  6E0D               	movwf	_config_widget_time,c
  6431                           
  6432                           ;main.c: 397: config_widget = 2;
  6433  0018A8  0E00               	movlw	0
  6434  0018AA  6E0C               	movwf	_config_widget+1,c
  6435  0018AC  0E02               	movlw	2
  6436  0018AE  6E0B               	movwf	_config_widget,c
  6437                           
  6438                           ;main.c: 398: }
  6439                           ;main.c: 399: break;
  6440  0018B0  0012               	return	
  6441  0018B2                     l3763:
  6442                           
  6443                           ;main.c: 402: home_tone_refresh();
  6444  0018B2  ECA6  F010         	call	_home_tone_refresh	;wreg free
  6445                           
  6446                           ;main.c: 403: if(config_widget_time == 5){
  6447  0018B6  0E05               	movlw	5
  6448  0018B8  180D               	xorwf	_config_widget_time,w,c
  6449  0018BA  100E               	iorwf	_config_widget_time+1,w,c
  6450  0018BC  A4D8               	btfss	status,2,c
  6451  0018BE  0012               	return	
  6452                           
  6453                           ;main.c: 404: config_widget_time = 0;
  6454  0018C0  0E00               	movlw	0
  6455  0018C2  6E0E               	movwf	_config_widget_time+1,c
  6456  0018C4  0E00               	movlw	0
  6457  0018C6  6E0D               	movwf	_config_widget_time,c
  6458                           
  6459                           ;main.c: 405: config_widget = 0;
  6460  0018C8  0E00               	movlw	0
  6461  0018CA  6E0C               	movwf	_config_widget+1,c
  6462  0018CC  0E00               	movlw	0
  6463  0018CE  6E0B               	movwf	_config_widget,c
  6464                           
  6465                           ;main.c: 409: }
  6466                           
  6467                           ;main.c: 406: }
  6468                           ;main.c: 407: break;
  6469  0018D0  0012               	return	
  6470  0018D2                     l3771:
  6471  0018D2  C00B  F04D         	movff	_config_widget,??_home_config_refresh
  6472  0018D6  C00C  F04E         	movff	_config_widget+1,??_home_config_refresh+1
  6473                           
  6474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6475                           ; Switch size 1, requested type "space"
  6476                           ; Number of cases is 1, Range of values is 0 to 0
  6477                           ; switch strategies available:
  6478                           ; Name         Instructions Cycles
  6479                           ; simple_byte            4     3 (average)
  6480                           ;	Chosen strategy is simple_byte
  6481  0018DA  504E               	movf	??_home_config_refresh+1,w,c
  6482  0018DC  0A00               	xorlw	0	; case 0
  6483  0018DE  A4D8               	btfss	status,2,c
  6484  0018E0  0012               	return	
  6485                           
  6486                           ; Switch size 1, requested type "space"
  6487                           ; Number of cases is 3, Range of values is 0 to 2
  6488                           ; switch strategies available:
  6489                           ; Name         Instructions Cycles
  6490                           ; simple_byte           10     6 (average)
  6491                           ;	Chosen strategy is simple_byte
  6492  0018E2  504D               	movf	??_home_config_refresh,w,c
  6493  0018E4  0A00               	xorlw	0	; case 0
  6494  0018E6  B4D8               	btfsc	status,2,c
  6495  0018E8  D7C4               	goto	l3751
  6496  0018EA  0A01               	xorlw	1	; case 1
  6497  0018EC  B4D8               	btfsc	status,2,c
  6498  0018EE  D7D1               	goto	l3757
  6499  0018F0  0A03               	xorlw	3	; case 2
  6500  0018F2  A4D8               	btfss	status,2,c
  6501  0018F4  0012               	return	
  6502  0018F6  D7DD               	goto	l3763
  6503  0018F8  0012               	return		;funcret
  6504  0018FA                     __end_of_home_config_refresh:
  6505                           	opt stack 0
  6506                           tblptru	equ	0xFF8
  6507                           tblptrh	equ	0xFF7
  6508                           tblptrl	equ	0xFF6
  6509                           tablat	equ	0xFF5
  6510                           prodl	equ	0xFF3
  6511                           intcon	equ	0xFF2
  6512                           indf0	equ	0xFEF
  6513                           postinc0	equ	0xFEE
  6514                           fsr0h	equ	0xFEA
  6515                           fsr0l	equ	0xFE9
  6516                           wreg	equ	0xFE8
  6517                           indf1	equ	0xFE7
  6518                           postdec1	equ	0xFE5
  6519                           fsr1h	equ	0xFE2
  6520                           fsr1l	equ	0xFE1
  6521                           indf2	equ	0xFDF
  6522                           fsr2h	equ	0xFDA
  6523                           fsr2l	equ	0xFD9
  6524                           status	equ	0xFD8
  6525                           
  6526 ;; *************** function _home_volume_refresh *****************
  6527 ;; Defined at:
  6528 ;;		line 352 in file "main.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;		None
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;		None
  6533 ;; Return value:  Size  Location     Type
  6534 ;;		None               void
  6535 ;; Registers used:
  6536 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6546 ;;Total ram usage:        0 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    6
  6549 ;; This function calls:
  6550 ;;		_lcd_write
  6551 ;;		_sprintf
  6552 ;; This function is called by:
  6553 ;;		_home_config_refresh
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text46
  6558  0020FA                     __ptext46:
  6559                           	opt stack 0
  6560  0020FA                     _home_volume_refresh:
  6561                           	opt stack 23
  6562                           
  6563                           ;main.c: 354: if(alarm_volume == 0){
  6564                           
  6565                           ;incstack = 0
  6566  0020FA  5007               	movf	_alarm_volume,w,c
  6567  0020FC  1008               	iorwf	_alarm_volume+1,w,c
  6568  0020FE  A4D8               	btfss	status,2,c
  6569  002100  D00B               	goto	l3595
  6570                           
  6571                           ;main.c: 355: sprintf(buffer1,"VOL:BA");
  6572  002102  0E80               	movlw	low _buffer1
  6573  002104  6E36               	movwf	sprintf@sp,c
  6574  002106  0E00               	movlw	high _buffer1
  6575  002108  6E37               	movwf	sprintf@sp+1,c
  6576  00210A  0E7C               	movlw	low STR_45
  6577  00210C  6E38               	movwf	sprintf@f,c
  6578  00210E  0E0F               	movlw	high STR_45
  6579  002110  6E39               	movwf	sprintf@f+1,c
  6580  002112  ECF6  F007         	call	_sprintf	;wreg free
  6581                           
  6582                           ;main.c: 356: }
  6583  002116  D00B               	goto	l3597
  6584  002118                     l3595:
  6585                           
  6586                           ;main.c: 357: else{
  6587                           ;main.c: 358: sprintf(buffer1,"VOL:AL");
  6588  002118  0E80               	movlw	low _buffer1
  6589  00211A  6E36               	movwf	sprintf@sp,c
  6590  00211C  0E00               	movlw	high _buffer1
  6591  00211E  6E37               	movwf	sprintf@sp+1,c
  6592  002120  0E8A               	movlw	low STR_46
  6593  002122  6E38               	movwf	sprintf@f,c
  6594  002124  0E0F               	movlw	high STR_46
  6595  002126  6E39               	movwf	sprintf@f+1,c
  6596  002128  ECF6  F007         	call	_sprintf	;wreg free
  6597  00212C  D000               	goto	l3597
  6598  00212E                     l3597:
  6599                           
  6600                           ;main.c: 359: }
  6601                           ;main.c: 360: lcd_write(1,2,buffer1);
  6602  00212E  0E00               	movlw	0
  6603  002130  6E35               	movwf	lcd_write@column+1,c
  6604  002132  0E01               	movlw	1
  6605  002134  6E34               	movwf	lcd_write@column,c
  6606  002136  0E00               	movlw	0
  6607  002138  6E37               	movwf	lcd_write@row+1,c
  6608  00213A  0E02               	movlw	2
  6609  00213C  6E36               	movwf	lcd_write@row,c
  6610  00213E  0E80               	movlw	low _buffer1
  6611  002140  6E38               	movwf	lcd_write@string,c
  6612  002142  0E00               	movlw	high _buffer1
  6613  002144  6E39               	movwf	lcd_write@string+1,c
  6614  002146  ECBF  F014         	call	_lcd_write	;wreg free
  6615  00214A  0012               	return		;funcret
  6616  00214C                     __end_of_home_volume_refresh:
  6617                           	opt stack 0
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodl	equ	0xFF3
  6623                           intcon	equ	0xFF2
  6624                           indf0	equ	0xFEF
  6625                           postinc0	equ	0xFEE
  6626                           fsr0h	equ	0xFEA
  6627                           fsr0l	equ	0xFE9
  6628                           wreg	equ	0xFE8
  6629                           indf1	equ	0xFE7
  6630                           postdec1	equ	0xFE5
  6631                           fsr1h	equ	0xFE2
  6632                           fsr1l	equ	0xFE1
  6633                           indf2	equ	0xFDF
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function _home_tone_refresh *****************
  6639 ;; Defined at:
  6640 ;;		line 364 in file "main.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;		None               void
  6647 ;; Registers used:
  6648 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6658 ;;Total ram usage:        0 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    6
  6661 ;; This function calls:
  6662 ;;		_lcd_write
  6663 ;;		_sprintf
  6664 ;; This function is called by:
  6665 ;;		_home_config_refresh
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text47
  6670  00214C                     __ptext47:
  6671                           	opt stack 0
  6672  00214C                     _home_tone_refresh:
  6673                           	opt stack 23
  6674                           
  6675                           ;main.c: 366: if(alarm_tone == 0){
  6676                           
  6677                           ;incstack = 0
  6678  00214C  5005               	movf	_alarm_tone,w,c
  6679  00214E  1006               	iorwf	_alarm_tone+1,w,c
  6680  002150  A4D8               	btfss	status,2,c
  6681  002152  D00B               	goto	l3603
  6682                           
  6683                           ;main.c: 367: sprintf(buffer1,"TONO:1");
  6684  002154  0E80               	movlw	low _buffer1
  6685  002156  6E36               	movwf	sprintf@sp,c
  6686  002158  0E00               	movlw	high _buffer1
  6687  00215A  6E37               	movwf	sprintf@sp+1,c
  6688  00215C  0E67               	movlw	low STR_47
  6689  00215E  6E38               	movwf	sprintf@f,c
  6690  002160  0E0F               	movlw	high STR_47
  6691  002162  6E39               	movwf	sprintf@f+1,c
  6692  002164  ECF6  F007         	call	_sprintf	;wreg free
  6693                           
  6694                           ;main.c: 368: }
  6695  002168  D00B               	goto	l3605
  6696  00216A                     l3603:
  6697                           
  6698                           ;main.c: 369: else{
  6699                           ;main.c: 370: sprintf(buffer1,"TONO:2");
  6700  00216A  0E80               	movlw	low _buffer1
  6701  00216C  6E36               	movwf	sprintf@sp,c
  6702  00216E  0E00               	movlw	high _buffer1
  6703  002170  6E37               	movwf	sprintf@sp+1,c
  6704  002172  0E75               	movlw	low STR_48
  6705  002174  6E38               	movwf	sprintf@f,c
  6706  002176  0E0F               	movlw	high STR_48
  6707  002178  6E39               	movwf	sprintf@f+1,c
  6708  00217A  ECF6  F007         	call	_sprintf	;wreg free
  6709  00217E  D000               	goto	l3605
  6710  002180                     l3605:
  6711                           
  6712                           ;main.c: 371: }
  6713                           ;main.c: 372: lcd_write(1,2,buffer1);
  6714  002180  0E00               	movlw	0
  6715  002182  6E35               	movwf	lcd_write@column+1,c
  6716  002184  0E01               	movlw	1
  6717  002186  6E34               	movwf	lcd_write@column,c
  6718  002188  0E00               	movlw	0
  6719  00218A  6E37               	movwf	lcd_write@row+1,c
  6720  00218C  0E02               	movlw	2
  6721  00218E  6E36               	movwf	lcd_write@row,c
  6722  002190  0E80               	movlw	low _buffer1
  6723  002192  6E38               	movwf	lcd_write@string,c
  6724  002194  0E00               	movlw	high _buffer1
  6725  002196  6E39               	movwf	lcd_write@string+1,c
  6726  002198  ECBF  F014         	call	_lcd_write	;wreg free
  6727  00219C  0012               	return		;funcret
  6728  00219E                     __end_of_home_tone_refresh:
  6729                           	opt stack 0
  6730                           tblptru	equ	0xFF8
  6731                           tblptrh	equ	0xFF7
  6732                           tblptrl	equ	0xFF6
  6733                           tablat	equ	0xFF5
  6734                           prodl	equ	0xFF3
  6735                           intcon	equ	0xFF2
  6736                           indf0	equ	0xFEF
  6737                           postinc0	equ	0xFEE
  6738                           fsr0h	equ	0xFEA
  6739                           fsr0l	equ	0xFE9
  6740                           wreg	equ	0xFE8
  6741                           indf1	equ	0xFE7
  6742                           postdec1	equ	0xFE5
  6743                           fsr1h	equ	0xFE2
  6744                           fsr1l	equ	0xFE1
  6745                           indf2	equ	0xFDF
  6746                           fsr2h	equ	0xFDA
  6747                           fsr2l	equ	0xFD9
  6748                           status	equ	0xFD8
  6749                           
  6750 ;; *************** function _home_state_refresh *****************
  6751 ;; Defined at:
  6752 ;;		line 340 in file "main.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;		None               void
  6759 ;; Registers used:
  6760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    6
  6773 ;; This function calls:
  6774 ;;		_lcd_write
  6775 ;;		_sprintf
  6776 ;; This function is called by:
  6777 ;;		_home_config_refresh
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text48
  6782  00219E                     __ptext48:
  6783                           	opt stack 0
  6784  00219E                     _home_state_refresh:
  6785                           	opt stack 23
  6786                           
  6787                           ;main.c: 342: if(state == 1){
  6788                           
  6789                           ;incstack = 0
  6790  00219E  041D               	decf	_state,w,c
  6791  0021A0  101E               	iorwf	_state+1,w,c
  6792  0021A2  A4D8               	btfss	status,2,c
  6793  0021A4  D00B               	goto	l3587
  6794                           
  6795                           ;main.c: 343: sprintf(buffer1,"ACT:SI");
  6796  0021A6  0E80               	movlw	low _buffer1
  6797  0021A8  6E36               	movwf	sprintf@sp,c
  6798  0021AA  0E00               	movlw	high _buffer1
  6799  0021AC  6E37               	movwf	sprintf@sp+1,c
  6800  0021AE  0E83               	movlw	low STR_43
  6801  0021B0  6E38               	movwf	sprintf@f,c
  6802  0021B2  0E0F               	movlw	high STR_43
  6803  0021B4  6E39               	movwf	sprintf@f+1,c
  6804  0021B6  ECF6  F007         	call	_sprintf	;wreg free
  6805                           
  6806                           ;main.c: 344: }
  6807  0021BA  D00B               	goto	l3589
  6808  0021BC                     l3587:
  6809                           
  6810                           ;main.c: 345: else{
  6811                           ;main.c: 346: sprintf(buffer1,"ACT:NO");
  6812  0021BC  0E80               	movlw	low _buffer1
  6813  0021BE  6E36               	movwf	sprintf@sp,c
  6814  0021C0  0E00               	movlw	high _buffer1
  6815  0021C2  6E37               	movwf	sprintf@sp+1,c
  6816  0021C4  0E91               	movlw	low STR_44
  6817  0021C6  6E38               	movwf	sprintf@f,c
  6818  0021C8  0E0F               	movlw	high STR_44
  6819  0021CA  6E39               	movwf	sprintf@f+1,c
  6820  0021CC  ECF6  F007         	call	_sprintf	;wreg free
  6821  0021D0  D000               	goto	l3589
  6822  0021D2                     l3589:
  6823                           
  6824                           ;main.c: 347: }
  6825                           ;main.c: 348: lcd_write(1,2,buffer1);
  6826  0021D2  0E00               	movlw	0
  6827  0021D4  6E35               	movwf	lcd_write@column+1,c
  6828  0021D6  0E01               	movlw	1
  6829  0021D8  6E34               	movwf	lcd_write@column,c
  6830  0021DA  0E00               	movlw	0
  6831  0021DC  6E37               	movwf	lcd_write@row+1,c
  6832  0021DE  0E02               	movlw	2
  6833  0021E0  6E36               	movwf	lcd_write@row,c
  6834  0021E2  0E80               	movlw	low _buffer1
  6835  0021E4  6E38               	movwf	lcd_write@string,c
  6836  0021E6  0E00               	movlw	high _buffer1
  6837  0021E8  6E39               	movwf	lcd_write@string+1,c
  6838  0021EA  ECBF  F014         	call	_lcd_write	;wreg free
  6839  0021EE  0012               	return		;funcret
  6840  0021F0                     __end_of_home_state_refresh:
  6841                           	opt stack 0
  6842                           tblptru	equ	0xFF8
  6843                           tblptrh	equ	0xFF7
  6844                           tblptrl	equ	0xFF6
  6845                           tablat	equ	0xFF5
  6846                           prodl	equ	0xFF3
  6847                           intcon	equ	0xFF2
  6848                           indf0	equ	0xFEF
  6849                           postinc0	equ	0xFEE
  6850                           fsr0h	equ	0xFEA
  6851                           fsr0l	equ	0xFE9
  6852                           wreg	equ	0xFE8
  6853                           indf1	equ	0xFE7
  6854                           postdec1	equ	0xFE5
  6855                           fsr1h	equ	0xFE2
  6856                           fsr1l	equ	0xFE1
  6857                           indf2	equ	0xFDF
  6858                           fsr2h	equ	0xFDA
  6859                           fsr2l	equ	0xFD9
  6860                           status	equ	0xFD8
  6861                           
  6862 ;; *************** function _home_clock_refresh *****************
  6863 ;; Defined at:
  6864 ;;		line 331 in file "main.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;		None               void
  6871 ;; Registers used:
  6872 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;Total ram usage:        0 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:    6
  6885 ;; This function calls:
  6886 ;;		_lcd_write
  6887 ;;		_sprintf
  6888 ;; This function is called by:
  6889 ;;		_main
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text49
  6894  001990                     __ptext49:
  6895                           	opt stack 0
  6896  001990                     _home_clock_refresh:
  6897                           	opt stack 24
  6898                           
  6899                           ;main.c: 333: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  6900                           
  6901                           ;incstack = 0
  6902  001990  0E80               	movlw	low _buffer1
  6903  001992  6E36               	movwf	sprintf@sp,c
  6904  001994  0E00               	movlw	high _buffer1
  6905  001996  6E37               	movwf	sprintf@sp+1,c
  6906  001998  0E1F               	movlw	low STR_41
  6907  00199A  6E38               	movwf	sprintf@f,c
  6908  00199C  0E0F               	movlw	high STR_41
  6909  00199E  6E39               	movwf	sprintf@f+1,c
  6910  0019A0  C051  F03A         	movff	_dia,?_sprintf+4
  6911  0019A4  C052  F03B         	movff	_dia+1,?_sprintf+5
  6912  0019A8  C057  F03C         	movff	_mes,?_sprintf+6
  6913  0019AC  C058  F03D         	movff	_mes+1,?_sprintf+7
  6914  0019B0  C04F  F03E         	movff	_anio,?_sprintf+8
  6915  0019B4  C050  F03F         	movff	_anio+1,?_sprintf+9
  6916  0019B8  ECF6  F007         	call	_sprintf	;wreg free
  6917                           
  6918                           ;main.c: 334: lcd_write(9,1,buffer1);
  6919  0019BC  0E00               	movlw	0
  6920  0019BE  6E35               	movwf	lcd_write@column+1,c
  6921  0019C0  0E09               	movlw	9
  6922  0019C2  6E34               	movwf	lcd_write@column,c
  6923  0019C4  0E00               	movlw	0
  6924  0019C6  6E37               	movwf	lcd_write@row+1,c
  6925  0019C8  0E01               	movlw	1
  6926  0019CA  6E36               	movwf	lcd_write@row,c
  6927  0019CC  0E80               	movlw	low _buffer1
  6928  0019CE  6E38               	movwf	lcd_write@string,c
  6929  0019D0  0E00               	movlw	high _buffer1
  6930  0019D2  6E39               	movwf	lcd_write@string+1,c
  6931  0019D4  ECBF  F014         	call	_lcd_write	;wreg free
  6932                           
  6933                           ;main.c: 335: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  6934  0019D8  0E80               	movlw	low _buffer1
  6935  0019DA  6E36               	movwf	sprintf@sp,c
  6936  0019DC  0E00               	movlw	high _buffer1
  6937  0019DE  6E37               	movwf	sprintf@sp+1,c
  6938  0019E0  0E2E               	movlw	low STR_42
  6939  0019E2  6E38               	movwf	sprintf@f,c
  6940  0019E4  0E0F               	movlw	high STR_42
  6941  0019E6  6E39               	movwf	sprintf@f+1,c
  6942  0019E8  C055  F03A         	movff	_hora,?_sprintf+4
  6943  0019EC  C056  F03B         	movff	_hora+1,?_sprintf+5
  6944  0019F0  C019  F03C         	movff	_minuto,?_sprintf+6
  6945  0019F4  C01A  F03D         	movff	_minuto+1,?_sprintf+7
  6946  0019F8  C01B  F03E         	movff	_segundo,?_sprintf+8
  6947  0019FC  C01C  F03F         	movff	_segundo+1,?_sprintf+9
  6948  001A00  ECF6  F007         	call	_sprintf	;wreg free
  6949                           
  6950                           ;main.c: 336: lcd_write(9,2,buffer1);
  6951  001A04  0E00               	movlw	0
  6952  001A06  6E35               	movwf	lcd_write@column+1,c
  6953  001A08  0E09               	movlw	9
  6954  001A0A  6E34               	movwf	lcd_write@column,c
  6955  001A0C  0E00               	movlw	0
  6956  001A0E  6E37               	movwf	lcd_write@row+1,c
  6957  001A10  0E02               	movlw	2
  6958  001A12  6E36               	movwf	lcd_write@row,c
  6959  001A14  0E80               	movlw	low _buffer1
  6960  001A16  6E38               	movwf	lcd_write@string,c
  6961  001A18  0E00               	movlw	high _buffer1
  6962  001A1A  6E39               	movwf	lcd_write@string+1,c
  6963  001A1C  ECBF  F014         	call	_lcd_write	;wreg free
  6964  001A20  0012               	return		;funcret
  6965  001A22                     __end_of_home_clock_refresh:
  6966                           	opt stack 0
  6967                           tblptru	equ	0xFF8
  6968                           tblptrh	equ	0xFF7
  6969                           tblptrl	equ	0xFF6
  6970                           tablat	equ	0xFF5
  6971                           prodl	equ	0xFF3
  6972                           intcon	equ	0xFF2
  6973                           indf0	equ	0xFEF
  6974                           postinc0	equ	0xFEE
  6975                           fsr0h	equ	0xFEA
  6976                           fsr0l	equ	0xFE9
  6977                           wreg	equ	0xFE8
  6978                           indf1	equ	0xFE7
  6979                           postdec1	equ	0xFE5
  6980                           fsr1h	equ	0xFE2
  6981                           fsr1l	equ	0xFE1
  6982                           indf2	equ	0xFDF
  6983                           fsr2h	equ	0xFDA
  6984                           fsr2l	equ	0xFD9
  6985                           status	equ	0xFD8
  6986                           
  6987 ;; *************** function _sprintf *****************
  6988 ;; Defined at:
  6989 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  sp              2   12[COMRAM] PTR unsigned char 
  6992 ;;		 -> buffer1(20), 
  6993 ;;  f               2   14[COMRAM] PTR const unsigned char 
  6994 ;;		 -> STR_51(5), STR_50(5), STR_48(7), STR_47(7), 
  6995 ;;		 -> STR_46(7), STR_45(7), STR_44(7), STR_43(7), 
  6996 ;;		 -> STR_42(15), STR_41(15), 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  tmpval          4    0        struct .
  6999 ;;  cp              3    0        PTR const unsigned char 
  7000 ;;  width           2   32[COMRAM] int 
  7001 ;;  val             2   29[COMRAM] unsigned int 
  7002 ;;  ap              2   26[COMRAM] PTR void [1]
  7003 ;;		 -> ?_sprintf(2), 
  7004 ;;  len             2    0        unsigned int 
  7005 ;;  c               1   34[COMRAM] char 
  7006 ;;  prec            1   31[COMRAM] char 
  7007 ;;  flag            1   28[COMRAM] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  2   12[COMRAM] int 
  7010 ;; Registers used:
  7011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7017 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7018 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7019 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7020 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7021 ;;Total ram usage:       23 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    1
  7024 ;; This function calls:
  7025 ;;		___lwdiv
  7026 ;;		___lwmod
  7027 ;;		___wmul
  7028 ;;		_isdigit
  7029 ;; This function is called by:
  7030 ;;		_home_clock_refresh
  7031 ;;		_home_state_refresh
  7032 ;;		_home_volume_refresh
  7033 ;;		_home_tone_refresh
  7034 ;;		_button_number
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text50
  7039  000FEC                     __ptext50:
  7040                           	opt stack 0
  7041  000FEC                     _sprintf:
  7042                           	opt stack 27
  7043                           
  7044                           ;doprnt.c: 494: va_list ap;
  7045                           ;doprnt.c: 499: signed char c;
  7046                           ;doprnt.c: 501: int width;
  7047                           ;doprnt.c: 506: signed char prec;
  7048                           ;doprnt.c: 508: unsigned char flag;
  7049                           ;doprnt.c: 523: union {
  7050                           ;doprnt.c: 524: unsigned long vd;
  7051                           ;doprnt.c: 525: double integ;
  7052                           ;doprnt.c: 526: } tmpval;
  7053                           ;doprnt.c: 528: unsigned int val;
  7054                           ;doprnt.c: 529: unsigned len;
  7055                           ;doprnt.c: 530: const char * cp;
  7056                           ;doprnt.c: 533: *ap = __va_start();
  7057                           
  7058                           ;incstack = 0
  7059  000FEC  0E3A               	movlw	low (?_sprintf+4)
  7060  000FEE  6E44               	movwf	sprintf@ap,c
  7061  000FF0  0E00               	movlw	high (?_sprintf+4)
  7062  000FF2  6E45               	movwf	sprintf@ap+1,c
  7063                           
  7064                           ;doprnt.c: 536: while(c = *f++) {
  7065  000FF4  D117               	goto	l3319
  7066  000FF6                     l3237:
  7067                           
  7068                           ;doprnt.c: 538: if(c != '%')
  7069  000FF6  0E25               	movlw	37
  7070  000FF8  184C               	xorwf	sprintf@c,w,c
  7071  000FFA  B4D8               	btfsc	status,2,c
  7072  000FFC  D009               	goto	l3243
  7073                           
  7074                           ;doprnt.c: 540: {
  7075                           ;doprnt.c: 541: ((*sp++ = (c)));
  7076  000FFE  C036  FFD9         	movff	sprintf@sp,fsr2l
  7077  001002  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7078  001006  C04C  FFDF         	movff	sprintf@c,indf2
  7079  00100A  4A36               	infsnz	sprintf@sp,f,c
  7080  00100C  2A37               	incf	sprintf@sp+1,f,c
  7081                           
  7082                           ;doprnt.c: 542: continue;
  7083  00100E  D10A               	goto	l3319
  7084  001010                     l3243:
  7085                           
  7086                           ;doprnt.c: 543: }
  7087                           ;doprnt.c: 546: width = 0;
  7088  001010  0E00               	movlw	0
  7089  001012  6E4B               	movwf	sprintf@width+1,c
  7090  001014  0E00               	movlw	0
  7091  001016  6E4A               	movwf	sprintf@width,c
  7092                           
  7093                           ;doprnt.c: 548: flag = 0;
  7094  001018  0E00               	movlw	0
  7095  00101A  6E46               	movwf	sprintf@flag,c
  7096                           
  7097                           ;doprnt.c: 551: switch(*f) {
  7098                           
  7099                           ;doprnt.c: 550: for(;;) {
  7100  00101C  D005               	goto	l3249
  7101  00101E                     l3245:
  7102                           
  7103                           ;doprnt.c: 580: flag |= 0x04;
  7104  00101E  8446               	bsf	sprintf@flag,2,c
  7105                           
  7106                           ;doprnt.c: 581: f++;
  7107  001020  4A38               	infsnz	sprintf@f,f,c
  7108  001022  2A39               	incf	sprintf@f+1,f,c
  7109                           
  7110                           ;doprnt.c: 582: continue;
  7111  001024  D001               	goto	l3249
  7112                           
  7113                           ;doprnt.c: 584: }
  7114  001026  D00B               	goto	l3251
  7115  001028                     l3249:
  7116  001028  C038  FFF6         	movff	sprintf@f,tblptrl
  7117  00102C  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7118  001030                     	if	0	;tblptru may be non-zero
  7119  001030                     	endif
  7120  001030                     	if	0	;tblptru may be non-zero
  7121  001030                     	endif
  7122  001030  0008               	tblrd		*
  7123  001032  50F5               	movf	tablat,w,c
  7124                           
  7125                           ; Switch size 1, requested type "space"
  7126                           ; Number of cases is 1, Range of values is 48 to 48
  7127                           ; switch strategies available:
  7128                           ; Name         Instructions Cycles
  7129                           ; simple_byte            4     3 (average)
  7130                           ;	Chosen strategy is simple_byte
  7131  001034  0A30               	xorlw	48	; case 48
  7132  001036  B4D8               	btfsc	status,2,c
  7133  001038  D7F2               	goto	l3245
  7134                           
  7135                           ;doprnt.c: 585: break;
  7136  00103A  D001               	goto	l3251
  7137                           
  7138                           ;doprnt.c: 586: }
  7139  00103C  D7F5               	goto	l3249
  7140  00103E                     l3251:
  7141                           
  7142                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  7143  00103E  C038  FFF6         	movff	sprintf@f,tblptrl
  7144  001042  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7145  001046                     	if	0	;tblptru may be non-zero
  7146  001046                     	endif
  7147  001046                     	if	0	;tblptru may be non-zero
  7148  001046                     	endif
  7149  001046  0008               	tblrd		*
  7150  001048  50F5               	movf	tablat,w,c
  7151  00104A  EC82  F014         	call	_isdigit
  7152  00104E  A0D8               	btfss	status,0,c
  7153  001050  D03A               	goto	l3267
  7154                           
  7155                           ;doprnt.c: 598: width = 0;
  7156  001052  0E00               	movlw	0
  7157  001054  6E4B               	movwf	sprintf@width+1,c
  7158  001056  0E00               	movlw	0
  7159  001058  6E4A               	movwf	sprintf@width,c
  7160  00105A  D000               	goto	l3255
  7161  00105C                     l3255:
  7162                           
  7163                           ;doprnt.c: 600: width *= 10;
  7164  00105C  C04A  F02A         	movff	sprintf@width,___wmul@multiplier
  7165  001060  C04B  F02B         	movff	sprintf@width+1,___wmul@multiplier+1
  7166  001064  0E00               	movlw	0
  7167  001066  6E2D               	movwf	___wmul@multiplicand+1,c
  7168  001068  0E0A               	movlw	10
  7169  00106A  6E2C               	movwf	___wmul@multiplicand,c
  7170  00106C  EC4A  F014         	call	___wmul	;wreg free
  7171  001070  C02A  F04A         	movff	?___wmul,sprintf@width
  7172  001074  C02B  F04B         	movff	?___wmul+1,sprintf@width+1
  7173                           
  7174                           ;doprnt.c: 601: width += *f++ - '0';
  7175  001078  0ED0               	movlw	208
  7176  00107A  6E40               	movwf	??_sprintf& (0+255),c
  7177  00107C  0EFF               	movlw	255
  7178  00107E  6E41               	movwf	(??_sprintf+1)& (0+255),c
  7179  001080  C038  FFF6         	movff	sprintf@f,tblptrl
  7180  001084  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7181  001088                     	if	0	;tblptru may be non-zero
  7182  001088                     	endif
  7183  001088                     	if	0	;tblptru may be non-zero
  7184  001088                     	endif
  7185  001088  0008               	tblrd		*
  7186  00108A  50F5               	movf	tablat,w,c
  7187  00108C  6E42               	movwf	(??_sprintf+2)& (0+255),c
  7188  00108E  6A43               	clrf	(??_sprintf+3)& (0+255),c
  7189  001090  5040               	movf	??_sprintf,w,c
  7190  001092  2642               	addwf	??_sprintf+2,f,c
  7191  001094  5041               	movf	??_sprintf+1,w,c
  7192  001096  2243               	addwfc	??_sprintf+3,f,c
  7193  001098  5042               	movf	??_sprintf+2,w,c
  7194  00109A  264A               	addwf	sprintf@width,f,c
  7195  00109C  5043               	movf	??_sprintf+3,w,c
  7196  00109E  224B               	addwfc	sprintf@width+1,f,c
  7197  0010A0  4A38               	infsnz	sprintf@f,f,c
  7198  0010A2  2A39               	incf	sprintf@f+1,f,c
  7199                           
  7200                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7201  0010A4  C038  FFF6         	movff	sprintf@f,tblptrl
  7202  0010A8  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7203  0010AC                     	if	0	;tblptru may be non-zero
  7204  0010AC                     	endif
  7205  0010AC                     	if	0	;tblptru may be non-zero
  7206  0010AC                     	endif
  7207  0010AC  0008               	tblrd		*
  7208  0010AE  50F5               	movf	tablat,w,c
  7209  0010B0  EC82  F014         	call	_isdigit
  7210  0010B4  A0D8               	btfss	status,0,c
  7211  0010B6  D007               	goto	l3267
  7212  0010B8  D7D1               	goto	l3255
  7213                           
  7214                           ;doprnt.c: 608: }
  7215                           ;doprnt.c: 635: switch(c = *f++) {
  7216  0010BA  D005               	goto	l3267
  7217                           
  7218                           ;doprnt.c: 638: goto alldone;
  7219                           
  7220                           ;doprnt.c: 637: case 0:
  7221  0010BC  D0C1               	goto	l3321
  7222                           
  7223                           ;doprnt.c: 813: continue;
  7224                           
  7225                           ;doprnt.c: 802: default:
  7226  0010BE  D0B2               	goto	l3319
  7227  0010C0                     l3263:
  7228                           
  7229                           ;doprnt.c: 818: flag |= 0xC0;
  7230  0010C0  0EC0               	movlw	192
  7231  0010C2  1246               	iorwf	sprintf@flag,f,c
  7232                           
  7233                           ;doprnt.c: 822: }
  7234                           
  7235                           ;doprnt.c: 819: break;
  7236  0010C4  D011               	goto	l3269
  7237  0010C6                     l3267:
  7238  0010C6  C038  FFF6         	movff	sprintf@f,tblptrl
  7239  0010CA  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7240  0010CE  4A38               	infsnz	sprintf@f,f,c
  7241  0010D0  2A39               	incf	sprintf@f+1,f,c
  7242  0010D2                     	if	0	;tblptru may be non-zero
  7243  0010D2                     	endif
  7244  0010D2                     	if	0	;tblptru may be non-zero
  7245  0010D2                     	endif
  7246  0010D2  0008               	tblrd		*
  7247  0010D4  CFF5 F04C          	movff	tablat,sprintf@c
  7248  0010D8  504C               	movf	sprintf@c,w,c
  7249                           
  7250                           ; Switch size 1, requested type "space"
  7251                           ; Number of cases is 2, Range of values is 0 to 117
  7252                           ; switch strategies available:
  7253                           ; Name         Instructions Cycles
  7254                           ; simple_byte            7     4 (average)
  7255                           ;	Chosen strategy is simple_byte
  7256  0010DA  0A00               	xorlw	0	; case 0
  7257  0010DC  B4D8               	btfsc	status,2,c
  7258  0010DE  D0B0               	goto	l3321
  7259  0010E0  0A75               	xorlw	117	; case 117
  7260  0010E2  B4D8               	btfsc	status,2,c
  7261  0010E4  D7ED               	goto	l3263
  7262  0010E6  D09E               	goto	l3319
  7263  0010E8                     l3269:
  7264                           
  7265                           ;doprnt.c: 1273: {
  7266                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7267  0010E8  C044  FFD9         	movff	sprintf@ap,fsr2l
  7268  0010EC  C045  FFDA         	movff	sprintf@ap+1,fsr2h
  7269  0010F0  CFDE F047          	movff	postinc2,sprintf@val
  7270  0010F4  CFDD F048          	movff	postdec2,sprintf@val+1
  7271  0010F8  0E02               	movlw	2
  7272  0010FA  2644               	addwf	sprintf@ap,f,c
  7273  0010FC  0E00               	movlw	0
  7274  0010FE  2245               	addwfc	sprintf@ap+1,f,c
  7275                           
  7276                           ;doprnt.c: 1287: }
  7277                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7278  001100  0E01               	movlw	1
  7279  001102  6E4C               	movwf	sprintf@c,c
  7280  001104                     l3275:
  7281  001104  0E05               	movlw	5
  7282  001106  184C               	xorwf	sprintf@c,w,c
  7283  001108  B4D8               	btfsc	status,2,c
  7284  00110A  D016               	goto	l3287
  7285  00110C  D001               	goto	l3279
  7286  00110E  D014               	goto	l3287
  7287  001110                     l3279:
  7288                           
  7289                           ;doprnt.c: 1306: if(val < dpowers[c])
  7290  001110  504C               	movf	sprintf@c,w,c
  7291  001112  0D02               	mullw	2
  7292  001114  0E01               	movlw	low _dpowers
  7293  001116  24F3               	addwf	prodl,w,c
  7294  001118  6EF6               	movwf	tblptrl,c
  7295  00111A  0E0F               	movlw	high _dpowers
  7296  00111C  20F4               	addwfc	prodh,w,c
  7297  00111E  6EF7               	movwf	tblptrh,c
  7298  001120                     	if	0	;There are less than 3 active tblptr bytes
  7299  001120                     	endif
  7300  001120  0009               	tblrd		*+
  7301  001122  50F5               	movf	tablat,w,c
  7302  001124  5C47               	subwf	sprintf@val,w,c
  7303  001126  0009               	tblrd		*+
  7304  001128  50F5               	movf	tablat,w,c
  7305  00112A  5848               	subwfb	sprintf@val+1,w,c
  7306  00112C  A0D8               	btfss	status,0,c
  7307  00112E  D004               	goto	l3287
  7308  001130  D001               	goto	l3283
  7309                           
  7310                           ;doprnt.c: 1307: break;
  7311  001132  D002               	goto	l3287
  7312  001134                     l3283:
  7313  001134  2A4C               	incf	sprintf@c,f,c
  7314  001136  D7E6               	goto	l3275
  7315  001138                     l3287:
  7316                           
  7317                           ;doprnt.c: 1381: if(width > c)
  7318  001138  0E80               	movlw	128
  7319  00113A  BE4C               	btfsc	sprintf@c,7,c
  7320  00113C  0E7F               	movlw	127
  7321  00113E  6E40               	movwf	??_sprintf& (0+255),c
  7322  001140  504A               	movf	sprintf@width,w,c
  7323  001142  5C4C               	subwf	sprintf@c,w,c
  7324  001144  504B               	movf	sprintf@width+1,w,c
  7325  001146  0A80               	xorlw	128
  7326  001148  5840               	subwfb	??_sprintf& (0+255),w,c
  7327  00114A  B0D8               	btfsc	status,0,c
  7328  00114C  D007               	goto	l3291
  7329                           
  7330                           ;doprnt.c: 1382: width -= c;
  7331  00114E  504C               	movf	sprintf@c,w,c
  7332  001150  5E4A               	subwf	sprintf@width,f,c
  7333  001152  0E00               	movlw	0
  7334  001154  BE4C               	btfsc	sprintf@c,7,c
  7335  001156  0EFF               	movlw	255
  7336  001158  5A4B               	subwfb	sprintf@width+1,f,c
  7337  00115A  D005               	goto	l3293
  7338  00115C                     l3291:
  7339                           
  7340                           ;doprnt.c: 1383: else
  7341                           ;doprnt.c: 1384: width = 0;
  7342  00115C  0E00               	movlw	0
  7343  00115E  6E4B               	movwf	sprintf@width+1,c
  7344  001160  0E00               	movlw	0
  7345  001162  6E4A               	movwf	sprintf@width,c
  7346  001164  D000               	goto	l3293
  7347  001166                     l3293:
  7348                           
  7349                           ;doprnt.c: 1387: if(flag & 0x04) {
  7350  001166  A446               	btfss	sprintf@flag,2,c
  7351  001168  D015               	goto	l3303
  7352                           
  7353                           ;doprnt.c: 1415: if(width)
  7354  00116A  504A               	movf	sprintf@width,w,c
  7355  00116C  104B               	iorwf	sprintf@width+1,w,c
  7356  00116E  B4D8               	btfsc	status,2,c
  7357  001170  D026               	goto	l547
  7358  001172                     l3297:
  7359                           
  7360                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  7361  001172  C036  FFD9         	movff	sprintf@sp,fsr2l
  7362  001176  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7363  00117A  0E30               	movlw	48
  7364  00117C  6EDF               	movwf	indf2,c
  7365  00117E  4A36               	infsnz	sprintf@sp,f,c
  7366  001180  2A37               	incf	sprintf@sp+1,f,c
  7367                           
  7368                           ;doprnt.c: 1418: while(--width);
  7369  001182  064A               	decf	sprintf@width,f,c
  7370  001184  A0D8               	btfss	status,0,c
  7371  001186  064B               	decf	sprintf@width+1,f,c
  7372  001188  504A               	movf	sprintf@width,w,c
  7373  00118A  104B               	iorwf	sprintf@width+1,w,c
  7374  00118C  B4D8               	btfsc	status,2,c
  7375  00118E  D017               	goto	l547
  7376  001190  D7F0               	goto	l3297
  7377                           
  7378                           ;doprnt.c: 1420: } else
  7379  001192  D015               	goto	l547
  7380  001194                     l3303:
  7381                           
  7382                           ;doprnt.c: 1422: {
  7383                           ;doprnt.c: 1424: if(width
  7384                           ;doprnt.c: 1428: )
  7385  001194  504A               	movf	sprintf@width,w,c
  7386  001196  104B               	iorwf	sprintf@width+1,w,c
  7387  001198  B4D8               	btfsc	status,2,c
  7388  00119A  D011               	goto	l547
  7389  00119C                     l3305:
  7390                           
  7391                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7392  00119C  C036  FFD9         	movff	sprintf@sp,fsr2l
  7393  0011A0  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7394  0011A4  0E20               	movlw	32
  7395  0011A6  6EDF               	movwf	indf2,c
  7396  0011A8  4A36               	infsnz	sprintf@sp,f,c
  7397  0011AA  2A37               	incf	sprintf@sp+1,f,c
  7398                           
  7399                           ;doprnt.c: 1431: while(--width);
  7400  0011AC  064A               	decf	sprintf@width,f,c
  7401  0011AE  A0D8               	btfss	status,0,c
  7402  0011B0  064B               	decf	sprintf@width+1,f,c
  7403  0011B2  504A               	movf	sprintf@width,w,c
  7404  0011B4  104B               	iorwf	sprintf@width+1,w,c
  7405  0011B6  B4D8               	btfsc	status,2,c
  7406  0011B8  D002               	goto	l547
  7407  0011BA  D7F0               	goto	l3305
  7408  0011BC  D000               	goto	l547
  7409  0011BE                     l547:
  7410                           
  7411                           ;doprnt.c: 1469: }
  7412                           ;doprnt.c: 1472: prec = c;
  7413  0011BE  C04C  F049         	movff	sprintf@c,sprintf@prec
  7414                           
  7415                           ;doprnt.c: 1474: while(prec--) {
  7416  0011C2  D02A               	goto	l3317
  7417  0011C4                     l3311:
  7418                           
  7419                           ;doprnt.c: 1478: {
  7420                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7421  0011C4  5049               	movf	sprintf@prec,w,c
  7422  0011C6  0D02               	mullw	2
  7423  0011C8  0E01               	movlw	low _dpowers
  7424  0011CA  24F3               	addwf	prodl,w,c
  7425  0011CC  6EF6               	movwf	tblptrl,c
  7426  0011CE  0E0F               	movlw	high _dpowers
  7427  0011D0  20F4               	addwfc	prodh,w,c
  7428  0011D2  6EF7               	movwf	tblptrh,c
  7429  0011D4                     	if	0	;There are less than 3 active tblptr bytes
  7430  0011D4                     	endif
  7431  0011D4  0009               	tblrd		*+
  7432  0011D6  CFF5 F02C          	movff	tablat,___lwdiv@divisor
  7433  0011DA  000A               	tblrd		*-
  7434  0011DC  CFF5 F02D          	movff	tablat,___lwdiv@divisor+1
  7435  0011E0  C047  F02A         	movff	sprintf@val,___lwdiv@dividend
  7436  0011E4  C048  F02B         	movff	sprintf@val+1,___lwdiv@dividend+1
  7437  0011E8  EC25  F010         	call	___lwdiv	;wreg free
  7438  0011EC  C02A  F031         	movff	?___lwdiv,___lwmod@dividend
  7439  0011F0  C02B  F032         	movff	?___lwdiv+1,___lwmod@dividend+1
  7440  0011F4  0E00               	movlw	0
  7441  0011F6  6E34               	movwf	___lwmod@divisor+1,c
  7442  0011F8  0E0A               	movlw	10
  7443  0011FA  6E33               	movwf	___lwmod@divisor,c
  7444  0011FC  EC6D  F011         	call	___lwmod	;wreg free
  7445  001200  5031               	movf	?___lwmod,w,c
  7446  001202  0F30               	addlw	48
  7447  001204  6E4C               	movwf	sprintf@c,c
  7448                           
  7449                           ;doprnt.c: 1523: }
  7450                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7451  001206  C036  FFD9         	movff	sprintf@sp,fsr2l
  7452  00120A  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7453  00120E  C04C  FFDF         	movff	sprintf@c,indf2
  7454  001212  4A36               	infsnz	sprintf@sp,f,c
  7455  001214  2A37               	incf	sprintf@sp+1,f,c
  7456  001216  D000               	goto	l3317
  7457  001218                     l3317:
  7458  001218  0649               	decf	sprintf@prec,f,c
  7459  00121A  2849               	incf	sprintf@prec,w,c
  7460  00121C  B4D8               	btfsc	status,2,c
  7461  00121E  D002               	goto	l3319
  7462  001220  D7D1               	goto	l3311
  7463  001222  D000               	goto	l3319
  7464  001224                     l3319:
  7465  001224  C038  FFF6         	movff	sprintf@f,tblptrl
  7466  001228  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7467  00122C  4A38               	infsnz	sprintf@f,f,c
  7468  00122E  2A39               	incf	sprintf@f+1,f,c
  7469  001230                     	if	0	;tblptru may be non-zero
  7470  001230                     	endif
  7471  001230                     	if	0	;tblptru may be non-zero
  7472  001230                     	endif
  7473  001230  0008               	tblrd		*
  7474  001232  CFF5 F04C          	movff	tablat,sprintf@c
  7475  001236  504C               	movf	sprintf@c,w,c
  7476  001238  B4D8               	btfsc	status,2,c
  7477  00123A  D002               	goto	l3321
  7478  00123C  D6DC               	goto	l3237
  7479  00123E  D000               	goto	l3321
  7480  001240                     l3321:
  7481                           
  7482                           ;doprnt.c: 1538: *sp = 0;
  7483  001240  C036  FFD9         	movff	sprintf@sp,fsr2l
  7484  001244  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7485  001248  0E00               	movlw	0
  7486  00124A  6EDF               	movwf	indf2,c
  7487  00124C  0012               	return	
  7488                           
  7489                           ;doprnt.c: 1540: return 0;
  7490                           ;	Return value of _sprintf is never used
  7491  00124E  0012               	return		;funcret
  7492  001250                     __end_of_sprintf:
  7493                           	opt stack 0
  7494                           tblptru	equ	0xFF8
  7495                           tblptrh	equ	0xFF7
  7496                           tblptrl	equ	0xFF6
  7497                           tablat	equ	0xFF5
  7498                           prodh	equ	0xFF4
  7499                           prodl	equ	0xFF3
  7500                           intcon	equ	0xFF2
  7501                           indf0	equ	0xFEF
  7502                           postinc0	equ	0xFEE
  7503                           fsr0h	equ	0xFEA
  7504                           fsr0l	equ	0xFE9
  7505                           wreg	equ	0xFE8
  7506                           indf1	equ	0xFE7
  7507                           postdec1	equ	0xFE5
  7508                           fsr1h	equ	0xFE2
  7509                           fsr1l	equ	0xFE1
  7510                           indf2	equ	0xFDF
  7511                           postinc2	equ	0xFDE
  7512                           postdec2	equ	0xFDD
  7513                           fsr2h	equ	0xFDA
  7514                           fsr2l	equ	0xFD9
  7515                           status	equ	0xFD8
  7516                           
  7517 ;; *************** function _isdigit *****************
  7518 ;; Defined at:
  7519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;  c               1    wreg     unsigned char 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  c               1    2[COMRAM] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;		None               void
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7537 ;;Total ram usage:        3 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_sprintf
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text51
  7547  002904                     __ptext51:
  7548                           	opt stack 0
  7549  002904                     _isdigit:
  7550                           	opt stack 27
  7551                           
  7552                           ;incstack = 0
  7553                           ;isdigit@c stored from wreg
  7554  002904  6E2C               	movwf	isdigit@c,c
  7555  002906  0E00               	movlw	0
  7556  002908  6E2B               	movwf	_isdigit$2191,c
  7557  00290A  0E3A               	movlw	58
  7558  00290C  602C               	cpfslt	isdigit@c,c
  7559  00290E  D006               	goto	l3007
  7560  002910  0E2F               	movlw	47
  7561  002912  642C               	cpfsgt	isdigit@c,c
  7562  002914  D003               	goto	l3007
  7563  002916  0E01               	movlw	1
  7564  002918  6E2B               	movwf	_isdigit$2191,c
  7565  00291A  D000               	goto	l3007
  7566  00291C                     l3007:
  7567  00291C  C02B  F02A         	movff	_isdigit$2191,??_isdigit
  7568  002920  302A               	rrcf	??_isdigit,w,c
  7569  002922  0012               	return	
  7570  002924  0012               	return		;funcret
  7571  002926                     __end_of_isdigit:
  7572                           	opt stack 0
  7573                           tblptru	equ	0xFF8
  7574                           tblptrh	equ	0xFF7
  7575                           tblptrl	equ	0xFF6
  7576                           tablat	equ	0xFF5
  7577                           prodh	equ	0xFF4
  7578                           prodl	equ	0xFF3
  7579                           intcon	equ	0xFF2
  7580                           indf0	equ	0xFEF
  7581                           postinc0	equ	0xFEE
  7582                           fsr0h	equ	0xFEA
  7583                           fsr0l	equ	0xFE9
  7584                           wreg	equ	0xFE8
  7585                           indf1	equ	0xFE7
  7586                           postdec1	equ	0xFE5
  7587                           fsr1h	equ	0xFE2
  7588                           fsr1l	equ	0xFE1
  7589                           indf2	equ	0xFDF
  7590                           postinc2	equ	0xFDE
  7591                           postdec2	equ	0xFDD
  7592                           fsr2h	equ	0xFDA
  7593                           fsr2l	equ	0xFD9
  7594                           status	equ	0xFD8
  7595                           
  7596 ;; *************** function ___wmul *****************
  7597 ;; Defined at:
  7598 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  multiplier      2    0[COMRAM] unsigned int 
  7601 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  product         2    4[COMRAM] unsigned int 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  2    0[COMRAM] unsigned int 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0, prodl, prodh
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;Total ram usage:        6 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_sprintf
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text52
  7627  002894                     __ptext52:
  7628                           	opt stack 0
  7629  002894                     ___wmul:
  7630                           	opt stack 27
  7631                           
  7632                           ;incstack = 0
  7633  002894  502A               	movf	___wmul@multiplier,w,c
  7634  002896  022C               	mulwf	___wmul@multiplicand,c
  7635  002898  CFF3 F02E          	movff	prodl,___wmul@product
  7636  00289C  CFF4 F02F          	movff	prodh,___wmul@product+1
  7637  0028A0  502A               	movf	___wmul@multiplier,w,c
  7638  0028A2  022D               	mulwf	___wmul@multiplicand+1,c
  7639  0028A4  50F3               	movf	prodl,w,c
  7640  0028A6  262F               	addwf	___wmul@product+1,f,c
  7641  0028A8  502B               	movf	___wmul@multiplier+1,w,c
  7642  0028AA  022C               	mulwf	___wmul@multiplicand,c
  7643  0028AC  50F3               	movf	prodl,w,c
  7644  0028AE  262F               	addwf	___wmul@product+1,f,c
  7645  0028B0  C02E  F02A         	movff	___wmul@product,?___wmul
  7646  0028B4  C02F  F02B         	movff	___wmul@product+1,?___wmul+1
  7647  0028B8  0012               	return	
  7648  0028BA  0012               	return		;funcret
  7649  0028BC                     __end_of___wmul:
  7650                           	opt stack 0
  7651                           tblptru	equ	0xFF8
  7652                           tblptrh	equ	0xFF7
  7653                           tblptrl	equ	0xFF6
  7654                           tablat	equ	0xFF5
  7655                           prodh	equ	0xFF4
  7656                           prodl	equ	0xFF3
  7657                           intcon	equ	0xFF2
  7658                           indf0	equ	0xFEF
  7659                           postinc0	equ	0xFEE
  7660                           fsr0h	equ	0xFEA
  7661                           fsr0l	equ	0xFE9
  7662                           wreg	equ	0xFE8
  7663                           indf1	equ	0xFE7
  7664                           postdec1	equ	0xFE5
  7665                           fsr1h	equ	0xFE2
  7666                           fsr1l	equ	0xFE1
  7667                           indf2	equ	0xFDF
  7668                           postinc2	equ	0xFDE
  7669                           postdec2	equ	0xFDD
  7670                           fsr2h	equ	0xFDA
  7671                           fsr2l	equ	0xFD9
  7672                           status	equ	0xFD8
  7673                           
  7674 ;; *************** function ___lwmod *****************
  7675 ;; Defined at:
  7676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  dividend        2    7[COMRAM] unsigned int 
  7679 ;;  divisor         2    9[COMRAM] unsigned int 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;  counter         1   11[COMRAM] unsigned char 
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  2    7[COMRAM] unsigned int 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2, status,0
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7694 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7695 ;;Total ram usage:        5 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_sprintf
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text53
  7705  0022DA                     __ptext53:
  7706                           	opt stack 0
  7707  0022DA                     ___lwmod:
  7708                           	opt stack 27
  7709                           
  7710                           ;incstack = 0
  7711  0022DA  5033               	movf	___lwmod@divisor,w,c
  7712  0022DC  1034               	iorwf	___lwmod@divisor+1,w,c
  7713  0022DE  B4D8               	btfsc	status,2,c
  7714  0022E0  D01D               	goto	l1201
  7715  0022E2  0E01               	movlw	1
  7716  0022E4  6E35               	movwf	___lwmod@counter,c
  7717  0022E6  D005               	goto	l3045
  7718  0022E8                     l3043:
  7719  0022E8  90D8               	bcf	status,0,c
  7720  0022EA  3633               	rlcf	___lwmod@divisor,f,c
  7721  0022EC  3634               	rlcf	___lwmod@divisor+1,f,c
  7722  0022EE  2A35               	incf	___lwmod@counter,f,c
  7723  0022F0  D000               	goto	l3045
  7724  0022F2                     l3045:
  7725  0022F2  BE34               	btfsc	___lwmod@divisor+1,7,c
  7726  0022F4  D002               	goto	l3047
  7727  0022F6  D7F8               	goto	l3043
  7728  0022F8  D000               	goto	l3047
  7729  0022FA                     l3047:
  7730  0022FA  5033               	movf	___lwmod@divisor,w,c
  7731  0022FC  5C31               	subwf	___lwmod@dividend,w,c
  7732  0022FE  5034               	movf	___lwmod@divisor+1,w,c
  7733  002300  5832               	subwfb	___lwmod@dividend+1,w,c
  7734  002302  A0D8               	btfss	status,0,c
  7735  002304  D005               	goto	l3051
  7736  002306  5033               	movf	___lwmod@divisor,w,c
  7737  002308  5E31               	subwf	___lwmod@dividend,f,c
  7738  00230A  5034               	movf	___lwmod@divisor+1,w,c
  7739  00230C  5A32               	subwfb	___lwmod@dividend+1,f,c
  7740  00230E  D000               	goto	l3051
  7741  002310                     l3051:
  7742  002310  90D8               	bcf	status,0,c
  7743  002312  3234               	rrcf	___lwmod@divisor+1,f,c
  7744  002314  3233               	rrcf	___lwmod@divisor,f,c
  7745  002316  2E35               	decfsz	___lwmod@counter,f,c
  7746  002318  D7F0               	goto	l3047
  7747  00231A  D000               	goto	l1201
  7748  00231C                     l1201:
  7749  00231C  C031  F031         	movff	___lwmod@dividend,?___lwmod
  7750  002320  C032  F032         	movff	___lwmod@dividend+1,?___lwmod+1
  7751  002324  0012               	return		;funcret
  7752  002326                     __end_of___lwmod:
  7753                           	opt stack 0
  7754                           tblptru	equ	0xFF8
  7755                           tblptrh	equ	0xFF7
  7756                           tblptrl	equ	0xFF6
  7757                           tablat	equ	0xFF5
  7758                           prodh	equ	0xFF4
  7759                           prodl	equ	0xFF3
  7760                           intcon	equ	0xFF2
  7761                           indf0	equ	0xFEF
  7762                           postinc0	equ	0xFEE
  7763                           fsr0h	equ	0xFEA
  7764                           fsr0l	equ	0xFE9
  7765                           wreg	equ	0xFE8
  7766                           indf1	equ	0xFE7
  7767                           postdec1	equ	0xFE5
  7768                           fsr1h	equ	0xFE2
  7769                           fsr1l	equ	0xFE1
  7770                           indf2	equ	0xFDF
  7771                           postinc2	equ	0xFDE
  7772                           postdec2	equ	0xFDD
  7773                           fsr2h	equ	0xFDA
  7774                           fsr2l	equ	0xFD9
  7775                           status	equ	0xFD8
  7776                           
  7777 ;; *************** function ___lwdiv *****************
  7778 ;; Defined at:
  7779 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  dividend        2    0[COMRAM] unsigned int 
  7782 ;;  divisor         2    2[COMRAM] unsigned int 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;  quotient        2    4[COMRAM] unsigned int 
  7785 ;;  counter         1    6[COMRAM] unsigned char 
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  2    0[COMRAM] unsigned int 
  7788 ;; Registers used:
  7789 ;;		wreg, status,2, status,0
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7796 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7798 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7799 ;;Total ram usage:        7 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_sprintf
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text54
  7809  00204A                     __ptext54:
  7810                           	opt stack 0
  7811  00204A                     ___lwdiv:
  7812                           	opt stack 27
  7813                           
  7814                           ;incstack = 0
  7815  00204A  0E00               	movlw	0
  7816  00204C  6E2F               	movwf	___lwdiv@quotient+1,c
  7817  00204E  0E00               	movlw	0
  7818  002050  6E2E               	movwf	___lwdiv@quotient,c
  7819  002052  502C               	movf	___lwdiv@divisor,w,c
  7820  002054  102D               	iorwf	___lwdiv@divisor+1,w,c
  7821  002056  B4D8               	btfsc	status,2,c
  7822  002058  D021               	goto	l1191
  7823  00205A  0E01               	movlw	1
  7824  00205C  6E30               	movwf	___lwdiv@counter,c
  7825  00205E  D005               	goto	l3025
  7826  002060                     l3023:
  7827  002060  90D8               	bcf	status,0,c
  7828  002062  362C               	rlcf	___lwdiv@divisor,f,c
  7829  002064  362D               	rlcf	___lwdiv@divisor+1,f,c
  7830  002066  2A30               	incf	___lwdiv@counter,f,c
  7831  002068  D000               	goto	l3025
  7832  00206A                     l3025:
  7833  00206A  BE2D               	btfsc	___lwdiv@divisor+1,7,c
  7834  00206C  D002               	goto	l3027
  7835  00206E  D7F8               	goto	l3023
  7836  002070  D000               	goto	l3027
  7837  002072                     l3027:
  7838  002072  90D8               	bcf	status,0,c
  7839  002074  362E               	rlcf	___lwdiv@quotient,f,c
  7840  002076  362F               	rlcf	___lwdiv@quotient+1,f,c
  7841  002078  502C               	movf	___lwdiv@divisor,w,c
  7842  00207A  5C2A               	subwf	___lwdiv@dividend,w,c
  7843  00207C  502D               	movf	___lwdiv@divisor+1,w,c
  7844  00207E  582B               	subwfb	___lwdiv@dividend+1,w,c
  7845  002080  A0D8               	btfss	status,0,c
  7846  002082  D006               	goto	l3035
  7847  002084  502C               	movf	___lwdiv@divisor,w,c
  7848  002086  5E2A               	subwf	___lwdiv@dividend,f,c
  7849  002088  502D               	movf	___lwdiv@divisor+1,w,c
  7850  00208A  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  7851  00208C  802E               	bsf	___lwdiv@quotient,0,c
  7852  00208E  D000               	goto	l3035
  7853  002090                     l3035:
  7854  002090  90D8               	bcf	status,0,c
  7855  002092  322D               	rrcf	___lwdiv@divisor+1,f,c
  7856  002094  322C               	rrcf	___lwdiv@divisor,f,c
  7857  002096  2E30               	decfsz	___lwdiv@counter,f,c
  7858  002098  D7EC               	goto	l3027
  7859  00209A  D000               	goto	l1191
  7860  00209C                     l1191:
  7861  00209C  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  7862  0020A0  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7863  0020A4  0012               	return		;funcret
  7864  0020A6                     __end_of___lwdiv:
  7865                           	opt stack 0
  7866                           tblptru	equ	0xFF8
  7867                           tblptrh	equ	0xFF7
  7868                           tblptrl	equ	0xFF6
  7869                           tablat	equ	0xFF5
  7870                           prodh	equ	0xFF4
  7871                           prodl	equ	0xFF3
  7872                           intcon	equ	0xFF2
  7873                           indf0	equ	0xFEF
  7874                           postinc0	equ	0xFEE
  7875                           fsr0h	equ	0xFEA
  7876                           fsr0l	equ	0xFE9
  7877                           wreg	equ	0xFE8
  7878                           indf1	equ	0xFE7
  7879                           postdec1	equ	0xFE5
  7880                           fsr1h	equ	0xFE2
  7881                           fsr1l	equ	0xFE1
  7882                           indf2	equ	0xFDF
  7883                           postinc2	equ	0xFDE
  7884                           postdec2	equ	0xFDD
  7885                           fsr2h	equ	0xFDA
  7886                           fsr2l	equ	0xFD9
  7887                           status	equ	0xFD8
  7888                           
  7889 ;; *************** function _check_home_callback *****************
  7890 ;; Defined at:
  7891 ;;		line 91 in file "main.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;		None               void
  7898 ;; Registers used:
  7899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;Total ram usage:        0 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    7
  7912 ;; This function calls:
  7913 ;;		_activity_home
  7914 ;;		_reset_home_callback
  7915 ;; This function is called by:
  7916 ;;		_main
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text55
  7921  002926                     __ptext55:
  7922                           	opt stack 0
  7923  002926                     _check_home_callback:
  7924                           	opt stack 23
  7925                           
  7926                           ;main.c: 93: if(activity != 0){
  7927                           
  7928                           ;incstack = 0
  7929  002926  5003               	movf	_activity,w,c
  7930  002928  1004               	iorwf	_activity+1,w,c
  7931  00292A  B4D8               	btfsc	status,2,c
  7932  00292C  0012               	return	
  7933                           
  7934                           ;main.c: 94: home_callback--;
  7935  00292E  060F               	decf	_home_callback,f,c
  7936  002930  A0D8               	btfss	status,0,c
  7937  002932  0610               	decf	_home_callback+1,f,c
  7938                           
  7939                           ;main.c: 96: if(home_callback == 0){
  7940  002934  500F               	movf	_home_callback,w,c
  7941  002936  1010               	iorwf	_home_callback+1,w,c
  7942  002938  A4D8               	btfss	status,2,c
  7943  00293A  0012               	return	
  7944                           
  7945                           ;main.c: 97: reset_home_callback();
  7946  00293C  EC02  F015         	call	_reset_home_callback	;wreg free
  7947                           
  7948                           ;main.c: 98: activity_home();
  7949  002940  EC35  F014         	call	_activity_home	;wreg free
  7950  002944  0012               	return	
  7951  002946  0012               	return		;funcret
  7952  002948                     __end_of_check_home_callback:
  7953                           	opt stack 0
  7954                           tblptru	equ	0xFF8
  7955                           tblptrh	equ	0xFF7
  7956                           tblptrl	equ	0xFF6
  7957                           tablat	equ	0xFF5
  7958                           prodh	equ	0xFF4
  7959                           prodl	equ	0xFF3
  7960                           intcon	equ	0xFF2
  7961                           indf0	equ	0xFEF
  7962                           postinc0	equ	0xFEE
  7963                           fsr0h	equ	0xFEA
  7964                           fsr0l	equ	0xFE9
  7965                           wreg	equ	0xFE8
  7966                           indf1	equ	0xFE7
  7967                           postdec1	equ	0xFE5
  7968                           fsr1h	equ	0xFE2
  7969                           fsr1l	equ	0xFE1
  7970                           indf2	equ	0xFDF
  7971                           postinc2	equ	0xFDE
  7972                           postdec2	equ	0xFDD
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8
  7976                           
  7977 ;; *************** function _reset_home_callback *****************
  7978 ;; Defined at:
  7979 ;;		line 85 in file "main.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;		None               void
  7986 ;; Registers used:
  7987 ;;		None
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;Total ram usage:        0 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		_check_home_callback
  8003 ;;		_button_A
  8004 ;;		_button_B
  8005 ;;		_button_C
  8006 ;;		_button_D
  8007 ;;		_button_asterisk
  8008 ;;		_button_hash
  8009 ;;		_button_number
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text56
  8014  002A04                     __ptext56:
  8015                           	opt stack 0
  8016  002A04                     _reset_home_callback:
  8017                           	opt stack 28
  8018                           
  8019                           ;main.c: 87: home_callback = home_callback_delay;
  8020                           
  8021                           ;incstack = 0
  8022  002A04  C011  F00F         	movff	_home_callback_delay,_home_callback
  8023  002A08  C012  F010         	movff	_home_callback_delay+1,_home_callback+1
  8024  002A0C  0012               	return		;funcret
  8025  002A0E                     __end_of_reset_home_callback:
  8026                           	opt stack 0
  8027                           tblptru	equ	0xFF8
  8028                           tblptrh	equ	0xFF7
  8029                           tblptrl	equ	0xFF6
  8030                           tablat	equ	0xFF5
  8031                           prodh	equ	0xFF4
  8032                           prodl	equ	0xFF3
  8033                           intcon	equ	0xFF2
  8034                           indf0	equ	0xFEF
  8035                           postinc0	equ	0xFEE
  8036                           fsr0h	equ	0xFEA
  8037                           fsr0l	equ	0xFE9
  8038                           wreg	equ	0xFE8
  8039                           indf1	equ	0xFE7
  8040                           postdec1	equ	0xFE5
  8041                           fsr1h	equ	0xFE2
  8042                           fsr1l	equ	0xFE1
  8043                           indf2	equ	0xFDF
  8044                           postinc2	equ	0xFDE
  8045                           postdec2	equ	0xFDD
  8046                           fsr2h	equ	0xFDA
  8047                           fsr2l	equ	0xFD9
  8048                           status	equ	0xFD8
  8049                           
  8050 ;; *************** function _activity_home *****************
  8051 ;; Defined at:
  8052 ;;		line 77 in file "main.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;		None               void
  8059 ;; Registers used:
  8060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    6
  8073 ;; This function calls:
  8074 ;;		_lcd_init
  8075 ;;		_lcd_write
  8076 ;; This function is called by:
  8077 ;;		_check_home_callback
  8078 ;;		_pin_set
  8079 ;;		_button_B_submenu_activation
  8080 ;;		_button_B_submenu_pin_config
  8081 ;;		_button_B_submenu_siren_volume
  8082 ;;		_button_B_submenu_siren_tone
  8083 ;;		_button_D
  8084 ;;		_main
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text57
  8089  00286A                     __ptext57:
  8090                           	opt stack 0
  8091  00286A                     _activity_home:
  8092                           	opt stack 21
  8093                           
  8094                           ;main.c: 79: activity = 0;
  8095                           
  8096                           ;incstack = 0
  8097  00286A  0E00               	movlw	0
  8098  00286C  6E04               	movwf	_activity+1,c
  8099  00286E  0E00               	movlw	0
  8100  002870  6E03               	movwf	_activity,c
  8101                           
  8102                           ;main.c: 80: lcd_init();
  8103  002872  EC99  F00D         	call	_lcd_init	;wreg free
  8104                           
  8105                           ;main.c: 81: lcd_write(1,1,"X28");
  8106  002876  0E00               	movlw	0
  8107  002878  6E35               	movwf	lcd_write@column+1,c
  8108  00287A  0E01               	movlw	1
  8109  00287C  6E34               	movwf	lcd_write@column,c
  8110  00287E  0E00               	movlw	0
  8111  002880  6E37               	movwf	lcd_write@row+1,c
  8112  002882  0E01               	movlw	1
  8113  002884  6E36               	movwf	lcd_write@row,c
  8114  002886  0ED6               	movlw	low STR_1
  8115  002888  6E38               	movwf	lcd_write@string,c
  8116  00288A  0E0F               	movlw	high STR_1
  8117  00288C  6E39               	movwf	lcd_write@string+1,c
  8118  00288E  ECBF  F014         	call	_lcd_write	;wreg free
  8119  002892  0012               	return		;funcret
  8120  002894                     __end_of_activity_home:
  8121                           	opt stack 0
  8122                           tblptru	equ	0xFF8
  8123                           tblptrh	equ	0xFF7
  8124                           tblptrl	equ	0xFF6
  8125                           tablat	equ	0xFF5
  8126                           prodh	equ	0xFF4
  8127                           prodl	equ	0xFF3
  8128                           intcon	equ	0xFF2
  8129                           indf0	equ	0xFEF
  8130                           postinc0	equ	0xFEE
  8131                           fsr0h	equ	0xFEA
  8132                           fsr0l	equ	0xFE9
  8133                           wreg	equ	0xFE8
  8134                           indf1	equ	0xFE7
  8135                           postdec1	equ	0xFE5
  8136                           fsr1h	equ	0xFE2
  8137                           fsr1l	equ	0xFE1
  8138                           indf2	equ	0xFDF
  8139                           postinc2	equ	0xFDE
  8140                           postdec2	equ	0xFDD
  8141                           fsr2h	equ	0xFDA
  8142                           fsr2l	equ	0xFD9
  8143                           status	equ	0xFD8
  8144                           
  8145 ;; *************** function _lcd_write *****************
  8146 ;; Defined at:
  8147 ;;		line 68 in file "main.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  column          2   10[COMRAM] int 
  8150 ;;  row             2   12[COMRAM] int 
  8151 ;;  string          2   14[COMRAM] PTR const unsigned char 
  8152 ;;		 -> buffer1(20), STR_39(11), STR_37(6), STR_36(8), 
  8153 ;;		 -> STR_35(4), STR_34(7), STR_33(7), STR_32(5), 
  8154 ;;		 -> STR_31(5), STR_30(5), STR_29(8), STR_28(5), 
  8155 ;;		 -> STR_27(8), STR_26(7), STR_25(3), STR_24(3), 
  8156 ;;		 -> STR_23(8), STR_22(5), STR_21(6), STR_20(6), 
  8157 ;;		 -> STR_19(7), STR_18(4), STR_17(6), STR_16(8), 
  8158 ;;		 -> STR_15(16), STR_13(2), STR_12(2), STR_11(2), 
  8159 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  8160 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  8161 ;;		 -> STR_2(2), STR_1(4), 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;		None               void
  8166 ;; Registers used:
  8167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8173 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8177 ;;Total ram usage:        6 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; Hardware stack levels required when called:    5
  8180 ;; This function calls:
  8181 ;;		_lcd_gotoxy
  8182 ;;		_lcd_putrs
  8183 ;; This function is called by:
  8184 ;;		_activity_home
  8185 ;;		_action_menu_selector_0
  8186 ;;		_action_menu_selector_1
  8187 ;;		_action_menu_selector_2
  8188 ;;		_action_menu_selector_3
  8189 ;;		_action_submenu_selector_0
  8190 ;;		_action_submenu_selector_1
  8191 ;;		_activity_pin
  8192 ;;		_activity_menu
  8193 ;;		_activity_submenu_clock
  8194 ;;		_activity_submenu_activation
  8195 ;;		_activity_submenu_siren
  8196 ;;		_activity_submenu_siren_volume
  8197 ;;		_activity_submenu_siren_tone
  8198 ;;		_activity_submenu_pin
  8199 ;;		_activity_submenu_pin_set
  8200 ;;		_home_clock_refresh
  8201 ;;		_home_state_refresh
  8202 ;;		_home_volume_refresh
  8203 ;;		_home_tone_refresh
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text58
  8208  00297E                     __ptext58:
  8209                           	opt stack 0
  8210  00297E                     _lcd_write:
  8211                           	opt stack 21
  8212                           
  8213                           ;main.c: 70: lcd_gotoxy(column, row);
  8214                           
  8215                           ;incstack = 0
  8216  00297E  C036  F02E         	movff	lcd_write@row,lcd_gotoxy@y
  8217  002982  5034               	movf	lcd_write@column,w,c
  8218  002984  EC70  F014         	call	_lcd_gotoxy
  8219                           
  8220                           ;main.c: 71: lcd_putrs(string);
  8221  002988  C038  F032         	movff	lcd_write@string,lcd_putrs@ptr
  8222  00298C  C039  F033         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  8223  002990  EC53  F010         	call	_lcd_putrs	;wreg free
  8224  002994  0012               	return		;funcret
  8225  002996                     __end_of_lcd_write:
  8226                           	opt stack 0
  8227                           tblptru	equ	0xFF8
  8228                           tblptrh	equ	0xFF7
  8229                           tblptrl	equ	0xFF6
  8230                           tablat	equ	0xFF5
  8231                           prodh	equ	0xFF4
  8232                           prodl	equ	0xFF3
  8233                           intcon	equ	0xFF2
  8234                           indf0	equ	0xFEF
  8235                           postinc0	equ	0xFEE
  8236                           fsr0h	equ	0xFEA
  8237                           fsr0l	equ	0xFE9
  8238                           wreg	equ	0xFE8
  8239                           indf1	equ	0xFE7
  8240                           postdec1	equ	0xFE5
  8241                           fsr1h	equ	0xFE2
  8242                           fsr1l	equ	0xFE1
  8243                           indf2	equ	0xFDF
  8244                           postinc2	equ	0xFDE
  8245                           postdec2	equ	0xFDD
  8246                           fsr2h	equ	0xFDA
  8247                           fsr2l	equ	0xFD9
  8248                           status	equ	0xFD8
  8249                           
  8250 ;; *************** function _lcd_putrs *****************
  8251 ;; Defined at:
  8252 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  8255 ;;		 -> STR_49(2), buffer1(20), STR_39(11), STR_37(6), 
  8256 ;;		 -> STR_36(8), STR_35(4), STR_34(7), STR_33(7), 
  8257 ;;		 -> STR_32(5), STR_31(5), STR_30(5), STR_29(8), 
  8258 ;;		 -> STR_28(5), STR_27(8), STR_26(7), STR_25(3), 
  8259 ;;		 -> STR_24(3), STR_23(8), STR_22(5), STR_21(6), 
  8260 ;;		 -> STR_20(6), STR_19(7), STR_18(4), STR_17(6), 
  8261 ;;		 -> STR_16(8), STR_15(16), STR_13(2), STR_12(2), 
  8262 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  8263 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  8264 ;;		 -> STR_3(2), STR_2(2), STR_1(4), 
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;		None               void
  8269 ;; Registers used:
  8270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;Total ram usage:        2 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    4
  8283 ;; This function calls:
  8284 ;;		_lcd_putc
  8285 ;; This function is called by:
  8286 ;;		_lcd_write
  8287 ;;		_button_number
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text59
  8292  0020A6                     __ptext59:
  8293                           	opt stack 0
  8294  0020A6                     _lcd_putrs:
  8295                           	opt stack 24
  8296                           
  8297                           ;unmc_lcd_216.c: 223: while(*ptr){
  8298                           
  8299                           ;incstack = 0
  8300  0020A6  D015               	goto	l2775
  8301  0020A8                     l2771:
  8302                           
  8303                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  8304  0020A8  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  8305  0020AC  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  8306  0020B0  6AF8               	clrf	tblptru,c
  8307  0020B2  0E0E               	movlw	(high __ramtop+-1)
  8308  0020B4  64F7               	cpfsgt	tblptrh,c
  8309  0020B6  D003               	bra	u1397
  8310  0020B8  0008               	tblrd		*
  8311  0020BA  50F5               	movf	tablat,w,c
  8312  0020BC  D005               	bra	u1390
  8313  0020BE                     u1397:
  8314  0020BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8315  0020C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  8316  0020C6  50EF               	movf	indf0,w,c
  8317  0020C8                     u1390:
  8318  0020C8  EC93  F011         	call	_lcd_putc
  8319  0020CC  4A32               	infsnz	lcd_putrs@ptr,f,c
  8320  0020CE  2A33               	incf	lcd_putrs@ptr+1,f,c
  8321  0020D0  D000               	goto	l2775
  8322  0020D2                     l2775:
  8323  0020D2  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  8324  0020D6  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  8325  0020DA  6AF8               	clrf	tblptru,c
  8326  0020DC  0E0E               	movlw	(high __ramtop+-1)
  8327  0020DE  64F7               	cpfsgt	tblptrh,c
  8328  0020E0  D003               	bra	u1407
  8329  0020E2  0008               	tblrd		*
  8330  0020E4  50F5               	movf	tablat,w,c
  8331  0020E6  D005               	bra	u1400
  8332  0020E8                     u1407:
  8333  0020E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8334  0020EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8335  0020F0  50EF               	movf	indf0,w,c
  8336  0020F2                     u1400:
  8337  0020F2  0900               	iorlw	0
  8338  0020F4  A4D8               	btfss	status,2,c
  8339  0020F6  D7D8               	goto	l2771
  8340  0020F8  0012               	return		;funcret
  8341  0020FA                     __end_of_lcd_putrs:
  8342                           	opt stack 0
  8343                           tblptru	equ	0xFF8
  8344                           tblptrh	equ	0xFF7
  8345                           tblptrl	equ	0xFF6
  8346                           tablat	equ	0xFF5
  8347                           prodh	equ	0xFF4
  8348                           prodl	equ	0xFF3
  8349                           intcon	equ	0xFF2
  8350                           indf0	equ	0xFEF
  8351                           postinc0	equ	0xFEE
  8352                           fsr0h	equ	0xFEA
  8353                           fsr0l	equ	0xFE9
  8354                           wreg	equ	0xFE8
  8355                           indf1	equ	0xFE7
  8356                           postdec1	equ	0xFE5
  8357                           fsr1h	equ	0xFE2
  8358                           fsr1l	equ	0xFE1
  8359                           indf2	equ	0xFDF
  8360                           postinc2	equ	0xFDE
  8361                           postdec2	equ	0xFDD
  8362                           fsr2h	equ	0xFDA
  8363                           fsr2l	equ	0xFD9
  8364                           status	equ	0xFD8
  8365                           
  8366 ;; *************** function _lcd_putc *****************
  8367 ;; Defined at:
  8368 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  c               1    wreg     unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  c               1    7[COMRAM] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;		None               void
  8375 ;; Registers used:
  8376 ;;		wreg, status,2, status,0, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8385 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8386 ;;Total ram usage:        1 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:    3
  8389 ;; This function calls:
  8390 ;;		_lcd_gotoxy
  8391 ;;		_lcd_send_byte
  8392 ;; This function is called by:
  8393 ;;		_lcd_putrs
  8394 ;;		_lcd_puts
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text60
  8399  002326                     __ptext60:
  8400                           	opt stack 0
  8401  002326                     _lcd_putc:
  8402                           	opt stack 24
  8403                           
  8404                           ;incstack = 0
  8405                           ;lcd_putc@c stored from wreg
  8406  002326  6E31               	movwf	lcd_putc@c,c
  8407                           
  8408                           ;unmc_lcd_216.c: 173: switch(c){
  8409  002328  D018               	goto	l2767
  8410  00232A                     l2757:
  8411                           
  8412                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  8413  00232A  0E01               	movlw	1
  8414  00232C  6E2C               	movwf	lcd_send_byte@n,c
  8415  00232E  0E00               	movlw	0
  8416  002330  ECC1  F013         	call	_lcd_send_byte
  8417                           
  8418                           ;unmc_lcd_216.c: 176: break;
  8419  002334  0012               	return	
  8420  002336                     l2759:
  8421                           
  8422                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  8423  002336  0E02               	movlw	2
  8424  002338  6E2E               	movwf	lcd_gotoxy@y,c
  8425  00233A  0E01               	movlw	1
  8426  00233C  EC70  F014         	call	_lcd_gotoxy
  8427                           
  8428                           ;unmc_lcd_216.c: 179: break;
  8429  002340  0012               	return	
  8430  002342                     l2761:
  8431                           
  8432                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  8433  002342  0E10               	movlw	16
  8434  002344  6E2C               	movwf	lcd_send_byte@n,c
  8435  002346  0E00               	movlw	0
  8436  002348  ECC1  F013         	call	_lcd_send_byte
  8437                           
  8438                           ;unmc_lcd_216.c: 182: break;
  8439  00234C  0012               	return	
  8440  00234E                     l2763:
  8441                           
  8442                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  8443  00234E  C031  F02C         	movff	lcd_putc@c,lcd_send_byte@n
  8444  002352  0E01               	movlw	1
  8445  002354  ECC1  F013         	call	_lcd_send_byte
  8446                           
  8447                           ;unmc_lcd_216.c: 186: }
  8448                           
  8449                           ;unmc_lcd_216.c: 185: break;
  8450  002358  0012               	return	
  8451  00235A                     l2767:
  8452  00235A  5031               	movf	lcd_putc@c,w,c
  8453                           
  8454                           ; Switch size 1, requested type "space"
  8455                           ; Number of cases is 3, Range of values is 8 to 12
  8456                           ; switch strategies available:
  8457                           ; Name         Instructions Cycles
  8458                           ; simple_byte           10     6 (average)
  8459                           ;	Chosen strategy is simple_byte
  8460  00235C  0A08               	xorlw	8	; case 8
  8461  00235E  B4D8               	btfsc	status,2,c
  8462  002360  D7F0               	goto	l2761
  8463  002362  0A02               	xorlw	2	; case 10
  8464  002364  B4D8               	btfsc	status,2,c
  8465  002366  D7E7               	goto	l2759
  8466  002368  0A06               	xorlw	6	; case 12
  8467  00236A  B4D8               	btfsc	status,2,c
  8468  00236C  D7DE               	goto	l2757
  8469  00236E  D7EF               	goto	l2763
  8470  002370  0012               	return		;funcret
  8471  002372                     __end_of_lcd_putc:
  8472                           	opt stack 0
  8473                           tblptru	equ	0xFF8
  8474                           tblptrh	equ	0xFF7
  8475                           tblptrl	equ	0xFF6
  8476                           tablat	equ	0xFF5
  8477                           prodh	equ	0xFF4
  8478                           prodl	equ	0xFF3
  8479                           intcon	equ	0xFF2
  8480                           indf0	equ	0xFEF
  8481                           postinc0	equ	0xFEE
  8482                           fsr0h	equ	0xFEA
  8483                           fsr0l	equ	0xFE9
  8484                           wreg	equ	0xFE8
  8485                           indf1	equ	0xFE7
  8486                           postdec1	equ	0xFE5
  8487                           fsr1h	equ	0xFE2
  8488                           fsr1l	equ	0xFE1
  8489                           indf2	equ	0xFDF
  8490                           postinc2	equ	0xFDE
  8491                           postdec2	equ	0xFDD
  8492                           fsr2h	equ	0xFDA
  8493                           fsr2l	equ	0xFD9
  8494                           status	equ	0xFD8
  8495                           
  8496 ;; *************** function _lcd_gotoxy *****************
  8497 ;; Defined at:
  8498 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  x               1    wreg     unsigned char 
  8501 ;;  y               1    4[COMRAM] unsigned char 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  x               1    5[COMRAM] unsigned char 
  8504 ;;  address         1    6[COMRAM] unsigned char 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;		None               void
  8507 ;; Registers used:
  8508 ;;		wreg, status,2, status,0, cstack
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8514 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8517 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8518 ;;Total ram usage:        3 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:    2
  8521 ;; This function calls:
  8522 ;;		_lcd_send_byte
  8523 ;; This function is called by:
  8524 ;;		_lcd_write
  8525 ;;		_activity_pin
  8526 ;;		_activity_submenu_pin_set
  8527 ;;		_lcd_putc
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text61
  8532  0028E0                     __ptext61:
  8533                           	opt stack 0
  8534  0028E0                     _lcd_gotoxy:
  8535                           	opt stack 24
  8536                           
  8537                           ;incstack = 0
  8538                           ;lcd_gotoxy@x stored from wreg
  8539  0028E0  6E2F               	movwf	lcd_gotoxy@x,c
  8540                           
  8541                           ;unmc_lcd_216.c: 159: int8 address;
  8542                           ;unmc_lcd_216.c: 161: if(y != 1)
  8543  0028E2  042E               	decf	lcd_gotoxy@y,w,c
  8544  0028E4  B4D8               	btfsc	status,2,c
  8545  0028E6  D002               	goto	l2749
  8546                           
  8547                           ;unmc_lcd_216.c: 162: address = 0x40;
  8548  0028E8  0E40               	movlw	64
  8549  0028EA  D001               	goto	L4
  8550  0028EC                     l2749:
  8551                           
  8552                           ;unmc_lcd_216.c: 163: else
  8553                           ;unmc_lcd_216.c: 164: address=0;
  8554  0028EC  0E00               	movlw	0
  8555  0028EE                     L4:
  8556  0028EE  6E30               	movwf	lcd_gotoxy@address,c
  8557  0028F0  D000               	goto	l2751
  8558  0028F2                     l2751:
  8559                           
  8560                           ;unmc_lcd_216.c: 166: address += x-1;
  8561  0028F2  042F               	decf	lcd_gotoxy@x,w,c
  8562  0028F4  2630               	addwf	lcd_gotoxy@address,f,c
  8563                           
  8564                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  8565  0028F6  5030               	movf	lcd_gotoxy@address,w,c
  8566  0028F8  0980               	iorlw	128
  8567  0028FA  6E2C               	movwf	lcd_send_byte@n,c
  8568  0028FC  0E00               	movlw	0
  8569  0028FE  ECC1  F013         	call	_lcd_send_byte
  8570  002902  0012               	return		;funcret
  8571  002904                     __end_of_lcd_gotoxy:
  8572                           	opt stack 0
  8573                           tblptru	equ	0xFF8
  8574                           tblptrh	equ	0xFF7
  8575                           tblptrl	equ	0xFF6
  8576                           tablat	equ	0xFF5
  8577                           prodh	equ	0xFF4
  8578                           prodl	equ	0xFF3
  8579                           intcon	equ	0xFF2
  8580                           indf0	equ	0xFEF
  8581                           postinc0	equ	0xFEE
  8582                           fsr0h	equ	0xFEA
  8583                           fsr0l	equ	0xFE9
  8584                           wreg	equ	0xFE8
  8585                           indf1	equ	0xFE7
  8586                           postdec1	equ	0xFE5
  8587                           fsr1h	equ	0xFE2
  8588                           fsr1l	equ	0xFE1
  8589                           indf2	equ	0xFDF
  8590                           postinc2	equ	0xFDE
  8591                           postdec2	equ	0xFDD
  8592                           fsr2h	equ	0xFDA
  8593                           fsr2l	equ	0xFD9
  8594                           status	equ	0xFD8
  8595                           
  8596 ;; *************** function _lcd_init *****************
  8597 ;; Defined at:
  8598 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;  i               1    4[COMRAM] unsigned char 
  8603 ;; Return value:  Size  Location     Type
  8604 ;;		None               void
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;Total ram usage:        1 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    2
  8619 ;; This function calls:
  8620 ;;		_Delay1KTCYx
  8621 ;;		_lcd_send_byte
  8622 ;;		_lcd_send_nibble
  8623 ;; This function is called by:
  8624 ;;		_activity_home
  8625 ;;		_activity_pin
  8626 ;;		_activity_menu
  8627 ;;		_activity_submenu_clock
  8628 ;;		_activity_submenu_activation
  8629 ;;		_activity_submenu_siren
  8630 ;;		_activity_submenu_siren_volume
  8631 ;;		_activity_submenu_siren_tone
  8632 ;;		_activity_submenu_pin
  8633 ;;		_activity_submenu_pin_set
  8634 ;;		_setup
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text62
  8639  001B32                     __ptext62:
  8640                           	opt stack 0
  8641  001B32                     _lcd_init:
  8642                           	opt stack 27
  8643                           
  8644                           ;unmc_lcd_216.c: 120: int8 i;
  8645                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  8646                           
  8647                           ;incstack = 0
  8648  001B32  9693               	bcf	3987,3,c	;volatile
  8649                           
  8650                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  8651  001B34  9493               	bcf	3987,2,c	;volatile
  8652                           
  8653                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  8654  001B36  968A               	bcf	3978,3,c	;volatile
  8655                           
  8656                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  8657  001B38  948A               	bcf	3978,2,c	;volatile
  8658                           
  8659                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  8660  001B3A  9893               	bcf	3987,4,c	;volatile
  8661                           
  8662                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  8663  001B3C  9A93               	bcf	3987,5,c	;volatile
  8664                           
  8665                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  8666  001B3E  9C93               	bcf	3987,6,c	;volatile
  8667                           
  8668                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  8669  001B40  9E93               	bcf	3987,7,c	;volatile
  8670                           
  8671                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  8672  001B42  0E0A               	movlw	10
  8673  001B44  ECE8  F014         	call	_Delay1KTCYx
  8674                           
  8675                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  8676  001B48  0E0A               	movlw	10
  8677  001B4A  ECE8  F014         	call	_Delay1KTCYx
  8678                           
  8679                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  8680  001B4E  0E0A               	movlw	10
  8681  001B50  ECE8  F014         	call	_Delay1KTCYx
  8682                           
  8683                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  8684  001B54  0E00               	movlw	0
  8685  001B56  6E2E               	movwf	lcd_init@i,c
  8686  001B58                     l2791:
  8687  001B58  0E02               	movlw	2
  8688  001B5A  642E               	cpfsgt	lcd_init@i,c
  8689  001B5C  D001               	goto	l2795
  8690  001B5E  D008               	goto	l2801
  8691  001B60                     l2795:
  8692                           
  8693                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  8694  001B60  0E03               	movlw	3
  8695  001B62  EC17  F00E         	call	_lcd_send_nibble
  8696                           
  8697                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  8698  001B66  0E0A               	movlw	10
  8699  001B68  ECE8  F014         	call	_Delay1KTCYx
  8700  001B6C  2A2E               	incf	lcd_init@i,f,c
  8701  001B6E  D7F4               	goto	l2791
  8702  001B70                     l2801:
  8703                           
  8704                           ;unmc_lcd_216.c: 146: }
  8705                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  8706  001B70  0E02               	movlw	2
  8707  001B72  EC17  F00E         	call	_lcd_send_nibble
  8708                           
  8709                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  8710  001B76  0E00               	movlw	0
  8711  001B78  6E2E               	movwf	lcd_init@i,c
  8712  001B7A  0E03               	movlw	3
  8713  001B7C  642E               	cpfsgt	lcd_init@i,c
  8714  001B7E  D002               	goto	l2809
  8715  001B80  0012               	return	
  8716  001B82  0012               	return	
  8717  001B84                     l2809:
  8718                           
  8719                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  8720  001B84  502E               	movf	lcd_init@i,w,c
  8721  001B86  0D01               	mullw	1
  8722  001B88  0E0B               	movlw	low _LCD_INIT_STRING
  8723  001B8A  24F3               	addwf	prodl,w,c
  8724  001B8C  6EF6               	movwf	tblptrl,c
  8725  001B8E  0E0F               	movlw	high _LCD_INIT_STRING
  8726  001B90  20F4               	addwfc	prodh,w,c
  8727  001B92  6EF7               	movwf	tblptrh,c
  8728  001B94                     	if	0	;There are less than 3 active tblptr bytes
  8729  001B94                     	endif
  8730  001B94  0008               	tblrd		*
  8731  001B96  CFF5 F02C          	movff	tablat,lcd_send_byte@n
  8732  001B9A  0E00               	movlw	0
  8733  001B9C  ECC1  F013         	call	_lcd_send_byte
  8734                           
  8735                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  8736  001BA0  0E0A               	movlw	10
  8737  001BA2  ECE8  F014         	call	_Delay1KTCYx
  8738  001BA6  2A2E               	incf	lcd_init@i,f,c
  8739  001BA8  0E03               	movlw	3
  8740  001BAA  642E               	cpfsgt	lcd_init@i,c
  8741  001BAC  D7EB               	goto	l2809
  8742  001BAE  0012               	return	
  8743  001BB0  0012               	return		;funcret
  8744  001BB2                     __end_of_lcd_init:
  8745                           	opt stack 0
  8746                           tblptru	equ	0xFF8
  8747                           tblptrh	equ	0xFF7
  8748                           tblptrl	equ	0xFF6
  8749                           tablat	equ	0xFF5
  8750                           prodh	equ	0xFF4
  8751                           prodl	equ	0xFF3
  8752                           intcon	equ	0xFF2
  8753                           indf0	equ	0xFEF
  8754                           postinc0	equ	0xFEE
  8755                           fsr0h	equ	0xFEA
  8756                           fsr0l	equ	0xFE9
  8757                           wreg	equ	0xFE8
  8758                           indf1	equ	0xFE7
  8759                           postdec1	equ	0xFE5
  8760                           fsr1h	equ	0xFE2
  8761                           fsr1l	equ	0xFE1
  8762                           indf2	equ	0xFDF
  8763                           postinc2	equ	0xFDE
  8764                           postdec2	equ	0xFDD
  8765                           fsr2h	equ	0xFDA
  8766                           fsr2l	equ	0xFD9
  8767                           status	equ	0xFD8
  8768                           
  8769 ;; *************** function _lcd_send_byte *****************
  8770 ;; Defined at:
  8771 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;  address         1    wreg     unsigned char 
  8774 ;;  n               1    2[COMRAM] unsigned char 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  address         1    3[COMRAM] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;		None               void
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8786 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8790 ;;Total ram usage:        2 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    1
  8793 ;; This function calls:
  8794 ;;		_Delay100TCYx
  8795 ;;		_lcd_send_nibble
  8796 ;; This function is called by:
  8797 ;;		_lcd_init
  8798 ;;		_lcd_gotoxy
  8799 ;;		_lcd_putc
  8800 ;;		_lcd_comand
  8801 ;;		_lcd_setcursor_vb
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text63
  8806  002782                     __ptext63:
  8807                           	opt stack 0
  8808  002782                     _lcd_send_byte:
  8809                           	opt stack 27
  8810                           
  8811                           ;incstack = 0
  8812                           ;lcd_send_byte@address stored from wreg
  8813  002782  6E2D               	movwf	lcd_send_byte@address,c
  8814                           
  8815                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  8816  002784  968A               	bcf	3978,3,c	;volatile
  8817                           
  8818                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  8819  002786  0E02               	movlw	2
  8820  002788  ECDF  F014         	call	_Delay100TCYx
  8821                           
  8822                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  8823  00278C  9893               	bcf	3987,4,c	;volatile
  8824                           
  8825                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  8826  00278E  9A93               	bcf	3987,5,c	;volatile
  8827                           
  8828                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  8829  002790  9C93               	bcf	3987,6,c	;volatile
  8830                           
  8831                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  8832  002792  9E93               	bcf	3987,7,c	;volatile
  8833                           
  8834                           ;unmc_lcd_216.c: 101: if(address)
  8835  002794  502D               	movf	lcd_send_byte@address,w,c
  8836  002796  B4D8               	btfsc	status,2,c
  8837  002798  D002               	goto	l468
  8838                           
  8839                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  8840  00279A  868A               	bsf	3978,3,c	;volatile
  8841  00279C  D001               	goto	l469
  8842  00279E                     l468:
  8843                           
  8844                           ;unmc_lcd_216.c: 103: else
  8845                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  8846  00279E  968A               	bcf	3978,3,c	;volatile
  8847  0027A0                     l469:
  8848                           
  8849                           ;unmc_lcd_216.c: 106: __nop();
  8850  0027A0  F000               	nop	
  8851                           
  8852                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  8853  0027A2  382C               	swapf	lcd_send_byte@n,w,c
  8854  0027A4  0B0F               	andlw	15
  8855  0027A6  EC17  F00E         	call	_lcd_send_nibble
  8856                           
  8857                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  8858  0027AA  502C               	movf	lcd_send_byte@n,w,c
  8859  0027AC  0B0F               	andlw	15
  8860  0027AE  EC17  F00E         	call	_lcd_send_nibble
  8861  0027B2  0012               	return		;funcret
  8862  0027B4                     __end_of_lcd_send_byte:
  8863                           	opt stack 0
  8864                           tblptru	equ	0xFF8
  8865                           tblptrh	equ	0xFF7
  8866                           tblptrl	equ	0xFF6
  8867                           tablat	equ	0xFF5
  8868                           prodh	equ	0xFF4
  8869                           prodl	equ	0xFF3
  8870                           intcon	equ	0xFF2
  8871                           indf0	equ	0xFEF
  8872                           postinc0	equ	0xFEE
  8873                           fsr0h	equ	0xFEA
  8874                           fsr0l	equ	0xFE9
  8875                           wreg	equ	0xFE8
  8876                           indf1	equ	0xFE7
  8877                           postdec1	equ	0xFE5
  8878                           fsr1h	equ	0xFE2
  8879                           fsr1l	equ	0xFE1
  8880                           indf2	equ	0xFDF
  8881                           postinc2	equ	0xFDE
  8882                           postdec2	equ	0xFDD
  8883                           fsr2h	equ	0xFDA
  8884                           fsr2l	equ	0xFD9
  8885                           status	equ	0xFD8
  8886                           
  8887 ;; *************** function _lcd_send_nibble *****************
  8888 ;; Defined at:
  8889 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  nibble          1    wreg     unsigned char 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  nibble          1    1[COMRAM] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;		None               void
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8907 ;;Total ram usage:        2 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_lcd_send_byte
  8913 ;;		_lcd_init
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text64
  8918  001C2E                     __ptext64:
  8919                           	opt stack 0
  8920  001C2E                     _lcd_send_nibble:
  8921                           	opt stack 28
  8922                           
  8923                           ;incstack = 0
  8924                           ;lcd_send_nibble@nibble stored from wreg
  8925  001C2E  6E2B               	movwf	lcd_send_nibble@nibble,c
  8926                           
  8927                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  8928  001C30  A02B               	btfss	lcd_send_nibble@nibble,0,c
  8929  001C32  D003               	goto	u1290
  8930  001C34  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8931  001C36  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  8932  001C38  D001               	goto	u1308
  8933  001C3A                     u1290:
  8934  001C3A  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8935  001C3C                     u1308:
  8936  001C3C  3A2A               	swapf	??_lcd_send_nibble,f,c
  8937  001C3E  508A               	movf	3978,w,c	;volatile
  8938  001C40  182A               	xorwf	??_lcd_send_nibble,w,c
  8939  001C42  0BEF               	andlw	-17
  8940  001C44  182A               	xorwf	??_lcd_send_nibble,w,c
  8941  001C46  6E8A               	movwf	3978,c	;volatile
  8942                           
  8943                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  8944  001C48  A22B               	btfss	lcd_send_nibble@nibble,1,c
  8945  001C4A  D003               	goto	u1310
  8946  001C4C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8947  001C4E  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  8948  001C50  D001               	goto	u1328
  8949  001C52                     u1310:
  8950  001C52  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8951  001C54                     u1328:
  8952  001C54  3A2A               	swapf	??_lcd_send_nibble,f,c
  8953  001C56  462A               	rlncf	??_lcd_send_nibble,f,c
  8954  001C58  508A               	movf	3978,w,c	;volatile
  8955  001C5A  182A               	xorwf	??_lcd_send_nibble,w,c
  8956  001C5C  0BDF               	andlw	-33
  8957  001C5E  182A               	xorwf	??_lcd_send_nibble,w,c
  8958  001C60  6E8A               	movwf	3978,c	;volatile
  8959                           
  8960                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  8961  001C62  A42B               	btfss	lcd_send_nibble@nibble,2,c
  8962  001C64  D003               	goto	u1330
  8963  001C66  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8964  001C68  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  8965  001C6A  D001               	goto	u1348
  8966  001C6C                     u1330:
  8967  001C6C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8968  001C6E                     u1348:
  8969  001C6E  3A2A               	swapf	??_lcd_send_nibble,f,c
  8970  001C70  462A               	rlncf	??_lcd_send_nibble,f,c
  8971  001C72  462A               	rlncf	??_lcd_send_nibble,f,c
  8972  001C74  508A               	movf	3978,w,c	;volatile
  8973  001C76  182A               	xorwf	??_lcd_send_nibble,w,c
  8974  001C78  0BBF               	andlw	-65
  8975  001C7A  182A               	xorwf	??_lcd_send_nibble,w,c
  8976  001C7C  6E8A               	movwf	3978,c	;volatile
  8977                           
  8978                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  8979  001C7E  A62B               	btfss	lcd_send_nibble@nibble,3,c
  8980  001C80  D003               	goto	u1350
  8981  001C82  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8982  001C84  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  8983  001C86  D001               	goto	u1368
  8984  001C88                     u1350:
  8985  001C88  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8986  001C8A                     u1368:
  8987  001C8A  322A               	rrcf	??_lcd_send_nibble,f,c
  8988  001C8C  322A               	rrcf	??_lcd_send_nibble,f,c
  8989  001C8E  508A               	movf	3978,w,c	;volatile
  8990  001C90  182A               	xorwf	??_lcd_send_nibble,w,c
  8991  001C92  0B7F               	andlw	-129
  8992  001C94  182A               	xorwf	??_lcd_send_nibble,w,c
  8993  001C96  6E8A               	movwf	3978,c	;volatile
  8994                           
  8995                           ;unmc_lcd_216.c: 32: __nop();
  8996  001C98  F000               	nop	
  8997                           
  8998                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  8999  001C9A  848A               	bsf	3978,2,c	;volatile
  9000                           
  9001                           ;unmc_lcd_216.c: 34: __nop();__nop();
  9002  001C9C  F000               	nop	
  9003  001C9E  F000               	nop	
  9004                           
  9005                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  9006  001CA0  948A               	bcf	3978,2,c	;volatile
  9007  001CA2  0012               	return		;funcret
  9008  001CA4                     __end_of_lcd_send_nibble:
  9009                           	opt stack 0
  9010                           tblptru	equ	0xFF8
  9011                           tblptrh	equ	0xFF7
  9012                           tblptrl	equ	0xFF6
  9013                           tablat	equ	0xFF5
  9014                           prodh	equ	0xFF4
  9015                           prodl	equ	0xFF3
  9016                           intcon	equ	0xFF2
  9017                           indf0	equ	0xFEF
  9018                           postinc0	equ	0xFEE
  9019                           fsr0h	equ	0xFEA
  9020                           fsr0l	equ	0xFE9
  9021                           wreg	equ	0xFE8
  9022                           indf1	equ	0xFE7
  9023                           postdec1	equ	0xFE5
  9024                           fsr1h	equ	0xFE2
  9025                           fsr1l	equ	0xFE1
  9026                           indf2	equ	0xFDF
  9027                           postinc2	equ	0xFDE
  9028                           postdec2	equ	0xFDD
  9029                           fsr2h	equ	0xFDA
  9030                           fsr2l	equ	0xFD9
  9031                           status	equ	0xFD8
  9032                           
  9033 ;; *************** function _Delay100TCYx *****************
  9034 ;; Defined at:
  9035 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  unit            1    wreg     unsigned char 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  unit            1    0[COMRAM] unsigned char 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;		None               void
  9042 ;; Registers used:
  9043 ;;		wreg
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9053 ;;Total ram usage:        1 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; This function calls:
  9056 ;;		Nothing
  9057 ;; This function is called by:
  9058 ;;		_lcd_send_byte
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           	psect	text65
  9063  0029BE                     __ptext65:
  9064                           	opt stack 0
  9065  0029BE                     _Delay100TCYx:
  9066                           	opt stack 27
  9067                           
  9068                           ;incstack = 0
  9069                           ;Delay100TCYx@unit stored from wreg
  9070  0029BE  6E2A               	movwf	Delay100TCYx@unit,c
  9071  0029C0  0E21               	movlw	33
  9072  0029C2                     u2587:
  9073  0029C2  2EE8               	decfsz	wreg,f,c
  9074  0029C4  D7FE               	goto	u2587
  9075  0029C6  F000               	nop	
  9076  0029C8  2E2A               	decfsz	Delay100TCYx@unit,f,c
  9077  0029CA  D7FA               	goto	l2723
  9078  0029CC  0012               	return	
  9079  0029CE  0012               	return		;funcret
  9080  0029D0                     __end_of_Delay100TCYx:
  9081                           	opt stack 0
  9082                           tblptru	equ	0xFF8
  9083                           tblptrh	equ	0xFF7
  9084                           tblptrl	equ	0xFF6
  9085                           tablat	equ	0xFF5
  9086                           prodh	equ	0xFF4
  9087                           prodl	equ	0xFF3
  9088                           intcon	equ	0xFF2
  9089                           indf0	equ	0xFEF
  9090                           postinc0	equ	0xFEE
  9091                           fsr0h	equ	0xFEA
  9092                           fsr0l	equ	0xFE9
  9093                           wreg	equ	0xFE8
  9094                           indf1	equ	0xFE7
  9095                           postdec1	equ	0xFE5
  9096                           fsr1h	equ	0xFE2
  9097                           fsr1l	equ	0xFE1
  9098                           indf2	equ	0xFDF
  9099                           postinc2	equ	0xFDE
  9100                           postdec2	equ	0xFDD
  9101                           fsr2h	equ	0xFDA
  9102                           fsr2l	equ	0xFD9
  9103                           status	equ	0xFD8
  9104                           
  9105 ;; *************** function _Delay1KTCYx *****************
  9106 ;; Defined at:
  9107 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  unit            1    wreg     unsigned char 
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;  unit            1    0[COMRAM] unsigned char 
  9112 ;; Return value:  Size  Location     Type
  9113 ;;		None               void
  9114 ;; Registers used:
  9115 ;;		wreg
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9125 ;;Total ram usage:        1 bytes
  9126 ;; Hardware stack levels used:    1
  9127 ;; This function calls:
  9128 ;;		Nothing
  9129 ;; This function is called by:
  9130 ;;		_lcd_init
  9131 ;;		_DelayPORXLCD
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           	psect	text66
  9136  0029D0                     __ptext66:
  9137                           	opt stack 0
  9138  0029D0                     _Delay1KTCYx:
  9139                           	opt stack 28
  9140                           
  9141                           ;incstack = 0
  9142                           ;Delay1KTCYx@unit stored from wreg
  9143  0029D0  6E2A               	movwf	Delay1KTCYx@unit,c
  9144  0029D2  0EFA               	movlw	250
  9145  0029D4                     u2597:
  9146  0029D4  F000               	nop	
  9147  0029D6  2EE8               	decfsz	wreg,f,c
  9148  0029D8  D7FD               	goto	u2597
  9149  0029DA  2E2A               	decfsz	Delay1KTCYx@unit,f,c
  9150  0029DC  D7FA               	goto	l2777
  9151  0029DE  0012               	return	
  9152  0029E0  0012               	return		;funcret
  9153  0029E2                     __end_of_Delay1KTCYx:
  9154                           	opt stack 0
  9155                           tblptru	equ	0xFF8
  9156                           tblptrh	equ	0xFF7
  9157                           tblptrl	equ	0xFF6
  9158                           tablat	equ	0xFF5
  9159                           prodh	equ	0xFF4
  9160                           prodl	equ	0xFF3
  9161                           intcon	equ	0xFF2
  9162                           indf0	equ	0xFEF
  9163                           postinc0	equ	0xFEE
  9164                           fsr0h	equ	0xFEA
  9165                           fsr0l	equ	0xFE9
  9166                           wreg	equ	0xFE8
  9167                           indf1	equ	0xFE7
  9168                           postdec1	equ	0xFE5
  9169                           fsr1h	equ	0xFE2
  9170                           fsr1l	equ	0xFE1
  9171                           indf2	equ	0xFDF
  9172                           postinc2	equ	0xFDE
  9173                           postdec2	equ	0xFDD
  9174                           fsr2h	equ	0xFDA
  9175                           fsr2l	equ	0xFD9
  9176                           status	equ	0xFD8
  9177                           
  9178 ;; *************** function _Read_RTC *****************
  9179 ;; Defined at:
  9180 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;		None
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;		None
  9185 ;; Return value:  Size  Location     Type
  9186 ;;		None               void
  9187 ;; Registers used:
  9188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9198 ;;Total ram usage:        0 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:    1
  9201 ;; This function calls:
  9202 ;;		_RtccReadDate
  9203 ;;		_RtccReadTime
  9204 ;; This function is called by:
  9205 ;;		_main
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text67
  9210  001758                     __ptext67:
  9211                           	opt stack 0
  9212  001758                     _Read_RTC:
  9213                           	opt stack 29
  9214                           
  9215                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  9216                           
  9217                           ;incstack = 0
  9218  001758  0E26               	movlw	low _RtccTime
  9219  00175A  6E2A               	movwf	RtccReadTime@pTm,c
  9220  00175C  0E00               	movlw	high _RtccTime
  9221  00175E  6E2B               	movwf	RtccReadTime@pTm+1,c
  9222  001760  EC8A  F00E         	call	_RtccReadTime	;wreg free
  9223                           
  9224                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  9225  001764  5027               	movf	_RtccTime+1,w,c
  9226  001766  0B0F               	andlw	15
  9227  001768  0100               	movlb	0	; () banked
  9228  00176A  6FA4               	movwf	_segundo_u& (0+255),b
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  9232  00176C  3827               	swapf	_RtccTime+1,w,c
  9233  00176E  0B0F               	andlw	15
  9234  001770  0B0F               	andlw	15
  9235  001772  6E5E               	movwf	_segundo_d,c
  9236                           
  9237                           ; BSR set to: 0
  9238                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  9239  001774  5028               	movf	_RtccTime+2,w,c
  9240  001776  0B0F               	andlw	15
  9241  001778  0100               	movlb	0	; () banked
  9242  00177A  6FA3               	movwf	_minuto_u& (0+255),b
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  9246  00177C  3828               	swapf	_RtccTime+2,w,c
  9247  00177E  0B0F               	andlw	15
  9248  001780  0B0F               	andlw	15
  9249  001782  6E5D               	movwf	_minuto_d,c
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  9253  001784  5029               	movf	_RtccTime+3,w,c
  9254  001786  0B0F               	andlw	15
  9255  001788  0100               	movlb	0	; () banked
  9256  00178A  6FA1               	movwf	_hora_u& (0+255),b
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  9260  00178C  3829               	swapf	_RtccTime+3,w,c
  9261  00178E  0B0F               	andlw	15
  9262  001790  0B0F               	andlw	15
  9263  001792  6E5B               	movwf	_hora_d,c
  9264                           
  9265                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  9266  001794  0E22               	movlw	low _RtccDate
  9267  001796  6E2A               	movwf	RtccReadDate@pDt,c
  9268  001798  0E00               	movlw	high _RtccDate
  9269  00179A  6E2B               	movwf	RtccReadDate@pDt+1,c
  9270  00179C  EC11  F00D         	call	_RtccReadDate	;wreg free
  9271                           
  9272                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  9273  0017A0  5023               	movf	_RtccDate+1,w,c
  9274  0017A2  0B0F               	andlw	15
  9275  0017A4  0100               	movlb	0	; () banked
  9276  0017A6  6FA0               	movwf	_fecha_u& (0+255),b
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  9280  0017A8  3823               	swapf	_RtccDate+1,w,c
  9281  0017AA  0B0F               	andlw	15
  9282  0017AC  0B0F               	andlw	15
  9283  0017AE  6E5A               	movwf	_fecha_d,c
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  9287  0017B0  5024               	movf	_RtccDate+2,w,c
  9288  0017B2  0B0F               	andlw	15
  9289  0017B4  0100               	movlb	0	; () banked
  9290  0017B6  6FA2               	movwf	_mes_u& (0+255),b
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  9294  0017B8  3824               	swapf	_RtccDate+2,w,c
  9295  0017BA  0B0F               	andlw	15
  9296  0017BC  0B0F               	andlw	15
  9297  0017BE  6E5C               	movwf	_mes_d,c
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  9301  0017C0  C022  F09F         	movff	_RtccDate,_dia_semana
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  9305  0017C4  5025               	movf	_RtccDate+3,w,c
  9306  0017C6  0B0F               	andlw	15
  9307  0017C8  0100               	movlb	0	; () banked
  9308  0017CA  6F9E               	movwf	_anio_u& (0+255),b
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  9312  0017CC  3825               	swapf	_RtccDate+3,w,c
  9313  0017CE  0B0F               	andlw	15
  9314  0017D0  0B0F               	andlw	15
  9315  0017D2  6E59               	movwf	_anio_d,c
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  9319  0017D4  505E               	movf	_segundo_d,w,c
  9320  0017D6  0D0A               	mullw	10
  9321  0017D8  0100               	movlb	0	; () banked
  9322  0017DA  51A4               	movf	_segundo_u& (0+255),w,b
  9323  0017DC  24F3               	addwf	prodl,w,c
  9324  0017DE  6E1B               	movwf	_segundo,c
  9325  0017E0  0100               	movlb	0	; () banked
  9326  0017E2  0E00               	movlw	0
  9327  0017E4  20F4               	addwfc	prodh,w,c
  9328  0017E6  6E1C               	movwf	_segundo+1,c
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  9332  0017E8  505D               	movf	_minuto_d,w,c
  9333  0017EA  0D0A               	mullw	10
  9334  0017EC  0100               	movlb	0	; () banked
  9335  0017EE  51A3               	movf	_minuto_u& (0+255),w,b
  9336  0017F0  24F3               	addwf	prodl,w,c
  9337  0017F2  6E19               	movwf	_minuto,c
  9338  0017F4  0100               	movlb	0	; () banked
  9339  0017F6  0E00               	movlw	0
  9340  0017F8  20F4               	addwfc	prodh,w,c
  9341  0017FA  6E1A               	movwf	_minuto+1,c
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  9345  0017FC  505B               	movf	_hora_d,w,c
  9346  0017FE  0D0A               	mullw	10
  9347  001800  0100               	movlb	0	; () banked
  9348  001802  51A1               	movf	_hora_u& (0+255),w,b
  9349  001804  24F3               	addwf	prodl,w,c
  9350  001806  6E55               	movwf	_hora,c
  9351  001808  0100               	movlb	0	; () banked
  9352  00180A  0E00               	movlw	0
  9353  00180C  20F4               	addwfc	prodh,w,c
  9354  00180E  6E56               	movwf	_hora+1,c
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  9358  001810  505A               	movf	_fecha_d,w,c
  9359  001812  0D0A               	mullw	10
  9360  001814  0100               	movlb	0	; () banked
  9361  001816  51A0               	movf	_fecha_u& (0+255),w,b
  9362  001818  24F3               	addwf	prodl,w,c
  9363  00181A  6E51               	movwf	_dia,c
  9364  00181C  0100               	movlb	0	; () banked
  9365  00181E  0E00               	movlw	0
  9366  001820  20F4               	addwfc	prodh,w,c
  9367  001822  6E52               	movwf	_dia+1,c
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  9371  001824  C09F  F053         	movff	_dia_semana,_diasem
  9372  001828  6A54               	clrf	_diasem+1,c
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  9376  00182A  505C               	movf	_mes_d,w,c
  9377  00182C  0D0A               	mullw	10
  9378  00182E  0100               	movlb	0	; () banked
  9379  001830  51A2               	movf	_mes_u& (0+255),w,b
  9380  001832  24F3               	addwf	prodl,w,c
  9381  001834  6E57               	movwf	_mes,c
  9382  001836  0100               	movlb	0	; () banked
  9383  001838  0E00               	movlw	0
  9384  00183A  20F4               	addwfc	prodh,w,c
  9385  00183C  6E58               	movwf	_mes+1,c
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  9389  00183E  5059               	movf	_anio_d,w,c
  9390  001840  0D0A               	mullw	10
  9391  001842  0100               	movlb	0	; () banked
  9392  001844  519E               	movf	_anio_u& (0+255),w,b
  9393  001846  24F3               	addwf	prodl,w,c
  9394  001848  6E4F               	movwf	_anio,c
  9395  00184A  0100               	movlb	0	; () banked
  9396  00184C  0E00               	movlw	0
  9397  00184E  20F4               	addwfc	prodh,w,c
  9398  001850  6E50               	movwf	_anio+1,c
  9399                           
  9400                           ; BSR set to: 0
  9401  001852  0012               	return		;funcret
  9402  001854                     __end_of_Read_RTC:
  9403                           	opt stack 0
  9404                           tblptru	equ	0xFF8
  9405                           tblptrh	equ	0xFF7
  9406                           tblptrl	equ	0xFF6
  9407                           tablat	equ	0xFF5
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           intcon	equ	0xFF2
  9411                           indf0	equ	0xFEF
  9412                           postinc0	equ	0xFEE
  9413                           fsr0h	equ	0xFEA
  9414                           fsr0l	equ	0xFE9
  9415                           wreg	equ	0xFE8
  9416                           indf1	equ	0xFE7
  9417                           postdec1	equ	0xFE5
  9418                           fsr1h	equ	0xFE2
  9419                           fsr1l	equ	0xFE1
  9420                           indf2	equ	0xFDF
  9421                           postinc2	equ	0xFDE
  9422                           postdec2	equ	0xFDD
  9423                           fsr2h	equ	0xFDA
  9424                           fsr2l	equ	0xFD9
  9425                           status	equ	0xFD8
  9426                           
  9427 ;; *************** function _RtccReadTime *****************
  9428 ;; Defined at:
  9429 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;  pTm             2    0[COMRAM] PTR struct .
  9432 ;;		 -> RtccTime(4), 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  rTD0            8   10[COMRAM] struct .
  9435 ;;  rTD1            8    2[COMRAM] struct .
  9436 ;; Return value:  Size  Location     Type
  9437 ;;		None               void
  9438 ;; Registers used:
  9439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9446 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9448 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9449 ;;Total ram usage:       18 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_Read_RTC
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	text68
  9459  001D14                     __ptext68:
  9460                           	opt stack 0
  9461  001D14                     _RtccReadTime:
  9462                           	opt stack 29
  9463  001D14  0EFC               	movlw	252
  9464  001D16  010F               	movlb	15	; () banked
  9465  001D18  173F               	andwf	63,f,b	;volatile
  9466                           
  9467                           ; BSR set to: 15
  9468  001D1A  010F               	movlb	15	; () banked
  9469  001D1C  813F               	bsf	63,0,b	;volatile
  9470                           
  9471                           ; BSR set to: 15
  9472  001D1E  CF98 F038          	movff	3992,RtccReadTime@rTD0+4	;volatile
  9473                           
  9474                           ; BSR set to: 15
  9475  001D22  CF99 F039          	movff	3993,RtccReadTime@rTD0+5	;volatile
  9476                           
  9477                           ; BSR set to: 15
  9478  001D26  CF98 F03A          	movff	3992,RtccReadTime@rTD0+6	;volatile
  9479                           
  9480                           ; BSR set to: 15
  9481  001D2A  CF99 F03B          	movff	3993,RtccReadTime@rTD0+7	;volatile
  9482                           
  9483                           ; BSR set to: 15
  9484  001D2E  0EFC               	movlw	252
  9485  001D30  010F               	movlb	15	; () banked
  9486  001D32  173F               	andwf	63,f,b	;volatile
  9487  001D34  010F               	movlb	15	; () banked
  9488  001D36  813F               	bsf	63,0,b	;volatile
  9489                           
  9490                           ; BSR set to: 15
  9491  001D38  CF98 F030          	movff	3992,RtccReadTime@rTD1+4	;volatile
  9492                           
  9493                           ; BSR set to: 15
  9494  001D3C  CF99 F031          	movff	3993,RtccReadTime@rTD1+5	;volatile
  9495                           
  9496                           ; BSR set to: 15
  9497  001D40  CF98 F032          	movff	3992,RtccReadTime@rTD1+6	;volatile
  9498                           
  9499                           ; BSR set to: 15
  9500  001D44  CF99 F033          	movff	3993,RtccReadTime@rTD1+7	;volatile
  9501                           
  9502                           ; BSR set to: 15
  9503  001D48  5032               	movf	RtccReadTime@rTD1+6,w,c
  9504  001D4A  183A               	xorwf	RtccReadTime@rTD0+6,w,c
  9505  001D4C  A4D8               	btfss	status,2,c
  9506  001D4E  D7E2               	goto	l3525
  9507                           
  9508                           ; BSR set to: 15
  9509                           
  9510                           ; BSR set to: 15
  9511  001D50  EE20 F003          	lfsr	2,3
  9512  001D54  502A               	movf	RtccReadTime@pTm,w,c
  9513  001D56  26D9               	addwf	fsr2l,f,c
  9514  001D58  502B               	movf	RtccReadTime@pTm+1,w,c
  9515  001D5A  22DA               	addwfc	fsr2h,f,c
  9516  001D5C  C038  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  9517  001D60  EE20 F002          	lfsr	2,2
  9518  001D64  502A               	movf	RtccReadTime@pTm,w,c
  9519  001D66  26D9               	addwf	fsr2l,f,c
  9520  001D68  502B               	movf	RtccReadTime@pTm+1,w,c
  9521  001D6A  22DA               	addwfc	fsr2h,f,c
  9522  001D6C  C03B  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  9523  001D70  EE20 F001          	lfsr	2,1
  9524  001D74  502A               	movf	RtccReadTime@pTm,w,c
  9525  001D76  26D9               	addwf	fsr2l,f,c
  9526  001D78  502B               	movf	RtccReadTime@pTm+1,w,c
  9527  001D7A  22DA               	addwfc	fsr2h,f,c
  9528  001D7C  C03A  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  9529                           
  9530                           ; BSR set to: 15
  9531  001D80  0012               	return		;funcret
  9532  001D82                     __end_of_RtccReadTime:
  9533                           	opt stack 0
  9534                           tblptru	equ	0xFF8
  9535                           tblptrh	equ	0xFF7
  9536                           tblptrl	equ	0xFF6
  9537                           tablat	equ	0xFF5
  9538                           prodh	equ	0xFF4
  9539                           prodl	equ	0xFF3
  9540                           intcon	equ	0xFF2
  9541                           indf0	equ	0xFEF
  9542                           postinc0	equ	0xFEE
  9543                           fsr0h	equ	0xFEA
  9544                           fsr0l	equ	0xFE9
  9545                           wreg	equ	0xFE8
  9546                           indf1	equ	0xFE7
  9547                           postdec1	equ	0xFE5
  9548                           fsr1h	equ	0xFE2
  9549                           fsr1l	equ	0xFE1
  9550                           indf2	equ	0xFDF
  9551                           postinc2	equ	0xFDE
  9552                           postdec2	equ	0xFDD
  9553                           fsr2h	equ	0xFDA
  9554                           fsr2l	equ	0xFD9
  9555                           status	equ	0xFD8
  9556                           
  9557 ;; *************** function _RtccReadDate *****************
  9558 ;; Defined at:
  9559 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  pDt             2    0[COMRAM] PTR struct .
  9562 ;;		 -> RtccDate(4), 
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;  rTD0            8   10[COMRAM] struct .
  9565 ;;  rTD1            8    2[COMRAM] struct .
  9566 ;; Return value:  Size  Location     Type
  9567 ;;		None               void
  9568 ;; Registers used:
  9569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9576 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9578 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9579 ;;Total ram usage:       18 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_Read_RTC
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text69
  9589  001A22                     __ptext69:
  9590                           	opt stack 0
  9591  001A22                     _RtccReadDate:
  9592                           	opt stack 29
  9593  001A22  0EFC               	movlw	252
  9594  001A24  010F               	movlb	15	; () banked
  9595  001A26  173F               	andwf	63,f,b	;volatile
  9596  001A28  0E03               	movlw	3
  9597  001A2A  010F               	movlb	15	; () banked
  9598  001A2C  133F               	iorwf	63,f,b	;volatile
  9599                           
  9600                           ; BSR set to: 15
  9601  001A2E  CF98 F034          	movff	3992,RtccReadDate@rTD0	;volatile
  9602                           
  9603                           ; BSR set to: 15
  9604  001A32  CF99 F035          	movff	3993,RtccReadDate@rTD0+1	;volatile
  9605                           
  9606                           ; BSR set to: 15
  9607  001A36  CF98 F036          	movff	3992,RtccReadDate@rTD0+2	;volatile
  9608                           
  9609                           ; BSR set to: 15
  9610  001A3A  CF99 F037          	movff	3993,RtccReadDate@rTD0+3	;volatile
  9611                           
  9612                           ; BSR set to: 15
  9613  001A3E  CF98 F038          	movff	3992,RtccReadDate@rTD0+4	;volatile
  9614                           
  9615                           ; BSR set to: 15
  9616  001A42  CF99 F039          	movff	3993,RtccReadDate@rTD0+5	;volatile
  9617  001A46  0EFC               	movlw	252
  9618  001A48  010F               	movlb	15	; () banked
  9619  001A4A  173F               	andwf	63,f,b	;volatile
  9620  001A4C  0E03               	movlw	3
  9621  001A4E  010F               	movlb	15	; () banked
  9622  001A50  133F               	iorwf	63,f,b	;volatile
  9623                           
  9624                           ; BSR set to: 15
  9625  001A52  CF98 F02C          	movff	3992,RtccReadDate@rTD1	;volatile
  9626                           
  9627                           ; BSR set to: 15
  9628  001A56  CF99 F02D          	movff	3993,RtccReadDate@rTD1+1	;volatile
  9629                           
  9630                           ; BSR set to: 15
  9631  001A5A  CF98 F02E          	movff	3992,RtccReadDate@rTD1+2	;volatile
  9632                           
  9633                           ; BSR set to: 15
  9634  001A5E  CF99 F02F          	movff	3993,RtccReadDate@rTD1+3	;volatile
  9635                           
  9636                           ; BSR set to: 15
  9637  001A62  CF98 F030          	movff	3992,RtccReadDate@rTD1+4	;volatile
  9638                           
  9639                           ; BSR set to: 15
  9640  001A66  CF99 F031          	movff	3993,RtccReadDate@rTD1+5	;volatile
  9641  001A6A  502E               	movf	RtccReadDate@rTD1+2,w,c
  9642  001A6C  1836               	xorwf	RtccReadDate@rTD0+2,w,c
  9643  001A6E  A4D8               	btfss	status,2,c
  9644  001A70  D7D8               	goto	l3551
  9645                           
  9646                           ; BSR set to: 15
  9647                           
  9648                           ; BSR set to: 15
  9649  001A72  EE20 F001          	lfsr	2,1
  9650  001A76  502A               	movf	RtccReadDate@pDt,w,c
  9651  001A78  26D9               	addwf	fsr2l,f,c
  9652  001A7A  502B               	movf	RtccReadDate@pDt+1,w,c
  9653  001A7C  22DA               	addwfc	fsr2h,f,c
  9654  001A7E  C036  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  9655  001A82  EE20 F002          	lfsr	2,2
  9656  001A86  502A               	movf	RtccReadDate@pDt,w,c
  9657  001A88  26D9               	addwf	fsr2l,f,c
  9658  001A8A  502B               	movf	RtccReadDate@pDt+1,w,c
  9659  001A8C  22DA               	addwfc	fsr2h,f,c
  9660  001A8E  C037  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  9661                           
  9662                           ; BSR set to: 15
  9663  001A92  C02A  FFD9         	movff	RtccReadDate@pDt,fsr2l
  9664  001A96  C02B  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  9665  001A9A  C039  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  9666                           
  9667                           ; BSR set to: 15
  9668  001A9E  EE20 F003          	lfsr	2,3
  9669  001AA2  502A               	movf	RtccReadDate@pDt,w,c
  9670  001AA4  26D9               	addwf	fsr2l,f,c
  9671  001AA6  502B               	movf	RtccReadDate@pDt+1,w,c
  9672  001AA8  22DA               	addwfc	fsr2h,f,c
  9673  001AAA  C034  FFDF         	movff	RtccReadDate@rTD0,indf2
  9674                           
  9675                           ; BSR set to: 15
  9676  001AAE  0012               	return		;funcret
  9677  001AB0                     __end_of_RtccReadDate:
  9678                           	opt stack 0
  9679                           tblptru	equ	0xFF8
  9680                           tblptrh	equ	0xFF7
  9681                           tblptrl	equ	0xFF6
  9682                           tablat	equ	0xFF5
  9683                           prodh	equ	0xFF4
  9684                           prodl	equ	0xFF3
  9685                           intcon	equ	0xFF2
  9686                           indf0	equ	0xFEF
  9687                           postinc0	equ	0xFEE
  9688                           fsr0h	equ	0xFEA
  9689                           fsr0l	equ	0xFE9
  9690                           wreg	equ	0xFE8
  9691                           indf1	equ	0xFE7
  9692                           postdec1	equ	0xFE5
  9693                           fsr1h	equ	0xFE2
  9694                           fsr1l	equ	0xFE1
  9695                           indf2	equ	0xFDF
  9696                           postinc2	equ	0xFDE
  9697                           postdec2	equ	0xFDD
  9698                           fsr2h	equ	0xFDA
  9699                           fsr2l	equ	0xFD9
  9700                           status	equ	0xFD8
  9701                           tblptru	equ	0xFF8
  9702                           tblptrh	equ	0xFF7
  9703                           tblptrl	equ	0xFF6
  9704                           tablat	equ	0xFF5
  9705                           prodh	equ	0xFF4
  9706                           prodl	equ	0xFF3
  9707                           intcon	equ	0xFF2
  9708                           indf0	equ	0xFEF
  9709                           postinc0	equ	0xFEE
  9710                           fsr0h	equ	0xFEA
  9711                           fsr0l	equ	0xFE9
  9712                           wreg	equ	0xFE8
  9713                           indf1	equ	0xFE7
  9714                           postdec1	equ	0xFE5
  9715                           fsr1h	equ	0xFE2
  9716                           fsr1l	equ	0xFE1
  9717                           indf2	equ	0xFDF
  9718                           postinc2	equ	0xFDE
  9719                           postdec2	equ	0xFDD
  9720                           fsr2h	equ	0xFDA
  9721                           fsr2l	equ	0xFD9
  9722                           status	equ	0xFD8
  9723                           
  9724                           	psect	rparam
  9725  0000                     tblptru	equ	0xFF8
  9726                           tblptrh	equ	0xFF7
  9727                           tblptrl	equ	0xFF6
  9728                           tablat	equ	0xFF5
  9729                           prodh	equ	0xFF4
  9730                           prodl	equ	0xFF3
  9731                           intcon	equ	0xFF2
  9732                           indf0	equ	0xFEF
  9733                           postinc0	equ	0xFEE
  9734                           fsr0h	equ	0xFEA
  9735                           fsr0l	equ	0xFE9
  9736                           wreg	equ	0xFE8
  9737                           indf1	equ	0xFE7
  9738                           postdec1	equ	0xFE5
  9739                           fsr1h	equ	0xFE2
  9740                           fsr1l	equ	0xFE1
  9741                           indf2	equ	0xFDF
  9742                           postinc2	equ	0xFDE
  9743                           postdec2	equ	0xFDD
  9744                           fsr2h	equ	0xFDA
  9745                           fsr2l	equ	0xFD9
  9746                           status	equ	0xFD8


Data Sizes:
    Strings     219
    Constant    14
    Data        10
    BSS         103
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      95
    BANK0           160      0      69
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_40(CODE[5]), STR_38(CODE[1]), STR_14(CODE[1]), pin_input(BANK0[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_48(CODE[7]), STR_47(CODE[7]), 
		 -> STR_46(CODE[7]), STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), 
		 -> STR_42(CODE[15]), STR_41(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_49(CODE[2]), buffer1(BANK0[20]), STR_39(CODE[11]), STR_37(CODE[6]), 
		 -> STR_36(CODE[8]), STR_35(CODE[4]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[5]), STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[8]), 
		 -> STR_28(CODE[5]), STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[8]), STR_22(CODE[5]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[4]), STR_17(CODE[6]), 
		 -> STR_16(CODE[8]), STR_15(CODE[16]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    lcd_write@string	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), STR_39(CODE[11]), STR_37(CODE[6]), STR_36(CODE[8]), 
		 -> STR_35(CODE[4]), STR_34(CODE[7]), STR_33(CODE[7]), STR_32(CODE[5]), 
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[8]), STR_28(CODE[5]), 
		 -> STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[8]), STR_22(CODE[5]), STR_21(CODE[6]), STR_20(CODE[6]), 
		 -> STR_19(CODE[7]), STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[8]), 
		 -> STR_15(CODE[16]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_home_config_refresh
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _activity_menu->_lcd_write
    _button_B->_button_B_menu
    _button_B->_button_B_submenu_activation
    _button_B->_button_B_submenu_pin_config
    _button_B->_button_B_submenu_siren_config
    _button_B->_button_B_submenu_siren_tone
    _button_B->_button_B_submenu_siren_volume
    _activity_submenu_siren_volume->_lcd_write
    _activity_submenu_siren_tone->_lcd_write
    _pin_reset->_strcpy
    _activity_submenu_pin_set->_lcd_write
    _activity_submenu_siren->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_clock->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_action_menu_selector
    _button_A->_action_submenu_selector
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _action_submenu_selector_1->_lcd_write
    _action_submenu_selector_0->_lcd_write
    _action_menu_selector_3->_lcd_write
    _action_menu_selector_2->_lcd_write
    _action_menu_selector_1->_lcd_write
    _action_menu_selector_0->_lcd_write
    _home_volume_refresh->_sprintf
    _home_tone_refresh->_sprintf
    _home_state_refresh->_sprintf
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  448246
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                _home_config_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4358
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                          _pin_reset
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  364250
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    4956
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   49008
                _pin_input_validator
                            _pin_set
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_set                                              0     0      0   12304
                      _activity_home
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  0     0      0   36704
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0       0
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0   11717
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   22586
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   22586
             _action_menu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0  196870
                                             18 COMRAM     2     2      0
                      _button_B_menu
        _button_B_submenu_activation
        _button_B_submenu_pin_config
      _button_B_submenu_siren_config
        _button_B_submenu_siren_tone
      _button_B_submenu_siren_volume
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_volume                        2     2      0   11717
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_tone                          2     2      0   11717
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_config                        2     2      0   45172
                                             16 COMRAM     2     2      0
        _activity_submenu_siren_tone
      _activity_submenu_siren_volume
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_volume                        0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_tone                          0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_pin_config                          2     2      0   26203
                                             16 COMRAM     2     2      0
                      _activity_home
           _activity_submenu_pin_set
                          _pin_reset
 ---------------------------------------------------------------------------------
 (2) _pin_reset                                            0     0      0     587
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin_set                             0     0      0   13899
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_activation                          2     2      0   11717
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_menu                                        2     2      0   90344
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
             _activity_submenu_clock
               _activity_submenu_pin
             _activity_submenu_siren
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren                               0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin                                 0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_clock                               0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_activation                          0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   79113
                                             18 COMRAM     2     2      0
               _action_menu_selector
            _action_submenu_selector
                       _activity_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   13899
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _action_submenu_selector                              2     2      0   21738
                                             16 COMRAM     2     2      0
          _action_submenu_selector_0
          _action_submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _action_submenu_selector_1                            0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _action_submenu_selector_0                            0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _action_menu_selector                                 2     2      0   43476
                                             16 COMRAM     2     2      0
             _action_menu_selector_0
             _action_menu_selector_1
             _action_menu_selector_2
             _action_menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_3                               0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_2                               0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_1                               0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _action_menu_selector_0                               0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _home_config_refresh                                  2     2      0   41427
                                             35 COMRAM     2     2      0
                 _home_state_refresh
                  _home_tone_refresh
                _home_volume_refresh
 ---------------------------------------------------------------------------------
 (2) _home_volume_refresh                                  0     0      0   13809
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_tone_refresh                                    0     0      0   13809
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_state_refresh                                   0     0      0   13809
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   13809
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2940
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0   11717
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _activity_home                                        0     0      0   11717
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6   10869
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1790
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1617
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1     949
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _home_config_refresh
     _home_state_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_tone_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_volume_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _keyboard_control
     _button_A
       _action_menu_selector
         _action_menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _action_submenu_selector
         _action_submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_B
       _button_B_menu
         _activity_submenu_activation
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_clock
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_siren
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_activation
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_pin_config
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin_set
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _pin_reset
           _strcpy
       _button_B_submenu_siren_config
         _activity_submenu_siren_tone
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_siren_volume
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_siren_tone
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_siren_volume
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_C
       _activity_menu
         _action_menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _reset_home_callback
     _button_hash
       _pin_input_validator
         _activity_menu
           _action_menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _pin_set
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _pin_reset
       _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      45       5       43.1%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     25      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4       6        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Sep 17 19:17:22 2016

                ??_action_menu_selector 003A                                       _a 0001  
                                     _b 0009                                       _c 007C  
                                     _i 0013                                       _j 0015  
                                     _k 007E                          ?_lcd_send_byte 002C  
                          ___awdiv@sign 002F                     ___wmul@multiplicand 002C  
                  ?_home_volume_refresh 002A                             lcd_comand@d 002E  
              ??_action_menu_selector_0 003A                ??_action_menu_selector_1 003A  
              ??_action_menu_selector_2 003A                ??_action_menu_selector_3 003A  
                          __CFG_CP0$OFF 000000                         lcd_write@column 0034  
                                   l400 143E                                     l401 143A  
                                   l420 14A0                                     l412 147C  
                                   l404 1450                                     l421 149C  
                                   l413 1478                                     l405 144C  
                                   l432 14DE                                     l424 14BA  
                                   l416 148E                                     l408 146A  
                                   l433 14DA                                     l425 14B6  
                                   l417 148A                                     l409 1466  
                                   l428 14CC                                     l380 13DC  
                                   l437 14EC                                     l429 14C8  
                                   l381 13D8                                     l392 141A  
                                   l384 13EE                                     l376 13CA  
                                   l393 1416                                     l385 13EA  
                                   l377 13C6                                     l547 11BE  
                                   l468 279E                                     l396 142C  
                                   l388 1400                                     l469 27A0  
                                   l397 1428                                     l389 13FC  
                 ??_check_home_callback 003A                                     _dia 0051  
                                   _key 0021                                     _mes 0057  
                                   _pin 0094                         lcd_write@string 0038  
                                   wreg 000FE8                         RtccReadDate@pDt 002A  
                           lcd_gotoxy@x 002F                             lcd_gotoxy@y 002E  
                     ??_button_asterisk 002A                                    l1201 231C  
                                  l3023 2060                                    l1191 209C  
                                  l3007 291C                                    l3111 1740  
                                  l3025 206A                                    l3201 2416  
                                  l3035 2090                                    l3027 2072  
                                  l3051 2310                                    l3043 22E8  
                                  l3131 1568                                    l3115 174C  
                                  l3107 1734                                    l3045 22F2  
                                  l3205 241C                                    l3213 27E6  
                                  l3141 15B6                                    l3047 22FA  
                                  l3311 11C4                                    l3303 1194  
                                  l3215 27EC                                    l3063 168A  
                                  l3305 119C                                    l3321 1240  
                                  l3233 2862                                    l3137 15A2  
                                  l3073 16C8                                    l3251 103E  
                                  l3243 1010                                    l3219 27F2  
                                  l3331 23C8                                    l3147 15D2  
                                  l3317 1218                                    l3245 101E  
                                  l3237 0FF6                                    l3333 23CE  
                                  l3413 26EE                                    l3069 16B4  
                                  l3263 10C0                                    l3255 105C  
                                  l3319 1224                                    l3327 23BC  
                                  l3351 2728                                    l3415 270E  
                                  l3407 26DC                                    l3423 237C  
                                  l3183 1634                                    l3079 16E4  
                                  l2801 1B70                                    l3249 1028  
                                  l3329 23C2                                    l3337 23D4  
                                  l3353 2748                                    l3345 2716  
                                  l3361 2750                                    l3409 26E4  
                                  l3425 2382                                    l2723 29C0  
                                  l3291 115C                                    l3283 1134  
                                  l3275 1104                                    l3267 10C6  
                                  l3603 216A                                    l3195 2404  
                                  l3611 266C                                    l3347 271E  
                                  l3363 2756                                    l3427 2394  
                                  l3187 1640                                    l3179 1628  
                                  l3451 1938                                    l3525 1D14  
                                  l3293 1166                                    l3269 10E8  
                                  l3605 2180                                    l3197 240A  
                                  l3613 2672                                    l3429 239E  
                                  l3453 1942                                    l3445 1922  
                                  l3551 1A22                                    l2751 28F2  
                                  l3287 1138                                    l3279 1110  
                                  l3199 2410                                    l2831 2454  
                                  l3383 27C2                                    l3391 26A2  
                                  l3631 1FFE                                    l3471 1984  
                                  l3463 1968                                    l3455 194A  
                                  l3439 1910                                    l2809 1B84  
                                  l2761 2342                                    l3297 1172  
                                  l2833 245E                                    l3609 2666  
                                  l3617 2678                                    l3369 2760  
                                  l3377 27B6                                    l3393 26AA  
                                  l3633 2004                                    l3625 1FEC  
                                  l2763 234E                                    l2771 20A8  
                                  l3379 27BC                                    l3635 200A  
                                  l3627 1FF2                                    l3467 1974  
                                  l2749 28EC                                    l2757 232A  
                                  l3397 26B4                                    l3629 1FF8  
                                  l2791 1B58                                    l2759 2336  
                                  l2767 235A                                    l2775 20D2  
                                  l3751 1872                                    l3399 26D4  
                                  l3639 2010                                    l2777 29D2  
                                  l3745 1860                                    l3665 28CE  
                                  l3681 1CF6                                    l2795 1B60  
                                  l3587 21BC                                    l3595 2118  
                                  l3763 18B2                                    l3771 18D2  
                                  l3675 1CBA                                    l3843 14F4  
                                  l3589 21D2                                    l3597 212E  
                                  l3757 1892                                    l3749 186C  
                                  l2993 2230                                    l2987 21F2  
                                  l2989 21FC                                    l3889 281E  
       ??_activity_submenu_siren_volume 003A                                    STR_1 0FD6  
                                  STR_2 0FE8                                    STR_3 0FE4  
                                  STR_4 0FE8                                    STR_5 0FE4  
                                  STR_6 0FE8                                    STR_7 0FE4  
  __size_of_button_B_submenu_pin_config 0034                                    STR_8 0FE8  
                                  STR_9 0FE4                                    u1310 1C52  
                                  u1400 20F2                                    u1330 1C6C  
                                  u1308 1C3C                                    u1350 1C88  
                                  u1407 20E8                                    u1328 1C54  
                                  u1290 1C3A                                    u1348 1C6E  
                                  u1460 2486                                    u1390 20C8  
                                  u1368 1C8A                                    u1467 247C  
                                  u1397 20BE                                    u2577 14FA  
                                  u2587 29C2                                    u2597 29D4  
   __end_of_activity_submenu_siren_tone 1E4E             _activity_submenu_siren_tone 1DE8  
                      ?_lcd_send_nibble 002A                                    _anio 004F  
                                  _flag 02F8                                    _main 2814  
                                  _hora 0055                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  indf1 000FE7                                    fsr1l 000FE1  
                                  indf2 000FDF                                    fsr2l 000FD9  
            __size_of_home_tone_refresh 0052                           __CFG_T1DIG$ON 000000  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0000                           __CFG_IESO$OFF 000000  
                      RtccReadDate@rTD0 0034                        RtccReadDate@rTD1 002C  
                  __end_of_activity_pin 22DA           ??_activity_submenu_siren_tone 003A  
                          ___param_bank 000010             ??_action_submenu_selector_0 003A  
           ??_action_submenu_selector_1 003A         __size_of_activity_submenu_clock 0066  
                       RtccReadTime@pTm 002A         __size_of_activity_submenu_siren 0066  
                 ??_home_volume_refresh 004D                             _Delay1KTCYx 29D0  
                         __CFG_PLLDIV$1 000000                                   ?_main 002A  
                       __end_of___awdiv 1990                                   STR_10 0FE8  
                                 STR_11 0FE4                                   STR_12 0FE8  
                                 STR_20 0FAC                                   STR_13 0FE4  
                                 STR_21 0FA6                                   STR_14 0FE5  
                                 STR_30 0FC2                                   STR_22 0FBD  
                                 STR_23 0F58                                   STR_31 0FCC  
                                 STR_15 0F0F                                   STR_32 0FC7  
                                 STR_24 0FDE                                   STR_40 0FB8  
                                 STR_16 0F58                                   STR_25 0FE1  
                                 STR_17 0FAC                                   STR_33 0F60  
                                 STR_41 0F1F                                   STR_18 0FDA  
                                 STR_50 0FD1                                   STR_26 0F9F  
                                 STR_34 0F6E                                   STR_42 0F2E  
                                 STR_35 0FDA                                   STR_51 0FD1  
                                 STR_19 0F98                                   STR_43 0F83  
                                 STR_27 0F48                                   STR_28 0FC7  
                                 STR_44 0F91                                   STR_36 0F50  
                                 STR_29 0F48                                   STR_37 0FB2  
                                 STR_45 0F7C    __size_of_button_B_submenu_siren_tone 003A  
                                 STR_38 0FE5                                   STR_46 0F8A  
                                 STR_47 0F67                                   STR_39 0F3D  
                                 STR_48 0F75                                   STR_49 0FE6  
                 __size_of_Delay100TCYx 0012                         ___awdiv@divisor 002C  
                       __end_of___lwdiv 20A6                         __end_of___lwmod 2326  
                       ___awdiv@counter 002E                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                          ?_button_hash 002A                          __CFG_FCMEN$OFF 000000  
                       __end_of_dpowers 0F0B                                   _mes_d 005C  
                                 _mes_u 00A2                         __end_of_isdigit 2926  
                                 _setup 1BB2                                   _state 001D  
                       __end_of_pin_set 297E   __end_of_button_B_submenu_siren_config 27E4  
__size_of_button_B_submenu_siren_config 0030           _button_B_submenu_siren_config 27B4  
                        __pbitbssCOMRAM 02F8                                   tablat 000FF5  
           __size_of_home_state_refresh 0052                     _reset_home_callback 2A04  
                          lcd_putrs@ptr 0032                                   status 000FD8  
                       __end_of_sprintf 1250   __end_of_button_B_submenu_siren_volume 26DA  
__size_of_button_B_submenu_siren_volume 003A           _button_B_submenu_siren_volume 26A0  
      __end_of_activity_submenu_pin_set 228C                   __end_of_activity_home 2894  
                 __end_of_activity_menu 1B32                            lcd_write@row 0036  
               __CFG_DSWDTOSC$INTOSCREF 000000                         __initialization 2490  
                          _Delay100TCYx 29BE                            __end_of_main 2840  
                       ??_lcd_send_byte 002D                        RtccReadTime@rTD0 0034  
                      RtccReadTime@rTD1 002C                        __end_of_Read_RTC 1854  
               _action_submenu_selector 27E4                    ?_reset_home_callback 002A  
                                ??_main 004F         __size_of_action_menu_selector_0 0042  
       __size_of_action_menu_selector_1 0042         __size_of_action_menu_selector_2 0042  
       __size_of_action_menu_selector_3 0042                           __activetblptr 000002  
                      __end_of_RtccWrOn 29BE               _action_submenu_selector_0 2516  
             _action_submenu_selector_1 24D4                  _activity_submenu_clock 1F1A  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                _activity_submenu_siren 1E4E                                  _EECON2 000FA7  
                                _ANCON0 000F48                                  _ANCON1 000F49  
                      ___awdiv@dividend 002A                                  ?_setup 002A  
                        __CFG_WDTEN$OFF 000000            __size_of_pin_input_validator 002A  
                      RtccWriteDate@pDt 002A                                  _RTCCFG 000F3F  
                        __CFG_WPCFG$OFF 000000                           _home_callback 000F  
 __end_of_activity_submenu_siren_volume 1DE8  __size_of_activity_submenu_siren_volume 0066  
         _activity_submenu_siren_volume 1D82                          __CFG_WPDIS$OFF 000000  
                   _home_callback_delay 0011                          __CFG_XINST$OFF 000000  
                   _home_config_refresh 1854                  __size_of_button_B_menu 0048  
                      __end_of_lcd_init 1BB2              __end_of_home_clock_refresh 1A22  
                      __end_of_lcd_putc 2372                                  ___wmul 2894  
                             ??___awdiv 002E                          __CFG_STVREN$ON 000000  
                                _diasem 0053                                  _anio_d 0059  
                                _anio_u 009E                               ??___lwdiv 002E  
                             ??___lwmod 0035                   ??_reset_home_callback 002A  
                                _hora_d 005B                                  _hora_u 00A1  
                      __end_of_button_A 26A0                        __end_of_button_B 204A  
                      __end_of_button_C 2964                        __end_of_button_D 2A04  
                                clear_0 2496                                  clear_1 24A4  
                      ___awdiv@quotient 0030                                  _minuto 0019  
   __end_of_button_B_submenu_activation 274E             _button_B_submenu_activation 2714  
                 __end_of_RtccWriteDate 164C                                  _strcat 2372  
                                _strcmp 21F0                   __end_of_RtccWriteTime 1758  
                                _strcpy 244A                        RtccWriteTime@pTm 002A  
                          __pdataCOMRAM 004F                               ??_isdigit 002A  
                __size_of_button_number 0070                            __mediumconst 0000  
                             ??_pin_set 003A                    ?_home_config_refresh 002A  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                               ??_sprintf 0040  
                 __size_of_activity_pin 004E                              __accesstop 0060  
               __end_of__initialization 24CA                  _action_menu_selector_0 261E  
                _action_menu_selector_1 25DC                  _action_menu_selector_2 259A  
                _action_menu_selector_3 2558                      __size_of_Write_RTC 0160  
                         ___rparam_used 000001               ??_action_submenu_selector 003A  
             __size_of_keyboard_control 0156                          __pcstackCOMRAM 002A  
                         __end_of_setup 1C2E                         __CFG_DSWDTPS$G2 000000  
                       _button_asterisk 2A0E       __size_of_activity_submenu_pin_set 004E  
                       __CFG_OSC$INTOSC 000000                   ??_home_config_refresh 004D  
             ?_activity_submenu_pin_set 002A                           _button_B_menu 23BA  
                          _activity_pin 228C                            _alarm_volume 0007  
                     lcd_gotoxy@address 0030                    __size_of_button_hash 0024  
                    __size_of_lcd_putrs 0054                      __size_of_lcd_write 0018  
                          sprintf@width 004A                                 ??_setup 0037  
                            __pbssBANK0 0060                               ?_Read_RTC 002A  
                            _dia_semana 009F               RtccWriteTime@tempHourWDay 0033  
                            __pnvCOMRAM 0059                              _alarm_tone 0005  
         __size_of_activity_submenu_pin 0066                           _button_number 1CA4  
                             ?_RtccWrOn 002A                          lcd_send_byte@n 002C  
        ?_activity_submenu_siren_volume 002A     __end_of_button_B_submenu_pin_config 2782  
           _button_B_submenu_pin_config 274E                                 ?___wmul 002A  
                         ?_RtccReadDate 002A             __end_of_check_home_callback 2948  
                         ?_RtccReadTime 002A                      __size_of_pin_reset 0016  
         __size_of_action_menu_selector 0048                            ?_Delay1KTCYx 002A  
                               ?_strcat 002A                                 ?_strcmp 002A  
                               ?_strcpy 002A                       __end_of_Write_RTC 13B0  
                        ?_button_B_menu 002A                              _lcd_comand 29E2  
       __end_of_action_submenu_selector 2814                              _lcd_gotoxy 28E0  
                               _RTCVALH 000F99                                 _RTCVALL 000F98  
                             ?_lcd_init 002A                               ?_lcd_putc 002A  
                         _menu_selected 0017     __end_of_button_B_submenu_siren_tone 2714  
           _button_B_submenu_siren_tone 26DA                              ??_Read_RTC 003C  
                             ?_button_A 002A                               ?_button_B 002A  
                             ?_button_C 002A                               ?_button_D 002A  
    __size_of_action_submenu_selector_0 0042      __size_of_action_submenu_selector_1 0042  
                        ?_button_number 002A                                 __Hparam 0000  
                               __Lparam 0000             __end_of_home_volume_refresh 214C  
              __size_of_lcd_send_nibble 0076                 __end_of_button_asterisk 2A14  
                            ??_RtccWrOn 002A                          ??_RtccReadDate 002C  
                        ??_RtccReadTime 002C                                 ___awdiv 18FA  
                     __end_of_lcd_putrs 20FA                       __end_of_lcd_write 2996  
                       __size_of___wmul 0028                                 ___lwdiv 204A  
                               ___lwmod 22DA                            __psmallconst 0F00  
                           _RtccTimeVal 0078                                 __pcinit 2490  
                               _fecha_d 005A                                 _fecha_u 00A0  
                               __ramtop 0F00                     _pin_input_validator 2840  
                               __ptext0 2814                                 __ptext1 1BB2  
                               __ptext2 1250                                 __ptext3 18FA  
                               __ptext4 164C                                 __ptext5 1506  
                               __ptext6 29AC                                 __ptext7 13B0  
                               __ptext8 1CA4                                 __ptext9 2372  
          ?_activity_submenu_activation 002A                                 _buffer1 0080  
                       __size_of_strcat 0048                         __size_of_strcmp 004E  
                       __size_of_strcpy 0046                 ?_activity_submenu_clock 002A  
                             _T1CONbits 000FCD                                 _dpowers 0F01  
                               _isdigit 2904                 ?_activity_submenu_siren 002A  
                               _pin_set 2964                                 _segundo 001B  
            __end_of_home_state_refresh 21F0                                 _sprintf 0FEC  
                            ??_lcd_init 002E                              ??_lcd_putc 0031  
                  end_of_initialization 24CA                       __end_of_pin_reset 29AC  
                  ?_pin_input_validator 002A                    lcd_send_byte@address 002D  
                            ??_button_A 003C                           __Lmediumconst 0000  
                            ??_button_B 003C                              ??_button_C 003A  
                            ??_button_D 003A       __end_of_action_submenu_selector_0 2558  
     __end_of_action_submenu_selector_1 2516                        _keyboard_control 13B0  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
                 __end_of_lcd_send_byte 27B4                                 strcmp@r 002F  
        __end_of_activity_submenu_clock 1F80                               _PORTAbits 000F80  
                             _PORTCbits 000F82                         ??_button_B_menu 003A  
        __end_of_activity_submenu_siren 1EB4                        __CFG_DSBOREN$OFF 000000  
                           ?_lcd_comand 002A                      _home_clock_refresh 1990  
                      __CFG_CPUDIV$OSC1 000000                               _TRISBbits 000F93  
                __size_of_activity_home 002A                  __size_of_activity_menu 0082  
                           ?_lcd_gotoxy 002E                 ?_action_menu_selector_0 002A  
               ?_action_menu_selector_1 002A                 ?_action_menu_selector_2 002A  
               ?_action_menu_selector_3 002A                         _LCD_INIT_STRING 0F0B  
                   ?_home_clock_refresh 002A                   ??_pin_input_validator 003A  
                       ??_button_number 004D                        __CFG_IOL1WAY$OFF 000000  
             RtccWriteDate@tempDayMonth 0033             __end_of_reset_home_callback 2A0E  
                   __CFG_MSSP7B_EN$MSK7 000000                        ?_button_asterisk 002A  
                      Delay100TCYx@unit 002A                    ??_home_clock_refresh 004D  
                        __end_of___wmul 28BC                           __pidataCOMRAM 29F0  
             RtccWriteDate@tempHourWDay 0035                       ??_lcd_send_nibble 002A  
                  __size_of_Delay1KTCYx 0012                        __CFG_DSWDTEN$OFF 000000  
                        __end_of_strcat 23BA                          __end_of_strcmp 223E  
                        __end_of_strcpy 2490                     start_initialization 2490  
        __end_of_action_menu_selector_0 2660          __end_of_action_menu_selector_1 261E  
        __end_of_action_menu_selector_2 25DC          __end_of_action_menu_selector_3 259A  
                  __end_of_RtccReadDate 1AB0                    __end_of_RtccReadTime 1D82  
                  RtccWriteTime@wasAlrm 002F            ?_activity_submenu_siren_tone 002A  
                  RtccWriteTime@wasWrEn 0030    __size_of_activity_submenu_activation 0066  
                __size_of_RtccWriteDate 0146                         RtccWriteDate@di 002C  
                __size_of_RtccWriteTime 010C                       __size_of_Read_RTC 00FC  
                         _activity_home 286A                           _activity_menu 1AB0  
                   __size_of_lcd_comand 000E                     __size_of_lcd_gotoxy 0024  
                              ??___wmul 002E                       __size_of_RtccWrOn 0012  
                       RtccWriteTime@di 002C                        __CFG_LPT1OSC$OFF 000000  
           __end_of_home_config_refresh 18FA                                ??_strcat 002E  
                              ??_strcmp 002E                                ??_strcpy 002E  
          __end_of_activity_submenu_pin 1F1A                             _ALRMCFGbits 000F91  
               __end_of_LCD_INIT_STRING 0F0F                           ??_button_hash 003A  
                           __pbssCOMRAM 0001                               _Write_RTC 1250  
                          _isdigit$2191 002B            __end_of_action_menu_selector 244A  
                       Delay1KTCYx@unit 002A                       __size_of_lcd_init 0080  
                           sprintf@flag 0046                       __size_of_lcd_putc 004C  
                           sprintf@prec 0049                ?_action_submenu_selector 002A  
                             __pnvBANK0 009E                          ?_activity_home 002A  
                        ?_activity_menu 002A                       __size_of_button_A 0040  
                     __size_of_button_B 0064                       __size_of_button_C 001C  
                     __size_of_button_D 000A                        ___lwdiv@dividend 002A  
                         ?_Delay100TCYx 002A          ?_button_B_submenu_siren_config 002A  
                              ?___awdiv 002A                                ?___lwdiv 002A  
                              ?___lwmod 0031          ?_button_B_submenu_siren_volume 002A  
               RtccWriteTime@tempMinSec 0031                _activity_submenu_pin_set 223E  
                             _lcd_putrs 20A6                               _lcd_write 297E  
                      _submenu_selected 001F                           _RtccWriteDate 1506  
                           __smallconst 0F00                           _RtccWriteTime 164C  
          __size_of_check_home_callback 0022                                ?_isdigit 002A  
                  __CFG_RTCOSC$T1OSCREF 000000                                ?_pin_set 002A  
              __end_of_keyboard_control 1506                              ?_Write_RTC 002A  
                      ___lwdiv@quotient 002E                                ?_sprintf 0036  
                        __size_of_setup 007C                     __end_of_button_hash 28E0  
                      _RtccAlrmTimeDate 0060                          ___wmul@product 002E  
                              _LATAbits 000F89                                _LATBbits 000F8A  
                             _pin_input 0099                               _pin_reset 2996  
                              _PIE3bits 000FA3                               _segundo_d 005E  
                        ??_Delay100TCYx 002A                      _home_state_refresh 219E  
                             _segundo_u 00A4                        __CFG_WDTPS$32768 000000  
                    RtccWriteDate@wasOn 002E                     ?_home_state_refresh 002A  
                    _Rtcc_read_TimeDate 0070            __size_of_home_volume_refresh 0052  
  __size_of_activity_submenu_siren_tone 0066                          ?_RtccWriteDate 002A  
                            ?_lcd_putrs 0032                              ?_lcd_write 0034  
                     ___wmul@multiplier 002A                          ?_RtccWriteTime 002A  
          ?_button_B_submenu_activation 002A                               lcd_init@i 002E  
                 __size_of_RtccReadDate 008E                            ??_lcd_comand 002E  
                             lcd_putc@c 0031                   __size_of_RtccReadTime 006E  
                          ??_lcd_gotoxy 002F                               copy_data0 24BE  
                  ??_home_state_refresh 004D                                _Read_RTC 1758  
                       ??_activity_home 003A                         ??_activity_menu 003A  
                            ?_pin_reset 002A                    _activity_submenu_pin 1EB4  
                       _lcd_send_nibble 1C2E                                __Hrparam 0000  
                              _RtccDate 0022                                __Lrparam 0000  
            ?_action_submenu_selector_0 002A              ?_action_submenu_selector_1 002A  
                              _RtccTime 0026                                _RtccWrOn 29AC  
                    __end_of_lcd_comand 29F0                      __end_of_lcd_gotoxy 2904  
                          _RtccReadDate 1A22                        __size_of___awdiv 0096  
                          _RtccReadTime 1D14                    _action_menu_selector 2402  
                      __size_of___lwdiv 005C                        __size_of___lwmod 004C  
                          _RtccTimeDate 0068                      _config_widget_time 000D  
                            sprintf@val 0047                   __end_of_button_B_menu 2402  
         ??_button_B_submenu_activation 003A                              strcat@from 002C  
                           _button_hash 28BC                           ?_activity_pin 002A  
                              _activity 0003             __end_of_pin_input_validator 286A  
                      __size_of_isdigit 0022                         ___lwdiv@divisor 002C  
                           ??_Write_RTC 0037                        __size_of_pin_set 001A  
                       ___lwdiv@counter 0030                                __ptext10 28BC  
                              __ptext11 2964                                __ptext20 26DA  
                              __ptext12 2840                                __ptext21 27B4  
                              __ptext13 21F0                                __ptext30 1EB4  
                              __ptext22 1D82                                __ptext14 2A0E  
                              __ptext31 1F1A                                __ptext23 1DE8  
                              __ptext15 29FA                                __ptext40 2402  
                              __ptext32 1F80                                __ptext24 274E  
                              __ptext16 2948                                __ptext41 2558  
                              __ptext33 2660                                __ptext25 2996  
                              __ptext17 1AB0                                __ptext50 0FEC  
                              __ptext42 259A                                __ptext34 228C  
                              __ptext26 223E                                __ptext18 1FE6  
                              __ptext51 2904                                __ptext43 25DC  
                              __ptext35 244A                                __ptext27 2714  
                              __ptext19 26A0                                __ptext60 2326  
                              __ptext52 2894                                __ptext44 261E  
                              __ptext36 29E2                                __ptext28 23BA  
                              __ptext61 28E0                                __ptext53 22DA  
                              __ptext45 1854                                __ptext37 27E4  
                              __ptext29 1E4E                                __ptext62 1B32  
                              __ptext54 204A                                __ptext46 20FA  
                              __ptext38 24D4                                __ptext63 2782  
                              __ptext55 2926                                __ptext47 214C  
                              __ptext39 2516                                __ptext64 1C2E  
                              __ptext56 2A04                                __ptext48 219E  
                              __ptext65 29BE                                __ptext57 286A  
                              __ptext49 1990                                __ptext66 29D0  
                              __ptext58 297E                                __ptext67 1758  
                              __ptext59 20A6                                __ptext68 1D14  
                              __ptext69 1A22                                _lcd_init 1B32  
                              _lcd_putc 2326                        __size_of_sprintf 0264  
                            strcpy@from 002C                  __size_of_lcd_send_byte 0032  
                              _button_A 2660                                _button_B 1FE6  
                              _button_C 2948                                _button_D 29FA  
                         __size_of_main 002C                   __end_of_button_number 1D14  
                 ?_activity_submenu_pin 002A                                _minuto_d 005D  
                              _minuto_u 00A3                       _home_tone_refresh 214C  
                    ?_home_tone_refresh 002A            ?_button_B_submenu_pin_config 002A  
                 ?_action_menu_selector 002A                           ??_Delay1KTCYx 002A  
                       ??_RtccWriteDate 002D             __size_of_home_clock_refresh 0092  
                       ??_RtccWriteTime 002D     __end_of_activity_submenu_activation 1FE6  
           _activity_submenu_activation 1F80            __size_of_reset_home_callback 000A  
                           ??_lcd_putrs 0034                             ??_lcd_write 003A  
                   ??_home_tone_refresh 004D                __size_of_button_asterisk 0006  
                        ??_activity_pin 003A                             _OSCTUNEbits 000F9B  
                            _INTCONbits 000FF2                      RtccWriteTime@wasOn 002E  
                  __end_of_Delay100TCYx 29D0           ??_activity_submenu_activation 003A  
                              isdigit@c 002C                               sprintf@ap 0044  
               __end_of_lcd_send_nibble 1CA4                               sprintf@sp 0036  
                      ___lwmod@dividend 0031            ?_button_B_submenu_siren_tone 002A  
             __end_of_home_tone_refresh 219E    __size_of_button_B_submenu_activation 003A  
                           ??_pin_reset 0030                     _check_home_callback 2926  
            ??_activity_submenu_pin_set 003A                              _OSCCONbits 000FD3  
                         _config_widget 000B                ??_activity_submenu_clock 003A  
                 RtccWriteDate@tempYear 0030                ??_activity_submenu_siren 003A  
                         _lcd_send_byte 2782        __size_of_action_submenu_selector 0030  
         ??_button_B_submenu_pin_config 003A                              _RTCCFGbits 000F3F  
                              sprintf@c 004C                                sprintf@f 0038  
                              strcat@cp 002E                                strcat@to 002A  
                  ?_check_home_callback 002A                                strcmp@s1 002A  
                              strcmp@s2 002C                         ___lwmod@divisor 0033  
                              strcpy@cp 002E                                strcpy@to 002A  
                   __end_of_Delay1KTCYx 29E2                         ___lwmod@counter 0035  
       ??_button_B_submenu_siren_config 003A            __size_of_home_config_refresh 00A6  
                  RtccWriteDate@wasAlrm 002F                    RtccWriteDate@wasWrEn 0032  
                     ?_keyboard_control 002A         ??_button_B_submenu_siren_volume 003A  
                    ??_keyboard_control 004D                     _home_volume_refresh 20FA  
                ??_activity_submenu_pin 003A           ??_button_B_submenu_siren_tone 003A  
                 lcd_send_nibble@nibble 002B  
