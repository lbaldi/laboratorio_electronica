

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 06 00:29:52 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  001C8A                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _anio
    45  001C8A  0010               	dw	16
    46                           
    47                           ;initializer for _dia
    48  001C8C  0001               	dw	1
    49                           
    50                           ;initializer for _mes
    51  001C8E  0001               	dw	1
    52                           
    53                           	psect	smallconst
    54  000F00                     __psmallconst:
    55                           	opt stack 0
    56  000F00  00                 	db	0
    57  000F01                     _dpowers:
    58                           	opt stack 0
    59  000F01  0001               	dw	1
    60  000F03  000A               	dw	10
    61  000F05  0064               	dw	100
    62  000F07  03E8               	dw	1000
    63  000F09  2710               	dw	10000
    64  000F0B                     __end_of_dpowers:
    65                           	opt stack 0
    66  000F0B                     _LCD_INIT_STRING:
    67                           	opt stack 0
    68  000F0B  28                 	db	40
    69  000F0C  0C                 	db	12
    70  000F0D  01                 	db	1
    71  000F0E  06                 	db	6
    72  000F0F                     __end_of_LCD_INIT_STRING:
    73                           	opt stack 0
    74  000F0F                     STR_1:
    75  000F0F  55                 	db	85	;'U'
    76  000F10  4E                 	db	78	;'N'
    77  000F11  49                 	db	73	;'I'
    78  000F12  4D                 	db	77	;'M'
    79  000F13  49                 	db	73	;'I'
    80  000F14  43                 	db	67	;'C'
    81  000F15  20                 	db	32
    82  000F16  20                 	db	32
    83  000F17  54                 	db	84	;'T'
    84  000F18  45                 	db	69	;'E'
    85  000F19  43                 	db	67	;'C'
    86  000F1A  4C                 	db	76	;'L'
    87  000F1B  41                 	db	65	;'A'
    88  000F1C  44                 	db	68	;'D'
    89  000F1D  4F                 	db	79	;'O'
    90  000F1E  20                 	db	32
    91  000F1F  00                 	db	0
    92  000F20                     STR_2:
    93  000F20  25                 	db	37
    94  000F21  30                 	db	48	;'0'
    95  000F22  31                 	db	49	;'1'
    96  000F23  75                 	db	117	;'u'
    97  000F24  00                 	db	0
    98  000F25                     STR_16:
    99  000F25  23                 	db	35
   100  000F26  00                 	db	0
   101  000F27                     STR_14:
   102  000F27  2A                 	db	42
   103  000F28  00                 	db	0
   104  000F29                     STR_5:
   105  000F29  41                 	db	65	;'A'
   106  000F2A  00                 	db	0
   107  000F2B                     STR_9:
   108  000F2B  42                 	db	66	;'B'
   109  000F2C  00                 	db	0
   110  000F2D                     STR_13:
   111  000F2D  43                 	db	67	;'C'
   112  000F2E  00                 	db	0
   113  000F2F                     STR_17:
   114  000F2F  44                 	db	68	;'D'
   115  000F30  00                 	db	0
   116  0000                     
   117                           ; #config settings
   118  000F31  00                 	db	0	; dummy byte at the end
   119  0000                     
   120                           	psect	nvCOMRAM
   121  00004A                     __pnvCOMRAM:
   122                           	opt stack 0
   123  00004A                     _anio_d:
   124                           	opt stack 0
   125  00004A                     	ds	1
   126  00004B                     _anio_u:
   127                           	opt stack 0
   128  00004B                     	ds	1
   129  00004C                     _dia_semana:
   130                           	opt stack 0
   131  00004C                     	ds	1
   132  00004D                     _fecha_d:
   133                           	opt stack 0
   134  00004D                     	ds	1
   135  00004E                     _fecha_u:
   136                           	opt stack 0
   137  00004E                     	ds	1
   138  00004F                     _hora_d:
   139                           	opt stack 0
   140  00004F                     	ds	1
   141  000050                     _hora_u:
   142                           	opt stack 0
   143  000050                     	ds	1
   144  000051                     _mes_d:
   145                           	opt stack 0
   146  000051                     	ds	1
   147  000052                     _mes_u:
   148                           	opt stack 0
   149  000052                     	ds	1
   150  000053                     _minuto_d:
   151                           	opt stack 0
   152  000053                     	ds	1
   153  000054                     _minuto_u:
   154                           	opt stack 0
   155  000054                     	ds	1
   156  000055                     _segundo_d:
   157                           	opt stack 0
   158  000055                     	ds	1
   159  000056                     _segundo_u:
   160                           	opt stack 0
   161  000056                     	ds	1
   162  0000                     _ANCON0	set	3912
   163  0000                     _ANCON1	set	3913
   164  0000                     _RTCCFG	set	3903
   165  0000                     _RTCCFGbits	set	3903
   166  0000                     _ADCON0	set	4034
   167  0000                     _ADCON1	set	4033
   168  0000                     _ALRMCFGbits	set	3985
   169  0000                     _EECON2	set	4007
   170  0000                     _INTCONbits	set	4082
   171  0000                     _LATAbits	set	3977
   172  0000                     _LATBbits	set	3978
   173  0000                     _OSCCONbits	set	4051
   174  0000                     _OSCTUNEbits	set	3995
   175  0000                     _PIE3bits	set	4003
   176  0000                     _PORTAbits	set	3968
   177  0000                     _PORTCbits	set	3970
   178  0000                     _RTCVALH	set	3993
   179  0000                     _RTCVALL	set	3992
   180  0000                     _T1CONbits	set	4045
   181  0000                     _TRISA	set	3986
   182  0000                     _TRISB	set	3987
   183  0000                     _TRISBbits	set	3987
   184  0000                     _TRISC	set	3988
   185                           
   186                           	psect	cinit
   187  001B26                     __pcinit:
   188                           	opt stack 0
   189  001B26                     start_initialization:
   190                           	opt stack 0
   191  001B26                     __initialization:
   192                           	opt stack 0
   193                           
   194                           ; Clear objects allocated to BANK0 (36 bytes)
   195  001B26  EE00  F060         	lfsr	0,__pbssBANK0
   196  001B2A  0E24               	movlw	36
   197  001B2C                     clear_0:
   198  001B2C  6AEE               	clrf	postinc0,c
   199  001B2E  06E8               	decf	wreg,f,c
   200  001B30  E1FD               	bnz	clear_0
   201                           
   202                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   203  001B32  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   204                           
   205                           ; Clear objects allocated to COMRAM (41 bytes)
   206  001B34  EE00  F001         	lfsr	0,__pbssCOMRAM
   207  001B38  0E29               	movlw	41
   208  001B3A                     clear_1:
   209  001B3A  6AEE               	clrf	postinc0,c
   210  001B3C  06E8               	decf	wreg,f,c
   211  001B3E  E1FD               	bnz	clear_1
   212                           
   213                           ; Initialize objects allocated to COMRAM (6 bytes)
   214                           ; load TBLPTR registers with __pidataCOMRAM
   215  001B40  0E8A               	movlw	low __pidataCOMRAM
   216  001B42  6EF6               	movwf	tblptrl,c
   217  001B44  0E1C               	movlw	high __pidataCOMRAM
   218  001B46  6EF7               	movwf	tblptrh,c
   219  001B48  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   220  001B4A  6EF8               	movwf	tblptru,c
   221  001B4C  EE00  F057         	lfsr	0,__pdataCOMRAM
   222  001B50  EE10 F006          	lfsr	1,6
   223  001B54                     copy_data0:
   224  001B54  0009               	tblrd		*+
   225  001B56  CFF5 FFEE          	movff	tablat,postinc0
   226  001B5A  50E5               	movf	postdec1,w,c
   227  001B5C  50E1               	movf	fsr1l,w,c
   228  001B5E  E1FA               	bnz	copy_data0
   229  001B60                     end_of_initialization:
   230                           	opt stack 0
   231  001B60                     __end_of__initialization:
   232                           	opt stack 0
   233  001B60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   234  001B62  6EF8               	movwf	tblptru,c
   235  001B64  0100               	movlb	0
   236  001B66  EF19  F00E         	goto	_main	;jump to C main() function
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           postdec1	equ	0xFE5
   244                           fsr1l	equ	0xFE1
   245                           
   246                           	psect	bitbssCOMRAM
   247  0002E8                     __pbitbssCOMRAM:
   248                           	opt stack 0
   249  0002E8                     _flag:
   250                           	opt stack 0
   251  0002E8                     	ds	1
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec1	equ	0xFE5
   259                           fsr1l	equ	0xFE1
   260                           
   261                           	psect	bssCOMRAM
   262  000001                     __pbssCOMRAM:
   263                           	opt stack 0
   264  000001                     _RtccTimeDate:
   265                           	opt stack 0
   266  000001                     	ds	8
   267  000009                     _RtccTimeVal:
   268                           	opt stack 0
   269  000009                     	ds	4
   270  00000D                     _a:
   271                           	opt stack 0
   272  00000D                     	ds	2
   273  00000F                     _b:
   274                           	opt stack 0
   275  00000F                     	ds	2
   276  000011                     _c:
   277                           	opt stack 0
   278  000011                     	ds	2
   279  000013                     _diasem:
   280                           	opt stack 0
   281  000013                     	ds	2
   282  000015                     _hora:
   283                           	opt stack 0
   284  000015                     	ds	2
   285  000017                     _i:
   286                           	opt stack 0
   287  000017                     	ds	2
   288  000019                     _j:
   289                           	opt stack 0
   290  000019                     	ds	2
   291  00001B                     _k:
   292                           	opt stack 0
   293  00001B                     	ds	2
   294  00001D                     _minuto:
   295                           	opt stack 0
   296  00001D                     	ds	2
   297  00001F                     _segundo:
   298                           	opt stack 0
   299  00001F                     	ds	2
   300  000021                     _key:
   301                           	opt stack 0
   302  000021                     	ds	1
   303  000022                     _RtccDate:
   304                           	opt stack 0
   305  000022                     	ds	4
   306  000026                     _RtccTime:
   307                           	opt stack 0
   308  000026                     	ds	4
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           postdec1	equ	0xFE5
   316                           fsr1l	equ	0xFE1
   317                           
   318                           	psect	dataCOMRAM
   319  000057                     __pdataCOMRAM:
   320                           	opt stack 0
   321  000057                     _anio:
   322                           	opt stack 0
   323  000057                     	ds	2
   324  000059                     _dia:
   325                           	opt stack 0
   326  000059                     	ds	2
   327  00005B                     _mes:
   328                           	opt stack 0
   329  00005B                     	ds	2
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339                           	psect	bssBANK0
   340  000060                     __pbssBANK0:
   341                           	opt stack 0
   342  000060                     _RtccAlrmTimeDate:
   343                           	opt stack 0
   344  000060                     	ds	8
   345  000068                     _Rtcc_read_TimeDate:
   346                           	opt stack 0
   347  000068                     	ds	8
   348  000070                     _buffer2:
   349                           	opt stack 0
   350  000070                     	ds	20
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	cstackCOMRAM
   361  00002A                     __pcstackCOMRAM:
   362                           	opt stack 0
   363  00002A                     ??_isdigit:
   364  00002A                     ??_lcd_send_nibble:
   365  00002A                     ?___wmul:
   366                           	opt stack 0
   367  00002A                     ?___awdiv:
   368                           	opt stack 0
   369  00002A                     ?___lwdiv:
   370                           	opt stack 0
   371  00002A                     Delay100TCYx@unit:
   372                           	opt stack 0
   373  00002A                     Delay1KTCYx@unit:
   374                           	opt stack 0
   375  00002A                     RtccWriteDate@pDt:
   376                           	opt stack 0
   377  00002A                     RtccWriteTime@pTm:
   378                           	opt stack 0
   379  00002A                     ___wmul@multiplier:
   380                           	opt stack 0
   381  00002A                     ___awdiv@dividend:
   382                           	opt stack 0
   383  00002A                     ___lwdiv@dividend:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x0
   387  00002A                     	ds	1
   388  00002B                     lcd_send_nibble@nibble:
   389                           	opt stack 0
   390  00002B                     _isdigit$2041:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x1
   394  00002B                     	ds	1
   395  00002C                     lcd_send_byte@n:
   396                           	opt stack 0
   397  00002C                     RtccWriteDate@di:
   398                           	opt stack 0
   399  00002C                     RtccWriteTime@di:
   400                           	opt stack 0
   401  00002C                     isdigit@c:
   402                           	opt stack 0
   403  00002C                     ___wmul@multiplicand:
   404                           	opt stack 0
   405  00002C                     ___awdiv@divisor:
   406                           	opt stack 0
   407  00002C                     ___lwdiv@divisor:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x2
   411  00002C                     	ds	1
   412  00002D                     lcd_send_byte@address:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x3
   416  00002D                     	ds	1
   417  00002E                     lcd_init@i:
   418                           	opt stack 0
   419  00002E                     lcd_gotoxy@y:
   420                           	opt stack 0
   421  00002E                     lcd_comand@d:
   422                           	opt stack 0
   423  00002E                     RtccWriteDate@wasOn:
   424                           	opt stack 0
   425  00002E                     RtccWriteTime@wasOn:
   426                           	opt stack 0
   427  00002E                     ___awdiv@counter:
   428                           	opt stack 0
   429  00002E                     ___wmul@product:
   430                           	opt stack 0
   431  00002E                     ___lwdiv@quotient:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x4
   435  00002E                     	ds	1
   436  00002F                     lcd_gotoxy@x:
   437                           	opt stack 0
   438  00002F                     RtccWriteDate@wasAlrm:
   439                           	opt stack 0
   440  00002F                     RtccWriteTime@wasAlrm:
   441                           	opt stack 0
   442  00002F                     ___awdiv@sign:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446  00002F                     	ds	1
   447  000030                     lcd_gotoxy@address:
   448                           	opt stack 0
   449  000030                     RtccWriteTime@wasWrEn:
   450                           	opt stack 0
   451  000030                     ___lwdiv@counter:
   452                           	opt stack 0
   453  000030                     RtccWriteDate@tempYear:
   454                           	opt stack 0
   455  000030                     ___awdiv@quotient:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x6
   459  000030                     	ds	1
   460  000031                     ?___lwmod:
   461                           	opt stack 0
   462  000031                     lcd_putc@c:
   463                           	opt stack 0
   464  000031                     RtccWriteTime@tempMinSec:
   465                           	opt stack 0
   466  000031                     ___lwmod@dividend:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x7
   470  000031                     	ds	1
   471  000032                     RtccWriteDate@wasWrEn:
   472                           	opt stack 0
   473  000032                     lcd_putrs@ptr:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x8
   477  000032                     	ds	1
   478  000033                     RtccWriteDate@tempDayMonth:
   479                           	opt stack 0
   480  000033                     RtccWriteTime@tempHourWDay:
   481                           	opt stack 0
   482  000033                     ___lwmod@divisor:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x9
   486  000033                     	ds	1
   487  000034                     
   488                           ; 0 bytes @ 0xA
   489  000034                     	ds	1
   490  000035                     ___lwmod@counter:
   491                           	opt stack 0
   492  000035                     RtccWriteDate@tempHourWDay:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0xB
   496  000035                     	ds	1
   497  000036                     ?_sprintf:
   498                           	opt stack 0
   499  000036                     sprintf@sp:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0xC
   503  000036                     	ds	1
   504  000037                     
   505                           ; 0 bytes @ 0xD
   506  000037                     	ds	1
   507  000038                     sprintf@f:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0xE
   511  000038                     	ds	4
   512  00003C                     ??_sprintf:
   513                           
   514                           ; 0 bytes @ 0x12
   515  00003C                     	ds	4
   516  000040                     sprintf@ap:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x16
   520  000040                     	ds	2
   521  000042                     sprintf@flag:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x18
   525  000042                     	ds	1
   526  000043                     sprintf@val:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x19
   530  000043                     	ds	2
   531  000045                     sprintf@prec:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x1B
   535  000045                     	ds	1
   536  000046                     sprintf@width:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x1C
   540  000046                     	ds	2
   541  000048                     sprintf@c:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x1E
   545  000048                     	ds	1
   546  000049                     ??_Write_Keyboard:
   547                           
   548                           ; 0 bytes @ 0x1F
   549  000049                     	ds	1
   550  00004A                     tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           
   559                           ; 0 bytes @ 0x20
   560 ;;
   561 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   562 ;;
   563 ;; *************** function _main *****************
   564 ;; Defined at:
   565 ;;		line 112 in file "main.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  2  215[None  ] int 
   572 ;; Registers used:
   573 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels required when called:    6
   585 ;; This function calls:
   586 ;;		_Home
   587 ;;		_Setup
   588 ;;		_Write_Keyboard
   589 ;; This function is called by:
   590 ;;		Startup code after reset
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text0
   595  001C32                     __ptext0:
   596                           	opt stack 0
   597  001C32                     _main:
   598                           	opt stack 25
   599                           
   600                           ;main.c: 114: Setup();
   601                           
   602                           ;incstack = 0
   603  001C32  EC6F  F00D         	call	_Setup	;wreg free
   604                           
   605                           ;main.c: 116: Home();
   606  001C36  ECE2  F00D         	call	_Home	;wreg free
   607  001C3A  D000               	goto	l2303
   608  001C3C                     l2303:
   609                           
   610                           ;main.c: 123: Write_Keyboard();
   611  001C3C  EC99  F007         	call	_Write_Keyboard	;wreg free
   612  001C40  D7FD               	goto	l2303
   613                           
   614                           ;main.c: 124: }
   615                           ;main.c: 126: return 0;
   616                           ;	Return value of _main is never used
   617  001C42  EF00  F000         	goto	start
   618  001C46                     __end_of_main:
   619                           	opt stack 0
   620                           tblptru	equ	0xFF8
   621                           tblptrh	equ	0xFF7
   622                           tblptrl	equ	0xFF6
   623                           tablat	equ	0xFF5
   624                           postinc0	equ	0xFEE
   625                           wreg	equ	0xFE8
   626                           postdec1	equ	0xFE5
   627                           fsr1l	equ	0xFE1
   628                           
   629 ;; *************** function _Write_Keyboard *****************
   630 ;; Defined at:
   631 ;;		line 74 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;		None               void
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   649 ;;Total ram usage:        1 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    5
   652 ;; This function calls:
   653 ;;		_lcd_putrs
   654 ;;		_sprintf
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text1
   661  000F32                     __ptext1:
   662                           	opt stack 0
   663  000F32                     _Write_Keyboard:
   664                           	opt stack 25
   665                           
   666                           ;main.c: 76: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
   667                           
   668                           ;incstack = 0
   669  000F32  8089               	bsf	3977,0,c	;volatile
   670  000F34  9289               	bcf	3977,1,c	;volatile
   671  000F36  9489               	bcf	3977,2,c	;volatile
   672  000F38  9689               	bcf	3977,3,c	;volatile
   673                           
   674                           ;main.c: 77: {
   675                           ;main.c: 78: if (PORTAbits.RA5==1){key=1;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA5==1){};}
   676  000F3A  AA80               	btfss	3968,5,c	;volatile
   677  000F3C  D018               	goto	l149
   678  000F3E  0E01               	movlw	1
   679  000F40  6E21               	movwf	_key,c
   680  000F42  0E70               	movlw	low _buffer2
   681  000F44  6E36               	movwf	sprintf@sp,c
   682  000F46  0E00               	movlw	high _buffer2
   683  000F48  6E37               	movwf	sprintf@sp+1,c
   684  000F4A  0E20               	movlw	low STR_2
   685  000F4C  6E38               	movwf	sprintf@f,c
   686  000F4E  0E0F               	movlw	high STR_2
   687  000F50  6E39               	movwf	sprintf@f+1,c
   688  000F52  C021  F03A         	movff	_key,?_sprintf+4
   689  000F56  6A3B               	clrf	?_sprintf+5,c
   690  000F58  EC06  F009         	call	_sprintf	;wreg free
   691  000F5C  0E70               	movlw	low _buffer2
   692  000F5E  6E32               	movwf	lcd_putrs@ptr,c
   693  000F60  0E00               	movlw	high _buffer2
   694  000F62  6E33               	movwf	lcd_putrs@ptr+1,c
   695  000F64  ECF9  F00C         	call	_lcd_putrs	;wreg free
   696  000F68  D000               	goto	l150
   697  000F6A                     l150:
   698  000F6A  BA80               	btfsc	3968,5,c	;volatile
   699  000F6C  D7FE               	goto	l150
   700  000F6E                     l149:
   701                           
   702                           ;main.c: 79: if (PORTAbits.RA7==1){key=2;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA7==1){};}
   703  000F6E  AE80               	btfss	3968,7,c	;volatile
   704  000F70  D018               	goto	l153
   705  000F72  0E02               	movlw	2
   706  000F74  6E21               	movwf	_key,c
   707  000F76  0E70               	movlw	low _buffer2
   708  000F78  6E36               	movwf	sprintf@sp,c
   709  000F7A  0E00               	movlw	high _buffer2
   710  000F7C  6E37               	movwf	sprintf@sp+1,c
   711  000F7E  0E20               	movlw	low STR_2
   712  000F80  6E38               	movwf	sprintf@f,c
   713  000F82  0E0F               	movlw	high STR_2
   714  000F84  6E39               	movwf	sprintf@f+1,c
   715  000F86  C021  F03A         	movff	_key,?_sprintf+4
   716  000F8A  6A3B               	clrf	?_sprintf+5,c
   717  000F8C  EC06  F009         	call	_sprintf	;wreg free
   718  000F90  0E70               	movlw	low _buffer2
   719  000F92  6E32               	movwf	lcd_putrs@ptr,c
   720  000F94  0E00               	movlw	high _buffer2
   721  000F96  6E33               	movwf	lcd_putrs@ptr+1,c
   722  000F98  ECF9  F00C         	call	_lcd_putrs	;wreg free
   723  000F9C  D000               	goto	l154
   724  000F9E                     l154:
   725  000F9E  BE80               	btfsc	3968,7,c	;volatile
   726  000FA0  D7FE               	goto	l154
   727  000FA2                     l153:
   728                           
   729                           ;main.c: 80: if (PORTAbits.RA6==1){key=3;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA6==1){};}
   730  000FA2  AC80               	btfss	3968,6,c	;volatile
   731  000FA4  D018               	goto	l157
   732  000FA6  0E03               	movlw	3
   733  000FA8  6E21               	movwf	_key,c
   734  000FAA  0E70               	movlw	low _buffer2
   735  000FAC  6E36               	movwf	sprintf@sp,c
   736  000FAE  0E00               	movlw	high _buffer2
   737  000FB0  6E37               	movwf	sprintf@sp+1,c
   738  000FB2  0E20               	movlw	low STR_2
   739  000FB4  6E38               	movwf	sprintf@f,c
   740  000FB6  0E0F               	movlw	high STR_2
   741  000FB8  6E39               	movwf	sprintf@f+1,c
   742  000FBA  C021  F03A         	movff	_key,?_sprintf+4
   743  000FBE  6A3B               	clrf	?_sprintf+5,c
   744  000FC0  EC06  F009         	call	_sprintf	;wreg free
   745  000FC4  0E70               	movlw	low _buffer2
   746  000FC6  6E32               	movwf	lcd_putrs@ptr,c
   747  000FC8  0E00               	movlw	high _buffer2
   748  000FCA  6E33               	movwf	lcd_putrs@ptr+1,c
   749  000FCC  ECF9  F00C         	call	_lcd_putrs	;wreg free
   750  000FD0  D000               	goto	l158
   751  000FD2                     l158:
   752  000FD2  BC80               	btfsc	3968,6,c	;volatile
   753  000FD4  D7FE               	goto	l158
   754  000FD6                     l157:
   755                           
   756                           ;main.c: 81: if (PORTCbits.RC2==1){key=11;lcd_putrs("A");while(PORTCbits.RC2==1){};}
   757  000FD6  A482               	btfss	3970,2,c	;volatile
   758  000FD8  D00B               	goto	l161
   759  000FDA  0E0B               	movlw	11
   760  000FDC  6E21               	movwf	_key,c
   761  000FDE  0E29               	movlw	low STR_5
   762  000FE0  6E32               	movwf	lcd_putrs@ptr,c
   763  000FE2  0E0F               	movlw	high STR_5
   764  000FE4  6E33               	movwf	lcd_putrs@ptr+1,c
   765  000FE6  ECF9  F00C         	call	_lcd_putrs	;wreg free
   766  000FEA  D000               	goto	l162
   767  000FEC                     l162:
   768  000FEC  B482               	btfsc	3970,2,c	;volatile
   769  000FEE  D7FE               	goto	l162
   770  000FF0                     l161:
   771                           
   772                           ;main.c: 82: }
   773                           ;main.c: 84: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
   774  000FF0  9089               	bcf	3977,0,c	;volatile
   775  000FF2  8289               	bsf	3977,1,c	;volatile
   776  000FF4  9489               	bcf	3977,2,c	;volatile
   777  000FF6  9689               	bcf	3977,3,c	;volatile
   778                           
   779                           ;main.c: 85: {
   780                           ;main.c: 86: if (PORTAbits.RA5==1){key=4;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA5==1){};}
   781  000FF8  AA80               	btfss	3968,5,c	;volatile
   782  000FFA  D018               	goto	l165
   783  000FFC  0E04               	movlw	4
   784  000FFE  6E21               	movwf	_key,c
   785  001000  0E70               	movlw	low _buffer2
   786  001002  6E36               	movwf	sprintf@sp,c
   787  001004  0E00               	movlw	high _buffer2
   788  001006  6E37               	movwf	sprintf@sp+1,c
   789  001008  0E20               	movlw	low STR_2
   790  00100A  6E38               	movwf	sprintf@f,c
   791  00100C  0E0F               	movlw	high STR_2
   792  00100E  6E39               	movwf	sprintf@f+1,c
   793  001010  C021  F03A         	movff	_key,?_sprintf+4
   794  001014  6A3B               	clrf	?_sprintf+5,c
   795  001016  EC06  F009         	call	_sprintf	;wreg free
   796  00101A  0E70               	movlw	low _buffer2
   797  00101C  6E32               	movwf	lcd_putrs@ptr,c
   798  00101E  0E00               	movlw	high _buffer2
   799  001020  6E33               	movwf	lcd_putrs@ptr+1,c
   800  001022  ECF9  F00C         	call	_lcd_putrs	;wreg free
   801  001026  D000               	goto	l166
   802  001028                     l166:
   803  001028  BA80               	btfsc	3968,5,c	;volatile
   804  00102A  D7FE               	goto	l166
   805  00102C                     l165:
   806                           
   807                           ;main.c: 87: if (PORTAbits.RA7==1){key=5;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA7==1){};}
   808  00102C  AE80               	btfss	3968,7,c	;volatile
   809  00102E  D018               	goto	l169
   810  001030  0E05               	movlw	5
   811  001032  6E21               	movwf	_key,c
   812  001034  0E70               	movlw	low _buffer2
   813  001036  6E36               	movwf	sprintf@sp,c
   814  001038  0E00               	movlw	high _buffer2
   815  00103A  6E37               	movwf	sprintf@sp+1,c
   816  00103C  0E20               	movlw	low STR_2
   817  00103E  6E38               	movwf	sprintf@f,c
   818  001040  0E0F               	movlw	high STR_2
   819  001042  6E39               	movwf	sprintf@f+1,c
   820  001044  C021  F03A         	movff	_key,?_sprintf+4
   821  001048  6A3B               	clrf	?_sprintf+5,c
   822  00104A  EC06  F009         	call	_sprintf	;wreg free
   823  00104E  0E70               	movlw	low _buffer2
   824  001050  6E32               	movwf	lcd_putrs@ptr,c
   825  001052  0E00               	movlw	high _buffer2
   826  001054  6E33               	movwf	lcd_putrs@ptr+1,c
   827  001056  ECF9  F00C         	call	_lcd_putrs	;wreg free
   828  00105A  D000               	goto	l170
   829  00105C                     l170:
   830  00105C  BE80               	btfsc	3968,7,c	;volatile
   831  00105E  D7FE               	goto	l170
   832  001060                     l169:
   833                           
   834                           ;main.c: 88: if (PORTAbits.RA6==1){key=6;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA6==1){};}
   835  001060  AC80               	btfss	3968,6,c	;volatile
   836  001062  D018               	goto	l173
   837  001064  0E06               	movlw	6
   838  001066  6E21               	movwf	_key,c
   839  001068  0E70               	movlw	low _buffer2
   840  00106A  6E36               	movwf	sprintf@sp,c
   841  00106C  0E00               	movlw	high _buffer2
   842  00106E  6E37               	movwf	sprintf@sp+1,c
   843  001070  0E20               	movlw	low STR_2
   844  001072  6E38               	movwf	sprintf@f,c
   845  001074  0E0F               	movlw	high STR_2
   846  001076  6E39               	movwf	sprintf@f+1,c
   847  001078  C021  F03A         	movff	_key,?_sprintf+4
   848  00107C  6A3B               	clrf	?_sprintf+5,c
   849  00107E  EC06  F009         	call	_sprintf	;wreg free
   850  001082  0E70               	movlw	low _buffer2
   851  001084  6E32               	movwf	lcd_putrs@ptr,c
   852  001086  0E00               	movlw	high _buffer2
   853  001088  6E33               	movwf	lcd_putrs@ptr+1,c
   854  00108A  ECF9  F00C         	call	_lcd_putrs	;wreg free
   855  00108E  D000               	goto	l174
   856  001090                     l174:
   857  001090  BC80               	btfsc	3968,6,c	;volatile
   858  001092  D7FE               	goto	l174
   859  001094                     l173:
   860                           
   861                           ;main.c: 89: if (PORTCbits.RC2==1){key=12;lcd_putrs("B");while(PORTCbits.RC2==1){};}
   862  001094  A482               	btfss	3970,2,c	;volatile
   863  001096  D00B               	goto	l177
   864  001098  0E0C               	movlw	12
   865  00109A  6E21               	movwf	_key,c
   866  00109C  0E2B               	movlw	low STR_9
   867  00109E  6E32               	movwf	lcd_putrs@ptr,c
   868  0010A0  0E0F               	movlw	high STR_9
   869  0010A2  6E33               	movwf	lcd_putrs@ptr+1,c
   870  0010A4  ECF9  F00C         	call	_lcd_putrs	;wreg free
   871  0010A8  D000               	goto	l178
   872  0010AA                     l178:
   873  0010AA  B482               	btfsc	3970,2,c	;volatile
   874  0010AC  D7FE               	goto	l178
   875  0010AE                     l177:
   876                           
   877                           ;main.c: 90: }
   878                           ;main.c: 92: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
   879  0010AE  9089               	bcf	3977,0,c	;volatile
   880  0010B0  9289               	bcf	3977,1,c	;volatile
   881  0010B2  8489               	bsf	3977,2,c	;volatile
   882  0010B4  9689               	bcf	3977,3,c	;volatile
   883                           
   884                           ;main.c: 93: {
   885                           ;main.c: 94: if (PORTAbits.RA5==1){key=7;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA5==1){};}
   886  0010B6  AA80               	btfss	3968,5,c	;volatile
   887  0010B8  D018               	goto	l181
   888  0010BA  0E07               	movlw	7
   889  0010BC  6E21               	movwf	_key,c
   890  0010BE  0E70               	movlw	low _buffer2
   891  0010C0  6E36               	movwf	sprintf@sp,c
   892  0010C2  0E00               	movlw	high _buffer2
   893  0010C4  6E37               	movwf	sprintf@sp+1,c
   894  0010C6  0E20               	movlw	low STR_2
   895  0010C8  6E38               	movwf	sprintf@f,c
   896  0010CA  0E0F               	movlw	high STR_2
   897  0010CC  6E39               	movwf	sprintf@f+1,c
   898  0010CE  C021  F03A         	movff	_key,?_sprintf+4
   899  0010D2  6A3B               	clrf	?_sprintf+5,c
   900  0010D4  EC06  F009         	call	_sprintf	;wreg free
   901  0010D8  0E70               	movlw	low _buffer2
   902  0010DA  6E32               	movwf	lcd_putrs@ptr,c
   903  0010DC  0E00               	movlw	high _buffer2
   904  0010DE  6E33               	movwf	lcd_putrs@ptr+1,c
   905  0010E0  ECF9  F00C         	call	_lcd_putrs	;wreg free
   906  0010E4  D000               	goto	l182
   907  0010E6                     l182:
   908  0010E6  BA80               	btfsc	3968,5,c	;volatile
   909  0010E8  D7FE               	goto	l182
   910  0010EA                     l181:
   911                           
   912                           ;main.c: 95: if (PORTAbits.RA7==1){key=8;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA7==1){};}
   913  0010EA  AE80               	btfss	3968,7,c	;volatile
   914  0010EC  D018               	goto	l185
   915  0010EE  0E08               	movlw	8
   916  0010F0  6E21               	movwf	_key,c
   917  0010F2  0E70               	movlw	low _buffer2
   918  0010F4  6E36               	movwf	sprintf@sp,c
   919  0010F6  0E00               	movlw	high _buffer2
   920  0010F8  6E37               	movwf	sprintf@sp+1,c
   921  0010FA  0E20               	movlw	low STR_2
   922  0010FC  6E38               	movwf	sprintf@f,c
   923  0010FE  0E0F               	movlw	high STR_2
   924  001100  6E39               	movwf	sprintf@f+1,c
   925  001102  C021  F03A         	movff	_key,?_sprintf+4
   926  001106  6A3B               	clrf	?_sprintf+5,c
   927  001108  EC06  F009         	call	_sprintf	;wreg free
   928  00110C  0E70               	movlw	low _buffer2
   929  00110E  6E32               	movwf	lcd_putrs@ptr,c
   930  001110  0E00               	movlw	high _buffer2
   931  001112  6E33               	movwf	lcd_putrs@ptr+1,c
   932  001114  ECF9  F00C         	call	_lcd_putrs	;wreg free
   933  001118  D000               	goto	l186
   934  00111A                     l186:
   935  00111A  BE80               	btfsc	3968,7,c	;volatile
   936  00111C  D7FE               	goto	l186
   937  00111E                     l185:
   938                           
   939                           ;main.c: 96: if (PORTAbits.RA6==1){key=9;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2);
      +                          while(PORTAbits.RA6==1){};}
   940  00111E  AC80               	btfss	3968,6,c	;volatile
   941  001120  D018               	goto	l189
   942  001122  0E09               	movlw	9
   943  001124  6E21               	movwf	_key,c
   944  001126  0E70               	movlw	low _buffer2
   945  001128  6E36               	movwf	sprintf@sp,c
   946  00112A  0E00               	movlw	high _buffer2
   947  00112C  6E37               	movwf	sprintf@sp+1,c
   948  00112E  0E20               	movlw	low STR_2
   949  001130  6E38               	movwf	sprintf@f,c
   950  001132  0E0F               	movlw	high STR_2
   951  001134  6E39               	movwf	sprintf@f+1,c
   952  001136  C021  F03A         	movff	_key,?_sprintf+4
   953  00113A  6A3B               	clrf	?_sprintf+5,c
   954  00113C  EC06  F009         	call	_sprintf	;wreg free
   955  001140  0E70               	movlw	low _buffer2
   956  001142  6E32               	movwf	lcd_putrs@ptr,c
   957  001144  0E00               	movlw	high _buffer2
   958  001146  6E33               	movwf	lcd_putrs@ptr+1,c
   959  001148  ECF9  F00C         	call	_lcd_putrs	;wreg free
   960  00114C  D000               	goto	l190
   961  00114E                     l190:
   962  00114E  BC80               	btfsc	3968,6,c	;volatile
   963  001150  D7FE               	goto	l190
   964  001152                     l189:
   965                           
   966                           ;main.c: 97: if (PORTCbits.RC2==1){key=13;lcd_putrs("C");while(PORTCbits.RC2==1){};}
   967  001152  A482               	btfss	3970,2,c	;volatile
   968  001154  D00B               	goto	l193
   969  001156  0E0D               	movlw	13
   970  001158  6E21               	movwf	_key,c
   971  00115A  0E2D               	movlw	low STR_13
   972  00115C  6E32               	movwf	lcd_putrs@ptr,c
   973  00115E  0E0F               	movlw	high STR_13
   974  001160  6E33               	movwf	lcd_putrs@ptr+1,c
   975  001162  ECF9  F00C         	call	_lcd_putrs	;wreg free
   976  001166  D000               	goto	l194
   977  001168                     l194:
   978  001168  B482               	btfsc	3970,2,c	;volatile
   979  00116A  D7FE               	goto	l194
   980  00116C                     l193:
   981                           
   982                           ;main.c: 98: }
   983                           ;main.c: 100: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
   984  00116C  9089               	bcf	3977,0,c	;volatile
   985  00116E  9289               	bcf	3977,1,c	;volatile
   986  001170  9489               	bcf	3977,2,c	;volatile
   987  001172  8689               	bsf	3977,3,c	;volatile
   988                           
   989                           ;main.c: 101: {
   990                           ;main.c: 102: if (PORTAbits.RA5==1){key=14;lcd_putrs("*");while(PORTAbits.RA5==1){};}
   991  001174  AA80               	btfss	3968,5,c	;volatile
   992  001176  D00B               	goto	l197
   993  001178  0E0E               	movlw	14
   994  00117A  6E21               	movwf	_key,c
   995  00117C  0E27               	movlw	low STR_14
   996  00117E  6E32               	movwf	lcd_putrs@ptr,c
   997  001180  0E0F               	movlw	high STR_14
   998  001182  6E33               	movwf	lcd_putrs@ptr+1,c
   999  001184  ECF9  F00C         	call	_lcd_putrs	;wreg free
  1000  001188  D000               	goto	l198
  1001  00118A                     l198:
  1002  00118A  BA80               	btfsc	3968,5,c	;volatile
  1003  00118C  D7FE               	goto	l198
  1004  00118E                     l197:
  1005                           
  1006                           ;main.c: 103: if (PORTAbits.RA7==1){key=0;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
  1007  00118E  AE80               	btfss	3968,7,c	;volatile
  1008  001190  D018               	goto	l201
  1009  001192  0E00               	movlw	0
  1010  001194  6E21               	movwf	_key,c
  1011  001196  0E70               	movlw	low _buffer2
  1012  001198  6E36               	movwf	sprintf@sp,c
  1013  00119A  0E00               	movlw	high _buffer2
  1014  00119C  6E37               	movwf	sprintf@sp+1,c
  1015  00119E  0E20               	movlw	low STR_2
  1016  0011A0  6E38               	movwf	sprintf@f,c
  1017  0011A2  0E0F               	movlw	high STR_2
  1018  0011A4  6E39               	movwf	sprintf@f+1,c
  1019  0011A6  C021  F03A         	movff	_key,?_sprintf+4
  1020  0011AA  6A3B               	clrf	?_sprintf+5,c
  1021  0011AC  EC06  F009         	call	_sprintf	;wreg free
  1022  0011B0  0E70               	movlw	low _buffer2
  1023  0011B2  6E32               	movwf	lcd_putrs@ptr,c
  1024  0011B4  0E00               	movlw	high _buffer2
  1025  0011B6  6E33               	movwf	lcd_putrs@ptr+1,c
  1026  0011B8  ECF9  F00C         	call	_lcd_putrs	;wreg free
  1027  0011BC  D000               	goto	l202
  1028  0011BE                     l202:
  1029  0011BE  BE80               	btfsc	3968,7,c	;volatile
  1030  0011C0  D7FE               	goto	l202
  1031  0011C2                     l201:
  1032                           
  1033                           ;main.c: 104: if (PORTAbits.RA6==1){key=15;lcd_putrs("#");while(PORTAbits.RA6==1){};}
  1034  0011C2  AC80               	btfss	3968,6,c	;volatile
  1035  0011C4  D00B               	goto	l205
  1036  0011C6  0E0F               	movlw	15
  1037  0011C8  6E21               	movwf	_key,c
  1038  0011CA  0E25               	movlw	low STR_16
  1039  0011CC  6E32               	movwf	lcd_putrs@ptr,c
  1040  0011CE  0E0F               	movlw	high STR_16
  1041  0011D0  6E33               	movwf	lcd_putrs@ptr+1,c
  1042  0011D2  ECF9  F00C         	call	_lcd_putrs	;wreg free
  1043  0011D6  D000               	goto	l206
  1044  0011D8                     l206:
  1045  0011D8  BC80               	btfsc	3968,6,c	;volatile
  1046  0011DA  D7FE               	goto	l206
  1047  0011DC                     l205:
  1048                           
  1049                           ;main.c: 105: if (PORTCbits.RC2==1){key=16;lcd_putrs("D");while(PORTCbits.RC2==1){};}
  1050  0011DC  A482               	btfss	3970,2,c	;volatile
  1051  0011DE  D00D               	goto	l2297
  1052  0011E0  0E10               	movlw	16
  1053  0011E2  6E21               	movwf	_key,c
  1054  0011E4  0E2F               	movlw	low STR_17
  1055  0011E6  6E32               	movwf	lcd_putrs@ptr,c
  1056  0011E8  0E0F               	movlw	high STR_17
  1057  0011EA  6E33               	movwf	lcd_putrs@ptr+1,c
  1058  0011EC  ECF9  F00C         	call	_lcd_putrs	;wreg free
  1059  0011F0  D000               	goto	l210
  1060  0011F2                     l210:
  1061  0011F2  A482               	btfss	3970,2,c	;volatile
  1062  0011F4  D002               	goto	l2297
  1063  0011F6  D7FD               	goto	l210
  1064  0011F8  D000               	goto	l2297
  1065  0011FA                     l2297:
  1066                           
  1067                           ;main.c: 106: }
  1068                           ;main.c: 108: _delay((unsigned long)((98)*(8000000/4000.0)));
  1069  0011FA  0EFF               	movlw	255
  1070  0011FC  6E49               	movwf	??_Write_Keyboard& (0+255),c
  1071  0011FE  0E8A               	movlw	138
  1072  001200                     u2057:
  1073  001200  2EE8               	decfsz	wreg,f,c
  1074  001202  D7FE               	goto	u2057
  1075  001204  2E49               	decfsz	??_Write_Keyboard& (0+255),f,c
  1076  001206  D7FC               	goto	u2057
  1077  001208  D000               	nop2	
  1078  00120A  0012               	return		;funcret
  1079  00120C                     __end_of_Write_Keyboard:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           postinc0	equ	0xFEE
  1086                           wreg	equ	0xFE8
  1087                           postdec1	equ	0xFE5
  1088                           fsr1l	equ	0xFE1
  1089                           
  1090 ;; *************** function _sprintf *****************
  1091 ;; Defined at:
  1092 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1095 ;;		 -> buffer2(20), 
  1096 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1097 ;;		 -> STR_15(5), STR_12(5), STR_11(5), STR_10(5), 
  1098 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_4(5), 
  1099 ;;		 -> STR_3(5), STR_2(5), 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  tmpval          4    0        struct .
  1102 ;;  cp              3    0        PTR const unsigned char 
  1103 ;;  width           2   28[COMRAM] int 
  1104 ;;  val             2   25[COMRAM] unsigned int 
  1105 ;;  ap              2   22[COMRAM] PTR void [1]
  1106 ;;		 -> ?_sprintf(2), 
  1107 ;;  len             2    0        unsigned int 
  1108 ;;  c               1   30[COMRAM] char 
  1109 ;;  prec            1   27[COMRAM] char 
  1110 ;;  flag            1   24[COMRAM] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  2   12[COMRAM] int 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1120 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1121 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1123 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;Total ram usage:       19 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    1
  1127 ;; This function calls:
  1128 ;;		___lwdiv
  1129 ;;		___lwmod
  1130 ;;		___wmul
  1131 ;;		_isdigit
  1132 ;; This function is called by:
  1133 ;;		_Write_Keyboard
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text2
  1138  00120C                     __ptext2:
  1139                           	opt stack 0
  1140  00120C                     _sprintf:
  1141                           	opt stack 28
  1142                           
  1143                           ;doprnt.c: 494: va_list ap;
  1144                           ;doprnt.c: 499: signed char c;
  1145                           ;doprnt.c: 501: int width;
  1146                           ;doprnt.c: 506: signed char prec;
  1147                           ;doprnt.c: 508: unsigned char flag;
  1148                           ;doprnt.c: 523: union {
  1149                           ;doprnt.c: 524: unsigned long vd;
  1150                           ;doprnt.c: 525: double integ;
  1151                           ;doprnt.c: 526: } tmpval;
  1152                           ;doprnt.c: 528: unsigned int val;
  1153                           ;doprnt.c: 529: unsigned len;
  1154                           ;doprnt.c: 530: const char * cp;
  1155                           ;doprnt.c: 533: *ap = __va_start();
  1156                           
  1157                           ;incstack = 0
  1158  00120C  0E3A               	movlw	low (?_sprintf+4)
  1159  00120E  6E40               	movwf	sprintf@ap,c
  1160  001210  0E00               	movlw	high (?_sprintf+4)
  1161  001212  6E41               	movwf	sprintf@ap+1,c
  1162                           
  1163                           ;doprnt.c: 536: while(c = *f++) {
  1164  001214  D117               	goto	l2175
  1165  001216                     l2093:
  1166                           
  1167                           ;doprnt.c: 538: if(c != '%')
  1168  001216  0E25               	movlw	37
  1169  001218  1848               	xorwf	sprintf@c,w,c
  1170  00121A  B4D8               	btfsc	status,2,c
  1171  00121C  D009               	goto	l2099
  1172                           
  1173                           ;doprnt.c: 540: {
  1174                           ;doprnt.c: 541: ((*sp++ = (c)));
  1175  00121E  C036  FFD9         	movff	sprintf@sp,fsr2l
  1176  001222  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1177  001226  C048  FFDF         	movff	sprintf@c,indf2
  1178  00122A  4A36               	infsnz	sprintf@sp,f,c
  1179  00122C  2A37               	incf	sprintf@sp+1,f,c
  1180                           
  1181                           ;doprnt.c: 542: continue;
  1182  00122E  D10A               	goto	l2175
  1183  001230                     l2099:
  1184                           
  1185                           ;doprnt.c: 543: }
  1186                           ;doprnt.c: 546: width = 0;
  1187  001230  0E00               	movlw	0
  1188  001232  6E47               	movwf	sprintf@width+1,c
  1189  001234  0E00               	movlw	0
  1190  001236  6E46               	movwf	sprintf@width,c
  1191                           
  1192                           ;doprnt.c: 548: flag = 0;
  1193  001238  0E00               	movlw	0
  1194  00123A  6E42               	movwf	sprintf@flag,c
  1195                           
  1196                           ;doprnt.c: 551: switch(*f) {
  1197                           
  1198                           ;doprnt.c: 550: for(;;) {
  1199  00123C  D005               	goto	l2105
  1200  00123E                     l2101:
  1201                           
  1202                           ;doprnt.c: 580: flag |= 0x04;
  1203  00123E  8442               	bsf	sprintf@flag,2,c
  1204                           
  1205                           ;doprnt.c: 581: f++;
  1206  001240  4A38               	infsnz	sprintf@f,f,c
  1207  001242  2A39               	incf	sprintf@f+1,f,c
  1208                           
  1209                           ;doprnt.c: 582: continue;
  1210  001244  D001               	goto	l2105
  1211                           
  1212                           ;doprnt.c: 584: }
  1213  001246  D00B               	goto	l2107
  1214  001248                     l2105:
  1215  001248  C038  FFF6         	movff	sprintf@f,tblptrl
  1216  00124C  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1217  001250                     	if	0	;tblptru may be non-zero
  1218  001250                     	endif
  1219  001250                     	if	0	;tblptru may be non-zero
  1220  001250                     	endif
  1221  001250  0008               	tblrd		*
  1222  001252  50F5               	movf	tablat,w,c
  1223                           
  1224                           ; Switch size 1, requested type "space"
  1225                           ; Number of cases is 1, Range of values is 48 to 48
  1226                           ; switch strategies available:
  1227                           ; Name         Instructions Cycles
  1228                           ; simple_byte            4     3 (average)
  1229                           ;	Chosen strategy is simple_byte
  1230  001254  0A30               	xorlw	48	; case 48
  1231  001256  B4D8               	btfsc	status,2,c
  1232  001258  D7F2               	goto	l2101
  1233                           
  1234                           ;doprnt.c: 585: break;
  1235  00125A  D001               	goto	l2107
  1236                           
  1237                           ;doprnt.c: 586: }
  1238  00125C  D7F5               	goto	l2105
  1239  00125E                     l2107:
  1240                           
  1241                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1242  00125E  C038  FFF6         	movff	sprintf@f,tblptrl
  1243  001262  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1244  001266                     	if	0	;tblptru may be non-zero
  1245  001266                     	endif
  1246  001266                     	if	0	;tblptru may be non-zero
  1247  001266                     	endif
  1248  001266  0008               	tblrd		*
  1249  001268  50F5               	movf	tablat,w,c
  1250  00126A  EC08  F00E         	call	_isdigit
  1251  00126E  A0D8               	btfss	status,0,c
  1252  001270  D03A               	goto	l2123
  1253                           
  1254                           ;doprnt.c: 598: width = 0;
  1255  001272  0E00               	movlw	0
  1256  001274  6E47               	movwf	sprintf@width+1,c
  1257  001276  0E00               	movlw	0
  1258  001278  6E46               	movwf	sprintf@width,c
  1259  00127A  D000               	goto	l2111
  1260  00127C                     l2111:
  1261                           
  1262                           ;doprnt.c: 600: width *= 10;
  1263  00127C  C046  F02A         	movff	sprintf@width,___wmul@multiplier
  1264  001280  C047  F02B         	movff	sprintf@width+1,___wmul@multiplier+1
  1265  001284  0E00               	movlw	0
  1266  001286  6E2D               	movwf	___wmul@multiplicand+1,c
  1267  001288  0E0A               	movlw	10
  1268  00128A  6E2C               	movwf	___wmul@multiplicand,c
  1269  00128C  ECCE  F00D         	call	___wmul	;wreg free
  1270  001290  C02A  F046         	movff	?___wmul,sprintf@width
  1271  001294  C02B  F047         	movff	?___wmul+1,sprintf@width+1
  1272                           
  1273                           ;doprnt.c: 601: width += *f++ - '0';
  1274  001298  0ED0               	movlw	208
  1275  00129A  6E3C               	movwf	??_sprintf& (0+255),c
  1276  00129C  0EFF               	movlw	255
  1277  00129E  6E3D               	movwf	(??_sprintf+1)& (0+255),c
  1278  0012A0  C038  FFF6         	movff	sprintf@f,tblptrl
  1279  0012A4  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1280  0012A8                     	if	0	;tblptru may be non-zero
  1281  0012A8                     	endif
  1282  0012A8                     	if	0	;tblptru may be non-zero
  1283  0012A8                     	endif
  1284  0012A8  0008               	tblrd		*
  1285  0012AA  50F5               	movf	tablat,w,c
  1286  0012AC  6E3E               	movwf	(??_sprintf+2)& (0+255),c
  1287  0012AE  6A3F               	clrf	(??_sprintf+3)& (0+255),c
  1288  0012B0  503C               	movf	??_sprintf,w,c
  1289  0012B2  263E               	addwf	??_sprintf+2,f,c
  1290  0012B4  503D               	movf	??_sprintf+1,w,c
  1291  0012B6  223F               	addwfc	??_sprintf+3,f,c
  1292  0012B8  503E               	movf	??_sprintf+2,w,c
  1293  0012BA  2646               	addwf	sprintf@width,f,c
  1294  0012BC  503F               	movf	??_sprintf+3,w,c
  1295  0012BE  2247               	addwfc	sprintf@width+1,f,c
  1296  0012C0  4A38               	infsnz	sprintf@f,f,c
  1297  0012C2  2A39               	incf	sprintf@f+1,f,c
  1298                           
  1299                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1300  0012C4  C038  FFF6         	movff	sprintf@f,tblptrl
  1301  0012C8  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1302  0012CC                     	if	0	;tblptru may be non-zero
  1303  0012CC                     	endif
  1304  0012CC                     	if	0	;tblptru may be non-zero
  1305  0012CC                     	endif
  1306  0012CC  0008               	tblrd		*
  1307  0012CE  50F5               	movf	tablat,w,c
  1308  0012D0  EC08  F00E         	call	_isdigit
  1309  0012D4  A0D8               	btfss	status,0,c
  1310  0012D6  D007               	goto	l2123
  1311  0012D8  D7D1               	goto	l2111
  1312                           
  1313                           ;doprnt.c: 608: }
  1314                           ;doprnt.c: 635: switch(c = *f++) {
  1315  0012DA  D005               	goto	l2123
  1316                           
  1317                           ;doprnt.c: 638: goto alldone;
  1318                           
  1319                           ;doprnt.c: 637: case 0:
  1320  0012DC  D0C1               	goto	l2177
  1321                           
  1322                           ;doprnt.c: 813: continue;
  1323                           
  1324                           ;doprnt.c: 802: default:
  1325  0012DE  D0B2               	goto	l2175
  1326  0012E0                     l2119:
  1327                           
  1328                           ;doprnt.c: 818: flag |= 0xC0;
  1329  0012E0  0EC0               	movlw	192
  1330  0012E2  1242               	iorwf	sprintf@flag,f,c
  1331                           
  1332                           ;doprnt.c: 822: }
  1333                           
  1334                           ;doprnt.c: 819: break;
  1335  0012E4  D011               	goto	l2125
  1336  0012E6                     l2123:
  1337  0012E6  C038  FFF6         	movff	sprintf@f,tblptrl
  1338  0012EA  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1339  0012EE  4A38               	infsnz	sprintf@f,f,c
  1340  0012F0  2A39               	incf	sprintf@f+1,f,c
  1341  0012F2                     	if	0	;tblptru may be non-zero
  1342  0012F2                     	endif
  1343  0012F2                     	if	0	;tblptru may be non-zero
  1344  0012F2                     	endif
  1345  0012F2  0008               	tblrd		*
  1346  0012F4  CFF5 F048          	movff	tablat,sprintf@c
  1347  0012F8  5048               	movf	sprintf@c,w,c
  1348                           
  1349                           ; Switch size 1, requested type "space"
  1350                           ; Number of cases is 2, Range of values is 0 to 117
  1351                           ; switch strategies available:
  1352                           ; Name         Instructions Cycles
  1353                           ; simple_byte            7     4 (average)
  1354                           ;	Chosen strategy is simple_byte
  1355  0012FA  0A00               	xorlw	0	; case 0
  1356  0012FC  B4D8               	btfsc	status,2,c
  1357  0012FE  D0B0               	goto	l2177
  1358  001300  0A75               	xorlw	117	; case 117
  1359  001302  B4D8               	btfsc	status,2,c
  1360  001304  D7ED               	goto	l2119
  1361  001306  D09E               	goto	l2175
  1362  001308                     l2125:
  1363                           
  1364                           ;doprnt.c: 1273: {
  1365                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1366  001308  C040  FFD9         	movff	sprintf@ap,fsr2l
  1367  00130C  C041  FFDA         	movff	sprintf@ap+1,fsr2h
  1368  001310  CFDE F043          	movff	postinc2,sprintf@val
  1369  001314  CFDD F044          	movff	postdec2,sprintf@val+1
  1370  001318  0E02               	movlw	2
  1371  00131A  2640               	addwf	sprintf@ap,f,c
  1372  00131C  0E00               	movlw	0
  1373  00131E  2241               	addwfc	sprintf@ap+1,f,c
  1374                           
  1375                           ;doprnt.c: 1287: }
  1376                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1377  001320  0E01               	movlw	1
  1378  001322  6E48               	movwf	sprintf@c,c
  1379  001324                     l2131:
  1380  001324  0E05               	movlw	5
  1381  001326  1848               	xorwf	sprintf@c,w,c
  1382  001328  B4D8               	btfsc	status,2,c
  1383  00132A  D016               	goto	l2143
  1384  00132C  D001               	goto	l2135
  1385  00132E  D014               	goto	l2143
  1386  001330                     l2135:
  1387                           
  1388                           ;doprnt.c: 1306: if(val < dpowers[c])
  1389  001330  5048               	movf	sprintf@c,w,c
  1390  001332  0D02               	mullw	2
  1391  001334  0E01               	movlw	low _dpowers
  1392  001336  24F3               	addwf	prodl,w,c
  1393  001338  6EF6               	movwf	tblptrl,c
  1394  00133A  0E0F               	movlw	high _dpowers
  1395  00133C  20F4               	addwfc	prodh,w,c
  1396  00133E  6EF7               	movwf	tblptrh,c
  1397  001340                     	if	0	;There are less than 3 active tblptr bytes
  1398  001340                     	endif
  1399  001340  0009               	tblrd		*+
  1400  001342  50F5               	movf	tablat,w,c
  1401  001344  5C43               	subwf	sprintf@val,w,c
  1402  001346  0009               	tblrd		*+
  1403  001348  50F5               	movf	tablat,w,c
  1404  00134A  5844               	subwfb	sprintf@val+1,w,c
  1405  00134C  A0D8               	btfss	status,0,c
  1406  00134E  D004               	goto	l2143
  1407  001350  D001               	goto	l2139
  1408                           
  1409                           ;doprnt.c: 1307: break;
  1410  001352  D002               	goto	l2143
  1411  001354                     l2139:
  1412  001354  2A48               	incf	sprintf@c,f,c
  1413  001356  D7E6               	goto	l2131
  1414  001358                     l2143:
  1415                           
  1416                           ;doprnt.c: 1381: if(width > c)
  1417  001358  0E80               	movlw	128
  1418  00135A  BE48               	btfsc	sprintf@c,7,c
  1419  00135C  0E7F               	movlw	127
  1420  00135E  6E3C               	movwf	??_sprintf& (0+255),c
  1421  001360  5046               	movf	sprintf@width,w,c
  1422  001362  5C48               	subwf	sprintf@c,w,c
  1423  001364  5047               	movf	sprintf@width+1,w,c
  1424  001366  0A80               	xorlw	128
  1425  001368  583C               	subwfb	??_sprintf& (0+255),w,c
  1426  00136A  B0D8               	btfsc	status,0,c
  1427  00136C  D007               	goto	l2147
  1428                           
  1429                           ;doprnt.c: 1382: width -= c;
  1430  00136E  5048               	movf	sprintf@c,w,c
  1431  001370  5E46               	subwf	sprintf@width,f,c
  1432  001372  0E00               	movlw	0
  1433  001374  BE48               	btfsc	sprintf@c,7,c
  1434  001376  0EFF               	movlw	255
  1435  001378  5A47               	subwfb	sprintf@width+1,f,c
  1436  00137A  D005               	goto	l2149
  1437  00137C                     l2147:
  1438                           
  1439                           ;doprnt.c: 1383: else
  1440                           ;doprnt.c: 1384: width = 0;
  1441  00137C  0E00               	movlw	0
  1442  00137E  6E47               	movwf	sprintf@width+1,c
  1443  001380  0E00               	movlw	0
  1444  001382  6E46               	movwf	sprintf@width,c
  1445  001384  D000               	goto	l2149
  1446  001386                     l2149:
  1447                           
  1448                           ;doprnt.c: 1387: if(flag & 0x04) {
  1449  001386  A442               	btfss	sprintf@flag,2,c
  1450  001388  D015               	goto	l2159
  1451                           
  1452                           ;doprnt.c: 1415: if(width)
  1453  00138A  5046               	movf	sprintf@width,w,c
  1454  00138C  1047               	iorwf	sprintf@width+1,w,c
  1455  00138E  B4D8               	btfsc	status,2,c
  1456  001390  D026               	goto	l316
  1457  001392                     l2153:
  1458                           
  1459                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1460  001392  C036  FFD9         	movff	sprintf@sp,fsr2l
  1461  001396  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1462  00139A  0E30               	movlw	48
  1463  00139C  6EDF               	movwf	indf2,c
  1464  00139E  4A36               	infsnz	sprintf@sp,f,c
  1465  0013A0  2A37               	incf	sprintf@sp+1,f,c
  1466                           
  1467                           ;doprnt.c: 1418: while(--width);
  1468  0013A2  0646               	decf	sprintf@width,f,c
  1469  0013A4  A0D8               	btfss	status,0,c
  1470  0013A6  0647               	decf	sprintf@width+1,f,c
  1471  0013A8  5046               	movf	sprintf@width,w,c
  1472  0013AA  1047               	iorwf	sprintf@width+1,w,c
  1473  0013AC  B4D8               	btfsc	status,2,c
  1474  0013AE  D017               	goto	l316
  1475  0013B0  D7F0               	goto	l2153
  1476                           
  1477                           ;doprnt.c: 1420: } else
  1478  0013B2  D015               	goto	l316
  1479  0013B4                     l2159:
  1480                           
  1481                           ;doprnt.c: 1422: {
  1482                           ;doprnt.c: 1424: if(width
  1483                           ;doprnt.c: 1428: )
  1484  0013B4  5046               	movf	sprintf@width,w,c
  1485  0013B6  1047               	iorwf	sprintf@width+1,w,c
  1486  0013B8  B4D8               	btfsc	status,2,c
  1487  0013BA  D011               	goto	l316
  1488  0013BC                     l2161:
  1489                           
  1490                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1491  0013BC  C036  FFD9         	movff	sprintf@sp,fsr2l
  1492  0013C0  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1493  0013C4  0E20               	movlw	32
  1494  0013C6  6EDF               	movwf	indf2,c
  1495  0013C8  4A36               	infsnz	sprintf@sp,f,c
  1496  0013CA  2A37               	incf	sprintf@sp+1,f,c
  1497                           
  1498                           ;doprnt.c: 1431: while(--width);
  1499  0013CC  0646               	decf	sprintf@width,f,c
  1500  0013CE  A0D8               	btfss	status,0,c
  1501  0013D0  0647               	decf	sprintf@width+1,f,c
  1502  0013D2  5046               	movf	sprintf@width,w,c
  1503  0013D4  1047               	iorwf	sprintf@width+1,w,c
  1504  0013D6  B4D8               	btfsc	status,2,c
  1505  0013D8  D002               	goto	l316
  1506  0013DA  D7F0               	goto	l2161
  1507  0013DC  D000               	goto	l316
  1508  0013DE                     l316:
  1509                           
  1510                           ;doprnt.c: 1469: }
  1511                           ;doprnt.c: 1472: prec = c;
  1512  0013DE  C048  F045         	movff	sprintf@c,sprintf@prec
  1513                           
  1514                           ;doprnt.c: 1474: while(prec--) {
  1515  0013E2  D02A               	goto	l2173
  1516  0013E4                     l2167:
  1517                           
  1518                           ;doprnt.c: 1478: {
  1519                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1520  0013E4  5045               	movf	sprintf@prec,w,c
  1521  0013E6  0D02               	mullw	2
  1522  0013E8  0E01               	movlw	low _dpowers
  1523  0013EA  24F3               	addwf	prodl,w,c
  1524  0013EC  6EF6               	movwf	tblptrl,c
  1525  0013EE  0E0F               	movlw	high _dpowers
  1526  0013F0  20F4               	addwfc	prodh,w,c
  1527  0013F2  6EF7               	movwf	tblptrh,c
  1528  0013F4                     	if	0	;There are less than 3 active tblptr bytes
  1529  0013F4                     	endif
  1530  0013F4  0009               	tblrd		*+
  1531  0013F6  CFF5 F02C          	movff	tablat,___lwdiv@divisor
  1532  0013FA  000A               	tblrd		*-
  1533  0013FC  CFF5 F02D          	movff	tablat,___lwdiv@divisor+1
  1534  001400  C043  F02A         	movff	sprintf@val,___lwdiv@dividend
  1535  001404  C044  F02B         	movff	sprintf@val+1,___lwdiv@dividend+1
  1536  001408  ECCB  F00C         	call	___lwdiv	;wreg free
  1537  00140C  C02A  F031         	movff	?___lwdiv,___lwmod@dividend
  1538  001410  C02B  F032         	movff	?___lwdiv+1,___lwmod@dividend+1
  1539  001414  0E00               	movlw	0
  1540  001416  6E34               	movwf	___lwmod@divisor+1,c
  1541  001418  0E0A               	movlw	10
  1542  00141A  6E33               	movwf	___lwmod@divisor,c
  1543  00141C  EC23  F00D         	call	___lwmod	;wreg free
  1544  001420  5031               	movf	?___lwmod,w,c
  1545  001422  0F30               	addlw	48
  1546  001424  6E48               	movwf	sprintf@c,c
  1547                           
  1548                           ;doprnt.c: 1523: }
  1549                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1550  001426  C036  FFD9         	movff	sprintf@sp,fsr2l
  1551  00142A  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1552  00142E  C048  FFDF         	movff	sprintf@c,indf2
  1553  001432  4A36               	infsnz	sprintf@sp,f,c
  1554  001434  2A37               	incf	sprintf@sp+1,f,c
  1555  001436  D000               	goto	l2173
  1556  001438                     l2173:
  1557  001438  0645               	decf	sprintf@prec,f,c
  1558  00143A  2845               	incf	sprintf@prec,w,c
  1559  00143C  B4D8               	btfsc	status,2,c
  1560  00143E  D002               	goto	l2175
  1561  001440  D7D1               	goto	l2167
  1562  001442  D000               	goto	l2175
  1563  001444                     l2175:
  1564  001444  C038  FFF6         	movff	sprintf@f,tblptrl
  1565  001448  C039  FFF7         	movff	sprintf@f+1,tblptrh
  1566  00144C  4A38               	infsnz	sprintf@f,f,c
  1567  00144E  2A39               	incf	sprintf@f+1,f,c
  1568  001450                     	if	0	;tblptru may be non-zero
  1569  001450                     	endif
  1570  001450                     	if	0	;tblptru may be non-zero
  1571  001450                     	endif
  1572  001450  0008               	tblrd		*
  1573  001452  CFF5 F048          	movff	tablat,sprintf@c
  1574  001456  5048               	movf	sprintf@c,w,c
  1575  001458  B4D8               	btfsc	status,2,c
  1576  00145A  D002               	goto	l2177
  1577  00145C  D6DC               	goto	l2093
  1578  00145E  D000               	goto	l2177
  1579  001460                     l2177:
  1580                           
  1581                           ;doprnt.c: 1538: *sp = 0;
  1582  001460  C036  FFD9         	movff	sprintf@sp,fsr2l
  1583  001464  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  1584  001468  0E00               	movlw	0
  1585  00146A  6EDF               	movwf	indf2,c
  1586  00146C  0012               	return	
  1587                           
  1588                           ;doprnt.c: 1540: return 0;
  1589                           ;	Return value of _sprintf is never used
  1590  00146E  0012               	return		;funcret
  1591  001470                     __end_of_sprintf:
  1592                           	opt stack 0
  1593                           tblptru	equ	0xFF8
  1594                           tblptrh	equ	0xFF7
  1595                           tblptrl	equ	0xFF6
  1596                           tablat	equ	0xFF5
  1597                           prodh	equ	0xFF4
  1598                           prodl	equ	0xFF3
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           postdec1	equ	0xFE5
  1602                           fsr1l	equ	0xFE1
  1603                           indf2	equ	0xFDF
  1604                           postinc2	equ	0xFDE
  1605                           postdec2	equ	0xFDD
  1606                           fsr2h	equ	0xFDA
  1607                           fsr2l	equ	0xFD9
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function _isdigit *****************
  1611 ;; Defined at:
  1612 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  c               1    wreg     unsigned char 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  c               1    2[COMRAM] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;		None               void
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;Total ram usage:        3 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_sprintf
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text3
  1640  001C10                     __ptext3:
  1641                           	opt stack 0
  1642  001C10                     _isdigit:
  1643                           	opt stack 28
  1644                           
  1645                           ;incstack = 0
  1646                           ;isdigit@c stored from wreg
  1647  001C10  6E2C               	movwf	isdigit@c,c
  1648  001C12  0E00               	movlw	0
  1649  001C14  6E2B               	movwf	_isdigit$2041,c
  1650  001C16  0E3A               	movlw	58
  1651  001C18  602C               	cpfslt	isdigit@c,c
  1652  001C1A  D006               	goto	l1907
  1653  001C1C  0E2F               	movlw	47
  1654  001C1E  642C               	cpfsgt	isdigit@c,c
  1655  001C20  D003               	goto	l1907
  1656  001C22  0E01               	movlw	1
  1657  001C24  6E2B               	movwf	_isdigit$2041,c
  1658  001C26  D000               	goto	l1907
  1659  001C28                     l1907:
  1660  001C28  C02B  F02A         	movff	_isdigit$2041,??_isdigit
  1661  001C2C  302A               	rrcf	??_isdigit,w,c
  1662  001C2E  0012               	return	
  1663  001C30  0012               	return		;funcret
  1664  001C32                     __end_of_isdigit:
  1665                           	opt stack 0
  1666                           tblptru	equ	0xFF8
  1667                           tblptrh	equ	0xFF7
  1668                           tblptrl	equ	0xFF6
  1669                           tablat	equ	0xFF5
  1670                           prodh	equ	0xFF4
  1671                           prodl	equ	0xFF3
  1672                           postinc0	equ	0xFEE
  1673                           wreg	equ	0xFE8
  1674                           postdec1	equ	0xFE5
  1675                           fsr1l	equ	0xFE1
  1676                           indf2	equ	0xFDF
  1677                           postinc2	equ	0xFDE
  1678                           postdec2	equ	0xFDD
  1679                           fsr2h	equ	0xFDA
  1680                           fsr2l	equ	0xFD9
  1681                           status	equ	0xFD8
  1682                           
  1683 ;; *************** function ___wmul *****************
  1684 ;; Defined at:
  1685 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  multiplier      2    0[COMRAM] unsigned int 
  1688 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  product         2    4[COMRAM] unsigned int 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  2    0[COMRAM] unsigned int 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, prodl, prodh
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1703 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1704 ;;Total ram usage:        6 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_sprintf
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text4
  1714  001B9C                     __ptext4:
  1715                           	opt stack 0
  1716  001B9C                     ___wmul:
  1717                           	opt stack 28
  1718                           
  1719                           ;incstack = 0
  1720  001B9C  502A               	movf	___wmul@multiplier,w,c
  1721  001B9E  022C               	mulwf	___wmul@multiplicand,c
  1722  001BA0  CFF3 F02E          	movff	prodl,___wmul@product
  1723  001BA4  CFF4 F02F          	movff	prodh,___wmul@product+1
  1724  001BA8  502A               	movf	___wmul@multiplier,w,c
  1725  001BAA  022D               	mulwf	___wmul@multiplicand+1,c
  1726  001BAC  50F3               	movf	prodl,w,c
  1727  001BAE  262F               	addwf	___wmul@product+1,f,c
  1728  001BB0  502B               	movf	___wmul@multiplier+1,w,c
  1729  001BB2  022C               	mulwf	___wmul@multiplicand,c
  1730  001BB4  50F3               	movf	prodl,w,c
  1731  001BB6  262F               	addwf	___wmul@product+1,f,c
  1732  001BB8  C02E  F02A         	movff	___wmul@product,?___wmul
  1733  001BBC  C02F  F02B         	movff	___wmul@product+1,?___wmul+1
  1734  001BC0  0012               	return	
  1735  001BC2  0012               	return		;funcret
  1736  001BC4                     __end_of___wmul:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           postdec1	equ	0xFE5
  1747                           fsr1l	equ	0xFE1
  1748                           indf2	equ	0xFDF
  1749                           postinc2	equ	0xFDE
  1750                           postdec2	equ	0xFDD
  1751                           fsr2h	equ	0xFDA
  1752                           fsr2l	equ	0xFD9
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function ___lwmod *****************
  1756 ;; Defined at:
  1757 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  dividend        2    7[COMRAM] unsigned int 
  1760 ;;  divisor         2    9[COMRAM] unsigned int 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  counter         1   11[COMRAM] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2    7[COMRAM] unsigned int 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;Total ram usage:        5 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_sprintf
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text5
  1786  001A46                     __ptext5:
  1787                           	opt stack 0
  1788  001A46                     ___lwmod:
  1789                           	opt stack 28
  1790                           
  1791                           ;incstack = 0
  1792  001A46  5033               	movf	___lwmod@divisor,w,c
  1793  001A48  1034               	iorwf	___lwmod@divisor+1,w,c
  1794  001A4A  B4D8               	btfsc	status,2,c
  1795  001A4C  D01D               	goto	l970
  1796  001A4E  0E01               	movlw	1
  1797  001A50  6E35               	movwf	___lwmod@counter,c
  1798  001A52  D005               	goto	l1989
  1799  001A54                     l1987:
  1800  001A54  90D8               	bcf	status,0,c
  1801  001A56  3633               	rlcf	___lwmod@divisor,f,c
  1802  001A58  3634               	rlcf	___lwmod@divisor+1,f,c
  1803  001A5A  2A35               	incf	___lwmod@counter,f,c
  1804  001A5C  D000               	goto	l1989
  1805  001A5E                     l1989:
  1806  001A5E  BE34               	btfsc	___lwmod@divisor+1,7,c
  1807  001A60  D002               	goto	l1991
  1808  001A62  D7F8               	goto	l1987
  1809  001A64  D000               	goto	l1991
  1810  001A66                     l1991:
  1811  001A66  5033               	movf	___lwmod@divisor,w,c
  1812  001A68  5C31               	subwf	___lwmod@dividend,w,c
  1813  001A6A  5034               	movf	___lwmod@divisor+1,w,c
  1814  001A6C  5832               	subwfb	___lwmod@dividend+1,w,c
  1815  001A6E  A0D8               	btfss	status,0,c
  1816  001A70  D005               	goto	l1995
  1817  001A72  5033               	movf	___lwmod@divisor,w,c
  1818  001A74  5E31               	subwf	___lwmod@dividend,f,c
  1819  001A76  5034               	movf	___lwmod@divisor+1,w,c
  1820  001A78  5A32               	subwfb	___lwmod@dividend+1,f,c
  1821  001A7A  D000               	goto	l1995
  1822  001A7C                     l1995:
  1823  001A7C  90D8               	bcf	status,0,c
  1824  001A7E  3234               	rrcf	___lwmod@divisor+1,f,c
  1825  001A80  3233               	rrcf	___lwmod@divisor,f,c
  1826  001A82  2E35               	decfsz	___lwmod@counter,f,c
  1827  001A84  D7F0               	goto	l1991
  1828  001A86  D000               	goto	l970
  1829  001A88                     l970:
  1830  001A88  C031  F031         	movff	___lwmod@dividend,?___lwmod
  1831  001A8C  C032  F032         	movff	___lwmod@dividend+1,?___lwmod+1
  1832  001A90  0012               	return		;funcret
  1833  001A92                     __end_of___lwmod:
  1834                           	opt stack 0
  1835                           tblptru	equ	0xFF8
  1836                           tblptrh	equ	0xFF7
  1837                           tblptrl	equ	0xFF6
  1838                           tablat	equ	0xFF5
  1839                           prodh	equ	0xFF4
  1840                           prodl	equ	0xFF3
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           postdec1	equ	0xFE5
  1844                           fsr1l	equ	0xFE1
  1845                           indf2	equ	0xFDF
  1846                           postinc2	equ	0xFDE
  1847                           postdec2	equ	0xFDD
  1848                           fsr2h	equ	0xFDA
  1849                           fsr2l	equ	0xFD9
  1850                           status	equ	0xFD8
  1851                           
  1852 ;; *************** function ___lwdiv *****************
  1853 ;; Defined at:
  1854 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  dividend        2    0[COMRAM] unsigned int 
  1857 ;;  divisor         2    2[COMRAM] unsigned int 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  quotient        2    4[COMRAM] unsigned int 
  1860 ;;  counter         1    6[COMRAM] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  2    0[COMRAM] unsigned int 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;Total ram usage:        7 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_sprintf
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text6
  1884  001996                     __ptext6:
  1885                           	opt stack 0
  1886  001996                     ___lwdiv:
  1887                           	opt stack 28
  1888                           
  1889                           ;incstack = 0
  1890  001996  0E00               	movlw	0
  1891  001998  6E2F               	movwf	___lwdiv@quotient+1,c
  1892  00199A  0E00               	movlw	0
  1893  00199C  6E2E               	movwf	___lwdiv@quotient,c
  1894  00199E  502C               	movf	___lwdiv@divisor,w,c
  1895  0019A0  102D               	iorwf	___lwdiv@divisor+1,w,c
  1896  0019A2  B4D8               	btfsc	status,2,c
  1897  0019A4  D021               	goto	l960
  1898  0019A6  0E01               	movlw	1
  1899  0019A8  6E30               	movwf	___lwdiv@counter,c
  1900  0019AA  D005               	goto	l1969
  1901  0019AC                     l1967:
  1902  0019AC  90D8               	bcf	status,0,c
  1903  0019AE  362C               	rlcf	___lwdiv@divisor,f,c
  1904  0019B0  362D               	rlcf	___lwdiv@divisor+1,f,c
  1905  0019B2  2A30               	incf	___lwdiv@counter,f,c
  1906  0019B4  D000               	goto	l1969
  1907  0019B6                     l1969:
  1908  0019B6  BE2D               	btfsc	___lwdiv@divisor+1,7,c
  1909  0019B8  D002               	goto	l1971
  1910  0019BA  D7F8               	goto	l1967
  1911  0019BC  D000               	goto	l1971
  1912  0019BE                     l1971:
  1913  0019BE  90D8               	bcf	status,0,c
  1914  0019C0  362E               	rlcf	___lwdiv@quotient,f,c
  1915  0019C2  362F               	rlcf	___lwdiv@quotient+1,f,c
  1916  0019C4  502C               	movf	___lwdiv@divisor,w,c
  1917  0019C6  5C2A               	subwf	___lwdiv@dividend,w,c
  1918  0019C8  502D               	movf	___lwdiv@divisor+1,w,c
  1919  0019CA  582B               	subwfb	___lwdiv@dividend+1,w,c
  1920  0019CC  A0D8               	btfss	status,0,c
  1921  0019CE  D006               	goto	l1979
  1922  0019D0  502C               	movf	___lwdiv@divisor,w,c
  1923  0019D2  5E2A               	subwf	___lwdiv@dividend,f,c
  1924  0019D4  502D               	movf	___lwdiv@divisor+1,w,c
  1925  0019D6  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  1926  0019D8  802E               	bsf	___lwdiv@quotient,0,c
  1927  0019DA  D000               	goto	l1979
  1928  0019DC                     l1979:
  1929  0019DC  90D8               	bcf	status,0,c
  1930  0019DE  322D               	rrcf	___lwdiv@divisor+1,f,c
  1931  0019E0  322C               	rrcf	___lwdiv@divisor,f,c
  1932  0019E2  2E30               	decfsz	___lwdiv@counter,f,c
  1933  0019E4  D7EC               	goto	l1971
  1934  0019E6  D000               	goto	l960
  1935  0019E8                     l960:
  1936  0019E8  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  1937  0019EC  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1938  0019F0  0012               	return		;funcret
  1939  0019F2                     __end_of___lwdiv:
  1940                           	opt stack 0
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1l	equ	0xFE1
  1951                           indf2	equ	0xFDF
  1952                           postinc2	equ	0xFDE
  1953                           postdec2	equ	0xFDD
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _Setup *****************
  1959 ;; Defined at:
  1960 ;;		line 44 in file "main.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;		None               void
  1967 ;; Registers used:
  1968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    3
  1981 ;; This function calls:
  1982 ;;		_Write_RTC
  1983 ;;		_lcd_comand
  1984 ;;		_lcd_init
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text7
  1991  001ADE                     __ptext7:
  1992                           	opt stack 0
  1993  001ADE                     _Setup:
  1994                           	opt stack 27
  1995                           
  1996                           ;main.c: 46: OSCTUNEbits.INTSRC=1;
  1997                           
  1998                           ;incstack = 0
  1999  001ADE  8E9B               	bsf	3995,7,c	;volatile
  2000                           
  2001                           ;main.c: 47: OSCTUNEbits.PLLEN=0;
  2002  001AE0  9C9B               	bcf	3995,6,c	;volatile
  2003                           
  2004                           ;main.c: 48: OSCCONbits.IRCF0=1;
  2005  001AE2  88D3               	bsf	4051,4,c	;volatile
  2006                           
  2007                           ;main.c: 49: OSCCONbits.IRCF1=1;
  2008  001AE4  8AD3               	bsf	4051,5,c	;volatile
  2009                           
  2010                           ;main.c: 50: OSCCONbits.IRCF2=1;
  2011  001AE6  8CD3               	bsf	4051,6,c	;volatile
  2012                           
  2013                           ;main.c: 51: OSCCONbits.SCS0=0;
  2014  001AE8  90D3               	bcf	4051,0,c	;volatile
  2015                           
  2016                           ;main.c: 52: OSCCONbits.SCS1=0;
  2017  001AEA  92D3               	bcf	4051,1,c	;volatile
  2018                           
  2019                           ;main.c: 53: TRISA = 0b11110000;
  2020  001AEC  0EF0               	movlw	240
  2021  001AEE  6E92               	movwf	3986,c	;volatile
  2022                           
  2023                           ;main.c: 54: TRISB = 0;
  2024  001AF0  0E00               	movlw	0
  2025  001AF2  6E93               	movwf	3987,c	;volatile
  2026                           
  2027                           ;main.c: 55: TRISC = 0b00000111;
  2028  001AF4  0E07               	movlw	7
  2029  001AF6  6E94               	movwf	3988,c	;volatile
  2030                           
  2031                           ;main.c: 59: ANCON0=0b11111111;
  2032  001AF8  010F               	movlb	15	; () banked
  2033  001AFA  6948               	setf	72,b	;volatile
  2034                           
  2035                           ; BSR set to: 15
  2036                           ;main.c: 61: ANCON1=0b11111111;
  2037  001AFC  010F               	movlb	15	; () banked
  2038  001AFE  6949               	setf	73,b	;volatile
  2039                           
  2040                           ;main.c: 62: ADCON0=0b00101101;
  2041  001B00  0E2D               	movlw	45
  2042  001B02  6EC2               	movwf	4034,c	;volatile
  2043                           
  2044                           ;main.c: 63: ADCON1=0b00010000;
  2045  001B04  0E10               	movlw	16
  2046  001B06  6EC1               	movwf	4033,c	;volatile
  2047                           
  2048                           ; BSR set to: 15
  2049                           ;main.c: 64: RTCCFGbits.RTCEN=1;
  2050  001B08  010F               	movlb	15	; () banked
  2051  001B0A  8F3F               	bsf	63,7,b	;volatile
  2052                           
  2053                           ; BSR set to: 15
  2054                           ;main.c: 65: RTCCFGbits.RTCWREN=1;
  2055  001B0C  010F               	movlb	15	; () banked
  2056  001B0E  8B3F               	bsf	63,5,b	;volatile
  2057                           
  2058                           ; BSR set to: 15
  2059                           ;main.c: 66: T1CONbits.T1OSCEN=1;
  2060  001B10  86CD               	bsf	4045,3,c	;volatile
  2061                           
  2062                           ; BSR set to: 15
  2063                           ;main.c: 67: Write_RTC();
  2064  001B12  EC38  F00A         	call	_Write_RTC	;wreg free
  2065                           
  2066                           ;main.c: 68: lcd_init();
  2067  001B16  EC50  F00C         	call	_lcd_init	;wreg free
  2068                           
  2069                           ;main.c: 69: lcd_comand(0b00001100);
  2070  001B1A  0E0C               	movlw	12
  2071  001B1C  EC3E  F00E         	call	_lcd_comand
  2072                           
  2073                           ;main.c: 70: LATBbits.LATB1 = 1;;
  2074  001B20  828A               	bsf	3978,1,c	;volatile
  2075                           
  2076                           ;main.c: 71: LATBbits.LATB0 = 1;;
  2077  001B22  808A               	bsf	3978,0,c	;volatile
  2078  001B24  0012               	return		;funcret
  2079  001B26                     __end_of_Setup:
  2080                           	opt stack 0
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           prodh	equ	0xFF4
  2086                           prodl	equ	0xFF3
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           postdec1	equ	0xFE5
  2090                           fsr1l	equ	0xFE1
  2091                           indf2	equ	0xFDF
  2092                           postinc2	equ	0xFDE
  2093                           postdec2	equ	0xFDD
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8
  2097                           
  2098 ;; *************** function _lcd_init *****************
  2099 ;; Defined at:
  2100 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  i               1    4[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;Total ram usage:        1 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    2
  2121 ;; This function calls:
  2122 ;;		_Delay1KTCYx
  2123 ;;		_lcd_send_byte
  2124 ;;		_lcd_send_nibble
  2125 ;; This function is called by:
  2126 ;;		_Setup
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text8
  2131  0018A0                     __ptext8:
  2132                           	opt stack 0
  2133  0018A0                     _lcd_init:
  2134                           	opt stack 27
  2135                           
  2136                           ;unmc_lcd_216.c: 120: int8 i;
  2137                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2138                           
  2139                           ;incstack = 0
  2140  0018A0  9693               	bcf	3987,3,c	;volatile
  2141                           
  2142                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2143  0018A2  9493               	bcf	3987,2,c	;volatile
  2144                           
  2145                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2146  0018A4  968A               	bcf	3978,3,c	;volatile
  2147                           
  2148                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2149  0018A6  948A               	bcf	3978,2,c	;volatile
  2150                           
  2151                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2152  0018A8  9893               	bcf	3987,4,c	;volatile
  2153                           
  2154                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2155  0018AA  9A93               	bcf	3987,5,c	;volatile
  2156                           
  2157                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2158  0018AC  9C93               	bcf	3987,6,c	;volatile
  2159                           
  2160                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2161  0018AE  9E93               	bcf	3987,7,c	;volatile
  2162                           
  2163                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2164  0018B0  0E0A               	movlw	10
  2165  0018B2  EC23  F00E         	call	_Delay1KTCYx
  2166                           
  2167                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2168  0018B6  0E0A               	movlw	10
  2169  0018B8  EC23  F00E         	call	_Delay1KTCYx
  2170                           
  2171                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2172  0018BC  0E0A               	movlw	10
  2173  0018BE  EC23  F00E         	call	_Delay1KTCYx
  2174                           
  2175                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2176  0018C2  0E00               	movlw	0
  2177  0018C4  6E2E               	movwf	lcd_init@i,c
  2178  0018C6                     l2065:
  2179  0018C6  0E02               	movlw	2
  2180  0018C8  642E               	cpfsgt	lcd_init@i,c
  2181  0018CA  D001               	goto	l2069
  2182  0018CC  D008               	goto	l2075
  2183  0018CE                     l2069:
  2184                           
  2185                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2186  0018CE  0E03               	movlw	3
  2187  0018D0  EC90  F00C         	call	_lcd_send_nibble
  2188                           
  2189                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2190  0018D4  0E0A               	movlw	10
  2191  0018D6  EC23  F00E         	call	_Delay1KTCYx
  2192  0018DA  2A2E               	incf	lcd_init@i,f,c
  2193  0018DC  D7F4               	goto	l2065
  2194  0018DE                     l2075:
  2195                           
  2196                           ;unmc_lcd_216.c: 146: }
  2197                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2198  0018DE  0E02               	movlw	2
  2199  0018E0  EC90  F00C         	call	_lcd_send_nibble
  2200                           
  2201                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2202  0018E4  0E00               	movlw	0
  2203  0018E6  6E2E               	movwf	lcd_init@i,c
  2204  0018E8  0E03               	movlw	3
  2205  0018EA  642E               	cpfsgt	lcd_init@i,c
  2206  0018EC  D002               	goto	l2083
  2207  0018EE  0012               	return	
  2208  0018F0  0012               	return	
  2209  0018F2                     l2083:
  2210                           
  2211                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2212  0018F2  502E               	movf	lcd_init@i,w,c
  2213  0018F4  0D01               	mullw	1
  2214  0018F6  0E0B               	movlw	low _LCD_INIT_STRING
  2215  0018F8  24F3               	addwf	prodl,w,c
  2216  0018FA  6EF6               	movwf	tblptrl,c
  2217  0018FC  0E0F               	movlw	high _LCD_INIT_STRING
  2218  0018FE  20F4               	addwfc	prodh,w,c
  2219  001900  6EF7               	movwf	tblptrh,c
  2220  001902                     	if	0	;There are less than 3 active tblptr bytes
  2221  001902                     	endif
  2222  001902  0008               	tblrd		*
  2223  001904  CFF5 F02C          	movff	tablat,lcd_send_byte@n
  2224  001908  0E00               	movlw	0
  2225  00190A  ECB5  F00D         	call	_lcd_send_byte
  2226                           
  2227                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2228  00190E  0E0A               	movlw	10
  2229  001910  EC23  F00E         	call	_Delay1KTCYx
  2230  001914  2A2E               	incf	lcd_init@i,f,c
  2231  001916  0E03               	movlw	3
  2232  001918  642E               	cpfsgt	lcd_init@i,c
  2233  00191A  D7EB               	goto	l2083
  2234  00191C  0012               	return	
  2235  00191E  0012               	return		;funcret
  2236  001920                     __end_of_lcd_init:
  2237                           	opt stack 0
  2238                           tblptru	equ	0xFF8
  2239                           tblptrh	equ	0xFF7
  2240                           tblptrl	equ	0xFF6
  2241                           tablat	equ	0xFF5
  2242                           prodh	equ	0xFF4
  2243                           prodl	equ	0xFF3
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           postdec1	equ	0xFE5
  2247                           fsr1l	equ	0xFE1
  2248                           indf2	equ	0xFDF
  2249                           postinc2	equ	0xFDE
  2250                           postdec2	equ	0xFDD
  2251                           fsr2h	equ	0xFDA
  2252                           fsr2l	equ	0xFD9
  2253                           status	equ	0xFD8
  2254                           
  2255 ;; *************** function _Delay1KTCYx *****************
  2256 ;; Defined at:
  2257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  unit            1    wreg     unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  unit            1    0[COMRAM] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;		None               void
  2264 ;; Registers used:
  2265 ;;		wreg
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2275 ;;Total ram usage:        1 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_lcd_init
  2281 ;;		_DelayPORXLCD
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text9
  2286  001C46                     __ptext9:
  2287                           	opt stack 0
  2288  001C46                     _Delay1KTCYx:
  2289                           	opt stack 28
  2290                           
  2291                           ;incstack = 0
  2292                           ;Delay1KTCYx@unit stored from wreg
  2293  001C46  6E2A               	movwf	Delay1KTCYx@unit,c
  2294  001C48  0EFA               	movlw	250
  2295  001C4A                     u2067:
  2296  001C4A  F000               	nop	
  2297  001C4C  2EE8               	decfsz	wreg,f,c
  2298  001C4E  D7FD               	goto	u2067
  2299  001C50  2E2A               	decfsz	Delay1KTCYx@unit,f,c
  2300  001C52  D7FA               	goto	l1089
  2301  001C54  0012               	return	
  2302  001C56  0012               	return		;funcret
  2303  001C58                     __end_of_Delay1KTCYx:
  2304                           	opt stack 0
  2305                           tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           prodh	equ	0xFF4
  2310                           prodl	equ	0xFF3
  2311                           postinc0	equ	0xFEE
  2312                           wreg	equ	0xFE8
  2313                           postdec1	equ	0xFE5
  2314                           fsr1l	equ	0xFE1
  2315                           indf2	equ	0xFDF
  2316                           postinc2	equ	0xFDE
  2317                           postdec2	equ	0xFDD
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _Write_RTC *****************
  2323 ;; Defined at:
  2324 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;		None               void
  2331 ;; Registers used:
  2332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    2
  2345 ;; This function calls:
  2346 ;;		_RtccWrOn
  2347 ;;		_RtccWriteDate
  2348 ;;		_RtccWriteTime
  2349 ;;		___awdiv
  2350 ;; This function is called by:
  2351 ;;		_Setup
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text10
  2356  001470                     __ptext10:
  2357                           	opt stack 0
  2358  001470                     _Write_RTC:
  2359                           	opt stack 27
  2360                           
  2361                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2362                           
  2363                           ;incstack = 0
  2364  001470  EC2C  F00E         	call	_RtccWrOn	;wreg free
  2365                           
  2366                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2367  001474  80A3               	bsf	4003,0,c	;volatile
  2368                           
  2369                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2370  001476  C01F  F02A         	movff	_segundo,___awdiv@dividend
  2371  00147A  C020  F02B         	movff	_segundo+1,___awdiv@dividend+1
  2372  00147E  0E00               	movlw	0
  2373  001480  6E2D               	movwf	___awdiv@divisor+1,c
  2374  001482  0E0A               	movlw	10
  2375  001484  6E2C               	movwf	___awdiv@divisor,c
  2376  001486  EC05  F00C         	call	___awdiv	;wreg free
  2377  00148A  502A               	movf	?___awdiv,w,c
  2378  00148C  6E55               	movwf	_segundo_d,c
  2379                           
  2380                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2381  00148E  5055               	movf	_segundo_d,w,c
  2382  001490  0D0A               	mullw	10
  2383  001492  50F3               	movf	prodl,w,c
  2384  001494  0800               	sublw	0
  2385  001496  241F               	addwf	_segundo,w,c
  2386  001498  6E56               	movwf	_segundo_u,c
  2387                           
  2388                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2389  00149A  5055               	movf	_segundo_d,w,c
  2390  00149C  0D10               	mullw	16
  2391  00149E  50F3               	movf	prodl,w,c
  2392  0014A0  2456               	addwf	_segundo_u,w,c
  2393  0014A2  6E27               	movwf	_RtccTime+1,c
  2394                           
  2395                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2396  0014A4  C01D  F02A         	movff	_minuto,___awdiv@dividend
  2397  0014A8  C01E  F02B         	movff	_minuto+1,___awdiv@dividend+1
  2398  0014AC  0E00               	movlw	0
  2399  0014AE  6E2D               	movwf	___awdiv@divisor+1,c
  2400  0014B0  0E0A               	movlw	10
  2401  0014B2  6E2C               	movwf	___awdiv@divisor,c
  2402  0014B4  EC05  F00C         	call	___awdiv	;wreg free
  2403  0014B8  502A               	movf	?___awdiv,w,c
  2404  0014BA  6E53               	movwf	_minuto_d,c
  2405                           
  2406                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2407  0014BC  5053               	movf	_minuto_d,w,c
  2408  0014BE  0D0A               	mullw	10
  2409  0014C0  50F3               	movf	prodl,w,c
  2410  0014C2  0800               	sublw	0
  2411  0014C4  241D               	addwf	_minuto,w,c
  2412  0014C6  6E54               	movwf	_minuto_u,c
  2413                           
  2414                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2415  0014C8  5053               	movf	_minuto_d,w,c
  2416  0014CA  0D10               	mullw	16
  2417  0014CC  50F3               	movf	prodl,w,c
  2418  0014CE  2454               	addwf	_minuto_u,w,c
  2419  0014D0  6E28               	movwf	_RtccTime+2,c
  2420                           
  2421                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2422  0014D2  C015  F02A         	movff	_hora,___awdiv@dividend
  2423  0014D6  C016  F02B         	movff	_hora+1,___awdiv@dividend+1
  2424  0014DA  0E00               	movlw	0
  2425  0014DC  6E2D               	movwf	___awdiv@divisor+1,c
  2426  0014DE  0E0A               	movlw	10
  2427  0014E0  6E2C               	movwf	___awdiv@divisor,c
  2428  0014E2  EC05  F00C         	call	___awdiv	;wreg free
  2429  0014E6  502A               	movf	?___awdiv,w,c
  2430  0014E8  6E4F               	movwf	_hora_d,c
  2431                           
  2432                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2433  0014EA  504F               	movf	_hora_d,w,c
  2434  0014EC  0D0A               	mullw	10
  2435  0014EE  50F3               	movf	prodl,w,c
  2436  0014F0  0800               	sublw	0
  2437  0014F2  2415               	addwf	_hora,w,c
  2438  0014F4  6E50               	movwf	_hora_u,c
  2439                           
  2440                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2441  0014F6  504F               	movf	_hora_d,w,c
  2442  0014F8  0D10               	mullw	16
  2443  0014FA  50F3               	movf	prodl,w,c
  2444  0014FC  2450               	addwf	_hora_u,w,c
  2445  0014FE  6E29               	movwf	_RtccTime+3,c
  2446                           
  2447                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2448  001500  C057  F02A         	movff	_anio,___awdiv@dividend
  2449  001504  C058  F02B         	movff	_anio+1,___awdiv@dividend+1
  2450  001508  0E00               	movlw	0
  2451  00150A  6E2D               	movwf	___awdiv@divisor+1,c
  2452  00150C  0E0A               	movlw	10
  2453  00150E  6E2C               	movwf	___awdiv@divisor,c
  2454  001510  EC05  F00C         	call	___awdiv	;wreg free
  2455  001514  502A               	movf	?___awdiv,w,c
  2456  001516  6E4A               	movwf	_anio_d,c
  2457                           
  2458                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  2459  001518  504A               	movf	_anio_d,w,c
  2460  00151A  0D0A               	mullw	10
  2461  00151C  50F3               	movf	prodl,w,c
  2462  00151E  0800               	sublw	0
  2463  001520  2457               	addwf	_anio,w,c
  2464  001522  6E4B               	movwf	_anio_u,c
  2465                           
  2466                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  2467  001524  504A               	movf	_anio_d,w,c
  2468  001526  0D10               	mullw	16
  2469  001528  50F3               	movf	prodl,w,c
  2470  00152A  244B               	addwf	_anio_u,w,c
  2471  00152C  6E25               	movwf	_RtccDate+3,c
  2472                           
  2473                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  2474  00152E  C05B  F02A         	movff	_mes,___awdiv@dividend
  2475  001532  C05C  F02B         	movff	_mes+1,___awdiv@dividend+1
  2476  001536  0E00               	movlw	0
  2477  001538  6E2D               	movwf	___awdiv@divisor+1,c
  2478  00153A  0E0A               	movlw	10
  2479  00153C  6E2C               	movwf	___awdiv@divisor,c
  2480  00153E  EC05  F00C         	call	___awdiv	;wreg free
  2481  001542  502A               	movf	?___awdiv,w,c
  2482  001544  6E51               	movwf	_mes_d,c
  2483                           
  2484                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  2485  001546  5051               	movf	_mes_d,w,c
  2486  001548  0D0A               	mullw	10
  2487  00154A  50F3               	movf	prodl,w,c
  2488  00154C  0800               	sublw	0
  2489  00154E  245B               	addwf	_mes,w,c
  2490  001550  6E52               	movwf	_mes_u,c
  2491                           
  2492                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  2493  001552  5051               	movf	_mes_d,w,c
  2494  001554  0D10               	mullw	16
  2495  001556  50F3               	movf	prodl,w,c
  2496  001558  2452               	addwf	_mes_u,w,c
  2497  00155A  6E24               	movwf	_RtccDate+2,c
  2498                           
  2499                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  2500  00155C  C059  F02A         	movff	_dia,___awdiv@dividend
  2501  001560  C05A  F02B         	movff	_dia+1,___awdiv@dividend+1
  2502  001564  0E00               	movlw	0
  2503  001566  6E2D               	movwf	___awdiv@divisor+1,c
  2504  001568  0E0A               	movlw	10
  2505  00156A  6E2C               	movwf	___awdiv@divisor,c
  2506  00156C  EC05  F00C         	call	___awdiv	;wreg free
  2507  001570  502A               	movf	?___awdiv,w,c
  2508  001572  6E4D               	movwf	_fecha_d,c
  2509                           
  2510                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  2511  001574  504D               	movf	_fecha_d,w,c
  2512  001576  0D0A               	mullw	10
  2513  001578  50F3               	movf	prodl,w,c
  2514  00157A  0800               	sublw	0
  2515  00157C  2459               	addwf	_dia,w,c
  2516  00157E  6E4E               	movwf	_fecha_u,c
  2517                           
  2518                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  2519  001580  504D               	movf	_fecha_d,w,c
  2520  001582  0D10               	mullw	16
  2521  001584  50F3               	movf	prodl,w,c
  2522  001586  244E               	addwf	_fecha_u,w,c
  2523  001588  6E23               	movwf	_RtccDate+1,c
  2524                           
  2525                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  2526  00158A  C013  F04C         	movff	_diasem,_dia_semana
  2527                           
  2528                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  2529  00158E  C013  F022         	movff	_diasem,_RtccDate
  2530                           
  2531                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  2532  001592  0E26               	movlw	low _RtccTime
  2533  001594  6E2A               	movwf	RtccWriteTime@pTm,c
  2534  001596  0E00               	movlw	high _RtccTime
  2535  001598  6E2B               	movwf	RtccWriteTime@pTm+1,c
  2536  00159A  0E01               	movlw	1
  2537  00159C  6E2C               	movwf	RtccWriteTime@di,c
  2538  00159E  EC7F  F00B         	call	_RtccWriteTime	;wreg free
  2539                           
  2540                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  2541  0015A2  0E22               	movlw	low _RtccDate
  2542  0015A4  6E2A               	movwf	RtccWriteDate@pDt,c
  2543  0015A6  0E00               	movlw	high _RtccDate
  2544  0015A8  6E2B               	movwf	RtccWriteDate@pDt+1,c
  2545  0015AA  0E01               	movlw	1
  2546  0015AC  6E2C               	movwf	RtccWriteDate@di,c
  2547  0015AE  ECDC  F00A         	call	_RtccWriteDate	;wreg free
  2548                           
  2549                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  2550  0015B2  010F               	movlb	15	; () banked
  2551  0015B4  8F3F               	bsf	63,7,b	;volatile
  2552                           
  2553                           ; BSR set to: 15
  2554  0015B6  0012               	return		;funcret
  2555  0015B8                     __end_of_Write_RTC:
  2556                           	opt stack 0
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           prodh	equ	0xFF4
  2562                           prodl	equ	0xFF3
  2563                           postinc0	equ	0xFEE
  2564                           wreg	equ	0xFE8
  2565                           postdec1	equ	0xFE5
  2566                           fsr1l	equ	0xFE1
  2567                           indf2	equ	0xFDF
  2568                           postinc2	equ	0xFDE
  2569                           postdec2	equ	0xFDD
  2570                           fsr2h	equ	0xFDA
  2571                           fsr2l	equ	0xFD9
  2572                           status	equ	0xFD8
  2573                           
  2574 ;; *************** function ___awdiv *****************
  2575 ;; Defined at:
  2576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  dividend        2    0[COMRAM] int 
  2579 ;;  divisor         2    2[COMRAM] int 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  quotient        2    6[COMRAM] int 
  2582 ;;  sign            1    5[COMRAM] unsigned char 
  2583 ;;  counter         1    4[COMRAM] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    0[COMRAM] int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2594 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2596 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2597 ;;Total ram usage:        8 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_Write_RTC
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text11
  2607  00180A                     __ptext11:
  2608                           	opt stack 0
  2609  00180A                     ___awdiv:
  2610                           	opt stack 28
  2611                           
  2612                           ; BSR set to: 15
  2613                           ;incstack = 0
  2614  00180A  0E00               	movlw	0
  2615  00180C  6E2F               	movwf	___awdiv@sign,c
  2616  00180E  AE2D               	btfss	___awdiv@divisor+1,7,c
  2617  001810  D007               	goto	l1925
  2618  001812  6C2C               	negf	___awdiv@divisor,c
  2619  001814  1E2D               	comf	___awdiv@divisor+1,f,c
  2620  001816  B0D8               	btfsc	status,0,c
  2621  001818  2A2D               	incf	___awdiv@divisor+1,f,c
  2622  00181A  0E01               	movlw	1
  2623  00181C  6E2F               	movwf	___awdiv@sign,c
  2624  00181E  D000               	goto	l1925
  2625  001820                     l1925:
  2626  001820  AE2B               	btfss	___awdiv@dividend+1,7,c
  2627  001822  D007               	goto	l1931
  2628  001824  6C2A               	negf	___awdiv@dividend,c
  2629  001826  1E2B               	comf	___awdiv@dividend+1,f,c
  2630  001828  B0D8               	btfsc	status,0,c
  2631  00182A  2A2B               	incf	___awdiv@dividend+1,f,c
  2632  00182C  0E01               	movlw	1
  2633  00182E  1A2F               	xorwf	___awdiv@sign,f,c
  2634  001830  D000               	goto	l1931
  2635  001832                     l1931:
  2636  001832  0E00               	movlw	0
  2637  001834  6E31               	movwf	___awdiv@quotient+1,c
  2638  001836  0E00               	movlw	0
  2639  001838  6E30               	movwf	___awdiv@quotient,c
  2640  00183A  502C               	movf	___awdiv@divisor,w,c
  2641  00183C  102D               	iorwf	___awdiv@divisor+1,w,c
  2642  00183E  B4D8               	btfsc	status,2,c
  2643  001840  D021               	goto	l1953
  2644  001842  0E01               	movlw	1
  2645  001844  6E2E               	movwf	___awdiv@counter,c
  2646  001846  D005               	goto	l1939
  2647  001848                     l1937:
  2648  001848  90D8               	bcf	status,0,c
  2649  00184A  362C               	rlcf	___awdiv@divisor,f,c
  2650  00184C  362D               	rlcf	___awdiv@divisor+1,f,c
  2651  00184E  2A2E               	incf	___awdiv@counter,f,c
  2652  001850  D000               	goto	l1939
  2653  001852                     l1939:
  2654  001852  BE2D               	btfsc	___awdiv@divisor+1,7,c
  2655  001854  D002               	goto	l1941
  2656  001856  D7F8               	goto	l1937
  2657  001858  D000               	goto	l1941
  2658  00185A                     l1941:
  2659  00185A  90D8               	bcf	status,0,c
  2660  00185C  3630               	rlcf	___awdiv@quotient,f,c
  2661  00185E  3631               	rlcf	___awdiv@quotient+1,f,c
  2662  001860  502C               	movf	___awdiv@divisor,w,c
  2663  001862  5C2A               	subwf	___awdiv@dividend,w,c
  2664  001864  502D               	movf	___awdiv@divisor+1,w,c
  2665  001866  582B               	subwfb	___awdiv@dividend+1,w,c
  2666  001868  A0D8               	btfss	status,0,c
  2667  00186A  D006               	goto	l1949
  2668  00186C  502C               	movf	___awdiv@divisor,w,c
  2669  00186E  5E2A               	subwf	___awdiv@dividend,f,c
  2670  001870  502D               	movf	___awdiv@divisor+1,w,c
  2671  001872  5A2B               	subwfb	___awdiv@dividend+1,f,c
  2672  001874  8030               	bsf	___awdiv@quotient,0,c
  2673  001876  D000               	goto	l1949
  2674  001878                     l1949:
  2675  001878  90D8               	bcf	status,0,c
  2676  00187A  322D               	rrcf	___awdiv@divisor+1,f,c
  2677  00187C  322C               	rrcf	___awdiv@divisor,f,c
  2678  00187E  2E2E               	decfsz	___awdiv@counter,f,c
  2679  001880  D7EC               	goto	l1941
  2680  001882  D000               	goto	l1953
  2681  001884                     l1953:
  2682  001884  502F               	movf	___awdiv@sign,w,c
  2683  001886  B4D8               	btfsc	status,2,c
  2684  001888  D005               	goto	l1957
  2685  00188A  6C30               	negf	___awdiv@quotient,c
  2686  00188C  1E31               	comf	___awdiv@quotient+1,f,c
  2687  00188E  B0D8               	btfsc	status,0,c
  2688  001890  2A31               	incf	___awdiv@quotient+1,f,c
  2689  001892  D000               	goto	l1957
  2690  001894                     l1957:
  2691  001894  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  2692  001898  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  2693  00189C  0012               	return	
  2694  00189E  0012               	return		;funcret
  2695  0018A0                     __end_of___awdiv:
  2696                           	opt stack 0
  2697                           tblptru	equ	0xFF8
  2698                           tblptrh	equ	0xFF7
  2699                           tblptrl	equ	0xFF6
  2700                           tablat	equ	0xFF5
  2701                           prodh	equ	0xFF4
  2702                           prodl	equ	0xFF3
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           postdec1	equ	0xFE5
  2706                           fsr1l	equ	0xFE1
  2707                           indf2	equ	0xFDF
  2708                           postinc2	equ	0xFDE
  2709                           postdec2	equ	0xFDD
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8
  2713                           
  2714 ;; *************** function _RtccWriteTime *****************
  2715 ;; Defined at:
  2716 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  pTm             2    0[COMRAM] PTR const struct .
  2719 ;;		 -> RtccTime(4), 
  2720 ;;  di              1    2[COMRAM] enum E7121
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  tempHourWDay    2    9[COMRAM] struct .
  2723 ;;  tempMinSec      2    7[COMRAM] struct .
  2724 ;;  wasWrEn         1    6[COMRAM] enum E7121
  2725 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2726 ;;  wasOn           1    4[COMRAM] enum E7121
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      enum E7337
  2729 ;; Registers used:
  2730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2736 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2737 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;Total ram usage:       11 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    1
  2743 ;; This function calls:
  2744 ;;		_RtccWrOn
  2745 ;; This function is called by:
  2746 ;;		_Write_RTC
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text12
  2751  0016FE                     __ptext12:
  2752                           	opt stack 0
  2753  0016FE                     _RtccWriteTime:
  2754                           	opt stack 27
  2755                           
  2756                           ;incstack = 0
  2757  0016FE  0E00               	movlw	0
  2758  001700  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  2759  001702  EE20 F002          	lfsr	2,2
  2760  001706  502A               	movf	RtccWriteTime@pTm,w,c
  2761  001708  26D9               	addwf	fsr2l,f,c
  2762  00170A  502B               	movf	RtccWriteTime@pTm+1,w,c
  2763  00170C  22DA               	addwfc	fsr2h,f,c
  2764  00170E  0E5A               	movlw	90
  2765  001710  60DF               	cpfslt	indf2,c
  2766  001712  0012               	return	
  2767  001714  EE20 F001          	lfsr	2,1
  2768  001718  502A               	movf	RtccWriteTime@pTm,w,c
  2769  00171A  26D9               	addwf	fsr2l,f,c
  2770  00171C  502B               	movf	RtccWriteTime@pTm+1,w,c
  2771  00171E  22DA               	addwfc	fsr2h,f,c
  2772  001720  0E5A               	movlw	90
  2773  001722  60DF               	cpfslt	indf2,c
  2774  001724  0012               	return	
  2775  001726  EE20 F003          	lfsr	2,3
  2776  00172A  502A               	movf	RtccWriteTime@pTm,w,c
  2777  00172C  26D9               	addwf	fsr2l,f,c
  2778  00172E  502B               	movf	RtccWriteTime@pTm+1,w,c
  2779  001730  22DA               	addwfc	fsr2h,f,c
  2780  001732  0E24               	movlw	36
  2781  001734  64DF               	cpfsgt	indf2,c
  2782  001736  D002               	goto	l1757
  2783  001738  0012               	return	
  2784                           
  2785                           ;	Return value of _RtccWriteTime is never used
  2786  00173A  0012               	return	
  2787  00173C                     l1757:
  2788  00173C  EE20 F002          	lfsr	2,2
  2789  001740  502A               	movf	RtccWriteTime@pTm,w,c
  2790  001742  26D9               	addwf	fsr2l,f,c
  2791  001744  502B               	movf	RtccWriteTime@pTm+1,w,c
  2792  001746  22DA               	addwfc	fsr2h,f,c
  2793  001748  50DF               	movf	indf2,w,c
  2794  00174A  6E32               	movwf	RtccWriteTime@tempMinSec+1,c
  2795  00174C  EE20 F001          	lfsr	2,1
  2796  001750  502A               	movf	RtccWriteTime@pTm,w,c
  2797  001752  26D9               	addwf	fsr2l,f,c
  2798  001754  502B               	movf	RtccWriteTime@pTm+1,w,c
  2799  001756  22DA               	addwfc	fsr2h,f,c
  2800  001758  50DF               	movf	indf2,w,c
  2801  00175A  6E31               	movwf	RtccWriteTime@tempMinSec,c
  2802  00175C  502C               	movf	RtccWriteTime@di,w,c
  2803  00175E  B4D8               	btfsc	status,2,c
  2804  001760  D002               	goto	l1763
  2805  001762  9CF2               	bcf	intcon,6,c	;volatile
  2806  001764  D000               	goto	l1763
  2807  001766                     l1763:
  2808  001766  0E00               	movlw	0
  2809  001768  BB3F               	btfsc	63,5,b	;volatile
  2810  00176A  0E01               	movlw	1
  2811  00176C  6E30               	movwf	RtccWriteTime@wasWrEn,c
  2812  00176E  5030               	movf	RtccWriteTime@wasWrEn,w,c
  2813  001770  A4D8               	btfss	status,2,c
  2814  001772  D003               	goto	l1767
  2815  001774  EC2C  F00E         	call	_RtccWrOn	;wreg free
  2816  001778  D000               	goto	l1767
  2817  00177A                     l1767:
  2818  00177A  0E00               	movlw	0
  2819  00177C  BF3F               	btfsc	63,7,b	;volatile
  2820  00177E  0E01               	movlw	1
  2821  001780  6E2E               	movwf	RtccWriteTime@wasOn,c
  2822  001782  502E               	movf	RtccWriteTime@wasOn,w,c
  2823  001784  B4D8               	btfsc	status,2,c
  2824  001786  D007               	goto	l1773
  2825  001788  0E00               	movlw	0
  2826  00178A  BE91               	btfsc	3985,7,c	;volatile
  2827  00178C  0E01               	movlw	1
  2828  00178E  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  2829  001790  010F               	movlb	15	; () banked
  2830  001792  9F3F               	bcf	63,7,b	;volatile
  2831  001794  D000               	goto	l1773
  2832  001796                     l1773:
  2833  001796  0EFC               	movlw	252
  2834  001798  010F               	movlb	15	; () banked
  2835  00179A  173F               	andwf	63,f,b	;volatile
  2836  00179C  010F               	movlb	15	; () banked
  2837  00179E  813F               	bsf	63,0,b	;volatile
  2838                           
  2839                           ; BSR set to: 15
  2840  0017A0  CF98 F033          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  2841                           
  2842                           ; BSR set to: 15
  2843  0017A4  CF99 F034          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  2844                           
  2845                           ; BSR set to: 15
  2846  0017A8  EE20 F003          	lfsr	2,3
  2847  0017AC  502A               	movf	RtccWriteTime@pTm,w,c
  2848  0017AE  26D9               	addwf	fsr2l,f,c
  2849  0017B0  502B               	movf	RtccWriteTime@pTm+1,w,c
  2850  0017B2  22DA               	addwfc	fsr2h,f,c
  2851  0017B4  50DF               	movf	indf2,w,c
  2852  0017B6  6E33               	movwf	RtccWriteTime@tempHourWDay,c
  2853                           
  2854                           ; BSR set to: 15
  2855  0017B8  0EFC               	movlw	252
  2856  0017BA  010F               	movlb	15	; () banked
  2857  0017BC  173F               	andwf	63,f,b	;volatile
  2858                           
  2859                           ; BSR set to: 15
  2860  0017BE  010F               	movlb	15	; () banked
  2861  0017C0  813F               	bsf	63,0,b	;volatile
  2862                           
  2863                           ; BSR set to: 15
  2864  0017C2  C033  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  2865                           
  2866                           ; BSR set to: 15
  2867  0017C6  C034  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  2868                           
  2869                           ; BSR set to: 15
  2870  0017CA  C031  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  2871                           
  2872                           ; BSR set to: 15
  2873  0017CE  C032  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  2874                           
  2875                           ; BSR set to: 15
  2876  0017D2  502E               	movf	RtccWriteTime@wasOn,w,c
  2877  0017D4  B4D8               	btfsc	status,2,c
  2878  0017D6  D00D               	goto	l1805
  2879                           
  2880                           ; BSR set to: 15
  2881  0017D8  010F               	movlb	15	; () banked
  2882  0017DA  8F3F               	bsf	63,7,b	;volatile
  2883                           
  2884                           ; BSR set to: 15
  2885  0017DC  502F               	movf	RtccWriteTime@wasAlrm,w,c
  2886  0017DE  B4D8               	btfsc	status,2,c
  2887  0017E0  D002               	goto	l1801
  2888                           
  2889                           ; BSR set to: 15
  2890  0017E2  8E91               	bsf	3985,7,c	;volatile
  2891  0017E4  D000               	goto	l1801
  2892  0017E6                     l1801:
  2893                           
  2894                           ; BSR set to: 15
  2895  0017E6  5030               	movf	RtccWriteTime@wasWrEn,w,c
  2896  0017E8  B4D8               	btfsc	status,2,c
  2897  0017EA  D009               	goto	l1809
  2898                           
  2899                           ; BSR set to: 15
  2900  0017EC  EC2C  F00E         	call	_RtccWrOn	;wreg free
  2901  0017F0  D006               	goto	l1809
  2902  0017F2                     l1805:
  2903  0017F2  5030               	movf	RtccWriteTime@wasWrEn,w,c
  2904  0017F4  A4D8               	btfss	status,2,c
  2905  0017F6  D003               	goto	l1809
  2906  0017F8  010F               	movlb	15	; () banked
  2907  0017FA  9B3F               	bcf	63,5,b	;volatile
  2908                           
  2909                           ; BSR set to: 15
  2910  0017FC  D000               	goto	l1809
  2911  0017FE                     l1809:
  2912  0017FE  502C               	movf	RtccWriteTime@di,w,c
  2913  001800  B4D8               	btfsc	status,2,c
  2914  001802  0012               	return	
  2915  001804  8CF2               	bsf	intcon,6,c	;volatile
  2916  001806  0012               	return	
  2917                           
  2918                           ;	Return value of _RtccWriteTime is never used
  2919  001808  0012               	return		;funcret
  2920  00180A                     __end_of_RtccWriteTime:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           prodh	equ	0xFF4
  2927                           prodl	equ	0xFF3
  2928                           intcon	equ	0xFF2
  2929                           postinc0	equ	0xFEE
  2930                           wreg	equ	0xFE8
  2931                           postdec1	equ	0xFE5
  2932                           fsr1l	equ	0xFE1
  2933                           indf2	equ	0xFDF
  2934                           postinc2	equ	0xFDE
  2935                           postdec2	equ	0xFDD
  2936                           fsr2h	equ	0xFDA
  2937                           fsr2l	equ	0xFD9
  2938                           status	equ	0xFD8
  2939                           
  2940 ;; *************** function _RtccWriteDate *****************
  2941 ;; Defined at:
  2942 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  pDt             2    0[COMRAM] PTR const struct .
  2945 ;;		 -> RtccDate(4), 
  2946 ;;  di              1    2[COMRAM] enum E7121
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  tempHourWDay    2   11[COMRAM] struct .
  2949 ;;  tempDayMonth    2    9[COMRAM] struct .
  2950 ;;  tempYear        2    6[COMRAM] struct .
  2951 ;;  wasWrEn         1    8[COMRAM] enum E7121
  2952 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2953 ;;  wasOn           1    4[COMRAM] enum E7121
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      enum E7337
  2956 ;; Registers used:
  2957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2963 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2967 ;;Total ram usage:       13 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    1
  2970 ;; This function calls:
  2971 ;;		_RtccWrOn
  2972 ;; This function is called by:
  2973 ;;		_Write_RTC
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text13
  2978  0015B8                     __ptext13:
  2979                           	opt stack 0
  2980  0015B8                     _RtccWriteDate:
  2981                           	opt stack 27
  2982                           
  2983                           ;incstack = 0
  2984  0015B8  0E00               	movlw	0
  2985  0015BA  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  2986  0015BC  EE20 F002          	lfsr	2,2
  2987  0015C0  502A               	movf	RtccWriteDate@pDt,w,c
  2988  0015C2  26D9               	addwf	fsr2l,f,c
  2989  0015C4  502B               	movf	RtccWriteDate@pDt+1,w,c
  2990  0015C6  22DA               	addwfc	fsr2h,f,c
  2991  0015C8  0E13               	movlw	19
  2992  0015CA  60DF               	cpfslt	indf2,c
  2993  0015CC  0012               	return	
  2994  0015CE  EE20 F002          	lfsr	2,2
  2995  0015D2  502A               	movf	RtccWriteDate@pDt,w,c
  2996  0015D4  26D9               	addwf	fsr2l,f,c
  2997  0015D6  502B               	movf	RtccWriteDate@pDt+1,w,c
  2998  0015D8  22DA               	addwfc	fsr2h,f,c
  2999  0015DA  50DF               	movf	indf2,w,c
  3000  0015DC  B4D8               	btfsc	status,2,c
  3001  0015DE  0012               	return	
  3002  0015E0  EE20 F001          	lfsr	2,1
  3003  0015E4  502A               	movf	RtccWriteDate@pDt,w,c
  3004  0015E6  26D9               	addwf	fsr2l,f,c
  3005  0015E8  502B               	movf	RtccWriteDate@pDt+1,w,c
  3006  0015EA  22DA               	addwfc	fsr2h,f,c
  3007  0015EC  0E32               	movlw	50
  3008  0015EE  60DF               	cpfslt	indf2,c
  3009  0015F0  0012               	return	
  3010  0015F2  EE20 F001          	lfsr	2,1
  3011  0015F6  502A               	movf	RtccWriteDate@pDt,w,c
  3012  0015F8  26D9               	addwf	fsr2l,f,c
  3013  0015FA  502B               	movf	RtccWriteDate@pDt+1,w,c
  3014  0015FC  22DA               	addwfc	fsr2h,f,c
  3015  0015FE  50DF               	movf	indf2,w,c
  3016  001600  B4D8               	btfsc	status,2,c
  3017  001602  0012               	return	
  3018  001604  EE20 F003          	lfsr	2,3
  3019  001608  502A               	movf	RtccWriteDate@pDt,w,c
  3020  00160A  26D9               	addwf	fsr2l,f,c
  3021  00160C  502B               	movf	RtccWriteDate@pDt+1,w,c
  3022  00160E  22DA               	addwfc	fsr2h,f,c
  3023  001610  0E99               	movlw	153
  3024  001612  64DF               	cpfsgt	indf2,c
  3025  001614  D002               	goto	l1825
  3026  001616  0012               	return	
  3027                           
  3028                           ;	Return value of _RtccWriteDate is never used
  3029  001618  0012               	return	
  3030  00161A                     l1825:
  3031  00161A  EE20 F003          	lfsr	2,3
  3032  00161E  502A               	movf	RtccWriteDate@pDt,w,c
  3033  001620  26D9               	addwf	fsr2l,f,c
  3034  001622  502B               	movf	RtccWriteDate@pDt+1,w,c
  3035  001624  22DA               	addwfc	fsr2h,f,c
  3036  001626  50DF               	movf	indf2,w,c
  3037  001628  6E30               	movwf	RtccWriteDate@tempYear,c
  3038  00162A  EE20 F001          	lfsr	2,1
  3039  00162E  502A               	movf	RtccWriteDate@pDt,w,c
  3040  001630  26D9               	addwf	fsr2l,f,c
  3041  001632  502B               	movf	RtccWriteDate@pDt+1,w,c
  3042  001634  22DA               	addwfc	fsr2h,f,c
  3043  001636  50DF               	movf	indf2,w,c
  3044  001638  6E33               	movwf	RtccWriteDate@tempDayMonth,c
  3045  00163A  EE20 F002          	lfsr	2,2
  3046  00163E  502A               	movf	RtccWriteDate@pDt,w,c
  3047  001640  26D9               	addwf	fsr2l,f,c
  3048  001642  502B               	movf	RtccWriteDate@pDt+1,w,c
  3049  001644  22DA               	addwfc	fsr2h,f,c
  3050  001646  50DF               	movf	indf2,w,c
  3051  001648  6E34               	movwf	RtccWriteDate@tempDayMonth+1,c
  3052  00164A  502C               	movf	RtccWriteDate@di,w,c
  3053  00164C  B4D8               	btfsc	status,2,c
  3054  00164E  D002               	goto	l1831
  3055  001650  9CF2               	bcf	intcon,6,c	;volatile
  3056  001652  D000               	goto	l1831
  3057  001654                     l1831:
  3058  001654  0E00               	movlw	0
  3059  001656  BB3F               	btfsc	63,5,b	;volatile
  3060  001658  0E01               	movlw	1
  3061  00165A  6E32               	movwf	RtccWriteDate@wasWrEn,c
  3062  00165C  5032               	movf	RtccWriteDate@wasWrEn,w,c
  3063  00165E  A4D8               	btfss	status,2,c
  3064  001660  D003               	goto	l1835
  3065  001662  EC2C  F00E         	call	_RtccWrOn	;wreg free
  3066  001666  D000               	goto	l1835
  3067  001668                     l1835:
  3068  001668  0E00               	movlw	0
  3069  00166A  BF3F               	btfsc	63,7,b	;volatile
  3070  00166C  0E01               	movlw	1
  3071  00166E  6E2E               	movwf	RtccWriteDate@wasOn,c
  3072  001670  502E               	movf	RtccWriteDate@wasOn,w,c
  3073  001672  B4D8               	btfsc	status,2,c
  3074  001674  D007               	goto	l1841
  3075  001676  0E00               	movlw	0
  3076  001678  BE91               	btfsc	3985,7,c	;volatile
  3077  00167A  0E01               	movlw	1
  3078  00167C  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  3079  00167E  010F               	movlb	15	; () banked
  3080  001680  9F3F               	bcf	63,7,b	;volatile
  3081  001682  D000               	goto	l1841
  3082  001684                     l1841:
  3083  001684  0EFC               	movlw	252
  3084  001686  010F               	movlb	15	; () banked
  3085  001688  173F               	andwf	63,f,b	;volatile
  3086  00168A  010F               	movlb	15	; () banked
  3087  00168C  813F               	bsf	63,0,b	;volatile
  3088                           
  3089                           ; BSR set to: 15
  3090  00168E  CF98 F035          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3091                           
  3092                           ; BSR set to: 15
  3093  001692  CF99 F036          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3094                           
  3095                           ; BSR set to: 15
  3096  001696  C02A  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3097  00169A  C02B  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3098  00169E  50DF               	movf	indf2,w,c
  3099  0016A0  6E36               	movwf	RtccWriteDate@tempHourWDay+1,c
  3100                           
  3101                           ; BSR set to: 15
  3102  0016A2  0EFC               	movlw	252
  3103  0016A4  010F               	movlb	15	; () banked
  3104  0016A6  173F               	andwf	63,f,b	;volatile
  3105                           
  3106                           ; BSR set to: 15
  3107  0016A8  0E03               	movlw	3
  3108  0016AA  010F               	movlb	15	; () banked
  3109  0016AC  133F               	iorwf	63,f,b	;volatile
  3110                           
  3111                           ; BSR set to: 15
  3112  0016AE  C030  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3113                           
  3114                           ; BSR set to: 15
  3115  0016B2  C031  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3116                           
  3117                           ; BSR set to: 15
  3118  0016B6  C033  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3119                           
  3120                           ; BSR set to: 15
  3121  0016BA  C034  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3122                           
  3123                           ; BSR set to: 15
  3124  0016BE  C035  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3125                           
  3126                           ; BSR set to: 15
  3127  0016C2  C036  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3128                           
  3129                           ; BSR set to: 15
  3130  0016C6  502E               	movf	RtccWriteDate@wasOn,w,c
  3131  0016C8  B4D8               	btfsc	status,2,c
  3132  0016CA  D00D               	goto	l1877
  3133                           
  3134                           ; BSR set to: 15
  3135  0016CC  010F               	movlb	15	; () banked
  3136  0016CE  8F3F               	bsf	63,7,b	;volatile
  3137                           
  3138                           ; BSR set to: 15
  3139  0016D0  502F               	movf	RtccWriteDate@wasAlrm,w,c
  3140  0016D2  B4D8               	btfsc	status,2,c
  3141  0016D4  D002               	goto	l1873
  3142                           
  3143                           ; BSR set to: 15
  3144  0016D6  8E91               	bsf	3985,7,c	;volatile
  3145  0016D8  D000               	goto	l1873
  3146  0016DA                     l1873:
  3147                           
  3148                           ; BSR set to: 15
  3149  0016DA  5032               	movf	RtccWriteDate@wasWrEn,w,c
  3150  0016DC  B4D8               	btfsc	status,2,c
  3151  0016DE  D009               	goto	l1881
  3152                           
  3153                           ; BSR set to: 15
  3154  0016E0  EC2C  F00E         	call	_RtccWrOn	;wreg free
  3155  0016E4  D006               	goto	l1881
  3156  0016E6                     l1877:
  3157  0016E6  5032               	movf	RtccWriteDate@wasWrEn,w,c
  3158  0016E8  A4D8               	btfss	status,2,c
  3159  0016EA  D003               	goto	l1881
  3160  0016EC  010F               	movlb	15	; () banked
  3161  0016EE  9B3F               	bcf	63,5,b	;volatile
  3162                           
  3163                           ; BSR set to: 15
  3164  0016F0  D000               	goto	l1881
  3165  0016F2                     l1881:
  3166  0016F2  502C               	movf	RtccWriteDate@di,w,c
  3167  0016F4  B4D8               	btfsc	status,2,c
  3168  0016F6  0012               	return	
  3169  0016F8  9CF2               	bcf	intcon,6,c	;volatile
  3170  0016FA  0012               	return	
  3171                           
  3172                           ;	Return value of _RtccWriteDate is never used
  3173  0016FC  0012               	return		;funcret
  3174  0016FE                     __end_of_RtccWriteDate:
  3175                           	opt stack 0
  3176                           tblptru	equ	0xFF8
  3177                           tblptrh	equ	0xFF7
  3178                           tblptrl	equ	0xFF6
  3179                           tablat	equ	0xFF5
  3180                           prodh	equ	0xFF4
  3181                           prodl	equ	0xFF3
  3182                           intcon	equ	0xFF2
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           postdec1	equ	0xFE5
  3186                           fsr1l	equ	0xFE1
  3187                           indf2	equ	0xFDF
  3188                           postinc2	equ	0xFDE
  3189                           postdec2	equ	0xFDD
  3190                           fsr2h	equ	0xFDA
  3191                           fsr2l	equ	0xFD9
  3192                           status	equ	0xFD8
  3193                           
  3194 ;; *************** function _RtccWrOn *****************
  3195 ;; Defined at:
  3196 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  data            2    0        unsigned int 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;		None               void
  3203 ;; Registers used:
  3204 ;;		wreg, status,2
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_Write_RTC
  3220 ;;		_RtccWriteDate
  3221 ;;		_RtccWriteTime
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text14
  3226  001C58                     __ptext14:
  3227                           	opt stack 0
  3228  001C58                     _RtccWrOn:
  3229                           	opt stack 27
  3230                           
  3231                           ;incstack = 0
  3232  001C58  9CF2               	bcf	intcon,6,c	;volatile
  3233  001C5A  0E55               	movlw	85
  3234  001C5C  6EA7               	movwf	4007,c	;volatile
  3235  001C5E  0EAA               	movlw	170
  3236  001C60  6EA7               	movwf	4007,c	;volatile
  3237  001C62  010F               	movlb	15	; () banked
  3238  001C64  8B3F               	bsf	63,5,b	;volatile
  3239                           
  3240                           ; BSR set to: 15
  3241  001C66  8CF2               	bsf	intcon,6,c	;volatile
  3242                           
  3243                           ; BSR set to: 15
  3244  001C68  0012               	return		;funcret
  3245  001C6A                     __end_of_RtccWrOn:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           prodh	equ	0xFF4
  3252                           prodl	equ	0xFF3
  3253                           intcon	equ	0xFF2
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           postdec1	equ	0xFE5
  3257                           fsr1l	equ	0xFE1
  3258                           indf2	equ	0xFDF
  3259                           postinc2	equ	0xFDE
  3260                           postdec2	equ	0xFDD
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _Home *****************
  3266 ;; Defined at:
  3267 ;;		line 30 in file "main.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;Total ram usage:        0 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    5
  3288 ;; This function calls:
  3289 ;;		_lcd_comand
  3290 ;;		_lcd_gotoxy
  3291 ;;		_lcd_putrs
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text15
  3298  001BC4                     __ptext15:
  3299                           	opt stack 0
  3300  001BC4                     _Home:
  3301                           	opt stack 25
  3302                           
  3303                           ;main.c: 32: lcd_comand(0b00001100);
  3304                           
  3305                           ; BSR set to: 15
  3306                           ;incstack = 0
  3307  001BC4  0E0C               	movlw	12
  3308  001BC6  EC3E  F00E         	call	_lcd_comand
  3309                           
  3310                           ;main.c: 33: lcd_gotoxy(1,1);
  3311  001BCA  0E01               	movlw	1
  3312  001BCC  6E2E               	movwf	lcd_gotoxy@y,c
  3313  001BCE  0E01               	movlw	1
  3314  001BD0  ECF6  F00D         	call	_lcd_gotoxy
  3315                           
  3316                           ;main.c: 34: lcd_putrs("UNIMIC  TECLADO ");
  3317  001BD4  0E0F               	movlw	low STR_1
  3318  001BD6  6E32               	movwf	lcd_putrs@ptr,c
  3319  001BD8  0E0F               	movlw	high STR_1
  3320  001BDA  6E33               	movwf	lcd_putrs@ptr+1,c
  3321  001BDC  ECF9  F00C         	call	_lcd_putrs	;wreg free
  3322                           
  3323                           ;main.c: 39: lcd_gotoxy(1,2);
  3324  001BE0  0E02               	movlw	2
  3325  001BE2  6E2E               	movwf	lcd_gotoxy@y,c
  3326  001BE4  0E01               	movlw	1
  3327  001BE6  ECF6  F00D         	call	_lcd_gotoxy
  3328  001BEA  0012               	return		;funcret
  3329  001BEC                     __end_of_Home:
  3330                           	opt stack 0
  3331                           tblptru	equ	0xFF8
  3332                           tblptrh	equ	0xFF7
  3333                           tblptrl	equ	0xFF6
  3334                           tablat	equ	0xFF5
  3335                           prodh	equ	0xFF4
  3336                           prodl	equ	0xFF3
  3337                           intcon	equ	0xFF2
  3338                           postinc0	equ	0xFEE
  3339                           wreg	equ	0xFE8
  3340                           postdec1	equ	0xFE5
  3341                           fsr1l	equ	0xFE1
  3342                           indf2	equ	0xFDF
  3343                           postinc2	equ	0xFDE
  3344                           postdec2	equ	0xFDD
  3345                           fsr2h	equ	0xFDA
  3346                           fsr2l	equ	0xFD9
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function _lcd_putrs *****************
  3350 ;; Defined at:
  3351 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  3354 ;;		 -> STR_17(2), STR_16(2), STR_14(2), STR_13(2), 
  3355 ;;		 -> STR_9(2), STR_5(2), buffer2(20), STR_1(17), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    4
  3374 ;; This function calls:
  3375 ;;		_lcd_putc
  3376 ;; This function is called by:
  3377 ;;		_Home
  3378 ;;		_Write_Keyboard
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text16
  3383  0019F2                     __ptext16:
  3384                           	opt stack 0
  3385  0019F2                     _lcd_putrs:
  3386                           	opt stack 25
  3387                           
  3388                           ;unmc_lcd_216.c: 223: while(*ptr){
  3389                           
  3390                           ;incstack = 0
  3391  0019F2  D015               	goto	l2057
  3392  0019F4                     l2053:
  3393                           
  3394                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  3395  0019F4  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  3396  0019F8  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  3397  0019FC  6AF8               	clrf	tblptru,c
  3398  0019FE  0E0E               	movlw	(high __ramtop+-1)
  3399  001A00  64F7               	cpfsgt	tblptrh,c
  3400  001A02  D003               	bra	u1517
  3401  001A04  0008               	tblrd		*
  3402  001A06  50F5               	movf	tablat,w,c
  3403  001A08  D005               	bra	u1510
  3404  001A0A                     u1517:
  3405  001A0A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3406  001A0E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3407  001A12  50EF               	movf	indf0,w,c
  3408  001A14                     u1510:
  3409  001A14  EC49  F00D         	call	_lcd_putc
  3410  001A18  4A32               	infsnz	lcd_putrs@ptr,f,c
  3411  001A1A  2A33               	incf	lcd_putrs@ptr+1,f,c
  3412  001A1C  D000               	goto	l2057
  3413  001A1E                     l2057:
  3414  001A1E  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  3415  001A22  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  3416  001A26  6AF8               	clrf	tblptru,c
  3417  001A28  0E0E               	movlw	(high __ramtop+-1)
  3418  001A2A  64F7               	cpfsgt	tblptrh,c
  3419  001A2C  D003               	bra	u1527
  3420  001A2E  0008               	tblrd		*
  3421  001A30  50F5               	movf	tablat,w,c
  3422  001A32  D005               	bra	u1520
  3423  001A34                     u1527:
  3424  001A34  CFF6 FFE9          	movff	tblptrl,fsr0l
  3425  001A38  CFF7 FFEA          	movff	tblptrh,fsr0h
  3426  001A3C  50EF               	movf	indf0,w,c
  3427  001A3E                     u1520:
  3428  001A3E  0900               	iorlw	0
  3429  001A40  A4D8               	btfss	status,2,c
  3430  001A42  D7D8               	goto	l2053
  3431  001A44  0012               	return		;funcret
  3432  001A46                     __end_of_lcd_putrs:
  3433                           	opt stack 0
  3434                           tblptru	equ	0xFF8
  3435                           tblptrh	equ	0xFF7
  3436                           tblptrl	equ	0xFF6
  3437                           tablat	equ	0xFF5
  3438                           prodh	equ	0xFF4
  3439                           prodl	equ	0xFF3
  3440                           intcon	equ	0xFF2
  3441                           indf0	equ	0xFEF
  3442                           postinc0	equ	0xFEE
  3443                           fsr0h	equ	0xFEA
  3444                           fsr0l	equ	0xFE9
  3445                           wreg	equ	0xFE8
  3446                           postdec1	equ	0xFE5
  3447                           fsr1l	equ	0xFE1
  3448                           indf2	equ	0xFDF
  3449                           postinc2	equ	0xFDE
  3450                           postdec2	equ	0xFDD
  3451                           fsr2h	equ	0xFDA
  3452                           fsr2l	equ	0xFD9
  3453                           status	equ	0xFD8
  3454                           
  3455 ;; *************** function _lcd_putc *****************
  3456 ;; Defined at:
  3457 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  c               1    wreg     unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  c               1    7[COMRAM] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;		None               void
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;Total ram usage:        1 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    3
  3478 ;; This function calls:
  3479 ;;		_lcd_gotoxy
  3480 ;;		_lcd_send_byte
  3481 ;; This function is called by:
  3482 ;;		_lcd_putrs
  3483 ;;		_lcd_puts
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text17
  3488  001A92                     __ptext17:
  3489                           	opt stack 0
  3490  001A92                     _lcd_putc:
  3491                           	opt stack 25
  3492                           
  3493                           ;incstack = 0
  3494                           ;lcd_putc@c stored from wreg
  3495  001A92  6E31               	movwf	lcd_putc@c,c
  3496                           
  3497                           ;unmc_lcd_216.c: 173: switch(c){
  3498  001A94  D018               	goto	l1897
  3499  001A96                     l1887:
  3500                           
  3501                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  3502  001A96  0E01               	movlw	1
  3503  001A98  6E2C               	movwf	lcd_send_byte@n,c
  3504  001A9A  0E00               	movlw	0
  3505  001A9C  ECB5  F00D         	call	_lcd_send_byte
  3506                           
  3507                           ;unmc_lcd_216.c: 176: break;
  3508  001AA0  0012               	return	
  3509  001AA2                     l1889:
  3510                           
  3511                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  3512  001AA2  0E02               	movlw	2
  3513  001AA4  6E2E               	movwf	lcd_gotoxy@y,c
  3514  001AA6  0E01               	movlw	1
  3515  001AA8  ECF6  F00D         	call	_lcd_gotoxy
  3516                           
  3517                           ;unmc_lcd_216.c: 179: break;
  3518  001AAC  0012               	return	
  3519  001AAE                     l1891:
  3520                           
  3521                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  3522  001AAE  0E10               	movlw	16
  3523  001AB0  6E2C               	movwf	lcd_send_byte@n,c
  3524  001AB2  0E00               	movlw	0
  3525  001AB4  ECB5  F00D         	call	_lcd_send_byte
  3526                           
  3527                           ;unmc_lcd_216.c: 182: break;
  3528  001AB8  0012               	return	
  3529  001ABA                     l1893:
  3530                           
  3531                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  3532  001ABA  C031  F02C         	movff	lcd_putc@c,lcd_send_byte@n
  3533  001ABE  0E01               	movlw	1
  3534  001AC0  ECB5  F00D         	call	_lcd_send_byte
  3535                           
  3536                           ;unmc_lcd_216.c: 186: }
  3537                           
  3538                           ;unmc_lcd_216.c: 185: break;
  3539  001AC4  0012               	return	
  3540  001AC6                     l1897:
  3541  001AC6  5031               	movf	lcd_putc@c,w,c
  3542                           
  3543                           ; Switch size 1, requested type "space"
  3544                           ; Number of cases is 3, Range of values is 8 to 12
  3545                           ; switch strategies available:
  3546                           ; Name         Instructions Cycles
  3547                           ; simple_byte           10     6 (average)
  3548                           ;	Chosen strategy is simple_byte
  3549  001AC8  0A08               	xorlw	8	; case 8
  3550  001ACA  B4D8               	btfsc	status,2,c
  3551  001ACC  D7F0               	goto	l1891
  3552  001ACE  0A02               	xorlw	2	; case 10
  3553  001AD0  B4D8               	btfsc	status,2,c
  3554  001AD2  D7E7               	goto	l1889
  3555  001AD4  0A06               	xorlw	6	; case 12
  3556  001AD6  B4D8               	btfsc	status,2,c
  3557  001AD8  D7DE               	goto	l1887
  3558  001ADA  D7EF               	goto	l1893
  3559  001ADC  0012               	return		;funcret
  3560  001ADE                     __end_of_lcd_putc:
  3561                           	opt stack 0
  3562                           tblptru	equ	0xFF8
  3563                           tblptrh	equ	0xFF7
  3564                           tblptrl	equ	0xFF6
  3565                           tablat	equ	0xFF5
  3566                           prodh	equ	0xFF4
  3567                           prodl	equ	0xFF3
  3568                           intcon	equ	0xFF2
  3569                           indf0	equ	0xFEF
  3570                           postinc0	equ	0xFEE
  3571                           fsr0h	equ	0xFEA
  3572                           fsr0l	equ	0xFE9
  3573                           wreg	equ	0xFE8
  3574                           postdec1	equ	0xFE5
  3575                           fsr1l	equ	0xFE1
  3576                           indf2	equ	0xFDF
  3577                           postinc2	equ	0xFDE
  3578                           postdec2	equ	0xFDD
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           status	equ	0xFD8
  3582                           
  3583 ;; *************** function _lcd_gotoxy *****************
  3584 ;; Defined at:
  3585 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  x               1    wreg     unsigned char 
  3588 ;;  y               1    4[COMRAM] unsigned char 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  x               1    5[COMRAM] unsigned char 
  3591 ;;  address         1    6[COMRAM] unsigned char 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;		None               void
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3601 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;Total ram usage:        3 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    2
  3608 ;; This function calls:
  3609 ;;		_lcd_send_byte
  3610 ;; This function is called by:
  3611 ;;		_Home
  3612 ;;		_lcd_putc
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text18
  3617  001BEC                     __ptext18:
  3618                           	opt stack 0
  3619  001BEC                     _lcd_gotoxy:
  3620                           	opt stack 25
  3621                           
  3622                           ;incstack = 0
  3623                           ;lcd_gotoxy@x stored from wreg
  3624  001BEC  6E2F               	movwf	lcd_gotoxy@x,c
  3625                           
  3626                           ;unmc_lcd_216.c: 159: int8 address;
  3627                           ;unmc_lcd_216.c: 161: if(y != 1)
  3628  001BEE  042E               	decf	lcd_gotoxy@y,w,c
  3629  001BF0  B4D8               	btfsc	status,2,c
  3630  001BF2  D002               	goto	l1743
  3631                           
  3632                           ;unmc_lcd_216.c: 162: address = 0x40;
  3633  001BF4  0E40               	movlw	64
  3634  001BF6  D001               	goto	L1
  3635  001BF8                     l1743:
  3636                           
  3637                           ;unmc_lcd_216.c: 163: else
  3638                           ;unmc_lcd_216.c: 164: address=0;
  3639  001BF8  0E00               	movlw	0
  3640  001BFA                     L1:
  3641  001BFA  6E30               	movwf	lcd_gotoxy@address,c
  3642  001BFC  D000               	goto	l1745
  3643  001BFE                     l1745:
  3644                           
  3645                           ;unmc_lcd_216.c: 166: address += x-1;
  3646  001BFE  042F               	decf	lcd_gotoxy@x,w,c
  3647  001C00  2630               	addwf	lcd_gotoxy@address,f,c
  3648                           
  3649                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  3650  001C02  5030               	movf	lcd_gotoxy@address,w,c
  3651  001C04  0980               	iorlw	128
  3652  001C06  6E2C               	movwf	lcd_send_byte@n,c
  3653  001C08  0E00               	movlw	0
  3654  001C0A  ECB5  F00D         	call	_lcd_send_byte
  3655  001C0E  0012               	return		;funcret
  3656  001C10                     __end_of_lcd_gotoxy:
  3657                           	opt stack 0
  3658                           tblptru	equ	0xFF8
  3659                           tblptrh	equ	0xFF7
  3660                           tblptrl	equ	0xFF6
  3661                           tablat	equ	0xFF5
  3662                           prodh	equ	0xFF4
  3663                           prodl	equ	0xFF3
  3664                           intcon	equ	0xFF2
  3665                           indf0	equ	0xFEF
  3666                           postinc0	equ	0xFEE
  3667                           fsr0h	equ	0xFEA
  3668                           fsr0l	equ	0xFE9
  3669                           wreg	equ	0xFE8
  3670                           postdec1	equ	0xFE5
  3671                           fsr1l	equ	0xFE1
  3672                           indf2	equ	0xFDF
  3673                           postinc2	equ	0xFDE
  3674                           postdec2	equ	0xFDD
  3675                           fsr2h	equ	0xFDA
  3676                           fsr2l	equ	0xFD9
  3677                           status	equ	0xFD8
  3678                           
  3679 ;; *************** function _lcd_comand *****************
  3680 ;; Defined at:
  3681 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  d               1    wreg     unsigned char 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  d               1    4[COMRAM] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;		None               void
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;Total ram usage:        1 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    2
  3702 ;; This function calls:
  3703 ;;		_lcd_send_byte
  3704 ;; This function is called by:
  3705 ;;		_Home
  3706 ;;		_Setup
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text19
  3711  001C7C                     __ptext19:
  3712                           	opt stack 0
  3713  001C7C                     _lcd_comand:
  3714                           	opt stack 27
  3715                           
  3716                           ;incstack = 0
  3717                           ;lcd_comand@d stored from wreg
  3718  001C7C  6E2E               	movwf	lcd_comand@d,c
  3719                           
  3720                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  3721  001C7E  C02E  F02C         	movff	lcd_comand@d,lcd_send_byte@n
  3722  001C82  0E00               	movlw	0
  3723  001C84  ECB5  F00D         	call	_lcd_send_byte
  3724  001C88  0012               	return		;funcret
  3725  001C8A                     __end_of_lcd_comand:
  3726                           	opt stack 0
  3727                           tblptru	equ	0xFF8
  3728                           tblptrh	equ	0xFF7
  3729                           tblptrl	equ	0xFF6
  3730                           tablat	equ	0xFF5
  3731                           prodh	equ	0xFF4
  3732                           prodl	equ	0xFF3
  3733                           intcon	equ	0xFF2
  3734                           indf0	equ	0xFEF
  3735                           postinc0	equ	0xFEE
  3736                           fsr0h	equ	0xFEA
  3737                           fsr0l	equ	0xFE9
  3738                           wreg	equ	0xFE8
  3739                           postdec1	equ	0xFE5
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _lcd_send_byte *****************
  3749 ;; Defined at:
  3750 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  address         1    wreg     unsigned char 
  3753 ;;  n               1    2[COMRAM] unsigned char 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  address         1    3[COMRAM] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3765 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3769 ;;Total ram usage:        2 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    1
  3772 ;; This function calls:
  3773 ;;		_Delay100TCYx
  3774 ;;		_lcd_send_nibble
  3775 ;; This function is called by:
  3776 ;;		_lcd_init
  3777 ;;		_lcd_gotoxy
  3778 ;;		_lcd_putc
  3779 ;;		_lcd_comand
  3780 ;;		_lcd_setcursor_vb
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text20
  3785  001B6A                     __ptext20:
  3786                           	opt stack 0
  3787  001B6A                     _lcd_send_byte:
  3788                           	opt stack 26
  3789                           
  3790                           ;incstack = 0
  3791                           ;lcd_send_byte@address stored from wreg
  3792  001B6A  6E2D               	movwf	lcd_send_byte@address,c
  3793                           
  3794                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  3795  001B6C  968A               	bcf	3978,3,c	;volatile
  3796                           
  3797                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  3798  001B6E  0E02               	movlw	2
  3799  001B70  EC35  F00E         	call	_Delay100TCYx
  3800                           
  3801                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  3802  001B74  9893               	bcf	3987,4,c	;volatile
  3803                           
  3804                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  3805  001B76  9A93               	bcf	3987,5,c	;volatile
  3806                           
  3807                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  3808  001B78  9C93               	bcf	3987,6,c	;volatile
  3809                           
  3810                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  3811  001B7A  9E93               	bcf	3987,7,c	;volatile
  3812                           
  3813                           ;unmc_lcd_216.c: 101: if(address)
  3814  001B7C  502D               	movf	lcd_send_byte@address,w,c
  3815  001B7E  B4D8               	btfsc	status,2,c
  3816  001B80  D002               	goto	l237
  3817                           
  3818                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  3819  001B82  868A               	bsf	3978,3,c	;volatile
  3820  001B84  D001               	goto	l238
  3821  001B86                     l237:
  3822                           
  3823                           ;unmc_lcd_216.c: 103: else
  3824                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  3825  001B86  968A               	bcf	3978,3,c	;volatile
  3826  001B88                     l238:
  3827                           
  3828                           ;unmc_lcd_216.c: 106: __nop();
  3829  001B88  F000               	nop	
  3830                           
  3831                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  3832  001B8A  382C               	swapf	lcd_send_byte@n,w,c
  3833  001B8C  0B0F               	andlw	15
  3834  001B8E  EC90  F00C         	call	_lcd_send_nibble
  3835                           
  3836                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  3837  001B92  502C               	movf	lcd_send_byte@n,w,c
  3838  001B94  0B0F               	andlw	15
  3839  001B96  EC90  F00C         	call	_lcd_send_nibble
  3840  001B9A  0012               	return		;funcret
  3841  001B9C                     __end_of_lcd_send_byte:
  3842                           	opt stack 0
  3843                           tblptru	equ	0xFF8
  3844                           tblptrh	equ	0xFF7
  3845                           tblptrl	equ	0xFF6
  3846                           tablat	equ	0xFF5
  3847                           prodh	equ	0xFF4
  3848                           prodl	equ	0xFF3
  3849                           intcon	equ	0xFF2
  3850                           indf0	equ	0xFEF
  3851                           postinc0	equ	0xFEE
  3852                           fsr0h	equ	0xFEA
  3853                           fsr0l	equ	0xFE9
  3854                           wreg	equ	0xFE8
  3855                           postdec1	equ	0xFE5
  3856                           fsr1l	equ	0xFE1
  3857                           indf2	equ	0xFDF
  3858                           postinc2	equ	0xFDE
  3859                           postdec2	equ	0xFDD
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8
  3863                           
  3864 ;; *************** function _lcd_send_nibble *****************
  3865 ;; Defined at:
  3866 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  nibble          1    wreg     unsigned char 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  nibble          1    1[COMRAM] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;		None               void
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3884 ;;Total ram usage:        2 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_lcd_send_byte
  3890 ;;		_lcd_init
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text21
  3895  001920                     __ptext21:
  3896                           	opt stack 0
  3897  001920                     _lcd_send_nibble:
  3898                           	opt stack 26
  3899                           
  3900                           ;incstack = 0
  3901                           ;lcd_send_nibble@nibble stored from wreg
  3902  001920  6E2B               	movwf	lcd_send_nibble@nibble,c
  3903                           
  3904                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  3905  001922  A02B               	btfss	lcd_send_nibble@nibble,0,c
  3906  001924  D003               	goto	u1030
  3907  001926  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  3908  001928  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  3909  00192A  D001               	goto	u1048
  3910  00192C                     u1030:
  3911  00192C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  3912  00192E                     u1048:
  3913  00192E  3A2A               	swapf	??_lcd_send_nibble,f,c
  3914  001930  508A               	movf	3978,w,c	;volatile
  3915  001932  182A               	xorwf	??_lcd_send_nibble,w,c
  3916  001934  0BEF               	andlw	-17
  3917  001936  182A               	xorwf	??_lcd_send_nibble,w,c
  3918  001938  6E8A               	movwf	3978,c	;volatile
  3919                           
  3920                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  3921  00193A  A22B               	btfss	lcd_send_nibble@nibble,1,c
  3922  00193C  D003               	goto	u1050
  3923  00193E  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  3924  001940  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  3925  001942  D001               	goto	u1068
  3926  001944                     u1050:
  3927  001944  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  3928  001946                     u1068:
  3929  001946  3A2A               	swapf	??_lcd_send_nibble,f,c
  3930  001948  462A               	rlncf	??_lcd_send_nibble,f,c
  3931  00194A  508A               	movf	3978,w,c	;volatile
  3932  00194C  182A               	xorwf	??_lcd_send_nibble,w,c
  3933  00194E  0BDF               	andlw	-33
  3934  001950  182A               	xorwf	??_lcd_send_nibble,w,c
  3935  001952  6E8A               	movwf	3978,c	;volatile
  3936                           
  3937                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  3938  001954  A42B               	btfss	lcd_send_nibble@nibble,2,c
  3939  001956  D003               	goto	u1070
  3940  001958  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  3941  00195A  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  3942  00195C  D001               	goto	u1088
  3943  00195E                     u1070:
  3944  00195E  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  3945  001960                     u1088:
  3946  001960  3A2A               	swapf	??_lcd_send_nibble,f,c
  3947  001962  462A               	rlncf	??_lcd_send_nibble,f,c
  3948  001964  462A               	rlncf	??_lcd_send_nibble,f,c
  3949  001966  508A               	movf	3978,w,c	;volatile
  3950  001968  182A               	xorwf	??_lcd_send_nibble,w,c
  3951  00196A  0BBF               	andlw	-65
  3952  00196C  182A               	xorwf	??_lcd_send_nibble,w,c
  3953  00196E  6E8A               	movwf	3978,c	;volatile
  3954                           
  3955                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  3956  001970  A62B               	btfss	lcd_send_nibble@nibble,3,c
  3957  001972  D003               	goto	u1090
  3958  001974  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  3959  001976  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  3960  001978  D001               	goto	u1108
  3961  00197A                     u1090:
  3962  00197A  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  3963  00197C                     u1108:
  3964  00197C  322A               	rrcf	??_lcd_send_nibble,f,c
  3965  00197E  322A               	rrcf	??_lcd_send_nibble,f,c
  3966  001980  508A               	movf	3978,w,c	;volatile
  3967  001982  182A               	xorwf	??_lcd_send_nibble,w,c
  3968  001984  0B7F               	andlw	-129
  3969  001986  182A               	xorwf	??_lcd_send_nibble,w,c
  3970  001988  6E8A               	movwf	3978,c	;volatile
  3971                           
  3972                           ;unmc_lcd_216.c: 32: __nop();
  3973  00198A  F000               	nop	
  3974                           
  3975                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3976  00198C  848A               	bsf	3978,2,c	;volatile
  3977                           
  3978                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3979  00198E  F000               	nop	
  3980  001990  F000               	nop	
  3981                           
  3982                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3983  001992  948A               	bcf	3978,2,c	;volatile
  3984  001994  0012               	return		;funcret
  3985  001996                     __end_of_lcd_send_nibble:
  3986                           	opt stack 0
  3987                           tblptru	equ	0xFF8
  3988                           tblptrh	equ	0xFF7
  3989                           tblptrl	equ	0xFF6
  3990                           tablat	equ	0xFF5
  3991                           prodh	equ	0xFF4
  3992                           prodl	equ	0xFF3
  3993                           intcon	equ	0xFF2
  3994                           indf0	equ	0xFEF
  3995                           postinc0	equ	0xFEE
  3996                           fsr0h	equ	0xFEA
  3997                           fsr0l	equ	0xFE9
  3998                           wreg	equ	0xFE8
  3999                           postdec1	equ	0xFE5
  4000                           fsr1l	equ	0xFE1
  4001                           indf2	equ	0xFDF
  4002                           postinc2	equ	0xFDE
  4003                           postdec2	equ	0xFDD
  4004                           fsr2h	equ	0xFDA
  4005                           fsr2l	equ	0xFD9
  4006                           status	equ	0xFD8
  4007                           
  4008 ;; *************** function _Delay100TCYx *****************
  4009 ;; Defined at:
  4010 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  unit            1    wreg     unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  unit            1    0[COMRAM] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;		None               void
  4017 ;; Registers used:
  4018 ;;		wreg
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_lcd_send_byte
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text22
  4038  001C6A                     __ptext22:
  4039                           	opt stack 0
  4040  001C6A                     _Delay100TCYx:
  4041                           	opt stack 26
  4042                           
  4043                           ;incstack = 0
  4044                           ;Delay100TCYx@unit stored from wreg
  4045  001C6A  6E2A               	movwf	Delay100TCYx@unit,c
  4046  001C6C  0E21               	movlw	33
  4047  001C6E                     u2077:
  4048  001C6E  2EE8               	decfsz	wreg,f,c
  4049  001C70  D7FE               	goto	u2077
  4050  001C72  F000               	nop	
  4051  001C74  2E2A               	decfsz	Delay100TCYx@unit,f,c
  4052  001C76  D7FA               	goto	l1717
  4053  001C78  0012               	return	
  4054  001C7A  0012               	return		;funcret
  4055  001C7C                     __end_of_Delay100TCYx:
  4056                           	opt stack 0
  4057                           tblptru	equ	0xFF8
  4058                           tblptrh	equ	0xFF7
  4059                           tblptrl	equ	0xFF6
  4060                           tablat	equ	0xFF5
  4061                           prodh	equ	0xFF4
  4062                           prodl	equ	0xFF3
  4063                           intcon	equ	0xFF2
  4064                           indf0	equ	0xFEF
  4065                           postinc0	equ	0xFEE
  4066                           fsr0h	equ	0xFEA
  4067                           fsr0l	equ	0xFE9
  4068                           wreg	equ	0xFE8
  4069                           postdec1	equ	0xFE5
  4070                           fsr1l	equ	0xFE1
  4071                           indf2	equ	0xFDF
  4072                           postinc2	equ	0xFDE
  4073                           postdec2	equ	0xFDD
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           tblptru	equ	0xFF8
  4078                           tblptrh	equ	0xFF7
  4079                           tblptrl	equ	0xFF6
  4080                           tablat	equ	0xFF5
  4081                           prodh	equ	0xFF4
  4082                           prodl	equ	0xFF3
  4083                           intcon	equ	0xFF2
  4084                           indf0	equ	0xFEF
  4085                           postinc0	equ	0xFEE
  4086                           fsr0h	equ	0xFEA
  4087                           fsr0l	equ	0xFE9
  4088                           wreg	equ	0xFE8
  4089                           postdec1	equ	0xFE5
  4090                           fsr1l	equ	0xFE1
  4091                           indf2	equ	0xFDF
  4092                           postinc2	equ	0xFDE
  4093                           postdec2	equ	0xFDD
  4094                           fsr2h	equ	0xFDA
  4095                           fsr2l	equ	0xFD9
  4096                           status	equ	0xFD8
  4097                           
  4098                           	psect	rparam
  4099  0000                     tblptru	equ	0xFF8
  4100                           tblptrh	equ	0xFF7
  4101                           tblptrl	equ	0xFF6
  4102                           tablat	equ	0xFF5
  4103                           prodh	equ	0xFF4
  4104                           prodl	equ	0xFF3
  4105                           intcon	equ	0xFF2
  4106                           indf0	equ	0xFEF
  4107                           postinc0	equ	0xFEE
  4108                           fsr0h	equ	0xFEA
  4109                           fsr0l	equ	0xFE9
  4110                           wreg	equ	0xFE8
  4111                           postdec1	equ	0xFE5
  4112                           fsr1l	equ	0xFE1
  4113                           indf2	equ	0xFDF
  4114                           postinc2	equ	0xFDE
  4115                           postdec2	equ	0xFDD
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    14
    Data        6
    BSS         77
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      93
    BANK0           160      0      36
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_9(CODE[2]), STR_5(CODE[2]), buffer2(BANK0[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Write_Keyboard
    _Write_Keyboard->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_init->_lcd_send_byte
    _Write_RTC->_RtccWriteDate
    _Home->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13607
                               _Home
                              _Setup
                     _Write_Keyboard
 ---------------------------------------------------------------------------------
 (1) _Write_Keyboard                                       1     1      0    5626
                                             31 COMRAM     1     1      0
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             28    22      6    2940
                                             12 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Home                                                 0     0      0    4217
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    2686
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    1553
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1     885
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Home
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _Write_Keyboard
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      24       5       22.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     20      5D       1       97.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81       6        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 06 00:29:52 2016

                        _a 000D                          _b 000F                          _c 0011  
                        _i 0017                          _j 0019                          _k 001B  
           ?_lcd_send_byte 002C               ___awdiv@sign 002F        ___wmul@multiplicand 002C  
              lcd_comand@d 002E               __CFG_CP0$OFF 000000                        l201 11C2  
                      l210 11F2                        l202 11BE                        l205 11DC  
                      l206 11D8                        l150 0F6A                        l161 0FF0  
                      l153 0FA2                        l170 105C                        l162 0FEC  
                      l154 0F9E                        l316 13DE                        l237 1B86  
                      l181 10EA                        l173 1094                        l165 102C  
                      l157 0FD6                        l149 0F6E                        l238 1B88  
                      l190 114E                        l182 10E6                        l174 1090  
                      l166 1028                        l158 0FD2                        l193 116C  
                      l185 111E                        l177 10AE                        l169 1060  
                      l194 1168                        l186 111A                        l178 10AA  
                      l197 118E                        l189 1152                        l198 118A  
                      l960 19E8                        l970 1A88                        _dia 0059  
                      _key 0021                        _mes 005B                        wreg 000FE8  
              lcd_gotoxy@x 002F                lcd_gotoxy@y 002E                       l2101 123E  
                     l2111 127C                       l2105 1248                       l2131 1324  
                     l2123 12E6                       l2107 125E                       l2053 19F4  
                     l2125 1308                       l2143 1358                       l2135 1330  
                     l2119 12E0                       l2303 1C3C                       l2057 1A1E  
                     l1089 1C48                       l2065 18C6                       l2161 13BC  
                     l2153 1392                       l2083 18F2                       l2075 18DE  
                     l2147 137C                       l2139 1354                       l2069 18CE  
                     l2173 1438                       l2149 1386                       l2093 1216  
                     l2167 13E4                       l2159 13B4                       l2175 1444  
                     l1801 17E6                       l2177 1460                       l2099 1230  
                     l1717 1C6C                       l1805 17F2                       l1743 1BF8  
                     l1831 1654                       l1745 1BFE                       l1841 1684  
                     l1825 161A                       l1809 17FE                       l2297 11FA  
                     l1835 1668                       l1763 1766                       l1931 1832  
                     l1907 1C28                       l1773 1796                       l1757 173C  
                     l1941 185A                       l1925 1820                       l1767 177A  
                     l1881 16F2                       l1873 16DA                       l1937 1848  
                     l1953 1884                       l1891 1AAE                       l1939 1852  
                     l1971 19BE                       l1893 1ABA                       l1877 16E6  
                     l1957 1894                       l1949 1878                       l1887 1A96  
                     l1967 19AC                       l1991 1A66                       l1889 1AA2  
                     l1897 1AC6                       l1969 19B6                       l1979 19DC  
                     l1995 1A7C                       l1987 1A54                       l1989 1A5E  
                     STR_1 0F0F                       STR_2 0F20                       STR_3 0F20  
                     STR_4 0F20                       STR_5 0F29                       STR_6 0F20  
                     STR_7 0F20                       STR_8 0F20                       STR_9 0F2B  
                     u1030 192C                       u1050 1944                       u1108 197C  
                     u1070 195E                       u1048 192E                       u1090 197A  
                     u1068 1946                       u1510 1A14                       u1088 1960  
                     u1520 1A3E                       u2057 1200                       u2067 1C4A  
                     u2077 1C6E                       u1517 1A0A                       u1527 1A34  
         ?_lcd_send_nibble 002A                       _Home 1BC4                       _anio 0057  
                     _flag 02E8                       _main 1C32                       _hora 0015  
                     fsr0h 000FEA                       indf0 000FEF                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9              __CFG_T1DIG$ON 000000                       prodh 000FF4  
                     prodl 000FF3                       start 0000              __CFG_IESO$OFF 000000  
             ___param_bank 000010                _Delay1KTCYx 1C46              __CFG_PLLDIV$1 000000  
                    ?_Home 002A                      ?_main 002A            __end_of___awdiv 18A0  
                    STR_10 0F20                      STR_11 0F20                      STR_12 0F20  
                    STR_13 0F2D                      STR_14 0F27                      STR_15 0F20  
                    STR_16 0F25                      STR_17 0F2F      __size_of_Delay100TCYx 0012  
          ___awdiv@divisor 002C            __end_of___lwdiv 19F2            __end_of___lwmod 1A92  
          ___awdiv@counter 002E                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94             __CFG_FCMEN$OFF 000000                      _Setup 1ADE  
          __end_of_dpowers 0F0B                      _mes_d 0051                      _mes_u 0052  
          __end_of_isdigit 1C32             __pbitbssCOMRAM 02E8                      tablat 000FF5  
             lcd_putrs@ptr 0032                      status 000FD8            __end_of_sprintf 1470  
  __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1B26               __end_of_Home 1BEC  
             _Delay100TCYx 1C6A               __end_of_main 1C46            ??_lcd_send_byte 002D  
                   ??_Home 0034                     ??_main 004A              __activetblptr 000002  
         __end_of_RtccWrOn 1C6A                     ?_Setup 002A                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _EECON2 000FA7                     _ANCON0 000F48  
                   _ANCON1 000F49           ___awdiv@dividend 002A             __CFG_WDTEN$OFF 000000  
         RtccWriteDate@pDt 002A                     _RTCCFG 000F3F             __CFG_WPCFG$OFF 000000  
  __size_of_Write_Keyboard 02DA             __CFG_WPDIS$OFF 000000             __CFG_XINST$OFF 000000  
         __end_of_lcd_init 1920           __end_of_lcd_putc 1ADE                     ___wmul 1B9C  
                ??___awdiv 002E             __CFG_STVREN$ON 000000                     _diasem 0013  
                   _anio_d 004A                     _anio_u 004B                  ??___lwdiv 002E  
                ??___lwmod 0035                     _hora_d 004F                     _hora_u 0050  
                   clear_0 1B2C                     clear_1 1B3A           ___awdiv@quotient 0030  
                   _minuto 001D      __end_of_RtccWriteDate 16FE      __end_of_RtccWriteTime 180A  
         RtccWriteTime@pTm 002A               __pdataCOMRAM 0057                  ??_isdigit 002A  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_sprintf 003C                 __accesstop 0060  
  __end_of__initialization 1B60         __size_of_Write_RTC 0148              ___rparam_used 000001  
           __pcstackCOMRAM 002A              __end_of_Setup 1B26            __CFG_DSWDTPS$G2 000000  
          __CFG_OSC$INTOSC 000000                    ??_Setup 0037          lcd_gotoxy@address 0030  
       __size_of_lcd_putrs 0054               sprintf@width 0046                 __pbssBANK0 0060  
               _dia_semana 004C  RtccWriteTime@tempHourWDay 0033                 __pnvCOMRAM 004A  
                ?_RtccWrOn 002A             lcd_send_byte@n 002C                    ?___wmul 002A  
             ?_Delay1KTCYx 002A          __end_of_Write_RTC 15B8                 _lcd_comand 1C7C  
               _lcd_gotoxy 1BEC                    _RTCVALH 000F99                    _RTCVALL 000F98  
                ?_lcd_init 002A                  ?_lcd_putc 002A             _Write_Keyboard 0F32  
                  __Hparam 0000                    __Lparam 0000   __size_of_lcd_send_nibble 0076  
               ??_RtccWrOn 002A                    ___awdiv 180A          __end_of_lcd_putrs 1A46  
          __size_of___wmul 0028                    ___lwdiv 1996                    ___lwmod 1A46  
             __psmallconst 0F00                _RtccTimeVal 0009                    __pcinit 1B26  
                  _fecha_d 004D                    _fecha_u 004E                    __ramtop 0F00  
                  __ptext0 1C32                    __ptext1 0F32                    __ptext2 120C  
                  __ptext3 1C10                    __ptext4 1B9C                    __ptext5 1A46  
                  __ptext6 1996                    __ptext7 1ADE                    __ptext8 18A0  
                  __ptext9 1C46                    _buffer2 0070                  _T1CONbits 000FCD  
                  _dpowers 0F01                    _isdigit 1C10                    _segundo 001F  
                  _sprintf 120C                 ??_lcd_init 002E                 ??_lcd_putc 0031  
     end_of_initialization 1B60     __end_of_Write_Keyboard 120C       lcd_send_byte@address 002D  
            __Lmediumconst 0000                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE      __end_of_lcd_send_byte 1B9C  
                _PORTAbits 000F80                  _PORTCbits 000F82           __CFG_DSBOREN$OFF 000000  
              ?_lcd_comand 002A           __CFG_CPUDIV$OSC1 000000                  _TRISBbits 000F93  
              ?_lcd_gotoxy 002E            _LCD_INIT_STRING 0F0B            ?_Write_Keyboard 002A  
         __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 0033        __CFG_MSSP7B_EN$MSK7 000000  
         Delay100TCYx@unit 002A             __end_of___wmul 1BC4              __pidataCOMRAM 1C8A  
RtccWriteDate@tempHourWDay 0035          ??_lcd_send_nibble 002A       __size_of_Delay1KTCYx 0012  
         __CFG_DSWDTEN$OFF 000000        start_initialization 1B26       RtccWriteTime@wasAlrm 002F  
     RtccWriteTime@wasWrEn 0030     __size_of_RtccWriteDate 0146            RtccWriteDate@di 002C  
   __size_of_RtccWriteTime 010C        __size_of_lcd_comand 000E        __size_of_lcd_gotoxy 0024  
                 ??___wmul 002E          __size_of_RtccWrOn 0012            RtccWriteTime@di 002C  
         __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91    __end_of_LCD_INIT_STRING 0F0F  
              __pbssCOMRAM 0001                  _Write_RTC 1470               _isdigit$2041 002B  
          Delay1KTCYx@unit 002A          __size_of_lcd_init 0080                sprintf@flag 0042  
        __size_of_lcd_putc 004C                sprintf@prec 0045           ___lwdiv@dividend 002A  
            ?_Delay100TCYx 002A                   ?___awdiv 002A                   ?___lwdiv 002A  
                 ?___lwmod 0031    RtccWriteTime@tempMinSec 0031                  _lcd_putrs 19F2  
            _RtccWriteDate 15B8                __smallconst 0F00              _RtccWriteTime 16FE  
                 ?_isdigit 002A       __CFG_RTCOSC$T1OSCREF 000000             __size_of_Setup 0048  
               ?_Write_RTC 002A           ___lwdiv@quotient 002E                   ?_sprintf 0036  
         _RtccAlrmTimeDate 0060             ___wmul@product 002E                   _LATAbits 000F89  
                 _LATBbits 000F8A                   _PIE3bits 000FA3                  _segundo_d 0055  
           ??_Delay100TCYx 002A                  _segundo_u 0056           __CFG_WDTPS$32768 000000  
       RtccWriteDate@wasOn 002E         _Rtcc_read_TimeDate 0068             ?_RtccWriteDate 002A  
               ?_lcd_putrs 0032          ___wmul@multiplier 002A             ?_RtccWriteTime 002A  
                lcd_init@i 002E               ??_lcd_comand 002E                  lcd_putc@c 0031  
             ??_lcd_gotoxy 002F           ??_Write_Keyboard 0049                  copy_data0 1B54  
          _lcd_send_nibble 1920                   __Hrparam 0000                   _RtccDate 0022  
                 __Lrparam 0000                   _RtccTime 0026                   _RtccWrOn 1C58  
       __end_of_lcd_comand 1C8A         __end_of_lcd_gotoxy 1C10           __size_of___awdiv 0096  
         __size_of___lwdiv 005C           __size_of___lwmod 004C               _RtccTimeDate 0001  
               sprintf@val 0043           __size_of_isdigit 0022            ___lwdiv@divisor 002C  
              ??_Write_RTC 0037            ___lwdiv@counter 0030                   __ptext10 1470  
                 __ptext11 180A                   __ptext20 1B6A                   __ptext12 16FE  
                 __ptext21 1920                   __ptext13 15B8                   __ptext22 1C6A  
                 __ptext14 1C58                   __ptext15 1BC4                   __ptext16 19F2  
                 __ptext17 1A92                   __ptext18 1BEC                   __ptext19 1C7C  
                 _lcd_init 18A0                   _lcd_putc 1A92           __size_of_sprintf 0264  
            __size_of_Home 0028     __size_of_lcd_send_byte 0032              __size_of_main 0014  
                 _minuto_d 0053                   _minuto_u 0054              ??_Delay1KTCYx 002A  
          ??_RtccWriteDate 002D            ??_RtccWriteTime 002D                ??_lcd_putrs 0034  
              _OSCTUNEbits 000F9B                 _INTCONbits 000FF2         RtccWriteTime@wasOn 002E  
     __end_of_Delay100TCYx 1C7C                   isdigit@c 002C                  sprintf@ap 0040  
  __end_of_lcd_send_nibble 1996                  sprintf@sp 0036           ___lwmod@dividend 0031  
               _OSCCONbits 000FD3      RtccWriteDate@tempYear 0030              _lcd_send_byte 1B6A  
               _RTCCFGbits 000F3F                   sprintf@c 0048                   sprintf@f 0038  
          ___lwmod@divisor 0033        __end_of_Delay1KTCYx 1C58            ___lwmod@counter 0035  
     RtccWriteDate@wasAlrm 002F       RtccWriteDate@wasWrEn 0032      lcd_send_nibble@nibble 002B  
