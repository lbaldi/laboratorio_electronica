

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 06 01:29:27 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           	psect	idataCOMRAM
    49  002060                     __pidataCOMRAM:
    50                           	opt stack 0
    51                           
    52                           ;initializer for _anio
    53  002060  0010               	dw	16
    54                           
    55                           ;initializer for _dia
    56  002062  0001               	dw	1
    57                           
    58                           ;initializer for _mes
    59  002064  0001               	dw	1
    60                           
    61                           	psect	smallconst
    62  000F00                     __psmallconst:
    63                           	opt stack 0
    64  000F00  00                 	db	0
    65  000F01                     _dpowers:
    66                           	opt stack 0
    67  000F01  0001               	dw	1
    68  000F03  000A               	dw	10
    69  000F05  0064               	dw	100
    70  000F07  03E8               	dw	1000
    71  000F09  2710               	dw	10000
    72  000F0B                     __end_of_dpowers:
    73                           	opt stack 0
    74  000F0B                     _LCD_INIT_STRING:
    75                           	opt stack 0
    76  000F0B  28                 	db	40
    77  000F0C  0C                 	db	12
    78  000F0D  01                 	db	1
    79  000F0E  06                 	db	6
    80  000F0F                     __end_of_LCD_INIT_STRING:
    81                           	opt stack 0
    82  000F0F                     STR_18:
    83  000F0F  4F                 	db	79	;'O'
    84  000F10  70                 	db	112	;'p'
    85  000F11  74                 	db	116	;'t'
    86  000F12  69                 	db	105	;'i'
    87  000F13  6F                 	db	111	;'o'
    88  000F14  6E                 	db	110	;'n'
    89  000F15  31                 	db	49	;'1'
    90  000F16  00                 	db	0
    91  000F17                     STR_19:
    92  000F17  4F                 	db	79	;'O'
    93  000F18  70                 	db	112	;'p'
    94  000F19  74                 	db	116	;'t'
    95  000F1A  69                 	db	105	;'i'
    96  000F1B  6F                 	db	111	;'o'
    97  000F1C  6E                 	db	110	;'n'
    98  000F1D  32                 	db	50	;'2'
    99  000F1E  00                 	db	0
   100  000F1F                     STR_17:
   101  000F1F  4D                 	db	77	;'M'
   102  000F20  65                 	db	101	;'e'
   103  000F21  6E                 	db	110	;'n'
   104  000F22  75                 	db	117	;'u'
   105  000F23  20                 	db	32
   106  000F24  31                 	db	49	;'1'
   107  000F25  00                 	db	0
   108  000F26                     STR_20:
   109  000F26  4D                 	db	77	;'M'
   110  000F27  65                 	db	101	;'e'
   111  000F28  6E                 	db	110	;'n'
   112  000F29  75                 	db	117	;'u'
   113  000F2A  20                 	db	32
   114  000F2B  32                 	db	50	;'2'
   115  000F2C  00                 	db	0
   116  000F2D                     STR_23:
   117  000F2D  4D                 	db	77	;'M'
   118  000F2E  65                 	db	101	;'e'
   119  000F2F  6E                 	db	110	;'n'
   120  000F30  75                 	db	117	;'u'
   121  000F31  20                 	db	32
   122  000F32  33                 	db	51	;'3'
   123  000F33  00                 	db	0
   124  000F34                     STR_26:
   125  000F34  4D                 	db	77	;'M'
   126  000F35  65                 	db	101	;'e'
   127  000F36  6E                 	db	110	;'n'
   128  000F37  75                 	db	117	;'u'
   129  000F38  20                 	db	32
   130  000F39  34                 	db	52	;'4'
   131  000F3A  00                 	db	0
   132  000F3B                     STR_1:
   133  000F3B  4D                 	db	77	;'M'
   134  000F3C  65                 	db	101	;'e'
   135  000F3D  6E                 	db	110	;'n'
   136  000F3E  75                 	db	117	;'u'
   137  000F3F  31                 	db	49	;'1'
   138  000F40  00                 	db	0
   139  000F41                     STR_2:
   140  000F41  4D                 	db	77	;'M'
   141  000F42  65                 	db	101	;'e'
   142  000F43  6E                 	db	110	;'n'
   143  000F44  75                 	db	117	;'u'
   144  000F45  32                 	db	50	;'2'
   145  000F46  00                 	db	0
   146  000F47                     STR_3:
   147  000F47  4D                 	db	77	;'M'
   148  000F48  65                 	db	101	;'e'
   149  000F49  6E                 	db	110	;'n'
   150  000F4A  75                 	db	117	;'u'
   151  000F4B  33                 	db	51	;'3'
   152  000F4C  00                 	db	0
   153  000F4D                     STR_4:
   154  000F4D  4D                 	db	77	;'M'
   155  000F4E  65                 	db	101	;'e'
   156  000F4F  6E                 	db	110	;'n'
   157  000F50  75                 	db	117	;'u'
   158  000F51  34                 	db	52	;'4'
   159  000F52  00                 	db	0
   160  000F53                     STR_32:
   161  000F53  25                 	db	37
   162  000F54  30                 	db	48	;'0'
   163  000F55  31                 	db	49	;'1'
   164  000F56  75                 	db	117	;'u'
   165  000F57  00                 	db	0
   166  000F58                     STR_6:
   167  000F58  20                 	db	32
   168  000F59  00                 	db	0
   169  000F5A                     STR_31:
   170  000F5A  23                 	db	35
   171  000F5B  00                 	db	0
   172  000F5C                     STR_30:
   173  000F5C  2A                 	db	42
   174  000F5D  00                 	db	0
   175  000F5E                     STR_5:
   176  000F5E  3E                 	db	62	;'>'
   177  000F5F  00                 	db	0
   178  000F60                     STR_29:
   179  000F60  43                 	db	67	;'C'
   180  000F61  00                 	db	0
   181  0000                     
   182                           ; #config settings
   183  000F62  00                 	db	0	; dummy byte at the end
   184  0000                     
   185                           	psect	nvCOMRAM
   186  00004A                     __pnvCOMRAM:
   187                           	opt stack 0
   188  00004A                     _anio_d:
   189                           	opt stack 0
   190  00004A                     	ds	1
   191  00004B                     _anio_u:
   192                           	opt stack 0
   193  00004B                     	ds	1
   194  00004C                     _dia_semana:
   195                           	opt stack 0
   196  00004C                     	ds	1
   197  00004D                     _fecha_d:
   198                           	opt stack 0
   199  00004D                     	ds	1
   200  00004E                     _fecha_u:
   201                           	opt stack 0
   202  00004E                     	ds	1
   203  00004F                     _hora_d:
   204                           	opt stack 0
   205  00004F                     	ds	1
   206  000050                     _hora_u:
   207                           	opt stack 0
   208  000050                     	ds	1
   209  000051                     _mes_d:
   210                           	opt stack 0
   211  000051                     	ds	1
   212  000052                     _mes_u:
   213                           	opt stack 0
   214  000052                     	ds	1
   215  000053                     _minuto_d:
   216                           	opt stack 0
   217  000053                     	ds	1
   218  000054                     _minuto_u:
   219                           	opt stack 0
   220  000054                     	ds	1
   221  000055                     _segundo_d:
   222                           	opt stack 0
   223  000055                     	ds	1
   224  000056                     _segundo_u:
   225                           	opt stack 0
   226  000056                     	ds	1
   227  0000                     _ANCON0	set	3912
   228  0000                     _ANCON1	set	3913
   229  0000                     _RTCCFG	set	3903
   230  0000                     _RTCCFGbits	set	3903
   231  0000                     _ADCON0	set	4034
   232  0000                     _ADCON1	set	4033
   233  0000                     _ALRMCFGbits	set	3985
   234  0000                     _EECON2	set	4007
   235  0000                     _INTCONbits	set	4082
   236  0000                     _LATAbits	set	3977
   237  0000                     _LATBbits	set	3978
   238  0000                     _OSCCONbits	set	4051
   239  0000                     _OSCTUNEbits	set	3995
   240  0000                     _PIE3bits	set	4003
   241  0000                     _PORTAbits	set	3968
   242  0000                     _PORTCbits	set	3970
   243  0000                     _RTCVALH	set	3993
   244  0000                     _RTCVALL	set	3992
   245  0000                     _T1CONbits	set	4045
   246  0000                     _TRISA	set	3986
   247  0000                     _TRISB	set	3987
   248  0000                     _TRISBbits	set	3987
   249  0000                     _TRISC	set	3988
   250                           
   251                           	psect	cinit
   252  001ECE                     __pcinit:
   253                           	opt stack 0
   254  001ECE                     start_initialization:
   255                           	opt stack 0
   256  001ECE                     __initialization:
   257                           	opt stack 0
   258                           
   259                           ; Clear objects allocated to BANK0 (44 bytes)
   260  001ECE  EE00  F060         	lfsr	0,__pbssBANK0
   261  001ED2  0E2C               	movlw	44
   262  001ED4                     clear_0:
   263  001ED4  6AEE               	clrf	postinc0,c
   264  001ED6  06E8               	decf	wreg,f,c
   265  001ED8  E1FD               	bnz	clear_0
   266                           
   267                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   268  001EDA  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   269                           
   270                           ; Clear objects allocated to COMRAM (41 bytes)
   271  001EDC  EE00  F001         	lfsr	0,__pbssCOMRAM
   272  001EE0  0E29               	movlw	41
   273  001EE2                     clear_1:
   274  001EE2  6AEE               	clrf	postinc0,c
   275  001EE4  06E8               	decf	wreg,f,c
   276  001EE6  E1FD               	bnz	clear_1
   277                           
   278                           ; Initialize objects allocated to COMRAM (6 bytes)
   279                           ; load TBLPTR registers with __pidataCOMRAM
   280  001EE8  0E60               	movlw	low __pidataCOMRAM
   281  001EEA  6EF6               	movwf	tblptrl,c
   282  001EEC  0E20               	movlw	high __pidataCOMRAM
   283  001EEE  6EF7               	movwf	tblptrh,c
   284  001EF0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   285  001EF2  6EF8               	movwf	tblptru,c
   286  001EF4  EE00  F057         	lfsr	0,__pdataCOMRAM
   287  001EF8  EE10 F006          	lfsr	1,6
   288  001EFC                     copy_data0:
   289  001EFC  0009               	tblrd		*+
   290  001EFE  CFF5 FFEE          	movff	tablat,postinc0
   291  001F02  50E5               	movf	postdec1,w,c
   292  001F04  50E1               	movf	fsr1l,w,c
   293  001F06  E1FA               	bnz	copy_data0
   294  001F08                     end_of_initialization:
   295                           	opt stack 0
   296  001F08                     __end_of__initialization:
   297                           	opt stack 0
   298  001F08  0E00               	movlw	low (__Lmediumconst shr (0+16))
   299  001F0A  6EF8               	movwf	tblptru,c
   300  001F0C  0100               	movlb	0
   301  001F0E  EFE8  F00F         	goto	_main	;jump to C main() function
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           postdec1	equ	0xFE5
   309                           fsr1l	equ	0xFE1
   310                           
   311                           	psect	bitbssCOMRAM
   312  0002E8                     __pbitbssCOMRAM:
   313                           	opt stack 0
   314  0002E8                     _flag:
   315                           	opt stack 0
   316  0002E8                     	ds	1
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	bssCOMRAM
   327  000001                     __pbssCOMRAM:
   328                           	opt stack 0
   329  000001                     _RtccTimeVal:
   330                           	opt stack 0
   331  000001                     	ds	4
   332  000005                     _a:
   333                           	opt stack 0
   334  000005                     	ds	2
   335  000007                     _b:
   336                           	opt stack 0
   337  000007                     	ds	2
   338  000009                     _c:
   339                           	opt stack 0
   340  000009                     	ds	2
   341  00000B                     _diasem:
   342                           	opt stack 0
   343  00000B                     	ds	2
   344  00000D                     _hora:
   345                           	opt stack 0
   346  00000D                     	ds	2
   347  00000F                     _i:
   348                           	opt stack 0
   349  00000F                     	ds	2
   350  000011                     _j:
   351                           	opt stack 0
   352  000011                     	ds	2
   353  000013                     _k:
   354                           	opt stack 0
   355  000013                     	ds	2
   356  000015                     _minuto:
   357                           	opt stack 0
   358  000015                     	ds	2
   359  000017                     _segundo:
   360                           	opt stack 0
   361  000017                     	ds	2
   362  000019                     _select:
   363                           	opt stack 0
   364  000019                     	ds	2
   365  00001B                     _select_op:
   366                           	opt stack 0
   367  00001B                     	ds	2
   368  00001D                     _selection:
   369                           	opt stack 0
   370  00001D                     	ds	2
   371  00001F                     _submenu:
   372                           	opt stack 0
   373  00001F                     	ds	2
   374  000021                     _key:
   375                           	opt stack 0
   376  000021                     	ds	1
   377  000022                     _RtccDate:
   378                           	opt stack 0
   379  000022                     	ds	4
   380  000026                     _RtccTime:
   381                           	opt stack 0
   382  000026                     	ds	4
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           postdec1	equ	0xFE5
   390                           fsr1l	equ	0xFE1
   391                           
   392                           	psect	dataCOMRAM
   393  000057                     __pdataCOMRAM:
   394                           	opt stack 0
   395  000057                     _anio:
   396                           	opt stack 0
   397  000057                     	ds	2
   398  000059                     _dia:
   399                           	opt stack 0
   400  000059                     	ds	2
   401  00005B                     _mes:
   402                           	opt stack 0
   403  00005B                     	ds	2
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postdec1	equ	0xFE5
   411                           fsr1l	equ	0xFE1
   412                           
   413                           	psect	bssBANK0
   414  000060                     __pbssBANK0:
   415                           	opt stack 0
   416  000060                     _RtccAlrmTimeDate:
   417                           	opt stack 0
   418  000060                     	ds	8
   419  000068                     _RtccTimeDate:
   420                           	opt stack 0
   421  000068                     	ds	8
   422  000070                     _Rtcc_read_TimeDate:
   423                           	opt stack 0
   424  000070                     	ds	8
   425  000078                     _buffer2:
   426                           	opt stack 0
   427  000078                     	ds	20
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	cstackCOMRAM
   438  00002A                     __pcstackCOMRAM:
   439                           	opt stack 0
   440  00002A                     ??_isdigit:
   441  00002A                     ??_lcd_send_nibble:
   442  00002A                     ?___wmul:
   443                           	opt stack 0
   444  00002A                     ?___awdiv:
   445                           	opt stack 0
   446  00002A                     ?___lwdiv:
   447                           	opt stack 0
   448  00002A                     Delay100TCYx@unit:
   449                           	opt stack 0
   450  00002A                     Delay1KTCYx@unit:
   451                           	opt stack 0
   452  00002A                     RtccWriteDate@pDt:
   453                           	opt stack 0
   454  00002A                     RtccWriteTime@pTm:
   455                           	opt stack 0
   456  00002A                     ___wmul@multiplier:
   457                           	opt stack 0
   458  00002A                     ___awdiv@dividend:
   459                           	opt stack 0
   460  00002A                     ___lwdiv@dividend:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x0
   464  00002A                     	ds	1
   465  00002B                     lcd_send_nibble@nibble:
   466                           	opt stack 0
   467  00002B                     _isdigit$2085:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x1
   471  00002B                     	ds	1
   472  00002C                     lcd_send_byte@n:
   473                           	opt stack 0
   474  00002C                     RtccWriteDate@di:
   475                           	opt stack 0
   476  00002C                     RtccWriteTime@di:
   477                           	opt stack 0
   478  00002C                     isdigit@c:
   479                           	opt stack 0
   480  00002C                     ___wmul@multiplicand:
   481                           	opt stack 0
   482  00002C                     ___awdiv@divisor:
   483                           	opt stack 0
   484  00002C                     ___lwdiv@divisor:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x2
   488  00002C                     	ds	1
   489  00002D                     lcd_send_byte@address:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x3
   493  00002D                     	ds	1
   494  00002E                     lcd_init@i:
   495                           	opt stack 0
   496  00002E                     lcd_gotoxy@y:
   497                           	opt stack 0
   498  00002E                     lcd_comand@d:
   499                           	opt stack 0
   500  00002E                     RtccWriteDate@wasOn:
   501                           	opt stack 0
   502  00002E                     RtccWriteTime@wasOn:
   503                           	opt stack 0
   504  00002E                     ___awdiv@counter:
   505                           	opt stack 0
   506  00002E                     ___wmul@product:
   507                           	opt stack 0
   508  00002E                     ___lwdiv@quotient:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x4
   512  00002E                     	ds	1
   513  00002F                     lcd_gotoxy@x:
   514                           	opt stack 0
   515  00002F                     RtccWriteDate@wasAlrm:
   516                           	opt stack 0
   517  00002F                     RtccWriteTime@wasAlrm:
   518                           	opt stack 0
   519  00002F                     ___awdiv@sign:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x5
   523  00002F                     	ds	1
   524  000030                     lcd_gotoxy@address:
   525                           	opt stack 0
   526  000030                     RtccWriteTime@wasWrEn:
   527                           	opt stack 0
   528  000030                     ___lwdiv@counter:
   529                           	opt stack 0
   530  000030                     RtccWriteDate@tempYear:
   531                           	opt stack 0
   532  000030                     ___awdiv@quotient:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x6
   536  000030                     	ds	1
   537  000031                     ?___lwmod:
   538                           	opt stack 0
   539  000031                     lcd_putc@c:
   540                           	opt stack 0
   541  000031                     RtccWriteTime@tempMinSec:
   542                           	opt stack 0
   543  000031                     ___lwmod@dividend:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x7
   547  000031                     	ds	1
   548  000032                     RtccWriteDate@wasWrEn:
   549                           	opt stack 0
   550  000032                     lcd_putrs@ptr:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x8
   554  000032                     	ds	1
   555  000033                     RtccWriteDate@tempDayMonth:
   556                           	opt stack 0
   557  000033                     RtccWriteTime@tempHourWDay:
   558                           	opt stack 0
   559  000033                     ___lwmod@divisor:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x9
   563  000033                     	ds	1
   564  000034                     ??_Menu_Iterator:
   565  000034                     ??_Menu_Submenu_Iterator:
   566  000034                     ??_Button_B:
   567  000034                     
   568                           ; 0 bytes @ 0xA
   569  000034                     	ds	1
   570  000035                     ___lwmod@counter:
   571                           	opt stack 0
   572  000035                     RtccWriteDate@tempHourWDay:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0xB
   576  000035                     	ds	1
   577  000036                     ?_sprintf:
   578                           	opt stack 0
   579  000036                     sprintf@sp:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0xC
   583  000036                     	ds	1
   584  000037                     
   585                           ; 0 bytes @ 0xD
   586  000037                     	ds	1
   587  000038                     sprintf@f:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0xE
   591  000038                     	ds	4
   592  00003C                     ??_sprintf:
   593                           
   594                           ; 0 bytes @ 0x12
   595  00003C                     	ds	4
   596  000040                     sprintf@ap:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x16
   600  000040                     	ds	2
   601  000042                     sprintf@flag:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x18
   605  000042                     	ds	1
   606  000043                     sprintf@val:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x19
   610  000043                     	ds	2
   611  000045                     sprintf@prec:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x1B
   615  000045                     	ds	1
   616  000046                     sprintf@width:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x1C
   620  000046                     	ds	2
   621  000048                     sprintf@c:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x1E
   625  000048                     	ds	1
   626  000049                     ??_Keyboard_Control:
   627                           
   628                           ; 0 bytes @ 0x1F
   629  000049                     	ds	1
   630  00004A                     tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           ; 0 bytes @ 0x20
   640 ;;
   641 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   642 ;;
   643 ;; *************** function _main *****************
   644 ;; Defined at:
   645 ;;		line 262 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  2  265[None  ] int 
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   663 ;;Total ram usage:        0 bytes
   664 ;; Hardware stack levels required when called:    8
   665 ;; This function calls:
   666 ;;		_Keyboard_Control
   667 ;;		_Menu_Home
   668 ;;		_Setup
   669 ;; This function is called by:
   670 ;;		Startup code after reset
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text0
   675  001FD0                     __ptext0:
   676                           	opt stack 0
   677  001FD0                     _main:
   678                           	opt stack 23
   679                           
   680                           ;main.c: 264: Setup();
   681                           
   682                           ;incstack = 0
   683  001FD0  EC60  F00E         	call	_Setup	;wreg free
   684                           
   685                           ;main.c: 265: Menu_Home();
   686  001FD4  EC94  F00E         	call	_Menu_Home	;wreg free
   687  001FD8  D000               	goto	l2803
   688  001FDA                     l2803:
   689  001FDA  ECB2  F007         	call	_Keyboard_Control	;wreg free
   690  001FDE  D7FD               	goto	l2803
   691                           
   692                           ;main.c: 267: return 0;
   693                           ;	Return value of _main is never used
   694  001FE0  EF00  F000         	goto	start
   695  001FE4                     __end_of_main:
   696                           	opt stack 0
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           postinc0	equ	0xFEE
   702                           wreg	equ	0xFE8
   703                           postdec1	equ	0xFE5
   704                           fsr1l	equ	0xFE1
   705                           
   706 ;; *************** function _Setup *****************
   707 ;; Defined at:
   708 ;;		line 35 in file "main.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;		None               void
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    3
   729 ;; This function calls:
   730 ;;		_Write_RTC
   731 ;;		_lcd_comand
   732 ;;		_lcd_init
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text1
   739  001CC0                     __ptext1:
   740                           	opt stack 0
   741  001CC0                     _Setup:
   742                           	opt stack 27
   743                           
   744                           ;main.c: 37: OSCTUNEbits.INTSRC=1;
   745                           
   746                           ;incstack = 0
   747  001CC0  8E9B               	bsf	3995,7,c	;volatile
   748                           
   749                           ;main.c: 38: OSCTUNEbits.PLLEN=0;
   750  001CC2  9C9B               	bcf	3995,6,c	;volatile
   751                           
   752                           ;main.c: 39: OSCCONbits.IRCF0=1;
   753  001CC4  88D3               	bsf	4051,4,c	;volatile
   754                           
   755                           ;main.c: 40: OSCCONbits.IRCF1=1;
   756  001CC6  8AD3               	bsf	4051,5,c	;volatile
   757                           
   758                           ;main.c: 41: OSCCONbits.IRCF2=1;
   759  001CC8  8CD3               	bsf	4051,6,c	;volatile
   760                           
   761                           ;main.c: 42: OSCCONbits.SCS0=0;
   762  001CCA  90D3               	bcf	4051,0,c	;volatile
   763                           
   764                           ;main.c: 43: OSCCONbits.SCS1=0;
   765  001CCC  92D3               	bcf	4051,1,c	;volatile
   766                           
   767                           ;main.c: 44: TRISA = 0b11110000;
   768  001CCE  0EF0               	movlw	240
   769  001CD0  6E92               	movwf	3986,c	;volatile
   770                           
   771                           ;main.c: 45: TRISB = 0;
   772  001CD2  0E00               	movlw	0
   773  001CD4  6E93               	movwf	3987,c	;volatile
   774                           
   775                           ;main.c: 46: TRISC = 0b00000111;
   776  001CD6  0E07               	movlw	7
   777  001CD8  6E94               	movwf	3988,c	;volatile
   778                           
   779                           ;main.c: 50: ANCON0=0b11111111;
   780  001CDA  010F               	movlb	15	; () banked
   781  001CDC  6948               	setf	72,b	;volatile
   782                           
   783                           ; BSR set to: 15
   784                           ;main.c: 52: ANCON1=0b11111111;
   785  001CDE  010F               	movlb	15	; () banked
   786  001CE0  6949               	setf	73,b	;volatile
   787                           
   788                           ;main.c: 53: ADCON0=0b00101101;
   789  001CE2  0E2D               	movlw	45
   790  001CE4  6EC2               	movwf	4034,c	;volatile
   791                           
   792                           ;main.c: 54: ADCON1=0b00010000;
   793  001CE6  0E10               	movlw	16
   794  001CE8  6EC1               	movwf	4033,c	;volatile
   795                           
   796                           ; BSR set to: 15
   797                           ;main.c: 55: RTCCFGbits.RTCEN=1;
   798  001CEA  010F               	movlb	15	; () banked
   799  001CEC  8F3F               	bsf	63,7,b	;volatile
   800                           
   801                           ; BSR set to: 15
   802                           ;main.c: 56: RTCCFGbits.RTCWREN=1;
   803  001CEE  010F               	movlb	15	; () banked
   804  001CF0  8B3F               	bsf	63,5,b	;volatile
   805                           
   806                           ; BSR set to: 15
   807                           ;main.c: 57: T1CONbits.T1OSCEN=1;
   808  001CF2  86CD               	bsf	4045,3,c	;volatile
   809                           
   810                           ; BSR set to: 15
   811                           ;main.c: 58: Write_RTC();
   812  001CF4  ECF1  F00A         	call	_Write_RTC	;wreg free
   813                           
   814                           ;main.c: 59: lcd_init();
   815  001CF8  ECE5  F00D         	call	_lcd_init	;wreg free
   816                           
   817                           ;main.c: 60: lcd_comand(0b00001100);
   818  001CFC  0E0C               	movlw	12
   819  001CFE  EC0D  F010         	call	_lcd_comand
   820                           
   821                           ;main.c: 61: LATBbits.LATB1 = 1;;
   822  001D02  828A               	bsf	3978,1,c	;volatile
   823                           
   824                           ;main.c: 62: LATBbits.LATB0 = 1;;
   825  001D04  808A               	bsf	3978,0,c	;volatile
   826                           
   827                           ;main.c: 65: select = 1;
   828  001D06  0E00               	movlw	0
   829  001D08  6E1A               	movwf	_select+1,c
   830  001D0A  0E01               	movlw	1
   831  001D0C  6E19               	movwf	_select,c
   832                           
   833                           ;main.c: 66: selection = 1;
   834  001D0E  0E00               	movlw	0
   835  001D10  6E1E               	movwf	_selection+1,c
   836  001D12  0E01               	movlw	1
   837  001D14  6E1D               	movwf	_selection,c
   838                           
   839                           ;main.c: 67: submenu = 0;
   840  001D16  0E00               	movlw	0
   841  001D18  6E20               	movwf	_submenu+1,c
   842  001D1A  0E00               	movlw	0
   843  001D1C  6E1F               	movwf	_submenu,c
   844                           
   845                           ;main.c: 68: select_op = 1;
   846  001D1E  0E00               	movlw	0
   847  001D20  6E1C               	movwf	_select_op+1,c
   848  001D22  0E01               	movlw	1
   849  001D24  6E1B               	movwf	_select_op,c
   850  001D26  0012               	return		;funcret
   851  001D28                     __end_of_Setup:
   852                           	opt stack 0
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           postdec1	equ	0xFE5
   860                           fsr1l	equ	0xFE1
   861                           
   862 ;; *************** function _lcd_comand *****************
   863 ;; Defined at:
   864 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  d               1    wreg     unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  d               1    4[COMRAM] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;		None               void
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   882 ;;Total ram usage:        1 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    2
   885 ;; This function calls:
   886 ;;		_lcd_send_byte
   887 ;; This function is called by:
   888 ;;		_Setup
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text2
   893  00201A                     __ptext2:
   894                           	opt stack 0
   895  00201A                     _lcd_comand:
   896                           	opt stack 27
   897                           
   898                           ;incstack = 0
   899                           ;lcd_comand@d stored from wreg
   900  00201A  6E2E               	movwf	lcd_comand@d,c
   901                           
   902                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
   903  00201C  C02E  F02C         	movff	lcd_comand@d,lcd_send_byte@n
   904  002020  0E00               	movlw	0
   905  002022  EC89  F00F         	call	_lcd_send_byte
   906  002026  0012               	return		;funcret
   907  002028                     __end_of_lcd_comand:
   908                           	opt stack 0
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1l	equ	0xFE1
   917                           
   918 ;; *************** function _Write_RTC *****************
   919 ;; Defined at:
   920 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;		None               void
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    2
   941 ;; This function calls:
   942 ;;		_RtccWrOn
   943 ;;		_RtccWriteDate
   944 ;;		_RtccWriteTime
   945 ;;		___awdiv
   946 ;; This function is called by:
   947 ;;		_Setup
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text3
   952  0015E2                     __ptext3:
   953                           	opt stack 0
   954  0015E2                     _Write_RTC:
   955                           	opt stack 27
   956                           
   957                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
   958                           
   959                           ;incstack = 0
   960  0015E2  ECF2  F00F         	call	_RtccWrOn	;wreg free
   961                           
   962                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
   963  0015E6  80A3               	bsf	4003,0,c	;volatile
   964                           
   965                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
   966  0015E8  C017  F02A         	movff	_segundo,___awdiv@dividend
   967  0015EC  C018  F02B         	movff	_segundo+1,___awdiv@dividend+1
   968  0015F0  0E00               	movlw	0
   969  0015F2  6E2D               	movwf	___awdiv@divisor+1,c
   970  0015F4  0E0A               	movlw	10
   971  0015F6  6E2C               	movwf	___awdiv@divisor,c
   972  0015F8  EC52  F00D         	call	___awdiv	;wreg free
   973  0015FC  502A               	movf	?___awdiv,w,c
   974  0015FE  6E55               	movwf	_segundo_d,c
   975                           
   976                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
   977  001600  5055               	movf	_segundo_d,w,c
   978  001602  0D0A               	mullw	10
   979  001604  50F3               	movf	prodl,w,c
   980  001606  0800               	sublw	0
   981  001608  2417               	addwf	_segundo,w,c
   982  00160A  6E56               	movwf	_segundo_u,c
   983                           
   984                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
   985  00160C  5055               	movf	_segundo_d,w,c
   986  00160E  0D10               	mullw	16
   987  001610  50F3               	movf	prodl,w,c
   988  001612  2456               	addwf	_segundo_u,w,c
   989  001614  6E27               	movwf	_RtccTime+1,c
   990                           
   991                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
   992  001616  C015  F02A         	movff	_minuto,___awdiv@dividend
   993  00161A  C016  F02B         	movff	_minuto+1,___awdiv@dividend+1
   994  00161E  0E00               	movlw	0
   995  001620  6E2D               	movwf	___awdiv@divisor+1,c
   996  001622  0E0A               	movlw	10
   997  001624  6E2C               	movwf	___awdiv@divisor,c
   998  001626  EC52  F00D         	call	___awdiv	;wreg free
   999  00162A  502A               	movf	?___awdiv,w,c
  1000  00162C  6E53               	movwf	_minuto_d,c
  1001                           
  1002                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1003  00162E  5053               	movf	_minuto_d,w,c
  1004  001630  0D0A               	mullw	10
  1005  001632  50F3               	movf	prodl,w,c
  1006  001634  0800               	sublw	0
  1007  001636  2415               	addwf	_minuto,w,c
  1008  001638  6E54               	movwf	_minuto_u,c
  1009                           
  1010                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1011  00163A  5053               	movf	_minuto_d,w,c
  1012  00163C  0D10               	mullw	16
  1013  00163E  50F3               	movf	prodl,w,c
  1014  001640  2454               	addwf	_minuto_u,w,c
  1015  001642  6E28               	movwf	_RtccTime+2,c
  1016                           
  1017                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1018  001644  C00D  F02A         	movff	_hora,___awdiv@dividend
  1019  001648  C00E  F02B         	movff	_hora+1,___awdiv@dividend+1
  1020  00164C  0E00               	movlw	0
  1021  00164E  6E2D               	movwf	___awdiv@divisor+1,c
  1022  001650  0E0A               	movlw	10
  1023  001652  6E2C               	movwf	___awdiv@divisor,c
  1024  001654  EC52  F00D         	call	___awdiv	;wreg free
  1025  001658  502A               	movf	?___awdiv,w,c
  1026  00165A  6E4F               	movwf	_hora_d,c
  1027                           
  1028                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1029  00165C  504F               	movf	_hora_d,w,c
  1030  00165E  0D0A               	mullw	10
  1031  001660  50F3               	movf	prodl,w,c
  1032  001662  0800               	sublw	0
  1033  001664  240D               	addwf	_hora,w,c
  1034  001666  6E50               	movwf	_hora_u,c
  1035                           
  1036                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1037  001668  504F               	movf	_hora_d,w,c
  1038  00166A  0D10               	mullw	16
  1039  00166C  50F3               	movf	prodl,w,c
  1040  00166E  2450               	addwf	_hora_u,w,c
  1041  001670  6E29               	movwf	_RtccTime+3,c
  1042                           
  1043                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1044  001672  C057  F02A         	movff	_anio,___awdiv@dividend
  1045  001676  C058  F02B         	movff	_anio+1,___awdiv@dividend+1
  1046  00167A  0E00               	movlw	0
  1047  00167C  6E2D               	movwf	___awdiv@divisor+1,c
  1048  00167E  0E0A               	movlw	10
  1049  001680  6E2C               	movwf	___awdiv@divisor,c
  1050  001682  EC52  F00D         	call	___awdiv	;wreg free
  1051  001686  502A               	movf	?___awdiv,w,c
  1052  001688  6E4A               	movwf	_anio_d,c
  1053                           
  1054                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1055  00168A  504A               	movf	_anio_d,w,c
  1056  00168C  0D0A               	mullw	10
  1057  00168E  50F3               	movf	prodl,w,c
  1058  001690  0800               	sublw	0
  1059  001692  2457               	addwf	_anio,w,c
  1060  001694  6E4B               	movwf	_anio_u,c
  1061                           
  1062                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1063  001696  504A               	movf	_anio_d,w,c
  1064  001698  0D10               	mullw	16
  1065  00169A  50F3               	movf	prodl,w,c
  1066  00169C  244B               	addwf	_anio_u,w,c
  1067  00169E  6E25               	movwf	_RtccDate+3,c
  1068                           
  1069                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1070  0016A0  C05B  F02A         	movff	_mes,___awdiv@dividend
  1071  0016A4  C05C  F02B         	movff	_mes+1,___awdiv@dividend+1
  1072  0016A8  0E00               	movlw	0
  1073  0016AA  6E2D               	movwf	___awdiv@divisor+1,c
  1074  0016AC  0E0A               	movlw	10
  1075  0016AE  6E2C               	movwf	___awdiv@divisor,c
  1076  0016B0  EC52  F00D         	call	___awdiv	;wreg free
  1077  0016B4  502A               	movf	?___awdiv,w,c
  1078  0016B6  6E51               	movwf	_mes_d,c
  1079                           
  1080                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1081  0016B8  5051               	movf	_mes_d,w,c
  1082  0016BA  0D0A               	mullw	10
  1083  0016BC  50F3               	movf	prodl,w,c
  1084  0016BE  0800               	sublw	0
  1085  0016C0  245B               	addwf	_mes,w,c
  1086  0016C2  6E52               	movwf	_mes_u,c
  1087                           
  1088                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1089  0016C4  5051               	movf	_mes_d,w,c
  1090  0016C6  0D10               	mullw	16
  1091  0016C8  50F3               	movf	prodl,w,c
  1092  0016CA  2452               	addwf	_mes_u,w,c
  1093  0016CC  6E24               	movwf	_RtccDate+2,c
  1094                           
  1095                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1096  0016CE  C059  F02A         	movff	_dia,___awdiv@dividend
  1097  0016D2  C05A  F02B         	movff	_dia+1,___awdiv@dividend+1
  1098  0016D6  0E00               	movlw	0
  1099  0016D8  6E2D               	movwf	___awdiv@divisor+1,c
  1100  0016DA  0E0A               	movlw	10
  1101  0016DC  6E2C               	movwf	___awdiv@divisor,c
  1102  0016DE  EC52  F00D         	call	___awdiv	;wreg free
  1103  0016E2  502A               	movf	?___awdiv,w,c
  1104  0016E4  6E4D               	movwf	_fecha_d,c
  1105                           
  1106                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1107  0016E6  504D               	movf	_fecha_d,w,c
  1108  0016E8  0D0A               	mullw	10
  1109  0016EA  50F3               	movf	prodl,w,c
  1110  0016EC  0800               	sublw	0
  1111  0016EE  2459               	addwf	_dia,w,c
  1112  0016F0  6E4E               	movwf	_fecha_u,c
  1113                           
  1114                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1115  0016F2  504D               	movf	_fecha_d,w,c
  1116  0016F4  0D10               	mullw	16
  1117  0016F6  50F3               	movf	prodl,w,c
  1118  0016F8  244E               	addwf	_fecha_u,w,c
  1119  0016FA  6E23               	movwf	_RtccDate+1,c
  1120                           
  1121                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1122  0016FC  C00B  F04C         	movff	_diasem,_dia_semana
  1123                           
  1124                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1125  001700  C00B  F022         	movff	_diasem,_RtccDate
  1126                           
  1127                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1128  001704  0E26               	movlw	low _RtccTime
  1129  001706  6E2A               	movwf	RtccWriteTime@pTm,c
  1130  001708  0E00               	movlw	high _RtccTime
  1131  00170A  6E2B               	movwf	RtccWriteTime@pTm+1,c
  1132  00170C  0E01               	movlw	1
  1133  00170E  6E2C               	movwf	RtccWriteTime@di,c
  1134  001710  ECCC  F00C         	call	_RtccWriteTime	;wreg free
  1135                           
  1136                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1137  001714  0E22               	movlw	low _RtccDate
  1138  001716  6E2A               	movwf	RtccWriteDate@pDt,c
  1139  001718  0E00               	movlw	high _RtccDate
  1140  00171A  6E2B               	movwf	RtccWriteDate@pDt+1,c
  1141  00171C  0E01               	movlw	1
  1142  00171E  6E2C               	movwf	RtccWriteDate@di,c
  1143  001720  EC95  F00B         	call	_RtccWriteDate	;wreg free
  1144                           
  1145                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1146  001724  010F               	movlb	15	; () banked
  1147  001726  8F3F               	bsf	63,7,b	;volatile
  1148                           
  1149                           ; BSR set to: 15
  1150  001728  0012               	return		;funcret
  1151  00172A                     __end_of_Write_RTC:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           prodl	equ	0xFF3
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           postdec1	equ	0xFE5
  1161                           fsr1l	equ	0xFE1
  1162                           
  1163 ;; *************** function ___awdiv *****************
  1164 ;; Defined at:
  1165 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  dividend        2    0[COMRAM] int 
  1168 ;;  divisor         2    2[COMRAM] int 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  quotient        2    6[COMRAM] int 
  1171 ;;  sign            1    5[COMRAM] unsigned char 
  1172 ;;  counter         1    4[COMRAM] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  2    0[COMRAM] int 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1183 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1186 ;;Total ram usage:        8 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_Write_RTC
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text4
  1196  001AA4                     __ptext4:
  1197                           	opt stack 0
  1198  001AA4                     ___awdiv:
  1199                           	opt stack 28
  1200                           
  1201                           ; BSR set to: 15
  1202                           ;incstack = 0
  1203  001AA4  0E00               	movlw	0
  1204  001AA6  6E2F               	movwf	___awdiv@sign,c
  1205  001AA8  AE2D               	btfss	___awdiv@divisor+1,7,c
  1206  001AAA  D007               	goto	l2369
  1207  001AAC  6C2C               	negf	___awdiv@divisor,c
  1208  001AAE  1E2D               	comf	___awdiv@divisor+1,f,c
  1209  001AB0  B0D8               	btfsc	status,0,c
  1210  001AB2  2A2D               	incf	___awdiv@divisor+1,f,c
  1211  001AB4  0E01               	movlw	1
  1212  001AB6  6E2F               	movwf	___awdiv@sign,c
  1213  001AB8  D000               	goto	l2369
  1214  001ABA                     l2369:
  1215  001ABA  AE2B               	btfss	___awdiv@dividend+1,7,c
  1216  001ABC  D007               	goto	l2375
  1217  001ABE  6C2A               	negf	___awdiv@dividend,c
  1218  001AC0  1E2B               	comf	___awdiv@dividend+1,f,c
  1219  001AC2  B0D8               	btfsc	status,0,c
  1220  001AC4  2A2B               	incf	___awdiv@dividend+1,f,c
  1221  001AC6  0E01               	movlw	1
  1222  001AC8  1A2F               	xorwf	___awdiv@sign,f,c
  1223  001ACA  D000               	goto	l2375
  1224  001ACC                     l2375:
  1225  001ACC  0E00               	movlw	0
  1226  001ACE  6E31               	movwf	___awdiv@quotient+1,c
  1227  001AD0  0E00               	movlw	0
  1228  001AD2  6E30               	movwf	___awdiv@quotient,c
  1229  001AD4  502C               	movf	___awdiv@divisor,w,c
  1230  001AD6  102D               	iorwf	___awdiv@divisor+1,w,c
  1231  001AD8  B4D8               	btfsc	status,2,c
  1232  001ADA  D021               	goto	l2397
  1233  001ADC  0E01               	movlw	1
  1234  001ADE  6E2E               	movwf	___awdiv@counter,c
  1235  001AE0  D005               	goto	l2383
  1236  001AE2                     l2381:
  1237  001AE2  90D8               	bcf	status,0,c
  1238  001AE4  362C               	rlcf	___awdiv@divisor,f,c
  1239  001AE6  362D               	rlcf	___awdiv@divisor+1,f,c
  1240  001AE8  2A2E               	incf	___awdiv@counter,f,c
  1241  001AEA  D000               	goto	l2383
  1242  001AEC                     l2383:
  1243  001AEC  BE2D               	btfsc	___awdiv@divisor+1,7,c
  1244  001AEE  D002               	goto	l2385
  1245  001AF0  D7F8               	goto	l2381
  1246  001AF2  D000               	goto	l2385
  1247  001AF4                     l2385:
  1248  001AF4  90D8               	bcf	status,0,c
  1249  001AF6  3630               	rlcf	___awdiv@quotient,f,c
  1250  001AF8  3631               	rlcf	___awdiv@quotient+1,f,c
  1251  001AFA  502C               	movf	___awdiv@divisor,w,c
  1252  001AFC  5C2A               	subwf	___awdiv@dividend,w,c
  1253  001AFE  502D               	movf	___awdiv@divisor+1,w,c
  1254  001B00  582B               	subwfb	___awdiv@dividend+1,w,c
  1255  001B02  A0D8               	btfss	status,0,c
  1256  001B04  D006               	goto	l2393
  1257  001B06  502C               	movf	___awdiv@divisor,w,c
  1258  001B08  5E2A               	subwf	___awdiv@dividend,f,c
  1259  001B0A  502D               	movf	___awdiv@divisor+1,w,c
  1260  001B0C  5A2B               	subwfb	___awdiv@dividend+1,f,c
  1261  001B0E  8030               	bsf	___awdiv@quotient,0,c
  1262  001B10  D000               	goto	l2393
  1263  001B12                     l2393:
  1264  001B12  90D8               	bcf	status,0,c
  1265  001B14  322D               	rrcf	___awdiv@divisor+1,f,c
  1266  001B16  322C               	rrcf	___awdiv@divisor,f,c
  1267  001B18  2E2E               	decfsz	___awdiv@counter,f,c
  1268  001B1A  D7EC               	goto	l2385
  1269  001B1C  D000               	goto	l2397
  1270  001B1E                     l2397:
  1271  001B1E  502F               	movf	___awdiv@sign,w,c
  1272  001B20  B4D8               	btfsc	status,2,c
  1273  001B22  D005               	goto	l2401
  1274  001B24  6C30               	negf	___awdiv@quotient,c
  1275  001B26  1E31               	comf	___awdiv@quotient+1,f,c
  1276  001B28  B0D8               	btfsc	status,0,c
  1277  001B2A  2A31               	incf	___awdiv@quotient+1,f,c
  1278  001B2C  D000               	goto	l2401
  1279  001B2E                     l2401:
  1280  001B2E  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  1281  001B32  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  1282  001B36  0012               	return	
  1283  001B38  0012               	return		;funcret
  1284  001B3A                     __end_of___awdiv:
  1285                           	opt stack 0
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           prodl	equ	0xFF3
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           postdec1	equ	0xFE5
  1294                           fsr1l	equ	0xFE1
  1295                           status	equ	0xFD8
  1296                           
  1297 ;; *************** function _RtccWriteTime *****************
  1298 ;; Defined at:
  1299 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  pTm             2    0[COMRAM] PTR const struct .
  1302 ;;		 -> RtccTime(4), 
  1303 ;;  di              1    2[COMRAM] enum E7121
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  tempHourWDay    2    9[COMRAM] struct .
  1306 ;;  tempMinSec      2    7[COMRAM] struct .
  1307 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1308 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1309 ;;  wasOn           1    4[COMRAM] enum E7121
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      enum E7337
  1312 ;; Registers used:
  1313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1319 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1322 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1323 ;;Total ram usage:       11 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    1
  1326 ;; This function calls:
  1327 ;;		_RtccWrOn
  1328 ;; This function is called by:
  1329 ;;		_Write_RTC
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text5
  1334  001998                     __ptext5:
  1335                           	opt stack 0
  1336  001998                     _RtccWriteTime:
  1337                           	opt stack 27
  1338                           
  1339                           ;incstack = 0
  1340  001998  0E00               	movlw	0
  1341  00199A  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1342  00199C  EE20 F002          	lfsr	2,2
  1343  0019A0  502A               	movf	RtccWriteTime@pTm,w,c
  1344  0019A2  26D9               	addwf	fsr2l,f,c
  1345  0019A4  502B               	movf	RtccWriteTime@pTm+1,w,c
  1346  0019A6  22DA               	addwfc	fsr2h,f,c
  1347  0019A8  0E5A               	movlw	90
  1348  0019AA  60DF               	cpfslt	indf2,c
  1349  0019AC  0012               	return	
  1350  0019AE  EE20 F001          	lfsr	2,1
  1351  0019B2  502A               	movf	RtccWriteTime@pTm,w,c
  1352  0019B4  26D9               	addwf	fsr2l,f,c
  1353  0019B6  502B               	movf	RtccWriteTime@pTm+1,w,c
  1354  0019B8  22DA               	addwfc	fsr2h,f,c
  1355  0019BA  0E5A               	movlw	90
  1356  0019BC  60DF               	cpfslt	indf2,c
  1357  0019BE  0012               	return	
  1358  0019C0  EE20 F003          	lfsr	2,3
  1359  0019C4  502A               	movf	RtccWriteTime@pTm,w,c
  1360  0019C6  26D9               	addwf	fsr2l,f,c
  1361  0019C8  502B               	movf	RtccWriteTime@pTm+1,w,c
  1362  0019CA  22DA               	addwfc	fsr2h,f,c
  1363  0019CC  0E24               	movlw	36
  1364  0019CE  64DF               	cpfsgt	indf2,c
  1365  0019D0  D002               	goto	l2117
  1366  0019D2  0012               	return	
  1367                           
  1368                           ;	Return value of _RtccWriteTime is never used
  1369  0019D4  0012               	return	
  1370  0019D6                     l2117:
  1371  0019D6  EE20 F002          	lfsr	2,2
  1372  0019DA  502A               	movf	RtccWriteTime@pTm,w,c
  1373  0019DC  26D9               	addwf	fsr2l,f,c
  1374  0019DE  502B               	movf	RtccWriteTime@pTm+1,w,c
  1375  0019E0  22DA               	addwfc	fsr2h,f,c
  1376  0019E2  50DF               	movf	indf2,w,c
  1377  0019E4  6E32               	movwf	RtccWriteTime@tempMinSec+1,c
  1378  0019E6  EE20 F001          	lfsr	2,1
  1379  0019EA  502A               	movf	RtccWriteTime@pTm,w,c
  1380  0019EC  26D9               	addwf	fsr2l,f,c
  1381  0019EE  502B               	movf	RtccWriteTime@pTm+1,w,c
  1382  0019F0  22DA               	addwfc	fsr2h,f,c
  1383  0019F2  50DF               	movf	indf2,w,c
  1384  0019F4  6E31               	movwf	RtccWriteTime@tempMinSec,c
  1385  0019F6  502C               	movf	RtccWriteTime@di,w,c
  1386  0019F8  B4D8               	btfsc	status,2,c
  1387  0019FA  D002               	goto	l2123
  1388  0019FC  9CF2               	bcf	intcon,6,c	;volatile
  1389  0019FE  D000               	goto	l2123
  1390  001A00                     l2123:
  1391  001A00  0E00               	movlw	0
  1392  001A02  BB3F               	btfsc	63,5,b	;volatile
  1393  001A04  0E01               	movlw	1
  1394  001A06  6E30               	movwf	RtccWriteTime@wasWrEn,c
  1395  001A08  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1396  001A0A  A4D8               	btfss	status,2,c
  1397  001A0C  D003               	goto	l2127
  1398  001A0E  ECF2  F00F         	call	_RtccWrOn	;wreg free
  1399  001A12  D000               	goto	l2127
  1400  001A14                     l2127:
  1401  001A14  0E00               	movlw	0
  1402  001A16  BF3F               	btfsc	63,7,b	;volatile
  1403  001A18  0E01               	movlw	1
  1404  001A1A  6E2E               	movwf	RtccWriteTime@wasOn,c
  1405  001A1C  502E               	movf	RtccWriteTime@wasOn,w,c
  1406  001A1E  B4D8               	btfsc	status,2,c
  1407  001A20  D007               	goto	l2133
  1408  001A22  0E00               	movlw	0
  1409  001A24  BE91               	btfsc	3985,7,c	;volatile
  1410  001A26  0E01               	movlw	1
  1411  001A28  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1412  001A2A  010F               	movlb	15	; () banked
  1413  001A2C  9F3F               	bcf	63,7,b	;volatile
  1414  001A2E  D000               	goto	l2133
  1415  001A30                     l2133:
  1416  001A30  0EFC               	movlw	252
  1417  001A32  010F               	movlb	15	; () banked
  1418  001A34  173F               	andwf	63,f,b	;volatile
  1419  001A36  010F               	movlb	15	; () banked
  1420  001A38  813F               	bsf	63,0,b	;volatile
  1421                           
  1422                           ; BSR set to: 15
  1423  001A3A  CF98 F033          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1424                           
  1425                           ; BSR set to: 15
  1426  001A3E  CF99 F034          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1427                           
  1428                           ; BSR set to: 15
  1429  001A42  EE20 F003          	lfsr	2,3
  1430  001A46  502A               	movf	RtccWriteTime@pTm,w,c
  1431  001A48  26D9               	addwf	fsr2l,f,c
  1432  001A4A  502B               	movf	RtccWriteTime@pTm+1,w,c
  1433  001A4C  22DA               	addwfc	fsr2h,f,c
  1434  001A4E  50DF               	movf	indf2,w,c
  1435  001A50  6E33               	movwf	RtccWriteTime@tempHourWDay,c
  1436                           
  1437                           ; BSR set to: 15
  1438  001A52  0EFC               	movlw	252
  1439  001A54  010F               	movlb	15	; () banked
  1440  001A56  173F               	andwf	63,f,b	;volatile
  1441                           
  1442                           ; BSR set to: 15
  1443  001A58  010F               	movlb	15	; () banked
  1444  001A5A  813F               	bsf	63,0,b	;volatile
  1445                           
  1446                           ; BSR set to: 15
  1447  001A5C  C033  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1448                           
  1449                           ; BSR set to: 15
  1450  001A60  C034  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1451                           
  1452                           ; BSR set to: 15
  1453  001A64  C031  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1454                           
  1455                           ; BSR set to: 15
  1456  001A68  C032  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1457                           
  1458                           ; BSR set to: 15
  1459  001A6C  502E               	movf	RtccWriteTime@wasOn,w,c
  1460  001A6E  B4D8               	btfsc	status,2,c
  1461  001A70  D00D               	goto	l2165
  1462                           
  1463                           ; BSR set to: 15
  1464  001A72  010F               	movlb	15	; () banked
  1465  001A74  8F3F               	bsf	63,7,b	;volatile
  1466                           
  1467                           ; BSR set to: 15
  1468  001A76  502F               	movf	RtccWriteTime@wasAlrm,w,c
  1469  001A78  B4D8               	btfsc	status,2,c
  1470  001A7A  D002               	goto	l2161
  1471                           
  1472                           ; BSR set to: 15
  1473  001A7C  8E91               	bsf	3985,7,c	;volatile
  1474  001A7E  D000               	goto	l2161
  1475  001A80                     l2161:
  1476                           
  1477                           ; BSR set to: 15
  1478  001A80  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1479  001A82  B4D8               	btfsc	status,2,c
  1480  001A84  D009               	goto	l2169
  1481                           
  1482                           ; BSR set to: 15
  1483  001A86  ECF2  F00F         	call	_RtccWrOn	;wreg free
  1484  001A8A  D006               	goto	l2169
  1485  001A8C                     l2165:
  1486  001A8C  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1487  001A8E  A4D8               	btfss	status,2,c
  1488  001A90  D003               	goto	l2169
  1489  001A92  010F               	movlb	15	; () banked
  1490  001A94  9B3F               	bcf	63,5,b	;volatile
  1491                           
  1492                           ; BSR set to: 15
  1493  001A96  D000               	goto	l2169
  1494  001A98                     l2169:
  1495  001A98  502C               	movf	RtccWriteTime@di,w,c
  1496  001A9A  B4D8               	btfsc	status,2,c
  1497  001A9C  0012               	return	
  1498  001A9E  8CF2               	bsf	intcon,6,c	;volatile
  1499  001AA0  0012               	return	
  1500                           
  1501                           ;	Return value of _RtccWriteTime is never used
  1502  001AA2  0012               	return		;funcret
  1503  001AA4                     __end_of_RtccWriteTime:
  1504                           	opt stack 0
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           prodl	equ	0xFF3
  1510                           intcon	equ	0xFF2
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1l	equ	0xFE1
  1515                           indf2	equ	0xFDF
  1516                           fsr2h	equ	0xFDA
  1517                           fsr2l	equ	0xFD9
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _RtccWriteDate *****************
  1521 ;; Defined at:
  1522 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  pDt             2    0[COMRAM] PTR const struct .
  1525 ;;		 -> RtccDate(4), 
  1526 ;;  di              1    2[COMRAM] enum E7121
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  tempHourWDay    2   11[COMRAM] struct .
  1529 ;;  tempDayMonth    2    9[COMRAM] struct .
  1530 ;;  tempYear        2    6[COMRAM] struct .
  1531 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1532 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1533 ;;  wasOn           1    4[COMRAM] enum E7121
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      enum E7337
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1543 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;Total ram usage:       13 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    1
  1550 ;; This function calls:
  1551 ;;		_RtccWrOn
  1552 ;; This function is called by:
  1553 ;;		_Write_RTC
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  00172A                     __ptext6:
  1559                           	opt stack 0
  1560  00172A                     _RtccWriteDate:
  1561                           	opt stack 27
  1562                           
  1563                           ;incstack = 0
  1564  00172A  0E00               	movlw	0
  1565  00172C  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  1566  00172E  EE20 F002          	lfsr	2,2
  1567  001732  502A               	movf	RtccWriteDate@pDt,w,c
  1568  001734  26D9               	addwf	fsr2l,f,c
  1569  001736  502B               	movf	RtccWriteDate@pDt+1,w,c
  1570  001738  22DA               	addwfc	fsr2h,f,c
  1571  00173A  0E13               	movlw	19
  1572  00173C  60DF               	cpfslt	indf2,c
  1573  00173E  0012               	return	
  1574  001740  EE20 F002          	lfsr	2,2
  1575  001744  502A               	movf	RtccWriteDate@pDt,w,c
  1576  001746  26D9               	addwf	fsr2l,f,c
  1577  001748  502B               	movf	RtccWriteDate@pDt+1,w,c
  1578  00174A  22DA               	addwfc	fsr2h,f,c
  1579  00174C  50DF               	movf	indf2,w,c
  1580  00174E  B4D8               	btfsc	status,2,c
  1581  001750  0012               	return	
  1582  001752  EE20 F001          	lfsr	2,1
  1583  001756  502A               	movf	RtccWriteDate@pDt,w,c
  1584  001758  26D9               	addwf	fsr2l,f,c
  1585  00175A  502B               	movf	RtccWriteDate@pDt+1,w,c
  1586  00175C  22DA               	addwfc	fsr2h,f,c
  1587  00175E  0E32               	movlw	50
  1588  001760  60DF               	cpfslt	indf2,c
  1589  001762  0012               	return	
  1590  001764  EE20 F001          	lfsr	2,1
  1591  001768  502A               	movf	RtccWriteDate@pDt,w,c
  1592  00176A  26D9               	addwf	fsr2l,f,c
  1593  00176C  502B               	movf	RtccWriteDate@pDt+1,w,c
  1594  00176E  22DA               	addwfc	fsr2h,f,c
  1595  001770  50DF               	movf	indf2,w,c
  1596  001772  B4D8               	btfsc	status,2,c
  1597  001774  0012               	return	
  1598  001776  EE20 F003          	lfsr	2,3
  1599  00177A  502A               	movf	RtccWriteDate@pDt,w,c
  1600  00177C  26D9               	addwf	fsr2l,f,c
  1601  00177E  502B               	movf	RtccWriteDate@pDt+1,w,c
  1602  001780  22DA               	addwfc	fsr2h,f,c
  1603  001782  0E99               	movlw	153
  1604  001784  64DF               	cpfsgt	indf2,c
  1605  001786  D002               	goto	l2185
  1606  001788  0012               	return	
  1607                           
  1608                           ;	Return value of _RtccWriteDate is never used
  1609  00178A  0012               	return	
  1610  00178C                     l2185:
  1611  00178C  EE20 F003          	lfsr	2,3
  1612  001790  502A               	movf	RtccWriteDate@pDt,w,c
  1613  001792  26D9               	addwf	fsr2l,f,c
  1614  001794  502B               	movf	RtccWriteDate@pDt+1,w,c
  1615  001796  22DA               	addwfc	fsr2h,f,c
  1616  001798  50DF               	movf	indf2,w,c
  1617  00179A  6E30               	movwf	RtccWriteDate@tempYear,c
  1618  00179C  EE20 F001          	lfsr	2,1
  1619  0017A0  502A               	movf	RtccWriteDate@pDt,w,c
  1620  0017A2  26D9               	addwf	fsr2l,f,c
  1621  0017A4  502B               	movf	RtccWriteDate@pDt+1,w,c
  1622  0017A6  22DA               	addwfc	fsr2h,f,c
  1623  0017A8  50DF               	movf	indf2,w,c
  1624  0017AA  6E33               	movwf	RtccWriteDate@tempDayMonth,c
  1625  0017AC  EE20 F002          	lfsr	2,2
  1626  0017B0  502A               	movf	RtccWriteDate@pDt,w,c
  1627  0017B2  26D9               	addwf	fsr2l,f,c
  1628  0017B4  502B               	movf	RtccWriteDate@pDt+1,w,c
  1629  0017B6  22DA               	addwfc	fsr2h,f,c
  1630  0017B8  50DF               	movf	indf2,w,c
  1631  0017BA  6E34               	movwf	RtccWriteDate@tempDayMonth+1,c
  1632  0017BC  502C               	movf	RtccWriteDate@di,w,c
  1633  0017BE  B4D8               	btfsc	status,2,c
  1634  0017C0  D002               	goto	l2191
  1635  0017C2  9CF2               	bcf	intcon,6,c	;volatile
  1636  0017C4  D000               	goto	l2191
  1637  0017C6                     l2191:
  1638  0017C6  0E00               	movlw	0
  1639  0017C8  BB3F               	btfsc	63,5,b	;volatile
  1640  0017CA  0E01               	movlw	1
  1641  0017CC  6E32               	movwf	RtccWriteDate@wasWrEn,c
  1642  0017CE  5032               	movf	RtccWriteDate@wasWrEn,w,c
  1643  0017D0  A4D8               	btfss	status,2,c
  1644  0017D2  D003               	goto	l2195
  1645  0017D4  ECF2  F00F         	call	_RtccWrOn	;wreg free
  1646  0017D8  D000               	goto	l2195
  1647  0017DA                     l2195:
  1648  0017DA  0E00               	movlw	0
  1649  0017DC  BF3F               	btfsc	63,7,b	;volatile
  1650  0017DE  0E01               	movlw	1
  1651  0017E0  6E2E               	movwf	RtccWriteDate@wasOn,c
  1652  0017E2  502E               	movf	RtccWriteDate@wasOn,w,c
  1653  0017E4  B4D8               	btfsc	status,2,c
  1654  0017E6  D007               	goto	l2201
  1655  0017E8  0E00               	movlw	0
  1656  0017EA  BE91               	btfsc	3985,7,c	;volatile
  1657  0017EC  0E01               	movlw	1
  1658  0017EE  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  1659  0017F0  010F               	movlb	15	; () banked
  1660  0017F2  9F3F               	bcf	63,7,b	;volatile
  1661  0017F4  D000               	goto	l2201
  1662  0017F6                     l2201:
  1663  0017F6  0EFC               	movlw	252
  1664  0017F8  010F               	movlb	15	; () banked
  1665  0017FA  173F               	andwf	63,f,b	;volatile
  1666  0017FC  010F               	movlb	15	; () banked
  1667  0017FE  813F               	bsf	63,0,b	;volatile
  1668                           
  1669                           ; BSR set to: 15
  1670  001800  CF98 F035          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  1671                           
  1672                           ; BSR set to: 15
  1673  001804  CF99 F036          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  1674                           
  1675                           ; BSR set to: 15
  1676  001808  C02A  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  1677  00180C  C02B  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  1678  001810  50DF               	movf	indf2,w,c
  1679  001812  6E36               	movwf	RtccWriteDate@tempHourWDay+1,c
  1680                           
  1681                           ; BSR set to: 15
  1682  001814  0EFC               	movlw	252
  1683  001816  010F               	movlb	15	; () banked
  1684  001818  173F               	andwf	63,f,b	;volatile
  1685                           
  1686                           ; BSR set to: 15
  1687  00181A  0E03               	movlw	3
  1688  00181C  010F               	movlb	15	; () banked
  1689  00181E  133F               	iorwf	63,f,b	;volatile
  1690                           
  1691                           ; BSR set to: 15
  1692  001820  C030  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  1693                           
  1694                           ; BSR set to: 15
  1695  001824  C031  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  1696                           
  1697                           ; BSR set to: 15
  1698  001828  C033  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  1699                           
  1700                           ; BSR set to: 15
  1701  00182C  C034  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  1702                           
  1703                           ; BSR set to: 15
  1704  001830  C035  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  1705                           
  1706                           ; BSR set to: 15
  1707  001834  C036  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  1708                           
  1709                           ; BSR set to: 15
  1710  001838  502E               	movf	RtccWriteDate@wasOn,w,c
  1711  00183A  B4D8               	btfsc	status,2,c
  1712  00183C  D00D               	goto	l2237
  1713                           
  1714                           ; BSR set to: 15
  1715  00183E  010F               	movlb	15	; () banked
  1716  001840  8F3F               	bsf	63,7,b	;volatile
  1717                           
  1718                           ; BSR set to: 15
  1719  001842  502F               	movf	RtccWriteDate@wasAlrm,w,c
  1720  001844  B4D8               	btfsc	status,2,c
  1721  001846  D002               	goto	l2233
  1722                           
  1723                           ; BSR set to: 15
  1724  001848  8E91               	bsf	3985,7,c	;volatile
  1725  00184A  D000               	goto	l2233
  1726  00184C                     l2233:
  1727                           
  1728                           ; BSR set to: 15
  1729  00184C  5032               	movf	RtccWriteDate@wasWrEn,w,c
  1730  00184E  B4D8               	btfsc	status,2,c
  1731  001850  D009               	goto	l2241
  1732                           
  1733                           ; BSR set to: 15
  1734  001852  ECF2  F00F         	call	_RtccWrOn	;wreg free
  1735  001856  D006               	goto	l2241
  1736  001858                     l2237:
  1737  001858  5032               	movf	RtccWriteDate@wasWrEn,w,c
  1738  00185A  A4D8               	btfss	status,2,c
  1739  00185C  D003               	goto	l2241
  1740  00185E  010F               	movlb	15	; () banked
  1741  001860  9B3F               	bcf	63,5,b	;volatile
  1742                           
  1743                           ; BSR set to: 15
  1744  001862  D000               	goto	l2241
  1745  001864                     l2241:
  1746  001864  502C               	movf	RtccWriteDate@di,w,c
  1747  001866  B4D8               	btfsc	status,2,c
  1748  001868  0012               	return	
  1749  00186A  9CF2               	bcf	intcon,6,c	;volatile
  1750  00186C  0012               	return	
  1751                           
  1752                           ;	Return value of _RtccWriteDate is never used
  1753  00186E  0012               	return		;funcret
  1754  001870                     __end_of_RtccWriteDate:
  1755                           	opt stack 0
  1756                           tblptru	equ	0xFF8
  1757                           tblptrh	equ	0xFF7
  1758                           tblptrl	equ	0xFF6
  1759                           tablat	equ	0xFF5
  1760                           prodl	equ	0xFF3
  1761                           intcon	equ	0xFF2
  1762                           postinc0	equ	0xFEE
  1763                           wreg	equ	0xFE8
  1764                           postdec1	equ	0xFE5
  1765                           fsr1l	equ	0xFE1
  1766                           indf2	equ	0xFDF
  1767                           fsr2h	equ	0xFDA
  1768                           fsr2l	equ	0xFD9
  1769                           status	equ	0xFD8
  1770                           
  1771 ;; *************** function _RtccWrOn *****************
  1772 ;; Defined at:
  1773 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  data            2    0        unsigned int 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;		None               void
  1780 ;; Registers used:
  1781 ;;		wreg, status,2
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_Write_RTC
  1797 ;;		_RtccWriteDate
  1798 ;;		_RtccWriteTime
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text7
  1803  001FE4                     __ptext7:
  1804                           	opt stack 0
  1805  001FE4                     _RtccWrOn:
  1806                           	opt stack 27
  1807                           
  1808                           ;incstack = 0
  1809  001FE4  9CF2               	bcf	intcon,6,c	;volatile
  1810  001FE6  0E55               	movlw	85
  1811  001FE8  6EA7               	movwf	4007,c	;volatile
  1812  001FEA  0EAA               	movlw	170
  1813  001FEC  6EA7               	movwf	4007,c	;volatile
  1814  001FEE  010F               	movlb	15	; () banked
  1815  001FF0  8B3F               	bsf	63,5,b	;volatile
  1816                           
  1817                           ; BSR set to: 15
  1818  001FF2  8CF2               	bsf	intcon,6,c	;volatile
  1819                           
  1820                           ; BSR set to: 15
  1821  001FF4  0012               	return		;funcret
  1822  001FF6                     __end_of_RtccWrOn:
  1823                           	opt stack 0
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           prodl	equ	0xFF3
  1829                           intcon	equ	0xFF2
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           postdec1	equ	0xFE5
  1833                           fsr1l	equ	0xFE1
  1834                           indf2	equ	0xFDF
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _Keyboard_Control *****************
  1840 ;; Defined at:
  1841 ;;		line 224 in file "main.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;		None               void
  1848 ;; Registers used:
  1849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;Total ram usage:        1 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    7
  1862 ;; This function calls:
  1863 ;;		_Button_A
  1864 ;;		_Button_B
  1865 ;;		_Button_C
  1866 ;;		_Button_D
  1867 ;;		_Button_Hash
  1868 ;;		_Button_Star
  1869 ;;		_lcd_putrs
  1870 ;;		_sprintf
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text8
  1877  000F64                     __ptext8:
  1878                           	opt stack 0
  1879  000F64                     _Keyboard_Control:
  1880                           	opt stack 23
  1881                           
  1882                           ;main.c: 226: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1883                           
  1884                           ; BSR set to: 15
  1885                           ;incstack = 0
  1886  000F64  8089               	bsf	3977,0,c	;volatile
  1887  000F66  9289               	bcf	3977,1,c	;volatile
  1888  000F68  9489               	bcf	3977,2,c	;volatile
  1889  000F6A  9689               	bcf	3977,3,c	;volatile
  1890                           
  1891                           ;main.c: 227: {
  1892                           ;main.c: 228: if (PORTAbits.RA5==1){key=1;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA5==1){};}
  1893  000F6C  AA80               	btfss	3968,5,c	;volatile
  1894  000F6E  D018               	goto	l199
  1895  000F70  0E01               	movlw	1
  1896  000F72  6E21               	movwf	_key,c
  1897  000F74  0E78               	movlw	low _buffer2
  1898  000F76  6E36               	movwf	sprintf@sp,c
  1899  000F78  0E00               	movlw	high _buffer2
  1900  000F7A  6E37               	movwf	sprintf@sp+1,c
  1901  000F7C  0E53               	movlw	low STR_32
  1902  000F7E  6E38               	movwf	sprintf@f,c
  1903  000F80  0E0F               	movlw	high STR_32
  1904  000F82  6E39               	movwf	sprintf@f+1,c
  1905  000F84  C021  F03A         	movff	_key,?_sprintf+4
  1906  000F88  6A3B               	clrf	?_sprintf+5,c
  1907  000F8A  EC07  F009         	call	_sprintf	;wreg free
  1908  000F8E  0E78               	movlw	low _buffer2
  1909  000F90  6E32               	movwf	lcd_putrs@ptr,c
  1910  000F92  0E00               	movlw	high _buffer2
  1911  000F94  6E33               	movwf	lcd_putrs@ptr+1,c
  1912  000F96  ECF1  F00E         	call	_lcd_putrs	;wreg free
  1913  000F9A  D000               	goto	l200
  1914  000F9C                     l200:
  1915  000F9C  BA80               	btfsc	3968,5,c	;volatile
  1916  000F9E  D7FE               	goto	l200
  1917  000FA0                     l199:
  1918                           
  1919                           ;main.c: 229: if (PORTAbits.RA7==1){key=2;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
  1920  000FA0  AE80               	btfss	3968,7,c	;volatile
  1921  000FA2  D018               	goto	l203
  1922  000FA4  0E02               	movlw	2
  1923  000FA6  6E21               	movwf	_key,c
  1924  000FA8  0E78               	movlw	low _buffer2
  1925  000FAA  6E36               	movwf	sprintf@sp,c
  1926  000FAC  0E00               	movlw	high _buffer2
  1927  000FAE  6E37               	movwf	sprintf@sp+1,c
  1928  000FB0  0E53               	movlw	low STR_32
  1929  000FB2  6E38               	movwf	sprintf@f,c
  1930  000FB4  0E0F               	movlw	high STR_32
  1931  000FB6  6E39               	movwf	sprintf@f+1,c
  1932  000FB8  C021  F03A         	movff	_key,?_sprintf+4
  1933  000FBC  6A3B               	clrf	?_sprintf+5,c
  1934  000FBE  EC07  F009         	call	_sprintf	;wreg free
  1935  000FC2  0E78               	movlw	low _buffer2
  1936  000FC4  6E32               	movwf	lcd_putrs@ptr,c
  1937  000FC6  0E00               	movlw	high _buffer2
  1938  000FC8  6E33               	movwf	lcd_putrs@ptr+1,c
  1939  000FCA  ECF1  F00E         	call	_lcd_putrs	;wreg free
  1940  000FCE  D000               	goto	l204
  1941  000FD0                     l204:
  1942  000FD0  BE80               	btfsc	3968,7,c	;volatile
  1943  000FD2  D7FE               	goto	l204
  1944  000FD4                     l203:
  1945                           
  1946                           ;main.c: 230: if (PORTAbits.RA6==1){key=3;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA6==1){};}
  1947  000FD4  AC80               	btfss	3968,6,c	;volatile
  1948  000FD6  D018               	goto	l207
  1949  000FD8  0E03               	movlw	3
  1950  000FDA  6E21               	movwf	_key,c
  1951  000FDC  0E78               	movlw	low _buffer2
  1952  000FDE  6E36               	movwf	sprintf@sp,c
  1953  000FE0  0E00               	movlw	high _buffer2
  1954  000FE2  6E37               	movwf	sprintf@sp+1,c
  1955  000FE4  0E53               	movlw	low STR_32
  1956  000FE6  6E38               	movwf	sprintf@f,c
  1957  000FE8  0E0F               	movlw	high STR_32
  1958  000FEA  6E39               	movwf	sprintf@f+1,c
  1959  000FEC  C021  F03A         	movff	_key,?_sprintf+4
  1960  000FF0  6A3B               	clrf	?_sprintf+5,c
  1961  000FF2  EC07  F009         	call	_sprintf	;wreg free
  1962  000FF6  0E78               	movlw	low _buffer2
  1963  000FF8  6E32               	movwf	lcd_putrs@ptr,c
  1964  000FFA  0E00               	movlw	high _buffer2
  1965  000FFC  6E33               	movwf	lcd_putrs@ptr+1,c
  1966  000FFE  ECF1  F00E         	call	_lcd_putrs	;wreg free
  1967  001002  D000               	goto	l208
  1968  001004                     l208:
  1969  001004  BC80               	btfsc	3968,6,c	;volatile
  1970  001006  D7FE               	goto	l208
  1971  001008                     l207:
  1972                           
  1973                           ;main.c: 231: if (PORTCbits.RC2==1){key=11;Button_A();while(PORTCbits.RC2==1){};}
  1974  001008  A482               	btfss	3970,2,c	;volatile
  1975  00100A  D007               	goto	l211
  1976  00100C  0E0B               	movlw	11
  1977  00100E  6E21               	movwf	_key,c
  1978  001010  ECD9  F00F         	call	_Button_A	;wreg free
  1979  001014  D000               	goto	l212
  1980  001016                     l212:
  1981  001016  B482               	btfsc	3970,2,c	;volatile
  1982  001018  D7FE               	goto	l212
  1983  00101A                     l211:
  1984                           
  1985                           ;main.c: 232: }
  1986                           ;main.c: 234: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1987  00101A  9089               	bcf	3977,0,c	;volatile
  1988  00101C  8289               	bsf	3977,1,c	;volatile
  1989  00101E  9489               	bcf	3977,2,c	;volatile
  1990  001020  9689               	bcf	3977,3,c	;volatile
  1991                           
  1992                           ;main.c: 235: {
  1993                           ;main.c: 236: if (PORTAbits.RA5==1){key=4;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA5==1){};}
  1994  001022  AA80               	btfss	3968,5,c	;volatile
  1995  001024  D018               	goto	l215
  1996  001026  0E04               	movlw	4
  1997  001028  6E21               	movwf	_key,c
  1998  00102A  0E78               	movlw	low _buffer2
  1999  00102C  6E36               	movwf	sprintf@sp,c
  2000  00102E  0E00               	movlw	high _buffer2
  2001  001030  6E37               	movwf	sprintf@sp+1,c
  2002  001032  0E53               	movlw	low STR_32
  2003  001034  6E38               	movwf	sprintf@f,c
  2004  001036  0E0F               	movlw	high STR_32
  2005  001038  6E39               	movwf	sprintf@f+1,c
  2006  00103A  C021  F03A         	movff	_key,?_sprintf+4
  2007  00103E  6A3B               	clrf	?_sprintf+5,c
  2008  001040  EC07  F009         	call	_sprintf	;wreg free
  2009  001044  0E78               	movlw	low _buffer2
  2010  001046  6E32               	movwf	lcd_putrs@ptr,c
  2011  001048  0E00               	movlw	high _buffer2
  2012  00104A  6E33               	movwf	lcd_putrs@ptr+1,c
  2013  00104C  ECF1  F00E         	call	_lcd_putrs	;wreg free
  2014  001050  D000               	goto	l216
  2015  001052                     l216:
  2016  001052  BA80               	btfsc	3968,5,c	;volatile
  2017  001054  D7FE               	goto	l216
  2018  001056                     l215:
  2019                           
  2020                           ;main.c: 237: if (PORTAbits.RA7==1){key=5;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
  2021  001056  AE80               	btfss	3968,7,c	;volatile
  2022  001058  D018               	goto	l219
  2023  00105A  0E05               	movlw	5
  2024  00105C  6E21               	movwf	_key,c
  2025  00105E  0E78               	movlw	low _buffer2
  2026  001060  6E36               	movwf	sprintf@sp,c
  2027  001062  0E00               	movlw	high _buffer2
  2028  001064  6E37               	movwf	sprintf@sp+1,c
  2029  001066  0E53               	movlw	low STR_32
  2030  001068  6E38               	movwf	sprintf@f,c
  2031  00106A  0E0F               	movlw	high STR_32
  2032  00106C  6E39               	movwf	sprintf@f+1,c
  2033  00106E  C021  F03A         	movff	_key,?_sprintf+4
  2034  001072  6A3B               	clrf	?_sprintf+5,c
  2035  001074  EC07  F009         	call	_sprintf	;wreg free
  2036  001078  0E78               	movlw	low _buffer2
  2037  00107A  6E32               	movwf	lcd_putrs@ptr,c
  2038  00107C  0E00               	movlw	high _buffer2
  2039  00107E  6E33               	movwf	lcd_putrs@ptr+1,c
  2040  001080  ECF1  F00E         	call	_lcd_putrs	;wreg free
  2041  001084  D000               	goto	l220
  2042  001086                     l220:
  2043  001086  BE80               	btfsc	3968,7,c	;volatile
  2044  001088  D7FE               	goto	l220
  2045  00108A                     l219:
  2046                           
  2047                           ;main.c: 238: if (PORTAbits.RA6==1){key=6;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA6==1){};}
  2048  00108A  AC80               	btfss	3968,6,c	;volatile
  2049  00108C  D018               	goto	l223
  2050  00108E  0E06               	movlw	6
  2051  001090  6E21               	movwf	_key,c
  2052  001092  0E78               	movlw	low _buffer2
  2053  001094  6E36               	movwf	sprintf@sp,c
  2054  001096  0E00               	movlw	high _buffer2
  2055  001098  6E37               	movwf	sprintf@sp+1,c
  2056  00109A  0E53               	movlw	low STR_32
  2057  00109C  6E38               	movwf	sprintf@f,c
  2058  00109E  0E0F               	movlw	high STR_32
  2059  0010A0  6E39               	movwf	sprintf@f+1,c
  2060  0010A2  C021  F03A         	movff	_key,?_sprintf+4
  2061  0010A6  6A3B               	clrf	?_sprintf+5,c
  2062  0010A8  EC07  F009         	call	_sprintf	;wreg free
  2063  0010AC  0E78               	movlw	low _buffer2
  2064  0010AE  6E32               	movwf	lcd_putrs@ptr,c
  2065  0010B0  0E00               	movlw	high _buffer2
  2066  0010B2  6E33               	movwf	lcd_putrs@ptr+1,c
  2067  0010B4  ECF1  F00E         	call	_lcd_putrs	;wreg free
  2068  0010B8  D000               	goto	l224
  2069  0010BA                     l224:
  2070  0010BA  BC80               	btfsc	3968,6,c	;volatile
  2071  0010BC  D7FE               	goto	l224
  2072  0010BE                     l223:
  2073                           
  2074                           ;main.c: 239: if (PORTCbits.RC2==1){key=12;Button_B();while(PORTCbits.RC2==1){};}
  2075  0010BE  A482               	btfss	3970,2,c	;volatile
  2076  0010C0  D007               	goto	l227
  2077  0010C2  0E0C               	movlw	12
  2078  0010C4  6E21               	movwf	_key,c
  2079  0010C6  EC39  F00A         	call	_Button_B	;wreg free
  2080  0010CA  D000               	goto	l228
  2081  0010CC                     l228:
  2082  0010CC  B482               	btfsc	3970,2,c	;volatile
  2083  0010CE  D7FE               	goto	l228
  2084  0010D0                     l227:
  2085                           
  2086                           ;main.c: 240: }
  2087                           ;main.c: 242: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2088  0010D0  9089               	bcf	3977,0,c	;volatile
  2089  0010D2  9289               	bcf	3977,1,c	;volatile
  2090  0010D4  8489               	bsf	3977,2,c	;volatile
  2091  0010D6  9689               	bcf	3977,3,c	;volatile
  2092                           
  2093                           ;main.c: 243: {
  2094                           ;main.c: 244: if (PORTAbits.RA5==1){key=7;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA5==1){};}
  2095  0010D8  AA80               	btfss	3968,5,c	;volatile
  2096  0010DA  D018               	goto	l231
  2097  0010DC  0E07               	movlw	7
  2098  0010DE  6E21               	movwf	_key,c
  2099  0010E0  0E78               	movlw	low _buffer2
  2100  0010E2  6E36               	movwf	sprintf@sp,c
  2101  0010E4  0E00               	movlw	high _buffer2
  2102  0010E6  6E37               	movwf	sprintf@sp+1,c
  2103  0010E8  0E53               	movlw	low STR_32
  2104  0010EA  6E38               	movwf	sprintf@f,c
  2105  0010EC  0E0F               	movlw	high STR_32
  2106  0010EE  6E39               	movwf	sprintf@f+1,c
  2107  0010F0  C021  F03A         	movff	_key,?_sprintf+4
  2108  0010F4  6A3B               	clrf	?_sprintf+5,c
  2109  0010F6  EC07  F009         	call	_sprintf	;wreg free
  2110  0010FA  0E78               	movlw	low _buffer2
  2111  0010FC  6E32               	movwf	lcd_putrs@ptr,c
  2112  0010FE  0E00               	movlw	high _buffer2
  2113  001100  6E33               	movwf	lcd_putrs@ptr+1,c
  2114  001102  ECF1  F00E         	call	_lcd_putrs	;wreg free
  2115  001106  D000               	goto	l232
  2116  001108                     l232:
  2117  001108  BA80               	btfsc	3968,5,c	;volatile
  2118  00110A  D7FE               	goto	l232
  2119  00110C                     l231:
  2120                           
  2121                           ;main.c: 245: if (PORTAbits.RA7==1){key=8;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
  2122  00110C  AE80               	btfss	3968,7,c	;volatile
  2123  00110E  D018               	goto	l235
  2124  001110  0E08               	movlw	8
  2125  001112  6E21               	movwf	_key,c
  2126  001114  0E78               	movlw	low _buffer2
  2127  001116  6E36               	movwf	sprintf@sp,c
  2128  001118  0E00               	movlw	high _buffer2
  2129  00111A  6E37               	movwf	sprintf@sp+1,c
  2130  00111C  0E53               	movlw	low STR_32
  2131  00111E  6E38               	movwf	sprintf@f,c
  2132  001120  0E0F               	movlw	high STR_32
  2133  001122  6E39               	movwf	sprintf@f+1,c
  2134  001124  C021  F03A         	movff	_key,?_sprintf+4
  2135  001128  6A3B               	clrf	?_sprintf+5,c
  2136  00112A  EC07  F009         	call	_sprintf	;wreg free
  2137  00112E  0E78               	movlw	low _buffer2
  2138  001130  6E32               	movwf	lcd_putrs@ptr,c
  2139  001132  0E00               	movlw	high _buffer2
  2140  001134  6E33               	movwf	lcd_putrs@ptr+1,c
  2141  001136  ECF1  F00E         	call	_lcd_putrs	;wreg free
  2142  00113A  D000               	goto	l236
  2143  00113C                     l236:
  2144  00113C  BE80               	btfsc	3968,7,c	;volatile
  2145  00113E  D7FE               	goto	l236
  2146  001140                     l235:
  2147                           
  2148                           ;main.c: 246: if (PORTAbits.RA6==1){key=9;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA6==1){};}
  2149  001140  AC80               	btfss	3968,6,c	;volatile
  2150  001142  D018               	goto	l239
  2151  001144  0E09               	movlw	9
  2152  001146  6E21               	movwf	_key,c
  2153  001148  0E78               	movlw	low _buffer2
  2154  00114A  6E36               	movwf	sprintf@sp,c
  2155  00114C  0E00               	movlw	high _buffer2
  2156  00114E  6E37               	movwf	sprintf@sp+1,c
  2157  001150  0E53               	movlw	low STR_32
  2158  001152  6E38               	movwf	sprintf@f,c
  2159  001154  0E0F               	movlw	high STR_32
  2160  001156  6E39               	movwf	sprintf@f+1,c
  2161  001158  C021  F03A         	movff	_key,?_sprintf+4
  2162  00115C  6A3B               	clrf	?_sprintf+5,c
  2163  00115E  EC07  F009         	call	_sprintf	;wreg free
  2164  001162  0E78               	movlw	low _buffer2
  2165  001164  6E32               	movwf	lcd_putrs@ptr,c
  2166  001166  0E00               	movlw	high _buffer2
  2167  001168  6E33               	movwf	lcd_putrs@ptr+1,c
  2168  00116A  ECF1  F00E         	call	_lcd_putrs	;wreg free
  2169  00116E  D000               	goto	l240
  2170  001170                     l240:
  2171  001170  BC80               	btfsc	3968,6,c	;volatile
  2172  001172  D7FE               	goto	l240
  2173  001174                     l239:
  2174                           
  2175                           ;main.c: 247: if (PORTCbits.RC2==1){key=13;Button_C();while(PORTCbits.RC2==1){};}
  2176  001174  A482               	btfss	3970,2,c	;volatile
  2177  001176  D007               	goto	l243
  2178  001178  0E0D               	movlw	13
  2179  00117A  6E21               	movwf	_key,c
  2180  00117C  EC29  F010         	call	_Button_C	;wreg free
  2181  001180  D000               	goto	l244
  2182  001182                     l244:
  2183  001182  B482               	btfsc	3970,2,c	;volatile
  2184  001184  D7FE               	goto	l244
  2185  001186                     l243:
  2186                           
  2187                           ;main.c: 248: }
  2188                           ;main.c: 250: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2189  001186  9089               	bcf	3977,0,c	;volatile
  2190  001188  9289               	bcf	3977,1,c	;volatile
  2191  00118A  9489               	bcf	3977,2,c	;volatile
  2192  00118C  8689               	bsf	3977,3,c	;volatile
  2193                           
  2194                           ;main.c: 251: {
  2195                           ;main.c: 252: if (PORTAbits.RA5==1){key=14;Button_Star();while(PORTAbits.RA5==1){};}
  2196  00118E  AA80               	btfss	3968,5,c	;volatile
  2197  001190  D007               	goto	l247
  2198  001192  0E0E               	movlw	14
  2199  001194  6E21               	movwf	_key,c
  2200  001196  EC14  F010         	call	_Button_Star	;wreg free
  2201  00119A  D000               	goto	l248
  2202  00119C                     l248:
  2203  00119C  BA80               	btfsc	3968,5,c	;volatile
  2204  00119E  D7FE               	goto	l248
  2205  0011A0                     l247:
  2206                           
  2207                           ;main.c: 253: if (PORTAbits.RA7==1){key=0;sprintf(buffer2,"%01u",key);lcd_putrs(buffer2)
      +                          ;while(PORTAbits.RA7==1){};}
  2208  0011A0  AE80               	btfss	3968,7,c	;volatile
  2209  0011A2  D018               	goto	l251
  2210  0011A4  0E00               	movlw	0
  2211  0011A6  6E21               	movwf	_key,c
  2212  0011A8  0E78               	movlw	low _buffer2
  2213  0011AA  6E36               	movwf	sprintf@sp,c
  2214  0011AC  0E00               	movlw	high _buffer2
  2215  0011AE  6E37               	movwf	sprintf@sp+1,c
  2216  0011B0  0E53               	movlw	low STR_32
  2217  0011B2  6E38               	movwf	sprintf@f,c
  2218  0011B4  0E0F               	movlw	high STR_32
  2219  0011B6  6E39               	movwf	sprintf@f+1,c
  2220  0011B8  C021  F03A         	movff	_key,?_sprintf+4
  2221  0011BC  6A3B               	clrf	?_sprintf+5,c
  2222  0011BE  EC07  F009         	call	_sprintf	;wreg free
  2223  0011C2  0E78               	movlw	low _buffer2
  2224  0011C4  6E32               	movwf	lcd_putrs@ptr,c
  2225  0011C6  0E00               	movlw	high _buffer2
  2226  0011C8  6E33               	movwf	lcd_putrs@ptr+1,c
  2227  0011CA  ECF1  F00E         	call	_lcd_putrs	;wreg free
  2228  0011CE  D000               	goto	l252
  2229  0011D0                     l252:
  2230  0011D0  BE80               	btfsc	3968,7,c	;volatile
  2231  0011D2  D7FE               	goto	l252
  2232  0011D4                     l251:
  2233                           
  2234                           ;main.c: 254: if (PORTAbits.RA6==1){key=15;Button_Hash();while(PORTAbits.RA6==1){};}
  2235  0011D4  AC80               	btfss	3968,6,c	;volatile
  2236  0011D6  D007               	goto	l255
  2237  0011D8  0E0F               	movlw	15
  2238  0011DA  6E21               	movwf	_key,c
  2239  0011DC  EC1B  F010         	call	_Button_Hash	;wreg free
  2240  0011E0  D000               	goto	l256
  2241  0011E2                     l256:
  2242  0011E2  BC80               	btfsc	3968,6,c	;volatile
  2243  0011E4  D7FE               	goto	l256
  2244  0011E6                     l255:
  2245                           
  2246                           ;main.c: 255: if (PORTCbits.RC2==1){key=16;Button_D();while(PORTCbits.RC2==1){};}
  2247  0011E6  A482               	btfss	3970,2,c	;volatile
  2248  0011E8  D009               	goto	l2795
  2249  0011EA  0E10               	movlw	16
  2250  0011EC  6E21               	movwf	_key,c
  2251  0011EE  EC22  F010         	call	_Button_D	;wreg free
  2252  0011F2  D000               	goto	l260
  2253  0011F4                     l260:
  2254  0011F4  A482               	btfss	3970,2,c	;volatile
  2255  0011F6  D002               	goto	l2795
  2256  0011F8  D7FD               	goto	l260
  2257  0011FA  D000               	goto	l2795
  2258  0011FC                     l2795:
  2259                           
  2260                           ;main.c: 256: }
  2261                           ;main.c: 258: _delay((unsigned long)((98)*(8000000/4000.0)));
  2262  0011FC  0EFF               	movlw	255
  2263  0011FE  6E49               	movwf	??_Keyboard_Control& (0+255),c
  2264  001200  0E8A               	movlw	138
  2265  001202                     u2097:
  2266  001202  2EE8               	decfsz	wreg,f,c
  2267  001204  D7FE               	goto	u2097
  2268  001206  2E49               	decfsz	??_Keyboard_Control& (0+255),f,c
  2269  001208  D7FC               	goto	u2097
  2270  00120A  D000               	nop2	
  2271  00120C  0012               	return		;funcret
  2272  00120E                     __end_of_Keyboard_Control:
  2273                           	opt stack 0
  2274                           tblptru	equ	0xFF8
  2275                           tblptrh	equ	0xFF7
  2276                           tblptrl	equ	0xFF6
  2277                           tablat	equ	0xFF5
  2278                           prodl	equ	0xFF3
  2279                           intcon	equ	0xFF2
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           postdec1	equ	0xFE5
  2283                           fsr1l	equ	0xFE1
  2284                           indf2	equ	0xFDF
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _sprintf *****************
  2290 ;; Defined at:
  2291 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  sp              2   12[COMRAM] PTR unsigned char 
  2294 ;;		 -> buffer2(20), 
  2295 ;;  f               2   14[COMRAM] PTR const unsigned char 
  2296 ;;		 -> STR_41(5), STR_40(5), STR_39(5), STR_38(5), 
  2297 ;;		 -> STR_37(5), STR_36(5), STR_35(5), STR_34(5), 
  2298 ;;		 -> STR_33(5), STR_32(5), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  tmpval          4    0        struct .
  2301 ;;  cp              3    0        PTR const unsigned char 
  2302 ;;  width           2   28[COMRAM] int 
  2303 ;;  val             2   25[COMRAM] unsigned int 
  2304 ;;  ap              2   22[COMRAM] PTR void [1]
  2305 ;;		 -> ?_sprintf(2), 
  2306 ;;  len             2    0        unsigned int 
  2307 ;;  c               1   30[COMRAM] char 
  2308 ;;  prec            1   27[COMRAM] char 
  2309 ;;  flag            1   24[COMRAM] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  2   12[COMRAM] int 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2319 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2320 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2321 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2322 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2323 ;;Total ram usage:       19 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    1
  2326 ;; This function calls:
  2327 ;;		___lwdiv
  2328 ;;		___lwmod
  2329 ;;		___wmul
  2330 ;;		_isdigit
  2331 ;; This function is called by:
  2332 ;;		_Keyboard_Control
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text9
  2337  00120E                     __ptext9:
  2338                           	opt stack 0
  2339  00120E                     _sprintf:
  2340                           	opt stack 28
  2341                           
  2342                           ;doprnt.c: 494: va_list ap;
  2343                           ;doprnt.c: 499: signed char c;
  2344                           ;doprnt.c: 501: int width;
  2345                           ;doprnt.c: 506: signed char prec;
  2346                           ;doprnt.c: 508: unsigned char flag;
  2347                           ;doprnt.c: 523: union {
  2348                           ;doprnt.c: 524: unsigned long vd;
  2349                           ;doprnt.c: 525: double integ;
  2350                           ;doprnt.c: 526: } tmpval;
  2351                           ;doprnt.c: 528: unsigned int val;
  2352                           ;doprnt.c: 529: unsigned len;
  2353                           ;doprnt.c: 530: const char * cp;
  2354                           ;doprnt.c: 533: *ap = __va_start();
  2355                           
  2356                           ;incstack = 0
  2357  00120E  0E3A               	movlw	low (?_sprintf+4)
  2358  001210  6E40               	movwf	sprintf@ap,c
  2359  001212  0E00               	movlw	high (?_sprintf+4)
  2360  001214  6E41               	movwf	sprintf@ap+1,c
  2361                           
  2362                           ;doprnt.c: 536: while(c = *f++) {
  2363  001216  D117               	goto	l2671
  2364  001218                     l2589:
  2365                           
  2366                           ;doprnt.c: 538: if(c != '%')
  2367  001218  0E25               	movlw	37
  2368  00121A  1848               	xorwf	sprintf@c,w,c
  2369  00121C  B4D8               	btfsc	status,2,c
  2370  00121E  D009               	goto	l2595
  2371                           
  2372                           ;doprnt.c: 540: {
  2373                           ;doprnt.c: 541: ((*sp++ = (c)));
  2374  001220  C036  FFD9         	movff	sprintf@sp,fsr2l
  2375  001224  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  2376  001228  C048  FFDF         	movff	sprintf@c,indf2
  2377  00122C  4A36               	infsnz	sprintf@sp,f,c
  2378  00122E  2A37               	incf	sprintf@sp+1,f,c
  2379                           
  2380                           ;doprnt.c: 542: continue;
  2381  001230  D10A               	goto	l2671
  2382  001232                     l2595:
  2383                           
  2384                           ;doprnt.c: 543: }
  2385                           ;doprnt.c: 546: width = 0;
  2386  001232  0E00               	movlw	0
  2387  001234  6E47               	movwf	sprintf@width+1,c
  2388  001236  0E00               	movlw	0
  2389  001238  6E46               	movwf	sprintf@width,c
  2390                           
  2391                           ;doprnt.c: 548: flag = 0;
  2392  00123A  0E00               	movlw	0
  2393  00123C  6E42               	movwf	sprintf@flag,c
  2394                           
  2395                           ;doprnt.c: 551: switch(*f) {
  2396                           
  2397                           ;doprnt.c: 550: for(;;) {
  2398  00123E  D005               	goto	l2601
  2399  001240                     l2597:
  2400                           
  2401                           ;doprnt.c: 580: flag |= 0x04;
  2402  001240  8442               	bsf	sprintf@flag,2,c
  2403                           
  2404                           ;doprnt.c: 581: f++;
  2405  001242  4A38               	infsnz	sprintf@f,f,c
  2406  001244  2A39               	incf	sprintf@f+1,f,c
  2407                           
  2408                           ;doprnt.c: 582: continue;
  2409  001246  D001               	goto	l2601
  2410                           
  2411                           ;doprnt.c: 584: }
  2412  001248  D00B               	goto	l2603
  2413  00124A                     l2601:
  2414  00124A  C038  FFF6         	movff	sprintf@f,tblptrl
  2415  00124E  C039  FFF7         	movff	sprintf@f+1,tblptrh
  2416  001252                     	if	0	;tblptru may be non-zero
  2417  001252                     	endif
  2418  001252                     	if	0	;tblptru may be non-zero
  2419  001252                     	endif
  2420  001252  0008               	tblrd		*
  2421  001254  50F5               	movf	tablat,w,c
  2422                           
  2423                           ; Switch size 1, requested type "space"
  2424                           ; Number of cases is 1, Range of values is 48 to 48
  2425                           ; switch strategies available:
  2426                           ; Name         Instructions Cycles
  2427                           ; simple_byte            4     3 (average)
  2428                           ;	Chosen strategy is simple_byte
  2429  001256  0A30               	xorlw	48	; case 48
  2430  001258  B4D8               	btfsc	status,2,c
  2431  00125A  D7F2               	goto	l2597
  2432                           
  2433                           ;doprnt.c: 585: break;
  2434  00125C  D001               	goto	l2603
  2435                           
  2436                           ;doprnt.c: 586: }
  2437  00125E  D7F5               	goto	l2601
  2438  001260                     l2603:
  2439                           
  2440                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2441  001260  C038  FFF6         	movff	sprintf@f,tblptrl
  2442  001264  C039  FFF7         	movff	sprintf@f+1,tblptrh
  2443  001268                     	if	0	;tblptru may be non-zero
  2444  001268                     	endif
  2445  001268                     	if	0	;tblptru may be non-zero
  2446  001268                     	endif
  2447  001268  0008               	tblrd		*
  2448  00126A  50F5               	movf	tablat,w,c
  2449  00126C  ECC8  F00F         	call	_isdigit
  2450  001270  A0D8               	btfss	status,0,c
  2451  001272  D03A               	goto	l2619
  2452                           
  2453                           ;doprnt.c: 598: width = 0;
  2454  001274  0E00               	movlw	0
  2455  001276  6E47               	movwf	sprintf@width+1,c
  2456  001278  0E00               	movlw	0
  2457  00127A  6E46               	movwf	sprintf@width,c
  2458  00127C  D000               	goto	l2607
  2459  00127E                     l2607:
  2460                           
  2461                           ;doprnt.c: 600: width *= 10;
  2462  00127E  C046  F02A         	movff	sprintf@width,___wmul@multiplier
  2463  001282  C047  F02B         	movff	sprintf@width+1,___wmul@multiplier+1
  2464  001286  0E00               	movlw	0
  2465  001288  6E2D               	movwf	___wmul@multiplicand+1,c
  2466  00128A  0E0A               	movlw	10
  2467  00128C  6E2C               	movwf	___wmul@multiplicand,c
  2468  00128E  ECA2  F00F         	call	___wmul	;wreg free
  2469  001292  C02A  F046         	movff	?___wmul,sprintf@width
  2470  001296  C02B  F047         	movff	?___wmul+1,sprintf@width+1
  2471                           
  2472                           ;doprnt.c: 601: width += *f++ - '0';
  2473  00129A  0ED0               	movlw	208
  2474  00129C  6E3C               	movwf	??_sprintf& (0+255),c
  2475  00129E  0EFF               	movlw	255
  2476  0012A0  6E3D               	movwf	(??_sprintf+1)& (0+255),c
  2477  0012A2  C038  FFF6         	movff	sprintf@f,tblptrl
  2478  0012A6  C039  FFF7         	movff	sprintf@f+1,tblptrh
  2479  0012AA                     	if	0	;tblptru may be non-zero
  2480  0012AA                     	endif
  2481  0012AA                     	if	0	;tblptru may be non-zero
  2482  0012AA                     	endif
  2483  0012AA  0008               	tblrd		*
  2484  0012AC  50F5               	movf	tablat,w,c
  2485  0012AE  6E3E               	movwf	(??_sprintf+2)& (0+255),c
  2486  0012B0  6A3F               	clrf	(??_sprintf+3)& (0+255),c
  2487  0012B2  503C               	movf	??_sprintf,w,c
  2488  0012B4  263E               	addwf	??_sprintf+2,f,c
  2489  0012B6  503D               	movf	??_sprintf+1,w,c
  2490  0012B8  223F               	addwfc	??_sprintf+3,f,c
  2491  0012BA  503E               	movf	??_sprintf+2,w,c
  2492  0012BC  2646               	addwf	sprintf@width,f,c
  2493  0012BE  503F               	movf	??_sprintf+3,w,c
  2494  0012C0  2247               	addwfc	sprintf@width+1,f,c
  2495  0012C2  4A38               	infsnz	sprintf@f,f,c
  2496  0012C4  2A39               	incf	sprintf@f+1,f,c
  2497                           
  2498                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2499  0012C6  C038  FFF6         	movff	sprintf@f,tblptrl
  2500  0012CA  C039  FFF7         	movff	sprintf@f+1,tblptrh
  2501  0012CE                     	if	0	;tblptru may be non-zero
  2502  0012CE                     	endif
  2503  0012CE                     	if	0	;tblptru may be non-zero
  2504  0012CE                     	endif
  2505  0012CE  0008               	tblrd		*
  2506  0012D0  50F5               	movf	tablat,w,c
  2507  0012D2  ECC8  F00F         	call	_isdigit
  2508  0012D6  A0D8               	btfss	status,0,c
  2509  0012D8  D007               	goto	l2619
  2510  0012DA  D7D1               	goto	l2607
  2511                           
  2512                           ;doprnt.c: 608: }
  2513                           ;doprnt.c: 635: switch(c = *f++) {
  2514  0012DC  D005               	goto	l2619
  2515                           
  2516                           ;doprnt.c: 638: goto alldone;
  2517                           
  2518                           ;doprnt.c: 637: case 0:
  2519  0012DE  D0C1               	goto	l2673
  2520                           
  2521                           ;doprnt.c: 813: continue;
  2522                           
  2523                           ;doprnt.c: 802: default:
  2524  0012E0  D0B2               	goto	l2671
  2525  0012E2                     l2615:
  2526                           
  2527                           ;doprnt.c: 818: flag |= 0xC0;
  2528  0012E2  0EC0               	movlw	192
  2529  0012E4  1242               	iorwf	sprintf@flag,f,c
  2530                           
  2531                           ;doprnt.c: 822: }
  2532                           
  2533                           ;doprnt.c: 819: break;
  2534  0012E6  D011               	goto	l2621
  2535  0012E8                     l2619:
  2536  0012E8  C038  FFF6         	movff	sprintf@f,tblptrl
  2537  0012EC  C039  FFF7         	movff	sprintf@f+1,tblptrh
  2538  0012F0  4A38               	infsnz	sprintf@f,f,c
  2539  0012F2  2A39               	incf	sprintf@f+1,f,c
  2540  0012F4                     	if	0	;tblptru may be non-zero
  2541  0012F4                     	endif
  2542  0012F4                     	if	0	;tblptru may be non-zero
  2543  0012F4                     	endif
  2544  0012F4  0008               	tblrd		*
  2545  0012F6  CFF5 F048          	movff	tablat,sprintf@c
  2546  0012FA  5048               	movf	sprintf@c,w,c
  2547                           
  2548                           ; Switch size 1, requested type "space"
  2549                           ; Number of cases is 2, Range of values is 0 to 117
  2550                           ; switch strategies available:
  2551                           ; Name         Instructions Cycles
  2552                           ; simple_byte            7     4 (average)
  2553                           ;	Chosen strategy is simple_byte
  2554  0012FC  0A00               	xorlw	0	; case 0
  2555  0012FE  B4D8               	btfsc	status,2,c
  2556  001300  D0B0               	goto	l2673
  2557  001302  0A75               	xorlw	117	; case 117
  2558  001304  B4D8               	btfsc	status,2,c
  2559  001306  D7ED               	goto	l2615
  2560  001308  D09E               	goto	l2671
  2561  00130A                     l2621:
  2562                           
  2563                           ;doprnt.c: 1273: {
  2564                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2565  00130A  C040  FFD9         	movff	sprintf@ap,fsr2l
  2566  00130E  C041  FFDA         	movff	sprintf@ap+1,fsr2h
  2567  001312  CFDE F043          	movff	postinc2,sprintf@val
  2568  001316  CFDD F044          	movff	postdec2,sprintf@val+1
  2569  00131A  0E02               	movlw	2
  2570  00131C  2640               	addwf	sprintf@ap,f,c
  2571  00131E  0E00               	movlw	0
  2572  001320  2241               	addwfc	sprintf@ap+1,f,c
  2573                           
  2574                           ;doprnt.c: 1287: }
  2575                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2576  001322  0E01               	movlw	1
  2577  001324  6E48               	movwf	sprintf@c,c
  2578  001326                     l2627:
  2579  001326  0E05               	movlw	5
  2580  001328  1848               	xorwf	sprintf@c,w,c
  2581  00132A  B4D8               	btfsc	status,2,c
  2582  00132C  D016               	goto	l2639
  2583  00132E  D001               	goto	l2631
  2584  001330  D014               	goto	l2639
  2585  001332                     l2631:
  2586                           
  2587                           ;doprnt.c: 1306: if(val < dpowers[c])
  2588  001332  5048               	movf	sprintf@c,w,c
  2589  001334  0D02               	mullw	2
  2590  001336  0E01               	movlw	low _dpowers
  2591  001338  24F3               	addwf	prodl,w,c
  2592  00133A  6EF6               	movwf	tblptrl,c
  2593  00133C  0E0F               	movlw	high _dpowers
  2594  00133E  20F4               	addwfc	prodh,w,c
  2595  001340  6EF7               	movwf	tblptrh,c
  2596  001342                     	if	0	;There are less than 3 active tblptr bytes
  2597  001342                     	endif
  2598  001342  0009               	tblrd		*+
  2599  001344  50F5               	movf	tablat,w,c
  2600  001346  5C43               	subwf	sprintf@val,w,c
  2601  001348  0009               	tblrd		*+
  2602  00134A  50F5               	movf	tablat,w,c
  2603  00134C  5844               	subwfb	sprintf@val+1,w,c
  2604  00134E  A0D8               	btfss	status,0,c
  2605  001350  D004               	goto	l2639
  2606  001352  D001               	goto	l2635
  2607                           
  2608                           ;doprnt.c: 1307: break;
  2609  001354  D002               	goto	l2639
  2610  001356                     l2635:
  2611  001356  2A48               	incf	sprintf@c,f,c
  2612  001358  D7E6               	goto	l2627
  2613  00135A                     l2639:
  2614                           
  2615                           ;doprnt.c: 1381: if(width > c)
  2616  00135A  0E80               	movlw	128
  2617  00135C  BE48               	btfsc	sprintf@c,7,c
  2618  00135E  0E7F               	movlw	127
  2619  001360  6E3C               	movwf	??_sprintf& (0+255),c
  2620  001362  5046               	movf	sprintf@width,w,c
  2621  001364  5C48               	subwf	sprintf@c,w,c
  2622  001366  5047               	movf	sprintf@width+1,w,c
  2623  001368  0A80               	xorlw	128
  2624  00136A  583C               	subwfb	??_sprintf& (0+255),w,c
  2625  00136C  B0D8               	btfsc	status,0,c
  2626  00136E  D007               	goto	l2643
  2627                           
  2628                           ;doprnt.c: 1382: width -= c;
  2629  001370  5048               	movf	sprintf@c,w,c
  2630  001372  5E46               	subwf	sprintf@width,f,c
  2631  001374  0E00               	movlw	0
  2632  001376  BE48               	btfsc	sprintf@c,7,c
  2633  001378  0EFF               	movlw	255
  2634  00137A  5A47               	subwfb	sprintf@width+1,f,c
  2635  00137C  D005               	goto	l2645
  2636  00137E                     l2643:
  2637                           
  2638                           ;doprnt.c: 1383: else
  2639                           ;doprnt.c: 1384: width = 0;
  2640  00137E  0E00               	movlw	0
  2641  001380  6E47               	movwf	sprintf@width+1,c
  2642  001382  0E00               	movlw	0
  2643  001384  6E46               	movwf	sprintf@width,c
  2644  001386  D000               	goto	l2645
  2645  001388                     l2645:
  2646                           
  2647                           ;doprnt.c: 1387: if(flag & 0x04) {
  2648  001388  A442               	btfss	sprintf@flag,2,c
  2649  00138A  D015               	goto	l2655
  2650                           
  2651                           ;doprnt.c: 1415: if(width)
  2652  00138C  5046               	movf	sprintf@width,w,c
  2653  00138E  1047               	iorwf	sprintf@width+1,w,c
  2654  001390  B4D8               	btfsc	status,2,c
  2655  001392  D026               	goto	l366
  2656  001394                     l2649:
  2657                           
  2658                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  2659  001394  C036  FFD9         	movff	sprintf@sp,fsr2l
  2660  001398  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  2661  00139C  0E30               	movlw	48
  2662  00139E  6EDF               	movwf	indf2,c
  2663  0013A0  4A36               	infsnz	sprintf@sp,f,c
  2664  0013A2  2A37               	incf	sprintf@sp+1,f,c
  2665                           
  2666                           ;doprnt.c: 1418: while(--width);
  2667  0013A4  0646               	decf	sprintf@width,f,c
  2668  0013A6  A0D8               	btfss	status,0,c
  2669  0013A8  0647               	decf	sprintf@width+1,f,c
  2670  0013AA  5046               	movf	sprintf@width,w,c
  2671  0013AC  1047               	iorwf	sprintf@width+1,w,c
  2672  0013AE  B4D8               	btfsc	status,2,c
  2673  0013B0  D017               	goto	l366
  2674  0013B2  D7F0               	goto	l2649
  2675                           
  2676                           ;doprnt.c: 1420: } else
  2677  0013B4  D015               	goto	l366
  2678  0013B6                     l2655:
  2679                           
  2680                           ;doprnt.c: 1422: {
  2681                           ;doprnt.c: 1424: if(width
  2682                           ;doprnt.c: 1428: )
  2683  0013B6  5046               	movf	sprintf@width,w,c
  2684  0013B8  1047               	iorwf	sprintf@width+1,w,c
  2685  0013BA  B4D8               	btfsc	status,2,c
  2686  0013BC  D011               	goto	l366
  2687  0013BE                     l2657:
  2688                           
  2689                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2690  0013BE  C036  FFD9         	movff	sprintf@sp,fsr2l
  2691  0013C2  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  2692  0013C6  0E20               	movlw	32
  2693  0013C8  6EDF               	movwf	indf2,c
  2694  0013CA  4A36               	infsnz	sprintf@sp,f,c
  2695  0013CC  2A37               	incf	sprintf@sp+1,f,c
  2696                           
  2697                           ;doprnt.c: 1431: while(--width);
  2698  0013CE  0646               	decf	sprintf@width,f,c
  2699  0013D0  A0D8               	btfss	status,0,c
  2700  0013D2  0647               	decf	sprintf@width+1,f,c
  2701  0013D4  5046               	movf	sprintf@width,w,c
  2702  0013D6  1047               	iorwf	sprintf@width+1,w,c
  2703  0013D8  B4D8               	btfsc	status,2,c
  2704  0013DA  D002               	goto	l366
  2705  0013DC  D7F0               	goto	l2657
  2706  0013DE  D000               	goto	l366
  2707  0013E0                     l366:
  2708                           
  2709                           ;doprnt.c: 1469: }
  2710                           ;doprnt.c: 1472: prec = c;
  2711  0013E0  C048  F045         	movff	sprintf@c,sprintf@prec
  2712                           
  2713                           ;doprnt.c: 1474: while(prec--) {
  2714  0013E4  D02A               	goto	l2669
  2715  0013E6                     l2663:
  2716                           
  2717                           ;doprnt.c: 1478: {
  2718                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2719  0013E6  5045               	movf	sprintf@prec,w,c
  2720  0013E8  0D02               	mullw	2
  2721  0013EA  0E01               	movlw	low _dpowers
  2722  0013EC  24F3               	addwf	prodl,w,c
  2723  0013EE  6EF6               	movwf	tblptrl,c
  2724  0013F0  0E0F               	movlw	high _dpowers
  2725  0013F2  20F4               	addwfc	prodh,w,c
  2726  0013F4  6EF7               	movwf	tblptrh,c
  2727  0013F6                     	if	0	;There are less than 3 active tblptr bytes
  2728  0013F6                     	endif
  2729  0013F6  0009               	tblrd		*+
  2730  0013F8  CFF5 F02C          	movff	tablat,___lwdiv@divisor
  2731  0013FC  000A               	tblrd		*-
  2732  0013FE  CFF5 F02D          	movff	tablat,___lwdiv@divisor+1
  2733  001402  C043  F02A         	movff	sprintf@val,___lwdiv@dividend
  2734  001406  C044  F02B         	movff	sprintf@val+1,___lwdiv@dividend+1
  2735  00140A  ECC3  F00E         	call	___lwdiv	;wreg free
  2736  00140E  C02A  F031         	movff	?___lwdiv,___lwmod@dividend
  2737  001412  C02B  F032         	movff	?___lwdiv+1,___lwmod@dividend+1
  2738  001416  0E00               	movlw	0
  2739  001418  6E34               	movwf	___lwmod@divisor+1,c
  2740  00141A  0E0A               	movlw	10
  2741  00141C  6E33               	movwf	___lwmod@divisor,c
  2742  00141E  EC1B  F00F         	call	___lwmod	;wreg free
  2743  001422  5031               	movf	?___lwmod,w,c
  2744  001424  0F30               	addlw	48
  2745  001426  6E48               	movwf	sprintf@c,c
  2746                           
  2747                           ;doprnt.c: 1523: }
  2748                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2749  001428  C036  FFD9         	movff	sprintf@sp,fsr2l
  2750  00142C  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  2751  001430  C048  FFDF         	movff	sprintf@c,indf2
  2752  001434  4A36               	infsnz	sprintf@sp,f,c
  2753  001436  2A37               	incf	sprintf@sp+1,f,c
  2754  001438  D000               	goto	l2669
  2755  00143A                     l2669:
  2756  00143A  0645               	decf	sprintf@prec,f,c
  2757  00143C  2845               	incf	sprintf@prec,w,c
  2758  00143E  B4D8               	btfsc	status,2,c
  2759  001440  D002               	goto	l2671
  2760  001442  D7D1               	goto	l2663
  2761  001444  D000               	goto	l2671
  2762  001446                     l2671:
  2763  001446  C038  FFF6         	movff	sprintf@f,tblptrl
  2764  00144A  C039  FFF7         	movff	sprintf@f+1,tblptrh
  2765  00144E  4A38               	infsnz	sprintf@f,f,c
  2766  001450  2A39               	incf	sprintf@f+1,f,c
  2767  001452                     	if	0	;tblptru may be non-zero
  2768  001452                     	endif
  2769  001452                     	if	0	;tblptru may be non-zero
  2770  001452                     	endif
  2771  001452  0008               	tblrd		*
  2772  001454  CFF5 F048          	movff	tablat,sprintf@c
  2773  001458  5048               	movf	sprintf@c,w,c
  2774  00145A  B4D8               	btfsc	status,2,c
  2775  00145C  D002               	goto	l2673
  2776  00145E  D6DC               	goto	l2589
  2777  001460  D000               	goto	l2673
  2778  001462                     l2673:
  2779                           
  2780                           ;doprnt.c: 1538: *sp = 0;
  2781  001462  C036  FFD9         	movff	sprintf@sp,fsr2l
  2782  001466  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  2783  00146A  0E00               	movlw	0
  2784  00146C  6EDF               	movwf	indf2,c
  2785  00146E  0012               	return	
  2786                           
  2787                           ;doprnt.c: 1540: return 0;
  2788                           ;	Return value of _sprintf is never used
  2789  001470  0012               	return		;funcret
  2790  001472                     __end_of_sprintf:
  2791                           	opt stack 0
  2792                           tblptru	equ	0xFF8
  2793                           tblptrh	equ	0xFF7
  2794                           tblptrl	equ	0xFF6
  2795                           tablat	equ	0xFF5
  2796                           prodh	equ	0xFF4
  2797                           prodl	equ	0xFF3
  2798                           intcon	equ	0xFF2
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           postdec1	equ	0xFE5
  2802                           fsr1l	equ	0xFE1
  2803                           indf2	equ	0xFDF
  2804                           postinc2	equ	0xFDE
  2805                           postdec2	equ	0xFDD
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _isdigit *****************
  2811 ;; Defined at:
  2812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  c               1    wreg     unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  c               1    2[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;		None               void
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;Total ram usage:        3 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_sprintf
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text10
  2840  001F90                     __ptext10:
  2841                           	opt stack 0
  2842  001F90                     _isdigit:
  2843                           	opt stack 28
  2844                           
  2845                           ;incstack = 0
  2846                           ;isdigit@c stored from wreg
  2847  001F90  6E2C               	movwf	isdigit@c,c
  2848  001F92  0E00               	movlw	0
  2849  001F94  6E2B               	movwf	_isdigit$2085,c
  2850  001F96  0E3A               	movlw	58
  2851  001F98  602C               	cpfslt	isdigit@c,c
  2852  001F9A  D006               	goto	l2351
  2853  001F9C  0E2F               	movlw	47
  2854  001F9E  642C               	cpfsgt	isdigit@c,c
  2855  001FA0  D003               	goto	l2351
  2856  001FA2  0E01               	movlw	1
  2857  001FA4  6E2B               	movwf	_isdigit$2085,c
  2858  001FA6  D000               	goto	l2351
  2859  001FA8                     l2351:
  2860  001FA8  C02B  F02A         	movff	_isdigit$2085,??_isdigit
  2861  001FAC  302A               	rrcf	??_isdigit,w,c
  2862  001FAE  0012               	return	
  2863  001FB0  0012               	return		;funcret
  2864  001FB2                     __end_of_isdigit:
  2865                           	opt stack 0
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           prodh	equ	0xFF4
  2871                           prodl	equ	0xFF3
  2872                           intcon	equ	0xFF2
  2873                           postinc0	equ	0xFEE
  2874                           wreg	equ	0xFE8
  2875                           postdec1	equ	0xFE5
  2876                           fsr1l	equ	0xFE1
  2877                           indf2	equ	0xFDF
  2878                           postinc2	equ	0xFDE
  2879                           postdec2	equ	0xFDD
  2880                           fsr2h	equ	0xFDA
  2881                           fsr2l	equ	0xFD9
  2882                           status	equ	0xFD8
  2883                           
  2884 ;; *************** function ___wmul *****************
  2885 ;; Defined at:
  2886 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  multiplier      2    0[COMRAM] unsigned int 
  2889 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  product         2    4[COMRAM] unsigned int 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  2    0[COMRAM] unsigned int 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0, prodl, prodh
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2904 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;Total ram usage:        6 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_sprintf
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text11
  2915  001F44                     __ptext11:
  2916                           	opt stack 0
  2917  001F44                     ___wmul:
  2918                           	opt stack 28
  2919                           
  2920                           ;incstack = 0
  2921  001F44  502A               	movf	___wmul@multiplier,w,c
  2922  001F46  022C               	mulwf	___wmul@multiplicand,c
  2923  001F48  CFF3 F02E          	movff	prodl,___wmul@product
  2924  001F4C  CFF4 F02F          	movff	prodh,___wmul@product+1
  2925  001F50  502A               	movf	___wmul@multiplier,w,c
  2926  001F52  022D               	mulwf	___wmul@multiplicand+1,c
  2927  001F54  50F3               	movf	prodl,w,c
  2928  001F56  262F               	addwf	___wmul@product+1,f,c
  2929  001F58  502B               	movf	___wmul@multiplier+1,w,c
  2930  001F5A  022C               	mulwf	___wmul@multiplicand,c
  2931  001F5C  50F3               	movf	prodl,w,c
  2932  001F5E  262F               	addwf	___wmul@product+1,f,c
  2933  001F60  C02E  F02A         	movff	___wmul@product,?___wmul
  2934  001F64  C02F  F02B         	movff	___wmul@product+1,?___wmul+1
  2935  001F68  0012               	return	
  2936  001F6A  0012               	return		;funcret
  2937  001F6C                     __end_of___wmul:
  2938                           	opt stack 0
  2939                           tblptru	equ	0xFF8
  2940                           tblptrh	equ	0xFF7
  2941                           tblptrl	equ	0xFF6
  2942                           tablat	equ	0xFF5
  2943                           prodh	equ	0xFF4
  2944                           prodl	equ	0xFF3
  2945                           intcon	equ	0xFF2
  2946                           postinc0	equ	0xFEE
  2947                           wreg	equ	0xFE8
  2948                           postdec1	equ	0xFE5
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           postinc2	equ	0xFDE
  2952                           postdec2	equ	0xFDD
  2953                           fsr2h	equ	0xFDA
  2954                           fsr2l	equ	0xFD9
  2955                           status	equ	0xFD8
  2956                           
  2957 ;; *************** function ___lwmod *****************
  2958 ;; Defined at:
  2959 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  dividend        2    7[COMRAM] unsigned int 
  2962 ;;  divisor         2    9[COMRAM] unsigned int 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  counter         1   11[COMRAM] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  2    7[COMRAM] unsigned int 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2978 ;;Total ram usage:        5 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_sprintf
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text12
  2988  001E36                     __ptext12:
  2989                           	opt stack 0
  2990  001E36                     ___lwmod:
  2991                           	opt stack 28
  2992                           
  2993                           ;incstack = 0
  2994  001E36  5033               	movf	___lwmod@divisor,w,c
  2995  001E38  1034               	iorwf	___lwmod@divisor+1,w,c
  2996  001E3A  B4D8               	btfsc	status,2,c
  2997  001E3C  D01D               	goto	l1020
  2998  001E3E  0E01               	movlw	1
  2999  001E40  6E35               	movwf	___lwmod@counter,c
  3000  001E42  D005               	goto	l2433
  3001  001E44                     l2431:
  3002  001E44  90D8               	bcf	status,0,c
  3003  001E46  3633               	rlcf	___lwmod@divisor,f,c
  3004  001E48  3634               	rlcf	___lwmod@divisor+1,f,c
  3005  001E4A  2A35               	incf	___lwmod@counter,f,c
  3006  001E4C  D000               	goto	l2433
  3007  001E4E                     l2433:
  3008  001E4E  BE34               	btfsc	___lwmod@divisor+1,7,c
  3009  001E50  D002               	goto	l2435
  3010  001E52  D7F8               	goto	l2431
  3011  001E54  D000               	goto	l2435
  3012  001E56                     l2435:
  3013  001E56  5033               	movf	___lwmod@divisor,w,c
  3014  001E58  5C31               	subwf	___lwmod@dividend,w,c
  3015  001E5A  5034               	movf	___lwmod@divisor+1,w,c
  3016  001E5C  5832               	subwfb	___lwmod@dividend+1,w,c
  3017  001E5E  A0D8               	btfss	status,0,c
  3018  001E60  D005               	goto	l2439
  3019  001E62  5033               	movf	___lwmod@divisor,w,c
  3020  001E64  5E31               	subwf	___lwmod@dividend,f,c
  3021  001E66  5034               	movf	___lwmod@divisor+1,w,c
  3022  001E68  5A32               	subwfb	___lwmod@dividend+1,f,c
  3023  001E6A  D000               	goto	l2439
  3024  001E6C                     l2439:
  3025  001E6C  90D8               	bcf	status,0,c
  3026  001E6E  3234               	rrcf	___lwmod@divisor+1,f,c
  3027  001E70  3233               	rrcf	___lwmod@divisor,f,c
  3028  001E72  2E35               	decfsz	___lwmod@counter,f,c
  3029  001E74  D7F0               	goto	l2435
  3030  001E76  D000               	goto	l1020
  3031  001E78                     l1020:
  3032  001E78  C031  F031         	movff	___lwmod@dividend,?___lwmod
  3033  001E7C  C032  F032         	movff	___lwmod@dividend+1,?___lwmod+1
  3034  001E80  0012               	return		;funcret
  3035  001E82                     __end_of___lwmod:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           tblptrh	equ	0xFF7
  3039                           tblptrl	equ	0xFF6
  3040                           tablat	equ	0xFF5
  3041                           prodh	equ	0xFF4
  3042                           prodl	equ	0xFF3
  3043                           intcon	equ	0xFF2
  3044                           postinc0	equ	0xFEE
  3045                           wreg	equ	0xFE8
  3046                           postdec1	equ	0xFE5
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           postinc2	equ	0xFDE
  3050                           postdec2	equ	0xFDD
  3051                           fsr2h	equ	0xFDA
  3052                           fsr2l	equ	0xFD9
  3053                           status	equ	0xFD8
  3054                           
  3055 ;; *************** function ___lwdiv *****************
  3056 ;; Defined at:
  3057 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  dividend        2    0[COMRAM] unsigned int 
  3060 ;;  divisor         2    2[COMRAM] unsigned int 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  quotient        2    4[COMRAM] unsigned int 
  3063 ;;  counter         1    6[COMRAM] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2    0[COMRAM] unsigned int 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;Total ram usage:        7 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_sprintf
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text13
  3087  001D86                     __ptext13:
  3088                           	opt stack 0
  3089  001D86                     ___lwdiv:
  3090                           	opt stack 28
  3091                           
  3092                           ;incstack = 0
  3093  001D86  0E00               	movlw	0
  3094  001D88  6E2F               	movwf	___lwdiv@quotient+1,c
  3095  001D8A  0E00               	movlw	0
  3096  001D8C  6E2E               	movwf	___lwdiv@quotient,c
  3097  001D8E  502C               	movf	___lwdiv@divisor,w,c
  3098  001D90  102D               	iorwf	___lwdiv@divisor+1,w,c
  3099  001D92  B4D8               	btfsc	status,2,c
  3100  001D94  D021               	goto	l1010
  3101  001D96  0E01               	movlw	1
  3102  001D98  6E30               	movwf	___lwdiv@counter,c
  3103  001D9A  D005               	goto	l2413
  3104  001D9C                     l2411:
  3105  001D9C  90D8               	bcf	status,0,c
  3106  001D9E  362C               	rlcf	___lwdiv@divisor,f,c
  3107  001DA0  362D               	rlcf	___lwdiv@divisor+1,f,c
  3108  001DA2  2A30               	incf	___lwdiv@counter,f,c
  3109  001DA4  D000               	goto	l2413
  3110  001DA6                     l2413:
  3111  001DA6  BE2D               	btfsc	___lwdiv@divisor+1,7,c
  3112  001DA8  D002               	goto	l2415
  3113  001DAA  D7F8               	goto	l2411
  3114  001DAC  D000               	goto	l2415
  3115  001DAE                     l2415:
  3116  001DAE  90D8               	bcf	status,0,c
  3117  001DB0  362E               	rlcf	___lwdiv@quotient,f,c
  3118  001DB2  362F               	rlcf	___lwdiv@quotient+1,f,c
  3119  001DB4  502C               	movf	___lwdiv@divisor,w,c
  3120  001DB6  5C2A               	subwf	___lwdiv@dividend,w,c
  3121  001DB8  502D               	movf	___lwdiv@divisor+1,w,c
  3122  001DBA  582B               	subwfb	___lwdiv@dividend+1,w,c
  3123  001DBC  A0D8               	btfss	status,0,c
  3124  001DBE  D006               	goto	l2423
  3125  001DC0  502C               	movf	___lwdiv@divisor,w,c
  3126  001DC2  5E2A               	subwf	___lwdiv@dividend,f,c
  3127  001DC4  502D               	movf	___lwdiv@divisor+1,w,c
  3128  001DC6  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  3129  001DC8  802E               	bsf	___lwdiv@quotient,0,c
  3130  001DCA  D000               	goto	l2423
  3131  001DCC                     l2423:
  3132  001DCC  90D8               	bcf	status,0,c
  3133  001DCE  322D               	rrcf	___lwdiv@divisor+1,f,c
  3134  001DD0  322C               	rrcf	___lwdiv@divisor,f,c
  3135  001DD2  2E30               	decfsz	___lwdiv@counter,f,c
  3136  001DD4  D7EC               	goto	l2415
  3137  001DD6  D000               	goto	l1010
  3138  001DD8                     l1010:
  3139  001DD8  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  3140  001DDC  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3141  001DE0  0012               	return		;funcret
  3142  001DE2                     __end_of___lwdiv:
  3143                           	opt stack 0
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           prodh	equ	0xFF4
  3149                           prodl	equ	0xFF3
  3150                           intcon	equ	0xFF2
  3151                           postinc0	equ	0xFEE
  3152                           wreg	equ	0xFE8
  3153                           postdec1	equ	0xFE5
  3154                           fsr1l	equ	0xFE1
  3155                           indf2	equ	0xFDF
  3156                           postinc2	equ	0xFDE
  3157                           postdec2	equ	0xFDD
  3158                           fsr2h	equ	0xFDA
  3159                           fsr2l	equ	0xFD9
  3160                           status	equ	0xFD8
  3161                           
  3162 ;; *************** function _Button_Star *****************
  3163 ;; Defined at:
  3164 ;;		line 216 in file "main.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;		None               void
  3171 ;; Registers used:
  3172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    5
  3185 ;; This function calls:
  3186 ;;		_lcd_putrs
  3187 ;; This function is called by:
  3188 ;;		_Keyboard_Control
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text14
  3193  002028                     __ptext14:
  3194                           	opt stack 0
  3195  002028                     _Button_Star:
  3196                           	opt stack 24
  3197                           
  3198                           ;main.c: 217: lcd_putrs("*");
  3199                           
  3200                           ;incstack = 0
  3201  002028  0E5C               	movlw	low STR_30
  3202  00202A  6E32               	movwf	lcd_putrs@ptr,c
  3203  00202C  0E0F               	movlw	high STR_30
  3204  00202E  6E33               	movwf	lcd_putrs@ptr+1,c
  3205  002030  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3206  002034  0012               	return		;funcret
  3207  002036                     __end_of_Button_Star:
  3208                           	opt stack 0
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           postdec1	equ	0xFE5
  3219                           fsr1l	equ	0xFE1
  3220                           indf2	equ	0xFDF
  3221                           postinc2	equ	0xFDE
  3222                           postdec2	equ	0xFDD
  3223                           fsr2h	equ	0xFDA
  3224                           fsr2l	equ	0xFD9
  3225                           status	equ	0xFD8
  3226                           
  3227 ;; *************** function _Button_Hash *****************
  3228 ;; Defined at:
  3229 ;;		line 220 in file "main.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    5
  3250 ;; This function calls:
  3251 ;;		_lcd_putrs
  3252 ;; This function is called by:
  3253 ;;		_Keyboard_Control
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text15
  3258  002036                     __ptext15:
  3259                           	opt stack 0
  3260  002036                     _Button_Hash:
  3261                           	opt stack 24
  3262                           
  3263                           ;main.c: 221: lcd_putrs("#");
  3264                           
  3265                           ;incstack = 0
  3266  002036  0E5A               	movlw	low STR_31
  3267  002038  6E32               	movwf	lcd_putrs@ptr,c
  3268  00203A  0E0F               	movlw	high STR_31
  3269  00203C  6E33               	movwf	lcd_putrs@ptr+1,c
  3270  00203E  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3271  002042  0012               	return		;funcret
  3272  002044                     __end_of_Button_Hash:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           intcon	equ	0xFF2
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           postdec1	equ	0xFE5
  3284                           fsr1l	equ	0xFE1
  3285                           indf2	equ	0xFDF
  3286                           postinc2	equ	0xFDE
  3287                           postdec2	equ	0xFDD
  3288                           fsr2h	equ	0xFDA
  3289                           fsr2l	equ	0xFD9
  3290                           status	equ	0xFD8
  3291                           
  3292 ;; *************** function _Button_D *****************
  3293 ;; Defined at:
  3294 ;;		line 209 in file "main.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;		None               void
  3301 ;; Registers used:
  3302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    6
  3315 ;; This function calls:
  3316 ;;		_Menu_Home
  3317 ;; This function is called by:
  3318 ;;		_Keyboard_Control
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text16
  3323  002044                     __ptext16:
  3324                           	opt stack 0
  3325  002044                     _Button_D:
  3326                           	opt stack 23
  3327                           
  3328                           ;main.c: 211: Menu_Home();
  3329                           
  3330                           ;incstack = 0
  3331  002044  EC94  F00E         	call	_Menu_Home	;wreg free
  3332                           
  3333                           ;main.c: 212: submenu = 0;
  3334  002048  0E00               	movlw	0
  3335  00204A  6E20               	movwf	_submenu+1,c
  3336  00204C  0E00               	movlw	0
  3337  00204E  6E1F               	movwf	_submenu,c
  3338  002050  0012               	return		;funcret
  3339  002052                     __end_of_Button_D:
  3340                           	opt stack 0
  3341                           tblptru	equ	0xFF8
  3342                           tblptrh	equ	0xFF7
  3343                           tblptrl	equ	0xFF6
  3344                           tablat	equ	0xFF5
  3345                           prodh	equ	0xFF4
  3346                           prodl	equ	0xFF3
  3347                           intcon	equ	0xFF2
  3348                           postinc0	equ	0xFEE
  3349                           wreg	equ	0xFE8
  3350                           postdec1	equ	0xFE5
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _Menu_Home *****************
  3360 ;; Defined at:
  3361 ;;		line 72 in file "main.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;		None               void
  3368 ;; Registers used:
  3369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;Total ram usage:        0 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    5
  3382 ;; This function calls:
  3383 ;;		_lcd_gotoxy
  3384 ;;		_lcd_init
  3385 ;;		_lcd_putrs
  3386 ;; This function is called by:
  3387 ;;		_Button_D
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text17
  3393  001D28                     __ptext17:
  3394                           	opt stack 0
  3395  001D28                     _Menu_Home:
  3396                           	opt stack 25
  3397                           
  3398                           ;main.c: 74: lcd_init();
  3399                           
  3400                           ;incstack = 0
  3401  001D28  ECE5  F00D         	call	_lcd_init	;wreg free
  3402                           
  3403                           ;main.c: 75: lcd_gotoxy(2,1);
  3404  001D2C  0E01               	movlw	1
  3405  001D2E  6E2E               	movwf	lcd_gotoxy@y,c
  3406  001D30  0E02               	movlw	2
  3407  001D32  ECB6  F00F         	call	_lcd_gotoxy
  3408                           
  3409                           ;main.c: 76: lcd_putrs("Menu1");
  3410  001D36  0E3B               	movlw	low STR_1
  3411  001D38  6E32               	movwf	lcd_putrs@ptr,c
  3412  001D3A  0E0F               	movlw	high STR_1
  3413  001D3C  6E33               	movwf	lcd_putrs@ptr+1,c
  3414  001D3E  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3415                           
  3416                           ;main.c: 77: lcd_gotoxy(2,2);
  3417  001D42  0E02               	movlw	2
  3418  001D44  6E2E               	movwf	lcd_gotoxy@y,c
  3419  001D46  0E02               	movlw	2
  3420  001D48  ECB6  F00F         	call	_lcd_gotoxy
  3421                           
  3422                           ;main.c: 78: lcd_putrs("Menu2");
  3423  001D4C  0E41               	movlw	low STR_2
  3424  001D4E  6E32               	movwf	lcd_putrs@ptr,c
  3425  001D50  0E0F               	movlw	high STR_2
  3426  001D52  6E33               	movwf	lcd_putrs@ptr+1,c
  3427  001D54  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3428                           
  3429                           ;main.c: 79: lcd_gotoxy(10,1);
  3430  001D58  0E01               	movlw	1
  3431  001D5A  6E2E               	movwf	lcd_gotoxy@y,c
  3432  001D5C  0E0A               	movlw	10
  3433  001D5E  ECB6  F00F         	call	_lcd_gotoxy
  3434                           
  3435                           ;main.c: 80: lcd_putrs("Menu3");
  3436  001D62  0E47               	movlw	low STR_3
  3437  001D64  6E32               	movwf	lcd_putrs@ptr,c
  3438  001D66  0E0F               	movlw	high STR_3
  3439  001D68  6E33               	movwf	lcd_putrs@ptr+1,c
  3440  001D6A  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3441                           
  3442                           ;main.c: 81: lcd_gotoxy(10,2);
  3443  001D6E  0E02               	movlw	2
  3444  001D70  6E2E               	movwf	lcd_gotoxy@y,c
  3445  001D72  0E0A               	movlw	10
  3446  001D74  ECB6  F00F         	call	_lcd_gotoxy
  3447                           
  3448                           ;main.c: 82: lcd_putrs("Menu4");
  3449  001D78  0E4D               	movlw	low STR_4
  3450  001D7A  6E32               	movwf	lcd_putrs@ptr,c
  3451  001D7C  0E0F               	movlw	high STR_4
  3452  001D7E  6E33               	movwf	lcd_putrs@ptr+1,c
  3453  001D80  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3454  001D84  0012               	return		;funcret
  3455  001D86                     __end_of_Menu_Home:
  3456                           	opt stack 0
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           prodh	equ	0xFF4
  3462                           prodl	equ	0xFF3
  3463                           intcon	equ	0xFF2
  3464                           postinc0	equ	0xFEE
  3465                           wreg	equ	0xFE8
  3466                           postdec1	equ	0xFE5
  3467                           fsr1l	equ	0xFE1
  3468                           indf2	equ	0xFDF
  3469                           postinc2	equ	0xFDE
  3470                           postdec2	equ	0xFDD
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _Button_C *****************
  3476 ;; Defined at:
  3477 ;;		line 205 in file "main.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    5
  3498 ;; This function calls:
  3499 ;;		_lcd_putrs
  3500 ;; This function is called by:
  3501 ;;		_Keyboard_Control
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text18
  3506  002052                     __ptext18:
  3507                           	opt stack 0
  3508  002052                     _Button_C:
  3509                           	opt stack 24
  3510                           
  3511                           ;main.c: 206: lcd_putrs("C");
  3512                           
  3513                           ;incstack = 0
  3514  002052  0E60               	movlw	low STR_29
  3515  002054  6E32               	movwf	lcd_putrs@ptr,c
  3516  002056  0E0F               	movlw	high STR_29
  3517  002058  6E33               	movwf	lcd_putrs@ptr+1,c
  3518  00205A  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3519  00205E  0012               	return		;funcret
  3520  002060                     __end_of_Button_C:
  3521                           	opt stack 0
  3522                           tblptru	equ	0xFF8
  3523                           tblptrh	equ	0xFF7
  3524                           tblptrl	equ	0xFF6
  3525                           tablat	equ	0xFF5
  3526                           prodh	equ	0xFF4
  3527                           prodl	equ	0xFF3
  3528                           intcon	equ	0xFF2
  3529                           postinc0	equ	0xFEE
  3530                           wreg	equ	0xFE8
  3531                           postdec1	equ	0xFE5
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           postinc2	equ	0xFDE
  3535                           postdec2	equ	0xFDD
  3536                           fsr2h	equ	0xFDA
  3537                           fsr2l	equ	0xFD9
  3538                           status	equ	0xFD8
  3539                           
  3540 ;; *************** function _Button_B *****************
  3541 ;; Defined at:
  3542 ;;		line 157 in file "main.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;		None               void
  3549 ;; Registers used:
  3550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;Total ram usage:        2 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    5
  3563 ;; This function calls:
  3564 ;;		_lcd_gotoxy
  3565 ;;		_lcd_init
  3566 ;;		_lcd_putrs
  3567 ;; This function is called by:
  3568 ;;		_Keyboard_Control
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text19
  3573  001472                     __ptext19:
  3574                           	opt stack 0
  3575  001472                     _Button_B:
  3576                           	opt stack 24
  3577                           
  3578                           ;main.c: 159: switch(select)
  3579                           
  3580                           ;incstack = 0
  3581  001472  D0A0               	goto	l2571
  3582  001474                     l2505:
  3583                           
  3584                           ;main.c: 162: lcd_init();
  3585  001474  ECE5  F00D         	call	_lcd_init	;wreg free
  3586                           
  3587                           ;main.c: 163: lcd_gotoxy(1,1);
  3588  001478  0E01               	movlw	1
  3589  00147A  6E2E               	movwf	lcd_gotoxy@y,c
  3590  00147C  0E01               	movlw	1
  3591  00147E  ECB6  F00F         	call	_lcd_gotoxy
  3592                           
  3593                           ;main.c: 164: lcd_putrs("Menu 1");
  3594  001482  0E1F               	movlw	low STR_17
  3595  001484  6E32               	movwf	lcd_putrs@ptr,c
  3596  001486  0E0F               	movlw	high STR_17
  3597  001488  6E33               	movwf	lcd_putrs@ptr+1,c
  3598  00148A  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3599                           
  3600                           ;main.c: 165: lcd_gotoxy(10,1);
  3601  00148E  0E01               	movlw	1
  3602  001490  6E2E               	movwf	lcd_gotoxy@y,c
  3603  001492  0E0A               	movlw	10
  3604  001494  ECB6  F00F         	call	_lcd_gotoxy
  3605                           
  3606                           ;main.c: 166: lcd_putrs("Option1");
  3607  001498  0E0F               	movlw	low STR_18
  3608  00149A  6E32               	movwf	lcd_putrs@ptr,c
  3609  00149C  0E0F               	movlw	high STR_18
  3610  00149E  6E33               	movwf	lcd_putrs@ptr+1,c
  3611  0014A0  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3612                           
  3613                           ;main.c: 167: lcd_gotoxy(10,2);
  3614  0014A4  0E02               	movlw	2
  3615  0014A6  6E2E               	movwf	lcd_gotoxy@y,c
  3616  0014A8  0E0A               	movlw	10
  3617  0014AA  ECB6  F00F         	call	_lcd_gotoxy
  3618                           
  3619                           ;main.c: 168: lcd_putrs("Option2");
  3620  0014AE  0E17               	movlw	low STR_19
  3621  0014B0  6E32               	movwf	lcd_putrs@ptr,c
  3622  0014B2  0E0F               	movlw	high STR_19
  3623  0014B4  6E33               	movwf	lcd_putrs@ptr+1,c
  3624  0014B6  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3625                           
  3626                           ;main.c: 169: submenu = 1;
  3627  0014BA  0E00               	movlw	0
  3628  0014BC  6E20               	movwf	_submenu+1,c
  3629  0014BE  0E01               	movlw	1
  3630  0014C0  6E1F               	movwf	_submenu,c
  3631                           
  3632                           ;main.c: 170: break;
  3633  0014C2  0012               	return	
  3634  0014C4                     l2521:
  3635                           
  3636                           ;main.c: 172: lcd_init();
  3637  0014C4  ECE5  F00D         	call	_lcd_init	;wreg free
  3638                           
  3639                           ;main.c: 173: lcd_gotoxy(1,1);
  3640  0014C8  0E01               	movlw	1
  3641  0014CA  6E2E               	movwf	lcd_gotoxy@y,c
  3642  0014CC  0E01               	movlw	1
  3643  0014CE  ECB6  F00F         	call	_lcd_gotoxy
  3644                           
  3645                           ;main.c: 174: lcd_putrs("Menu 2");
  3646  0014D2  0E26               	movlw	low STR_20
  3647  0014D4  6E32               	movwf	lcd_putrs@ptr,c
  3648  0014D6  0E0F               	movlw	high STR_20
  3649  0014D8  6E33               	movwf	lcd_putrs@ptr+1,c
  3650  0014DA  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3651                           
  3652                           ;main.c: 175: lcd_gotoxy(10,1);
  3653  0014DE  0E01               	movlw	1
  3654  0014E0  6E2E               	movwf	lcd_gotoxy@y,c
  3655  0014E2  0E0A               	movlw	10
  3656  0014E4  ECB6  F00F         	call	_lcd_gotoxy
  3657                           
  3658                           ;main.c: 176: lcd_putrs("Option1");
  3659  0014E8  0E0F               	movlw	low STR_18
  3660  0014EA  6E32               	movwf	lcd_putrs@ptr,c
  3661  0014EC  0E0F               	movlw	high STR_18
  3662  0014EE  6E33               	movwf	lcd_putrs@ptr+1,c
  3663  0014F0  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3664                           
  3665                           ;main.c: 177: lcd_gotoxy(10,2);
  3666  0014F4  0E02               	movlw	2
  3667  0014F6  6E2E               	movwf	lcd_gotoxy@y,c
  3668  0014F8  0E0A               	movlw	10
  3669  0014FA  ECB6  F00F         	call	_lcd_gotoxy
  3670                           
  3671                           ;main.c: 178: lcd_putrs("Option2");
  3672  0014FE  0E17               	movlw	low STR_19
  3673  001500  6E32               	movwf	lcd_putrs@ptr,c
  3674  001502  0E0F               	movlw	high STR_19
  3675  001504  6E33               	movwf	lcd_putrs@ptr+1,c
  3676  001506  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3677                           
  3678                           ;main.c: 179: submenu = 1;
  3679  00150A  0E00               	movlw	0
  3680  00150C  6E20               	movwf	_submenu+1,c
  3681  00150E  0E01               	movlw	1
  3682  001510  6E1F               	movwf	_submenu,c
  3683                           
  3684                           ;main.c: 180: break;
  3685  001512  0012               	return	
  3686  001514                     l2537:
  3687                           
  3688                           ;main.c: 182: lcd_init();
  3689  001514  ECE5  F00D         	call	_lcd_init	;wreg free
  3690                           
  3691                           ;main.c: 183: lcd_gotoxy(1,1);
  3692  001518  0E01               	movlw	1
  3693  00151A  6E2E               	movwf	lcd_gotoxy@y,c
  3694  00151C  0E01               	movlw	1
  3695  00151E  ECB6  F00F         	call	_lcd_gotoxy
  3696                           
  3697                           ;main.c: 184: lcd_putrs("Menu 3");
  3698  001522  0E2D               	movlw	low STR_23
  3699  001524  6E32               	movwf	lcd_putrs@ptr,c
  3700  001526  0E0F               	movlw	high STR_23
  3701  001528  6E33               	movwf	lcd_putrs@ptr+1,c
  3702  00152A  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3703                           
  3704                           ;main.c: 185: lcd_gotoxy(10,1);
  3705  00152E  0E01               	movlw	1
  3706  001530  6E2E               	movwf	lcd_gotoxy@y,c
  3707  001532  0E0A               	movlw	10
  3708  001534  ECB6  F00F         	call	_lcd_gotoxy
  3709                           
  3710                           ;main.c: 186: lcd_putrs("Option1");
  3711  001538  0E0F               	movlw	low STR_18
  3712  00153A  6E32               	movwf	lcd_putrs@ptr,c
  3713  00153C  0E0F               	movlw	high STR_18
  3714  00153E  6E33               	movwf	lcd_putrs@ptr+1,c
  3715  001540  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3716                           
  3717                           ;main.c: 187: lcd_gotoxy(10,2);
  3718  001544  0E02               	movlw	2
  3719  001546  6E2E               	movwf	lcd_gotoxy@y,c
  3720  001548  0E0A               	movlw	10
  3721  00154A  ECB6  F00F         	call	_lcd_gotoxy
  3722                           
  3723                           ;main.c: 188: lcd_putrs("Option2");
  3724  00154E  0E17               	movlw	low STR_19
  3725  001550  6E32               	movwf	lcd_putrs@ptr,c
  3726  001552  0E0F               	movlw	high STR_19
  3727  001554  6E33               	movwf	lcd_putrs@ptr+1,c
  3728  001556  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3729                           
  3730                           ;main.c: 189: submenu = 1;
  3731  00155A  0E00               	movlw	0
  3732  00155C  6E20               	movwf	_submenu+1,c
  3733  00155E  0E01               	movlw	1
  3734  001560  6E1F               	movwf	_submenu,c
  3735                           
  3736                           ;main.c: 190: break;
  3737  001562  0012               	return	
  3738  001564                     l2553:
  3739                           
  3740                           ;main.c: 192: lcd_init();
  3741  001564  ECE5  F00D         	call	_lcd_init	;wreg free
  3742                           
  3743                           ;main.c: 193: lcd_gotoxy(1,1);
  3744  001568  0E01               	movlw	1
  3745  00156A  6E2E               	movwf	lcd_gotoxy@y,c
  3746  00156C  0E01               	movlw	1
  3747  00156E  ECB6  F00F         	call	_lcd_gotoxy
  3748                           
  3749                           ;main.c: 194: lcd_putrs("Menu 4");
  3750  001572  0E34               	movlw	low STR_26
  3751  001574  6E32               	movwf	lcd_putrs@ptr,c
  3752  001576  0E0F               	movlw	high STR_26
  3753  001578  6E33               	movwf	lcd_putrs@ptr+1,c
  3754  00157A  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3755                           
  3756                           ;main.c: 195: lcd_gotoxy(10,1);
  3757  00157E  0E01               	movlw	1
  3758  001580  6E2E               	movwf	lcd_gotoxy@y,c
  3759  001582  0E0A               	movlw	10
  3760  001584  ECB6  F00F         	call	_lcd_gotoxy
  3761                           
  3762                           ;main.c: 196: lcd_putrs("Option1");
  3763  001588  0E0F               	movlw	low STR_18
  3764  00158A  6E32               	movwf	lcd_putrs@ptr,c
  3765  00158C  0E0F               	movlw	high STR_18
  3766  00158E  6E33               	movwf	lcd_putrs@ptr+1,c
  3767  001590  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3768                           
  3769                           ;main.c: 197: lcd_gotoxy(10,2);
  3770  001594  0E02               	movlw	2
  3771  001596  6E2E               	movwf	lcd_gotoxy@y,c
  3772  001598  0E0A               	movlw	10
  3773  00159A  ECB6  F00F         	call	_lcd_gotoxy
  3774                           
  3775                           ;main.c: 198: lcd_putrs("Option2");
  3776  00159E  0E17               	movlw	low STR_19
  3777  0015A0  6E32               	movwf	lcd_putrs@ptr,c
  3778  0015A2  0E0F               	movlw	high STR_19
  3779  0015A4  6E33               	movwf	lcd_putrs@ptr+1,c
  3780  0015A6  ECF1  F00E         	call	_lcd_putrs	;wreg free
  3781                           
  3782                           ;main.c: 199: submenu = 1;
  3783  0015AA  0E00               	movlw	0
  3784  0015AC  6E20               	movwf	_submenu+1,c
  3785  0015AE  0E01               	movlw	1
  3786  0015B0  6E1F               	movwf	_submenu,c
  3787                           
  3788                           ;main.c: 201: }
  3789                           
  3790                           ;main.c: 200: break;
  3791  0015B2  0012               	return	
  3792  0015B4                     l2571:
  3793  0015B4  C019  F034         	movff	_select,??_Button_B
  3794  0015B8  C01A  F035         	movff	_select+1,??_Button_B+1
  3795                           
  3796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3797                           ; Switch size 1, requested type "space"
  3798                           ; Number of cases is 1, Range of values is 0 to 0
  3799                           ; switch strategies available:
  3800                           ; Name         Instructions Cycles
  3801                           ; simple_byte            4     3 (average)
  3802                           ;	Chosen strategy is simple_byte
  3803  0015BC  5035               	movf	??_Button_B+1,w,c
  3804  0015BE  0A00               	xorlw	0	; case 0
  3805  0015C0  A4D8               	btfss	status,2,c
  3806  0015C2  0012               	return	
  3807                           
  3808                           ; Switch size 1, requested type "space"
  3809                           ; Number of cases is 4, Range of values is 1 to 4
  3810                           ; switch strategies available:
  3811                           ; Name         Instructions Cycles
  3812                           ; simple_byte           13     7 (average)
  3813                           ;	Chosen strategy is simple_byte
  3814  0015C4  5034               	movf	??_Button_B,w,c
  3815  0015C6  0A01               	xorlw	1	; case 1
  3816  0015C8  B4D8               	btfsc	status,2,c
  3817  0015CA  D754               	goto	l2505
  3818  0015CC  0A03               	xorlw	3	; case 2
  3819  0015CE  B4D8               	btfsc	status,2,c
  3820  0015D0  D779               	goto	l2521
  3821  0015D2  0A01               	xorlw	1	; case 3
  3822  0015D4  B4D8               	btfsc	status,2,c
  3823  0015D6  D79E               	goto	l2537
  3824  0015D8  0A07               	xorlw	7	; case 4
  3825  0015DA  A4D8               	btfss	status,2,c
  3826  0015DC  0012               	return	
  3827  0015DE  D7C2               	goto	l2553
  3828  0015E0  0012               	return		;funcret
  3829  0015E2                     __end_of_Button_B:
  3830                           	opt stack 0
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           prodh	equ	0xFF4
  3836                           prodl	equ	0xFF3
  3837                           intcon	equ	0xFF2
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           postdec1	equ	0xFE5
  3841                           fsr1l	equ	0xFE1
  3842                           indf2	equ	0xFDF
  3843                           postinc2	equ	0xFDE
  3844                           postdec2	equ	0xFDD
  3845                           fsr2h	equ	0xFDA
  3846                           fsr2l	equ	0xFD9
  3847                           status	equ	0xFD8
  3848                           
  3849 ;; *************** function _lcd_init *****************
  3850 ;; Defined at:
  3851 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  i               1    4[COMRAM] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;		None               void
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3869 ;;Total ram usage:        1 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    2
  3872 ;; This function calls:
  3873 ;;		_Delay1KTCYx
  3874 ;;		_lcd_send_byte
  3875 ;;		_lcd_send_nibble
  3876 ;; This function is called by:
  3877 ;;		_Setup
  3878 ;;		_Menu_Home
  3879 ;;		_Button_B
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text20
  3884  001BCA                     __ptext20:
  3885                           	opt stack 0
  3886  001BCA                     _lcd_init:
  3887                           	opt stack 27
  3888                           
  3889                           ;unmc_lcd_216.c: 120: int8 i;
  3890                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  3891                           
  3892                           ;incstack = 0
  3893  001BCA  9693               	bcf	3987,3,c	;volatile
  3894                           
  3895                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  3896  001BCC  9493               	bcf	3987,2,c	;volatile
  3897                           
  3898                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  3899  001BCE  968A               	bcf	3978,3,c	;volatile
  3900                           
  3901                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  3902  001BD0  948A               	bcf	3978,2,c	;volatile
  3903                           
  3904                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  3905  001BD2  9893               	bcf	3987,4,c	;volatile
  3906                           
  3907                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  3908  001BD4  9A93               	bcf	3987,5,c	;volatile
  3909                           
  3910                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  3911  001BD6  9C93               	bcf	3987,6,c	;volatile
  3912                           
  3913                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  3914  001BD8  9E93               	bcf	3987,7,c	;volatile
  3915                           
  3916                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  3917  001BDA  0E0A               	movlw	10
  3918  001BDC  ECFB  F00F         	call	_Delay1KTCYx
  3919                           
  3920                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  3921  001BE0  0E0A               	movlw	10
  3922  001BE2  ECFB  F00F         	call	_Delay1KTCYx
  3923                           
  3924                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  3925  001BE6  0E0A               	movlw	10
  3926  001BE8  ECFB  F00F         	call	_Delay1KTCYx
  3927                           
  3928                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  3929  001BEC  0E00               	movlw	0
  3930  001BEE  6E2E               	movwf	lcd_init@i,c
  3931  001BF0                     l2075:
  3932  001BF0  0E02               	movlw	2
  3933  001BF2  642E               	cpfsgt	lcd_init@i,c
  3934  001BF4  D001               	goto	l2079
  3935  001BF6  D008               	goto	l2085
  3936  001BF8                     l2079:
  3937                           
  3938                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  3939  001BF8  0E03               	movlw	3
  3940  001BFA  EC25  F00E         	call	_lcd_send_nibble
  3941                           
  3942                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  3943  001BFE  0E0A               	movlw	10
  3944  001C00  ECFB  F00F         	call	_Delay1KTCYx
  3945  001C04  2A2E               	incf	lcd_init@i,f,c
  3946  001C06  D7F4               	goto	l2075
  3947  001C08                     l2085:
  3948                           
  3949                           ;unmc_lcd_216.c: 146: }
  3950                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  3951  001C08  0E02               	movlw	2
  3952  001C0A  EC25  F00E         	call	_lcd_send_nibble
  3953                           
  3954                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  3955  001C0E  0E00               	movlw	0
  3956  001C10  6E2E               	movwf	lcd_init@i,c
  3957  001C12  0E03               	movlw	3
  3958  001C14  642E               	cpfsgt	lcd_init@i,c
  3959  001C16  D002               	goto	l2093
  3960  001C18  0012               	return	
  3961  001C1A  0012               	return	
  3962  001C1C                     l2093:
  3963                           
  3964                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  3965  001C1C  502E               	movf	lcd_init@i,w,c
  3966  001C1E  0D01               	mullw	1
  3967  001C20  0E0B               	movlw	low _LCD_INIT_STRING
  3968  001C22  24F3               	addwf	prodl,w,c
  3969  001C24  6EF6               	movwf	tblptrl,c
  3970  001C26  0E0F               	movlw	high _LCD_INIT_STRING
  3971  001C28  20F4               	addwfc	prodh,w,c
  3972  001C2A  6EF7               	movwf	tblptrh,c
  3973  001C2C                     	if	0	;There are less than 3 active tblptr bytes
  3974  001C2C                     	endif
  3975  001C2C  0008               	tblrd		*
  3976  001C2E  CFF5 F02C          	movff	tablat,lcd_send_byte@n
  3977  001C32  0E00               	movlw	0
  3978  001C34  EC89  F00F         	call	_lcd_send_byte
  3979                           
  3980                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  3981  001C38  0E0A               	movlw	10
  3982  001C3A  ECFB  F00F         	call	_Delay1KTCYx
  3983  001C3E  2A2E               	incf	lcd_init@i,f,c
  3984  001C40  0E03               	movlw	3
  3985  001C42  642E               	cpfsgt	lcd_init@i,c
  3986  001C44  D7EB               	goto	l2093
  3987  001C46  0012               	return	
  3988  001C48  0012               	return		;funcret
  3989  001C4A                     __end_of_lcd_init:
  3990                           	opt stack 0
  3991                           tblptru	equ	0xFF8
  3992                           tblptrh	equ	0xFF7
  3993                           tblptrl	equ	0xFF6
  3994                           tablat	equ	0xFF5
  3995                           prodh	equ	0xFF4
  3996                           prodl	equ	0xFF3
  3997                           intcon	equ	0xFF2
  3998                           postinc0	equ	0xFEE
  3999                           wreg	equ	0xFE8
  4000                           postdec1	equ	0xFE5
  4001                           fsr1l	equ	0xFE1
  4002                           indf2	equ	0xFDF
  4003                           postinc2	equ	0xFDE
  4004                           postdec2	equ	0xFDD
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009 ;; *************** function _Delay1KTCYx *****************
  4010 ;; Defined at:
  4011 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  unit            1    wreg     unsigned char 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  unit            1    0[COMRAM] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;		None               void
  4018 ;; Registers used:
  4019 ;;		wreg
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;Total ram usage:        1 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_lcd_init
  4035 ;;		_DelayPORXLCD
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text21
  4040  001FF6                     __ptext21:
  4041                           	opt stack 0
  4042  001FF6                     _Delay1KTCYx:
  4043                           	opt stack 28
  4044                           
  4045                           ;incstack = 0
  4046                           ;Delay1KTCYx@unit stored from wreg
  4047  001FF6  6E2A               	movwf	Delay1KTCYx@unit,c
  4048  001FF8  0EFA               	movlw	250
  4049  001FFA                     u2107:
  4050  001FFA  F000               	nop	
  4051  001FFC  2EE8               	decfsz	wreg,f,c
  4052  001FFE  D7FD               	goto	u2107
  4053  002000  2E2A               	decfsz	Delay1KTCYx@unit,f,c
  4054  002002  D7FA               	goto	l2051
  4055  002004  0012               	return	
  4056  002006  0012               	return		;funcret
  4057  002008                     __end_of_Delay1KTCYx:
  4058                           	opt stack 0
  4059                           tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           prodh	equ	0xFF4
  4064                           prodl	equ	0xFF3
  4065                           intcon	equ	0xFF2
  4066                           postinc0	equ	0xFEE
  4067                           wreg	equ	0xFE8
  4068                           postdec1	equ	0xFE5
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function _Button_A *****************
  4078 ;; Defined at:
  4079 ;;		line 145 in file "main.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;		None               void
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    6
  4100 ;; This function calls:
  4101 ;;		_Menu_Iterator
  4102 ;;		_Menu_Submenu_Iterator
  4103 ;; This function is called by:
  4104 ;;		_Keyboard_Control
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text22
  4109  001FB2                     __ptext22:
  4110                           	opt stack 0
  4111  001FB2                     _Button_A:
  4112                           	opt stack 23
  4113                           
  4114                           ;main.c: 147: if (submenu == 0){
  4115                           
  4116                           ;incstack = 0
  4117  001FB2  501F               	movf	_submenu,w,c
  4118  001FB4  1020               	iorwf	_submenu+1,w,c
  4119  001FB6  A4D8               	btfss	status,2,c
  4120  001FB8  D003               	goto	l2499
  4121                           
  4122                           ;main.c: 148: Menu_Iterator();
  4123  001FBA  EC38  F00C         	call	_Menu_Iterator	;wreg free
  4124  001FBE  D000               	goto	l2499
  4125  001FC0                     l2499:
  4126                           
  4127                           ;main.c: 149: }
  4128                           ;main.c: 151: if (submenu == 1){
  4129  001FC0  041F               	decf	_submenu,w,c
  4130  001FC2  1020               	iorwf	_submenu+1,w,c
  4131  001FC4  A4D8               	btfss	status,2,c
  4132  001FC6  0012               	return	
  4133                           
  4134                           ;main.c: 152: Menu_Submenu_Iterator();
  4135  001FC8  EC9D  F00D         	call	_Menu_Submenu_Iterator	;wreg free
  4136  001FCC  0012               	return	
  4137  001FCE  0012               	return		;funcret
  4138  001FD0                     __end_of_Button_A:
  4139                           	opt stack 0
  4140                           tblptru	equ	0xFF8
  4141                           tblptrh	equ	0xFF7
  4142                           tblptrl	equ	0xFF6
  4143                           tablat	equ	0xFF5
  4144                           prodh	equ	0xFF4
  4145                           prodl	equ	0xFF3
  4146                           intcon	equ	0xFF2
  4147                           postinc0	equ	0xFEE
  4148                           wreg	equ	0xFE8
  4149                           postdec1	equ	0xFE5
  4150                           fsr1l	equ	0xFE1
  4151                           indf2	equ	0xFDF
  4152                           postinc2	equ	0xFDE
  4153                           postdec2	equ	0xFDD
  4154                           fsr2h	equ	0xFDA
  4155                           fsr2l	equ	0xFD9
  4156                           status	equ	0xFD8
  4157                           
  4158 ;; *************** function _Menu_Submenu_Iterator *****************
  4159 ;; Defined at:
  4160 ;;		line 124 in file "main.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;		None               void
  4167 ;; Registers used:
  4168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4178 ;;Total ram usage:        2 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    5
  4181 ;; This function calls:
  4182 ;;		_lcd_gotoxy
  4183 ;;		_lcd_putrs
  4184 ;; This function is called by:
  4185 ;;		_Button_A
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text23
  4190  001B3A                     __ptext23:
  4191                           	opt stack 0
  4192  001B3A                     _Menu_Submenu_Iterator:
  4193                           	opt stack 23
  4194                           
  4195                           ;main.c: 126: switch(select_op){
  4196                           
  4197                           ;incstack = 0
  4198  001B3A  D036               	goto	l2337
  4199  001B3C                     l2315:
  4200                           
  4201                           ;main.c: 128: lcd_gotoxy(9,1);
  4202  001B3C  0E01               	movlw	1
  4203  001B3E  6E2E               	movwf	lcd_gotoxy@y,c
  4204  001B40  0E09               	movlw	9
  4205  001B42  ECB6  F00F         	call	_lcd_gotoxy
  4206                           
  4207                           ;main.c: 129: lcd_putrs(">");
  4208  001B46  0E5E               	movlw	low STR_5
  4209  001B48  6E32               	movwf	lcd_putrs@ptr,c
  4210  001B4A  0E0F               	movlw	high STR_5
  4211  001B4C  6E33               	movwf	lcd_putrs@ptr+1,c
  4212  001B4E  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4213                           
  4214                           ;main.c: 130: select_op = 2;
  4215  001B52  0E00               	movlw	0
  4216  001B54  6E1C               	movwf	_select_op+1,c
  4217  001B56  0E02               	movlw	2
  4218  001B58  6E1B               	movwf	_select_op,c
  4219                           
  4220                           ;main.c: 131: lcd_gotoxy(9,2);
  4221  001B5A  0E02               	movlw	2
  4222  001B5C  6E2E               	movwf	lcd_gotoxy@y,c
  4223  001B5E  0E09               	movlw	9
  4224  001B60  ECB6  F00F         	call	_lcd_gotoxy
  4225                           
  4226                           ;main.c: 132: lcd_putrs(" ");
  4227  001B64  0E58               	movlw	low STR_6
  4228  001B66  6E32               	movwf	lcd_putrs@ptr,c
  4229  001B68  0E0F               	movlw	high STR_6
  4230  001B6A  6E33               	movwf	lcd_putrs@ptr+1,c
  4231  001B6C  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4232                           
  4233                           ;main.c: 133: break;
  4234  001B70  0012               	return	
  4235  001B72                     l2325:
  4236                           
  4237                           ;main.c: 135: lcd_gotoxy(9,2);
  4238  001B72  0E02               	movlw	2
  4239  001B74  6E2E               	movwf	lcd_gotoxy@y,c
  4240  001B76  0E09               	movlw	9
  4241  001B78  ECB6  F00F         	call	_lcd_gotoxy
  4242                           
  4243                           ;main.c: 136: lcd_putrs(">");
  4244  001B7C  0E5E               	movlw	low STR_5
  4245  001B7E  6E32               	movwf	lcd_putrs@ptr,c
  4246  001B80  0E0F               	movlw	high STR_5
  4247  001B82  6E33               	movwf	lcd_putrs@ptr+1,c
  4248  001B84  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4249                           
  4250                           ;main.c: 137: select_op = 1;
  4251  001B88  0E00               	movlw	0
  4252  001B8A  6E1C               	movwf	_select_op+1,c
  4253  001B8C  0E01               	movlw	1
  4254  001B8E  6E1B               	movwf	_select_op,c
  4255                           
  4256                           ;main.c: 138: lcd_gotoxy(9,1);
  4257  001B90  0E01               	movlw	1
  4258  001B92  6E2E               	movwf	lcd_gotoxy@y,c
  4259  001B94  0E09               	movlw	9
  4260  001B96  ECB6  F00F         	call	_lcd_gotoxy
  4261                           
  4262                           ;main.c: 139: lcd_putrs(" ");
  4263  001B9A  0E58               	movlw	low STR_6
  4264  001B9C  6E32               	movwf	lcd_putrs@ptr,c
  4265  001B9E  0E0F               	movlw	high STR_6
  4266  001BA0  6E33               	movwf	lcd_putrs@ptr+1,c
  4267  001BA2  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4268                           
  4269                           ;main.c: 141: }
  4270                           
  4271                           ;main.c: 140: break;
  4272  001BA6  0012               	return	
  4273  001BA8                     l2337:
  4274  001BA8  C01B  F034         	movff	_select_op,??_Menu_Submenu_Iterator
  4275  001BAC  C01C  F035         	movff	_select_op+1,??_Menu_Submenu_Iterator+1
  4276                           
  4277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4278                           ; Switch size 1, requested type "space"
  4279                           ; Number of cases is 1, Range of values is 0 to 0
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            4     3 (average)
  4283                           ;	Chosen strategy is simple_byte
  4284  001BB0  5035               	movf	??_Menu_Submenu_Iterator+1,w,c
  4285  001BB2  0A00               	xorlw	0	; case 0
  4286  001BB4  A4D8               	btfss	status,2,c
  4287  001BB6  0012               	return	
  4288                           
  4289                           ; Switch size 1, requested type "space"
  4290                           ; Number of cases is 2, Range of values is 1 to 2
  4291                           ; switch strategies available:
  4292                           ; Name         Instructions Cycles
  4293                           ; simple_byte            7     4 (average)
  4294                           ;	Chosen strategy is simple_byte
  4295  001BB8  5034               	movf	??_Menu_Submenu_Iterator,w,c
  4296  001BBA  0A01               	xorlw	1	; case 1
  4297  001BBC  B4D8               	btfsc	status,2,c
  4298  001BBE  D7BE               	goto	l2315
  4299  001BC0  0A03               	xorlw	3	; case 2
  4300  001BC2  A4D8               	btfss	status,2,c
  4301  001BC4  0012               	return	
  4302  001BC6  D7D5               	goto	l2325
  4303  001BC8  0012               	return		;funcret
  4304  001BCA                     __end_of_Menu_Submenu_Iterator:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           prodh	equ	0xFF4
  4311                           prodl	equ	0xFF3
  4312                           intcon	equ	0xFF2
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           postdec1	equ	0xFE5
  4316                           fsr1l	equ	0xFE1
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           postdec2	equ	0xFDD
  4320                           fsr2h	equ	0xFDA
  4321                           fsr2l	equ	0xFD9
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function _Menu_Iterator *****************
  4325 ;; Defined at:
  4326 ;;		line 85 in file "main.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;		None               void
  4333 ;; Registers used:
  4334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4344 ;;Total ram usage:        2 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    5
  4347 ;; This function calls:
  4348 ;;		_lcd_gotoxy
  4349 ;;		_lcd_putrs
  4350 ;; This function is called by:
  4351 ;;		_Button_A
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text24
  4356  001870                     __ptext24:
  4357                           	opt stack 0
  4358  001870                     _Menu_Iterator:
  4359                           	opt stack 23
  4360                           
  4361                           ;main.c: 87: switch(selection){
  4362                           
  4363                           ;incstack = 0
  4364  001870  D07C               	goto	l2307
  4365  001872                     l2265:
  4366                           
  4367                           ;main.c: 89: lcd_gotoxy(1,1);
  4368  001872  0E01               	movlw	1
  4369  001874  6E2E               	movwf	lcd_gotoxy@y,c
  4370  001876  0E01               	movlw	1
  4371  001878  ECB6  F00F         	call	_lcd_gotoxy
  4372                           
  4373                           ;main.c: 90: lcd_putrs(">");
  4374  00187C  0E5E               	movlw	low STR_5
  4375  00187E  6E32               	movwf	lcd_putrs@ptr,c
  4376  001880  0E0F               	movlw	high STR_5
  4377  001882  6E33               	movwf	lcd_putrs@ptr+1,c
  4378  001884  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4379                           
  4380                           ;main.c: 91: selection = 2;
  4381  001888  0E00               	movlw	0
  4382  00188A  6E1E               	movwf	_selection+1,c
  4383  00188C  0E02               	movlw	2
  4384  00188E  6E1D               	movwf	_selection,c
  4385                           
  4386                           ;main.c: 92: select = 1;
  4387  001890  0E00               	movlw	0
  4388  001892  6E1A               	movwf	_select+1,c
  4389  001894  0E01               	movlw	1
  4390  001896  6E19               	movwf	_select,c
  4391                           
  4392                           ;main.c: 93: lcd_gotoxy(9,2);
  4393  001898  0E02               	movlw	2
  4394  00189A  6E2E               	movwf	lcd_gotoxy@y,c
  4395  00189C  0E09               	movlw	9
  4396  00189E  ECB6  F00F         	call	_lcd_gotoxy
  4397                           
  4398                           ;main.c: 94: lcd_putrs(" ");
  4399  0018A2  0E58               	movlw	low STR_6
  4400  0018A4  6E32               	movwf	lcd_putrs@ptr,c
  4401  0018A6  0E0F               	movlw	high STR_6
  4402  0018A8  6E33               	movwf	lcd_putrs@ptr+1,c
  4403  0018AA  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4404                           
  4405                           ;main.c: 95: break;
  4406  0018AE  0012               	return	
  4407  0018B0                     l2275:
  4408                           
  4409                           ;main.c: 97: lcd_gotoxy(1,2);
  4410  0018B0  0E02               	movlw	2
  4411  0018B2  6E2E               	movwf	lcd_gotoxy@y,c
  4412  0018B4  0E01               	movlw	1
  4413  0018B6  ECB6  F00F         	call	_lcd_gotoxy
  4414                           
  4415                           ;main.c: 98: lcd_putrs(">");
  4416  0018BA  0E5E               	movlw	low STR_5
  4417  0018BC  6E32               	movwf	lcd_putrs@ptr,c
  4418  0018BE  0E0F               	movlw	high STR_5
  4419  0018C0  6E33               	movwf	lcd_putrs@ptr+1,c
  4420  0018C2  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4421                           
  4422                           ;main.c: 99: selection = 3;
  4423  0018C6  0E00               	movlw	0
  4424  0018C8  6E1E               	movwf	_selection+1,c
  4425  0018CA  0E03               	movlw	3
  4426  0018CC  6E1D               	movwf	_selection,c
  4427                           
  4428                           ;main.c: 100: select = 2;
  4429  0018CE  0E00               	movlw	0
  4430  0018D0  6E1A               	movwf	_select+1,c
  4431  0018D2  0E02               	movlw	2
  4432  0018D4  6E19               	movwf	_select,c
  4433                           
  4434                           ;main.c: 101: lcd_gotoxy(1,1);
  4435  0018D6  0E01               	movlw	1
  4436  0018D8  6E2E               	movwf	lcd_gotoxy@y,c
  4437  0018DA  0E01               	movlw	1
  4438  0018DC  ECB6  F00F         	call	_lcd_gotoxy
  4439                           
  4440                           ;main.c: 102: lcd_putrs(" ");
  4441  0018E0  0E58               	movlw	low STR_6
  4442  0018E2  6E32               	movwf	lcd_putrs@ptr,c
  4443  0018E4  0E0F               	movlw	high STR_6
  4444  0018E6  6E33               	movwf	lcd_putrs@ptr+1,c
  4445  0018E8  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4446                           
  4447                           ;main.c: 103: break;
  4448  0018EC  0012               	return	
  4449  0018EE                     l2285:
  4450                           
  4451                           ;main.c: 105: lcd_gotoxy(9,1);
  4452  0018EE  0E01               	movlw	1
  4453  0018F0  6E2E               	movwf	lcd_gotoxy@y,c
  4454  0018F2  0E09               	movlw	9
  4455  0018F4  ECB6  F00F         	call	_lcd_gotoxy
  4456                           
  4457                           ;main.c: 106: lcd_putrs(">");
  4458  0018F8  0E5E               	movlw	low STR_5
  4459  0018FA  6E32               	movwf	lcd_putrs@ptr,c
  4460  0018FC  0E0F               	movlw	high STR_5
  4461  0018FE  6E33               	movwf	lcd_putrs@ptr+1,c
  4462  001900  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4463                           
  4464                           ;main.c: 107: selection = 4;
  4465  001904  0E00               	movlw	0
  4466  001906  6E1E               	movwf	_selection+1,c
  4467  001908  0E04               	movlw	4
  4468  00190A  6E1D               	movwf	_selection,c
  4469                           
  4470                           ;main.c: 108: select = 3;
  4471  00190C  0E00               	movlw	0
  4472  00190E  6E1A               	movwf	_select+1,c
  4473  001910  0E03               	movlw	3
  4474  001912  6E19               	movwf	_select,c
  4475                           
  4476                           ;main.c: 109: lcd_gotoxy(1,2);
  4477  001914  0E02               	movlw	2
  4478  001916  6E2E               	movwf	lcd_gotoxy@y,c
  4479  001918  0E01               	movlw	1
  4480  00191A  ECB6  F00F         	call	_lcd_gotoxy
  4481                           
  4482                           ;main.c: 110: lcd_putrs(" ");
  4483  00191E  0E58               	movlw	low STR_6
  4484  001920  6E32               	movwf	lcd_putrs@ptr,c
  4485  001922  0E0F               	movlw	high STR_6
  4486  001924  6E33               	movwf	lcd_putrs@ptr+1,c
  4487  001926  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4488                           
  4489                           ;main.c: 111: break;
  4490  00192A  0012               	return	
  4491  00192C                     l2295:
  4492                           
  4493                           ;main.c: 113: lcd_gotoxy(9,2);
  4494  00192C  0E02               	movlw	2
  4495  00192E  6E2E               	movwf	lcd_gotoxy@y,c
  4496  001930  0E09               	movlw	9
  4497  001932  ECB6  F00F         	call	_lcd_gotoxy
  4498                           
  4499                           ;main.c: 114: lcd_putrs(">");
  4500  001936  0E5E               	movlw	low STR_5
  4501  001938  6E32               	movwf	lcd_putrs@ptr,c
  4502  00193A  0E0F               	movlw	high STR_5
  4503  00193C  6E33               	movwf	lcd_putrs@ptr+1,c
  4504  00193E  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4505                           
  4506                           ;main.c: 115: selection = 1;
  4507  001942  0E00               	movlw	0
  4508  001944  6E1E               	movwf	_selection+1,c
  4509  001946  0E01               	movlw	1
  4510  001948  6E1D               	movwf	_selection,c
  4511                           
  4512                           ;main.c: 116: select = 4;
  4513  00194A  0E00               	movlw	0
  4514  00194C  6E1A               	movwf	_select+1,c
  4515  00194E  0E04               	movlw	4
  4516  001950  6E19               	movwf	_select,c
  4517                           
  4518                           ;main.c: 117: lcd_gotoxy(9,1);
  4519  001952  0E01               	movlw	1
  4520  001954  6E2E               	movwf	lcd_gotoxy@y,c
  4521  001956  0E09               	movlw	9
  4522  001958  ECB6  F00F         	call	_lcd_gotoxy
  4523                           
  4524                           ;main.c: 118: lcd_putrs(" ");
  4525  00195C  0E58               	movlw	low STR_6
  4526  00195E  6E32               	movwf	lcd_putrs@ptr,c
  4527  001960  0E0F               	movlw	high STR_6
  4528  001962  6E33               	movwf	lcd_putrs@ptr+1,c
  4529  001964  ECF1  F00E         	call	_lcd_putrs	;wreg free
  4530                           
  4531                           ;main.c: 120: }
  4532                           
  4533                           ;main.c: 119: break;
  4534  001968  0012               	return	
  4535  00196A                     l2307:
  4536  00196A  C01D  F034         	movff	_selection,??_Menu_Iterator
  4537  00196E  C01E  F035         	movff	_selection+1,??_Menu_Iterator+1
  4538                           
  4539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4540                           ; Switch size 1, requested type "space"
  4541                           ; Number of cases is 1, Range of values is 0 to 0
  4542                           ; switch strategies available:
  4543                           ; Name         Instructions Cycles
  4544                           ; simple_byte            4     3 (average)
  4545                           ;	Chosen strategy is simple_byte
  4546  001972  5035               	movf	??_Menu_Iterator+1,w,c
  4547  001974  0A00               	xorlw	0	; case 0
  4548  001976  A4D8               	btfss	status,2,c
  4549  001978  0012               	return	
  4550                           
  4551                           ; Switch size 1, requested type "space"
  4552                           ; Number of cases is 4, Range of values is 1 to 4
  4553                           ; switch strategies available:
  4554                           ; Name         Instructions Cycles
  4555                           ; simple_byte           13     7 (average)
  4556                           ;	Chosen strategy is simple_byte
  4557  00197A  5034               	movf	??_Menu_Iterator,w,c
  4558  00197C  0A01               	xorlw	1	; case 1
  4559  00197E  B4D8               	btfsc	status,2,c
  4560  001980  D778               	goto	l2265
  4561  001982  0A03               	xorlw	3	; case 2
  4562  001984  B4D8               	btfsc	status,2,c
  4563  001986  D794               	goto	l2275
  4564  001988  0A01               	xorlw	1	; case 3
  4565  00198A  B4D8               	btfsc	status,2,c
  4566  00198C  D7B0               	goto	l2285
  4567  00198E  0A07               	xorlw	7	; case 4
  4568  001990  A4D8               	btfss	status,2,c
  4569  001992  0012               	return	
  4570  001994  D7CB               	goto	l2295
  4571  001996  0012               	return		;funcret
  4572  001998                     __end_of_Menu_Iterator:
  4573                           	opt stack 0
  4574                           tblptru	equ	0xFF8
  4575                           tblptrh	equ	0xFF7
  4576                           tblptrl	equ	0xFF6
  4577                           tablat	equ	0xFF5
  4578                           prodh	equ	0xFF4
  4579                           prodl	equ	0xFF3
  4580                           intcon	equ	0xFF2
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           postdec1	equ	0xFE5
  4584                           fsr1l	equ	0xFE1
  4585                           indf2	equ	0xFDF
  4586                           postinc2	equ	0xFDE
  4587                           postdec2	equ	0xFDD
  4588                           fsr2h	equ	0xFDA
  4589                           fsr2l	equ	0xFD9
  4590                           status	equ	0xFD8
  4591                           
  4592 ;; *************** function _lcd_putrs *****************
  4593 ;; Defined at:
  4594 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  4597 ;;		 -> buffer2(20), STR_31(2), STR_30(2), STR_29(2), 
  4598 ;;		 -> STR_28(8), STR_27(8), STR_26(7), STR_25(8), 
  4599 ;;		 -> STR_24(8), STR_23(7), STR_22(8), STR_21(8), 
  4600 ;;		 -> STR_20(7), STR_19(8), STR_18(8), STR_17(7), 
  4601 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  4602 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  4603 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  4604 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(6), 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;		None               void
  4609 ;; Registers used:
  4610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;Total ram usage:        2 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    4
  4623 ;; This function calls:
  4624 ;;		_lcd_putc
  4625 ;; This function is called by:
  4626 ;;		_Menu_Home
  4627 ;;		_Menu_Iterator
  4628 ;;		_Menu_Submenu_Iterator
  4629 ;;		_Button_B
  4630 ;;		_Button_C
  4631 ;;		_Button_Star
  4632 ;;		_Button_Hash
  4633 ;;		_Keyboard_Control
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text25
  4638  001DE2                     __ptext25:
  4639                           	opt stack 0
  4640  001DE2                     _lcd_putrs:
  4641                           	opt stack 25
  4642                           
  4643                           ;unmc_lcd_216.c: 223: while(*ptr){
  4644                           
  4645                           ;incstack = 0
  4646  001DE2  D015               	goto	l2107
  4647  001DE4                     l2103:
  4648                           
  4649                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  4650  001DE4  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4651  001DE8  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4652  001DEC  6AF8               	clrf	tblptru,c
  4653  001DEE  0E0E               	movlw	(high __ramtop+-1)
  4654  001DF0  64F7               	cpfsgt	tblptrh,c
  4655  001DF2  D003               	bra	u1197
  4656  001DF4  0008               	tblrd		*
  4657  001DF6  50F5               	movf	tablat,w,c
  4658  001DF8  D005               	bra	u1190
  4659  001DFA                     u1197:
  4660  001DFA  CFF6 FFE9          	movff	tblptrl,fsr0l
  4661  001DFE  CFF7 FFEA          	movff	tblptrh,fsr0h
  4662  001E02  50EF               	movf	indf0,w,c
  4663  001E04                     u1190:
  4664  001E04  EC41  F00F         	call	_lcd_putc
  4665  001E08  4A32               	infsnz	lcd_putrs@ptr,f,c
  4666  001E0A  2A33               	incf	lcd_putrs@ptr+1,f,c
  4667  001E0C  D000               	goto	l2107
  4668  001E0E                     l2107:
  4669  001E0E  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4670  001E12  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4671  001E16  6AF8               	clrf	tblptru,c
  4672  001E18  0E0E               	movlw	(high __ramtop+-1)
  4673  001E1A  64F7               	cpfsgt	tblptrh,c
  4674  001E1C  D003               	bra	u1207
  4675  001E1E  0008               	tblrd		*
  4676  001E20  50F5               	movf	tablat,w,c
  4677  001E22  D005               	bra	u1200
  4678  001E24                     u1207:
  4679  001E24  CFF6 FFE9          	movff	tblptrl,fsr0l
  4680  001E28  CFF7 FFEA          	movff	tblptrh,fsr0h
  4681  001E2C  50EF               	movf	indf0,w,c
  4682  001E2E                     u1200:
  4683  001E2E  0900               	iorlw	0
  4684  001E30  A4D8               	btfss	status,2,c
  4685  001E32  D7D8               	goto	l2103
  4686  001E34  0012               	return		;funcret
  4687  001E36                     __end_of_lcd_putrs:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           prodh	equ	0xFF4
  4694                           prodl	equ	0xFF3
  4695                           intcon	equ	0xFF2
  4696                           indf0	equ	0xFEF
  4697                           postinc0	equ	0xFEE
  4698                           fsr0h	equ	0xFEA
  4699                           fsr0l	equ	0xFE9
  4700                           wreg	equ	0xFE8
  4701                           postdec1	equ	0xFE5
  4702                           fsr1l	equ	0xFE1
  4703                           indf2	equ	0xFDF
  4704                           postinc2	equ	0xFDE
  4705                           postdec2	equ	0xFDD
  4706                           fsr2h	equ	0xFDA
  4707                           fsr2l	equ	0xFD9
  4708                           status	equ	0xFD8
  4709                           
  4710 ;; *************** function _lcd_putc *****************
  4711 ;; Defined at:
  4712 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  c               1    wreg     unsigned char 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  c               1    7[COMRAM] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;		None               void
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;Total ram usage:        1 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    3
  4733 ;; This function calls:
  4734 ;;		_lcd_gotoxy
  4735 ;;		_lcd_send_byte
  4736 ;; This function is called by:
  4737 ;;		_lcd_putrs
  4738 ;;		_lcd_puts
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text26
  4743  001E82                     __ptext26:
  4744                           	opt stack 0
  4745  001E82                     _lcd_putc:
  4746                           	opt stack 25
  4747                           
  4748                           ;incstack = 0
  4749                           ;lcd_putc@c stored from wreg
  4750  001E82  6E31               	movwf	lcd_putc@c,c
  4751                           
  4752                           ;unmc_lcd_216.c: 173: switch(c){
  4753  001E84  D018               	goto	l2067
  4754  001E86                     l2057:
  4755                           
  4756                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  4757  001E86  0E01               	movlw	1
  4758  001E88  6E2C               	movwf	lcd_send_byte@n,c
  4759  001E8A  0E00               	movlw	0
  4760  001E8C  EC89  F00F         	call	_lcd_send_byte
  4761                           
  4762                           ;unmc_lcd_216.c: 176: break;
  4763  001E90  0012               	return	
  4764  001E92                     l2059:
  4765                           
  4766                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  4767  001E92  0E02               	movlw	2
  4768  001E94  6E2E               	movwf	lcd_gotoxy@y,c
  4769  001E96  0E01               	movlw	1
  4770  001E98  ECB6  F00F         	call	_lcd_gotoxy
  4771                           
  4772                           ;unmc_lcd_216.c: 179: break;
  4773  001E9C  0012               	return	
  4774  001E9E                     l2061:
  4775                           
  4776                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  4777  001E9E  0E10               	movlw	16
  4778  001EA0  6E2C               	movwf	lcd_send_byte@n,c
  4779  001EA2  0E00               	movlw	0
  4780  001EA4  EC89  F00F         	call	_lcd_send_byte
  4781                           
  4782                           ;unmc_lcd_216.c: 182: break;
  4783  001EA8  0012               	return	
  4784  001EAA                     l2063:
  4785                           
  4786                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  4787  001EAA  C031  F02C         	movff	lcd_putc@c,lcd_send_byte@n
  4788  001EAE  0E01               	movlw	1
  4789  001EB0  EC89  F00F         	call	_lcd_send_byte
  4790                           
  4791                           ;unmc_lcd_216.c: 186: }
  4792                           
  4793                           ;unmc_lcd_216.c: 185: break;
  4794  001EB4  0012               	return	
  4795  001EB6                     l2067:
  4796  001EB6  5031               	movf	lcd_putc@c,w,c
  4797                           
  4798                           ; Switch size 1, requested type "space"
  4799                           ; Number of cases is 3, Range of values is 8 to 12
  4800                           ; switch strategies available:
  4801                           ; Name         Instructions Cycles
  4802                           ; simple_byte           10     6 (average)
  4803                           ;	Chosen strategy is simple_byte
  4804  001EB8  0A08               	xorlw	8	; case 8
  4805  001EBA  B4D8               	btfsc	status,2,c
  4806  001EBC  D7F0               	goto	l2061
  4807  001EBE  0A02               	xorlw	2	; case 10
  4808  001EC0  B4D8               	btfsc	status,2,c
  4809  001EC2  D7E7               	goto	l2059
  4810  001EC4  0A06               	xorlw	6	; case 12
  4811  001EC6  B4D8               	btfsc	status,2,c
  4812  001EC8  D7DE               	goto	l2057
  4813  001ECA  D7EF               	goto	l2063
  4814  001ECC  0012               	return		;funcret
  4815  001ECE                     __end_of_lcd_putc:
  4816                           	opt stack 0
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           intcon	equ	0xFF2
  4824                           indf0	equ	0xFEF
  4825                           postinc0	equ	0xFEE
  4826                           fsr0h	equ	0xFEA
  4827                           fsr0l	equ	0xFE9
  4828                           wreg	equ	0xFE8
  4829                           postdec1	equ	0xFE5
  4830                           fsr1l	equ	0xFE1
  4831                           indf2	equ	0xFDF
  4832                           postinc2	equ	0xFDE
  4833                           postdec2	equ	0xFDD
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _lcd_gotoxy *****************
  4839 ;; Defined at:
  4840 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  x               1    wreg     unsigned char 
  4843 ;;  y               1    4[COMRAM] unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  x               1    5[COMRAM] unsigned char 
  4846 ;;  address         1    6[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;		None               void
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4856 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;Total ram usage:        3 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    2
  4863 ;; This function calls:
  4864 ;;		_lcd_send_byte
  4865 ;; This function is called by:
  4866 ;;		_Menu_Home
  4867 ;;		_Menu_Iterator
  4868 ;;		_Menu_Submenu_Iterator
  4869 ;;		_Button_B
  4870 ;;		_lcd_putc
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text27
  4875  001F6C                     __ptext27:
  4876                           	opt stack 0
  4877  001F6C                     _lcd_gotoxy:
  4878                           	opt stack 25
  4879                           
  4880                           ;incstack = 0
  4881                           ;lcd_gotoxy@x stored from wreg
  4882  001F6C  6E2F               	movwf	lcd_gotoxy@x,c
  4883                           
  4884                           ;unmc_lcd_216.c: 159: int8 address;
  4885                           ;unmc_lcd_216.c: 161: if(y != 1)
  4886  001F6E  042E               	decf	lcd_gotoxy@y,w,c
  4887  001F70  B4D8               	btfsc	status,2,c
  4888  001F72  D002               	goto	l2045
  4889                           
  4890                           ;unmc_lcd_216.c: 162: address = 0x40;
  4891  001F74  0E40               	movlw	64
  4892  001F76  D001               	goto	L1
  4893  001F78                     l2045:
  4894                           
  4895                           ;unmc_lcd_216.c: 163: else
  4896                           ;unmc_lcd_216.c: 164: address=0;
  4897  001F78  0E00               	movlw	0
  4898  001F7A                     L1:
  4899  001F7A  6E30               	movwf	lcd_gotoxy@address,c
  4900  001F7C  D000               	goto	l2047
  4901  001F7E                     l2047:
  4902                           
  4903                           ;unmc_lcd_216.c: 166: address += x-1;
  4904  001F7E  042F               	decf	lcd_gotoxy@x,w,c
  4905  001F80  2630               	addwf	lcd_gotoxy@address,f,c
  4906                           
  4907                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  4908  001F82  5030               	movf	lcd_gotoxy@address,w,c
  4909  001F84  0980               	iorlw	128
  4910  001F86  6E2C               	movwf	lcd_send_byte@n,c
  4911  001F88  0E00               	movlw	0
  4912  001F8A  EC89  F00F         	call	_lcd_send_byte
  4913  001F8E  0012               	return		;funcret
  4914  001F90                     __end_of_lcd_gotoxy:
  4915                           	opt stack 0
  4916                           tblptru	equ	0xFF8
  4917                           tblptrh	equ	0xFF7
  4918                           tblptrl	equ	0xFF6
  4919                           tablat	equ	0xFF5
  4920                           prodh	equ	0xFF4
  4921                           prodl	equ	0xFF3
  4922                           intcon	equ	0xFF2
  4923                           indf0	equ	0xFEF
  4924                           postinc0	equ	0xFEE
  4925                           fsr0h	equ	0xFEA
  4926                           fsr0l	equ	0xFE9
  4927                           wreg	equ	0xFE8
  4928                           postdec1	equ	0xFE5
  4929                           fsr1l	equ	0xFE1
  4930                           indf2	equ	0xFDF
  4931                           postinc2	equ	0xFDE
  4932                           postdec2	equ	0xFDD
  4933                           fsr2h	equ	0xFDA
  4934                           fsr2l	equ	0xFD9
  4935                           status	equ	0xFD8
  4936                           
  4937 ;; *************** function _lcd_send_byte *****************
  4938 ;; Defined at:
  4939 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  address         1    wreg     unsigned char 
  4942 ;;  n               1    2[COMRAM] unsigned char 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  address         1    3[COMRAM] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;		None               void
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4958 ;;Total ram usage:        2 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    1
  4961 ;; This function calls:
  4962 ;;		_Delay100TCYx
  4963 ;;		_lcd_send_nibble
  4964 ;; This function is called by:
  4965 ;;		_lcd_init
  4966 ;;		_lcd_gotoxy
  4967 ;;		_lcd_putc
  4968 ;;		_lcd_comand
  4969 ;;		_lcd_setcursor_vb
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text28
  4974  001F12                     __ptext28:
  4975                           	opt stack 0
  4976  001F12                     _lcd_send_byte:
  4977                           	opt stack 27
  4978                           
  4979                           ;incstack = 0
  4980                           ;lcd_send_byte@address stored from wreg
  4981  001F12  6E2D               	movwf	lcd_send_byte@address,c
  4982                           
  4983                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  4984  001F14  968A               	bcf	3978,3,c	;volatile
  4985                           
  4986                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  4987  001F16  0E02               	movlw	2
  4988  001F18  EC04  F010         	call	_Delay100TCYx
  4989                           
  4990                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  4991  001F1C  9893               	bcf	3987,4,c	;volatile
  4992                           
  4993                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  4994  001F1E  9A93               	bcf	3987,5,c	;volatile
  4995                           
  4996                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  4997  001F20  9C93               	bcf	3987,6,c	;volatile
  4998                           
  4999                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  5000  001F22  9E93               	bcf	3987,7,c	;volatile
  5001                           
  5002                           ;unmc_lcd_216.c: 101: if(address)
  5003  001F24  502D               	movf	lcd_send_byte@address,w,c
  5004  001F26  B4D8               	btfsc	status,2,c
  5005  001F28  D002               	goto	l287
  5006                           
  5007                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  5008  001F2A  868A               	bsf	3978,3,c	;volatile
  5009  001F2C  D001               	goto	l288
  5010  001F2E                     l287:
  5011                           
  5012                           ;unmc_lcd_216.c: 103: else
  5013                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  5014  001F2E  968A               	bcf	3978,3,c	;volatile
  5015  001F30                     l288:
  5016                           
  5017                           ;unmc_lcd_216.c: 106: __nop();
  5018  001F30  F000               	nop	
  5019                           
  5020                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  5021  001F32  382C               	swapf	lcd_send_byte@n,w,c
  5022  001F34  0B0F               	andlw	15
  5023  001F36  EC25  F00E         	call	_lcd_send_nibble
  5024                           
  5025                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  5026  001F3A  502C               	movf	lcd_send_byte@n,w,c
  5027  001F3C  0B0F               	andlw	15
  5028  001F3E  EC25  F00E         	call	_lcd_send_nibble
  5029  001F42  0012               	return		;funcret
  5030  001F44                     __end_of_lcd_send_byte:
  5031                           	opt stack 0
  5032                           tblptru	equ	0xFF8
  5033                           tblptrh	equ	0xFF7
  5034                           tblptrl	equ	0xFF6
  5035                           tablat	equ	0xFF5
  5036                           prodh	equ	0xFF4
  5037                           prodl	equ	0xFF3
  5038                           intcon	equ	0xFF2
  5039                           indf0	equ	0xFEF
  5040                           postinc0	equ	0xFEE
  5041                           fsr0h	equ	0xFEA
  5042                           fsr0l	equ	0xFE9
  5043                           wreg	equ	0xFE8
  5044                           postdec1	equ	0xFE5
  5045                           fsr1l	equ	0xFE1
  5046                           indf2	equ	0xFDF
  5047                           postinc2	equ	0xFDE
  5048                           postdec2	equ	0xFDD
  5049                           fsr2h	equ	0xFDA
  5050                           fsr2l	equ	0xFD9
  5051                           status	equ	0xFD8
  5052                           
  5053 ;; *************** function _lcd_send_nibble *****************
  5054 ;; Defined at:
  5055 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  nibble          1    wreg     unsigned char 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  nibble          1    1[COMRAM] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;		None               void
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5073 ;;Total ram usage:        2 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_lcd_send_byte
  5079 ;;		_lcd_init
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text29
  5084  001C4A                     __ptext29:
  5085                           	opt stack 0
  5086  001C4A                     _lcd_send_nibble:
  5087                           	opt stack 28
  5088                           
  5089                           ;incstack = 0
  5090                           ;lcd_send_nibble@nibble stored from wreg
  5091  001C4A  6E2B               	movwf	lcd_send_nibble@nibble,c
  5092                           
  5093                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  5094  001C4C  A02B               	btfss	lcd_send_nibble@nibble,0,c
  5095  001C4E  D003               	goto	u1050
  5096  001C50  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  5097  001C52  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  5098  001C54  D001               	goto	u1068
  5099  001C56                     u1050:
  5100  001C56  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  5101  001C58                     u1068:
  5102  001C58  3A2A               	swapf	??_lcd_send_nibble,f,c
  5103  001C5A  508A               	movf	3978,w,c	;volatile
  5104  001C5C  182A               	xorwf	??_lcd_send_nibble,w,c
  5105  001C5E  0BEF               	andlw	-17
  5106  001C60  182A               	xorwf	??_lcd_send_nibble,w,c
  5107  001C62  6E8A               	movwf	3978,c	;volatile
  5108                           
  5109                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  5110  001C64  A22B               	btfss	lcd_send_nibble@nibble,1,c
  5111  001C66  D003               	goto	u1070
  5112  001C68  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  5113  001C6A  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  5114  001C6C  D001               	goto	u1088
  5115  001C6E                     u1070:
  5116  001C6E  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  5117  001C70                     u1088:
  5118  001C70  3A2A               	swapf	??_lcd_send_nibble,f,c
  5119  001C72  462A               	rlncf	??_lcd_send_nibble,f,c
  5120  001C74  508A               	movf	3978,w,c	;volatile
  5121  001C76  182A               	xorwf	??_lcd_send_nibble,w,c
  5122  001C78  0BDF               	andlw	-33
  5123  001C7A  182A               	xorwf	??_lcd_send_nibble,w,c
  5124  001C7C  6E8A               	movwf	3978,c	;volatile
  5125                           
  5126                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  5127  001C7E  A42B               	btfss	lcd_send_nibble@nibble,2,c
  5128  001C80  D003               	goto	u1090
  5129  001C82  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  5130  001C84  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  5131  001C86  D001               	goto	u1108
  5132  001C88                     u1090:
  5133  001C88  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  5134  001C8A                     u1108:
  5135  001C8A  3A2A               	swapf	??_lcd_send_nibble,f,c
  5136  001C8C  462A               	rlncf	??_lcd_send_nibble,f,c
  5137  001C8E  462A               	rlncf	??_lcd_send_nibble,f,c
  5138  001C90  508A               	movf	3978,w,c	;volatile
  5139  001C92  182A               	xorwf	??_lcd_send_nibble,w,c
  5140  001C94  0BBF               	andlw	-65
  5141  001C96  182A               	xorwf	??_lcd_send_nibble,w,c
  5142  001C98  6E8A               	movwf	3978,c	;volatile
  5143                           
  5144                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  5145  001C9A  A62B               	btfss	lcd_send_nibble@nibble,3,c
  5146  001C9C  D003               	goto	u1110
  5147  001C9E  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  5148  001CA0  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  5149  001CA2  D001               	goto	u1128
  5150  001CA4                     u1110:
  5151  001CA4  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  5152  001CA6                     u1128:
  5153  001CA6  322A               	rrcf	??_lcd_send_nibble,f,c
  5154  001CA8  322A               	rrcf	??_lcd_send_nibble,f,c
  5155  001CAA  508A               	movf	3978,w,c	;volatile
  5156  001CAC  182A               	xorwf	??_lcd_send_nibble,w,c
  5157  001CAE  0B7F               	andlw	-129
  5158  001CB0  182A               	xorwf	??_lcd_send_nibble,w,c
  5159  001CB2  6E8A               	movwf	3978,c	;volatile
  5160                           
  5161                           ;unmc_lcd_216.c: 32: __nop();
  5162  001CB4  F000               	nop	
  5163                           
  5164                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  5165  001CB6  848A               	bsf	3978,2,c	;volatile
  5166                           
  5167                           ;unmc_lcd_216.c: 34: __nop();__nop();
  5168  001CB8  F000               	nop	
  5169  001CBA  F000               	nop	
  5170                           
  5171                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  5172  001CBC  948A               	bcf	3978,2,c	;volatile
  5173  001CBE  0012               	return		;funcret
  5174  001CC0                     __end_of_lcd_send_nibble:
  5175                           	opt stack 0
  5176                           tblptru	equ	0xFF8
  5177                           tblptrh	equ	0xFF7
  5178                           tblptrl	equ	0xFF6
  5179                           tablat	equ	0xFF5
  5180                           prodh	equ	0xFF4
  5181                           prodl	equ	0xFF3
  5182                           intcon	equ	0xFF2
  5183                           indf0	equ	0xFEF
  5184                           postinc0	equ	0xFEE
  5185                           fsr0h	equ	0xFEA
  5186                           fsr0l	equ	0xFE9
  5187                           wreg	equ	0xFE8
  5188                           postdec1	equ	0xFE5
  5189                           fsr1l	equ	0xFE1
  5190                           indf2	equ	0xFDF
  5191                           postinc2	equ	0xFDE
  5192                           postdec2	equ	0xFDD
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function _Delay100TCYx *****************
  5198 ;; Defined at:
  5199 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  unit            1    wreg     unsigned char 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  unit            1    0[COMRAM] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;		None               void
  5206 ;; Registers used:
  5207 ;;		wreg
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5216 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5217 ;;Total ram usage:        1 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_lcd_send_byte
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text30
  5227  002008                     __ptext30:
  5228                           	opt stack 0
  5229  002008                     _Delay100TCYx:
  5230                           	opt stack 27
  5231                           
  5232                           ;incstack = 0
  5233                           ;Delay100TCYx@unit stored from wreg
  5234  002008  6E2A               	movwf	Delay100TCYx@unit,c
  5235  00200A  0E21               	movlw	33
  5236  00200C                     u2117:
  5237  00200C  2EE8               	decfsz	wreg,f,c
  5238  00200E  D7FE               	goto	u2117
  5239  002010  F000               	nop	
  5240  002012  2E2A               	decfsz	Delay100TCYx@unit,f,c
  5241  002014  D7FA               	goto	l2019
  5242  002016  0012               	return	
  5243  002018  0012               	return		;funcret
  5244  00201A                     __end_of_Delay100TCYx:
  5245                           	opt stack 0
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           indf0	equ	0xFEF
  5254                           postinc0	equ	0xFEE
  5255                           fsr0h	equ	0xFEA
  5256                           fsr0l	equ	0xFE9
  5257                           wreg	equ	0xFE8
  5258                           postdec1	equ	0xFE5
  5259                           fsr1l	equ	0xFE1
  5260                           indf2	equ	0xFDF
  5261                           postinc2	equ	0xFDE
  5262                           postdec2	equ	0xFDD
  5263                           fsr2h	equ	0xFDA
  5264                           fsr2l	equ	0xFD9
  5265                           status	equ	0xFD8
  5266                           tblptru	equ	0xFF8
  5267                           tblptrh	equ	0xFF7
  5268                           tblptrl	equ	0xFF6
  5269                           tablat	equ	0xFF5
  5270                           prodh	equ	0xFF4
  5271                           prodl	equ	0xFF3
  5272                           intcon	equ	0xFF2
  5273                           indf0	equ	0xFEF
  5274                           postinc0	equ	0xFEE
  5275                           fsr0h	equ	0xFEA
  5276                           fsr0l	equ	0xFE9
  5277                           wreg	equ	0xFE8
  5278                           postdec1	equ	0xFE5
  5279                           fsr1l	equ	0xFE1
  5280                           indf2	equ	0xFDF
  5281                           postinc2	equ	0xFDE
  5282                           postdec2	equ	0xFDD
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287                           	psect	rparam
  5288  0000                     tblptru	equ	0xFF8
  5289                           tblptrh	equ	0xFF7
  5290                           tblptrl	equ	0xFF6
  5291                           tablat	equ	0xFF5
  5292                           prodh	equ	0xFF4
  5293                           prodl	equ	0xFF3
  5294                           intcon	equ	0xFF2
  5295                           indf0	equ	0xFEF
  5296                           postinc0	equ	0xFEE
  5297                           fsr0h	equ	0xFEA
  5298                           fsr0l	equ	0xFE9
  5299                           wreg	equ	0xFE8
  5300                           postdec1	equ	0xFE5
  5301                           fsr1l	equ	0xFE1
  5302                           indf2	equ	0xFDF
  5303                           postinc2	equ	0xFDE
  5304                           postdec2	equ	0xFDD
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8


Data Sizes:
    Strings     83
    Constant    14
    Data        6
    BSS         85
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      93
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_41(CODE[5]), STR_40(CODE[5]), STR_39(CODE[5]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), STR_34(CODE[5]), 
		 -> STR_33(CODE[5]), STR_32(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[8]), STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[8]), 
		 -> STR_24(CODE[8]), STR_23(CODE[7]), STR_22(CODE[8]), STR_21(CODE[8]), 
		 -> STR_20(CODE[7]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[7]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_Keyboard_Control
    _lcd_comand->_lcd_send_byte
    _Write_RTC->_RtccWriteDate
    _Keyboard_Control->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Button_Star->_lcd_putrs
    _Button_Hash->_lcd_putrs
    _Menu_Home->_lcd_putrs
    _Button_C->_lcd_putrs
    _Button_B->_lcd_putrs
    _lcd_init->_lcd_send_byte
    _Button_A->_Menu_Iterator
    _Button_A->_Menu_Submenu_Iterator
    _Menu_Submenu_Iterator->_lcd_putrs
    _Menu_Iterator->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   74974
                   _Keyboard_Control
                          _Menu_Home
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3771
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Keyboard_Control                                     1     1      0   61920
                                             31 COMRAM     1     1      0
                           _Button_A
                           _Button_B
                           _Button_C
                           _Button_D
                        _Button_Hash
                        _Button_Star
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             28    22      6    2940
                                             12 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Button_Star                                          0     0      0    5886
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _Button_Hash                                          0     0      0    5886
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _Button_D                                             0     0      0    9283
                          _Menu_Home
 ---------------------------------------------------------------------------------
 (1) _Menu_Home                                            0     0      0    9283
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _Button_C                                             0     0      0    5886
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _Button_B                                             2     2      0    9283
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Button_A                                             0     0      0   16870
                      _Menu_Iterator
              _Menu_Submenu_Iterator
 ---------------------------------------------------------------------------------
 (3) _Menu_Submenu_Iterator                                2     2      0    8435
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _Menu_Iterator                                        2     2      0    8435
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    5886
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    3217
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1    2549
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keyboard_Control
     _Button_A
       _Menu_Iterator
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _Menu_Submenu_Iterator
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _Button_B
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _Button_C
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _Button_D
       _Menu_Home
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _Button_Hash
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _Button_Star
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _Menu_Home
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     20      5D       1       97.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89       6        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 06 01:29:27 2016

                             _a 0005                               _b 0007                               _c 0009  
                             _i 000F                               _j 0011                               _k 0013  
                ?_lcd_send_byte 002C                    ___awdiv@sign 002F             ___wmul@multiplicand 002C  
                   lcd_comand@d 002E                    __CFG_CP0$OFF 000000                             l200 0F9C  
                           l211 101A                             l203 0FD4                             l220 1086  
                           l212 1016                             l204 0FD0                             l231 110C  
                           l223 10BE                             l215 1056                             l207 1008  
                           l240 1170                             l232 1108                             l224 10BA  
                           l216 1052                             l208 1004                             l251 11D4  
                           l243 1186                             l235 1140                             l227 10D0  
                           l219 108A                             l260 11F4                             l252 11D0  
                           l244 1182                             l236 113C                             l228 10CC  
                           l255 11E6                             l247 11A0                             l239 1174  
                           l256 11E2                             l248 119C                             l366 13E0  
                           l287 1F2E                             l199 0FA0                             l288 1F30  
                           _dia 0059                             _key 0021                             _mes 005B  
                           wreg 000FE8                     lcd_gotoxy@x 002F                     lcd_gotoxy@y 002E  
        __size_of_Menu_Iterator 0128                            l1010 1DD8                            l1020 1E78  
                          l2103 1DE4                            l2201 17F6                            l2019 200A  
                          l2107 1E0E                            l2051 1FF8                            l2123 1A00  
                          l2045 1F78                            l2061 1E9E                            l2133 1A30  
                          l2117 19D6                            l2047 1F7E                            l2063 1EAA  
                          l2127 1A14                            l2057 1E86                            l2241 1864  
                          l2233 184C                            l2161 1A80                            l2401 1B2E  
                          l2059 1E92                            l2067 1EB6                            l2307 196A  
                          l2315 1B3C                            l2075 1BF0                            l2411 1D9C  
                          l2325 1B72                            l2093 1C1C                            l2085 1C08  
                          l2413 1DA6                            l2237 1858                            l2165 1A8C  
                          l2079 1BF8                            l2423 1DCC                            l2415 1DAE  
                          l2431 1E44                            l2351 1FA8                            l2191 17C6  
                          l2265 1872                            l2337 1BA8                            l2521 14C4  
                          l2505 1474                            l2433 1E4E                            l2601 124A  
                          l2185 178C                            l2169 1A98                            l2275 18B0  
                          l2435 1E56                            l2603 1260                            l2195 17DA  
                          l2285 18EE                            l2621 130A                            l2381 1AE2  
                          l2295 192C                            l2439 1E6C                            l2631 1332  
                          l2615 12E2                            l2607 127E                            l2383 1AEC  
                          l2375 1ACC                            l2553 1564                            l2537 1514  
                          l2393 1B12                            l2385 1AF4                            l2369 1ABA  
                          l2571 15B4                            l2643 137E                            l2635 1356  
                          l2627 1326                            l2619 12E8                            l2803 1FDA  
                          l2645 1388                            l2397 1B1E                            l2663 13E6  
                          l2655 13B6                            l2639 135A                            l2671 1446  
                          l2657 13BE                            l2649 1394                            l2673 1462  
                          l2499 1FC0                            l2595 1232                            l2669 143A  
                          l2597 1240                            l2589 1218                            l2795 11FC  
                          STR_1 0F3B                            STR_2 0F41                            STR_3 0F47  
                          STR_4 0F4D                            STR_5 0F5E                            STR_6 0F58  
                          STR_7 0F5E                            STR_8 0F58                            STR_9 0F5E  
                          u1110 1CA4                            u1200 1E2E                            u1050 1C56  
                          u1108 1C8A                            u1070 1C6E                            u1207 1E24  
                          u1128 1CA6                            u1090 1C88                            u2107 1FFA  
                          u1068 1C58                            u2117 200C                            u1190 1E04  
                          u1088 1C70                            u1197 1DFA                            u2097 1202  
              ?_lcd_send_nibble 002A                            _anio 0057                            _flag 02E8  
                          _main 1FD0                            _hora 000D                            fsr0h 000FEA  
                          indf0 000FEF                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                 __CFG_T1DIG$ON 000000                            prodh 000FF4                            prodl 000FF3  
                          start 0000                   __CFG_IESO$OFF 000000                    ___param_bank 000010  
                   _Delay1KTCYx 1FF6                   __CFG_PLLDIV$1 000000                   ??_Button_Hash 0034  
                 ??_Button_Star 0034                           ?_main 002A                 __end_of___awdiv 1B3A  
                         STR_10 0F58                           STR_11 0F5E                           STR_12 0F58  
                         STR_20 0F26                           STR_21 0F0F                           STR_13 0F5E  
                         STR_14 0F58                           STR_22 0F17                           STR_30 0F5C  
                         STR_15 0F5E                           STR_31 0F5A                           STR_23 0F2D  
                         STR_16 0F58                           STR_24 0F0F                           STR_40 0F53  
                         STR_32 0F53                           STR_25 0F17                           STR_41 0F53  
                         STR_33 0F53                           STR_17 0F1F                           STR_34 0F53  
                         STR_26 0F34                           STR_18 0F0F                           STR_27 0F0F  
                         STR_35 0F53                           STR_19 0F17                           STR_28 0F17  
                         STR_36 0F53                           STR_37 0F53                           STR_29 0F60  
                         STR_38 0F53                           STR_39 0F53           __size_of_Delay100TCYx 0012  
               ___awdiv@divisor 002C                 __end_of___lwdiv 1DE2                 __end_of___lwmod 1E82  
               ___awdiv@counter 002E          ?_Menu_Submenu_Iterator 002A                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                  __CFG_FCMEN$OFF 000000  
              _Keyboard_Control 0F64                           _Setup 1CC0                 __end_of_dpowers 0F0B  
                         _mes_d 0051                           _mes_u 0052                 __end_of_isdigit 1FB2  
                __pbitbssCOMRAM 02E8                           tablat 000FF5                    lcd_putrs@ptr 0032  
                         status 000FD8                 __end_of_sprintf 1472         __CFG_DSWDTOSC$INTOSCREF 000000  
               __initialization 1ECE                    _Delay100TCYx 2008                    __end_of_main 1FE4  
               ??_lcd_send_byte 002D                   _Menu_Iterator 1870                __end_of_Button_A 1FD0  
              __end_of_Button_B 15E2                __end_of_Button_C 2060                __end_of_Button_D 2052  
                        ??_main 004A                   __activetblptr 000002                __end_of_RtccWrOn 1FF6  
           __end_of_Button_Hash 2044                          ?_Setup 002A             __end_of_Button_Star 2036  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _EECON2 000FA7  
                        _ANCON0 000F48                          _ANCON1 000F49                ___awdiv@dividend 002A  
                __CFG_WDTEN$OFF 000000                RtccWriteDate@pDt 002A                          _RTCCFG 000F3F  
                __CFG_WPCFG$OFF 000000              __size_of_Menu_Home 005E                  __CFG_WPDIS$OFF 000000  
                __CFG_XINST$OFF 000000                __end_of_lcd_init 1C4A                __end_of_lcd_putc 1ECE  
                ?_Menu_Iterator 002A                          ___wmul 1F44                       ??___awdiv 002E  
                __CFG_STVREN$ON 000000                          _diasem 000B                          _anio_d 004A  
                        _anio_u 004B                       ??___lwdiv 002E                       ??___lwmod 0035  
                        _hora_d 004F                          _hora_u 0050                          clear_0 1ED4  
                        clear_1 1EE2                ___awdiv@quotient 0030                          _minuto 0015  
                        _select 0019           __end_of_RtccWriteDate 1870           __end_of_RtccWriteTime 1AA4  
              RtccWriteTime@pTm 002A                    __pdataCOMRAM 0057                       ??_isdigit 002A  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ??_sprintf 003C                      __accesstop 0060  
       __end_of__initialization 1F08              __size_of_Write_RTC 0148                   ___rparam_used 000001  
                __pcstackCOMRAM 002A                   __end_of_Setup 1D28                 __CFG_DSWDTPS$G2 000000  
                   _Button_Hash 2036                     _Button_Star 2028               __end_of_Menu_Home 1D86  
               __CFG_OSC$INTOSC 000000                         ??_Setup 0037               lcd_gotoxy@address 0030  
            __size_of_lcd_putrs 0054                    sprintf@width 0046                      __pbssBANK0 0060  
                     ?_Button_A 002A                       ?_Button_B 002A                       ?_Button_C 002A  
                     ?_Button_D 002A                      _dia_semana 004C       RtccWriteTime@tempHourWDay 0033  
                    __pnvCOMRAM 004A                 ??_Menu_Iterator 0034        __end_of_Keyboard_Control 120E  
                     ?_RtccWrOn 002A                  lcd_send_byte@n 002C                         ?___wmul 002A  
                  ?_Delay1KTCYx 002A         ??_Menu_Submenu_Iterator 0034               __end_of_Write_RTC 172A  
                    _lcd_comand 201A                      _lcd_gotoxy 1F6C                         _RTCVALH 000F99  
                       _RTCVALL 000F98                       ?_lcd_init 002A                       ?_lcd_putc 002A  
                    ??_Button_A 0036                      ??_Button_B 0034                      ??_Button_C 0034  
                    ??_Button_D 0034                         __Hparam 0000                         __Lparam 0000  
      __size_of_lcd_send_nibble 0076                      ??_RtccWrOn 002A                         ___awdiv 1AA4  
             __end_of_lcd_putrs 1E36                 __size_of___wmul 0028                         ___lwdiv 1D86  
                       ___lwmod 1E36                    __psmallconst 0F00                     _RtccTimeVal 0001  
                       __pcinit 1ECE                         _fecha_d 004D                         _fecha_u 004E  
                       __ramtop 0F00                         __ptext0 1FD0                         __ptext1 1CC0  
                       __ptext2 201A                         __ptext3 15E2                         __ptext4 1AA4  
                       __ptext5 1998                         __ptext6 172A                         __ptext7 1FE4  
                       __ptext8 0F64                         __ptext9 120E                         _buffer2 0078  
                     _T1CONbits 000FCD                         _dpowers 0F01                         _isdigit 1F90  
                       _segundo 0017                         _submenu 001F                         _sprintf 120E  
                    ??_lcd_init 002E                      ??_lcd_putc 0031            end_of_initialization 1F08  
          lcd_send_byte@address 002D                   __Lmediumconst 0000                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
         __end_of_lcd_send_byte 1F44                       _PORTAbits 000F80                       _PORTCbits 000F82  
              __CFG_DSBOREN$OFF 000000                     ?_lcd_comand 002A                __CFG_CPUDIV$OSC1 000000  
                     _TRISBbits 000F93                     ?_lcd_gotoxy 002E                 _LCD_INIT_STRING 0F0B  
              __CFG_IOL1WAY$OFF 000000       RtccWriteDate@tempDayMonth 0033             __CFG_MSSP7B_EN$MSK7 000000  
              Delay100TCYx@unit 002A                  __end_of___wmul 1F6C                   __pidataCOMRAM 2060  
     RtccWriteDate@tempHourWDay 0035                    ?_Button_Hash 002A                    ?_Button_Star 002A  
             ??_lcd_send_nibble 002A            __size_of_Delay1KTCYx 0012                __CFG_DSWDTEN$OFF 000000  
           start_initialization 1ECE                       _Menu_Home 1D28            RtccWriteTime@wasAlrm 002F  
          RtccWriteTime@wasWrEn 0030          __size_of_RtccWriteDate 0146                 RtccWriteDate@di 002C  
        __size_of_RtccWriteTime 010C               __size_of_Button_A 001E               __size_of_Button_B 0170  
             __size_of_Button_C 000E               __size_of_Button_D 000E             __size_of_lcd_comand 000E  
             ?_Keyboard_Control 002A             __size_of_lcd_gotoxy 0024                        ??___wmul 002E  
             __size_of_RtccWrOn 0012                 RtccWriteTime@di 002C              ??_Keyboard_Control 0049  
              __CFG_LPT1OSC$OFF 000000  __size_of_Menu_Submenu_Iterator 0090   __end_of_Menu_Submenu_Iterator 1BCA  
                   _ALRMCFGbits 000F91         __end_of_LCD_INIT_STRING 0F0F                     __pbssCOMRAM 0001  
                     _Write_RTC 15E2                      ?_Menu_Home 002A                    _isdigit$2085 002B  
               Delay1KTCYx@unit 002A               __size_of_lcd_init 0080                     sprintf@flag 0042  
             __size_of_lcd_putc 004C                     sprintf@prec 0045                ___lwdiv@dividend 002A  
                 ?_Delay100TCYx 002A           __end_of_Menu_Iterator 1998                        ?___awdiv 002A  
                      ?___lwdiv 002A                        ?___lwmod 0031         RtccWriteTime@tempMinSec 0031  
                     _lcd_putrs 1DE2                   _RtccWriteDate 172A                     __smallconst 0F00  
                 _RtccWriteTime 1998                        ?_isdigit 002A            __CFG_RTCOSC$T1OSCREF 000000  
                __size_of_Setup 0068                      ?_Write_RTC 002A                ___lwdiv@quotient 002E  
                      ?_sprintf 0036                _RtccAlrmTimeDate 0060                  ___wmul@product 002E  
                      _LATAbits 000F89                        _LATBbits 000F8A                        _PIE3bits 000FA3  
                     _select_op 001B                       _selection 001D                       _segundo_d 0055  
                ??_Delay100TCYx 002A                       _segundo_u 0056                __CFG_WDTPS$32768 000000  
            RtccWriteDate@wasOn 002E              _Rtcc_read_TimeDate 0070                  ?_RtccWriteDate 002A  
                    ?_lcd_putrs 0032               ___wmul@multiplier 002A                  ?_RtccWriteTime 002A  
                     lcd_init@i 002E            __size_of_Button_Hash 000E                    ??_lcd_comand 002E  
          __size_of_Button_Star 000E                       lcd_putc@c 0031                    ??_lcd_gotoxy 002F  
                   ??_Menu_Home 0034                       copy_data0 1EFC                        _Button_A 1FB2  
                      _Button_B 1472                        _Button_C 2052                        _Button_D 2044  
               _lcd_send_nibble 1C4A                        __Hrparam 0000                        _RtccDate 0022  
                      __Lrparam 0000                        _RtccTime 0026                        _RtccWrOn 1FE4  
            __end_of_lcd_comand 2028              __end_of_lcd_gotoxy 1F90                __size_of___awdiv 0096  
              __size_of___lwdiv 005C                __size_of___lwmod 004C                    _RtccTimeDate 0068  
                    sprintf@val 0043                __size_of_isdigit 0022                 ___lwdiv@divisor 002C  
                   ??_Write_RTC 0037                 ___lwdiv@counter 0030                        __ptext10 1F90  
                      __ptext11 1F44                        __ptext20 1BCA                        __ptext12 1E36  
                      __ptext21 1FF6                        __ptext13 1D86                        __ptext30 2008  
                      __ptext22 1FB2                        __ptext14 2028                        __ptext23 1B3A  
                      __ptext15 2036                        __ptext24 1870                        __ptext16 2044  
                      __ptext25 1DE2                        __ptext17 1D28                        __ptext26 1E82  
                      __ptext18 2052                        __ptext27 1F6C                        __ptext19 1472  
                      __ptext28 1F12                        __ptext29 1C4A                        _lcd_init 1BCA  
                      _lcd_putc 1E82                __size_of_sprintf 0264          __size_of_lcd_send_byte 0032  
                 __size_of_main 0014                        _minuto_d 0053                        _minuto_u 0054  
                 ??_Delay1KTCYx 002A                 ??_RtccWriteDate 002D                 ??_RtccWriteTime 002D  
                   ??_lcd_putrs 0034                     _OSCTUNEbits 000F9B                      _INTCONbits 000FF2  
            RtccWriteTime@wasOn 002E       __size_of_Keyboard_Control 02AA            __end_of_Delay100TCYx 201A  
                      isdigit@c 002C                       sprintf@ap 0040         __end_of_lcd_send_nibble 1CC0  
                     sprintf@sp 0036                ___lwmod@dividend 0031                      _OSCCONbits 000FD3  
         RtccWriteDate@tempYear 0030                   _lcd_send_byte 1F12                      _RTCCFGbits 000F3F  
                      sprintf@c 0048                        sprintf@f 0038                 ___lwmod@divisor 0033  
           __end_of_Delay1KTCYx 2008                 ___lwmod@counter 0035           _Menu_Submenu_Iterator 1B3A  
          RtccWriteDate@wasAlrm 002F            RtccWriteDate@wasWrEn 0032           lcd_send_nibble@nibble 002B  
