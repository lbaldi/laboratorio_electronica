

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Sep 16 22:32:33 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           	psect	idataCOMRAM
    89  0029F0                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _anio
    93  0029F0  0010               	dw	16
    94                           
    95                           ;initializer for _dia
    96  0029F2  0006               	dw	6
    97                           
    98                           ;initializer for _diasem
    99  0029F4  0002               	dw	2
   100                           
   101                           ;initializer for _hora
   102  0029F6  0012               	dw	18
   103                           
   104                           ;initializer for _mes
   105  0029F8  0009               	dw	9
   106                           
   107                           	psect	smallconst
   108  000F00                     __psmallconst:
   109                           	opt stack 0
   110  000F00  00                 	db	0
   111  000F01                     _dpowers:
   112                           	opt stack 0
   113  000F01  0001               	dw	1
   114  000F03  000A               	dw	10
   115  000F05  0064               	dw	100
   116  000F07  03E8               	dw	1000
   117  000F09  2710               	dw	10000
   118  000F0B                     __end_of_dpowers:
   119                           	opt stack 0
   120  000F0B                     _LCD_INIT_STRING:
   121                           	opt stack 0
   122  000F0B  28                 	db	40
   123  000F0C  0C                 	db	12
   124  000F0D  01                 	db	1
   125  000F0E  06                 	db	6
   126  000F0F                     __end_of_LCD_INIT_STRING:
   127                           	opt stack 0
   128  000F0F                     STR_20:
   129                           
   130                           ; BSR set to: 15
   131  000F0F  49                 	db	73	;'I'
   132  000F10  6E                 	db	110	;'n'
   133  000F11  67                 	db	103	;'g'
   134  000F12  72                 	db	114	;'r'
   135  000F13  65                 	db	101	;'e'
   136  000F14  73                 	db	115	;'s'
   137  000F15  65                 	db	101	;'e'
   138  000F16  20                 	db	32
   139  000F17  73                 	db	115	;'s'
   140  000F18  75                 	db	117	;'u'
   141  000F19  20                 	db	32
   142  000F1A  50                 	db	80	;'P'
   143  000F1B  49                 	db	73	;'I'
   144  000F1C  4E                 	db	78	;'N'
   145  000F1D  3A                 	db	58	;':'
   146  000F1E  00                 	db	0
   147  000F1F                     STR_2:
   148                           
   149                           ; BSR set to: 15
   150  000F1F  25                 	db	37
   151  000F20  30                 	db	48	;'0'
   152  000F21  32                 	db	50	;'2'
   153  000F22  75                 	db	117	;'u'
   154  000F23  2F                 	db	47
   155  000F24  25                 	db	37
   156  000F25  30                 	db	48	;'0'
   157  000F26  32                 	db	50	;'2'
   158  000F27  75                 	db	117	;'u'
   159  000F28  2F                 	db	47
   160  000F29  25                 	db	37
   161  000F2A  30                 	db	48	;'0'
   162  000F2B  32                 	db	50	;'2'
   163  000F2C  75                 	db	117	;'u'
   164  000F2D  00                 	db	0
   165  000F2E                     STR_3:
   166                           
   167                           ; BSR set to: 15
   168  000F2E  25                 	db	37
   169  000F2F  30                 	db	48	;'0'
   170  000F30  32                 	db	50	;'2'
   171  000F31  75                 	db	117	;'u'
   172  000F32  3A                 	db	58	;':'
   173  000F33  25                 	db	37
   174  000F34  30                 	db	48	;'0'
   175  000F35  32                 	db	50	;'2'
   176  000F36  75                 	db	117	;'u'
   177  000F37  3A                 	db	58	;':'
   178  000F38  25                 	db	37
   179  000F39  30                 	db	48	;'0'
   180  000F3A  32                 	db	50	;'2'
   181  000F3B  75                 	db	117	;'u'
   182  000F3C  00                 	db	0
   183  000F3D                     STR_39:
   184                           
   185                           ; BSR set to: 15
   186  000F3D  4E                 	db	78	;'N'
   187  000F3E  75                 	db	117	;'u'
   188  000F3F  65                 	db	101	;'e'
   189  000F40  76                 	db	118	;'v'
   190  000F41  6F                 	db	111	;'o'
   191  000F42  20                 	db	32
   192  000F43  50                 	db	80	;'P'
   193  000F44  49                 	db	73	;'I'
   194  000F45  4E                 	db	78	;'N'
   195  000F46  3A                 	db	58	;':'
   196  000F47  00                 	db	0
   197  000F48                     STR_41:
   198                           
   199                           ; BSR set to: 15
   200  000F48  56                 	db	86	;'V'
   201  000F49  6F                 	db	111	;'o'
   202  000F4A  6C                 	db	108	;'l'
   203  000F4B  75                 	db	117	;'u'
   204  000F4C  6D                 	db	109	;'m'
   205  000F4D  65                 	db	101	;'e'
   206  000F4E  6E                 	db	110	;'n'
   207  000F4F  00                 	db	0
   208  000F50                     STR_36:
   209                           
   210                           ; BSR set to: 15
   211  000F50  43                 	db	67	;'C'
   212  000F51  61                 	db	97	;'a'
   213  000F52  6D                 	db	109	;'m'
   214  000F53  62                 	db	98	;'b'
   215  000F54  69                 	db	105	;'i'
   216  000F55  61                 	db	97	;'a'
   217  000F56  72                 	db	114	;'r'
   218  000F57  00                 	db	0
   219  000F58                     STR_21:
   220                           
   221                           ; BSR set to: 15
   222  000F58  41                 	db	65	;'A'
   223  000F59  63                 	db	99	;'c'
   224  000F5A  74                 	db	116	;'t'
   225  000F5B  69                 	db	105	;'i'
   226  000F5C  76                 	db	118	;'v'
   227  000F5D  61                 	db	97	;'a'
   228  000F5E  72                 	db	114	;'r'
   229  000F5F  00                 	db	0
   230  000F60                     STR_47:
   231                           
   232                           ; BSR set to: 15
   233  000F60  42                 	db	66	;'B'
   234  000F61  65                 	db	101	;'e'
   235  000F62  65                 	db	101	;'e'
   236  000F63  70                 	db	112	;'p'
   237  000F64  20                 	db	32
   238  000F65  31                 	db	49	;'1'
   239  000F66  00                 	db	0
   240  000F67                     STR_8:
   241                           
   242                           ; BSR set to: 15
   243  000F67  54                 	db	84	;'T'
   244  000F68  4F                 	db	79	;'O'
   245  000F69  4E                 	db	78	;'N'
   246  000F6A  4F                 	db	79	;'O'
   247  000F6B  3A                 	db	58	;':'
   248  000F6C  31                 	db	49	;'1'
   249  000F6D  00                 	db	0
   250  000F6E                     STR_48:
   251                           
   252                           ; BSR set to: 15
   253  000F6E  42                 	db	66	;'B'
   254  000F6F  65                 	db	101	;'e'
   255  000F70  65                 	db	101	;'e'
   256  000F71  70                 	db	112	;'p'
   257  000F72  20                 	db	32
   258  000F73  32                 	db	50	;'2'
   259  000F74  00                 	db	0
   260  000F75                     STR_9:
   261                           
   262                           ; BSR set to: 15
   263  000F75  54                 	db	84	;'T'
   264  000F76  4F                 	db	79	;'O'
   265  000F77  4E                 	db	78	;'N'
   266  000F78  4F                 	db	79	;'O'
   267  000F79  3A                 	db	58	;':'
   268  000F7A  32                 	db	50	;'2'
   269  000F7B  00                 	db	0
   270  000F7C                     STR_6:
   271                           
   272                           ; BSR set to: 15
   273  000F7C  56                 	db	86	;'V'
   274  000F7D  4F                 	db	79	;'O'
   275  000F7E  4C                 	db	76	;'L'
   276  000F7F  3A                 	db	58	;':'
   277  000F80  42                 	db	66	;'B'
   278  000F81  41                 	db	65	;'A'
   279  000F82  00                 	db	0
   280  000F83                     STR_4:
   281                           
   282                           ; BSR set to: 15
   283  000F83  41                 	db	65	;'A'
   284  000F84  43                 	db	67	;'C'
   285  000F85  54                 	db	84	;'T'
   286  000F86  3A                 	db	58	;':'
   287  000F87  53                 	db	83	;'S'
   288  000F88  49                 	db	73	;'I'
   289  000F89  00                 	db	0
   290  000F8A                     STR_7:
   291                           
   292                           ; BSR set to: 15
   293  000F8A  56                 	db	86	;'V'
   294  000F8B  4F                 	db	79	;'O'
   295  000F8C  4C                 	db	76	;'L'
   296  000F8D  3A                 	db	58	;':'
   297  000F8E  41                 	db	65	;'A'
   298  000F8F  4C                 	db	76	;'L'
   299  000F90  00                 	db	0
   300  000F91                     STR_5:
   301                           
   302                           ; BSR set to: 15
   303  000F91  41                 	db	65	;'A'
   304  000F92  43                 	db	67	;'C'
   305  000F93  54                 	db	84	;'T'
   306  000F94  3A                 	db	58	;':'
   307  000F95  4E                 	db	78	;'N'
   308  000F96  4F                 	db	79	;'O'
   309  000F97  00                 	db	0
   310  000F98                     STR_24:
   311                           
   312                           ; BSR set to: 15
   313  000F98  41                 	db	65	;'A'
   314  000F99  6C                 	db	108	;'l'
   315  000F9A  61                 	db	97	;'a'
   316  000F9B  72                 	db	114	;'r'
   317  000F9C  6D                 	db	109	;'m'
   318  000F9D  61                 	db	97	;'a'
   319  000F9E  00                 	db	0
   320  000F9F                     STR_33:
   321                           
   322                           ; BSR set to: 15
   323  000F9F  46                 	db	70	;'F'
   324  000FA0  65                 	db	101	;'e'
   325  000FA1  63                 	db	99	;'c'
   326  000FA2  68                 	db	104	;'h'
   327  000FA3  61                 	db	97	;'a'
   328  000FA4  00                 	db	0
   329  000FA5                     STR_22:
   330                           
   331                           ; BSR set to: 15
   332  000FA5  52                 	db	82	;'R'
   333  000FA6  65                 	db	101	;'e'
   334  000FA7  6C                 	db	108	;'l'
   335  000FA8  6F                 	db	111	;'o'
   336  000FA9  6A                 	db	106	;'j'
   337  000FAA  00                 	db	0
   338  000FAB                     STR_37:
   339                           
   340                           ; BSR set to: 15
   341  000FAB  52                 	db	82	;'R'
   342  000FAC  65                 	db	101	;'e'
   343  000FAD  73                 	db	115	;'s'
   344  000FAE  65                 	db	101	;'e'
   345  000FAF  74                 	db	116	;'t'
   346  000FB0  00                 	db	0
   347  000FB1                     STR_1:
   348                           
   349                           ; BSR set to: 15
   350  000FB1  31                 	db	49	;'1'
   351  000FB2  32                 	db	50	;'2'
   352  000FB3  33                 	db	51	;'3'
   353  000FB4  34                 	db	52	;'4'
   354  000FB5  00                 	db	0
   355  000FB6                     STR_34:
   356                           
   357                           ; BSR set to: 15
   358  000FB6  48                 	db	72	;'H'
   359  000FB7  6F                 	db	111	;'o'
   360  000FB8  72                 	db	114	;'r'
   361  000FB9  61                 	db	97	;'a'
   362  000FBA  00                 	db	0
   363  000FBB                     STR_44:
   364                           
   365                           ; BSR set to: 15
   366  000FBB  42                 	db	66	;'B'
   367  000FBC  61                 	db	97	;'a'
   368  000FBD  6A                 	db	106	;'j'
   369  000FBE  6F                 	db	111	;'o'
   370  000FBF  00                 	db	0
   371  000FC0                     STR_42:
   372                           
   373                           ; BSR set to: 15
   374  000FC0  54                 	db	84	;'T'
   375  000FC1  6F                 	db	111	;'o'
   376  000FC2  6E                 	db	110	;'n'
   377  000FC3  6F                 	db	111	;'o'
   378  000FC4  00                 	db	0
   379  000FC5                     STR_45:
   380                           
   381                           ; BSR set to: 15
   382  000FC5  41                 	db	65	;'A'
   383  000FC6  6C                 	db	108	;'l'
   384  000FC7  74                 	db	116	;'t'
   385  000FC8  6F                 	db	111	;'o'
   386  000FC9  00                 	db	0
   387  000FCA                     STR_50:
   388                           
   389                           ; BSR set to: 15
   390  000FCA  25                 	db	37
   391  000FCB  30                 	db	48	;'0'
   392  000FCC  31                 	db	49	;'1'
   393  000FCD  75                 	db	117	;'u'
   394  000FCE  00                 	db	0
   395  000FCF                     STR_18:
   396                           
   397                           ; BSR set to: 15
   398  000FCF  58                 	db	88	;'X'
   399  000FD0  32                 	db	50	;'2'
   400  000FD1  38                 	db	56	;'8'
   401  000FD2  00                 	db	0
   402  000FD3                     STR_23:
   403                           
   404                           ; BSR set to: 15
   405  000FD3  50                 	db	80	;'P'
   406  000FD4  69                 	db	105	;'i'
   407  000FD5  6E                 	db	110	;'n'
   408  000FD6  00                 	db	0
   409  000FD7                     STR_30:
   410                           
   411                           ; BSR set to: 15
   412  000FD7  53                 	db	83	;'S'
   413  000FD8  69                 	db	105	;'i'
   414  000FD9  00                 	db	0
   415  000FDA                     STR_31:
   416                           
   417                           ; BSR set to: 15
   418  000FDA  4E                 	db	78	;'N'
   419  000FDB  6F                 	db	111	;'o'
   420  000FDC  00                 	db	0
   421  000FDD                     STR_11:
   422                           
   423                           ; BSR set to: 15
   424  000FDD  20                 	db	32
   425  000FDE  00                 	db	0
   426  000FDF                     STR_49:
   427                           
   428                           ; BSR set to: 15
   429  000FDF  2A                 	db	42
   430  000FE0  00                 	db	0
   431  000FE1                     STR_10:
   432                           
   433                           ; BSR set to: 15
   434  000FE1  3E                 	db	62	;'>'
   435  000FE2  00                 	db	0
   436  0000                     
   437                           ; #config settings
   438  000FE3  00                 	db	0	; dummy byte at the end
   439  0000                     
   440                           	psect	nvCOMRAM
   441  000059                     __pnvCOMRAM:
   442                           	opt stack 0
   443  000059                     _anio_d:
   444                           	opt stack 0
   445  000059                     	ds	1
   446  00005A                     _fecha_d:
   447                           	opt stack 0
   448  00005A                     	ds	1
   449  00005B                     _hora_d:
   450                           	opt stack 0
   451  00005B                     	ds	1
   452  00005C                     _mes_d:
   453                           	opt stack 0
   454  00005C                     	ds	1
   455  00005D                     _minuto_d:
   456                           	opt stack 0
   457  00005D                     	ds	1
   458  00005E                     _segundo_d:
   459                           	opt stack 0
   460  00005E                     	ds	1
   461                           
   462                           	psect	nvBANK0
   463  00009E                     __pnvBANK0:
   464                           	opt stack 0
   465  00009E                     _anio_u:
   466                           	opt stack 0
   467  00009E                     	ds	1
   468  00009F                     _dia_semana:
   469                           	opt stack 0
   470  00009F                     	ds	1
   471  0000A0                     _fecha_u:
   472                           	opt stack 0
   473  0000A0                     	ds	1
   474  0000A1                     _hora_u:
   475                           	opt stack 0
   476  0000A1                     	ds	1
   477  0000A2                     _mes_u:
   478                           	opt stack 0
   479  0000A2                     	ds	1
   480  0000A3                     _minuto_u:
   481                           	opt stack 0
   482  0000A3                     	ds	1
   483  0000A4                     _segundo_u:
   484                           	opt stack 0
   485  0000A4                     	ds	1
   486  0000                     _ANCON0	set	3912
   487  0000                     _ANCON1	set	3913
   488  0000                     _RTCCFG	set	3903
   489  0000                     _RTCCFGbits	set	3903
   490  0000                     _ADCON0	set	4034
   491  0000                     _ADCON1	set	4033
   492  0000                     _ALRMCFGbits	set	3985
   493  0000                     _EECON2	set	4007
   494  0000                     _INTCONbits	set	4082
   495  0000                     _LATAbits	set	3977
   496  0000                     _LATBbits	set	3978
   497  0000                     _OSCCONbits	set	4051
   498  0000                     _OSCTUNEbits	set	3995
   499  0000                     _PIE3bits	set	4003
   500  0000                     _PORTAbits	set	3968
   501  0000                     _PORTCbits	set	3970
   502  0000                     _RTCVALH	set	3993
   503  0000                     _RTCVALL	set	3992
   504  0000                     _T1CONbits	set	4045
   505  0000                     _TRISA	set	3986
   506  0000                     _TRISB	set	3987
   507  0000                     _TRISBbits	set	3987
   508  0000                     _TRISC	set	3988
   509                           
   510                           	psect	cinit
   511  002488                     __pcinit:
   512                           	opt stack 0
   513  002488                     start_initialization:
   514                           	opt stack 0
   515  002488                     __initialization:
   516                           	opt stack 0
   517                           
   518                           ; Clear objects allocated to BANK0 (62 bytes)
   519  002488  EE00  F060         	lfsr	0,__pbssBANK0
   520  00248C  0E3E               	movlw	62
   521  00248E                     clear_0:
   522  00248E  6AEE               	clrf	postinc0,c
   523  002490  06E8               	decf	wreg,f,c
   524  002492  E1FD               	bnz	clear_0
   525                           
   526                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   527  002494  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   528                           
   529                           ; Clear objects allocated to COMRAM (41 bytes)
   530  002496  EE00  F001         	lfsr	0,__pbssCOMRAM
   531  00249A  0E29               	movlw	41
   532  00249C                     clear_1:
   533  00249C  6AEE               	clrf	postinc0,c
   534  00249E  06E8               	decf	wreg,f,c
   535  0024A0  E1FD               	bnz	clear_1
   536                           
   537                           ; Initialize objects allocated to COMRAM (10 bytes)
   538                           ; load TBLPTR registers with __pidataCOMRAM
   539  0024A2  0EF0               	movlw	low __pidataCOMRAM
   540  0024A4  6EF6               	movwf	tblptrl,c
   541  0024A6  0E29               	movlw	high __pidataCOMRAM
   542  0024A8  6EF7               	movwf	tblptrh,c
   543  0024AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   544  0024AC  6EF8               	movwf	tblptru,c
   545  0024AE  EE00  F04F         	lfsr	0,__pdataCOMRAM
   546  0024B2  EE10 F00A          	lfsr	1,10
   547  0024B6                     copy_data0:
   548  0024B6  0009               	tblrd		*+
   549  0024B8  CFF5 FFEE          	movff	tablat,postinc0
   550  0024BC  50E5               	movf	postdec1,w,c
   551  0024BE  50E1               	movf	fsr1l,w,c
   552  0024C0  E1FA               	bnz	copy_data0
   553  0024C2                     end_of_initialization:
   554                           	opt stack 0
   555  0024C2                     __end_of__initialization:
   556                           	opt stack 0
   557  0024C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   558  0024C4  6EF8               	movwf	tblptru,c
   559  0024C6  0100               	movlb	0
   560  0024C8  EF1F  F014         	goto	_main	;jump to C main() function
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           postinc0	equ	0xFEE
   566                           wreg	equ	0xFE8
   567                           postdec1	equ	0xFE5
   568                           fsr1l	equ	0xFE1
   569                           
   570                           	psect	bitbssCOMRAM
   571  0002F8                     __pbitbssCOMRAM:
   572                           	opt stack 0
   573  0002F8                     _flag:
   574                           	opt stack 0
   575  0002F8                     	ds	1
   576                           tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           postdec1	equ	0xFE5
   583                           fsr1l	equ	0xFE1
   584                           
   585                           	psect	bssCOMRAM
   586  000001                     __pbssCOMRAM:
   587                           	opt stack 0
   588  000001                     _a:
   589                           	opt stack 0
   590  000001                     	ds	2
   591  000003                     _activity:
   592                           	opt stack 0
   593  000003                     	ds	2
   594  000005                     _alarm_tone:
   595                           	opt stack 0
   596  000005                     	ds	2
   597  000007                     _alarm_volume:
   598                           	opt stack 0
   599  000007                     	ds	2
   600  000009                     _b:
   601                           	opt stack 0
   602  000009                     	ds	2
   603  00000B                     _config_widget:
   604                           	opt stack 0
   605  00000B                     	ds	2
   606  00000D                     _config_widget_time:
   607                           	opt stack 0
   608  00000D                     	ds	2
   609  00000F                     _home_callback:
   610                           	opt stack 0
   611  00000F                     	ds	2
   612  000011                     _home_callback_delay:
   613                           	opt stack 0
   614  000011                     	ds	2
   615  000013                     _i:
   616                           	opt stack 0
   617  000013                     	ds	2
   618  000015                     _j:
   619                           	opt stack 0
   620  000015                     	ds	2
   621  000017                     _menu_selected:
   622                           	opt stack 0
   623  000017                     	ds	2
   624  000019                     _minuto:
   625                           	opt stack 0
   626  000019                     	ds	2
   627  00001B                     _segundo:
   628                           	opt stack 0
   629  00001B                     	ds	2
   630  00001D                     _state:
   631                           	opt stack 0
   632  00001D                     	ds	2
   633  00001F                     _submenu_selected:
   634                           	opt stack 0
   635  00001F                     	ds	2
   636  000021                     _key:
   637                           	opt stack 0
   638  000021                     	ds	1
   639  000022                     _RtccDate:
   640                           	opt stack 0
   641  000022                     	ds	4
   642  000026                     _RtccTime:
   643                           	opt stack 0
   644  000026                     	ds	4
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           postinc0	equ	0xFEE
   650                           wreg	equ	0xFE8
   651                           postdec1	equ	0xFE5
   652                           fsr1l	equ	0xFE1
   653                           
   654                           	psect	dataCOMRAM
   655  00004F                     __pdataCOMRAM:
   656                           	opt stack 0
   657  00004F                     _anio:
   658                           	opt stack 0
   659  00004F                     	ds	2
   660  000051                     _dia:
   661                           	opt stack 0
   662  000051                     	ds	2
   663  000053                     _diasem:
   664                           	opt stack 0
   665  000053                     	ds	2
   666  000055                     _hora:
   667                           	opt stack 0
   668  000055                     	ds	2
   669  000057                     _mes:
   670                           	opt stack 0
   671  000057                     	ds	2
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           postinc0	equ	0xFEE
   677                           wreg	equ	0xFE8
   678                           postdec1	equ	0xFE5
   679                           fsr1l	equ	0xFE1
   680                           
   681                           	psect	bssBANK0
   682  000060                     __pbssBANK0:
   683                           	opt stack 0
   684  000060                     _RtccAlrmTimeDate:
   685                           	opt stack 0
   686  000060                     	ds	8
   687  000068                     _RtccTimeDate:
   688                           	opt stack 0
   689  000068                     	ds	8
   690  000070                     _Rtcc_read_TimeDate:
   691                           	opt stack 0
   692  000070                     	ds	8
   693  000078                     _RtccTimeVal:
   694                           	opt stack 0
   695  000078                     	ds	4
   696  00007C                     _c:
   697                           	opt stack 0
   698  00007C                     	ds	2
   699  00007E                     _k:
   700                           	opt stack 0
   701  00007E                     	ds	2
   702  000080                     _buffer1:
   703                           	opt stack 0
   704  000080                     	ds	20
   705  000094                     _pin:
   706                           	opt stack 0
   707  000094                     	ds	5
   708  000099                     _pin_input:
   709                           	opt stack 0
   710  000099                     	ds	5
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           postdec1	equ	0xFE5
   718                           fsr1l	equ	0xFE1
   719                           
   720                           	psect	cstackCOMRAM
   721  00002A                     __pcstackCOMRAM:
   722                           	opt stack 0
   723  00002A                     ??_isdigit:
   724  00002A                     ??_lcd_send_nibble:
   725  00002A                     ?_strcmp:
   726                           	opt stack 0
   727  00002A                     ?___wmul:
   728                           	opt stack 0
   729  00002A                     ?___awdiv:
   730                           	opt stack 0
   731  00002A                     ?___lwdiv:
   732                           	opt stack 0
   733  00002A                     Delay100TCYx@unit:
   734                           	opt stack 0
   735  00002A                     Delay1KTCYx@unit:
   736                           	opt stack 0
   737  00002A                     RtccReadDate@pDt:
   738                           	opt stack 0
   739  00002A                     RtccReadTime@pTm:
   740                           	opt stack 0
   741  00002A                     RtccWriteDate@pDt:
   742                           	opt stack 0
   743  00002A                     RtccWriteTime@pTm:
   744                           	opt stack 0
   745  00002A                     ___wmul@multiplier:
   746                           	opt stack 0
   747  00002A                     ___awdiv@dividend:
   748                           	opt stack 0
   749  00002A                     ___lwdiv@dividend:
   750                           	opt stack 0
   751  00002A                     strcat@to:
   752                           	opt stack 0
   753  00002A                     strcmp@s1:
   754                           	opt stack 0
   755  00002A                     strcpy@to:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x0
   759  00002A                     	ds	1
   760  00002B                     lcd_send_nibble@nibble:
   761                           	opt stack 0
   762  00002B                     _isdigit$2192:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x1
   766  00002B                     	ds	1
   767  00002C                     lcd_send_byte@n:
   768                           	opt stack 0
   769  00002C                     RtccWriteDate@di:
   770                           	opt stack 0
   771  00002C                     RtccWriteTime@di:
   772                           	opt stack 0
   773  00002C                     isdigit@c:
   774                           	opt stack 0
   775  00002C                     ___wmul@multiplicand:
   776                           	opt stack 0
   777  00002C                     ___awdiv@divisor:
   778                           	opt stack 0
   779  00002C                     ___lwdiv@divisor:
   780                           	opt stack 0
   781  00002C                     strcat@from:
   782                           	opt stack 0
   783  00002C                     strcmp@s2:
   784                           	opt stack 0
   785  00002C                     strcpy@from:
   786                           	opt stack 0
   787  00002C                     RtccReadDate@rTD1:
   788                           	opt stack 0
   789  00002C                     RtccReadTime@rTD1:
   790                           	opt stack 0
   791                           
   792                           ; 8 bytes @ 0x2
   793  00002C                     	ds	1
   794  00002D                     lcd_send_byte@address:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x3
   798  00002D                     	ds	1
   799  00002E                     ??_strcmp:
   800  00002E                     lcd_init@i:
   801                           	opt stack 0
   802  00002E                     lcd_gotoxy@y:
   803                           	opt stack 0
   804  00002E                     lcd_comand@d:
   805                           	opt stack 0
   806  00002E                     RtccWriteDate@wasOn:
   807                           	opt stack 0
   808  00002E                     RtccWriteTime@wasOn:
   809                           	opt stack 0
   810  00002E                     ___awdiv@counter:
   811                           	opt stack 0
   812  00002E                     ___wmul@product:
   813                           	opt stack 0
   814  00002E                     ___lwdiv@quotient:
   815                           	opt stack 0
   816  00002E                     strcat@cp:
   817                           	opt stack 0
   818  00002E                     strcpy@cp:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x4
   822  00002E                     	ds	1
   823  00002F                     lcd_gotoxy@x:
   824                           	opt stack 0
   825  00002F                     RtccWriteDate@wasAlrm:
   826                           	opt stack 0
   827  00002F                     RtccWriteTime@wasAlrm:
   828                           	opt stack 0
   829  00002F                     ___awdiv@sign:
   830                           	opt stack 0
   831  00002F                     strcmp@r:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x5
   835  00002F                     	ds	1
   836  000030                     lcd_gotoxy@address:
   837                           	opt stack 0
   838  000030                     RtccWriteTime@wasWrEn:
   839                           	opt stack 0
   840  000030                     ___lwdiv@counter:
   841                           	opt stack 0
   842  000030                     RtccWriteDate@tempYear:
   843                           	opt stack 0
   844  000030                     ___awdiv@quotient:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x6
   848  000030                     	ds	1
   849  000031                     ?___lwmod:
   850                           	opt stack 0
   851  000031                     lcd_putc@c:
   852                           	opt stack 0
   853  000031                     RtccWriteTime@tempMinSec:
   854                           	opt stack 0
   855  000031                     ___lwmod@dividend:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x7
   859  000031                     	ds	1
   860  000032                     RtccWriteDate@wasWrEn:
   861                           	opt stack 0
   862  000032                     lcd_putrs@ptr:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x8
   866  000032                     	ds	1
   867  000033                     RtccWriteDate@tempDayMonth:
   868                           	opt stack 0
   869  000033                     RtccWriteTime@tempHourWDay:
   870                           	opt stack 0
   871  000033                     ___lwmod@divisor:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x9
   875  000033                     	ds	1
   876  000034                     lcd_write@column:
   877                           	opt stack 0
   878  000034                     RtccReadDate@rTD0:
   879                           	opt stack 0
   880  000034                     RtccReadTime@rTD0:
   881                           	opt stack 0
   882                           
   883                           ; 8 bytes @ 0xA
   884  000034                     	ds	1
   885  000035                     ___lwmod@counter:
   886                           	opt stack 0
   887  000035                     RtccWriteDate@tempHourWDay:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0xB
   891  000035                     	ds	1
   892  000036                     ?_sprintf:
   893                           	opt stack 0
   894  000036                     lcd_write@row:
   895                           	opt stack 0
   896  000036                     sprintf@sp:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0xC
   900  000036                     	ds	1
   901  000037                     
   902                           ; 0 bytes @ 0xD
   903  000037                     	ds	1
   904  000038                     lcd_write@string:
   905                           	opt stack 0
   906  000038                     sprintf@f:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0xE
   910  000038                     	ds	2
   911  00003A                     ??_action_menu_selector:
   912  00003A                     ??_action_submenu_selector:
   913  00003A                     ??_button_B_menu:
   914  00003A                     ??_button_B_submenu_activation:
   915  00003A                     ??_button_B_submenu_pin_config:
   916  00003A                     ??_button_B_submenu_alarm_config:
   917  00003A                     ??_button_B_submenu_alarm_volume:
   918  00003A                     ??_button_B_submenu_alarm_tone:
   919  00003A                     pin_input_validator@comparision:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x10
   923  00003A                     	ds	2
   924  00003C                     ??_button_A:
   925  00003C                     ??_button_B:
   926  00003C                     
   927                           ; 0 bytes @ 0x12
   928  00003C                     	ds	4
   929  000040                     ??_sprintf:
   930                           
   931                           ; 0 bytes @ 0x16
   932  000040                     	ds	4
   933  000044                     sprintf@ap:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x1A
   937  000044                     	ds	2
   938  000046                     sprintf@flag:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x1C
   942  000046                     	ds	1
   943  000047                     sprintf@val:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x1D
   947  000047                     	ds	2
   948  000049                     sprintf@prec:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x1F
   952  000049                     	ds	1
   953  00004A                     sprintf@width:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x20
   957  00004A                     	ds	2
   958  00004C                     sprintf@c:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x22
   962  00004C                     	ds	1
   963  00004D                     ??_home_config_refresh:
   964  00004D                     ??_keyboard_control:
   965                           
   966                           ; 0 bytes @ 0x23
   967  00004D                     	ds	2
   968  00004F                     tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           tblptrl	equ	0xFF6
   971                           tablat	equ	0xFF5
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           postdec1	equ	0xFE5
   975                           fsr1l	equ	0xFE1
   976                           
   977                           ; 0 bytes @ 0x25
   978 ;;
   979 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   980 ;;
   981 ;; *************** function _main *****************
   982 ;; Defined at:
   983 ;;		line 683 in file "main.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  2  445[None  ] int 
   990 ;; Registers used:
   991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels required when called:   11
  1003 ;; This function calls:
  1004 ;;		_Read_RTC
  1005 ;;		_activity_home
  1006 ;;		_check_home_callback
  1007 ;;		_home_clock_refresh
  1008 ;;		_home_config_refresh
  1009 ;;		_keyboard_control
  1010 ;;		_setup
  1011 ;; This function is called by:
  1012 ;;		Startup code after reset
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text0
  1017  00283E                     __ptext0:
  1018                           	opt stack 0
  1019  00283E                     _main:
  1020                           	opt stack 20
  1021                           
  1022                           ;main.c: 685: setup();
  1023                           
  1024                           ; BSR set to: 15
  1025                           ;incstack = 0
  1026  00283E  ECD5  F00D         	call	_setup	;wreg free
  1027                           
  1028                           ;main.c: 687: activity_home();
  1029  002842  EC35  F014         	call	_activity_home	;wreg free
  1030  002846  D000               	goto	l3893
  1031  002848                     l3893:
  1032                           
  1033                           ;main.c: 691: check_home_callback();
  1034  002848  EC93  F014         	call	_check_home_callback	;wreg free
  1035                           
  1036                           ;main.c: 693: Read_RTC();
  1037  00284C  ECA8  F00B         	call	_Read_RTC	;wreg free
  1038                           
  1039                           ;main.c: 695: keyboard_control();
  1040  002850  ECD4  F009         	call	_keyboard_control	;wreg free
  1041                           
  1042                           ;main.c: 697: if(activity == 0){
  1043  002854  5003               	movf	_activity,w,c
  1044  002856  1004               	iorwf	_activity+1,w,c
  1045  002858  A4D8               	btfss	status,2,c
  1046  00285A  D7F6               	goto	l3893
  1047                           
  1048                           ;main.c: 698: home_clock_refresh();
  1049  00285C  ECC4  F00C         	call	_home_clock_refresh	;wreg free
  1050                           
  1051                           ;main.c: 699: home_config_refresh();
  1052  002860  EC26  F00C         	call	_home_config_refresh	;wreg free
  1053  002864  D7F1               	goto	l3893
  1054                           
  1055                           ;main.c: 700: }
  1056                           ;main.c: 702: }
  1057                           ;main.c: 704: return 0;
  1058                           ;	Return value of _main is never used
  1059  002866  EF00  F000         	goto	start
  1060  00286A                     __end_of_main:
  1061                           	opt stack 0
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           postdec1	equ	0xFE5
  1069                           fsr1l	equ	0xFE1
  1070                           status	equ	0xFD8
  1071                           
  1072 ;; *************** function _setup *****************
  1073 ;; Defined at:
  1074 ;;		line 79 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;		None               void
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    3
  1095 ;; This function calls:
  1096 ;;		_Write_RTC
  1097 ;;		_lcd_comand
  1098 ;;		_lcd_init
  1099 ;;		_reset_pin
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text1
  1106  001BAA                     __ptext1:
  1107                           	opt stack 0
  1108  001BAA                     _setup:
  1109                           	opt stack 27
  1110                           
  1111                           ;main.c: 81: OSCTUNEbits.INTSRC=1;
  1112                           
  1113                           ;incstack = 0
  1114  001BAA  8E9B               	bsf	3995,7,c	;volatile
  1115                           
  1116                           ;main.c: 82: OSCTUNEbits.PLLEN=0;
  1117  001BAC  9C9B               	bcf	3995,6,c	;volatile
  1118                           
  1119                           ;main.c: 83: OSCCONbits.IRCF0=1;
  1120  001BAE  88D3               	bsf	4051,4,c	;volatile
  1121                           
  1122                           ;main.c: 84: OSCCONbits.IRCF1=1;
  1123  001BB0  8AD3               	bsf	4051,5,c	;volatile
  1124                           
  1125                           ;main.c: 85: OSCCONbits.IRCF2=1;
  1126  001BB2  8CD3               	bsf	4051,6,c	;volatile
  1127                           
  1128                           ;main.c: 86: OSCCONbits.SCS0=0;
  1129  001BB4  90D3               	bcf	4051,0,c	;volatile
  1130                           
  1131                           ;main.c: 87: OSCCONbits.SCS1=0;
  1132  001BB6  92D3               	bcf	4051,1,c	;volatile
  1133                           
  1134                           ;main.c: 88: TRISA = 0b11110000;
  1135  001BB8  0EF0               	movlw	240
  1136  001BBA  6E92               	movwf	3986,c	;volatile
  1137                           
  1138                           ;main.c: 89: TRISB = 0;
  1139  001BBC  0E00               	movlw	0
  1140  001BBE  6E93               	movwf	3987,c	;volatile
  1141                           
  1142                           ;main.c: 90: TRISC = 0b00000111;
  1143  001BC0  0E07               	movlw	7
  1144  001BC2  6E94               	movwf	3988,c	;volatile
  1145                           
  1146                           ;main.c: 94: ANCON0=0b11111111;
  1147  001BC4  010F               	movlb	15	; () banked
  1148  001BC6  6948               	setf	72,b	;volatile
  1149                           
  1150                           ; BSR set to: 15
  1151                           ;main.c: 96: ANCON1=0b11111111;
  1152  001BC8  010F               	movlb	15	; () banked
  1153  001BCA  6949               	setf	73,b	;volatile
  1154                           
  1155                           ;main.c: 97: ADCON0=0b00101101;
  1156  001BCC  0E2D               	movlw	45
  1157  001BCE  6EC2               	movwf	4034,c	;volatile
  1158                           
  1159                           ;main.c: 98: ADCON1=0b00010000;
  1160  001BD0  0E10               	movlw	16
  1161  001BD2  6EC1               	movwf	4033,c	;volatile
  1162                           
  1163                           ; BSR set to: 15
  1164                           ;main.c: 99: RTCCFGbits.RTCEN=1;
  1165  001BD4  010F               	movlb	15	; () banked
  1166  001BD6  8F3F               	bsf	63,7,b	;volatile
  1167                           
  1168                           ; BSR set to: 15
  1169                           ;main.c: 100: RTCCFGbits.RTCWREN=1;
  1170  001BD8  010F               	movlb	15	; () banked
  1171  001BDA  8B3F               	bsf	63,5,b	;volatile
  1172                           
  1173                           ; BSR set to: 15
  1174                           ;main.c: 101: T1CONbits.T1OSCEN=1;
  1175  001BDC  86CD               	bsf	4045,3,c	;volatile
  1176                           
  1177                           ; BSR set to: 15
  1178                           ;main.c: 102: Write_RTC();
  1179  001BDE  EC24  F009         	call	_Write_RTC	;wreg free
  1180                           
  1181                           ;main.c: 103: lcd_init();
  1182  001BE2  EC95  F00D         	call	_lcd_init	;wreg free
  1183                           
  1184                           ;main.c: 104: lcd_comand(0b00001100);
  1185  001BE6  0E0C               	movlw	12
  1186  001BE8  ECF1  F014         	call	_lcd_comand
  1187                           
  1188                           ;main.c: 105: LATBbits.LATB1 = 1;;
  1189  001BEC  828A               	bsf	3978,1,c	;volatile
  1190                           
  1191                           ;main.c: 106: LATBbits.LATB0 = 1;;
  1192  001BEE  808A               	bsf	3978,0,c	;volatile
  1193                           
  1194                           ;main.c: 109: home_callback_delay = 50;
  1195  001BF0  0E00               	movlw	0
  1196  001BF2  6E12               	movwf	_home_callback_delay+1,c
  1197  001BF4  0E32               	movlw	50
  1198  001BF6  6E11               	movwf	_home_callback_delay,c
  1199                           
  1200                           ;main.c: 110: config_widget = 0;
  1201  001BF8  0E00               	movlw	0
  1202  001BFA  6E0C               	movwf	_config_widget+1,c
  1203  001BFC  0E00               	movlw	0
  1204  001BFE  6E0B               	movwf	_config_widget,c
  1205                           
  1206                           ;main.c: 111: menu_selected = 0;
  1207  001C00  0E00               	movlw	0
  1208  001C02  6E18               	movwf	_menu_selected+1,c
  1209  001C04  0E00               	movlw	0
  1210  001C06  6E17               	movwf	_menu_selected,c
  1211                           
  1212                           ;main.c: 112: submenu_selected = 0;
  1213  001C08  0E00               	movlw	0
  1214  001C0A  6E20               	movwf	_submenu_selected+1,c
  1215  001C0C  0E00               	movlw	0
  1216  001C0E  6E1F               	movwf	_submenu_selected,c
  1217                           
  1218                           ;main.c: 113: alarm_volume = 0;
  1219  001C10  0E00               	movlw	0
  1220  001C12  6E08               	movwf	_alarm_volume+1,c
  1221  001C14  0E00               	movlw	0
  1222  001C16  6E07               	movwf	_alarm_volume,c
  1223                           
  1224                           ;main.c: 114: alarm_tone = 0;
  1225  001C18  0E00               	movlw	0
  1226  001C1A  6E06               	movwf	_alarm_tone+1,c
  1227  001C1C  0E00               	movlw	0
  1228  001C1E  6E05               	movwf	_alarm_tone,c
  1229                           
  1230                           ;main.c: 115: reset_pin();
  1231  001C20  ECCB  F014         	call	_reset_pin	;wreg free
  1232  001C24  0012               	return		;funcret
  1233  001C26                     __end_of_setup:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           postinc0	equ	0xFEE
  1240                           wreg	equ	0xFE8
  1241                           postdec1	equ	0xFE5
  1242                           fsr1l	equ	0xFE1
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function _Write_RTC *****************
  1246 ;; Defined at:
  1247 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;		None               void
  1254 ;; Registers used:
  1255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    2
  1268 ;; This function calls:
  1269 ;;		_RtccWrOn
  1270 ;;		_RtccWriteDate
  1271 ;;		_RtccWriteTime
  1272 ;;		___awdiv
  1273 ;; This function is called by:
  1274 ;;		_setup
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text2
  1279  001248                     __ptext2:
  1280                           	opt stack 0
  1281  001248                     _Write_RTC:
  1282                           	opt stack 27
  1283                           
  1284                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1285                           
  1286                           ;incstack = 0
  1287  001248  ECD6  F014         	call	_RtccWrOn	;wreg free
  1288                           
  1289                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1290  00124C  80A3               	bsf	4003,0,c	;volatile
  1291                           
  1292                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1293  00124E  C01B  F02A         	movff	_segundo,___awdiv@dividend
  1294  001252  C01C  F02B         	movff	_segundo+1,___awdiv@dividend+1
  1295  001256  0E00               	movlw	0
  1296  001258  6E2D               	movwf	___awdiv@divisor+1,c
  1297  00125A  0E0A               	movlw	10
  1298  00125C  6E2C               	movwf	___awdiv@divisor,c
  1299  00125E  EC79  F00C         	call	___awdiv	;wreg free
  1300  001262  502A               	movf	?___awdiv,w,c
  1301  001264  6E5E               	movwf	_segundo_d,c
  1302                           
  1303                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1304  001266  505E               	movf	_segundo_d,w,c
  1305  001268  0D0A               	mullw	10
  1306  00126A  50F3               	movf	prodl,w,c
  1307  00126C  0800               	sublw	0
  1308  00126E  241B               	addwf	_segundo,w,c
  1309  001270  0100               	movlb	0	; () banked
  1310  001272  6FA4               	movwf	_segundo_u& (0+255),b
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1314  001274  505E               	movf	_segundo_d,w,c
  1315  001276  0D10               	mullw	16
  1316  001278  50F3               	movf	prodl,w,c
  1317  00127A  0100               	movlb	0	; () banked
  1318  00127C  25A4               	addwf	_segundo_u& (0+255),w,b
  1319  00127E  6E27               	movwf	_RtccTime+1,c
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1323  001280  C019  F02A         	movff	_minuto,___awdiv@dividend
  1324  001284  C01A  F02B         	movff	_minuto+1,___awdiv@dividend+1
  1325  001288  0E00               	movlw	0
  1326  00128A  6E2D               	movwf	___awdiv@divisor+1,c
  1327  00128C  0E0A               	movlw	10
  1328  00128E  6E2C               	movwf	___awdiv@divisor,c
  1329  001290  EC79  F00C         	call	___awdiv	;wreg free
  1330  001294  502A               	movf	?___awdiv,w,c
  1331  001296  6E5D               	movwf	_minuto_d,c
  1332                           
  1333                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1334  001298  505D               	movf	_minuto_d,w,c
  1335  00129A  0D0A               	mullw	10
  1336  00129C  50F3               	movf	prodl,w,c
  1337  00129E  0800               	sublw	0
  1338  0012A0  2419               	addwf	_minuto,w,c
  1339  0012A2  0100               	movlb	0	; () banked
  1340  0012A4  6FA3               	movwf	_minuto_u& (0+255),b
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1344  0012A6  505D               	movf	_minuto_d,w,c
  1345  0012A8  0D10               	mullw	16
  1346  0012AA  50F3               	movf	prodl,w,c
  1347  0012AC  0100               	movlb	0	; () banked
  1348  0012AE  25A3               	addwf	_minuto_u& (0+255),w,b
  1349  0012B0  6E28               	movwf	_RtccTime+2,c
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1353  0012B2  C055  F02A         	movff	_hora,___awdiv@dividend
  1354  0012B6  C056  F02B         	movff	_hora+1,___awdiv@dividend+1
  1355  0012BA  0E00               	movlw	0
  1356  0012BC  6E2D               	movwf	___awdiv@divisor+1,c
  1357  0012BE  0E0A               	movlw	10
  1358  0012C0  6E2C               	movwf	___awdiv@divisor,c
  1359  0012C2  EC79  F00C         	call	___awdiv	;wreg free
  1360  0012C6  502A               	movf	?___awdiv,w,c
  1361  0012C8  6E5B               	movwf	_hora_d,c
  1362                           
  1363                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1364  0012CA  505B               	movf	_hora_d,w,c
  1365  0012CC  0D0A               	mullw	10
  1366  0012CE  50F3               	movf	prodl,w,c
  1367  0012D0  0800               	sublw	0
  1368  0012D2  2455               	addwf	_hora,w,c
  1369  0012D4  0100               	movlb	0	; () banked
  1370  0012D6  6FA1               	movwf	_hora_u& (0+255),b
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1374  0012D8  505B               	movf	_hora_d,w,c
  1375  0012DA  0D10               	mullw	16
  1376  0012DC  50F3               	movf	prodl,w,c
  1377  0012DE  0100               	movlb	0	; () banked
  1378  0012E0  25A1               	addwf	_hora_u& (0+255),w,b
  1379  0012E2  6E29               	movwf	_RtccTime+3,c
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1383  0012E4  C04F  F02A         	movff	_anio,___awdiv@dividend
  1384  0012E8  C050  F02B         	movff	_anio+1,___awdiv@dividend+1
  1385  0012EC  0E00               	movlw	0
  1386  0012EE  6E2D               	movwf	___awdiv@divisor+1,c
  1387  0012F0  0E0A               	movlw	10
  1388  0012F2  6E2C               	movwf	___awdiv@divisor,c
  1389  0012F4  EC79  F00C         	call	___awdiv	;wreg free
  1390  0012F8  502A               	movf	?___awdiv,w,c
  1391  0012FA  6E59               	movwf	_anio_d,c
  1392                           
  1393                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1394  0012FC  5059               	movf	_anio_d,w,c
  1395  0012FE  0D0A               	mullw	10
  1396  001300  50F3               	movf	prodl,w,c
  1397  001302  0800               	sublw	0
  1398  001304  244F               	addwf	_anio,w,c
  1399  001306  0100               	movlb	0	; () banked
  1400  001308  6F9E               	movwf	_anio_u& (0+255),b
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1404  00130A  5059               	movf	_anio_d,w,c
  1405  00130C  0D10               	mullw	16
  1406  00130E  50F3               	movf	prodl,w,c
  1407  001310  0100               	movlb	0	; () banked
  1408  001312  259E               	addwf	_anio_u& (0+255),w,b
  1409  001314  6E25               	movwf	_RtccDate+3,c
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1413  001316  C057  F02A         	movff	_mes,___awdiv@dividend
  1414  00131A  C058  F02B         	movff	_mes+1,___awdiv@dividend+1
  1415  00131E  0E00               	movlw	0
  1416  001320  6E2D               	movwf	___awdiv@divisor+1,c
  1417  001322  0E0A               	movlw	10
  1418  001324  6E2C               	movwf	___awdiv@divisor,c
  1419  001326  EC79  F00C         	call	___awdiv	;wreg free
  1420  00132A  502A               	movf	?___awdiv,w,c
  1421  00132C  6E5C               	movwf	_mes_d,c
  1422                           
  1423                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1424  00132E  505C               	movf	_mes_d,w,c
  1425  001330  0D0A               	mullw	10
  1426  001332  50F3               	movf	prodl,w,c
  1427  001334  0800               	sublw	0
  1428  001336  2457               	addwf	_mes,w,c
  1429  001338  0100               	movlb	0	; () banked
  1430  00133A  6FA2               	movwf	_mes_u& (0+255),b
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1434  00133C  505C               	movf	_mes_d,w,c
  1435  00133E  0D10               	mullw	16
  1436  001340  50F3               	movf	prodl,w,c
  1437  001342  0100               	movlb	0	; () banked
  1438  001344  25A2               	addwf	_mes_u& (0+255),w,b
  1439  001346  6E24               	movwf	_RtccDate+2,c
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1443  001348  C051  F02A         	movff	_dia,___awdiv@dividend
  1444  00134C  C052  F02B         	movff	_dia+1,___awdiv@dividend+1
  1445  001350  0E00               	movlw	0
  1446  001352  6E2D               	movwf	___awdiv@divisor+1,c
  1447  001354  0E0A               	movlw	10
  1448  001356  6E2C               	movwf	___awdiv@divisor,c
  1449  001358  EC79  F00C         	call	___awdiv	;wreg free
  1450  00135C  502A               	movf	?___awdiv,w,c
  1451  00135E  6E5A               	movwf	_fecha_d,c
  1452                           
  1453                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1454  001360  505A               	movf	_fecha_d,w,c
  1455  001362  0D0A               	mullw	10
  1456  001364  50F3               	movf	prodl,w,c
  1457  001366  0800               	sublw	0
  1458  001368  2451               	addwf	_dia,w,c
  1459  00136A  0100               	movlb	0	; () banked
  1460  00136C  6FA0               	movwf	_fecha_u& (0+255),b
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1464  00136E  505A               	movf	_fecha_d,w,c
  1465  001370  0D10               	mullw	16
  1466  001372  50F3               	movf	prodl,w,c
  1467  001374  0100               	movlb	0	; () banked
  1468  001376  25A0               	addwf	_fecha_u& (0+255),w,b
  1469  001378  6E23               	movwf	_RtccDate+1,c
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1473  00137A  C053  F09F         	movff	_diasem,_dia_semana
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1477  00137E  C053  F022         	movff	_diasem,_RtccDate
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1481  001382  0E26               	movlw	low _RtccTime
  1482  001384  6E2A               	movwf	RtccWriteTime@pTm,c
  1483  001386  0E00               	movlw	high _RtccTime
  1484  001388  6E2B               	movwf	RtccWriteTime@pTm+1,c
  1485  00138A  0E01               	movlw	1
  1486  00138C  6E2C               	movwf	RtccWriteTime@di,c
  1487  00138E  EC22  F00B         	call	_RtccWriteTime	;wreg free
  1488                           
  1489                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1490  001392  0E22               	movlw	low _RtccDate
  1491  001394  6E2A               	movwf	RtccWriteDate@pDt,c
  1492  001396  0E00               	movlw	high _RtccDate
  1493  001398  6E2B               	movwf	RtccWriteDate@pDt+1,c
  1494  00139A  0E01               	movlw	1
  1495  00139C  6E2C               	movwf	RtccWriteDate@di,c
  1496  00139E  EC7F  F00A         	call	_RtccWriteDate	;wreg free
  1497                           
  1498                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1499  0013A2  010F               	movlb	15	; () banked
  1500  0013A4  8F3F               	bsf	63,7,b	;volatile
  1501                           
  1502                           ; BSR set to: 15
  1503  0013A6  0012               	return		;funcret
  1504  0013A8                     __end_of_Write_RTC:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           prodl	equ	0xFF3
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1l	equ	0xFE1
  1515                           status	equ	0xFD8
  1516                           
  1517 ;; *************** function ___awdiv *****************
  1518 ;; Defined at:
  1519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  dividend        2    0[COMRAM] int 
  1522 ;;  divisor         2    2[COMRAM] int 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  quotient        2    6[COMRAM] int 
  1525 ;;  sign            1    5[COMRAM] unsigned char 
  1526 ;;  counter         1    4[COMRAM] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  2    0[COMRAM] int 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1537 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;Total ram usage:        8 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_Write_RTC
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text3
  1550  0018F2                     __ptext3:
  1551                           	opt stack 0
  1552  0018F2                     ___awdiv:
  1553                           	opt stack 28
  1554                           
  1555                           ; BSR set to: 15
  1556                           ;incstack = 0
  1557  0018F2  0E00               	movlw	0
  1558  0018F4  6E2F               	movwf	___awdiv@sign,c
  1559  0018F6  AE2D               	btfss	___awdiv@divisor+1,7,c
  1560  0018F8  D007               	goto	l3443
  1561  0018FA  6C2C               	negf	___awdiv@divisor,c
  1562  0018FC  1E2D               	comf	___awdiv@divisor+1,f,c
  1563  0018FE  B0D8               	btfsc	status,0,c
  1564  001900  2A2D               	incf	___awdiv@divisor+1,f,c
  1565  001902  0E01               	movlw	1
  1566  001904  6E2F               	movwf	___awdiv@sign,c
  1567  001906  D000               	goto	l3443
  1568  001908                     l3443:
  1569  001908  AE2B               	btfss	___awdiv@dividend+1,7,c
  1570  00190A  D007               	goto	l3449
  1571  00190C  6C2A               	negf	___awdiv@dividend,c
  1572  00190E  1E2B               	comf	___awdiv@dividend+1,f,c
  1573  001910  B0D8               	btfsc	status,0,c
  1574  001912  2A2B               	incf	___awdiv@dividend+1,f,c
  1575  001914  0E01               	movlw	1
  1576  001916  1A2F               	xorwf	___awdiv@sign,f,c
  1577  001918  D000               	goto	l3449
  1578  00191A                     l3449:
  1579  00191A  0E00               	movlw	0
  1580  00191C  6E31               	movwf	___awdiv@quotient+1,c
  1581  00191E  0E00               	movlw	0
  1582  001920  6E30               	movwf	___awdiv@quotient,c
  1583  001922  502C               	movf	___awdiv@divisor,w,c
  1584  001924  102D               	iorwf	___awdiv@divisor+1,w,c
  1585  001926  B4D8               	btfsc	status,2,c
  1586  001928  D021               	goto	l3471
  1587  00192A  0E01               	movlw	1
  1588  00192C  6E2E               	movwf	___awdiv@counter,c
  1589  00192E  D005               	goto	l3457
  1590  001930                     l3455:
  1591  001930  90D8               	bcf	status,0,c
  1592  001932  362C               	rlcf	___awdiv@divisor,f,c
  1593  001934  362D               	rlcf	___awdiv@divisor+1,f,c
  1594  001936  2A2E               	incf	___awdiv@counter,f,c
  1595  001938  D000               	goto	l3457
  1596  00193A                     l3457:
  1597  00193A  BE2D               	btfsc	___awdiv@divisor+1,7,c
  1598  00193C  D002               	goto	l3459
  1599  00193E  D7F8               	goto	l3455
  1600  001940  D000               	goto	l3459
  1601  001942                     l3459:
  1602  001942  90D8               	bcf	status,0,c
  1603  001944  3630               	rlcf	___awdiv@quotient,f,c
  1604  001946  3631               	rlcf	___awdiv@quotient+1,f,c
  1605  001948  502C               	movf	___awdiv@divisor,w,c
  1606  00194A  5C2A               	subwf	___awdiv@dividend,w,c
  1607  00194C  502D               	movf	___awdiv@divisor+1,w,c
  1608  00194E  582B               	subwfb	___awdiv@dividend+1,w,c
  1609  001950  A0D8               	btfss	status,0,c
  1610  001952  D006               	goto	l3467
  1611  001954  502C               	movf	___awdiv@divisor,w,c
  1612  001956  5E2A               	subwf	___awdiv@dividend,f,c
  1613  001958  502D               	movf	___awdiv@divisor+1,w,c
  1614  00195A  5A2B               	subwfb	___awdiv@dividend+1,f,c
  1615  00195C  8030               	bsf	___awdiv@quotient,0,c
  1616  00195E  D000               	goto	l3467
  1617  001960                     l3467:
  1618  001960  90D8               	bcf	status,0,c
  1619  001962  322D               	rrcf	___awdiv@divisor+1,f,c
  1620  001964  322C               	rrcf	___awdiv@divisor,f,c
  1621  001966  2E2E               	decfsz	___awdiv@counter,f,c
  1622  001968  D7EC               	goto	l3459
  1623  00196A  D000               	goto	l3471
  1624  00196C                     l3471:
  1625  00196C  502F               	movf	___awdiv@sign,w,c
  1626  00196E  B4D8               	btfsc	status,2,c
  1627  001970  D005               	goto	l3475
  1628  001972  6C30               	negf	___awdiv@quotient,c
  1629  001974  1E31               	comf	___awdiv@quotient+1,f,c
  1630  001976  B0D8               	btfsc	status,0,c
  1631  001978  2A31               	incf	___awdiv@quotient+1,f,c
  1632  00197A  D000               	goto	l3475
  1633  00197C                     l3475:
  1634  00197C  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  1635  001980  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  1636  001984  0012               	return	
  1637  001986  0012               	return		;funcret
  1638  001988                     __end_of___awdiv:
  1639                           	opt stack 0
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           prodl	equ	0xFF3
  1645                           postinc0	equ	0xFEE
  1646                           wreg	equ	0xFE8
  1647                           postdec1	equ	0xFE5
  1648                           fsr1l	equ	0xFE1
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function _RtccWriteTime *****************
  1652 ;; Defined at:
  1653 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  pTm             2    0[COMRAM] PTR const struct .
  1656 ;;		 -> RtccTime(4), 
  1657 ;;  di              1    2[COMRAM] enum E7121
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  tempHourWDay    2    9[COMRAM] struct .
  1660 ;;  tempMinSec      2    7[COMRAM] struct .
  1661 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1662 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1663 ;;  wasOn           1    4[COMRAM] enum E7121
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      enum E7337
  1666 ;; Registers used:
  1667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1673 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;Total ram usage:       11 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    1
  1680 ;; This function calls:
  1681 ;;		_RtccWrOn
  1682 ;; This function is called by:
  1683 ;;		_Write_RTC
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text4
  1688  001644                     __ptext4:
  1689                           	opt stack 0
  1690  001644                     _RtccWriteTime:
  1691                           	opt stack 27
  1692                           
  1693                           ;incstack = 0
  1694  001644  0E00               	movlw	0
  1695  001646  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1696  001648  EE20 F002          	lfsr	2,2
  1697  00164C  502A               	movf	RtccWriteTime@pTm,w,c
  1698  00164E  26D9               	addwf	fsr2l,f,c
  1699  001650  502B               	movf	RtccWriteTime@pTm+1,w,c
  1700  001652  22DA               	addwfc	fsr2h,f,c
  1701  001654  0E5A               	movlw	90
  1702  001656  60DF               	cpfslt	indf2,c
  1703  001658  0012               	return	
  1704  00165A  EE20 F001          	lfsr	2,1
  1705  00165E  502A               	movf	RtccWriteTime@pTm,w,c
  1706  001660  26D9               	addwf	fsr2l,f,c
  1707  001662  502B               	movf	RtccWriteTime@pTm+1,w,c
  1708  001664  22DA               	addwfc	fsr2h,f,c
  1709  001666  0E5A               	movlw	90
  1710  001668  60DF               	cpfslt	indf2,c
  1711  00166A  0012               	return	
  1712  00166C  EE20 F003          	lfsr	2,3
  1713  001670  502A               	movf	RtccWriteTime@pTm,w,c
  1714  001672  26D9               	addwf	fsr2l,f,c
  1715  001674  502B               	movf	RtccWriteTime@pTm+1,w,c
  1716  001676  22DA               	addwfc	fsr2h,f,c
  1717  001678  0E24               	movlw	36
  1718  00167A  64DF               	cpfsgt	indf2,c
  1719  00167C  D002               	goto	l3065
  1720  00167E  0012               	return	
  1721                           
  1722                           ;	Return value of _RtccWriteTime is never used
  1723  001680  0012               	return	
  1724  001682                     l3065:
  1725  001682  EE20 F002          	lfsr	2,2
  1726  001686  502A               	movf	RtccWriteTime@pTm,w,c
  1727  001688  26D9               	addwf	fsr2l,f,c
  1728  00168A  502B               	movf	RtccWriteTime@pTm+1,w,c
  1729  00168C  22DA               	addwfc	fsr2h,f,c
  1730  00168E  50DF               	movf	indf2,w,c
  1731  001690  6E32               	movwf	RtccWriteTime@tempMinSec+1,c
  1732  001692  EE20 F001          	lfsr	2,1
  1733  001696  502A               	movf	RtccWriteTime@pTm,w,c
  1734  001698  26D9               	addwf	fsr2l,f,c
  1735  00169A  502B               	movf	RtccWriteTime@pTm+1,w,c
  1736  00169C  22DA               	addwfc	fsr2h,f,c
  1737  00169E  50DF               	movf	indf2,w,c
  1738  0016A0  6E31               	movwf	RtccWriteTime@tempMinSec,c
  1739  0016A2  502C               	movf	RtccWriteTime@di,w,c
  1740  0016A4  B4D8               	btfsc	status,2,c
  1741  0016A6  D002               	goto	l3071
  1742  0016A8  9CF2               	bcf	intcon,6,c	;volatile
  1743  0016AA  D000               	goto	l3071
  1744  0016AC                     l3071:
  1745  0016AC  0E00               	movlw	0
  1746  0016AE  BB3F               	btfsc	63,5,b	;volatile
  1747  0016B0  0E01               	movlw	1
  1748  0016B2  6E30               	movwf	RtccWriteTime@wasWrEn,c
  1749  0016B4  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1750  0016B6  A4D8               	btfss	status,2,c
  1751  0016B8  D003               	goto	l3075
  1752  0016BA  ECD6  F014         	call	_RtccWrOn	;wreg free
  1753  0016BE  D000               	goto	l3075
  1754  0016C0                     l3075:
  1755  0016C0  0E00               	movlw	0
  1756  0016C2  BF3F               	btfsc	63,7,b	;volatile
  1757  0016C4  0E01               	movlw	1
  1758  0016C6  6E2E               	movwf	RtccWriteTime@wasOn,c
  1759  0016C8  502E               	movf	RtccWriteTime@wasOn,w,c
  1760  0016CA  B4D8               	btfsc	status,2,c
  1761  0016CC  D007               	goto	l3081
  1762  0016CE  0E00               	movlw	0
  1763  0016D0  BE91               	btfsc	3985,7,c	;volatile
  1764  0016D2  0E01               	movlw	1
  1765  0016D4  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1766  0016D6  010F               	movlb	15	; () banked
  1767  0016D8  9F3F               	bcf	63,7,b	;volatile
  1768  0016DA  D000               	goto	l3081
  1769  0016DC                     l3081:
  1770  0016DC  0EFC               	movlw	252
  1771  0016DE  010F               	movlb	15	; () banked
  1772  0016E0  173F               	andwf	63,f,b	;volatile
  1773  0016E2  010F               	movlb	15	; () banked
  1774  0016E4  813F               	bsf	63,0,b	;volatile
  1775                           
  1776                           ; BSR set to: 15
  1777  0016E6  CF98 F033          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1778                           
  1779                           ; BSR set to: 15
  1780  0016EA  CF99 F034          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1781                           
  1782                           ; BSR set to: 15
  1783  0016EE  EE20 F003          	lfsr	2,3
  1784  0016F2  502A               	movf	RtccWriteTime@pTm,w,c
  1785  0016F4  26D9               	addwf	fsr2l,f,c
  1786  0016F6  502B               	movf	RtccWriteTime@pTm+1,w,c
  1787  0016F8  22DA               	addwfc	fsr2h,f,c
  1788  0016FA  50DF               	movf	indf2,w,c
  1789  0016FC  6E33               	movwf	RtccWriteTime@tempHourWDay,c
  1790                           
  1791                           ; BSR set to: 15
  1792  0016FE  0EFC               	movlw	252
  1793  001700  010F               	movlb	15	; () banked
  1794  001702  173F               	andwf	63,f,b	;volatile
  1795                           
  1796                           ; BSR set to: 15
  1797  001704  010F               	movlb	15	; () banked
  1798  001706  813F               	bsf	63,0,b	;volatile
  1799                           
  1800                           ; BSR set to: 15
  1801  001708  C033  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1802                           
  1803                           ; BSR set to: 15
  1804  00170C  C034  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1805                           
  1806                           ; BSR set to: 15
  1807  001710  C031  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1808                           
  1809                           ; BSR set to: 15
  1810  001714  C032  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1811                           
  1812                           ; BSR set to: 15
  1813  001718  502E               	movf	RtccWriteTime@wasOn,w,c
  1814  00171A  B4D8               	btfsc	status,2,c
  1815  00171C  D00D               	goto	l3113
  1816                           
  1817                           ; BSR set to: 15
  1818  00171E  010F               	movlb	15	; () banked
  1819  001720  8F3F               	bsf	63,7,b	;volatile
  1820                           
  1821                           ; BSR set to: 15
  1822  001722  502F               	movf	RtccWriteTime@wasAlrm,w,c
  1823  001724  B4D8               	btfsc	status,2,c
  1824  001726  D002               	goto	l3109
  1825                           
  1826                           ; BSR set to: 15
  1827  001728  8E91               	bsf	3985,7,c	;volatile
  1828  00172A  D000               	goto	l3109
  1829  00172C                     l3109:
  1830                           
  1831                           ; BSR set to: 15
  1832  00172C  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1833  00172E  B4D8               	btfsc	status,2,c
  1834  001730  D009               	goto	l3117
  1835                           
  1836                           ; BSR set to: 15
  1837  001732  ECD6  F014         	call	_RtccWrOn	;wreg free
  1838  001736  D006               	goto	l3117
  1839  001738                     l3113:
  1840  001738  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1841  00173A  A4D8               	btfss	status,2,c
  1842  00173C  D003               	goto	l3117
  1843  00173E  010F               	movlb	15	; () banked
  1844  001740  9B3F               	bcf	63,5,b	;volatile
  1845                           
  1846                           ; BSR set to: 15
  1847  001742  D000               	goto	l3117
  1848  001744                     l3117:
  1849  001744  502C               	movf	RtccWriteTime@di,w,c
  1850  001746  B4D8               	btfsc	status,2,c
  1851  001748  0012               	return	
  1852  00174A  8CF2               	bsf	intcon,6,c	;volatile
  1853  00174C  0012               	return	
  1854                           
  1855                           ;	Return value of _RtccWriteTime is never used
  1856  00174E  0012               	return		;funcret
  1857  001750                     __end_of_RtccWriteTime:
  1858                           	opt stack 0
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           prodl	equ	0xFF3
  1864                           intcon	equ	0xFF2
  1865                           postinc0	equ	0xFEE
  1866                           wreg	equ	0xFE8
  1867                           postdec1	equ	0xFE5
  1868                           fsr1l	equ	0xFE1
  1869                           indf2	equ	0xFDF
  1870                           fsr2h	equ	0xFDA
  1871                           fsr2l	equ	0xFD9
  1872                           status	equ	0xFD8
  1873                           
  1874 ;; *************** function _RtccWriteDate *****************
  1875 ;; Defined at:
  1876 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  pDt             2    0[COMRAM] PTR const struct .
  1879 ;;		 -> RtccDate(4), 
  1880 ;;  di              1    2[COMRAM] enum E7121
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  tempHourWDay    2   11[COMRAM] struct .
  1883 ;;  tempDayMonth    2    9[COMRAM] struct .
  1884 ;;  tempYear        2    6[COMRAM] struct .
  1885 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1886 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1887 ;;  wasOn           1    4[COMRAM] enum E7121
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      enum E7337
  1890 ;; Registers used:
  1891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1897 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1900 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1901 ;;Total ram usage:       13 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    1
  1904 ;; This function calls:
  1905 ;;		_RtccWrOn
  1906 ;; This function is called by:
  1907 ;;		_Write_RTC
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text5
  1912  0014FE                     __ptext5:
  1913                           	opt stack 0
  1914  0014FE                     _RtccWriteDate:
  1915                           	opt stack 27
  1916                           
  1917                           ;incstack = 0
  1918  0014FE  0E00               	movlw	0
  1919  001500  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  1920  001502  EE20 F002          	lfsr	2,2
  1921  001506  502A               	movf	RtccWriteDate@pDt,w,c
  1922  001508  26D9               	addwf	fsr2l,f,c
  1923  00150A  502B               	movf	RtccWriteDate@pDt+1,w,c
  1924  00150C  22DA               	addwfc	fsr2h,f,c
  1925  00150E  0E13               	movlw	19
  1926  001510  60DF               	cpfslt	indf2,c
  1927  001512  0012               	return	
  1928  001514  EE20 F002          	lfsr	2,2
  1929  001518  502A               	movf	RtccWriteDate@pDt,w,c
  1930  00151A  26D9               	addwf	fsr2l,f,c
  1931  00151C  502B               	movf	RtccWriteDate@pDt+1,w,c
  1932  00151E  22DA               	addwfc	fsr2h,f,c
  1933  001520  50DF               	movf	indf2,w,c
  1934  001522  B4D8               	btfsc	status,2,c
  1935  001524  0012               	return	
  1936  001526  EE20 F001          	lfsr	2,1
  1937  00152A  502A               	movf	RtccWriteDate@pDt,w,c
  1938  00152C  26D9               	addwf	fsr2l,f,c
  1939  00152E  502B               	movf	RtccWriteDate@pDt+1,w,c
  1940  001530  22DA               	addwfc	fsr2h,f,c
  1941  001532  0E32               	movlw	50
  1942  001534  60DF               	cpfslt	indf2,c
  1943  001536  0012               	return	
  1944  001538  EE20 F001          	lfsr	2,1
  1945  00153C  502A               	movf	RtccWriteDate@pDt,w,c
  1946  00153E  26D9               	addwf	fsr2l,f,c
  1947  001540  502B               	movf	RtccWriteDate@pDt+1,w,c
  1948  001542  22DA               	addwfc	fsr2h,f,c
  1949  001544  50DF               	movf	indf2,w,c
  1950  001546  B4D8               	btfsc	status,2,c
  1951  001548  0012               	return	
  1952  00154A  EE20 F003          	lfsr	2,3
  1953  00154E  502A               	movf	RtccWriteDate@pDt,w,c
  1954  001550  26D9               	addwf	fsr2l,f,c
  1955  001552  502B               	movf	RtccWriteDate@pDt+1,w,c
  1956  001554  22DA               	addwfc	fsr2h,f,c
  1957  001556  0E99               	movlw	153
  1958  001558  64DF               	cpfsgt	indf2,c
  1959  00155A  D002               	goto	l3133
  1960  00155C  0012               	return	
  1961                           
  1962                           ;	Return value of _RtccWriteDate is never used
  1963  00155E  0012               	return	
  1964  001560                     l3133:
  1965  001560  EE20 F003          	lfsr	2,3
  1966  001564  502A               	movf	RtccWriteDate@pDt,w,c
  1967  001566  26D9               	addwf	fsr2l,f,c
  1968  001568  502B               	movf	RtccWriteDate@pDt+1,w,c
  1969  00156A  22DA               	addwfc	fsr2h,f,c
  1970  00156C  50DF               	movf	indf2,w,c
  1971  00156E  6E30               	movwf	RtccWriteDate@tempYear,c
  1972  001570  EE20 F001          	lfsr	2,1
  1973  001574  502A               	movf	RtccWriteDate@pDt,w,c
  1974  001576  26D9               	addwf	fsr2l,f,c
  1975  001578  502B               	movf	RtccWriteDate@pDt+1,w,c
  1976  00157A  22DA               	addwfc	fsr2h,f,c
  1977  00157C  50DF               	movf	indf2,w,c
  1978  00157E  6E33               	movwf	RtccWriteDate@tempDayMonth,c
  1979  001580  EE20 F002          	lfsr	2,2
  1980  001584  502A               	movf	RtccWriteDate@pDt,w,c
  1981  001586  26D9               	addwf	fsr2l,f,c
  1982  001588  502B               	movf	RtccWriteDate@pDt+1,w,c
  1983  00158A  22DA               	addwfc	fsr2h,f,c
  1984  00158C  50DF               	movf	indf2,w,c
  1985  00158E  6E34               	movwf	RtccWriteDate@tempDayMonth+1,c
  1986  001590  502C               	movf	RtccWriteDate@di,w,c
  1987  001592  B4D8               	btfsc	status,2,c
  1988  001594  D002               	goto	l3139
  1989  001596  9CF2               	bcf	intcon,6,c	;volatile
  1990  001598  D000               	goto	l3139
  1991  00159A                     l3139:
  1992  00159A  0E00               	movlw	0
  1993  00159C  BB3F               	btfsc	63,5,b	;volatile
  1994  00159E  0E01               	movlw	1
  1995  0015A0  6E32               	movwf	RtccWriteDate@wasWrEn,c
  1996  0015A2  5032               	movf	RtccWriteDate@wasWrEn,w,c
  1997  0015A4  A4D8               	btfss	status,2,c
  1998  0015A6  D003               	goto	l3143
  1999  0015A8  ECD6  F014         	call	_RtccWrOn	;wreg free
  2000  0015AC  D000               	goto	l3143
  2001  0015AE                     l3143:
  2002  0015AE  0E00               	movlw	0
  2003  0015B0  BF3F               	btfsc	63,7,b	;volatile
  2004  0015B2  0E01               	movlw	1
  2005  0015B4  6E2E               	movwf	RtccWriteDate@wasOn,c
  2006  0015B6  502E               	movf	RtccWriteDate@wasOn,w,c
  2007  0015B8  B4D8               	btfsc	status,2,c
  2008  0015BA  D007               	goto	l3149
  2009  0015BC  0E00               	movlw	0
  2010  0015BE  BE91               	btfsc	3985,7,c	;volatile
  2011  0015C0  0E01               	movlw	1
  2012  0015C2  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  2013  0015C4  010F               	movlb	15	; () banked
  2014  0015C6  9F3F               	bcf	63,7,b	;volatile
  2015  0015C8  D000               	goto	l3149
  2016  0015CA                     l3149:
  2017  0015CA  0EFC               	movlw	252
  2018  0015CC  010F               	movlb	15	; () banked
  2019  0015CE  173F               	andwf	63,f,b	;volatile
  2020  0015D0  010F               	movlb	15	; () banked
  2021  0015D2  813F               	bsf	63,0,b	;volatile
  2022                           
  2023                           ; BSR set to: 15
  2024  0015D4  CF98 F035          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  2025                           
  2026                           ; BSR set to: 15
  2027  0015D8  CF99 F036          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  2028                           
  2029                           ; BSR set to: 15
  2030  0015DC  C02A  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  2031  0015E0  C02B  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  2032  0015E4  50DF               	movf	indf2,w,c
  2033  0015E6  6E36               	movwf	RtccWriteDate@tempHourWDay+1,c
  2034                           
  2035                           ; BSR set to: 15
  2036  0015E8  0EFC               	movlw	252
  2037  0015EA  010F               	movlb	15	; () banked
  2038  0015EC  173F               	andwf	63,f,b	;volatile
  2039                           
  2040                           ; BSR set to: 15
  2041  0015EE  0E03               	movlw	3
  2042  0015F0  010F               	movlb	15	; () banked
  2043  0015F2  133F               	iorwf	63,f,b	;volatile
  2044                           
  2045                           ; BSR set to: 15
  2046  0015F4  C030  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  2047                           
  2048                           ; BSR set to: 15
  2049  0015F8  C031  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  2050                           
  2051                           ; BSR set to: 15
  2052  0015FC  C033  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  2053                           
  2054                           ; BSR set to: 15
  2055  001600  C034  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  2056                           
  2057                           ; BSR set to: 15
  2058  001604  C035  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  2059                           
  2060                           ; BSR set to: 15
  2061  001608  C036  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  2062                           
  2063                           ; BSR set to: 15
  2064  00160C  502E               	movf	RtccWriteDate@wasOn,w,c
  2065  00160E  B4D8               	btfsc	status,2,c
  2066  001610  D00D               	goto	l3185
  2067                           
  2068                           ; BSR set to: 15
  2069  001612  010F               	movlb	15	; () banked
  2070  001614  8F3F               	bsf	63,7,b	;volatile
  2071                           
  2072                           ; BSR set to: 15
  2073  001616  502F               	movf	RtccWriteDate@wasAlrm,w,c
  2074  001618  B4D8               	btfsc	status,2,c
  2075  00161A  D002               	goto	l3181
  2076                           
  2077                           ; BSR set to: 15
  2078  00161C  8E91               	bsf	3985,7,c	;volatile
  2079  00161E  D000               	goto	l3181
  2080  001620                     l3181:
  2081                           
  2082                           ; BSR set to: 15
  2083  001620  5032               	movf	RtccWriteDate@wasWrEn,w,c
  2084  001622  B4D8               	btfsc	status,2,c
  2085  001624  D009               	goto	l3189
  2086                           
  2087                           ; BSR set to: 15
  2088  001626  ECD6  F014         	call	_RtccWrOn	;wreg free
  2089  00162A  D006               	goto	l3189
  2090  00162C                     l3185:
  2091  00162C  5032               	movf	RtccWriteDate@wasWrEn,w,c
  2092  00162E  A4D8               	btfss	status,2,c
  2093  001630  D003               	goto	l3189
  2094  001632  010F               	movlb	15	; () banked
  2095  001634  9B3F               	bcf	63,5,b	;volatile
  2096                           
  2097                           ; BSR set to: 15
  2098  001636  D000               	goto	l3189
  2099  001638                     l3189:
  2100  001638  502C               	movf	RtccWriteDate@di,w,c
  2101  00163A  B4D8               	btfsc	status,2,c
  2102  00163C  0012               	return	
  2103  00163E  9CF2               	bcf	intcon,6,c	;volatile
  2104  001640  0012               	return	
  2105                           
  2106                           ;	Return value of _RtccWriteDate is never used
  2107  001642  0012               	return		;funcret
  2108  001644                     __end_of_RtccWriteDate:
  2109                           	opt stack 0
  2110                           tblptru	equ	0xFF8
  2111                           tblptrh	equ	0xFF7
  2112                           tblptrl	equ	0xFF6
  2113                           tablat	equ	0xFF5
  2114                           prodl	equ	0xFF3
  2115                           intcon	equ	0xFF2
  2116                           postinc0	equ	0xFEE
  2117                           wreg	equ	0xFE8
  2118                           postdec1	equ	0xFE5
  2119                           fsr1l	equ	0xFE1
  2120                           indf2	equ	0xFDF
  2121                           fsr2h	equ	0xFDA
  2122                           fsr2l	equ	0xFD9
  2123                           status	equ	0xFD8
  2124                           
  2125 ;; *************** function _RtccWrOn *****************
  2126 ;; Defined at:
  2127 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  data            2    0        unsigned int 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg, status,2
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_Write_RTC
  2151 ;;		_RtccWriteDate
  2152 ;;		_RtccWriteTime
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text6
  2157  0029AC                     __ptext6:
  2158                           	opt stack 0
  2159  0029AC                     _RtccWrOn:
  2160                           	opt stack 27
  2161                           
  2162                           ;incstack = 0
  2163  0029AC  9CF2               	bcf	intcon,6,c	;volatile
  2164  0029AE  0E55               	movlw	85
  2165  0029B0  6EA7               	movwf	4007,c	;volatile
  2166  0029B2  0EAA               	movlw	170
  2167  0029B4  6EA7               	movwf	4007,c	;volatile
  2168  0029B6  010F               	movlb	15	; () banked
  2169  0029B8  8B3F               	bsf	63,5,b	;volatile
  2170                           
  2171                           ; BSR set to: 15
  2172  0029BA  8CF2               	bsf	intcon,6,c	;volatile
  2173                           
  2174                           ; BSR set to: 15
  2175  0029BC  0012               	return		;funcret
  2176  0029BE                     __end_of_RtccWrOn:
  2177                           	opt stack 0
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           postdec1	equ	0xFE5
  2187                           fsr1l	equ	0xFE1
  2188                           indf2	equ	0xFDF
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _keyboard_control *****************
  2194 ;; Defined at:
  2195 ;;		line 628 in file "main.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;		None               void
  2202 ;; Registers used:
  2203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2213 ;;Total ram usage:        1 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:   10
  2216 ;; This function calls:
  2217 ;;		_button_A
  2218 ;;		_button_B
  2219 ;;		_button_C
  2220 ;;		_button_D
  2221 ;;		_button_asterisk
  2222 ;;		_button_hash
  2223 ;;		_button_number
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text7
  2230  0013A8                     __ptext7:
  2231                           	opt stack 0
  2232  0013A8                     _keyboard_control:
  2233                           	opt stack 20
  2234                           
  2235                           ;main.c: 630: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2236                           
  2237                           ; BSR set to: 15
  2238                           ;incstack = 0
  2239  0013A8  8089               	bsf	3977,0,c	;volatile
  2240  0013AA  9289               	bcf	3977,1,c	;volatile
  2241  0013AC  9489               	bcf	3977,2,c	;volatile
  2242  0013AE  9689               	bcf	3977,3,c	;volatile
  2243                           
  2244                           ;main.c: 631: {
  2245                           ;main.c: 632: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2246  0013B0  AA80               	btfss	3968,5,c	;volatile
  2247  0013B2  D007               	goto	l374
  2248  0013B4  0E01               	movlw	1
  2249  0013B6  6E21               	movwf	_key,c
  2250  0013B8  EC4E  F00E         	call	_button_number	;wreg free
  2251  0013BC  D000               	goto	l375
  2252  0013BE                     l375:
  2253  0013BE  BA80               	btfsc	3968,5,c	;volatile
  2254  0013C0  D7FE               	goto	l375
  2255  0013C2                     l374:
  2256                           
  2257                           ;main.c: 633: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2258  0013C2  AE80               	btfss	3968,7,c	;volatile
  2259  0013C4  D007               	goto	l378
  2260  0013C6  0E02               	movlw	2
  2261  0013C8  6E21               	movwf	_key,c
  2262  0013CA  EC4E  F00E         	call	_button_number	;wreg free
  2263  0013CE  D000               	goto	l379
  2264  0013D0                     l379:
  2265  0013D0  BE80               	btfsc	3968,7,c	;volatile
  2266  0013D2  D7FE               	goto	l379
  2267  0013D4                     l378:
  2268                           
  2269                           ;main.c: 634: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2270  0013D4  AC80               	btfss	3968,6,c	;volatile
  2271  0013D6  D007               	goto	l382
  2272  0013D8  0E03               	movlw	3
  2273  0013DA  6E21               	movwf	_key,c
  2274  0013DC  EC4E  F00E         	call	_button_number	;wreg free
  2275  0013E0  D000               	goto	l383
  2276  0013E2                     l383:
  2277  0013E2  BC80               	btfsc	3968,6,c	;volatile
  2278  0013E4  D7FE               	goto	l383
  2279  0013E6                     l382:
  2280                           
  2281                           ;main.c: 635: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2282  0013E6  A482               	btfss	3970,2,c	;volatile
  2283  0013E8  D007               	goto	l386
  2284  0013EA  0E0B               	movlw	11
  2285  0013EC  6E21               	movwf	_key,c
  2286  0013EE  EC2C  F013         	call	_button_A	;wreg free
  2287  0013F2  D000               	goto	l387
  2288  0013F4                     l387:
  2289  0013F4  B482               	btfsc	3970,2,c	;volatile
  2290  0013F6  D7FE               	goto	l387
  2291  0013F8                     l386:
  2292                           
  2293                           ;main.c: 636: }
  2294                           ;main.c: 638: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2295  0013F8  9089               	bcf	3977,0,c	;volatile
  2296  0013FA  8289               	bsf	3977,1,c	;volatile
  2297  0013FC  9489               	bcf	3977,2,c	;volatile
  2298  0013FE  9689               	bcf	3977,3,c	;volatile
  2299                           
  2300                           ;main.c: 639: {
  2301                           ;main.c: 640: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2302  001400  AA80               	btfss	3968,5,c	;volatile
  2303  001402  D007               	goto	l390
  2304  001404  0E04               	movlw	4
  2305  001406  6E21               	movwf	_key,c
  2306  001408  EC4E  F00E         	call	_button_number	;wreg free
  2307  00140C  D000               	goto	l391
  2308  00140E                     l391:
  2309  00140E  BA80               	btfsc	3968,5,c	;volatile
  2310  001410  D7FE               	goto	l391
  2311  001412                     l390:
  2312                           
  2313                           ;main.c: 641: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2314  001412  AE80               	btfss	3968,7,c	;volatile
  2315  001414  D007               	goto	l394
  2316  001416  0E05               	movlw	5
  2317  001418  6E21               	movwf	_key,c
  2318  00141A  EC4E  F00E         	call	_button_number	;wreg free
  2319  00141E  D000               	goto	l395
  2320  001420                     l395:
  2321  001420  BE80               	btfsc	3968,7,c	;volatile
  2322  001422  D7FE               	goto	l395
  2323  001424                     l394:
  2324                           
  2325                           ;main.c: 642: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2326  001424  AC80               	btfss	3968,6,c	;volatile
  2327  001426  D007               	goto	l398
  2328  001428  0E06               	movlw	6
  2329  00142A  6E21               	movwf	_key,c
  2330  00142C  EC4E  F00E         	call	_button_number	;wreg free
  2331  001430  D000               	goto	l399
  2332  001432                     l399:
  2333  001432  BC80               	btfsc	3968,6,c	;volatile
  2334  001434  D7FE               	goto	l399
  2335  001436                     l398:
  2336                           
  2337                           ;main.c: 643: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2338  001436  A482               	btfss	3970,2,c	;volatile
  2339  001438  D007               	goto	l402
  2340  00143A  0E0C               	movlw	12
  2341  00143C  6E21               	movwf	_key,c
  2342  00143E  ECEF  F00F         	call	_button_B	;wreg free
  2343  001442  D000               	goto	l403
  2344  001444                     l403:
  2345  001444  B482               	btfsc	3970,2,c	;volatile
  2346  001446  D7FE               	goto	l403
  2347  001448                     l402:
  2348                           
  2349                           ;main.c: 644: }
  2350                           ;main.c: 646: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2351  001448  9089               	bcf	3977,0,c	;volatile
  2352  00144A  9289               	bcf	3977,1,c	;volatile
  2353  00144C  8489               	bsf	3977,2,c	;volatile
  2354  00144E  9689               	bcf	3977,3,c	;volatile
  2355                           
  2356                           ;main.c: 647: {
  2357                           ;main.c: 648: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2358  001450  AA80               	btfss	3968,5,c	;volatile
  2359  001452  D007               	goto	l406
  2360  001454  0E07               	movlw	7
  2361  001456  6E21               	movwf	_key,c
  2362  001458  EC4E  F00E         	call	_button_number	;wreg free
  2363  00145C  D000               	goto	l407
  2364  00145E                     l407:
  2365  00145E  BA80               	btfsc	3968,5,c	;volatile
  2366  001460  D7FE               	goto	l407
  2367  001462                     l406:
  2368                           
  2369                           ;main.c: 649: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2370  001462  AE80               	btfss	3968,7,c	;volatile
  2371  001464  D007               	goto	l410
  2372  001466  0E08               	movlw	8
  2373  001468  6E21               	movwf	_key,c
  2374  00146A  EC4E  F00E         	call	_button_number	;wreg free
  2375  00146E  D000               	goto	l411
  2376  001470                     l411:
  2377  001470  BE80               	btfsc	3968,7,c	;volatile
  2378  001472  D7FE               	goto	l411
  2379  001474                     l410:
  2380                           
  2381                           ;main.c: 650: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2382  001474  AC80               	btfss	3968,6,c	;volatile
  2383  001476  D007               	goto	l414
  2384  001478  0E09               	movlw	9
  2385  00147A  6E21               	movwf	_key,c
  2386  00147C  EC4E  F00E         	call	_button_number	;wreg free
  2387  001480  D000               	goto	l415
  2388  001482                     l415:
  2389  001482  BC80               	btfsc	3968,6,c	;volatile
  2390  001484  D7FE               	goto	l415
  2391  001486                     l414:
  2392                           
  2393                           ;main.c: 651: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2394  001486  A482               	btfss	3970,2,c	;volatile
  2395  001488  D007               	goto	l418
  2396  00148A  0E0D               	movlw	13
  2397  00148C  6E21               	movwf	_key,c
  2398  00148E  ECA4  F014         	call	_button_C	;wreg free
  2399  001492  D000               	goto	l419
  2400  001494                     l419:
  2401  001494  B482               	btfsc	3970,2,c	;volatile
  2402  001496  D7FE               	goto	l419
  2403  001498                     l418:
  2404                           
  2405                           ;main.c: 652: }
  2406                           ;main.c: 654: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2407  001498  9089               	bcf	3977,0,c	;volatile
  2408  00149A  9289               	bcf	3977,1,c	;volatile
  2409  00149C  9489               	bcf	3977,2,c	;volatile
  2410  00149E  8689               	bsf	3977,3,c	;volatile
  2411                           
  2412                           ;main.c: 655: {
  2413                           ;main.c: 656: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2414  0014A0  AA80               	btfss	3968,5,c	;volatile
  2415  0014A2  D007               	goto	l422
  2416  0014A4  0E0E               	movlw	14
  2417  0014A6  6E21               	movwf	_key,c
  2418  0014A8  EC07  F015         	call	_button_asterisk	;wreg free
  2419  0014AC  D000               	goto	l423
  2420  0014AE                     l423:
  2421  0014AE  BA80               	btfsc	3968,5,c	;volatile
  2422  0014B0  D7FE               	goto	l423
  2423  0014B2                     l422:
  2424                           
  2425                           ;main.c: 657: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2426  0014B2  AE80               	btfss	3968,7,c	;volatile
  2427  0014B4  D007               	goto	l426
  2428  0014B6  0E00               	movlw	0
  2429  0014B8  6E21               	movwf	_key,c
  2430  0014BA  EC4E  F00E         	call	_button_number	;wreg free
  2431  0014BE  D000               	goto	l427
  2432  0014C0                     l427:
  2433  0014C0  BE80               	btfsc	3968,7,c	;volatile
  2434  0014C2  D7FE               	goto	l427
  2435  0014C4                     l426:
  2436                           
  2437                           ;main.c: 658: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2438  0014C4  AC80               	btfss	3968,6,c	;volatile
  2439  0014C6  D007               	goto	l430
  2440  0014C8  0E0F               	movlw	15
  2441  0014CA  6E21               	movwf	_key,c
  2442  0014CC  EC5E  F014         	call	_button_hash	;wreg free
  2443  0014D0  D000               	goto	l431
  2444  0014D2                     l431:
  2445  0014D2  BC80               	btfsc	3968,6,c	;volatile
  2446  0014D4  D7FE               	goto	l431
  2447  0014D6                     l430:
  2448                           
  2449                           ;main.c: 659: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2450  0014D6  A482               	btfss	3970,2,c	;volatile
  2451  0014D8  D009               	goto	l3875
  2452  0014DA  0E10               	movlw	16
  2453  0014DC  6E21               	movwf	_key,c
  2454  0014DE  ECFD  F014         	call	_button_D	;wreg free
  2455  0014E2  D000               	goto	l435
  2456  0014E4                     l435:
  2457  0014E4  A482               	btfss	3970,2,c	;volatile
  2458  0014E6  D002               	goto	l3875
  2459  0014E8  D7FD               	goto	l435
  2460  0014EA  D000               	goto	l3875
  2461  0014EC                     l3875:
  2462                           
  2463                           ;main.c: 660: }
  2464                           ;main.c: 662: _delay((unsigned long)((98)*(8000000/4000.0)));
  2465  0014EC  0EFF               	movlw	255
  2466  0014EE  6E4D               	movwf	??_keyboard_control& (0+255),c
  2467  0014F0  0E8A               	movlw	138
  2468  0014F2                     u2577:
  2469  0014F2  2EE8               	decfsz	wreg,f,c
  2470  0014F4  D7FE               	goto	u2577
  2471  0014F6  2E4D               	decfsz	??_keyboard_control& (0+255),f,c
  2472  0014F8  D7FC               	goto	u2577
  2473  0014FA  D000               	nop2	
  2474  0014FC  0012               	return		;funcret
  2475  0014FE                     __end_of_keyboard_control:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           prodl	equ	0xFF3
  2482                           intcon	equ	0xFF2
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           postdec1	equ	0xFE5
  2486                           fsr1l	equ	0xFE1
  2487                           indf2	equ	0xFDF
  2488                           fsr2h	equ	0xFDA
  2489                           fsr2l	equ	0xFD9
  2490                           status	equ	0xFD8
  2491                           
  2492 ;; *************** function _button_number *****************
  2493 ;; Defined at:
  2494 ;;		line 610 in file "main.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;		None               void
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    5
  2515 ;; This function calls:
  2516 ;;		_lcd_putrs
  2517 ;;		_reset_home_callback
  2518 ;;		_sprintf
  2519 ;;		_strcat
  2520 ;; This function is called by:
  2521 ;;		_keyboard_control
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text8
  2526  001C9C                     __ptext8:
  2527                           	opt stack 0
  2528  001C9C                     _button_number:
  2529                           	opt stack 24
  2530                           
  2531                           ;main.c: 612: reset_home_callback();
  2532                           
  2533                           ;incstack = 0
  2534  001C9C  EC02  F015         	call	_reset_home_callback	;wreg free
  2535                           
  2536                           ;main.c: 614: if(activity == 1 || activity == 7){
  2537  001CA0  0403               	decf	_activity,w,c
  2538  001CA2  1004               	iorwf	_activity+1,w,c
  2539  001CA4  B4D8               	btfsc	status,2,c
  2540  001CA6  D005               	goto	l3679
  2541  001CA8  0E07               	movlw	7
  2542  001CAA  1803               	xorwf	_activity,w,c
  2543  001CAC  1004               	iorwf	_activity+1,w,c
  2544  001CAE  A4D8               	btfss	status,2,c
  2545  001CB0  D01E               	goto	l3685
  2546  001CB2                     l3679:
  2547                           
  2548                           ;main.c: 616: lcd_putrs("*");
  2549  001CB2  0EDF               	movlw	low STR_49
  2550  001CB4  6E32               	movwf	lcd_putrs@ptr,c
  2551  001CB6  0E0F               	movlw	high STR_49
  2552  001CB8  6E33               	movwf	lcd_putrs@ptr+1,c
  2553  001CBA  EC4F  F010         	call	_lcd_putrs	;wreg free
  2554                           
  2555                           ;main.c: 617: sprintf(buffer1, "%01u", key);
  2556  001CBE  0E80               	movlw	low _buffer1
  2557  001CC0  6E36               	movwf	sprintf@sp,c
  2558  001CC2  0E00               	movlw	high _buffer1
  2559  001CC4  6E37               	movwf	sprintf@sp+1,c
  2560  001CC6  0ECA               	movlw	low STR_50
  2561  001CC8  6E38               	movwf	sprintf@f,c
  2562  001CCA  0E0F               	movlw	high STR_50
  2563  001CCC  6E39               	movwf	sprintf@f+1,c
  2564  001CCE  C021  F03A         	movff	_key,?_sprintf+4
  2565  001CD2  6A3B               	clrf	?_sprintf+5,c
  2566  001CD4  ECF2  F007         	call	_sprintf	;wreg free
  2567                           
  2568                           ;main.c: 618: strcat(pin_input, buffer1);
  2569  001CD8  0E99               	movlw	low _pin_input
  2570  001CDA  6E2A               	movwf	strcat@to,c
  2571  001CDC  0E00               	movlw	high _pin_input
  2572  001CDE  6E2B               	movwf	strcat@to+1,c
  2573  001CE0  0E80               	movlw	low _buffer1
  2574  001CE2  6E2C               	movwf	strcat@from,c
  2575  001CE4  0E00               	movlw	high _buffer1
  2576  001CE6  6E2D               	movwf	strcat@from+1,c
  2577  001CE8  ECB5  F011         	call	_strcat	;wreg free
  2578                           
  2579                           ;main.c: 620: } else {
  2580  001CEC  0012               	return	
  2581  001CEE                     l3685:
  2582                           
  2583                           ;main.c: 622: sprintf(buffer1,"%01u",key);
  2584  001CEE  0E80               	movlw	low _buffer1
  2585  001CF0  6E36               	movwf	sprintf@sp,c
  2586  001CF2  0E00               	movlw	high _buffer1
  2587  001CF4  6E37               	movwf	sprintf@sp+1,c
  2588  001CF6  0ECA               	movlw	low STR_50
  2589  001CF8  6E38               	movwf	sprintf@f,c
  2590  001CFA  0E0F               	movlw	high STR_50
  2591  001CFC  6E39               	movwf	sprintf@f+1,c
  2592  001CFE  C021  F03A         	movff	_key,?_sprintf+4
  2593  001D02  6A3B               	clrf	?_sprintf+5,c
  2594  001D04  ECF2  F007         	call	_sprintf	;wreg free
  2595  001D08  0012               	return	
  2596  001D0A  0012               	return		;funcret
  2597  001D0C                     __end_of_button_number:
  2598                           	opt stack 0
  2599                           tblptru	equ	0xFF8
  2600                           tblptrh	equ	0xFF7
  2601                           tblptrl	equ	0xFF6
  2602                           tablat	equ	0xFF5
  2603                           prodl	equ	0xFF3
  2604                           intcon	equ	0xFF2
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           postdec1	equ	0xFE5
  2608                           fsr1l	equ	0xFE1
  2609                           indf2	equ	0xFDF
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _strcat *****************
  2615 ;; Defined at:
  2616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  to              2    0[COMRAM] PTR unsigned char 
  2619 ;;		 -> pin_input(5), 
  2620 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2621 ;;		 -> buffer1(20), 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  cp              2    4[COMRAM] PTR unsigned char 
  2624 ;;		 -> pin_input(5), 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  2    0[COMRAM] PTR unsigned char 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;Total ram usage:        6 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_button_number
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text9
  2648  00236A                     __ptext9:
  2649                           	opt stack 0
  2650  00236A                     _strcat:
  2651                           	opt stack 28
  2652                           
  2653                           ;incstack = 0
  2654  00236A  C02A  F02E         	movff	strcat@to,strcat@cp
  2655  00236E  C02B  F02F         	movff	strcat@to+1,strcat@cp+1
  2656  002372  D003               	goto	l3429
  2657  002374                     l3427:
  2658  002374  4A2E               	infsnz	strcat@cp,f,c
  2659  002376  2A2F               	incf	strcat@cp+1,f,c
  2660  002378  D000               	goto	l3429
  2661  00237A                     l3429:
  2662  00237A  C02E  FFD9         	movff	strcat@cp,fsr2l
  2663  00237E  C02F  FFDA         	movff	strcat@cp+1,fsr2h
  2664  002382  50DF               	movf	indf2,w,c
  2665  002384  B4D8               	btfsc	status,2,c
  2666  002386  D007               	goto	l3433
  2667  002388  D7F5               	goto	l3427
  2668  00238A  D005               	goto	l3433
  2669  00238C                     l3431:
  2670  00238C  4A2E               	infsnz	strcat@cp,f,c
  2671  00238E  2A2F               	incf	strcat@cp+1,f,c
  2672  002390  4A2C               	infsnz	strcat@from,f,c
  2673  002392  2A2D               	incf	strcat@from+1,f,c
  2674  002394  D000               	goto	l3433
  2675  002396                     l3433:
  2676  002396  C02C  FFD9         	movff	strcat@from,fsr2l
  2677  00239A  C02D  FFDA         	movff	strcat@from+1,fsr2h
  2678  00239E  C02E  FFE1         	movff	strcat@cp,fsr1l
  2679  0023A2  C02F  FFE2         	movff	strcat@cp+1,fsr1h
  2680  0023A6  CFDF FFE7          	movff	indf2,indf1
  2681  0023AA  50E7               	movf	indf1,w,c
  2682  0023AC  A4D8               	btfss	status,2,c
  2683  0023AE  D7EE               	goto	l3431
  2684                           
  2685                           ;	Return value of _strcat is never used
  2686  0023B0  0012               	return		;funcret
  2687  0023B2                     __end_of_strcat:
  2688                           	opt stack 0
  2689                           tblptru	equ	0xFF8
  2690                           tblptrh	equ	0xFF7
  2691                           tblptrl	equ	0xFF6
  2692                           tablat	equ	0xFF5
  2693                           prodl	equ	0xFF3
  2694                           intcon	equ	0xFF2
  2695                           postinc0	equ	0xFEE
  2696                           wreg	equ	0xFE8
  2697                           indf1	equ	0xFE7
  2698                           postdec1	equ	0xFE5
  2699                           fsr1h	equ	0xFE2
  2700                           fsr1l	equ	0xFE1
  2701                           indf2	equ	0xFDF
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function _button_hash *****************
  2707 ;; Defined at:
  2708 ;;		line 596 in file "main.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;		None               void
  2715 ;; Registers used:
  2716 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    9
  2729 ;; This function calls:
  2730 ;;		_pin_input_validator
  2731 ;;		_pin_set
  2732 ;;		_reset_home_callback
  2733 ;; This function is called by:
  2734 ;;		_keyboard_control
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text10
  2739  0028BC                     __ptext10:
  2740                           	opt stack 0
  2741  0028BC                     _button_hash:
  2742                           	opt stack 20
  2743                           
  2744                           ;main.c: 598: reset_home_callback();
  2745                           
  2746                           ;incstack = 0
  2747  0028BC  EC02  F015         	call	_reset_home_callback	;wreg free
  2748                           
  2749                           ;main.c: 600: if(activity == 1){
  2750  0028C0  0403               	decf	_activity,w,c
  2751  0028C2  1004               	iorwf	_activity+1,w,c
  2752  0028C4  A4D8               	btfss	status,2,c
  2753  0028C6  D003               	goto	l3669
  2754                           
  2755                           ;main.c: 601: pin_input_validator();
  2756  0028C8  ECBD  F013         	call	_pin_input_validator	;wreg free
  2757  0028CC  D000               	goto	l3669
  2758  0028CE                     l3669:
  2759                           
  2760                           ;main.c: 602: }
  2761                           ;main.c: 604: if(activity == 7){
  2762  0028CE  0E07               	movlw	7
  2763  0028D0  1803               	xorwf	_activity,w,c
  2764  0028D2  1004               	iorwf	_activity+1,w,c
  2765  0028D4  A4D8               	btfss	status,2,c
  2766  0028D6  0012               	return	
  2767                           
  2768                           ;main.c: 605: pin_set();
  2769  0028D8  ECB2  F014         	call	_pin_set	;wreg free
  2770  0028DC  0012               	return	
  2771  0028DE  0012               	return		;funcret
  2772  0028E0                     __end_of_button_hash:
  2773                           	opt stack 0
  2774                           tblptru	equ	0xFF8
  2775                           tblptrh	equ	0xFF7
  2776                           tblptrl	equ	0xFF6
  2777                           tablat	equ	0xFF5
  2778                           prodl	equ	0xFF3
  2779                           intcon	equ	0xFF2
  2780                           postinc0	equ	0xFEE
  2781                           wreg	equ	0xFE8
  2782                           indf1	equ	0xFE7
  2783                           postdec1	equ	0xFE5
  2784                           fsr1h	equ	0xFE2
  2785                           fsr1l	equ	0xFE1
  2786                           indf2	equ	0xFDF
  2787                           fsr2h	equ	0xFDA
  2788                           fsr2l	equ	0xFD9
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _pin_set *****************
  2792 ;; Defined at:
  2793 ;;		line 397 in file "main.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;		None               void
  2800 ;; Registers used:
  2801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    7
  2814 ;; This function calls:
  2815 ;;		_activity_home
  2816 ;;		_strcpy
  2817 ;; This function is called by:
  2818 ;;		_button_hash
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text11
  2823  002964                     __ptext11:
  2824                           	opt stack 0
  2825  002964                     _pin_set:
  2826                           	opt stack 21
  2827                           
  2828                           ;main.c: 399: strcpy(pin, pin_input);
  2829                           
  2830                           ;incstack = 0
  2831  002964  0E94               	movlw	low _pin
  2832  002966  6E2A               	movwf	strcpy@to,c
  2833  002968  0E00               	movlw	high _pin
  2834  00296A  6E2B               	movwf	strcpy@to+1,c
  2835  00296C  0E99               	movlw	low _pin_input
  2836  00296E  6E2C               	movwf	strcpy@from,c
  2837  002970  0E00               	movlw	high _pin_input
  2838  002972  6E2D               	movwf	strcpy@from+1,c
  2839  002974  EC21  F012         	call	_strcpy	;wreg free
  2840                           
  2841                           ;main.c: 400: activity_home();
  2842  002978  EC35  F014         	call	_activity_home	;wreg free
  2843  00297C  0012               	return		;funcret
  2844  00297E                     __end_of_pin_set:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           indf1	equ	0xFE7
  2855                           postdec1	equ	0xFE5
  2856                           fsr1h	equ	0xFE2
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           fsr2h	equ	0xFDA
  2860                           fsr2l	equ	0xFD9
  2861                           status	equ	0xFD8
  2862                           
  2863 ;; *************** function _pin_input_validator *****************
  2864 ;; Defined at:
  2865 ;;		line 385 in file "main.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  comparision     2   16[COMRAM] int 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;		None               void
  2872 ;; Registers used:
  2873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2883 ;;Total ram usage:        2 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    8
  2886 ;; This function calls:
  2887 ;;		_activity_menu
  2888 ;;		_activity_pin
  2889 ;;		_strcmp
  2890 ;; This function is called by:
  2891 ;;		_button_hash
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text12
  2896  00277A                     __ptext12:
  2897                           	opt stack 0
  2898  00277A                     _pin_input_validator:
  2899                           	opt stack 20
  2900                           
  2901                           ;main.c: 387: int comparision = strcmp(pin, pin_input);
  2902                           
  2903                           ;incstack = 0
  2904  00277A  0E94               	movlw	low _pin
  2905  00277C  6E2A               	movwf	strcmp@s1,c
  2906  00277E  0E00               	movlw	high _pin
  2907  002780  6E2B               	movwf	strcmp@s1+1,c
  2908  002782  0E99               	movlw	low _pin_input
  2909  002784  6E2C               	movwf	strcmp@s2,c
  2910  002786  0E00               	movlw	high _pin_input
  2911  002788  6E2D               	movwf	strcmp@s2+1,c
  2912  00278A  ECF4  F010         	call	_strcmp	;wreg free
  2913  00278E  C02A  F03A         	movff	?_strcmp,pin_input_validator@comparision
  2914  002792  C02B  F03B         	movff	?_strcmp+1,pin_input_validator@comparision+1
  2915                           
  2916                           ;main.c: 389: if( comparision == 0 ){
  2917  002796  503A               	movf	pin_input_validator@comparision,w,c
  2918  002798  103B               	iorwf	pin_input_validator@comparision+1,w,c
  2919  00279A  A4D8               	btfss	status,2,c
  2920  00279C  D003               	goto	l3323
  2921                           
  2922                           ;main.c: 390: activity_menu();
  2923  00279E  EC54  F00D         	call	_activity_menu	;wreg free
  2924                           
  2925                           ;main.c: 391: }
  2926  0027A2  0012               	return	
  2927  0027A4                     l3323:
  2928                           
  2929                           ;main.c: 392: else{
  2930                           ;main.c: 393: activity_pin();
  2931  0027A4  EC42  F011         	call	_activity_pin	;wreg free
  2932  0027A8  0012               	return	
  2933  0027AA  0012               	return		;funcret
  2934  0027AC                     __end_of_pin_input_validator:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           prodl	equ	0xFF3
  2941                           intcon	equ	0xFF2
  2942                           postinc0	equ	0xFEE
  2943                           wreg	equ	0xFE8
  2944                           indf1	equ	0xFE7
  2945                           postdec1	equ	0xFE5
  2946                           fsr1h	equ	0xFE2
  2947                           fsr1l	equ	0xFE1
  2948                           indf2	equ	0xFDF
  2949                           fsr2h	equ	0xFDA
  2950                           fsr2l	equ	0xFD9
  2951                           status	equ	0xFD8
  2952                           
  2953 ;; *************** function _strcmp *****************
  2954 ;; Defined at:
  2955 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  2958 ;;		 -> pin(5), 
  2959 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  2960 ;;		 -> pin_input(5), 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  r               1    5[COMRAM] char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2    0[COMRAM] int 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2976 ;;Total ram usage:        6 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_pin_input_validator
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text13
  2986  0021E8                     __ptext13:
  2987                           	opt stack 0
  2988  0021E8                     _strcmp:
  2989                           	opt stack 27
  2990                           
  2991                           ;incstack = 0
  2992  0021E8  D005               	goto	l2993
  2993  0021EA                     l2991:
  2994  0021EA  4A2A               	infsnz	strcmp@s1,f,c
  2995  0021EC  2A2B               	incf	strcmp@s1+1,f,c
  2996  0021EE  4A2C               	infsnz	strcmp@s2,f,c
  2997  0021F0  2A2D               	incf	strcmp@s2+1,f,c
  2998  0021F2  D000               	goto	l2993
  2999  0021F4                     l2993:
  3000  0021F4  C02A  FFD9         	movff	strcmp@s1,fsr2l
  3001  0021F8  C02B  FFDA         	movff	strcmp@s1+1,fsr2h
  3002  0021FC  50DF               	movf	indf2,w,c
  3003  0021FE  6E2E               	movwf	??_strcmp& (0+255),c
  3004  002200  C02C  FFD9         	movff	strcmp@s2,fsr2l
  3005  002204  C02D  FFDA         	movff	strcmp@s2+1,fsr2h
  3006  002208  50DF               	movf	indf2,w,c
  3007  00220A  0800               	sublw	0
  3008  00220C  242E               	addwf	??_strcmp,w,c
  3009  00220E  6E2F               	movwf	strcmp@r,c
  3010  002210  502F               	movf	strcmp@r,w,c
  3011  002212  A4D8               	btfss	status,2,c
  3012  002214  D009               	goto	l2997
  3013  002216  C02A  FFD9         	movff	strcmp@s1,fsr2l
  3014  00221A  C02B  FFDA         	movff	strcmp@s1+1,fsr2h
  3015  00221E  50DF               	movf	indf2,w,c
  3016  002220  B4D8               	btfsc	status,2,c
  3017  002222  D002               	goto	l2997
  3018  002224  D7E2               	goto	l2991
  3019  002226  D000               	goto	l2997
  3020  002228                     l2997:
  3021  002228  502F               	movf	strcmp@r,w,c
  3022  00222A  6E2A               	movwf	?_strcmp,c
  3023  00222C  6A2B               	clrf	?_strcmp+1,c
  3024  00222E  BE2A               	btfsc	?_strcmp,7,c
  3025  002230  062B               	decf	?_strcmp+1,f,c
  3026  002232  0012               	return	
  3027  002234  0012               	return		;funcret
  3028  002236                     __end_of_strcmp:
  3029                           	opt stack 0
  3030                           tblptru	equ	0xFF8
  3031                           tblptrh	equ	0xFF7
  3032                           tblptrl	equ	0xFF6
  3033                           tablat	equ	0xFF5
  3034                           prodl	equ	0xFF3
  3035                           intcon	equ	0xFF2
  3036                           postinc0	equ	0xFEE
  3037                           wreg	equ	0xFE8
  3038                           indf1	equ	0xFE7
  3039                           postdec1	equ	0xFE5
  3040                           fsr1h	equ	0xFE2
  3041                           fsr1l	equ	0xFE1
  3042                           indf2	equ	0xFDF
  3043                           fsr2h	equ	0xFDA
  3044                           fsr2l	equ	0xFD9
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function _button_asterisk *****************
  3048 ;; Defined at:
  3049 ;;		line 588 in file "main.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;		None               void
  3056 ;; Registers used:
  3057 ;;		cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    1
  3070 ;; This function calls:
  3071 ;;		_reset_home_callback
  3072 ;; This function is called by:
  3073 ;;		_keyboard_control
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text14
  3078  002A0E                     __ptext14:
  3079                           	opt stack 0
  3080  002A0E                     _button_asterisk:
  3081                           	opt stack 28
  3082                           
  3083                           ;main.c: 590: reset_home_callback();
  3084                           
  3085                           ;incstack = 0
  3086  002A0E  EC02  F015         	call	_reset_home_callback	;wreg free
  3087  002A12  0012               	return		;funcret
  3088  002A14                     __end_of_button_asterisk:
  3089                           	opt stack 0
  3090                           tblptru	equ	0xFF8
  3091                           tblptrh	equ	0xFF7
  3092                           tblptrl	equ	0xFF6
  3093                           tablat	equ	0xFF5
  3094                           prodl	equ	0xFF3
  3095                           intcon	equ	0xFF2
  3096                           postinc0	equ	0xFEE
  3097                           wreg	equ	0xFE8
  3098                           indf1	equ	0xFE7
  3099                           postdec1	equ	0xFE5
  3100                           fsr1h	equ	0xFE2
  3101                           fsr1l	equ	0xFE1
  3102                           indf2	equ	0xFDF
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _button_D *****************
  3108 ;; Defined at:
  3109 ;;		line 580 in file "main.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    7
  3130 ;; This function calls:
  3131 ;;		_activity_home
  3132 ;;		_reset_home_callback
  3133 ;; This function is called by:
  3134 ;;		_keyboard_control
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text15
  3139  0029FA                     __ptext15:
  3140                           	opt stack 0
  3141  0029FA                     _button_D:
  3142                           	opt stack 22
  3143                           
  3144                           ;main.c: 582: reset_home_callback();
  3145                           
  3146                           ;incstack = 0
  3147  0029FA  EC02  F015         	call	_reset_home_callback	;wreg free
  3148                           
  3149                           ;main.c: 584: activity_home();
  3150  0029FE  EC35  F014         	call	_activity_home	;wreg free
  3151  002A02  0012               	return		;funcret
  3152  002A04                     __end_of_button_D:
  3153                           	opt stack 0
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           prodl	equ	0xFF3
  3159                           intcon	equ	0xFF2
  3160                           postinc0	equ	0xFEE
  3161                           wreg	equ	0xFE8
  3162                           indf1	equ	0xFE7
  3163                           postdec1	equ	0xFE5
  3164                           fsr1h	equ	0xFE2
  3165                           fsr1l	equ	0xFE1
  3166                           indf2	equ	0xFDF
  3167                           fsr2h	equ	0xFDA
  3168                           fsr2l	equ	0xFD9
  3169                           status	equ	0xFD8
  3170                           
  3171 ;; *************** function _button_C *****************
  3172 ;; Defined at:
  3173 ;;		line 570 in file "main.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;		None               void
  3180 ;; Registers used:
  3181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3191 ;;Total ram usage:        0 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    8
  3194 ;; This function calls:
  3195 ;;		_activity_menu
  3196 ;;		_reset_home_callback
  3197 ;; This function is called by:
  3198 ;;		_keyboard_control
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text16
  3203  002948                     __ptext16:
  3204                           	opt stack 0
  3205  002948                     _button_C:
  3206                           	opt stack 21
  3207                           
  3208                           ;main.c: 572: reset_home_callback();
  3209                           
  3210                           ;incstack = 0
  3211  002948  EC02  F015         	call	_reset_home_callback	;wreg free
  3212                           
  3213                           ;main.c: 574: if(activity != 0 && activity != 1){
  3214  00294C  5003               	movf	_activity,w,c
  3215  00294E  1004               	iorwf	_activity+1,w,c
  3216  002950  B4D8               	btfsc	status,2,c
  3217  002952  0012               	return	
  3218  002954  0403               	decf	_activity,w,c
  3219  002956  1004               	iorwf	_activity+1,w,c
  3220  002958  B4D8               	btfsc	status,2,c
  3221  00295A  0012               	return	
  3222                           
  3223                           ;main.c: 575: activity_menu();
  3224  00295C  EC54  F00D         	call	_activity_menu	;wreg free
  3225  002960  0012               	return	
  3226  002962  0012               	return		;funcret
  3227  002964                     __end_of_button_C:
  3228                           	opt stack 0
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           postinc0	equ	0xFEE
  3236                           wreg	equ	0xFE8
  3237                           indf1	equ	0xFE7
  3238                           postdec1	equ	0xFE5
  3239                           fsr1h	equ	0xFE2
  3240                           fsr1l	equ	0xFE1
  3241                           indf2	equ	0xFDF
  3242                           fsr2h	equ	0xFDA
  3243                           fsr2l	equ	0xFD9
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function _activity_menu *****************
  3247 ;; Defined at:
  3248 ;;		line 272 in file "main.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;		None               void
  3255 ;; Registers used:
  3256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3266 ;;Total ram usage:        0 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    7
  3269 ;; This function calls:
  3270 ;;		_action_menu_selector_0
  3271 ;;		_lcd_init
  3272 ;;		_lcd_write
  3273 ;; This function is called by:
  3274 ;;		_pin_input_validator
  3275 ;;		_button_C
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text17
  3280  001AA8                     __ptext17:
  3281                           	opt stack 0
  3282  001AA8                     _activity_menu:
  3283                           	opt stack 20
  3284                           
  3285                           ;main.c: 274: activity = 2;
  3286                           
  3287                           ;incstack = 0
  3288  001AA8  0E00               	movlw	0
  3289  001AAA  6E04               	movwf	_activity+1,c
  3290  001AAC  0E02               	movlw	2
  3291  001AAE  6E03               	movwf	_activity,c
  3292                           
  3293                           ;main.c: 275: lcd_init();
  3294  001AB0  EC95  F00D         	call	_lcd_init	;wreg free
  3295                           
  3296                           ;main.c: 276: lcd_write(2,1,"Activar");
  3297  001AB4  0E00               	movlw	0
  3298  001AB6  6E35               	movwf	lcd_write@column+1,c
  3299  001AB8  0E02               	movlw	2
  3300  001ABA  6E34               	movwf	lcd_write@column,c
  3301  001ABC  0E00               	movlw	0
  3302  001ABE  6E37               	movwf	lcd_write@row+1,c
  3303  001AC0  0E01               	movlw	1
  3304  001AC2  6E36               	movwf	lcd_write@row,c
  3305  001AC4  0E58               	movlw	low STR_21
  3306  001AC6  6E38               	movwf	lcd_write@string,c
  3307  001AC8  0E0F               	movlw	high STR_21
  3308  001ACA  6E39               	movwf	lcd_write@string+1,c
  3309  001ACC  ECBF  F014         	call	_lcd_write	;wreg free
  3310                           
  3311                           ;main.c: 277: lcd_write(2,2,"Reloj");
  3312  001AD0  0E00               	movlw	0
  3313  001AD2  6E35               	movwf	lcd_write@column+1,c
  3314  001AD4  0E02               	movlw	2
  3315  001AD6  6E34               	movwf	lcd_write@column,c
  3316  001AD8  0E00               	movlw	0
  3317  001ADA  6E37               	movwf	lcd_write@row+1,c
  3318  001ADC  0E02               	movlw	2
  3319  001ADE  6E36               	movwf	lcd_write@row,c
  3320  001AE0  0EA5               	movlw	low STR_22
  3321  001AE2  6E38               	movwf	lcd_write@string,c
  3322  001AE4  0E0F               	movlw	high STR_22
  3323  001AE6  6E39               	movwf	lcd_write@string+1,c
  3324  001AE8  ECBF  F014         	call	_lcd_write	;wreg free
  3325                           
  3326                           ;main.c: 278: lcd_write(10,1,"Pin");
  3327  001AEC  0E00               	movlw	0
  3328  001AEE  6E35               	movwf	lcd_write@column+1,c
  3329  001AF0  0E0A               	movlw	10
  3330  001AF2  6E34               	movwf	lcd_write@column,c
  3331  001AF4  0E00               	movlw	0
  3332  001AF6  6E37               	movwf	lcd_write@row+1,c
  3333  001AF8  0E01               	movlw	1
  3334  001AFA  6E36               	movwf	lcd_write@row,c
  3335  001AFC  0ED3               	movlw	low STR_23
  3336  001AFE  6E38               	movwf	lcd_write@string,c
  3337  001B00  0E0F               	movlw	high STR_23
  3338  001B02  6E39               	movwf	lcd_write@string+1,c
  3339  001B04  ECBF  F014         	call	_lcd_write	;wreg free
  3340                           
  3341                           ;main.c: 279: lcd_write(10,2,"Alarma");
  3342  001B08  0E00               	movlw	0
  3343  001B0A  6E35               	movwf	lcd_write@column+1,c
  3344  001B0C  0E0A               	movlw	10
  3345  001B0E  6E34               	movwf	lcd_write@column,c
  3346  001B10  0E00               	movlw	0
  3347  001B12  6E37               	movwf	lcd_write@row+1,c
  3348  001B14  0E02               	movlw	2
  3349  001B16  6E36               	movwf	lcd_write@row,c
  3350  001B18  0E98               	movlw	low STR_24
  3351  001B1A  6E38               	movwf	lcd_write@string,c
  3352  001B1C  0E0F               	movlw	high STR_24
  3353  001B1E  6E39               	movwf	lcd_write@string+1,c
  3354  001B20  ECBF  F014         	call	_lcd_write	;wreg free
  3355                           
  3356                           ;main.c: 280: action_menu_selector_0();
  3357  001B24  EC0B  F013         	call	_action_menu_selector_0	;wreg free
  3358  001B28  0012               	return		;funcret
  3359  001B2A                     __end_of_activity_menu:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodl	equ	0xFF3
  3366                           intcon	equ	0xFF2
  3367                           postinc0	equ	0xFEE
  3368                           wreg	equ	0xFE8
  3369                           indf1	equ	0xFE7
  3370                           postdec1	equ	0xFE5
  3371                           fsr1h	equ	0xFE2
  3372                           fsr1l	equ	0xFE1
  3373                           indf2	equ	0xFDF
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _button_B *****************
  3379 ;; Defined at:
  3380 ;;		line 537 in file "main.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;		None               void
  3387 ;; Registers used:
  3388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;Total ram usage:        2 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    9
  3401 ;; This function calls:
  3402 ;;		_button_B_menu
  3403 ;;		_button_B_submenu_activation
  3404 ;;		_button_B_submenu_alarm_config
  3405 ;;		_button_B_submenu_alarm_tone
  3406 ;;		_button_B_submenu_alarm_volume
  3407 ;;		_button_B_submenu_pin_config
  3408 ;;		_reset_home_callback
  3409 ;; This function is called by:
  3410 ;;		_keyboard_control
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text18
  3415  001FDE                     __ptext18:
  3416                           	opt stack 0
  3417  001FDE                     _button_B:
  3418                           	opt stack 20
  3419                           
  3420                           ;main.c: 539: reset_home_callback();
  3421                           
  3422                           ;incstack = 0
  3423  001FDE  EC02  F015         	call	_reset_home_callback	;wreg free
  3424                           
  3425                           ;main.c: 541: switch(activity){
  3426  001FE2  D012               	goto	l3643
  3427  001FE4                     l3629:
  3428                           
  3429                           ;main.c: 544: button_B_menu();
  3430  001FE4  ECD9  F011         	call	_button_B_menu	;wreg free
  3431                           
  3432                           ;main.c: 545: break;
  3433  001FE8  0012               	return	
  3434  001FEA                     l3631:
  3435                           
  3436                           ;main.c: 548: button_B_submenu_activation();
  3437  001FEA  EC86  F013         	call	_button_B_submenu_activation	;wreg free
  3438                           
  3439                           ;main.c: 549: break;
  3440  001FEE  0012               	return	
  3441  001FF0                     l3633:
  3442                           
  3443                           ;main.c: 552: button_B_submenu_pin_config();
  3444  001FF0  ECA3  F013         	call	_button_B_submenu_pin_config	;wreg free
  3445                           
  3446                           ;main.c: 553: break;
  3447  001FF4  0012               	return	
  3448  001FF6                     l3635:
  3449                           
  3450                           ;main.c: 556: button_B_submenu_alarm_config();
  3451  001FF6  ECEF  F013         	call	_button_B_submenu_alarm_config	;wreg free
  3452                           
  3453                           ;main.c: 557: break;
  3454  001FFA  0012               	return	
  3455  001FFC                     l3637:
  3456                           
  3457                           ;main.c: 560: button_B_submenu_alarm_volume();
  3458  001FFC  EC4C  F013         	call	_button_B_submenu_alarm_volume	;wreg free
  3459                           
  3460                           ;main.c: 561: break;
  3461  002000  0012               	return	
  3462  002002                     l3639:
  3463                           
  3464                           ;main.c: 564: button_B_submenu_alarm_tone();
  3465  002002  EC69  F013         	call	_button_B_submenu_alarm_tone	;wreg free
  3466                           
  3467                           ;main.c: 566: }
  3468                           
  3469                           ;main.c: 565: break;
  3470  002006  0012               	return	
  3471  002008                     l3643:
  3472  002008  C003  F03C         	movff	_activity,??_button_B
  3473  00200C  C004  F03D         	movff	_activity+1,??_button_B+1
  3474                           
  3475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3476                           ; Switch size 1, requested type "space"
  3477                           ; Number of cases is 1, Range of values is 0 to 0
  3478                           ; switch strategies available:
  3479                           ; Name         Instructions Cycles
  3480                           ; simple_byte            4     3 (average)
  3481                           ;	Chosen strategy is simple_byte
  3482  002010  503D               	movf	??_button_B+1,w,c
  3483  002012  0A00               	xorlw	0	; case 0
  3484  002014  A4D8               	btfss	status,2,c
  3485  002016  0012               	return	
  3486                           
  3487                           ; Switch size 1, requested type "space"
  3488                           ; Number of cases is 6, Range of values is 2 to 9
  3489                           ; switch strategies available:
  3490                           ; Name         Instructions Cycles
  3491                           ; simple_byte           19    10 (average)
  3492                           ;	Chosen strategy is simple_byte
  3493  002018  503C               	movf	??_button_B,w,c
  3494  00201A  0A02               	xorlw	2	; case 2
  3495  00201C  B4D8               	btfsc	status,2,c
  3496  00201E  D7E2               	goto	l3629
  3497  002020  0A06               	xorlw	6	; case 4
  3498  002022  B4D8               	btfsc	status,2,c
  3499  002024  D7E2               	goto	l3631
  3500  002026  0A01               	xorlw	1	; case 5
  3501  002028  B4D8               	btfsc	status,2,c
  3502  00202A  D7E2               	goto	l3633
  3503  00202C  0A03               	xorlw	3	; case 6
  3504  00202E  B4D8               	btfsc	status,2,c
  3505  002030  D7E2               	goto	l3635
  3506  002032  0A0E               	xorlw	14	; case 8
  3507  002034  B4D8               	btfsc	status,2,c
  3508  002036  D7E2               	goto	l3637
  3509  002038  0A01               	xorlw	1	; case 9
  3510  00203A  A4D8               	btfss	status,2,c
  3511  00203C  0012               	return	
  3512  00203E  D7E1               	goto	l3639
  3513  002040  0012               	return		;funcret
  3514  002042                     __end_of_button_B:
  3515                           	opt stack 0
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           prodl	equ	0xFF3
  3521                           intcon	equ	0xFF2
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           indf1	equ	0xFE7
  3525                           postdec1	equ	0xFE5
  3526                           fsr1h	equ	0xFE2
  3527                           fsr1l	equ	0xFE1
  3528                           indf2	equ	0xFDF
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function _button_B_submenu_pin_config *****************
  3534 ;; Defined at:
  3535 ;;		line 468 in file "main.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;		None
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;		None               void
  3542 ;; Registers used:
  3543 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;Total ram usage:        2 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    7
  3556 ;; This function calls:
  3557 ;;		_activity_home
  3558 ;;		_activity_submenu_pin_set
  3559 ;;		_reset_pin
  3560 ;; This function is called by:
  3561 ;;		_button_B
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text19
  3566  002746                     __ptext19:
  3567                           	opt stack 0
  3568  002746                     _button_B_submenu_pin_config:
  3569                           	opt stack 21
  3570                           
  3571                           ;main.c: 470: switch(submenu_selected){
  3572                           
  3573                           ;incstack = 0
  3574  002746  D008               	goto	l3373
  3575  002748                     l3365:
  3576                           
  3577                           ;main.c: 473: activity_submenu_pin_set();
  3578  002748  EC1B  F011         	call	_activity_submenu_pin_set	;wreg free
  3579                           
  3580                           ;main.c: 474: break;
  3581  00274C  0012               	return	
  3582  00274E                     l3367:
  3583                           
  3584                           ;main.c: 477: reset_pin();
  3585  00274E  ECCB  F014         	call	_reset_pin	;wreg free
  3586                           
  3587                           ;main.c: 478: activity_home();
  3588  002752  EC35  F014         	call	_activity_home	;wreg free
  3589                           
  3590                           ;main.c: 481: }
  3591                           
  3592                           ;main.c: 479: break;
  3593  002756  0012               	return	
  3594  002758                     l3373:
  3595  002758  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_pin_config
  3596  00275C  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_pin_config+1
  3597                           
  3598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3599                           ; Switch size 1, requested type "space"
  3600                           ; Number of cases is 1, Range of values is 0 to 0
  3601                           ; switch strategies available:
  3602                           ; Name         Instructions Cycles
  3603                           ; simple_byte            4     3 (average)
  3604                           ;	Chosen strategy is simple_byte
  3605  002760  503B               	movf	??_button_B_submenu_pin_config+1,w,c
  3606  002762  0A00               	xorlw	0	; case 0
  3607  002764  A4D8               	btfss	status,2,c
  3608  002766  0012               	return	
  3609                           
  3610                           ; Switch size 1, requested type "space"
  3611                           ; Number of cases is 2, Range of values is 0 to 1
  3612                           ; switch strategies available:
  3613                           ; Name         Instructions Cycles
  3614                           ; simple_byte            7     4 (average)
  3615                           ;	Chosen strategy is simple_byte
  3616  002768  503A               	movf	??_button_B_submenu_pin_config,w,c
  3617  00276A  0A00               	xorlw	0	; case 0
  3618  00276C  B4D8               	btfsc	status,2,c
  3619  00276E  D7EC               	goto	l3365
  3620  002770  0A01               	xorlw	1	; case 1
  3621  002772  A4D8               	btfss	status,2,c
  3622  002774  0012               	return	
  3623  002776  D7EB               	goto	l3367
  3624  002778  0012               	return		;funcret
  3625  00277A                     __end_of_button_B_submenu_pin_config:
  3626                           	opt stack 0
  3627                           tblptru	equ	0xFF8
  3628                           tblptrh	equ	0xFF7
  3629                           tblptrl	equ	0xFF6
  3630                           tablat	equ	0xFF5
  3631                           prodl	equ	0xFF3
  3632                           intcon	equ	0xFF2
  3633                           postinc0	equ	0xFEE
  3634                           wreg	equ	0xFE8
  3635                           indf1	equ	0xFE7
  3636                           postdec1	equ	0xFE5
  3637                           fsr1h	equ	0xFE2
  3638                           fsr1l	equ	0xFE1
  3639                           indf2	equ	0xFDF
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function _reset_pin *****************
  3645 ;; Defined at:
  3646 ;;		line 75 in file "main.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;		None               void
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;Total ram usage:        0 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    1
  3667 ;; This function calls:
  3668 ;;		_strcpy
  3669 ;; This function is called by:
  3670 ;;		_setup
  3671 ;;		_button_B_submenu_pin_config
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text20
  3676  002996                     __ptext20:
  3677                           	opt stack 0
  3678  002996                     _reset_pin:
  3679                           	opt stack 28
  3680                           
  3681                           ;main.c: 76: strcpy(pin, "1234");
  3682                           
  3683                           ;incstack = 0
  3684  002996  0E94               	movlw	low _pin
  3685  002998  6E2A               	movwf	strcpy@to,c
  3686  00299A  0E00               	movlw	high _pin
  3687  00299C  6E2B               	movwf	strcpy@to+1,c
  3688  00299E  0EB1               	movlw	low STR_1
  3689  0029A0  6E2C               	movwf	strcpy@from,c
  3690  0029A2  0E0F               	movlw	high STR_1
  3691  0029A4  6E2D               	movwf	strcpy@from+1,c
  3692  0029A6  EC21  F012         	call	_strcpy	;wreg free
  3693  0029AA  0012               	return		;funcret
  3694  0029AC                     __end_of_reset_pin:
  3695                           	opt stack 0
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           prodl	equ	0xFF3
  3701                           intcon	equ	0xFF2
  3702                           postinc0	equ	0xFEE
  3703                           wreg	equ	0xFE8
  3704                           indf1	equ	0xFE7
  3705                           postdec1	equ	0xFE5
  3706                           fsr1h	equ	0xFE2
  3707                           fsr1l	equ	0xFE1
  3708                           indf2	equ	0xFDF
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           
  3713 ;; *************** function _activity_submenu_pin_set *****************
  3714 ;; Defined at:
  3715 ;;		line 342 in file "main.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;		None               void
  3722 ;; Registers used:
  3723 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;Total ram usage:        0 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    6
  3736 ;; This function calls:
  3737 ;;		_lcd_comand
  3738 ;;		_lcd_gotoxy
  3739 ;;		_lcd_init
  3740 ;;		_lcd_write
  3741 ;;		_strcpy
  3742 ;; This function is called by:
  3743 ;;		_button_B_submenu_pin_config
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text21
  3748  002236                     __ptext21:
  3749                           	opt stack 0
  3750  002236                     _activity_submenu_pin_set:
  3751                           	opt stack 21
  3752                           
  3753                           ;main.c: 344: activity = 7;
  3754                           
  3755                           ;incstack = 0
  3756  002236  0E00               	movlw	0
  3757  002238  6E04               	movwf	_activity+1,c
  3758  00223A  0E07               	movlw	7
  3759  00223C  6E03               	movwf	_activity,c
  3760                           
  3761                           ;main.c: 345: strcpy(pin_input, "");
  3762  00223E  0E99               	movlw	low _pin_input
  3763  002240  6E2A               	movwf	strcpy@to,c
  3764  002242  0E00               	movlw	high _pin_input
  3765  002244  6E2B               	movwf	strcpy@to+1,c
  3766  002246  0EDE               	movlw	low (STR_11+1)
  3767  002248  6E2C               	movwf	strcpy@from,c
  3768  00224A  0E0F               	movlw	high (STR_11+1)
  3769  00224C  6E2D               	movwf	strcpy@from+1,c
  3770  00224E  EC21  F012         	call	_strcpy	;wreg free
  3771                           
  3772                           ;main.c: 346: lcd_init();
  3773  002252  EC95  F00D         	call	_lcd_init	;wreg free
  3774                           
  3775                           ;main.c: 347: lcd_write(1,1,"Nuevo PIN:");
  3776  002256  0E00               	movlw	0
  3777  002258  6E35               	movwf	lcd_write@column+1,c
  3778  00225A  0E01               	movlw	1
  3779  00225C  6E34               	movwf	lcd_write@column,c
  3780  00225E  0E00               	movlw	0
  3781  002260  6E37               	movwf	lcd_write@row+1,c
  3782  002262  0E01               	movlw	1
  3783  002264  6E36               	movwf	lcd_write@row,c
  3784  002266  0E3D               	movlw	low STR_39
  3785  002268  6E38               	movwf	lcd_write@string,c
  3786  00226A  0E0F               	movlw	high STR_39
  3787  00226C  6E39               	movwf	lcd_write@string+1,c
  3788  00226E  ECBF  F014         	call	_lcd_write	;wreg free
  3789                           
  3790                           ;main.c: 348: lcd_gotoxy(1,2);
  3791  002272  0E02               	movlw	2
  3792  002274  6E2E               	movwf	lcd_gotoxy@y,c
  3793  002276  0E01               	movlw	1
  3794  002278  EC70  F014         	call	_lcd_gotoxy
  3795                           
  3796                           ;main.c: 349: lcd_comand(0b00001111);
  3797  00227C  0E0F               	movlw	15
  3798  00227E  ECF1  F014         	call	_lcd_comand
  3799  002282  0012               	return		;funcret
  3800  002284                     __end_of_activity_submenu_pin_set:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           prodl	equ	0xFF3
  3807                           intcon	equ	0xFF2
  3808                           postinc0	equ	0xFEE
  3809                           wreg	equ	0xFE8
  3810                           indf1	equ	0xFE7
  3811                           postdec1	equ	0xFE5
  3812                           fsr1h	equ	0xFE2
  3813                           fsr1l	equ	0xFE1
  3814                           indf2	equ	0xFDF
  3815                           fsr2h	equ	0xFDA
  3816                           fsr2l	equ	0xFD9
  3817                           status	equ	0xFD8
  3818                           
  3819 ;; *************** function _button_B_submenu_alarm_volume *****************
  3820 ;; Defined at:
  3821 ;;		line 501 in file "main.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;		None               void
  3828 ;; Registers used:
  3829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;Total ram usage:        2 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    7
  3842 ;; This function calls:
  3843 ;;		_activity_home
  3844 ;; This function is called by:
  3845 ;;		_button_B
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text22
  3850  002698                     __ptext22:
  3851                           	opt stack 0
  3852  002698                     _button_B_submenu_alarm_volume:
  3853                           	opt stack 21
  3854                           
  3855                           ;main.c: 503: switch(submenu_selected){
  3856                           
  3857                           ;incstack = 0
  3858  002698  D009               	goto	l3401
  3859  00269A                     l3395:
  3860                           
  3861                           ;main.c: 506: alarm_volume = 0;
  3862  00269A  0E00               	movlw	0
  3863  00269C  6E08               	movwf	_alarm_volume+1,c
  3864  00269E  0E00               	movlw	0
  3865  0026A0  D003               	goto	L1
  3866  0026A2                     l3397:
  3867                           
  3868                           ;main.c: 510: alarm_volume = 1;
  3869  0026A2  0E00               	movlw	0
  3870  0026A4  6E08               	movwf	_alarm_volume+1,c
  3871  0026A6  0E01               	movlw	1
  3872  0026A8                     L1:
  3873  0026A8  6E07               	movwf	_alarm_volume,c
  3874                           
  3875                           ;main.c: 513: }
  3876                           
  3877                           ;main.c: 511: break;
  3878  0026AA  D010               	goto	l3403
  3879  0026AC                     l3401:
  3880  0026AC  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_alarm_volume
  3881  0026B0  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_alarm_volume+1
  3882                           
  3883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3884                           ; Switch size 1, requested type "space"
  3885                           ; Number of cases is 1, Range of values is 0 to 0
  3886                           ; switch strategies available:
  3887                           ; Name         Instructions Cycles
  3888                           ; simple_byte            4     3 (average)
  3889                           ;	Chosen strategy is simple_byte
  3890  0026B4  503B               	movf	??_button_B_submenu_alarm_volume+1,w,c
  3891  0026B6  0A00               	xorlw	0	; case 0
  3892  0026B8  A4D8               	btfss	status,2,c
  3893  0026BA  D008               	goto	l3403
  3894                           
  3895                           ; Switch size 1, requested type "space"
  3896                           ; Number of cases is 2, Range of values is 0 to 1
  3897                           ; switch strategies available:
  3898                           ; Name         Instructions Cycles
  3899                           ; simple_byte            7     4 (average)
  3900                           ;	Chosen strategy is simple_byte
  3901  0026BC  503A               	movf	??_button_B_submenu_alarm_volume,w,c
  3902  0026BE  0A00               	xorlw	0	; case 0
  3903  0026C0  B4D8               	btfsc	status,2,c
  3904  0026C2  D7EB               	goto	l3395
  3905  0026C4  0A01               	xorlw	1	; case 1
  3906  0026C6  B4D8               	btfsc	status,2,c
  3907  0026C8  D7EC               	goto	l3397
  3908  0026CA  D000               	goto	l3403
  3909  0026CC                     l3403:
  3910                           
  3911                           ;main.c: 515: activity_home();
  3912  0026CC  EC35  F014         	call	_activity_home	;wreg free
  3913  0026D0  0012               	return		;funcret
  3914  0026D2                     __end_of_button_B_submenu_alarm_volume:
  3915                           	opt stack 0
  3916                           tblptru	equ	0xFF8
  3917                           tblptrh	equ	0xFF7
  3918                           tblptrl	equ	0xFF6
  3919                           tablat	equ	0xFF5
  3920                           prodl	equ	0xFF3
  3921                           intcon	equ	0xFF2
  3922                           postinc0	equ	0xFEE
  3923                           wreg	equ	0xFE8
  3924                           indf1	equ	0xFE7
  3925                           postdec1	equ	0xFE5
  3926                           fsr1h	equ	0xFE2
  3927                           fsr1l	equ	0xFE1
  3928                           indf2	equ	0xFDF
  3929                           fsr2h	equ	0xFDA
  3930                           fsr2l	equ	0xFD9
  3931                           status	equ	0xFD8
  3932                           
  3933 ;; *************** function _button_B_submenu_alarm_tone *****************
  3934 ;; Defined at:
  3935 ;;		line 519 in file "main.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;		None               void
  3942 ;; Registers used:
  3943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3953 ;;Total ram usage:        2 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    7
  3956 ;; This function calls:
  3957 ;;		_activity_home
  3958 ;; This function is called by:
  3959 ;;		_button_B
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text23
  3964  0026D2                     __ptext23:
  3965                           	opt stack 0
  3966  0026D2                     _button_B_submenu_alarm_tone:
  3967                           	opt stack 21
  3968                           
  3969                           ;main.c: 521: switch(submenu_selected){
  3970                           
  3971                           ;incstack = 0
  3972  0026D2  D009               	goto	l3417
  3973  0026D4                     l3411:
  3974                           
  3975                           ;main.c: 524: alarm_tone = 0;
  3976  0026D4  0E00               	movlw	0
  3977  0026D6  6E06               	movwf	_alarm_tone+1,c
  3978  0026D8  0E00               	movlw	0
  3979  0026DA  D003               	goto	L2
  3980  0026DC                     l3413:
  3981                           
  3982                           ;main.c: 528: alarm_tone = 1;
  3983  0026DC  0E00               	movlw	0
  3984  0026DE  6E06               	movwf	_alarm_tone+1,c
  3985  0026E0  0E01               	movlw	1
  3986  0026E2                     L2:
  3987  0026E2  6E05               	movwf	_alarm_tone,c
  3988                           
  3989                           ;main.c: 531: }
  3990                           
  3991                           ;main.c: 529: break;
  3992  0026E4  D010               	goto	l3419
  3993  0026E6                     l3417:
  3994  0026E6  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_alarm_tone
  3995  0026EA  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_alarm_tone+1
  3996                           
  3997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3998                           ; Switch size 1, requested type "space"
  3999                           ; Number of cases is 1, Range of values is 0 to 0
  4000                           ; switch strategies available:
  4001                           ; Name         Instructions Cycles
  4002                           ; simple_byte            4     3 (average)
  4003                           ;	Chosen strategy is simple_byte
  4004  0026EE  503B               	movf	??_button_B_submenu_alarm_tone+1,w,c
  4005  0026F0  0A00               	xorlw	0	; case 0
  4006  0026F2  A4D8               	btfss	status,2,c
  4007  0026F4  D008               	goto	l3419
  4008                           
  4009                           ; Switch size 1, requested type "space"
  4010                           ; Number of cases is 2, Range of values is 0 to 1
  4011                           ; switch strategies available:
  4012                           ; Name         Instructions Cycles
  4013                           ; simple_byte            7     4 (average)
  4014                           ;	Chosen strategy is simple_byte
  4015  0026F6  503A               	movf	??_button_B_submenu_alarm_tone,w,c
  4016  0026F8  0A00               	xorlw	0	; case 0
  4017  0026FA  B4D8               	btfsc	status,2,c
  4018  0026FC  D7EB               	goto	l3411
  4019  0026FE  0A01               	xorlw	1	; case 1
  4020  002700  B4D8               	btfsc	status,2,c
  4021  002702  D7EC               	goto	l3413
  4022  002704  D000               	goto	l3419
  4023  002706                     l3419:
  4024                           
  4025                           ;main.c: 533: activity_home();
  4026  002706  EC35  F014         	call	_activity_home	;wreg free
  4027  00270A  0012               	return		;funcret
  4028  00270C                     __end_of_button_B_submenu_alarm_tone:
  4029                           	opt stack 0
  4030                           tblptru	equ	0xFF8
  4031                           tblptrh	equ	0xFF7
  4032                           tblptrl	equ	0xFF6
  4033                           tablat	equ	0xFF5
  4034                           prodl	equ	0xFF3
  4035                           intcon	equ	0xFF2
  4036                           postinc0	equ	0xFEE
  4037                           wreg	equ	0xFE8
  4038                           indf1	equ	0xFE7
  4039                           postdec1	equ	0xFE5
  4040                           fsr1h	equ	0xFE2
  4041                           fsr1l	equ	0xFE1
  4042                           indf2	equ	0xFDF
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function _button_B_submenu_alarm_config *****************
  4048 ;; Defined at:
  4049 ;;		line 485 in file "main.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;		None               void
  4056 ;; Registers used:
  4057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    8
  4070 ;; This function calls:
  4071 ;;		_activity_submenu_alarm_tone
  4072 ;;		_activity_submenu_alarm_volume
  4073 ;; This function is called by:
  4074 ;;		_button_B
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text24
  4079  0027DE                     __ptext24:
  4080                           	opt stack 0
  4081  0027DE                     _button_B_submenu_alarm_config:
  4082                           	opt stack 20
  4083                           
  4084                           ;main.c: 487: switch(submenu_selected){
  4085                           
  4086                           ;incstack = 0
  4087  0027DE  D006               	goto	l3387
  4088  0027E0                     l3381:
  4089                           
  4090                           ;main.c: 490: activity_submenu_alarm_volume();
  4091  0027E0  ECBD  F00E         	call	_activity_submenu_alarm_volume	;wreg free
  4092                           
  4093                           ;main.c: 491: break;
  4094  0027E4  0012               	return	
  4095  0027E6                     l3383:
  4096                           
  4097                           ;main.c: 494: activity_submenu_alarm_tone();
  4098  0027E6  ECF0  F00E         	call	_activity_submenu_alarm_tone	;wreg free
  4099                           
  4100                           ;main.c: 497: }
  4101                           
  4102                           ;main.c: 495: break;
  4103  0027EA  0012               	return	
  4104  0027EC                     l3387:
  4105  0027EC  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_alarm_config
  4106  0027F0  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_alarm_config+1
  4107                           
  4108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4109                           ; Switch size 1, requested type "space"
  4110                           ; Number of cases is 1, Range of values is 0 to 0
  4111                           ; switch strategies available:
  4112                           ; Name         Instructions Cycles
  4113                           ; simple_byte            4     3 (average)
  4114                           ;	Chosen strategy is simple_byte
  4115  0027F4  503B               	movf	??_button_B_submenu_alarm_config+1,w,c
  4116  0027F6  0A00               	xorlw	0	; case 0
  4117  0027F8  A4D8               	btfss	status,2,c
  4118  0027FA  0012               	return	
  4119                           
  4120                           ; Switch size 1, requested type "space"
  4121                           ; Number of cases is 2, Range of values is 0 to 1
  4122                           ; switch strategies available:
  4123                           ; Name         Instructions Cycles
  4124                           ; simple_byte            7     4 (average)
  4125                           ;	Chosen strategy is simple_byte
  4126  0027FC  503A               	movf	??_button_B_submenu_alarm_config,w,c
  4127  0027FE  0A00               	xorlw	0	; case 0
  4128  002800  B4D8               	btfsc	status,2,c
  4129  002802  D7EE               	goto	l3381
  4130  002804  0A01               	xorlw	1	; case 1
  4131  002806  A4D8               	btfss	status,2,c
  4132  002808  0012               	return	
  4133  00280A  D7ED               	goto	l3383
  4134  00280C  0012               	return		;funcret
  4135  00280E                     __end_of_button_B_submenu_alarm_config:
  4136                           	opt stack 0
  4137                           tblptru	equ	0xFF8
  4138                           tblptrh	equ	0xFF7
  4139                           tblptrl	equ	0xFF6
  4140                           tablat	equ	0xFF5
  4141                           prodl	equ	0xFF3
  4142                           intcon	equ	0xFF2
  4143                           postinc0	equ	0xFEE
  4144                           wreg	equ	0xFE8
  4145                           indf1	equ	0xFE7
  4146                           postdec1	equ	0xFE5
  4147                           fsr1h	equ	0xFE2
  4148                           fsr1l	equ	0xFE1
  4149                           indf2	equ	0xFDF
  4150                           fsr2h	equ	0xFDA
  4151                           fsr2l	equ	0xFD9
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _activity_submenu_alarm_volume *****************
  4155 ;; Defined at:
  4156 ;;		line 363 in file "main.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;		None               void
  4163 ;; Registers used:
  4164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    7
  4177 ;; This function calls:
  4178 ;;		_action_submenu_selector_0
  4179 ;;		_lcd_init
  4180 ;;		_lcd_write
  4181 ;; This function is called by:
  4182 ;;		_button_B_submenu_alarm_config
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text25
  4187  001D7A                     __ptext25:
  4188                           	opt stack 0
  4189  001D7A                     _activity_submenu_alarm_volume:
  4190                           	opt stack 20
  4191                           
  4192                           ;main.c: 365: activity = 8;
  4193                           
  4194                           ;incstack = 0
  4195  001D7A  0E00               	movlw	0
  4196  001D7C  6E04               	movwf	_activity+1,c
  4197  001D7E  0E08               	movlw	8
  4198  001D80  6E03               	movwf	_activity,c
  4199                           
  4200                           ;main.c: 366: lcd_init();
  4201  001D82  EC95  F00D         	call	_lcd_init	;wreg free
  4202                           
  4203                           ;main.c: 367: lcd_write(1,1,"Volumen");
  4204  001D86  0E00               	movlw	0
  4205  001D88  6E35               	movwf	lcd_write@column+1,c
  4206  001D8A  0E01               	movlw	1
  4207  001D8C  6E34               	movwf	lcd_write@column,c
  4208  001D8E  0E00               	movlw	0
  4209  001D90  6E37               	movwf	lcd_write@row+1,c
  4210  001D92  0E01               	movlw	1
  4211  001D94  6E36               	movwf	lcd_write@row,c
  4212  001D96  0E48               	movlw	low STR_41
  4213  001D98  6E38               	movwf	lcd_write@string,c
  4214  001D9A  0E0F               	movlw	high STR_41
  4215  001D9C  6E39               	movwf	lcd_write@string+1,c
  4216  001D9E  ECBF  F014         	call	_lcd_write	;wreg free
  4217                           
  4218                           ;main.c: 368: lcd_write(10,1,"Bajo");
  4219  001DA2  0E00               	movlw	0
  4220  001DA4  6E35               	movwf	lcd_write@column+1,c
  4221  001DA6  0E0A               	movlw	10
  4222  001DA8  6E34               	movwf	lcd_write@column,c
  4223  001DAA  0E00               	movlw	0
  4224  001DAC  6E37               	movwf	lcd_write@row+1,c
  4225  001DAE  0E01               	movlw	1
  4226  001DB0  6E36               	movwf	lcd_write@row,c
  4227  001DB2  0EBB               	movlw	low STR_44
  4228  001DB4  6E38               	movwf	lcd_write@string,c
  4229  001DB6  0E0F               	movlw	high STR_44
  4230  001DB8  6E39               	movwf	lcd_write@string+1,c
  4231  001DBA  ECBF  F014         	call	_lcd_write	;wreg free
  4232                           
  4233                           ;main.c: 369: lcd_write(10,2,"Alto");
  4234  001DBE  0E00               	movlw	0
  4235  001DC0  6E35               	movwf	lcd_write@column+1,c
  4236  001DC2  0E0A               	movlw	10
  4237  001DC4  6E34               	movwf	lcd_write@column,c
  4238  001DC6  0E00               	movlw	0
  4239  001DC8  6E37               	movwf	lcd_write@row+1,c
  4240  001DCA  0E02               	movlw	2
  4241  001DCC  6E36               	movwf	lcd_write@row,c
  4242  001DCE  0EC5               	movlw	low STR_45
  4243  001DD0  6E38               	movwf	lcd_write@string,c
  4244  001DD2  0E0F               	movlw	high STR_45
  4245  001DD4  6E39               	movwf	lcd_write@string+1,c
  4246  001DD6  ECBF  F014         	call	_lcd_write	;wreg free
  4247                           
  4248                           ;main.c: 370: action_submenu_selector_0();
  4249  001DDA  EC87  F012         	call	_action_submenu_selector_0	;wreg free
  4250  001DDE  0012               	return		;funcret
  4251  001DE0                     __end_of_activity_submenu_alarm_volume:
  4252                           	opt stack 0
  4253                           tblptru	equ	0xFF8
  4254                           tblptrh	equ	0xFF7
  4255                           tblptrl	equ	0xFF6
  4256                           tablat	equ	0xFF5
  4257                           prodl	equ	0xFF3
  4258                           intcon	equ	0xFF2
  4259                           postinc0	equ	0xFEE
  4260                           wreg	equ	0xFE8
  4261                           indf1	equ	0xFE7
  4262                           postdec1	equ	0xFE5
  4263                           fsr1h	equ	0xFE2
  4264                           fsr1l	equ	0xFE1
  4265                           indf2	equ	0xFDF
  4266                           fsr2h	equ	0xFDA
  4267                           fsr2l	equ	0xFD9
  4268                           status	equ	0xFD8
  4269                           
  4270 ;; *************** function _activity_submenu_alarm_tone *****************
  4271 ;; Defined at:
  4272 ;;		line 374 in file "main.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;		None               void
  4279 ;; Registers used:
  4280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    7
  4293 ;; This function calls:
  4294 ;;		_action_submenu_selector_0
  4295 ;;		_lcd_init
  4296 ;;		_lcd_write
  4297 ;; This function is called by:
  4298 ;;		_button_B_submenu_alarm_config
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text26
  4303  001DE0                     __ptext26:
  4304                           	opt stack 0
  4305  001DE0                     _activity_submenu_alarm_tone:
  4306                           	opt stack 20
  4307                           
  4308                           ;main.c: 376: activity = 9;
  4309                           
  4310                           ;incstack = 0
  4311  001DE0  0E00               	movlw	0
  4312  001DE2  6E04               	movwf	_activity+1,c
  4313  001DE4  0E09               	movlw	9
  4314  001DE6  6E03               	movwf	_activity,c
  4315                           
  4316                           ;main.c: 377: lcd_init();
  4317  001DE8  EC95  F00D         	call	_lcd_init	;wreg free
  4318                           
  4319                           ;main.c: 378: lcd_write(1,1,"Tono");
  4320  001DEC  0E00               	movlw	0
  4321  001DEE  6E35               	movwf	lcd_write@column+1,c
  4322  001DF0  0E01               	movlw	1
  4323  001DF2  6E34               	movwf	lcd_write@column,c
  4324  001DF4  0E00               	movlw	0
  4325  001DF6  6E37               	movwf	lcd_write@row+1,c
  4326  001DF8  0E01               	movlw	1
  4327  001DFA  6E36               	movwf	lcd_write@row,c
  4328  001DFC  0EC0               	movlw	low STR_42
  4329  001DFE  6E38               	movwf	lcd_write@string,c
  4330  001E00  0E0F               	movlw	high STR_42
  4331  001E02  6E39               	movwf	lcd_write@string+1,c
  4332  001E04  ECBF  F014         	call	_lcd_write	;wreg free
  4333                           
  4334                           ;main.c: 379: lcd_write(10,1,"Beep 1");
  4335  001E08  0E00               	movlw	0
  4336  001E0A  6E35               	movwf	lcd_write@column+1,c
  4337  001E0C  0E0A               	movlw	10
  4338  001E0E  6E34               	movwf	lcd_write@column,c
  4339  001E10  0E00               	movlw	0
  4340  001E12  6E37               	movwf	lcd_write@row+1,c
  4341  001E14  0E01               	movlw	1
  4342  001E16  6E36               	movwf	lcd_write@row,c
  4343  001E18  0E60               	movlw	low STR_47
  4344  001E1A  6E38               	movwf	lcd_write@string,c
  4345  001E1C  0E0F               	movlw	high STR_47
  4346  001E1E  6E39               	movwf	lcd_write@string+1,c
  4347  001E20  ECBF  F014         	call	_lcd_write	;wreg free
  4348                           
  4349                           ;main.c: 380: lcd_write(10,2,"Beep 2");
  4350  001E24  0E00               	movlw	0
  4351  001E26  6E35               	movwf	lcd_write@column+1,c
  4352  001E28  0E0A               	movlw	10
  4353  001E2A  6E34               	movwf	lcd_write@column,c
  4354  001E2C  0E00               	movlw	0
  4355  001E2E  6E37               	movwf	lcd_write@row+1,c
  4356  001E30  0E02               	movlw	2
  4357  001E32  6E36               	movwf	lcd_write@row,c
  4358  001E34  0E6E               	movlw	low STR_48
  4359  001E36  6E38               	movwf	lcd_write@string,c
  4360  001E38  0E0F               	movlw	high STR_48
  4361  001E3A  6E39               	movwf	lcd_write@string+1,c
  4362  001E3C  ECBF  F014         	call	_lcd_write	;wreg free
  4363                           
  4364                           ;main.c: 381: action_submenu_selector_0();
  4365  001E40  EC87  F012         	call	_action_submenu_selector_0	;wreg free
  4366  001E44  0012               	return		;funcret
  4367  001E46                     __end_of_activity_submenu_alarm_tone:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           prodl	equ	0xFF3
  4374                           intcon	equ	0xFF2
  4375                           postinc0	equ	0xFEE
  4376                           wreg	equ	0xFE8
  4377                           indf1	equ	0xFE7
  4378                           postdec1	equ	0xFE5
  4379                           fsr1h	equ	0xFE2
  4380                           fsr1l	equ	0xFE1
  4381                           indf2	equ	0xFDF
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function _button_B_submenu_activation *****************
  4387 ;; Defined at:
  4388 ;;		line 450 in file "main.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;		None               void
  4395 ;; Registers used:
  4396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4406 ;;Total ram usage:        2 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    7
  4409 ;; This function calls:
  4410 ;;		_activity_home
  4411 ;; This function is called by:
  4412 ;;		_button_B
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text27
  4417  00270C                     __ptext27:
  4418                           	opt stack 0
  4419  00270C                     _button_B_submenu_activation:
  4420                           	opt stack 21
  4421                           
  4422                           ;main.c: 452: switch(submenu_selected){
  4423                           
  4424                           ;incstack = 0
  4425  00270C  D009               	goto	l3355
  4426  00270E                     l3349:
  4427                           
  4428                           ;main.c: 455: state = 1;
  4429  00270E  0E00               	movlw	0
  4430  002710  6E1E               	movwf	_state+1,c
  4431  002712  0E01               	movlw	1
  4432  002714  D003               	goto	L3
  4433  002716                     l3351:
  4434                           
  4435                           ;main.c: 459: state = 0;
  4436  002716  0E00               	movlw	0
  4437  002718  6E1E               	movwf	_state+1,c
  4438  00271A  0E00               	movlw	0
  4439  00271C                     L3:
  4440  00271C  6E1D               	movwf	_state,c
  4441                           
  4442                           ;main.c: 462: }
  4443                           
  4444                           ;main.c: 460: break;
  4445  00271E  D010               	goto	l3357
  4446  002720                     l3355:
  4447  002720  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_activation
  4448  002724  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_activation+1
  4449                           
  4450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4451                           ; Switch size 1, requested type "space"
  4452                           ; Number of cases is 1, Range of values is 0 to 0
  4453                           ; switch strategies available:
  4454                           ; Name         Instructions Cycles
  4455                           ; simple_byte            4     3 (average)
  4456                           ;	Chosen strategy is simple_byte
  4457  002728  503B               	movf	??_button_B_submenu_activation+1,w,c
  4458  00272A  0A00               	xorlw	0	; case 0
  4459  00272C  A4D8               	btfss	status,2,c
  4460  00272E  D008               	goto	l3357
  4461                           
  4462                           ; Switch size 1, requested type "space"
  4463                           ; Number of cases is 2, Range of values is 0 to 1
  4464                           ; switch strategies available:
  4465                           ; Name         Instructions Cycles
  4466                           ; simple_byte            7     4 (average)
  4467                           ;	Chosen strategy is simple_byte
  4468  002730  503A               	movf	??_button_B_submenu_activation,w,c
  4469  002732  0A00               	xorlw	0	; case 0
  4470  002734  B4D8               	btfsc	status,2,c
  4471  002736  D7EB               	goto	l3349
  4472  002738  0A01               	xorlw	1	; case 1
  4473  00273A  B4D8               	btfsc	status,2,c
  4474  00273C  D7EC               	goto	l3351
  4475  00273E  D000               	goto	l3357
  4476  002740                     l3357:
  4477                           
  4478                           ;main.c: 464: activity_home();
  4479  002740  EC35  F014         	call	_activity_home	;wreg free
  4480  002744  0012               	return		;funcret
  4481  002746                     __end_of_button_B_submenu_activation:
  4482                           	opt stack 0
  4483                           tblptru	equ	0xFF8
  4484                           tblptrh	equ	0xFF7
  4485                           tblptrl	equ	0xFF6
  4486                           tablat	equ	0xFF5
  4487                           prodl	equ	0xFF3
  4488                           intcon	equ	0xFF2
  4489                           postinc0	equ	0xFEE
  4490                           wreg	equ	0xFE8
  4491                           indf1	equ	0xFE7
  4492                           postdec1	equ	0xFE5
  4493                           fsr1h	equ	0xFE2
  4494                           fsr1l	equ	0xFE1
  4495                           indf2	equ	0xFDF
  4496                           fsr2h	equ	0xFDA
  4497                           fsr2l	equ	0xFD9
  4498                           status	equ	0xFD8
  4499                           
  4500 ;; *************** function _button_B_menu *****************
  4501 ;; Defined at:
  4502 ;;		line 427 in file "main.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;		None
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;		None               void
  4509 ;; Registers used:
  4510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4520 ;;Total ram usage:        2 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:    8
  4523 ;; This function calls:
  4524 ;;		_activity_submenu_activation
  4525 ;;		_activity_submenu_alarm
  4526 ;;		_activity_submenu_clock
  4527 ;;		_activity_submenu_pin
  4528 ;; This function is called by:
  4529 ;;		_button_B
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text28
  4534  0023B2                     __ptext28:
  4535                           	opt stack 0
  4536  0023B2                     _button_B_menu:
  4537                           	opt stack 20
  4538                           
  4539                           ;main.c: 429: switch(menu_selected){
  4540                           
  4541                           ;incstack = 0
  4542  0023B2  D00C               	goto	l3341
  4543  0023B4                     l3331:
  4544                           
  4545                           ;main.c: 432: activity_submenu_activation();
  4546  0023B4  ECBC  F00F         	call	_activity_submenu_activation	;wreg free
  4547                           
  4548                           ;main.c: 433: break;
  4549  0023B8  0012               	return	
  4550  0023BA                     l3333:
  4551                           
  4552                           ;main.c: 436: activity_submenu_clock();
  4553  0023BA  EC56  F00F         	call	_activity_submenu_clock	;wreg free
  4554                           
  4555                           ;main.c: 437: break;
  4556  0023BE  0012               	return	
  4557  0023C0                     l3335:
  4558                           
  4559                           ;main.c: 440: activity_submenu_pin();
  4560  0023C0  EC23  F00F         	call	_activity_submenu_pin	;wreg free
  4561                           
  4562                           ;main.c: 441: break;
  4563  0023C4  0012               	return	
  4564  0023C6                     l3337:
  4565                           
  4566                           ;main.c: 444: activity_submenu_alarm();
  4567  0023C6  EC89  F00F         	call	_activity_submenu_alarm	;wreg free
  4568                           
  4569                           ;main.c: 447: }
  4570                           
  4571                           ;main.c: 445: break;
  4572  0023CA  0012               	return	
  4573  0023CC                     l3341:
  4574  0023CC  C017  F03A         	movff	_menu_selected,??_button_B_menu
  4575  0023D0  C018  F03B         	movff	_menu_selected+1,??_button_B_menu+1
  4576                           
  4577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4578                           ; Switch size 1, requested type "space"
  4579                           ; Number of cases is 1, Range of values is 0 to 0
  4580                           ; switch strategies available:
  4581                           ; Name         Instructions Cycles
  4582                           ; simple_byte            4     3 (average)
  4583                           ;	Chosen strategy is simple_byte
  4584  0023D4  503B               	movf	??_button_B_menu+1,w,c
  4585  0023D6  0A00               	xorlw	0	; case 0
  4586  0023D8  A4D8               	btfss	status,2,c
  4587  0023DA  0012               	return	
  4588                           
  4589                           ; Switch size 1, requested type "space"
  4590                           ; Number of cases is 4, Range of values is 0 to 3
  4591                           ; switch strategies available:
  4592                           ; Name         Instructions Cycles
  4593                           ; simple_byte           13     7 (average)
  4594                           ;	Chosen strategy is simple_byte
  4595  0023DC  503A               	movf	??_button_B_menu,w,c
  4596  0023DE  0A00               	xorlw	0	; case 0
  4597  0023E0  B4D8               	btfsc	status,2,c
  4598  0023E2  D7E8               	goto	l3331
  4599  0023E4  0A01               	xorlw	1	; case 1
  4600  0023E6  B4D8               	btfsc	status,2,c
  4601  0023E8  D7E8               	goto	l3333
  4602  0023EA  0A03               	xorlw	3	; case 2
  4603  0023EC  B4D8               	btfsc	status,2,c
  4604  0023EE  D7E8               	goto	l3335
  4605  0023F0  0A01               	xorlw	1	; case 3
  4606  0023F2  A4D8               	btfss	status,2,c
  4607  0023F4  0012               	return	
  4608  0023F6  D7E7               	goto	l3337
  4609  0023F8  0012               	return		;funcret
  4610  0023FA                     __end_of_button_B_menu:
  4611                           	opt stack 0
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           prodl	equ	0xFF3
  4617                           intcon	equ	0xFF2
  4618                           postinc0	equ	0xFEE
  4619                           wreg	equ	0xFE8
  4620                           indf1	equ	0xFE7
  4621                           postdec1	equ	0xFE5
  4622                           fsr1h	equ	0xFE2
  4623                           fsr1l	equ	0xFE1
  4624                           indf2	equ	0xFDF
  4625                           fsr2h	equ	0xFDA
  4626                           fsr2l	equ	0xFD9
  4627                           status	equ	0xFD8
  4628                           
  4629 ;; *************** function _activity_submenu_pin *****************
  4630 ;; Defined at:
  4631 ;;		line 332 in file "main.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;		None               void
  4638 ;; Registers used:
  4639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    7
  4652 ;; This function calls:
  4653 ;;		_action_submenu_selector_0
  4654 ;;		_lcd_init
  4655 ;;		_lcd_write
  4656 ;; This function is called by:
  4657 ;;		_button_B_menu
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text29
  4662  001E46                     __ptext29:
  4663                           	opt stack 0
  4664  001E46                     _activity_submenu_pin:
  4665                           	opt stack 20
  4666                           
  4667                           ;main.c: 334: activity = 5;
  4668                           
  4669                           ;incstack = 0
  4670  001E46  0E00               	movlw	0
  4671  001E48  6E04               	movwf	_activity+1,c
  4672  001E4A  0E05               	movlw	5
  4673  001E4C  6E03               	movwf	_activity,c
  4674                           
  4675                           ;main.c: 335: lcd_init();
  4676  001E4E  EC95  F00D         	call	_lcd_init	;wreg free
  4677                           
  4678                           ;main.c: 336: lcd_write(1,1,"Pin");
  4679  001E52  0E00               	movlw	0
  4680  001E54  6E35               	movwf	lcd_write@column+1,c
  4681  001E56  0E01               	movlw	1
  4682  001E58  6E34               	movwf	lcd_write@column,c
  4683  001E5A  0E00               	movlw	0
  4684  001E5C  6E37               	movwf	lcd_write@row+1,c
  4685  001E5E  0E01               	movlw	1
  4686  001E60  6E36               	movwf	lcd_write@row,c
  4687  001E62  0ED3               	movlw	low STR_23
  4688  001E64  6E38               	movwf	lcd_write@string,c
  4689  001E66  0E0F               	movlw	high STR_23
  4690  001E68  6E39               	movwf	lcd_write@string+1,c
  4691  001E6A  ECBF  F014         	call	_lcd_write	;wreg free
  4692                           
  4693                           ;main.c: 337: lcd_write(10,1,"Cambiar");
  4694  001E6E  0E00               	movlw	0
  4695  001E70  6E35               	movwf	lcd_write@column+1,c
  4696  001E72  0E0A               	movlw	10
  4697  001E74  6E34               	movwf	lcd_write@column,c
  4698  001E76  0E00               	movlw	0
  4699  001E78  6E37               	movwf	lcd_write@row+1,c
  4700  001E7A  0E01               	movlw	1
  4701  001E7C  6E36               	movwf	lcd_write@row,c
  4702  001E7E  0E50               	movlw	low STR_36
  4703  001E80  6E38               	movwf	lcd_write@string,c
  4704  001E82  0E0F               	movlw	high STR_36
  4705  001E84  6E39               	movwf	lcd_write@string+1,c
  4706  001E86  ECBF  F014         	call	_lcd_write	;wreg free
  4707                           
  4708                           ;main.c: 338: lcd_write(10,2,"Reset");
  4709  001E8A  0E00               	movlw	0
  4710  001E8C  6E35               	movwf	lcd_write@column+1,c
  4711  001E8E  0E0A               	movlw	10
  4712  001E90  6E34               	movwf	lcd_write@column,c
  4713  001E92  0E00               	movlw	0
  4714  001E94  6E37               	movwf	lcd_write@row+1,c
  4715  001E96  0E02               	movlw	2
  4716  001E98  6E36               	movwf	lcd_write@row,c
  4717  001E9A  0EAB               	movlw	low STR_37
  4718  001E9C  6E38               	movwf	lcd_write@string,c
  4719  001E9E  0E0F               	movlw	high STR_37
  4720  001EA0  6E39               	movwf	lcd_write@string+1,c
  4721  001EA2  ECBF  F014         	call	_lcd_write	;wreg free
  4722                           
  4723                           ;main.c: 339: action_submenu_selector_0();
  4724  001EA6  EC87  F012         	call	_action_submenu_selector_0	;wreg free
  4725  001EAA  0012               	return		;funcret
  4726  001EAC                     __end_of_activity_submenu_pin:
  4727                           	opt stack 0
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           prodl	equ	0xFF3
  4733                           intcon	equ	0xFF2
  4734                           postinc0	equ	0xFEE
  4735                           wreg	equ	0xFE8
  4736                           indf1	equ	0xFE7
  4737                           postdec1	equ	0xFE5
  4738                           fsr1h	equ	0xFE2
  4739                           fsr1l	equ	0xFE1
  4740                           indf2	equ	0xFDF
  4741                           fsr2h	equ	0xFDA
  4742                           fsr2l	equ	0xFD9
  4743                           status	equ	0xFD8
  4744                           
  4745 ;; *************** function _activity_submenu_clock *****************
  4746 ;; Defined at:
  4747 ;;		line 321 in file "main.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;		None               void
  4754 ;; Registers used:
  4755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    7
  4768 ;; This function calls:
  4769 ;;		_action_submenu_selector_0
  4770 ;;		_lcd_init
  4771 ;;		_lcd_write
  4772 ;; This function is called by:
  4773 ;;		_button_B_menu
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text30
  4778  001EAC                     __ptext30:
  4779                           	opt stack 0
  4780  001EAC                     _activity_submenu_clock:
  4781                           	opt stack 20
  4782                           
  4783                           ;main.c: 323: activity = 3;
  4784                           
  4785                           ;incstack = 0
  4786  001EAC  0E00               	movlw	0
  4787  001EAE  6E04               	movwf	_activity+1,c
  4788  001EB0  0E03               	movlw	3
  4789  001EB2  6E03               	movwf	_activity,c
  4790                           
  4791                           ;main.c: 324: lcd_init();
  4792  001EB4  EC95  F00D         	call	_lcd_init	;wreg free
  4793                           
  4794                           ;main.c: 325: lcd_write(1,1,"Reloj");
  4795  001EB8  0E00               	movlw	0
  4796  001EBA  6E35               	movwf	lcd_write@column+1,c
  4797  001EBC  0E01               	movlw	1
  4798  001EBE  6E34               	movwf	lcd_write@column,c
  4799  001EC0  0E00               	movlw	0
  4800  001EC2  6E37               	movwf	lcd_write@row+1,c
  4801  001EC4  0E01               	movlw	1
  4802  001EC6  6E36               	movwf	lcd_write@row,c
  4803  001EC8  0EA5               	movlw	low STR_22
  4804  001ECA  6E38               	movwf	lcd_write@string,c
  4805  001ECC  0E0F               	movlw	high STR_22
  4806  001ECE  6E39               	movwf	lcd_write@string+1,c
  4807  001ED0  ECBF  F014         	call	_lcd_write	;wreg free
  4808                           
  4809                           ;main.c: 326: lcd_write(10,1,"Fecha");
  4810  001ED4  0E00               	movlw	0
  4811  001ED6  6E35               	movwf	lcd_write@column+1,c
  4812  001ED8  0E0A               	movlw	10
  4813  001EDA  6E34               	movwf	lcd_write@column,c
  4814  001EDC  0E00               	movlw	0
  4815  001EDE  6E37               	movwf	lcd_write@row+1,c
  4816  001EE0  0E01               	movlw	1
  4817  001EE2  6E36               	movwf	lcd_write@row,c
  4818  001EE4  0E9F               	movlw	low STR_33
  4819  001EE6  6E38               	movwf	lcd_write@string,c
  4820  001EE8  0E0F               	movlw	high STR_33
  4821  001EEA  6E39               	movwf	lcd_write@string+1,c
  4822  001EEC  ECBF  F014         	call	_lcd_write	;wreg free
  4823                           
  4824                           ;main.c: 327: lcd_write(10,2,"Hora");
  4825  001EF0  0E00               	movlw	0
  4826  001EF2  6E35               	movwf	lcd_write@column+1,c
  4827  001EF4  0E0A               	movlw	10
  4828  001EF6  6E34               	movwf	lcd_write@column,c
  4829  001EF8  0E00               	movlw	0
  4830  001EFA  6E37               	movwf	lcd_write@row+1,c
  4831  001EFC  0E02               	movlw	2
  4832  001EFE  6E36               	movwf	lcd_write@row,c
  4833  001F00  0EB6               	movlw	low STR_34
  4834  001F02  6E38               	movwf	lcd_write@string,c
  4835  001F04  0E0F               	movlw	high STR_34
  4836  001F06  6E39               	movwf	lcd_write@string+1,c
  4837  001F08  ECBF  F014         	call	_lcd_write	;wreg free
  4838                           
  4839                           ;main.c: 328: action_submenu_selector_0();
  4840  001F0C  EC87  F012         	call	_action_submenu_selector_0	;wreg free
  4841  001F10  0012               	return		;funcret
  4842  001F12                     __end_of_activity_submenu_clock:
  4843                           	opt stack 0
  4844                           tblptru	equ	0xFF8
  4845                           tblptrh	equ	0xFF7
  4846                           tblptrl	equ	0xFF6
  4847                           tablat	equ	0xFF5
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           indf1	equ	0xFE7
  4853                           postdec1	equ	0xFE5
  4854                           fsr1h	equ	0xFE2
  4855                           fsr1l	equ	0xFE1
  4856                           indf2	equ	0xFDF
  4857                           fsr2h	equ	0xFDA
  4858                           fsr2l	equ	0xFD9
  4859                           status	equ	0xFD8
  4860                           
  4861 ;; *************** function _activity_submenu_alarm *****************
  4862 ;; Defined at:
  4863 ;;		line 353 in file "main.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;		None               void
  4870 ;; Registers used:
  4871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    7
  4884 ;; This function calls:
  4885 ;;		_action_submenu_selector_0
  4886 ;;		_lcd_init
  4887 ;;		_lcd_write
  4888 ;; This function is called by:
  4889 ;;		_button_B_menu
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text31
  4894  001F12                     __ptext31:
  4895                           	opt stack 0
  4896  001F12                     _activity_submenu_alarm:
  4897                           	opt stack 20
  4898                           
  4899                           ;main.c: 355: activity = 6;
  4900                           
  4901                           ;incstack = 0
  4902  001F12  0E00               	movlw	0
  4903  001F14  6E04               	movwf	_activity+1,c
  4904  001F16  0E06               	movlw	6
  4905  001F18  6E03               	movwf	_activity,c
  4906                           
  4907                           ;main.c: 356: lcd_init();
  4908  001F1A  EC95  F00D         	call	_lcd_init	;wreg free
  4909                           
  4910                           ;main.c: 357: lcd_write(1,1,"Alarma");
  4911  001F1E  0E00               	movlw	0
  4912  001F20  6E35               	movwf	lcd_write@column+1,c
  4913  001F22  0E01               	movlw	1
  4914  001F24  6E34               	movwf	lcd_write@column,c
  4915  001F26  0E00               	movlw	0
  4916  001F28  6E37               	movwf	lcd_write@row+1,c
  4917  001F2A  0E01               	movlw	1
  4918  001F2C  6E36               	movwf	lcd_write@row,c
  4919  001F2E  0E98               	movlw	low STR_24
  4920  001F30  6E38               	movwf	lcd_write@string,c
  4921  001F32  0E0F               	movlw	high STR_24
  4922  001F34  6E39               	movwf	lcd_write@string+1,c
  4923  001F36  ECBF  F014         	call	_lcd_write	;wreg free
  4924                           
  4925                           ;main.c: 358: lcd_write(10,1,"Volumen");
  4926  001F3A  0E00               	movlw	0
  4927  001F3C  6E35               	movwf	lcd_write@column+1,c
  4928  001F3E  0E0A               	movlw	10
  4929  001F40  6E34               	movwf	lcd_write@column,c
  4930  001F42  0E00               	movlw	0
  4931  001F44  6E37               	movwf	lcd_write@row+1,c
  4932  001F46  0E01               	movlw	1
  4933  001F48  6E36               	movwf	lcd_write@row,c
  4934  001F4A  0E48               	movlw	low STR_41
  4935  001F4C  6E38               	movwf	lcd_write@string,c
  4936  001F4E  0E0F               	movlw	high STR_41
  4937  001F50  6E39               	movwf	lcd_write@string+1,c
  4938  001F52  ECBF  F014         	call	_lcd_write	;wreg free
  4939                           
  4940                           ;main.c: 359: lcd_write(10,2,"Tono");
  4941  001F56  0E00               	movlw	0
  4942  001F58  6E35               	movwf	lcd_write@column+1,c
  4943  001F5A  0E0A               	movlw	10
  4944  001F5C  6E34               	movwf	lcd_write@column,c
  4945  001F5E  0E00               	movlw	0
  4946  001F60  6E37               	movwf	lcd_write@row+1,c
  4947  001F62  0E02               	movlw	2
  4948  001F64  6E36               	movwf	lcd_write@row,c
  4949  001F66  0EC0               	movlw	low STR_42
  4950  001F68  6E38               	movwf	lcd_write@string,c
  4951  001F6A  0E0F               	movlw	high STR_42
  4952  001F6C  6E39               	movwf	lcd_write@string+1,c
  4953  001F6E  ECBF  F014         	call	_lcd_write	;wreg free
  4954                           
  4955                           ;main.c: 360: action_submenu_selector_0();
  4956  001F72  EC87  F012         	call	_action_submenu_selector_0	;wreg free
  4957  001F76  0012               	return		;funcret
  4958  001F78                     __end_of_activity_submenu_alarm:
  4959                           	opt stack 0
  4960                           tblptru	equ	0xFF8
  4961                           tblptrh	equ	0xFF7
  4962                           tblptrl	equ	0xFF6
  4963                           tablat	equ	0xFF5
  4964                           prodl	equ	0xFF3
  4965                           intcon	equ	0xFF2
  4966                           postinc0	equ	0xFEE
  4967                           wreg	equ	0xFE8
  4968                           indf1	equ	0xFE7
  4969                           postdec1	equ	0xFE5
  4970                           fsr1h	equ	0xFE2
  4971                           fsr1l	equ	0xFE1
  4972                           indf2	equ	0xFDF
  4973                           fsr2h	equ	0xFDA
  4974                           fsr2l	equ	0xFD9
  4975                           status	equ	0xFD8
  4976                           
  4977 ;; *************** function _activity_submenu_activation *****************
  4978 ;; Defined at:
  4979 ;;		line 311 in file "main.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;		None               void
  4986 ;; Registers used:
  4987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;Total ram usage:        0 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    7
  5000 ;; This function calls:
  5001 ;;		_action_submenu_selector_0
  5002 ;;		_lcd_init
  5003 ;;		_lcd_write
  5004 ;; This function is called by:
  5005 ;;		_button_B_menu
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text32
  5010  001F78                     __ptext32:
  5011                           	opt stack 0
  5012  001F78                     _activity_submenu_activation:
  5013                           	opt stack 20
  5014                           
  5015                           ;main.c: 313: activity = 4;
  5016                           
  5017                           ;incstack = 0
  5018  001F78  0E00               	movlw	0
  5019  001F7A  6E04               	movwf	_activity+1,c
  5020  001F7C  0E04               	movlw	4
  5021  001F7E  6E03               	movwf	_activity,c
  5022                           
  5023                           ;main.c: 314: lcd_init();
  5024  001F80  EC95  F00D         	call	_lcd_init	;wreg free
  5025                           
  5026                           ;main.c: 315: lcd_write(1,1,"Activar");
  5027  001F84  0E00               	movlw	0
  5028  001F86  6E35               	movwf	lcd_write@column+1,c
  5029  001F88  0E01               	movlw	1
  5030  001F8A  6E34               	movwf	lcd_write@column,c
  5031  001F8C  0E00               	movlw	0
  5032  001F8E  6E37               	movwf	lcd_write@row+1,c
  5033  001F90  0E01               	movlw	1
  5034  001F92  6E36               	movwf	lcd_write@row,c
  5035  001F94  0E58               	movlw	low STR_21
  5036  001F96  6E38               	movwf	lcd_write@string,c
  5037  001F98  0E0F               	movlw	high STR_21
  5038  001F9A  6E39               	movwf	lcd_write@string+1,c
  5039  001F9C  ECBF  F014         	call	_lcd_write	;wreg free
  5040                           
  5041                           ;main.c: 316: lcd_write(10,1,"Si");
  5042  001FA0  0E00               	movlw	0
  5043  001FA2  6E35               	movwf	lcd_write@column+1,c
  5044  001FA4  0E0A               	movlw	10
  5045  001FA6  6E34               	movwf	lcd_write@column,c
  5046  001FA8  0E00               	movlw	0
  5047  001FAA  6E37               	movwf	lcd_write@row+1,c
  5048  001FAC  0E01               	movlw	1
  5049  001FAE  6E36               	movwf	lcd_write@row,c
  5050  001FB0  0ED7               	movlw	low STR_30
  5051  001FB2  6E38               	movwf	lcd_write@string,c
  5052  001FB4  0E0F               	movlw	high STR_30
  5053  001FB6  6E39               	movwf	lcd_write@string+1,c
  5054  001FB8  ECBF  F014         	call	_lcd_write	;wreg free
  5055                           
  5056                           ;main.c: 317: lcd_write(10,2,"No");
  5057  001FBC  0E00               	movlw	0
  5058  001FBE  6E35               	movwf	lcd_write@column+1,c
  5059  001FC0  0E0A               	movlw	10
  5060  001FC2  6E34               	movwf	lcd_write@column,c
  5061  001FC4  0E00               	movlw	0
  5062  001FC6  6E37               	movwf	lcd_write@row+1,c
  5063  001FC8  0E02               	movlw	2
  5064  001FCA  6E36               	movwf	lcd_write@row,c
  5065  001FCC  0EDA               	movlw	low STR_31
  5066  001FCE  6E38               	movwf	lcd_write@string,c
  5067  001FD0  0E0F               	movlw	high STR_31
  5068  001FD2  6E39               	movwf	lcd_write@string+1,c
  5069  001FD4  ECBF  F014         	call	_lcd_write	;wreg free
  5070                           
  5071                           ;main.c: 318: action_submenu_selector_0();
  5072  001FD8  EC87  F012         	call	_action_submenu_selector_0	;wreg free
  5073  001FDC  0012               	return		;funcret
  5074  001FDE                     __end_of_activity_submenu_activation:
  5075                           	opt stack 0
  5076                           tblptru	equ	0xFF8
  5077                           tblptrh	equ	0xFF7
  5078                           tblptrl	equ	0xFF6
  5079                           tablat	equ	0xFF5
  5080                           prodl	equ	0xFF3
  5081                           intcon	equ	0xFF2
  5082                           postinc0	equ	0xFEE
  5083                           wreg	equ	0xFE8
  5084                           indf1	equ	0xFE7
  5085                           postdec1	equ	0xFE5
  5086                           fsr1h	equ	0xFE2
  5087                           fsr1l	equ	0xFE1
  5088                           indf2	equ	0xFDF
  5089                           fsr2h	equ	0xFDA
  5090                           fsr2l	equ	0xFD9
  5091                           status	equ	0xFD8
  5092                           
  5093 ;; *************** function _button_A *****************
  5094 ;; Defined at:
  5095 ;;		line 403 in file "main.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;		None               void
  5102 ;; Registers used:
  5103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5111 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5113 ;;Total ram usage:        2 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    8
  5116 ;; This function calls:
  5117 ;;		_action_menu_selector
  5118 ;;		_action_submenu_selector
  5119 ;;		_activity_pin
  5120 ;;		_reset_home_callback
  5121 ;; This function is called by:
  5122 ;;		_keyboard_control
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text33
  5127  002658                     __ptext33:
  5128                           	opt stack 0
  5129  002658                     _button_A:
  5130                           	opt stack 21
  5131                           
  5132                           ;main.c: 405: reset_home_callback();
  5133                           
  5134                           ;incstack = 0
  5135  002658  EC02  F015         	call	_reset_home_callback	;wreg free
  5136                           
  5137                           ;main.c: 407: switch(activity){
  5138  00265C  D009               	goto	l3621
  5139  00265E                     l3613:
  5140                           
  5141                           ;main.c: 410: activity_pin();
  5142  00265E  EC42  F011         	call	_activity_pin	;wreg free
  5143                           
  5144                           ;main.c: 414: break;
  5145                           
  5146                           ;main.c: 413: case 1:
  5147                           
  5148                           ;main.c: 411: break;
  5149  002662  0012               	return	
  5150  002664                     l3615:
  5151                           
  5152                           ;main.c: 417: action_menu_selector();
  5153  002664  ECFD  F011         	call	_action_menu_selector	;wreg free
  5154                           
  5155                           ;main.c: 418: break;
  5156  002668  0012               	return	
  5157  00266A                     l3617:
  5158                           
  5159                           ;main.c: 421: action_submenu_selector();
  5160  00266A  EC07  F014         	call	_action_submenu_selector	;wreg free
  5161                           
  5162                           ;main.c: 423: }
  5163                           
  5164                           ;main.c: 422: break;
  5165  00266E  0012               	return	
  5166  002670                     l3621:
  5167  002670  C003  F03C         	movff	_activity,??_button_A
  5168  002674  C004  F03D         	movff	_activity+1,??_button_A+1
  5169                           
  5170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5171                           ; Switch size 1, requested type "space"
  5172                           ; Number of cases is 1, Range of values is 0 to 0
  5173                           ; switch strategies available:
  5174                           ; Name         Instructions Cycles
  5175                           ; simple_byte            4     3 (average)
  5176                           ;	Chosen strategy is simple_byte
  5177  002678  503D               	movf	??_button_A+1,w,c
  5178  00267A  0A00               	xorlw	0	; case 0
  5179  00267C  A4D8               	btfss	status,2,c
  5180  00267E  D7F5               	goto	l3617
  5181                           
  5182                           ; Switch size 1, requested type "space"
  5183                           ; Number of cases is 3, Range of values is 0 to 2
  5184                           ; switch strategies available:
  5185                           ; Name         Instructions Cycles
  5186                           ; simple_byte           10     6 (average)
  5187                           ;	Chosen strategy is simple_byte
  5188  002680  503C               	movf	??_button_A,w,c
  5189  002682  0A00               	xorlw	0	; case 0
  5190  002684  B4D8               	btfsc	status,2,c
  5191  002686  D7EB               	goto	l3613
  5192  002688  0A01               	xorlw	1	; case 1
  5193  00268A  B4D8               	btfsc	status,2,c
  5194  00268C  0012               	return	
  5195  00268E  0A03               	xorlw	3	; case 2
  5196  002690  B4D8               	btfsc	status,2,c
  5197  002692  D7E8               	goto	l3615
  5198  002694  D7EA               	goto	l3617
  5199  002696  0012               	return		;funcret
  5200  002698                     __end_of_button_A:
  5201                           	opt stack 0
  5202                           tblptru	equ	0xFF8
  5203                           tblptrh	equ	0xFF7
  5204                           tblptrl	equ	0xFF6
  5205                           tablat	equ	0xFF5
  5206                           prodl	equ	0xFF3
  5207                           intcon	equ	0xFF2
  5208                           postinc0	equ	0xFEE
  5209                           wreg	equ	0xFE8
  5210                           indf1	equ	0xFE7
  5211                           postdec1	equ	0xFE5
  5212                           fsr1h	equ	0xFE2
  5213                           fsr1l	equ	0xFE1
  5214                           indf2	equ	0xFDF
  5215                           fsr2h	equ	0xFDA
  5216                           fsr2l	equ	0xFD9
  5217                           status	equ	0xFD8
  5218                           
  5219 ;; *************** function _activity_pin *****************
  5220 ;; Defined at:
  5221 ;;		line 262 in file "main.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;		None
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;		None               void
  5228 ;; Registers used:
  5229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5239 ;;Total ram usage:        0 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    6
  5242 ;; This function calls:
  5243 ;;		_lcd_comand
  5244 ;;		_lcd_gotoxy
  5245 ;;		_lcd_init
  5246 ;;		_lcd_write
  5247 ;;		_strcpy
  5248 ;; This function is called by:
  5249 ;;		_pin_input_validator
  5250 ;;		_button_A
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text34
  5255  002284                     __ptext34:
  5256                           	opt stack 0
  5257  002284                     _activity_pin:
  5258                           	opt stack 21
  5259                           
  5260                           ;main.c: 264: activity = 1;
  5261                           
  5262                           ;incstack = 0
  5263  002284  0E00               	movlw	0
  5264  002286  6E04               	movwf	_activity+1,c
  5265  002288  0E01               	movlw	1
  5266  00228A  6E03               	movwf	_activity,c
  5267                           
  5268                           ;main.c: 265: strcpy(pin_input, "");
  5269  00228C  0E99               	movlw	low _pin_input
  5270  00228E  6E2A               	movwf	strcpy@to,c
  5271  002290  0E00               	movlw	high _pin_input
  5272  002292  6E2B               	movwf	strcpy@to+1,c
  5273  002294  0EDE               	movlw	low (STR_11+1)
  5274  002296  6E2C               	movwf	strcpy@from,c
  5275  002298  0E0F               	movlw	high (STR_11+1)
  5276  00229A  6E2D               	movwf	strcpy@from+1,c
  5277  00229C  EC21  F012         	call	_strcpy	;wreg free
  5278                           
  5279                           ;main.c: 266: lcd_init();
  5280  0022A0  EC95  F00D         	call	_lcd_init	;wreg free
  5281                           
  5282                           ;main.c: 267: lcd_write(1,1,"Ingrese su PIN:");
  5283  0022A4  0E00               	movlw	0
  5284  0022A6  6E35               	movwf	lcd_write@column+1,c
  5285  0022A8  0E01               	movlw	1
  5286  0022AA  6E34               	movwf	lcd_write@column,c
  5287  0022AC  0E00               	movlw	0
  5288  0022AE  6E37               	movwf	lcd_write@row+1,c
  5289  0022B0  0E01               	movlw	1
  5290  0022B2  6E36               	movwf	lcd_write@row,c
  5291  0022B4  0E0F               	movlw	low STR_20
  5292  0022B6  6E38               	movwf	lcd_write@string,c
  5293  0022B8  0E0F               	movlw	high STR_20
  5294  0022BA  6E39               	movwf	lcd_write@string+1,c
  5295  0022BC  ECBF  F014         	call	_lcd_write	;wreg free
  5296                           
  5297                           ;main.c: 268: lcd_gotoxy(1,2);
  5298  0022C0  0E02               	movlw	2
  5299  0022C2  6E2E               	movwf	lcd_gotoxy@y,c
  5300  0022C4  0E01               	movlw	1
  5301  0022C6  EC70  F014         	call	_lcd_gotoxy
  5302                           
  5303                           ;main.c: 269: lcd_comand(0b00001111);
  5304  0022CA  0E0F               	movlw	15
  5305  0022CC  ECF1  F014         	call	_lcd_comand
  5306  0022D0  0012               	return		;funcret
  5307  0022D2                     __end_of_activity_pin:
  5308                           	opt stack 0
  5309                           tblptru	equ	0xFF8
  5310                           tblptrh	equ	0xFF7
  5311                           tblptrl	equ	0xFF6
  5312                           tablat	equ	0xFF5
  5313                           prodl	equ	0xFF3
  5314                           intcon	equ	0xFF2
  5315                           postinc0	equ	0xFEE
  5316                           wreg	equ	0xFE8
  5317                           indf1	equ	0xFE7
  5318                           postdec1	equ	0xFE5
  5319                           fsr1h	equ	0xFE2
  5320                           fsr1l	equ	0xFE1
  5321                           indf2	equ	0xFDF
  5322                           fsr2h	equ	0xFDA
  5323                           fsr2l	equ	0xFD9
  5324                           status	equ	0xFD8
  5325                           
  5326 ;; *************** function _strcpy *****************
  5327 ;; Defined at:
  5328 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  to              2    0[COMRAM] PTR unsigned char 
  5331 ;;		 -> pin_input(5), pin(5), 
  5332 ;;  from            2    2[COMRAM] PTR const unsigned char 
  5333 ;;		 -> STR_38(1), STR_19(1), pin_input(5), STR_1(5), 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  cp              2    4[COMRAM] PTR unsigned char 
  5336 ;;		 -> pin_input(5), pin(5), 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  2    0[COMRAM] PTR unsigned char 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;Total ram usage:        6 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_reset_pin
  5356 ;;		_activity_pin
  5357 ;;		_activity_submenu_pin_set
  5358 ;;		_pin_set
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text35
  5363  002442                     __ptext35:
  5364                           	opt stack 0
  5365  002442                     _strcpy:
  5366                           	opt stack 28
  5367                           
  5368                           ;incstack = 0
  5369  002442  C02A  F02E         	movff	strcpy@to,strcpy@cp
  5370  002446  C02B  F02F         	movff	strcpy@to+1,strcpy@cp+1
  5371  00244A  D005               	goto	l2791
  5372  00244C                     l2789:
  5373  00244C  4A2E               	infsnz	strcpy@cp,f,c
  5374  00244E  2A2F               	incf	strcpy@cp+1,f,c
  5375  002450  4A2C               	infsnz	strcpy@from,f,c
  5376  002452  2A2D               	incf	strcpy@from+1,f,c
  5377  002454  D000               	goto	l2791
  5378  002456                     l2791:
  5379  002456  C02C  FFF6         	movff	strcpy@from,tblptrl
  5380  00245A  C02D  FFF7         	movff	strcpy@from+1,tblptrh
  5381  00245E  6AF8               	clrf	tblptru,c
  5382  002460  C02E  FFD9         	movff	strcpy@cp,fsr2l
  5383  002464  C02F  FFDA         	movff	strcpy@cp+1,fsr2h
  5384  002468  0E0E               	movlw	(high __ramtop+-1)
  5385  00246A  64F7               	cpfsgt	tblptrh,c
  5386  00246C  D003               	bra	u1427
  5387  00246E  0008               	tblrd		*
  5388  002470  50F5               	movf	tablat,w,c
  5389  002472  D005               	bra	u1420
  5390  002474                     u1427:
  5391  002474  CFF6 FFE9          	movff	tblptrl,fsr0l
  5392  002478  CFF7 FFEA          	movff	tblptrh,fsr0h
  5393  00247C  50EF               	movf	indf0,w,c
  5394  00247E                     u1420:
  5395  00247E  6EDF               	movwf	indf2,c
  5396  002480  50DF               	movf	indf2,w,c
  5397  002482  A4D8               	btfss	status,2,c
  5398  002484  D7E3               	goto	l2789
  5399                           
  5400                           ;	Return value of _strcpy is never used
  5401  002486  0012               	return		;funcret
  5402  002488                     __end_of_strcpy:
  5403                           	opt stack 0
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodl	equ	0xFF3
  5409                           intcon	equ	0xFF2
  5410                           indf0	equ	0xFEF
  5411                           postinc0	equ	0xFEE
  5412                           fsr0h	equ	0xFEA
  5413                           fsr0l	equ	0xFE9
  5414                           wreg	equ	0xFE8
  5415                           indf1	equ	0xFE7
  5416                           postdec1	equ	0xFE5
  5417                           fsr1h	equ	0xFE2
  5418                           fsr1l	equ	0xFE1
  5419                           indf2	equ	0xFDF
  5420                           fsr2h	equ	0xFDA
  5421                           fsr2l	equ	0xFD9
  5422                           status	equ	0xFD8
  5423                           
  5424 ;; *************** function _lcd_comand *****************
  5425 ;; Defined at:
  5426 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  d               1    wreg     unsigned char 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  d               1    4[COMRAM] unsigned char 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;		None               void
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0, cstack
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5443 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5444 ;;Total ram usage:        1 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    2
  5447 ;; This function calls:
  5448 ;;		_lcd_send_byte
  5449 ;; This function is called by:
  5450 ;;		_setup
  5451 ;;		_activity_pin
  5452 ;;		_activity_submenu_pin_set
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           	psect	text36
  5457  0029E2                     __ptext36:
  5458                           	opt stack 0
  5459  0029E2                     _lcd_comand:
  5460                           	opt stack 27
  5461                           
  5462                           ;incstack = 0
  5463                           ;lcd_comand@d stored from wreg
  5464  0029E2  6E2E               	movwf	lcd_comand@d,c
  5465                           
  5466                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  5467  0029E4  C02E  F02C         	movff	lcd_comand@d,lcd_send_byte@n
  5468  0029E8  0E00               	movlw	0
  5469  0029EA  ECD6  F013         	call	_lcd_send_byte
  5470  0029EE  0012               	return		;funcret
  5471  0029F0                     __end_of_lcd_comand:
  5472                           	opt stack 0
  5473                           tblptru	equ	0xFF8
  5474                           tblptrh	equ	0xFF7
  5475                           tblptrl	equ	0xFF6
  5476                           tablat	equ	0xFF5
  5477                           prodl	equ	0xFF3
  5478                           intcon	equ	0xFF2
  5479                           indf0	equ	0xFEF
  5480                           postinc0	equ	0xFEE
  5481                           fsr0h	equ	0xFEA
  5482                           fsr0l	equ	0xFE9
  5483                           wreg	equ	0xFE8
  5484                           indf1	equ	0xFE7
  5485                           postdec1	equ	0xFE5
  5486                           fsr1h	equ	0xFE2
  5487                           fsr1l	equ	0xFE1
  5488                           indf2	equ	0xFDF
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function _action_submenu_selector *****************
  5494 ;; Defined at:
  5495 ;;		line 296 in file "main.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;		None
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;		None               void
  5502 ;; Registers used:
  5503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5513 ;;Total ram usage:        2 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    7
  5516 ;; This function calls:
  5517 ;;		_action_submenu_selector_0
  5518 ;;		_action_submenu_selector_1
  5519 ;; This function is called by:
  5520 ;;		_button_A
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text37
  5525  00280E                     __ptext37:
  5526                           	opt stack 0
  5527  00280E                     _action_submenu_selector:
  5528                           	opt stack 21
  5529                           
  5530                           ;main.c: 298: switch(submenu_selected){
  5531                           
  5532                           ;incstack = 0
  5533  00280E  D006               	goto	l3311
  5534  002810                     l3305:
  5535                           
  5536                           ;main.c: 301: action_submenu_selector_1();
  5537  002810  EC66  F012         	call	_action_submenu_selector_1	;wreg free
  5538                           
  5539                           ;main.c: 302: break;
  5540  002814  0012               	return	
  5541  002816                     l3307:
  5542                           
  5543                           ;main.c: 305: action_submenu_selector_0();
  5544  002816  EC87  F012         	call	_action_submenu_selector_0	;wreg free
  5545                           
  5546                           ;main.c: 307: }
  5547                           
  5548                           ;main.c: 306: break;
  5549  00281A  0012               	return	
  5550  00281C                     l3311:
  5551  00281C  C01F  F03A         	movff	_submenu_selected,??_action_submenu_selector
  5552  002820  C020  F03B         	movff	_submenu_selected+1,??_action_submenu_selector+1
  5553                           
  5554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5555                           ; Switch size 1, requested type "space"
  5556                           ; Number of cases is 1, Range of values is 0 to 0
  5557                           ; switch strategies available:
  5558                           ; Name         Instructions Cycles
  5559                           ; simple_byte            4     3 (average)
  5560                           ;	Chosen strategy is simple_byte
  5561  002824  503B               	movf	??_action_submenu_selector+1,w,c
  5562  002826  0A00               	xorlw	0	; case 0
  5563  002828  A4D8               	btfss	status,2,c
  5564  00282A  0012               	return	
  5565                           
  5566                           ; Switch size 1, requested type "space"
  5567                           ; Number of cases is 2, Range of values is 0 to 1
  5568                           ; switch strategies available:
  5569                           ; Name         Instructions Cycles
  5570                           ; simple_byte            7     4 (average)
  5571                           ;	Chosen strategy is simple_byte
  5572  00282C  503A               	movf	??_action_submenu_selector,w,c
  5573  00282E  0A00               	xorlw	0	; case 0
  5574  002830  B4D8               	btfsc	status,2,c
  5575  002832  D7EE               	goto	l3305
  5576  002834  0A01               	xorlw	1	; case 1
  5577  002836  A4D8               	btfss	status,2,c
  5578  002838  0012               	return	
  5579  00283A  D7ED               	goto	l3307
  5580  00283C  0012               	return		;funcret
  5581  00283E                     __end_of_action_submenu_selector:
  5582                           	opt stack 0
  5583                           tblptru	equ	0xFF8
  5584                           tblptrh	equ	0xFF7
  5585                           tblptrl	equ	0xFF6
  5586                           tablat	equ	0xFF5
  5587                           prodl	equ	0xFF3
  5588                           intcon	equ	0xFF2
  5589                           indf0	equ	0xFEF
  5590                           postinc0	equ	0xFEE
  5591                           fsr0h	equ	0xFEA
  5592                           fsr0l	equ	0xFE9
  5593                           wreg	equ	0xFE8
  5594                           indf1	equ	0xFE7
  5595                           postdec1	equ	0xFE5
  5596                           fsr1h	equ	0xFE2
  5597                           fsr1l	equ	0xFE1
  5598                           indf2	equ	0xFDF
  5599                           fsr2h	equ	0xFDA
  5600                           fsr2l	equ	0xFD9
  5601                           status	equ	0xFD8
  5602                           
  5603 ;; *************** function _action_submenu_selector_1 *****************
  5604 ;; Defined at:
  5605 ;;		line 290 in file "main.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;		None               void
  5612 ;; Registers used:
  5613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    6
  5626 ;; This function calls:
  5627 ;;		_lcd_write
  5628 ;; This function is called by:
  5629 ;;		_action_submenu_selector
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text38
  5634  0024CC                     __ptext38:
  5635                           	opt stack 0
  5636  0024CC                     _action_submenu_selector_1:
  5637                           	opt stack 21
  5638                           
  5639                           ;main.c: 291: lcd_write(9,2,">");
  5640                           
  5641                           ;incstack = 0
  5642  0024CC  0E00               	movlw	0
  5643  0024CE  6E35               	movwf	lcd_write@column+1,c
  5644  0024D0  0E09               	movlw	9
  5645  0024D2  6E34               	movwf	lcd_write@column,c
  5646  0024D4  0E00               	movlw	0
  5647  0024D6  6E37               	movwf	lcd_write@row+1,c
  5648  0024D8  0E02               	movlw	2
  5649  0024DA  6E36               	movwf	lcd_write@row,c
  5650  0024DC  0EE1               	movlw	low STR_10
  5651  0024DE  6E38               	movwf	lcd_write@string,c
  5652  0024E0  0E0F               	movlw	high STR_10
  5653  0024E2  6E39               	movwf	lcd_write@string+1,c
  5654  0024E4  ECBF  F014         	call	_lcd_write	;wreg free
  5655                           
  5656                           ;main.c: 292: submenu_selected = 1;
  5657  0024E8  0E00               	movlw	0
  5658  0024EA  6E20               	movwf	_submenu_selected+1,c
  5659  0024EC  0E01               	movlw	1
  5660  0024EE  6E1F               	movwf	_submenu_selected,c
  5661                           
  5662                           ;main.c: 293: lcd_write(9,1," ");
  5663  0024F0  0E00               	movlw	0
  5664  0024F2  6E35               	movwf	lcd_write@column+1,c
  5665  0024F4  0E09               	movlw	9
  5666  0024F6  6E34               	movwf	lcd_write@column,c
  5667  0024F8  0E00               	movlw	0
  5668  0024FA  6E37               	movwf	lcd_write@row+1,c
  5669  0024FC  0E01               	movlw	1
  5670  0024FE  6E36               	movwf	lcd_write@row,c
  5671  002500  0EDD               	movlw	low STR_11
  5672  002502  6E38               	movwf	lcd_write@string,c
  5673  002504  0E0F               	movlw	high STR_11
  5674  002506  6E39               	movwf	lcd_write@string+1,c
  5675  002508  ECBF  F014         	call	_lcd_write	;wreg free
  5676  00250C  0012               	return		;funcret
  5677  00250E                     __end_of_action_submenu_selector_1:
  5678                           	opt stack 0
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           prodl	equ	0xFF3
  5684                           intcon	equ	0xFF2
  5685                           indf0	equ	0xFEF
  5686                           postinc0	equ	0xFEE
  5687                           fsr0h	equ	0xFEA
  5688                           fsr0l	equ	0xFE9
  5689                           wreg	equ	0xFE8
  5690                           indf1	equ	0xFE7
  5691                           postdec1	equ	0xFE5
  5692                           fsr1h	equ	0xFE2
  5693                           fsr1l	equ	0xFE1
  5694                           indf2	equ	0xFDF
  5695                           fsr2h	equ	0xFDA
  5696                           fsr2l	equ	0xFD9
  5697                           status	equ	0xFD8
  5698                           
  5699 ;; *************** function _action_submenu_selector_0 *****************
  5700 ;; Defined at:
  5701 ;;		line 284 in file "main.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;		None               void
  5708 ;; Registers used:
  5709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    6
  5722 ;; This function calls:
  5723 ;;		_lcd_write
  5724 ;; This function is called by:
  5725 ;;		_action_submenu_selector
  5726 ;;		_activity_submenu_activation
  5727 ;;		_activity_submenu_clock
  5728 ;;		_activity_submenu_pin
  5729 ;;		_activity_submenu_alarm
  5730 ;;		_activity_submenu_alarm_volume
  5731 ;;		_activity_submenu_alarm_tone
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text39
  5736  00250E                     __ptext39:
  5737                           	opt stack 0
  5738  00250E                     _action_submenu_selector_0:
  5739                           	opt stack 20
  5740                           
  5741                           ;main.c: 285: lcd_write(9,1,">");
  5742                           
  5743                           ;incstack = 0
  5744  00250E  0E00               	movlw	0
  5745  002510  6E35               	movwf	lcd_write@column+1,c
  5746  002512  0E09               	movlw	9
  5747  002514  6E34               	movwf	lcd_write@column,c
  5748  002516  0E00               	movlw	0
  5749  002518  6E37               	movwf	lcd_write@row+1,c
  5750  00251A  0E01               	movlw	1
  5751  00251C  6E36               	movwf	lcd_write@row,c
  5752  00251E  0EE1               	movlw	low STR_10
  5753  002520  6E38               	movwf	lcd_write@string,c
  5754  002522  0E0F               	movlw	high STR_10
  5755  002524  6E39               	movwf	lcd_write@string+1,c
  5756  002526  ECBF  F014         	call	_lcd_write	;wreg free
  5757                           
  5758                           ;main.c: 286: submenu_selected = 0;
  5759  00252A  0E00               	movlw	0
  5760  00252C  6E20               	movwf	_submenu_selected+1,c
  5761  00252E  0E00               	movlw	0
  5762  002530  6E1F               	movwf	_submenu_selected,c
  5763                           
  5764                           ;main.c: 287: lcd_write(9,2," ");
  5765  002532  0E00               	movlw	0
  5766  002534  6E35               	movwf	lcd_write@column+1,c
  5767  002536  0E09               	movlw	9
  5768  002538  6E34               	movwf	lcd_write@column,c
  5769  00253A  0E00               	movlw	0
  5770  00253C  6E37               	movwf	lcd_write@row+1,c
  5771  00253E  0E02               	movlw	2
  5772  002540  6E36               	movwf	lcd_write@row,c
  5773  002542  0EDD               	movlw	low STR_11
  5774  002544  6E38               	movwf	lcd_write@string,c
  5775  002546  0E0F               	movlw	high STR_11
  5776  002548  6E39               	movwf	lcd_write@string+1,c
  5777  00254A  ECBF  F014         	call	_lcd_write	;wreg free
  5778  00254E  0012               	return		;funcret
  5779  002550                     __end_of_action_submenu_selector_0:
  5780                           	opt stack 0
  5781                           tblptru	equ	0xFF8
  5782                           tblptrh	equ	0xFF7
  5783                           tblptrl	equ	0xFF6
  5784                           tablat	equ	0xFF5
  5785                           prodl	equ	0xFF3
  5786                           intcon	equ	0xFF2
  5787                           indf0	equ	0xFEF
  5788                           postinc0	equ	0xFEE
  5789                           fsr0h	equ	0xFEA
  5790                           fsr0l	equ	0xFE9
  5791                           wreg	equ	0xFE8
  5792                           indf1	equ	0xFE7
  5793                           postdec1	equ	0xFE5
  5794                           fsr1h	equ	0xFE2
  5795                           fsr1l	equ	0xFE1
  5796                           indf2	equ	0xFDF
  5797                           fsr2h	equ	0xFDA
  5798                           fsr2l	equ	0xFD9
  5799                           status	equ	0xFD8
  5800                           
  5801 ;; *************** function _action_menu_selector *****************
  5802 ;; Defined at:
  5803 ;;		line 230 in file "main.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;		None               void
  5810 ;; Registers used:
  5811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5819 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5821 ;;Total ram usage:        2 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    7
  5824 ;; This function calls:
  5825 ;;		_action_menu_selector_0
  5826 ;;		_action_menu_selector_1
  5827 ;;		_action_menu_selector_2
  5828 ;;		_action_menu_selector_3
  5829 ;; This function is called by:
  5830 ;;		_button_A
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text40
  5835  0023FA                     __ptext40:
  5836                           	opt stack 0
  5837  0023FA                     _action_menu_selector:
  5838                           	opt stack 21
  5839                           
  5840                           ;main.c: 232: switch(menu_selected){
  5841                           
  5842                           ;incstack = 0
  5843  0023FA  D00C               	goto	l3297
  5844  0023FC                     l3287:
  5845                           
  5846                           ;main.c: 235: action_menu_selector_1();
  5847  0023FC  ECEA  F012         	call	_action_menu_selector_1	;wreg free
  5848                           
  5849                           ;main.c: 236: break;
  5850  002400  0012               	return	
  5851  002402                     l3289:
  5852                           
  5853                           ;main.c: 239: action_menu_selector_2();
  5854  002402  ECC9  F012         	call	_action_menu_selector_2	;wreg free
  5855                           
  5856                           ;main.c: 240: break;
  5857  002406  0012               	return	
  5858  002408                     l3291:
  5859                           
  5860                           ;main.c: 243: action_menu_selector_3();
  5861  002408  ECA8  F012         	call	_action_menu_selector_3	;wreg free
  5862                           
  5863                           ;main.c: 244: break;
  5864  00240C  0012               	return	
  5865  00240E                     l3293:
  5866                           
  5867                           ;main.c: 247: action_menu_selector_0();
  5868  00240E  EC0B  F013         	call	_action_menu_selector_0	;wreg free
  5869                           
  5870                           ;main.c: 250: }
  5871                           
  5872                           ;main.c: 248: break;
  5873  002412  0012               	return	
  5874  002414                     l3297:
  5875  002414  C017  F03A         	movff	_menu_selected,??_action_menu_selector
  5876  002418  C018  F03B         	movff	_menu_selected+1,??_action_menu_selector+1
  5877                           
  5878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5879                           ; Switch size 1, requested type "space"
  5880                           ; Number of cases is 1, Range of values is 0 to 0
  5881                           ; switch strategies available:
  5882                           ; Name         Instructions Cycles
  5883                           ; simple_byte            4     3 (average)
  5884                           ;	Chosen strategy is simple_byte
  5885  00241C  503B               	movf	??_action_menu_selector+1,w,c
  5886  00241E  0A00               	xorlw	0	; case 0
  5887  002420  A4D8               	btfss	status,2,c
  5888  002422  0012               	return	
  5889                           
  5890                           ; Switch size 1, requested type "space"
  5891                           ; Number of cases is 4, Range of values is 0 to 3
  5892                           ; switch strategies available:
  5893                           ; Name         Instructions Cycles
  5894                           ; simple_byte           13     7 (average)
  5895                           ;	Chosen strategy is simple_byte
  5896  002424  503A               	movf	??_action_menu_selector,w,c
  5897  002426  0A00               	xorlw	0	; case 0
  5898  002428  B4D8               	btfsc	status,2,c
  5899  00242A  D7E8               	goto	l3287
  5900  00242C  0A01               	xorlw	1	; case 1
  5901  00242E  B4D8               	btfsc	status,2,c
  5902  002430  D7E8               	goto	l3289
  5903  002432  0A03               	xorlw	3	; case 2
  5904  002434  B4D8               	btfsc	status,2,c
  5905  002436  D7E8               	goto	l3291
  5906  002438  0A01               	xorlw	1	; case 3
  5907  00243A  A4D8               	btfss	status,2,c
  5908  00243C  0012               	return	
  5909  00243E  D7E7               	goto	l3293
  5910  002440  0012               	return		;funcret
  5911  002442                     __end_of_action_menu_selector:
  5912                           	opt stack 0
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           prodl	equ	0xFF3
  5918                           intcon	equ	0xFF2
  5919                           indf0	equ	0xFEF
  5920                           postinc0	equ	0xFEE
  5921                           fsr0h	equ	0xFEA
  5922                           fsr0l	equ	0xFE9
  5923                           wreg	equ	0xFE8
  5924                           indf1	equ	0xFE7
  5925                           postdec1	equ	0xFE5
  5926                           fsr1h	equ	0xFE2
  5927                           fsr1l	equ	0xFE1
  5928                           indf2	equ	0xFDF
  5929                           fsr2h	equ	0xFDA
  5930                           fsr2l	equ	0xFD9
  5931                           status	equ	0xFD8
  5932                           
  5933 ;; *************** function _action_menu_selector_3 *****************
  5934 ;; Defined at:
  5935 ;;		line 224 in file "main.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;		None
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;		None               void
  5942 ;; Registers used:
  5943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    6
  5956 ;; This function calls:
  5957 ;;		_lcd_write
  5958 ;; This function is called by:
  5959 ;;		_action_menu_selector
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text41
  5964  002550                     __ptext41:
  5965                           	opt stack 0
  5966  002550                     _action_menu_selector_3:
  5967                           	opt stack 21
  5968                           
  5969                           ;main.c: 225: lcd_write(9,2,">");
  5970                           
  5971                           ;incstack = 0
  5972  002550  0E00               	movlw	0
  5973  002552  6E35               	movwf	lcd_write@column+1,c
  5974  002554  0E09               	movlw	9
  5975  002556  6E34               	movwf	lcd_write@column,c
  5976  002558  0E00               	movlw	0
  5977  00255A  6E37               	movwf	lcd_write@row+1,c
  5978  00255C  0E02               	movlw	2
  5979  00255E  6E36               	movwf	lcd_write@row,c
  5980  002560  0EE1               	movlw	low STR_10
  5981  002562  6E38               	movwf	lcd_write@string,c
  5982  002564  0E0F               	movlw	high STR_10
  5983  002566  6E39               	movwf	lcd_write@string+1,c
  5984  002568  ECBF  F014         	call	_lcd_write	;wreg free
  5985                           
  5986                           ;main.c: 226: menu_selected = 3;
  5987  00256C  0E00               	movlw	0
  5988  00256E  6E18               	movwf	_menu_selected+1,c
  5989  002570  0E03               	movlw	3
  5990  002572  6E17               	movwf	_menu_selected,c
  5991                           
  5992                           ;main.c: 227: lcd_write(9,1," ");
  5993  002574  0E00               	movlw	0
  5994  002576  6E35               	movwf	lcd_write@column+1,c
  5995  002578  0E09               	movlw	9
  5996  00257A  6E34               	movwf	lcd_write@column,c
  5997  00257C  0E00               	movlw	0
  5998  00257E  6E37               	movwf	lcd_write@row+1,c
  5999  002580  0E01               	movlw	1
  6000  002582  6E36               	movwf	lcd_write@row,c
  6001  002584  0EDD               	movlw	low STR_11
  6002  002586  6E38               	movwf	lcd_write@string,c
  6003  002588  0E0F               	movlw	high STR_11
  6004  00258A  6E39               	movwf	lcd_write@string+1,c
  6005  00258C  ECBF  F014         	call	_lcd_write	;wreg free
  6006  002590  0012               	return		;funcret
  6007  002592                     __end_of_action_menu_selector_3:
  6008                           	opt stack 0
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodl	equ	0xFF3
  6014                           intcon	equ	0xFF2
  6015                           indf0	equ	0xFEF
  6016                           postinc0	equ	0xFEE
  6017                           fsr0h	equ	0xFEA
  6018                           fsr0l	equ	0xFE9
  6019                           wreg	equ	0xFE8
  6020                           indf1	equ	0xFE7
  6021                           postdec1	equ	0xFE5
  6022                           fsr1h	equ	0xFE2
  6023                           fsr1l	equ	0xFE1
  6024                           indf2	equ	0xFDF
  6025                           fsr2h	equ	0xFDA
  6026                           fsr2l	equ	0xFD9
  6027                           status	equ	0xFD8
  6028                           
  6029 ;; *************** function _action_menu_selector_2 *****************
  6030 ;; Defined at:
  6031 ;;		line 218 in file "main.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;		None               void
  6038 ;; Registers used:
  6039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    6
  6052 ;; This function calls:
  6053 ;;		_lcd_write
  6054 ;; This function is called by:
  6055 ;;		_action_menu_selector
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text42
  6060  002592                     __ptext42:
  6061                           	opt stack 0
  6062  002592                     _action_menu_selector_2:
  6063                           	opt stack 21
  6064                           
  6065                           ;main.c: 219: lcd_write(9,1,">");
  6066                           
  6067                           ;incstack = 0
  6068  002592  0E00               	movlw	0
  6069  002594  6E35               	movwf	lcd_write@column+1,c
  6070  002596  0E09               	movlw	9
  6071  002598  6E34               	movwf	lcd_write@column,c
  6072  00259A  0E00               	movlw	0
  6073  00259C  6E37               	movwf	lcd_write@row+1,c
  6074  00259E  0E01               	movlw	1
  6075  0025A0  6E36               	movwf	lcd_write@row,c
  6076  0025A2  0EE1               	movlw	low STR_10
  6077  0025A4  6E38               	movwf	lcd_write@string,c
  6078  0025A6  0E0F               	movlw	high STR_10
  6079  0025A8  6E39               	movwf	lcd_write@string+1,c
  6080  0025AA  ECBF  F014         	call	_lcd_write	;wreg free
  6081                           
  6082                           ;main.c: 220: menu_selected = 2;
  6083  0025AE  0E00               	movlw	0
  6084  0025B0  6E18               	movwf	_menu_selected+1,c
  6085  0025B2  0E02               	movlw	2
  6086  0025B4  6E17               	movwf	_menu_selected,c
  6087                           
  6088                           ;main.c: 221: lcd_write(1,2," ");
  6089  0025B6  0E00               	movlw	0
  6090  0025B8  6E35               	movwf	lcd_write@column+1,c
  6091  0025BA  0E01               	movlw	1
  6092  0025BC  6E34               	movwf	lcd_write@column,c
  6093  0025BE  0E00               	movlw	0
  6094  0025C0  6E37               	movwf	lcd_write@row+1,c
  6095  0025C2  0E02               	movlw	2
  6096  0025C4  6E36               	movwf	lcd_write@row,c
  6097  0025C6  0EDD               	movlw	low STR_11
  6098  0025C8  6E38               	movwf	lcd_write@string,c
  6099  0025CA  0E0F               	movlw	high STR_11
  6100  0025CC  6E39               	movwf	lcd_write@string+1,c
  6101  0025CE  ECBF  F014         	call	_lcd_write	;wreg free
  6102  0025D2  0012               	return		;funcret
  6103  0025D4                     __end_of_action_menu_selector_2:
  6104                           	opt stack 0
  6105                           tblptru	equ	0xFF8
  6106                           tblptrh	equ	0xFF7
  6107                           tblptrl	equ	0xFF6
  6108                           tablat	equ	0xFF5
  6109                           prodl	equ	0xFF3
  6110                           intcon	equ	0xFF2
  6111                           indf0	equ	0xFEF
  6112                           postinc0	equ	0xFEE
  6113                           fsr0h	equ	0xFEA
  6114                           fsr0l	equ	0xFE9
  6115                           wreg	equ	0xFE8
  6116                           indf1	equ	0xFE7
  6117                           postdec1	equ	0xFE5
  6118                           fsr1h	equ	0xFE2
  6119                           fsr1l	equ	0xFE1
  6120                           indf2	equ	0xFDF
  6121                           fsr2h	equ	0xFDA
  6122                           fsr2l	equ	0xFD9
  6123                           status	equ	0xFD8
  6124                           
  6125 ;; *************** function _action_menu_selector_1 *****************
  6126 ;; Defined at:
  6127 ;;		line 212 in file "main.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;		None               void
  6134 ;; Registers used:
  6135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    6
  6148 ;; This function calls:
  6149 ;;		_lcd_write
  6150 ;; This function is called by:
  6151 ;;		_action_menu_selector
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text43
  6156  0025D4                     __ptext43:
  6157                           	opt stack 0
  6158  0025D4                     _action_menu_selector_1:
  6159                           	opt stack 21
  6160                           
  6161                           ;main.c: 213: lcd_write(1,2,">");
  6162                           
  6163                           ;incstack = 0
  6164  0025D4  0E00               	movlw	0
  6165  0025D6  6E35               	movwf	lcd_write@column+1,c
  6166  0025D8  0E01               	movlw	1
  6167  0025DA  6E34               	movwf	lcd_write@column,c
  6168  0025DC  0E00               	movlw	0
  6169  0025DE  6E37               	movwf	lcd_write@row+1,c
  6170  0025E0  0E02               	movlw	2
  6171  0025E2  6E36               	movwf	lcd_write@row,c
  6172  0025E4  0EE1               	movlw	low STR_10
  6173  0025E6  6E38               	movwf	lcd_write@string,c
  6174  0025E8  0E0F               	movlw	high STR_10
  6175  0025EA  6E39               	movwf	lcd_write@string+1,c
  6176  0025EC  ECBF  F014         	call	_lcd_write	;wreg free
  6177                           
  6178                           ;main.c: 214: menu_selected = 1;
  6179  0025F0  0E00               	movlw	0
  6180  0025F2  6E18               	movwf	_menu_selected+1,c
  6181  0025F4  0E01               	movlw	1
  6182  0025F6  6E17               	movwf	_menu_selected,c
  6183                           
  6184                           ;main.c: 215: lcd_write(1,1," ");
  6185  0025F8  0E00               	movlw	0
  6186  0025FA  6E35               	movwf	lcd_write@column+1,c
  6187  0025FC  0E01               	movlw	1
  6188  0025FE  6E34               	movwf	lcd_write@column,c
  6189  002600  0E00               	movlw	0
  6190  002602  6E37               	movwf	lcd_write@row+1,c
  6191  002604  0E01               	movlw	1
  6192  002606  6E36               	movwf	lcd_write@row,c
  6193  002608  0EDD               	movlw	low STR_11
  6194  00260A  6E38               	movwf	lcd_write@string,c
  6195  00260C  0E0F               	movlw	high STR_11
  6196  00260E  6E39               	movwf	lcd_write@string+1,c
  6197  002610  ECBF  F014         	call	_lcd_write	;wreg free
  6198  002614  0012               	return		;funcret
  6199  002616                     __end_of_action_menu_selector_1:
  6200                           	opt stack 0
  6201                           tblptru	equ	0xFF8
  6202                           tblptrh	equ	0xFF7
  6203                           tblptrl	equ	0xFF6
  6204                           tablat	equ	0xFF5
  6205                           prodl	equ	0xFF3
  6206                           intcon	equ	0xFF2
  6207                           indf0	equ	0xFEF
  6208                           postinc0	equ	0xFEE
  6209                           fsr0h	equ	0xFEA
  6210                           fsr0l	equ	0xFE9
  6211                           wreg	equ	0xFE8
  6212                           indf1	equ	0xFE7
  6213                           postdec1	equ	0xFE5
  6214                           fsr1h	equ	0xFE2
  6215                           fsr1l	equ	0xFE1
  6216                           indf2	equ	0xFDF
  6217                           fsr2h	equ	0xFDA
  6218                           fsr2l	equ	0xFD9
  6219                           status	equ	0xFD8
  6220                           
  6221 ;; *************** function _action_menu_selector_0 *****************
  6222 ;; Defined at:
  6223 ;;		line 206 in file "main.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;		None
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;		None               void
  6230 ;; Registers used:
  6231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6241 ;;Total ram usage:        0 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:    6
  6244 ;; This function calls:
  6245 ;;		_lcd_write
  6246 ;; This function is called by:
  6247 ;;		_action_menu_selector
  6248 ;;		_activity_menu
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text44
  6253  002616                     __ptext44:
  6254                           	opt stack 0
  6255  002616                     _action_menu_selector_0:
  6256                           	opt stack 20
  6257                           
  6258                           ;main.c: 207: lcd_write(1,1,">");
  6259                           
  6260                           ;incstack = 0
  6261  002616  0E00               	movlw	0
  6262  002618  6E35               	movwf	lcd_write@column+1,c
  6263  00261A  0E01               	movlw	1
  6264  00261C  6E34               	movwf	lcd_write@column,c
  6265  00261E  0E00               	movlw	0
  6266  002620  6E37               	movwf	lcd_write@row+1,c
  6267  002622  0E01               	movlw	1
  6268  002624  6E36               	movwf	lcd_write@row,c
  6269  002626  0EE1               	movlw	low STR_10
  6270  002628  6E38               	movwf	lcd_write@string,c
  6271  00262A  0E0F               	movlw	high STR_10
  6272  00262C  6E39               	movwf	lcd_write@string+1,c
  6273  00262E  ECBF  F014         	call	_lcd_write	;wreg free
  6274                           
  6275                           ;main.c: 208: menu_selected = 0;
  6276  002632  0E00               	movlw	0
  6277  002634  6E18               	movwf	_menu_selected+1,c
  6278  002636  0E00               	movlw	0
  6279  002638  6E17               	movwf	_menu_selected,c
  6280                           
  6281                           ;main.c: 209: lcd_write(9,2," ");
  6282  00263A  0E00               	movlw	0
  6283  00263C  6E35               	movwf	lcd_write@column+1,c
  6284  00263E  0E09               	movlw	9
  6285  002640  6E34               	movwf	lcd_write@column,c
  6286  002642  0E00               	movlw	0
  6287  002644  6E37               	movwf	lcd_write@row+1,c
  6288  002646  0E02               	movlw	2
  6289  002648  6E36               	movwf	lcd_write@row,c
  6290  00264A  0EDD               	movlw	low STR_11
  6291  00264C  6E38               	movwf	lcd_write@string,c
  6292  00264E  0E0F               	movlw	high STR_11
  6293  002650  6E39               	movwf	lcd_write@string+1,c
  6294  002652  ECBF  F014         	call	_lcd_write	;wreg free
  6295  002656  0012               	return		;funcret
  6296  002658                     __end_of_action_menu_selector_0:
  6297                           	opt stack 0
  6298                           tblptru	equ	0xFF8
  6299                           tblptrh	equ	0xFF7
  6300                           tblptrl	equ	0xFF6
  6301                           tablat	equ	0xFF5
  6302                           prodl	equ	0xFF3
  6303                           intcon	equ	0xFF2
  6304                           indf0	equ	0xFEF
  6305                           postinc0	equ	0xFEE
  6306                           fsr0h	equ	0xFEA
  6307                           fsr0l	equ	0xFE9
  6308                           wreg	equ	0xFE8
  6309                           indf1	equ	0xFE7
  6310                           postdec1	equ	0xFE5
  6311                           fsr1h	equ	0xFE2
  6312                           fsr1l	equ	0xFE1
  6313                           indf2	equ	0xFDF
  6314                           fsr2h	equ	0xFDA
  6315                           fsr2l	equ	0xFD9
  6316                           status	equ	0xFD8
  6317                           
  6318 ;; *************** function _home_config_refresh *****************
  6319 ;; Defined at:
  6320 ;;		line 169 in file "main.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;		None
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;		None               void
  6327 ;; Registers used:
  6328 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;Total ram usage:        2 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    7
  6341 ;; This function calls:
  6342 ;;		_home_state_refresh
  6343 ;;		_home_tone_refresh
  6344 ;;		_home_volume_refresh
  6345 ;; This function is called by:
  6346 ;;		_main
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text45
  6351  00184C                     __ptext45:
  6352                           	opt stack 0
  6353  00184C                     _home_config_refresh:
  6354                           	opt stack 23
  6355                           
  6356                           ;main.c: 171: if(state == 1){LATBbits.LATB1 = 1;;}
  6357                           
  6358                           ;incstack = 0
  6359  00184C  041D               	decf	_state,w,c
  6360  00184E  101E               	iorwf	_state+1,w,c
  6361  001850  A4D8               	btfss	status,2,c
  6362  001852  D002               	goto	l3777
  6363  001854  828A               	bsf	3978,1,c	;volatile
  6364  001856  D000               	goto	l3777
  6365  001858                     l3777:
  6366                           
  6367                           ;main.c: 172: if(state == 0){LATBbits.LATB1 = 0;;}
  6368  001858  501D               	movf	_state,w,c
  6369  00185A  101E               	iorwf	_state+1,w,c
  6370  00185C  A4D8               	btfss	status,2,c
  6371  00185E  D002               	goto	l3781
  6372  001860  928A               	bcf	3978,1,c	;volatile
  6373  001862  D000               	goto	l3781
  6374  001864                     l3781:
  6375                           
  6376                           ;main.c: 174: config_widget_time++;
  6377  001864  4A0D               	infsnz	_config_widget_time,f,c
  6378  001866  2A0E               	incf	_config_widget_time+1,f,c
  6379                           
  6380                           ;main.c: 176: switch(config_widget){
  6381  001868  D030               	goto	l3803
  6382  00186A                     l3783:
  6383                           
  6384                           ;main.c: 179: home_state_refresh();
  6385  00186A  ECCB  F010         	call	_home_state_refresh	;wreg free
  6386                           
  6387                           ;main.c: 180: if(config_widget_time == 5){
  6388  00186E  0E05               	movlw	5
  6389  001870  180D               	xorwf	_config_widget_time,w,c
  6390  001872  100E               	iorwf	_config_widget_time+1,w,c
  6391  001874  A4D8               	btfss	status,2,c
  6392  001876  0012               	return	
  6393                           
  6394                           ;main.c: 181: config_widget_time = 0;
  6395  001878  0E00               	movlw	0
  6396  00187A  6E0E               	movwf	_config_widget_time+1,c
  6397  00187C  0E00               	movlw	0
  6398  00187E  6E0D               	movwf	_config_widget_time,c
  6399                           
  6400                           ;main.c: 182: config_widget = 1;
  6401  001880  0E00               	movlw	0
  6402  001882  6E0C               	movwf	_config_widget+1,c
  6403  001884  0E01               	movlw	1
  6404  001886  6E0B               	movwf	_config_widget,c
  6405                           
  6406                           ;main.c: 183: }
  6407                           ;main.c: 184: break;
  6408  001888  0012               	return	
  6409  00188A                     l3789:
  6410                           
  6411                           ;main.c: 187: home_volume_refresh();
  6412  00188A  EC79  F010         	call	_home_volume_refresh	;wreg free
  6413                           
  6414                           ;main.c: 188: if(config_widget_time == 5){
  6415  00188E  0E05               	movlw	5
  6416  001890  180D               	xorwf	_config_widget_time,w,c
  6417  001892  100E               	iorwf	_config_widget_time+1,w,c
  6418  001894  A4D8               	btfss	status,2,c
  6419  001896  0012               	return	
  6420                           
  6421                           ;main.c: 189: config_widget_time = 0;
  6422  001898  0E00               	movlw	0
  6423  00189A  6E0E               	movwf	_config_widget_time+1,c
  6424  00189C  0E00               	movlw	0
  6425  00189E  6E0D               	movwf	_config_widget_time,c
  6426                           
  6427                           ;main.c: 190: config_widget = 2;
  6428  0018A0  0E00               	movlw	0
  6429  0018A2  6E0C               	movwf	_config_widget+1,c
  6430  0018A4  0E02               	movlw	2
  6431  0018A6  6E0B               	movwf	_config_widget,c
  6432                           
  6433                           ;main.c: 191: }
  6434                           ;main.c: 192: break;
  6435  0018A8  0012               	return	
  6436  0018AA                     l3795:
  6437                           
  6438                           ;main.c: 195: home_tone_refresh();
  6439  0018AA  ECA2  F010         	call	_home_tone_refresh	;wreg free
  6440                           
  6441                           ;main.c: 196: if(config_widget_time == 5){
  6442  0018AE  0E05               	movlw	5
  6443  0018B0  180D               	xorwf	_config_widget_time,w,c
  6444  0018B2  100E               	iorwf	_config_widget_time+1,w,c
  6445  0018B4  A4D8               	btfss	status,2,c
  6446  0018B6  0012               	return	
  6447                           
  6448                           ;main.c: 197: config_widget_time = 0;
  6449  0018B8  0E00               	movlw	0
  6450  0018BA  6E0E               	movwf	_config_widget_time+1,c
  6451  0018BC  0E00               	movlw	0
  6452  0018BE  6E0D               	movwf	_config_widget_time,c
  6453                           
  6454                           ;main.c: 198: config_widget = 0;
  6455  0018C0  0E00               	movlw	0
  6456  0018C2  6E0C               	movwf	_config_widget+1,c
  6457  0018C4  0E00               	movlw	0
  6458  0018C6  6E0B               	movwf	_config_widget,c
  6459                           
  6460                           ;main.c: 202: }
  6461                           
  6462                           ;main.c: 199: }
  6463                           ;main.c: 200: break;
  6464  0018C8  0012               	return	
  6465  0018CA                     l3803:
  6466  0018CA  C00B  F04D         	movff	_config_widget,??_home_config_refresh
  6467  0018CE  C00C  F04E         	movff	_config_widget+1,??_home_config_refresh+1
  6468                           
  6469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6470                           ; Switch size 1, requested type "space"
  6471                           ; Number of cases is 1, Range of values is 0 to 0
  6472                           ; switch strategies available:
  6473                           ; Name         Instructions Cycles
  6474                           ; simple_byte            4     3 (average)
  6475                           ;	Chosen strategy is simple_byte
  6476  0018D2  504E               	movf	??_home_config_refresh+1,w,c
  6477  0018D4  0A00               	xorlw	0	; case 0
  6478  0018D6  A4D8               	btfss	status,2,c
  6479  0018D8  0012               	return	
  6480                           
  6481                           ; Switch size 1, requested type "space"
  6482                           ; Number of cases is 3, Range of values is 0 to 2
  6483                           ; switch strategies available:
  6484                           ; Name         Instructions Cycles
  6485                           ; simple_byte           10     6 (average)
  6486                           ;	Chosen strategy is simple_byte
  6487  0018DA  504D               	movf	??_home_config_refresh,w,c
  6488  0018DC  0A00               	xorlw	0	; case 0
  6489  0018DE  B4D8               	btfsc	status,2,c
  6490  0018E0  D7C4               	goto	l3783
  6491  0018E2  0A01               	xorlw	1	; case 1
  6492  0018E4  B4D8               	btfsc	status,2,c
  6493  0018E6  D7D1               	goto	l3789
  6494  0018E8  0A03               	xorlw	3	; case 2
  6495  0018EA  A4D8               	btfss	status,2,c
  6496  0018EC  0012               	return	
  6497  0018EE  D7DD               	goto	l3795
  6498  0018F0  0012               	return		;funcret
  6499  0018F2                     __end_of_home_config_refresh:
  6500                           	opt stack 0
  6501                           tblptru	equ	0xFF8
  6502                           tblptrh	equ	0xFF7
  6503                           tblptrl	equ	0xFF6
  6504                           tablat	equ	0xFF5
  6505                           prodl	equ	0xFF3
  6506                           intcon	equ	0xFF2
  6507                           indf0	equ	0xFEF
  6508                           postinc0	equ	0xFEE
  6509                           fsr0h	equ	0xFEA
  6510                           fsr0l	equ	0xFE9
  6511                           wreg	equ	0xFE8
  6512                           indf1	equ	0xFE7
  6513                           postdec1	equ	0xFE5
  6514                           fsr1h	equ	0xFE2
  6515                           fsr1l	equ	0xFE1
  6516                           indf2	equ	0xFDF
  6517                           fsr2h	equ	0xFDA
  6518                           fsr2l	equ	0xFD9
  6519                           status	equ	0xFD8
  6520                           
  6521 ;; *************** function _home_volume_refresh *****************
  6522 ;; Defined at:
  6523 ;;		line 145 in file "main.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;		None
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;		None
  6528 ;; Return value:  Size  Location     Type
  6529 ;;		None               void
  6530 ;; Registers used:
  6531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;Total ram usage:        0 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    6
  6544 ;; This function calls:
  6545 ;;		_lcd_write
  6546 ;;		_sprintf
  6547 ;; This function is called by:
  6548 ;;		_home_config_refresh
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text46
  6553  0020F2                     __ptext46:
  6554                           	opt stack 0
  6555  0020F2                     _home_volume_refresh:
  6556                           	opt stack 23
  6557                           
  6558                           ;main.c: 147: if(alarm_volume == 0){
  6559                           
  6560                           ;incstack = 0
  6561  0020F2  5007               	movf	_alarm_volume,w,c
  6562  0020F4  1008               	iorwf	_alarm_volume+1,w,c
  6563  0020F6  A4D8               	btfss	status,2,c
  6564  0020F8  D00B               	goto	l3599
  6565                           
  6566                           ;main.c: 148: sprintf(buffer1,"VOL:BA");
  6567  0020FA  0E80               	movlw	low _buffer1
  6568  0020FC  6E36               	movwf	sprintf@sp,c
  6569  0020FE  0E00               	movlw	high _buffer1
  6570  002100  6E37               	movwf	sprintf@sp+1,c
  6571  002102  0E7C               	movlw	low STR_6
  6572  002104  6E38               	movwf	sprintf@f,c
  6573  002106  0E0F               	movlw	high STR_6
  6574  002108  6E39               	movwf	sprintf@f+1,c
  6575  00210A  ECF2  F007         	call	_sprintf	;wreg free
  6576                           
  6577                           ;main.c: 149: }
  6578  00210E  D00B               	goto	l3601
  6579  002110                     l3599:
  6580                           
  6581                           ;main.c: 150: else{
  6582                           ;main.c: 151: sprintf(buffer1,"VOL:AL");
  6583  002110  0E80               	movlw	low _buffer1
  6584  002112  6E36               	movwf	sprintf@sp,c
  6585  002114  0E00               	movlw	high _buffer1
  6586  002116  6E37               	movwf	sprintf@sp+1,c
  6587  002118  0E8A               	movlw	low STR_7
  6588  00211A  6E38               	movwf	sprintf@f,c
  6589  00211C  0E0F               	movlw	high STR_7
  6590  00211E  6E39               	movwf	sprintf@f+1,c
  6591  002120  ECF2  F007         	call	_sprintf	;wreg free
  6592  002124  D000               	goto	l3601
  6593  002126                     l3601:
  6594                           
  6595                           ;main.c: 152: }
  6596                           ;main.c: 153: lcd_write(1,2,buffer1);
  6597  002126  0E00               	movlw	0
  6598  002128  6E35               	movwf	lcd_write@column+1,c
  6599  00212A  0E01               	movlw	1
  6600  00212C  6E34               	movwf	lcd_write@column,c
  6601  00212E  0E00               	movlw	0
  6602  002130  6E37               	movwf	lcd_write@row+1,c
  6603  002132  0E02               	movlw	2
  6604  002134  6E36               	movwf	lcd_write@row,c
  6605  002136  0E80               	movlw	low _buffer1
  6606  002138  6E38               	movwf	lcd_write@string,c
  6607  00213A  0E00               	movlw	high _buffer1
  6608  00213C  6E39               	movwf	lcd_write@string+1,c
  6609  00213E  ECBF  F014         	call	_lcd_write	;wreg free
  6610  002142  0012               	return		;funcret
  6611  002144                     __end_of_home_volume_refresh:
  6612                           	opt stack 0
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodl	equ	0xFF3
  6618                           intcon	equ	0xFF2
  6619                           indf0	equ	0xFEF
  6620                           postinc0	equ	0xFEE
  6621                           fsr0h	equ	0xFEA
  6622                           fsr0l	equ	0xFE9
  6623                           wreg	equ	0xFE8
  6624                           indf1	equ	0xFE7
  6625                           postdec1	equ	0xFE5
  6626                           fsr1h	equ	0xFE2
  6627                           fsr1l	equ	0xFE1
  6628                           indf2	equ	0xFDF
  6629                           fsr2h	equ	0xFDA
  6630                           fsr2l	equ	0xFD9
  6631                           status	equ	0xFD8
  6632                           
  6633 ;; *************** function _home_tone_refresh *****************
  6634 ;; Defined at:
  6635 ;;		line 157 in file "main.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;		None               void
  6642 ;; Registers used:
  6643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6653 ;;Total ram usage:        0 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    6
  6656 ;; This function calls:
  6657 ;;		_lcd_write
  6658 ;;		_sprintf
  6659 ;; This function is called by:
  6660 ;;		_home_config_refresh
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text47
  6665  002144                     __ptext47:
  6666                           	opt stack 0
  6667  002144                     _home_tone_refresh:
  6668                           	opt stack 23
  6669                           
  6670                           ;main.c: 159: if(alarm_tone == 0){
  6671                           
  6672                           ;incstack = 0
  6673  002144  5005               	movf	_alarm_tone,w,c
  6674  002146  1006               	iorwf	_alarm_tone+1,w,c
  6675  002148  A4D8               	btfss	status,2,c
  6676  00214A  D00B               	goto	l3607
  6677                           
  6678                           ;main.c: 160: sprintf(buffer1,"TONO:1");
  6679  00214C  0E80               	movlw	low _buffer1
  6680  00214E  6E36               	movwf	sprintf@sp,c
  6681  002150  0E00               	movlw	high _buffer1
  6682  002152  6E37               	movwf	sprintf@sp+1,c
  6683  002154  0E67               	movlw	low STR_8
  6684  002156  6E38               	movwf	sprintf@f,c
  6685  002158  0E0F               	movlw	high STR_8
  6686  00215A  6E39               	movwf	sprintf@f+1,c
  6687  00215C  ECF2  F007         	call	_sprintf	;wreg free
  6688                           
  6689                           ;main.c: 161: }
  6690  002160  D00B               	goto	l3609
  6691  002162                     l3607:
  6692                           
  6693                           ;main.c: 162: else{
  6694                           ;main.c: 163: sprintf(buffer1,"TONO:2");
  6695  002162  0E80               	movlw	low _buffer1
  6696  002164  6E36               	movwf	sprintf@sp,c
  6697  002166  0E00               	movlw	high _buffer1
  6698  002168  6E37               	movwf	sprintf@sp+1,c
  6699  00216A  0E75               	movlw	low STR_9
  6700  00216C  6E38               	movwf	sprintf@f,c
  6701  00216E  0E0F               	movlw	high STR_9
  6702  002170  6E39               	movwf	sprintf@f+1,c
  6703  002172  ECF2  F007         	call	_sprintf	;wreg free
  6704  002176  D000               	goto	l3609
  6705  002178                     l3609:
  6706                           
  6707                           ;main.c: 164: }
  6708                           ;main.c: 165: lcd_write(1,2,buffer1);
  6709  002178  0E00               	movlw	0
  6710  00217A  6E35               	movwf	lcd_write@column+1,c
  6711  00217C  0E01               	movlw	1
  6712  00217E  6E34               	movwf	lcd_write@column,c
  6713  002180  0E00               	movlw	0
  6714  002182  6E37               	movwf	lcd_write@row+1,c
  6715  002184  0E02               	movlw	2
  6716  002186  6E36               	movwf	lcd_write@row,c
  6717  002188  0E80               	movlw	low _buffer1
  6718  00218A  6E38               	movwf	lcd_write@string,c
  6719  00218C  0E00               	movlw	high _buffer1
  6720  00218E  6E39               	movwf	lcd_write@string+1,c
  6721  002190  ECBF  F014         	call	_lcd_write	;wreg free
  6722  002194  0012               	return		;funcret
  6723  002196                     __end_of_home_tone_refresh:
  6724                           	opt stack 0
  6725                           tblptru	equ	0xFF8
  6726                           tblptrh	equ	0xFF7
  6727                           tblptrl	equ	0xFF6
  6728                           tablat	equ	0xFF5
  6729                           prodl	equ	0xFF3
  6730                           intcon	equ	0xFF2
  6731                           indf0	equ	0xFEF
  6732                           postinc0	equ	0xFEE
  6733                           fsr0h	equ	0xFEA
  6734                           fsr0l	equ	0xFE9
  6735                           wreg	equ	0xFE8
  6736                           indf1	equ	0xFE7
  6737                           postdec1	equ	0xFE5
  6738                           fsr1h	equ	0xFE2
  6739                           fsr1l	equ	0xFE1
  6740                           indf2	equ	0xFDF
  6741                           fsr2h	equ	0xFDA
  6742                           fsr2l	equ	0xFD9
  6743                           status	equ	0xFD8
  6744                           
  6745 ;; *************** function _home_state_refresh *****************
  6746 ;; Defined at:
  6747 ;;		line 133 in file "main.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;		None
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;		None
  6752 ;; Return value:  Size  Location     Type
  6753 ;;		None               void
  6754 ;; Registers used:
  6755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6765 ;;Total ram usage:        0 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    6
  6768 ;; This function calls:
  6769 ;;		_lcd_write
  6770 ;;		_sprintf
  6771 ;; This function is called by:
  6772 ;;		_home_config_refresh
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text48
  6777  002196                     __ptext48:
  6778                           	opt stack 0
  6779  002196                     _home_state_refresh:
  6780                           	opt stack 23
  6781                           
  6782                           ;main.c: 135: if(state == 1){
  6783                           
  6784                           ;incstack = 0
  6785  002196  041D               	decf	_state,w,c
  6786  002198  101E               	iorwf	_state+1,w,c
  6787  00219A  A4D8               	btfss	status,2,c
  6788  00219C  D00B               	goto	l3591
  6789                           
  6790                           ;main.c: 136: sprintf(buffer1,"ACT:SI");
  6791  00219E  0E80               	movlw	low _buffer1
  6792  0021A0  6E36               	movwf	sprintf@sp,c
  6793  0021A2  0E00               	movlw	high _buffer1
  6794  0021A4  6E37               	movwf	sprintf@sp+1,c
  6795  0021A6  0E83               	movlw	low STR_4
  6796  0021A8  6E38               	movwf	sprintf@f,c
  6797  0021AA  0E0F               	movlw	high STR_4
  6798  0021AC  6E39               	movwf	sprintf@f+1,c
  6799  0021AE  ECF2  F007         	call	_sprintf	;wreg free
  6800                           
  6801                           ;main.c: 137: }
  6802  0021B2  D00B               	goto	l3593
  6803  0021B4                     l3591:
  6804                           
  6805                           ;main.c: 138: else{
  6806                           ;main.c: 139: sprintf(buffer1,"ACT:NO");
  6807  0021B4  0E80               	movlw	low _buffer1
  6808  0021B6  6E36               	movwf	sprintf@sp,c
  6809  0021B8  0E00               	movlw	high _buffer1
  6810  0021BA  6E37               	movwf	sprintf@sp+1,c
  6811  0021BC  0E91               	movlw	low STR_5
  6812  0021BE  6E38               	movwf	sprintf@f,c
  6813  0021C0  0E0F               	movlw	high STR_5
  6814  0021C2  6E39               	movwf	sprintf@f+1,c
  6815  0021C4  ECF2  F007         	call	_sprintf	;wreg free
  6816  0021C8  D000               	goto	l3593
  6817  0021CA                     l3593:
  6818                           
  6819                           ;main.c: 140: }
  6820                           ;main.c: 141: lcd_write(1,2,buffer1);
  6821  0021CA  0E00               	movlw	0
  6822  0021CC  6E35               	movwf	lcd_write@column+1,c
  6823  0021CE  0E01               	movlw	1
  6824  0021D0  6E34               	movwf	lcd_write@column,c
  6825  0021D2  0E00               	movlw	0
  6826  0021D4  6E37               	movwf	lcd_write@row+1,c
  6827  0021D6  0E02               	movlw	2
  6828  0021D8  6E36               	movwf	lcd_write@row,c
  6829  0021DA  0E80               	movlw	low _buffer1
  6830  0021DC  6E38               	movwf	lcd_write@string,c
  6831  0021DE  0E00               	movlw	high _buffer1
  6832  0021E0  6E39               	movwf	lcd_write@string+1,c
  6833  0021E2  ECBF  F014         	call	_lcd_write	;wreg free
  6834  0021E6  0012               	return		;funcret
  6835  0021E8                     __end_of_home_state_refresh:
  6836                           	opt stack 0
  6837                           tblptru	equ	0xFF8
  6838                           tblptrh	equ	0xFF7
  6839                           tblptrl	equ	0xFF6
  6840                           tablat	equ	0xFF5
  6841                           prodl	equ	0xFF3
  6842                           intcon	equ	0xFF2
  6843                           indf0	equ	0xFEF
  6844                           postinc0	equ	0xFEE
  6845                           fsr0h	equ	0xFEA
  6846                           fsr0l	equ	0xFE9
  6847                           wreg	equ	0xFE8
  6848                           indf1	equ	0xFE7
  6849                           postdec1	equ	0xFE5
  6850                           fsr1h	equ	0xFE2
  6851                           fsr1l	equ	0xFE1
  6852                           indf2	equ	0xFDF
  6853                           fsr2h	equ	0xFDA
  6854                           fsr2l	equ	0xFD9
  6855                           status	equ	0xFD8
  6856                           
  6857 ;; *************** function _home_clock_refresh *****************
  6858 ;; Defined at:
  6859 ;;		line 124 in file "main.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;		None
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;		None               void
  6866 ;; Registers used:
  6867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6877 ;;Total ram usage:        0 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; Hardware stack levels required when called:    6
  6880 ;; This function calls:
  6881 ;;		_lcd_write
  6882 ;;		_sprintf
  6883 ;; This function is called by:
  6884 ;;		_main
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text49
  6889  001988                     __ptext49:
  6890                           	opt stack 0
  6891  001988                     _home_clock_refresh:
  6892                           	opt stack 24
  6893                           
  6894                           ;main.c: 126: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  6895                           
  6896                           ;incstack = 0
  6897  001988  0E80               	movlw	low _buffer1
  6898  00198A  6E36               	movwf	sprintf@sp,c
  6899  00198C  0E00               	movlw	high _buffer1
  6900  00198E  6E37               	movwf	sprintf@sp+1,c
  6901  001990  0E1F               	movlw	low STR_2
  6902  001992  6E38               	movwf	sprintf@f,c
  6903  001994  0E0F               	movlw	high STR_2
  6904  001996  6E39               	movwf	sprintf@f+1,c
  6905  001998  C051  F03A         	movff	_dia,?_sprintf+4
  6906  00199C  C052  F03B         	movff	_dia+1,?_sprintf+5
  6907  0019A0  C057  F03C         	movff	_mes,?_sprintf+6
  6908  0019A4  C058  F03D         	movff	_mes+1,?_sprintf+7
  6909  0019A8  C04F  F03E         	movff	_anio,?_sprintf+8
  6910  0019AC  C050  F03F         	movff	_anio+1,?_sprintf+9
  6911  0019B0  ECF2  F007         	call	_sprintf	;wreg free
  6912                           
  6913                           ;main.c: 127: lcd_write(9,1,buffer1);
  6914  0019B4  0E00               	movlw	0
  6915  0019B6  6E35               	movwf	lcd_write@column+1,c
  6916  0019B8  0E09               	movlw	9
  6917  0019BA  6E34               	movwf	lcd_write@column,c
  6918  0019BC  0E00               	movlw	0
  6919  0019BE  6E37               	movwf	lcd_write@row+1,c
  6920  0019C0  0E01               	movlw	1
  6921  0019C2  6E36               	movwf	lcd_write@row,c
  6922  0019C4  0E80               	movlw	low _buffer1
  6923  0019C6  6E38               	movwf	lcd_write@string,c
  6924  0019C8  0E00               	movlw	high _buffer1
  6925  0019CA  6E39               	movwf	lcd_write@string+1,c
  6926  0019CC  ECBF  F014         	call	_lcd_write	;wreg free
  6927                           
  6928                           ;main.c: 128: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  6929  0019D0  0E80               	movlw	low _buffer1
  6930  0019D2  6E36               	movwf	sprintf@sp,c
  6931  0019D4  0E00               	movlw	high _buffer1
  6932  0019D6  6E37               	movwf	sprintf@sp+1,c
  6933  0019D8  0E2E               	movlw	low STR_3
  6934  0019DA  6E38               	movwf	sprintf@f,c
  6935  0019DC  0E0F               	movlw	high STR_3
  6936  0019DE  6E39               	movwf	sprintf@f+1,c
  6937  0019E0  C055  F03A         	movff	_hora,?_sprintf+4
  6938  0019E4  C056  F03B         	movff	_hora+1,?_sprintf+5
  6939  0019E8  C019  F03C         	movff	_minuto,?_sprintf+6
  6940  0019EC  C01A  F03D         	movff	_minuto+1,?_sprintf+7
  6941  0019F0  C01B  F03E         	movff	_segundo,?_sprintf+8
  6942  0019F4  C01C  F03F         	movff	_segundo+1,?_sprintf+9
  6943  0019F8  ECF2  F007         	call	_sprintf	;wreg free
  6944                           
  6945                           ;main.c: 129: lcd_write(9,2,buffer1);
  6946  0019FC  0E00               	movlw	0
  6947  0019FE  6E35               	movwf	lcd_write@column+1,c
  6948  001A00  0E09               	movlw	9
  6949  001A02  6E34               	movwf	lcd_write@column,c
  6950  001A04  0E00               	movlw	0
  6951  001A06  6E37               	movwf	lcd_write@row+1,c
  6952  001A08  0E02               	movlw	2
  6953  001A0A  6E36               	movwf	lcd_write@row,c
  6954  001A0C  0E80               	movlw	low _buffer1
  6955  001A0E  6E38               	movwf	lcd_write@string,c
  6956  001A10  0E00               	movlw	high _buffer1
  6957  001A12  6E39               	movwf	lcd_write@string+1,c
  6958  001A14  ECBF  F014         	call	_lcd_write	;wreg free
  6959  001A18  0012               	return		;funcret
  6960  001A1A                     __end_of_home_clock_refresh:
  6961                           	opt stack 0
  6962                           tblptru	equ	0xFF8
  6963                           tblptrh	equ	0xFF7
  6964                           tblptrl	equ	0xFF6
  6965                           tablat	equ	0xFF5
  6966                           prodl	equ	0xFF3
  6967                           intcon	equ	0xFF2
  6968                           indf0	equ	0xFEF
  6969                           postinc0	equ	0xFEE
  6970                           fsr0h	equ	0xFEA
  6971                           fsr0l	equ	0xFE9
  6972                           wreg	equ	0xFE8
  6973                           indf1	equ	0xFE7
  6974                           postdec1	equ	0xFE5
  6975                           fsr1h	equ	0xFE2
  6976                           fsr1l	equ	0xFE1
  6977                           indf2	equ	0xFDF
  6978                           fsr2h	equ	0xFDA
  6979                           fsr2l	equ	0xFD9
  6980                           status	equ	0xFD8
  6981                           
  6982 ;; *************** function _sprintf *****************
  6983 ;; Defined at:
  6984 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  sp              2   12[COMRAM] PTR unsigned char 
  6987 ;;		 -> buffer1(20), 
  6988 ;;  f               2   14[COMRAM] PTR const unsigned char 
  6989 ;;		 -> STR_51(5), STR_50(5), STR_9(7), STR_8(7), 
  6990 ;;		 -> STR_7(7), STR_6(7), STR_5(7), STR_4(7), 
  6991 ;;		 -> STR_3(15), STR_2(15), 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  tmpval          4    0        struct .
  6994 ;;  cp              3    0        PTR const unsigned char 
  6995 ;;  width           2   32[COMRAM] int 
  6996 ;;  val             2   29[COMRAM] unsigned int 
  6997 ;;  ap              2   26[COMRAM] PTR void [1]
  6998 ;;		 -> ?_sprintf(2), 
  6999 ;;  len             2    0        unsigned int 
  7000 ;;  c               1   34[COMRAM] char 
  7001 ;;  prec            1   31[COMRAM] char 
  7002 ;;  flag            1   28[COMRAM] unsigned char 
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  2   12[COMRAM] int 
  7005 ;; Registers used:
  7006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7012 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7013 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7014 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7015 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7016 ;;Total ram usage:       23 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; Hardware stack levels required when called:    1
  7019 ;; This function calls:
  7020 ;;		___lwdiv
  7021 ;;		___lwmod
  7022 ;;		___wmul
  7023 ;;		_isdigit
  7024 ;; This function is called by:
  7025 ;;		_home_clock_refresh
  7026 ;;		_home_state_refresh
  7027 ;;		_home_volume_refresh
  7028 ;;		_home_tone_refresh
  7029 ;;		_button_number
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text50
  7034  000FE4                     __ptext50:
  7035                           	opt stack 0
  7036  000FE4                     _sprintf:
  7037                           	opt stack 27
  7038                           
  7039                           ;doprnt.c: 494: va_list ap;
  7040                           ;doprnt.c: 499: signed char c;
  7041                           ;doprnt.c: 501: int width;
  7042                           ;doprnt.c: 506: signed char prec;
  7043                           ;doprnt.c: 508: unsigned char flag;
  7044                           ;doprnt.c: 523: union {
  7045                           ;doprnt.c: 524: unsigned long vd;
  7046                           ;doprnt.c: 525: double integ;
  7047                           ;doprnt.c: 526: } tmpval;
  7048                           ;doprnt.c: 528: unsigned int val;
  7049                           ;doprnt.c: 529: unsigned len;
  7050                           ;doprnt.c: 530: const char * cp;
  7051                           ;doprnt.c: 533: *ap = __va_start();
  7052                           
  7053                           ;incstack = 0
  7054  000FE4  0E3A               	movlw	low (?_sprintf+4)
  7055  000FE6  6E44               	movwf	sprintf@ap,c
  7056  000FE8  0E00               	movlw	high (?_sprintf+4)
  7057  000FEA  6E45               	movwf	sprintf@ap+1,c
  7058                           
  7059                           ;doprnt.c: 536: while(c = *f++) {
  7060  000FEC  D117               	goto	l3279
  7061  000FEE                     l3197:
  7062                           
  7063                           ;doprnt.c: 538: if(c != '%')
  7064  000FEE  0E25               	movlw	37
  7065  000FF0  184C               	xorwf	sprintf@c,w,c
  7066  000FF2  B4D8               	btfsc	status,2,c
  7067  000FF4  D009               	goto	l3203
  7068                           
  7069                           ;doprnt.c: 540: {
  7070                           ;doprnt.c: 541: ((*sp++ = (c)));
  7071  000FF6  C036  FFD9         	movff	sprintf@sp,fsr2l
  7072  000FFA  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7073  000FFE  C04C  FFDF         	movff	sprintf@c,indf2
  7074  001002  4A36               	infsnz	sprintf@sp,f,c
  7075  001004  2A37               	incf	sprintf@sp+1,f,c
  7076                           
  7077                           ;doprnt.c: 542: continue;
  7078  001006  D10A               	goto	l3279
  7079  001008                     l3203:
  7080                           
  7081                           ;doprnt.c: 543: }
  7082                           ;doprnt.c: 546: width = 0;
  7083  001008  0E00               	movlw	0
  7084  00100A  6E4B               	movwf	sprintf@width+1,c
  7085  00100C  0E00               	movlw	0
  7086  00100E  6E4A               	movwf	sprintf@width,c
  7087                           
  7088                           ;doprnt.c: 548: flag = 0;
  7089  001010  0E00               	movlw	0
  7090  001012  6E46               	movwf	sprintf@flag,c
  7091                           
  7092                           ;doprnt.c: 551: switch(*f) {
  7093                           
  7094                           ;doprnt.c: 550: for(;;) {
  7095  001014  D005               	goto	l3209
  7096  001016                     l3205:
  7097                           
  7098                           ;doprnt.c: 580: flag |= 0x04;
  7099  001016  8446               	bsf	sprintf@flag,2,c
  7100                           
  7101                           ;doprnt.c: 581: f++;
  7102  001018  4A38               	infsnz	sprintf@f,f,c
  7103  00101A  2A39               	incf	sprintf@f+1,f,c
  7104                           
  7105                           ;doprnt.c: 582: continue;
  7106  00101C  D001               	goto	l3209
  7107                           
  7108                           ;doprnt.c: 584: }
  7109  00101E  D00B               	goto	l3211
  7110  001020                     l3209:
  7111  001020  C038  FFF6         	movff	sprintf@f,tblptrl
  7112  001024  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7113  001028                     	if	0	;tblptru may be non-zero
  7114  001028                     	endif
  7115  001028                     	if	0	;tblptru may be non-zero
  7116  001028                     	endif
  7117  001028  0008               	tblrd		*
  7118  00102A  50F5               	movf	tablat,w,c
  7119                           
  7120                           ; Switch size 1, requested type "space"
  7121                           ; Number of cases is 1, Range of values is 48 to 48
  7122                           ; switch strategies available:
  7123                           ; Name         Instructions Cycles
  7124                           ; simple_byte            4     3 (average)
  7125                           ;	Chosen strategy is simple_byte
  7126  00102C  0A30               	xorlw	48	; case 48
  7127  00102E  B4D8               	btfsc	status,2,c
  7128  001030  D7F2               	goto	l3205
  7129                           
  7130                           ;doprnt.c: 585: break;
  7131  001032  D001               	goto	l3211
  7132                           
  7133                           ;doprnt.c: 586: }
  7134  001034  D7F5               	goto	l3209
  7135  001036                     l3211:
  7136                           
  7137                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  7138  001036  C038  FFF6         	movff	sprintf@f,tblptrl
  7139  00103A  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7140  00103E                     	if	0	;tblptru may be non-zero
  7141  00103E                     	endif
  7142  00103E                     	if	0	;tblptru may be non-zero
  7143  00103E                     	endif
  7144  00103E  0008               	tblrd		*
  7145  001040  50F5               	movf	tablat,w,c
  7146  001042  EC82  F014         	call	_isdigit
  7147  001046  A0D8               	btfss	status,0,c
  7148  001048  D03A               	goto	l3227
  7149                           
  7150                           ;doprnt.c: 598: width = 0;
  7151  00104A  0E00               	movlw	0
  7152  00104C  6E4B               	movwf	sprintf@width+1,c
  7153  00104E  0E00               	movlw	0
  7154  001050  6E4A               	movwf	sprintf@width,c
  7155  001052  D000               	goto	l3215
  7156  001054                     l3215:
  7157                           
  7158                           ;doprnt.c: 600: width *= 10;
  7159  001054  C04A  F02A         	movff	sprintf@width,___wmul@multiplier
  7160  001058  C04B  F02B         	movff	sprintf@width+1,___wmul@multiplier+1
  7161  00105C  0E00               	movlw	0
  7162  00105E  6E2D               	movwf	___wmul@multiplicand+1,c
  7163  001060  0E0A               	movlw	10
  7164  001062  6E2C               	movwf	___wmul@multiplicand,c
  7165  001064  EC4A  F014         	call	___wmul	;wreg free
  7166  001068  C02A  F04A         	movff	?___wmul,sprintf@width
  7167  00106C  C02B  F04B         	movff	?___wmul+1,sprintf@width+1
  7168                           
  7169                           ;doprnt.c: 601: width += *f++ - '0';
  7170  001070  0ED0               	movlw	208
  7171  001072  6E40               	movwf	??_sprintf& (0+255),c
  7172  001074  0EFF               	movlw	255
  7173  001076  6E41               	movwf	(??_sprintf+1)& (0+255),c
  7174  001078  C038  FFF6         	movff	sprintf@f,tblptrl
  7175  00107C  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7176  001080                     	if	0	;tblptru may be non-zero
  7177  001080                     	endif
  7178  001080                     	if	0	;tblptru may be non-zero
  7179  001080                     	endif
  7180  001080  0008               	tblrd		*
  7181  001082  50F5               	movf	tablat,w,c
  7182  001084  6E42               	movwf	(??_sprintf+2)& (0+255),c
  7183  001086  6A43               	clrf	(??_sprintf+3)& (0+255),c
  7184  001088  5040               	movf	??_sprintf,w,c
  7185  00108A  2642               	addwf	??_sprintf+2,f,c
  7186  00108C  5041               	movf	??_sprintf+1,w,c
  7187  00108E  2243               	addwfc	??_sprintf+3,f,c
  7188  001090  5042               	movf	??_sprintf+2,w,c
  7189  001092  264A               	addwf	sprintf@width,f,c
  7190  001094  5043               	movf	??_sprintf+3,w,c
  7191  001096  224B               	addwfc	sprintf@width+1,f,c
  7192  001098  4A38               	infsnz	sprintf@f,f,c
  7193  00109A  2A39               	incf	sprintf@f+1,f,c
  7194                           
  7195                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7196  00109C  C038  FFF6         	movff	sprintf@f,tblptrl
  7197  0010A0  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7198  0010A4                     	if	0	;tblptru may be non-zero
  7199  0010A4                     	endif
  7200  0010A4                     	if	0	;tblptru may be non-zero
  7201  0010A4                     	endif
  7202  0010A4  0008               	tblrd		*
  7203  0010A6  50F5               	movf	tablat,w,c
  7204  0010A8  EC82  F014         	call	_isdigit
  7205  0010AC  A0D8               	btfss	status,0,c
  7206  0010AE  D007               	goto	l3227
  7207  0010B0  D7D1               	goto	l3215
  7208                           
  7209                           ;doprnt.c: 608: }
  7210                           ;doprnt.c: 635: switch(c = *f++) {
  7211  0010B2  D005               	goto	l3227
  7212                           
  7213                           ;doprnt.c: 638: goto alldone;
  7214                           
  7215                           ;doprnt.c: 637: case 0:
  7216  0010B4  D0C1               	goto	l3281
  7217                           
  7218                           ;doprnt.c: 813: continue;
  7219                           
  7220                           ;doprnt.c: 802: default:
  7221  0010B6  D0B2               	goto	l3279
  7222  0010B8                     l3223:
  7223                           
  7224                           ;doprnt.c: 818: flag |= 0xC0;
  7225  0010B8  0EC0               	movlw	192
  7226  0010BA  1246               	iorwf	sprintf@flag,f,c
  7227                           
  7228                           ;doprnt.c: 822: }
  7229                           
  7230                           ;doprnt.c: 819: break;
  7231  0010BC  D011               	goto	l3229
  7232  0010BE                     l3227:
  7233  0010BE  C038  FFF6         	movff	sprintf@f,tblptrl
  7234  0010C2  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7235  0010C6  4A38               	infsnz	sprintf@f,f,c
  7236  0010C8  2A39               	incf	sprintf@f+1,f,c
  7237  0010CA                     	if	0	;tblptru may be non-zero
  7238  0010CA                     	endif
  7239  0010CA                     	if	0	;tblptru may be non-zero
  7240  0010CA                     	endif
  7241  0010CA  0008               	tblrd		*
  7242  0010CC  CFF5 F04C          	movff	tablat,sprintf@c
  7243  0010D0  504C               	movf	sprintf@c,w,c
  7244                           
  7245                           ; Switch size 1, requested type "space"
  7246                           ; Number of cases is 2, Range of values is 0 to 117
  7247                           ; switch strategies available:
  7248                           ; Name         Instructions Cycles
  7249                           ; simple_byte            7     4 (average)
  7250                           ;	Chosen strategy is simple_byte
  7251  0010D2  0A00               	xorlw	0	; case 0
  7252  0010D4  B4D8               	btfsc	status,2,c
  7253  0010D6  D0B0               	goto	l3281
  7254  0010D8  0A75               	xorlw	117	; case 117
  7255  0010DA  B4D8               	btfsc	status,2,c
  7256  0010DC  D7ED               	goto	l3223
  7257  0010DE  D09E               	goto	l3279
  7258  0010E0                     l3229:
  7259                           
  7260                           ;doprnt.c: 1273: {
  7261                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7262  0010E0  C044  FFD9         	movff	sprintf@ap,fsr2l
  7263  0010E4  C045  FFDA         	movff	sprintf@ap+1,fsr2h
  7264  0010E8  CFDE F047          	movff	postinc2,sprintf@val
  7265  0010EC  CFDD F048          	movff	postdec2,sprintf@val+1
  7266  0010F0  0E02               	movlw	2
  7267  0010F2  2644               	addwf	sprintf@ap,f,c
  7268  0010F4  0E00               	movlw	0
  7269  0010F6  2245               	addwfc	sprintf@ap+1,f,c
  7270                           
  7271                           ;doprnt.c: 1287: }
  7272                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7273  0010F8  0E01               	movlw	1
  7274  0010FA  6E4C               	movwf	sprintf@c,c
  7275  0010FC                     l3235:
  7276  0010FC  0E05               	movlw	5
  7277  0010FE  184C               	xorwf	sprintf@c,w,c
  7278  001100  B4D8               	btfsc	status,2,c
  7279  001102  D016               	goto	l3247
  7280  001104  D001               	goto	l3239
  7281  001106  D014               	goto	l3247
  7282  001108                     l3239:
  7283                           
  7284                           ;doprnt.c: 1306: if(val < dpowers[c])
  7285  001108  504C               	movf	sprintf@c,w,c
  7286  00110A  0D02               	mullw	2
  7287  00110C  0E01               	movlw	low _dpowers
  7288  00110E  24F3               	addwf	prodl,w,c
  7289  001110  6EF6               	movwf	tblptrl,c
  7290  001112  0E0F               	movlw	high _dpowers
  7291  001114  20F4               	addwfc	prodh,w,c
  7292  001116  6EF7               	movwf	tblptrh,c
  7293  001118                     	if	0	;There are less than 3 active tblptr bytes
  7294  001118                     	endif
  7295  001118  0009               	tblrd		*+
  7296  00111A  50F5               	movf	tablat,w,c
  7297  00111C  5C47               	subwf	sprintf@val,w,c
  7298  00111E  0009               	tblrd		*+
  7299  001120  50F5               	movf	tablat,w,c
  7300  001122  5848               	subwfb	sprintf@val+1,w,c
  7301  001124  A0D8               	btfss	status,0,c
  7302  001126  D004               	goto	l3247
  7303  001128  D001               	goto	l3243
  7304                           
  7305                           ;doprnt.c: 1307: break;
  7306  00112A  D002               	goto	l3247
  7307  00112C                     l3243:
  7308  00112C  2A4C               	incf	sprintf@c,f,c
  7309  00112E  D7E6               	goto	l3235
  7310  001130                     l3247:
  7311                           
  7312                           ;doprnt.c: 1381: if(width > c)
  7313  001130  0E80               	movlw	128
  7314  001132  BE4C               	btfsc	sprintf@c,7,c
  7315  001134  0E7F               	movlw	127
  7316  001136  6E40               	movwf	??_sprintf& (0+255),c
  7317  001138  504A               	movf	sprintf@width,w,c
  7318  00113A  5C4C               	subwf	sprintf@c,w,c
  7319  00113C  504B               	movf	sprintf@width+1,w,c
  7320  00113E  0A80               	xorlw	128
  7321  001140  5840               	subwfb	??_sprintf& (0+255),w,c
  7322  001142  B0D8               	btfsc	status,0,c
  7323  001144  D007               	goto	l3251
  7324                           
  7325                           ;doprnt.c: 1382: width -= c;
  7326  001146  504C               	movf	sprintf@c,w,c
  7327  001148  5E4A               	subwf	sprintf@width,f,c
  7328  00114A  0E00               	movlw	0
  7329  00114C  BE4C               	btfsc	sprintf@c,7,c
  7330  00114E  0EFF               	movlw	255
  7331  001150  5A4B               	subwfb	sprintf@width+1,f,c
  7332  001152  D005               	goto	l3253
  7333  001154                     l3251:
  7334                           
  7335                           ;doprnt.c: 1383: else
  7336                           ;doprnt.c: 1384: width = 0;
  7337  001154  0E00               	movlw	0
  7338  001156  6E4B               	movwf	sprintf@width+1,c
  7339  001158  0E00               	movlw	0
  7340  00115A  6E4A               	movwf	sprintf@width,c
  7341  00115C  D000               	goto	l3253
  7342  00115E                     l3253:
  7343                           
  7344                           ;doprnt.c: 1387: if(flag & 0x04) {
  7345  00115E  A446               	btfss	sprintf@flag,2,c
  7346  001160  D015               	goto	l3263
  7347                           
  7348                           ;doprnt.c: 1415: if(width)
  7349  001162  504A               	movf	sprintf@width,w,c
  7350  001164  104B               	iorwf	sprintf@width+1,w,c
  7351  001166  B4D8               	btfsc	status,2,c
  7352  001168  D026               	goto	l547
  7353  00116A                     l3257:
  7354                           
  7355                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  7356  00116A  C036  FFD9         	movff	sprintf@sp,fsr2l
  7357  00116E  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7358  001172  0E30               	movlw	48
  7359  001174  6EDF               	movwf	indf2,c
  7360  001176  4A36               	infsnz	sprintf@sp,f,c
  7361  001178  2A37               	incf	sprintf@sp+1,f,c
  7362                           
  7363                           ;doprnt.c: 1418: while(--width);
  7364  00117A  064A               	decf	sprintf@width,f,c
  7365  00117C  A0D8               	btfss	status,0,c
  7366  00117E  064B               	decf	sprintf@width+1,f,c
  7367  001180  504A               	movf	sprintf@width,w,c
  7368  001182  104B               	iorwf	sprintf@width+1,w,c
  7369  001184  B4D8               	btfsc	status,2,c
  7370  001186  D017               	goto	l547
  7371  001188  D7F0               	goto	l3257
  7372                           
  7373                           ;doprnt.c: 1420: } else
  7374  00118A  D015               	goto	l547
  7375  00118C                     l3263:
  7376                           
  7377                           ;doprnt.c: 1422: {
  7378                           ;doprnt.c: 1424: if(width
  7379                           ;doprnt.c: 1428: )
  7380  00118C  504A               	movf	sprintf@width,w,c
  7381  00118E  104B               	iorwf	sprintf@width+1,w,c
  7382  001190  B4D8               	btfsc	status,2,c
  7383  001192  D011               	goto	l547
  7384  001194                     l3265:
  7385                           
  7386                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7387  001194  C036  FFD9         	movff	sprintf@sp,fsr2l
  7388  001198  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7389  00119C  0E20               	movlw	32
  7390  00119E  6EDF               	movwf	indf2,c
  7391  0011A0  4A36               	infsnz	sprintf@sp,f,c
  7392  0011A2  2A37               	incf	sprintf@sp+1,f,c
  7393                           
  7394                           ;doprnt.c: 1431: while(--width);
  7395  0011A4  064A               	decf	sprintf@width,f,c
  7396  0011A6  A0D8               	btfss	status,0,c
  7397  0011A8  064B               	decf	sprintf@width+1,f,c
  7398  0011AA  504A               	movf	sprintf@width,w,c
  7399  0011AC  104B               	iorwf	sprintf@width+1,w,c
  7400  0011AE  B4D8               	btfsc	status,2,c
  7401  0011B0  D002               	goto	l547
  7402  0011B2  D7F0               	goto	l3265
  7403  0011B4  D000               	goto	l547
  7404  0011B6                     l547:
  7405                           
  7406                           ;doprnt.c: 1469: }
  7407                           ;doprnt.c: 1472: prec = c;
  7408  0011B6  C04C  F049         	movff	sprintf@c,sprintf@prec
  7409                           
  7410                           ;doprnt.c: 1474: while(prec--) {
  7411  0011BA  D02A               	goto	l3277
  7412  0011BC                     l3271:
  7413                           
  7414                           ;doprnt.c: 1478: {
  7415                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7416  0011BC  5049               	movf	sprintf@prec,w,c
  7417  0011BE  0D02               	mullw	2
  7418  0011C0  0E01               	movlw	low _dpowers
  7419  0011C2  24F3               	addwf	prodl,w,c
  7420  0011C4  6EF6               	movwf	tblptrl,c
  7421  0011C6  0E0F               	movlw	high _dpowers
  7422  0011C8  20F4               	addwfc	prodh,w,c
  7423  0011CA  6EF7               	movwf	tblptrh,c
  7424  0011CC                     	if	0	;There are less than 3 active tblptr bytes
  7425  0011CC                     	endif
  7426  0011CC  0009               	tblrd		*+
  7427  0011CE  CFF5 F02C          	movff	tablat,___lwdiv@divisor
  7428  0011D2  000A               	tblrd		*-
  7429  0011D4  CFF5 F02D          	movff	tablat,___lwdiv@divisor+1
  7430  0011D8  C047  F02A         	movff	sprintf@val,___lwdiv@dividend
  7431  0011DC  C048  F02B         	movff	sprintf@val+1,___lwdiv@dividend+1
  7432  0011E0  EC21  F010         	call	___lwdiv	;wreg free
  7433  0011E4  C02A  F031         	movff	?___lwdiv,___lwmod@dividend
  7434  0011E8  C02B  F032         	movff	?___lwdiv+1,___lwmod@dividend+1
  7435  0011EC  0E00               	movlw	0
  7436  0011EE  6E34               	movwf	___lwmod@divisor+1,c
  7437  0011F0  0E0A               	movlw	10
  7438  0011F2  6E33               	movwf	___lwmod@divisor,c
  7439  0011F4  EC69  F011         	call	___lwmod	;wreg free
  7440  0011F8  5031               	movf	?___lwmod,w,c
  7441  0011FA  0F30               	addlw	48
  7442  0011FC  6E4C               	movwf	sprintf@c,c
  7443                           
  7444                           ;doprnt.c: 1523: }
  7445                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7446  0011FE  C036  FFD9         	movff	sprintf@sp,fsr2l
  7447  001202  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7448  001206  C04C  FFDF         	movff	sprintf@c,indf2
  7449  00120A  4A36               	infsnz	sprintf@sp,f,c
  7450  00120C  2A37               	incf	sprintf@sp+1,f,c
  7451  00120E  D000               	goto	l3277
  7452  001210                     l3277:
  7453  001210  0649               	decf	sprintf@prec,f,c
  7454  001212  2849               	incf	sprintf@prec,w,c
  7455  001214  B4D8               	btfsc	status,2,c
  7456  001216  D002               	goto	l3279
  7457  001218  D7D1               	goto	l3271
  7458  00121A  D000               	goto	l3279
  7459  00121C                     l3279:
  7460  00121C  C038  FFF6         	movff	sprintf@f,tblptrl
  7461  001220  C039  FFF7         	movff	sprintf@f+1,tblptrh
  7462  001224  4A38               	infsnz	sprintf@f,f,c
  7463  001226  2A39               	incf	sprintf@f+1,f,c
  7464  001228                     	if	0	;tblptru may be non-zero
  7465  001228                     	endif
  7466  001228                     	if	0	;tblptru may be non-zero
  7467  001228                     	endif
  7468  001228  0008               	tblrd		*
  7469  00122A  CFF5 F04C          	movff	tablat,sprintf@c
  7470  00122E  504C               	movf	sprintf@c,w,c
  7471  001230  B4D8               	btfsc	status,2,c
  7472  001232  D002               	goto	l3281
  7473  001234  D6DC               	goto	l3197
  7474  001236  D000               	goto	l3281
  7475  001238                     l3281:
  7476                           
  7477                           ;doprnt.c: 1538: *sp = 0;
  7478  001238  C036  FFD9         	movff	sprintf@sp,fsr2l
  7479  00123C  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  7480  001240  0E00               	movlw	0
  7481  001242  6EDF               	movwf	indf2,c
  7482  001244  0012               	return	
  7483                           
  7484                           ;doprnt.c: 1540: return 0;
  7485                           ;	Return value of _sprintf is never used
  7486  001246  0012               	return		;funcret
  7487  001248                     __end_of_sprintf:
  7488                           	opt stack 0
  7489                           tblptru	equ	0xFF8
  7490                           tblptrh	equ	0xFF7
  7491                           tblptrl	equ	0xFF6
  7492                           tablat	equ	0xFF5
  7493                           prodh	equ	0xFF4
  7494                           prodl	equ	0xFF3
  7495                           intcon	equ	0xFF2
  7496                           indf0	equ	0xFEF
  7497                           postinc0	equ	0xFEE
  7498                           fsr0h	equ	0xFEA
  7499                           fsr0l	equ	0xFE9
  7500                           wreg	equ	0xFE8
  7501                           indf1	equ	0xFE7
  7502                           postdec1	equ	0xFE5
  7503                           fsr1h	equ	0xFE2
  7504                           fsr1l	equ	0xFE1
  7505                           indf2	equ	0xFDF
  7506                           postinc2	equ	0xFDE
  7507                           postdec2	equ	0xFDD
  7508                           fsr2h	equ	0xFDA
  7509                           fsr2l	equ	0xFD9
  7510                           status	equ	0xFD8
  7511                           
  7512 ;; *************** function _isdigit *****************
  7513 ;; Defined at:
  7514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  c               1    wreg     unsigned char 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  c               1    2[COMRAM] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;		None               void
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7531 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7532 ;;Total ram usage:        3 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_sprintf
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text51
  7542  002904                     __ptext51:
  7543                           	opt stack 0
  7544  002904                     _isdigit:
  7545                           	opt stack 27
  7546                           
  7547                           ;incstack = 0
  7548                           ;isdigit@c stored from wreg
  7549  002904  6E2C               	movwf	isdigit@c,c
  7550  002906  0E00               	movlw	0
  7551  002908  6E2B               	movwf	_isdigit$2192,c
  7552  00290A  0E3A               	movlw	58
  7553  00290C  602C               	cpfslt	isdigit@c,c
  7554  00290E  D006               	goto	l3009
  7555  002910  0E2F               	movlw	47
  7556  002912  642C               	cpfsgt	isdigit@c,c
  7557  002914  D003               	goto	l3009
  7558  002916  0E01               	movlw	1
  7559  002918  6E2B               	movwf	_isdigit$2192,c
  7560  00291A  D000               	goto	l3009
  7561  00291C                     l3009:
  7562  00291C  C02B  F02A         	movff	_isdigit$2192,??_isdigit
  7563  002920  302A               	rrcf	??_isdigit,w,c
  7564  002922  0012               	return	
  7565  002924  0012               	return		;funcret
  7566  002926                     __end_of_isdigit:
  7567                           	opt stack 0
  7568                           tblptru	equ	0xFF8
  7569                           tblptrh	equ	0xFF7
  7570                           tblptrl	equ	0xFF6
  7571                           tablat	equ	0xFF5
  7572                           prodh	equ	0xFF4
  7573                           prodl	equ	0xFF3
  7574                           intcon	equ	0xFF2
  7575                           indf0	equ	0xFEF
  7576                           postinc0	equ	0xFEE
  7577                           fsr0h	equ	0xFEA
  7578                           fsr0l	equ	0xFE9
  7579                           wreg	equ	0xFE8
  7580                           indf1	equ	0xFE7
  7581                           postdec1	equ	0xFE5
  7582                           fsr1h	equ	0xFE2
  7583                           fsr1l	equ	0xFE1
  7584                           indf2	equ	0xFDF
  7585                           postinc2	equ	0xFDE
  7586                           postdec2	equ	0xFDD
  7587                           fsr2h	equ	0xFDA
  7588                           fsr2l	equ	0xFD9
  7589                           status	equ	0xFD8
  7590                           
  7591 ;; *************** function ___wmul *****************
  7592 ;; Defined at:
  7593 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;  multiplier      2    0[COMRAM] unsigned int 
  7596 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  product         2    4[COMRAM] unsigned int 
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  2    0[COMRAM] unsigned int 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2, status,0, prodl, prodh
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7608 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7612 ;;Total ram usage:        6 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_sprintf
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text52
  7622  002894                     __ptext52:
  7623                           	opt stack 0
  7624  002894                     ___wmul:
  7625                           	opt stack 27
  7626                           
  7627                           ;incstack = 0
  7628  002894  502A               	movf	___wmul@multiplier,w,c
  7629  002896  022C               	mulwf	___wmul@multiplicand,c
  7630  002898  CFF3 F02E          	movff	prodl,___wmul@product
  7631  00289C  CFF4 F02F          	movff	prodh,___wmul@product+1
  7632  0028A0  502A               	movf	___wmul@multiplier,w,c
  7633  0028A2  022D               	mulwf	___wmul@multiplicand+1,c
  7634  0028A4  50F3               	movf	prodl,w,c
  7635  0028A6  262F               	addwf	___wmul@product+1,f,c
  7636  0028A8  502B               	movf	___wmul@multiplier+1,w,c
  7637  0028AA  022C               	mulwf	___wmul@multiplicand,c
  7638  0028AC  50F3               	movf	prodl,w,c
  7639  0028AE  262F               	addwf	___wmul@product+1,f,c
  7640  0028B0  C02E  F02A         	movff	___wmul@product,?___wmul
  7641  0028B4  C02F  F02B         	movff	___wmul@product+1,?___wmul+1
  7642  0028B8  0012               	return	
  7643  0028BA  0012               	return		;funcret
  7644  0028BC                     __end_of___wmul:
  7645                           	opt stack 0
  7646                           tblptru	equ	0xFF8
  7647                           tblptrh	equ	0xFF7
  7648                           tblptrl	equ	0xFF6
  7649                           tablat	equ	0xFF5
  7650                           prodh	equ	0xFF4
  7651                           prodl	equ	0xFF3
  7652                           intcon	equ	0xFF2
  7653                           indf0	equ	0xFEF
  7654                           postinc0	equ	0xFEE
  7655                           fsr0h	equ	0xFEA
  7656                           fsr0l	equ	0xFE9
  7657                           wreg	equ	0xFE8
  7658                           indf1	equ	0xFE7
  7659                           postdec1	equ	0xFE5
  7660                           fsr1h	equ	0xFE2
  7661                           fsr1l	equ	0xFE1
  7662                           indf2	equ	0xFDF
  7663                           postinc2	equ	0xFDE
  7664                           postdec2	equ	0xFDD
  7665                           fsr2h	equ	0xFDA
  7666                           fsr2l	equ	0xFD9
  7667                           status	equ	0xFD8
  7668                           
  7669 ;; *************** function ___lwmod *****************
  7670 ;; Defined at:
  7671 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  dividend        2    7[COMRAM] unsigned int 
  7674 ;;  divisor         2    9[COMRAM] unsigned int 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  counter         1   11[COMRAM] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  2    7[COMRAM] unsigned int 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;Total ram usage:        5 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_sprintf
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text53
  7700  0022D2                     __ptext53:
  7701                           	opt stack 0
  7702  0022D2                     ___lwmod:
  7703                           	opt stack 27
  7704                           
  7705                           ;incstack = 0
  7706  0022D2  5033               	movf	___lwmod@divisor,w,c
  7707  0022D4  1034               	iorwf	___lwmod@divisor+1,w,c
  7708  0022D6  B4D8               	btfsc	status,2,c
  7709  0022D8  D01D               	goto	l1201
  7710  0022DA  0E01               	movlw	1
  7711  0022DC  6E35               	movwf	___lwmod@counter,c
  7712  0022DE  D005               	goto	l3047
  7713  0022E0                     l3045:
  7714  0022E0  90D8               	bcf	status,0,c
  7715  0022E2  3633               	rlcf	___lwmod@divisor,f,c
  7716  0022E4  3634               	rlcf	___lwmod@divisor+1,f,c
  7717  0022E6  2A35               	incf	___lwmod@counter,f,c
  7718  0022E8  D000               	goto	l3047
  7719  0022EA                     l3047:
  7720  0022EA  BE34               	btfsc	___lwmod@divisor+1,7,c
  7721  0022EC  D002               	goto	l3049
  7722  0022EE  D7F8               	goto	l3045
  7723  0022F0  D000               	goto	l3049
  7724  0022F2                     l3049:
  7725  0022F2  5033               	movf	___lwmod@divisor,w,c
  7726  0022F4  5C31               	subwf	___lwmod@dividend,w,c
  7727  0022F6  5034               	movf	___lwmod@divisor+1,w,c
  7728  0022F8  5832               	subwfb	___lwmod@dividend+1,w,c
  7729  0022FA  A0D8               	btfss	status,0,c
  7730  0022FC  D005               	goto	l3053
  7731  0022FE  5033               	movf	___lwmod@divisor,w,c
  7732  002300  5E31               	subwf	___lwmod@dividend,f,c
  7733  002302  5034               	movf	___lwmod@divisor+1,w,c
  7734  002304  5A32               	subwfb	___lwmod@dividend+1,f,c
  7735  002306  D000               	goto	l3053
  7736  002308                     l3053:
  7737  002308  90D8               	bcf	status,0,c
  7738  00230A  3234               	rrcf	___lwmod@divisor+1,f,c
  7739  00230C  3233               	rrcf	___lwmod@divisor,f,c
  7740  00230E  2E35               	decfsz	___lwmod@counter,f,c
  7741  002310  D7F0               	goto	l3049
  7742  002312  D000               	goto	l1201
  7743  002314                     l1201:
  7744  002314  C031  F031         	movff	___lwmod@dividend,?___lwmod
  7745  002318  C032  F032         	movff	___lwmod@dividend+1,?___lwmod+1
  7746  00231C  0012               	return		;funcret
  7747  00231E                     __end_of___lwmod:
  7748                           	opt stack 0
  7749                           tblptru	equ	0xFF8
  7750                           tblptrh	equ	0xFF7
  7751                           tblptrl	equ	0xFF6
  7752                           tablat	equ	0xFF5
  7753                           prodh	equ	0xFF4
  7754                           prodl	equ	0xFF3
  7755                           intcon	equ	0xFF2
  7756                           indf0	equ	0xFEF
  7757                           postinc0	equ	0xFEE
  7758                           fsr0h	equ	0xFEA
  7759                           fsr0l	equ	0xFE9
  7760                           wreg	equ	0xFE8
  7761                           indf1	equ	0xFE7
  7762                           postdec1	equ	0xFE5
  7763                           fsr1h	equ	0xFE2
  7764                           fsr1l	equ	0xFE1
  7765                           indf2	equ	0xFDF
  7766                           postinc2	equ	0xFDE
  7767                           postdec2	equ	0xFDD
  7768                           fsr2h	equ	0xFDA
  7769                           fsr2l	equ	0xFD9
  7770                           status	equ	0xFD8
  7771                           
  7772 ;; *************** function ___lwdiv *****************
  7773 ;; Defined at:
  7774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  dividend        2    0[COMRAM] unsigned int 
  7777 ;;  divisor         2    2[COMRAM] unsigned int 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  quotient        2    4[COMRAM] unsigned int 
  7780 ;;  counter         1    6[COMRAM] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  2    0[COMRAM] unsigned int 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7793 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7794 ;;Total ram usage:        7 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_sprintf
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text54
  7804  002042                     __ptext54:
  7805                           	opt stack 0
  7806  002042                     ___lwdiv:
  7807                           	opt stack 27
  7808                           
  7809                           ;incstack = 0
  7810  002042  0E00               	movlw	0
  7811  002044  6E2F               	movwf	___lwdiv@quotient+1,c
  7812  002046  0E00               	movlw	0
  7813  002048  6E2E               	movwf	___lwdiv@quotient,c
  7814  00204A  502C               	movf	___lwdiv@divisor,w,c
  7815  00204C  102D               	iorwf	___lwdiv@divisor+1,w,c
  7816  00204E  B4D8               	btfsc	status,2,c
  7817  002050  D021               	goto	l1191
  7818  002052  0E01               	movlw	1
  7819  002054  6E30               	movwf	___lwdiv@counter,c
  7820  002056  D005               	goto	l3027
  7821  002058                     l3025:
  7822  002058  90D8               	bcf	status,0,c
  7823  00205A  362C               	rlcf	___lwdiv@divisor,f,c
  7824  00205C  362D               	rlcf	___lwdiv@divisor+1,f,c
  7825  00205E  2A30               	incf	___lwdiv@counter,f,c
  7826  002060  D000               	goto	l3027
  7827  002062                     l3027:
  7828  002062  BE2D               	btfsc	___lwdiv@divisor+1,7,c
  7829  002064  D002               	goto	l3029
  7830  002066  D7F8               	goto	l3025
  7831  002068  D000               	goto	l3029
  7832  00206A                     l3029:
  7833  00206A  90D8               	bcf	status,0,c
  7834  00206C  362E               	rlcf	___lwdiv@quotient,f,c
  7835  00206E  362F               	rlcf	___lwdiv@quotient+1,f,c
  7836  002070  502C               	movf	___lwdiv@divisor,w,c
  7837  002072  5C2A               	subwf	___lwdiv@dividend,w,c
  7838  002074  502D               	movf	___lwdiv@divisor+1,w,c
  7839  002076  582B               	subwfb	___lwdiv@dividend+1,w,c
  7840  002078  A0D8               	btfss	status,0,c
  7841  00207A  D006               	goto	l3037
  7842  00207C  502C               	movf	___lwdiv@divisor,w,c
  7843  00207E  5E2A               	subwf	___lwdiv@dividend,f,c
  7844  002080  502D               	movf	___lwdiv@divisor+1,w,c
  7845  002082  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  7846  002084  802E               	bsf	___lwdiv@quotient,0,c
  7847  002086  D000               	goto	l3037
  7848  002088                     l3037:
  7849  002088  90D8               	bcf	status,0,c
  7850  00208A  322D               	rrcf	___lwdiv@divisor+1,f,c
  7851  00208C  322C               	rrcf	___lwdiv@divisor,f,c
  7852  00208E  2E30               	decfsz	___lwdiv@counter,f,c
  7853  002090  D7EC               	goto	l3029
  7854  002092  D000               	goto	l1191
  7855  002094                     l1191:
  7856  002094  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  7857  002098  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7858  00209C  0012               	return		;funcret
  7859  00209E                     __end_of___lwdiv:
  7860                           	opt stack 0
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodh	equ	0xFF4
  7866                           prodl	equ	0xFF3
  7867                           intcon	equ	0xFF2
  7868                           indf0	equ	0xFEF
  7869                           postinc0	equ	0xFEE
  7870                           fsr0h	equ	0xFEA
  7871                           fsr0l	equ	0xFE9
  7872                           wreg	equ	0xFE8
  7873                           indf1	equ	0xFE7
  7874                           postdec1	equ	0xFE5
  7875                           fsr1h	equ	0xFE2
  7876                           fsr1l	equ	0xFE1
  7877                           indf2	equ	0xFDF
  7878                           postinc2	equ	0xFDE
  7879                           postdec2	equ	0xFDD
  7880                           fsr2h	equ	0xFDA
  7881                           fsr2l	equ	0xFD9
  7882                           status	equ	0xFD8
  7883                           
  7884 ;; *************** function _check_home_callback *****************
  7885 ;; Defined at:
  7886 ;;		line 666 in file "main.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;		None               void
  7893 ;; Registers used:
  7894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7904 ;;Total ram usage:        0 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    7
  7907 ;; This function calls:
  7908 ;;		_activity_home
  7909 ;;		_reset_home_callback
  7910 ;; This function is called by:
  7911 ;;		_main
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text55
  7916  002926                     __ptext55:
  7917                           	opt stack 0
  7918  002926                     _check_home_callback:
  7919                           	opt stack 23
  7920                           
  7921                           ;main.c: 668: if(activity != 0){
  7922                           
  7923                           ;incstack = 0
  7924  002926  5003               	movf	_activity,w,c
  7925  002928  1004               	iorwf	_activity+1,w,c
  7926  00292A  B4D8               	btfsc	status,2,c
  7927  00292C  0012               	return	
  7928                           
  7929                           ;main.c: 670: home_callback--;
  7930  00292E  060F               	decf	_home_callback,f,c
  7931  002930  A0D8               	btfss	status,0,c
  7932  002932  0610               	decf	_home_callback+1,f,c
  7933                           
  7934                           ;main.c: 672: if(home_callback == 0){
  7935  002934  500F               	movf	_home_callback,w,c
  7936  002936  1010               	iorwf	_home_callback+1,w,c
  7937  002938  A4D8               	btfss	status,2,c
  7938  00293A  0012               	return	
  7939                           
  7940                           ;main.c: 674: reset_home_callback();
  7941  00293C  EC02  F015         	call	_reset_home_callback	;wreg free
  7942                           
  7943                           ;main.c: 676: activity_home();
  7944  002940  EC35  F014         	call	_activity_home	;wreg free
  7945  002944  0012               	return	
  7946  002946  0012               	return		;funcret
  7947  002948                     __end_of_check_home_callback:
  7948                           	opt stack 0
  7949                           tblptru	equ	0xFF8
  7950                           tblptrh	equ	0xFF7
  7951                           tblptrl	equ	0xFF6
  7952                           tablat	equ	0xFF5
  7953                           prodh	equ	0xFF4
  7954                           prodl	equ	0xFF3
  7955                           intcon	equ	0xFF2
  7956                           indf0	equ	0xFEF
  7957                           postinc0	equ	0xFEE
  7958                           fsr0h	equ	0xFEA
  7959                           fsr0l	equ	0xFE9
  7960                           wreg	equ	0xFE8
  7961                           indf1	equ	0xFE7
  7962                           postdec1	equ	0xFE5
  7963                           fsr1h	equ	0xFE2
  7964                           fsr1l	equ	0xFE1
  7965                           indf2	equ	0xFDF
  7966                           postinc2	equ	0xFDE
  7967                           postdec2	equ	0xFDD
  7968                           fsr2h	equ	0xFDA
  7969                           fsr2l	equ	0xFD9
  7970                           status	equ	0xFD8
  7971                           
  7972 ;; *************** function _reset_home_callback *****************
  7973 ;; Defined at:
  7974 ;;		line 118 in file "main.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;		None
  7979 ;; Return value:  Size  Location     Type
  7980 ;;		None               void
  7981 ;; Registers used:
  7982 ;;		None
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_button_A
  7998 ;;		_button_B
  7999 ;;		_button_C
  8000 ;;		_button_D
  8001 ;;		_button_asterisk
  8002 ;;		_button_hash
  8003 ;;		_button_number
  8004 ;;		_check_home_callback
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text56
  8009  002A04                     __ptext56:
  8010                           	opt stack 0
  8011  002A04                     _reset_home_callback:
  8012                           	opt stack 28
  8013                           
  8014                           ;main.c: 120: home_callback = home_callback_delay;
  8015                           
  8016                           ;incstack = 0
  8017  002A04  C011  F00F         	movff	_home_callback_delay,_home_callback
  8018  002A08  C012  F010         	movff	_home_callback_delay+1,_home_callback+1
  8019  002A0C  0012               	return		;funcret
  8020  002A0E                     __end_of_reset_home_callback:
  8021                           	opt stack 0
  8022                           tblptru	equ	0xFF8
  8023                           tblptrh	equ	0xFF7
  8024                           tblptrl	equ	0xFF6
  8025                           tablat	equ	0xFF5
  8026                           prodh	equ	0xFF4
  8027                           prodl	equ	0xFF3
  8028                           intcon	equ	0xFF2
  8029                           indf0	equ	0xFEF
  8030                           postinc0	equ	0xFEE
  8031                           fsr0h	equ	0xFEA
  8032                           fsr0l	equ	0xFE9
  8033                           wreg	equ	0xFE8
  8034                           indf1	equ	0xFE7
  8035                           postdec1	equ	0xFE5
  8036                           fsr1h	equ	0xFE2
  8037                           fsr1l	equ	0xFE1
  8038                           indf2	equ	0xFDF
  8039                           postinc2	equ	0xFDE
  8040                           postdec2	equ	0xFDD
  8041                           fsr2h	equ	0xFDA
  8042                           fsr2l	equ	0xFD9
  8043                           status	equ	0xFD8
  8044                           
  8045 ;; *************** function _activity_home *****************
  8046 ;; Defined at:
  8047 ;;		line 254 in file "main.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;		None
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;		None
  8052 ;; Return value:  Size  Location     Type
  8053 ;;		None               void
  8054 ;; Registers used:
  8055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8065 ;;Total ram usage:        0 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:    6
  8068 ;; This function calls:
  8069 ;;		_lcd_init
  8070 ;;		_lcd_write
  8071 ;; This function is called by:
  8072 ;;		_pin_set
  8073 ;;		_button_B_submenu_activation
  8074 ;;		_button_B_submenu_pin_config
  8075 ;;		_button_B_submenu_alarm_volume
  8076 ;;		_button_B_submenu_alarm_tone
  8077 ;;		_button_D
  8078 ;;		_check_home_callback
  8079 ;;		_main
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text57
  8084  00286A                     __ptext57:
  8085                           	opt stack 0
  8086  00286A                     _activity_home:
  8087                           	opt stack 21
  8088                           
  8089                           ;main.c: 256: activity = 0;
  8090                           
  8091                           ;incstack = 0
  8092  00286A  0E00               	movlw	0
  8093  00286C  6E04               	movwf	_activity+1,c
  8094  00286E  0E00               	movlw	0
  8095  002870  6E03               	movwf	_activity,c
  8096                           
  8097                           ;main.c: 257: lcd_init();
  8098  002872  EC95  F00D         	call	_lcd_init	;wreg free
  8099                           
  8100                           ;main.c: 258: lcd_write(1,1,"X28");
  8101  002876  0E00               	movlw	0
  8102  002878  6E35               	movwf	lcd_write@column+1,c
  8103  00287A  0E01               	movlw	1
  8104  00287C  6E34               	movwf	lcd_write@column,c
  8105  00287E  0E00               	movlw	0
  8106  002880  6E37               	movwf	lcd_write@row+1,c
  8107  002882  0E01               	movlw	1
  8108  002884  6E36               	movwf	lcd_write@row,c
  8109  002886  0ECF               	movlw	low STR_18
  8110  002888  6E38               	movwf	lcd_write@string,c
  8111  00288A  0E0F               	movlw	high STR_18
  8112  00288C  6E39               	movwf	lcd_write@string+1,c
  8113  00288E  ECBF  F014         	call	_lcd_write	;wreg free
  8114  002892  0012               	return		;funcret
  8115  002894                     __end_of_activity_home:
  8116                           	opt stack 0
  8117                           tblptru	equ	0xFF8
  8118                           tblptrh	equ	0xFF7
  8119                           tblptrl	equ	0xFF6
  8120                           tablat	equ	0xFF5
  8121                           prodh	equ	0xFF4
  8122                           prodl	equ	0xFF3
  8123                           intcon	equ	0xFF2
  8124                           indf0	equ	0xFEF
  8125                           postinc0	equ	0xFEE
  8126                           fsr0h	equ	0xFEA
  8127                           fsr0l	equ	0xFE9
  8128                           wreg	equ	0xFE8
  8129                           indf1	equ	0xFE7
  8130                           postdec1	equ	0xFE5
  8131                           fsr1h	equ	0xFE2
  8132                           fsr1l	equ	0xFE1
  8133                           indf2	equ	0xFDF
  8134                           postinc2	equ	0xFDE
  8135                           postdec2	equ	0xFDD
  8136                           fsr2h	equ	0xFDA
  8137                           fsr2l	equ	0xFD9
  8138                           status	equ	0xFD8
  8139                           
  8140 ;; *************** function _lcd_write *****************
  8141 ;; Defined at:
  8142 ;;		line 70 in file "main.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  column          2   10[COMRAM] int 
  8145 ;;  row             2   12[COMRAM] int 
  8146 ;;  string          2   14[COMRAM] PTR unsigned char 
  8147 ;;		 -> STR_48(7), STR_47(7), STR_46(5), STR_45(5), 
  8148 ;;		 -> STR_44(5), STR_43(8), STR_42(5), STR_41(8), 
  8149 ;;		 -> STR_40(7), STR_39(11), STR_37(6), STR_36(8), 
  8150 ;;		 -> STR_35(4), STR_34(5), STR_33(6), STR_32(6), 
  8151 ;;		 -> STR_31(3), STR_30(3), STR_29(8), STR_28(2), 
  8152 ;;		 -> STR_27(2), STR_26(2), STR_25(2), STR_24(7), 
  8153 ;;		 -> STR_23(4), STR_22(6), STR_21(8), STR_20(16), 
  8154 ;;		 -> STR_18(4), STR_17(2), STR_16(2), STR_15(2), 
  8155 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  8156 ;;		 -> STR_10(2), buffer1(20), 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;		None               void
  8161 ;; Registers used:
  8162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8168 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8172 ;;Total ram usage:        6 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    5
  8175 ;; This function calls:
  8176 ;;		_lcd_gotoxy
  8177 ;;		_lcd_putrs
  8178 ;; This function is called by:
  8179 ;;		_home_clock_refresh
  8180 ;;		_home_state_refresh
  8181 ;;		_home_volume_refresh
  8182 ;;		_home_tone_refresh
  8183 ;;		_action_menu_selector_0
  8184 ;;		_action_menu_selector_1
  8185 ;;		_action_menu_selector_2
  8186 ;;		_action_menu_selector_3
  8187 ;;		_activity_home
  8188 ;;		_activity_pin
  8189 ;;		_activity_menu
  8190 ;;		_action_submenu_selector_0
  8191 ;;		_action_submenu_selector_1
  8192 ;;		_activity_submenu_activation
  8193 ;;		_activity_submenu_clock
  8194 ;;		_activity_submenu_pin
  8195 ;;		_activity_submenu_pin_set
  8196 ;;		_activity_submenu_alarm
  8197 ;;		_activity_submenu_alarm_volume
  8198 ;;		_activity_submenu_alarm_tone
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text58
  8203  00297E                     __ptext58:
  8204                           	opt stack 0
  8205  00297E                     _lcd_write:
  8206                           	opt stack 21
  8207                           
  8208                           ;main.c: 71: lcd_gotoxy(column, row);
  8209                           
  8210                           ;incstack = 0
  8211  00297E  C036  F02E         	movff	lcd_write@row,lcd_gotoxy@y
  8212  002982  5034               	movf	lcd_write@column,w,c
  8213  002984  EC70  F014         	call	_lcd_gotoxy
  8214                           
  8215                           ;main.c: 72: lcd_putrs(string);
  8216  002988  C038  F032         	movff	lcd_write@string,lcd_putrs@ptr
  8217  00298C  C039  F033         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  8218  002990  EC4F  F010         	call	_lcd_putrs	;wreg free
  8219  002994  0012               	return		;funcret
  8220  002996                     __end_of_lcd_write:
  8221                           	opt stack 0
  8222                           tblptru	equ	0xFF8
  8223                           tblptrh	equ	0xFF7
  8224                           tblptrl	equ	0xFF6
  8225                           tablat	equ	0xFF5
  8226                           prodh	equ	0xFF4
  8227                           prodl	equ	0xFF3
  8228                           intcon	equ	0xFF2
  8229                           indf0	equ	0xFEF
  8230                           postinc0	equ	0xFEE
  8231                           fsr0h	equ	0xFEA
  8232                           fsr0l	equ	0xFE9
  8233                           wreg	equ	0xFE8
  8234                           indf1	equ	0xFE7
  8235                           postdec1	equ	0xFE5
  8236                           fsr1h	equ	0xFE2
  8237                           fsr1l	equ	0xFE1
  8238                           indf2	equ	0xFDF
  8239                           postinc2	equ	0xFDE
  8240                           postdec2	equ	0xFDD
  8241                           fsr2h	equ	0xFDA
  8242                           fsr2l	equ	0xFD9
  8243                           status	equ	0xFD8
  8244                           
  8245 ;; *************** function _lcd_putrs *****************
  8246 ;; Defined at:
  8247 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  8250 ;;		 -> STR_49(2), STR_48(7), STR_47(7), STR_46(5), 
  8251 ;;		 -> STR_45(5), STR_44(5), STR_43(8), STR_42(5), 
  8252 ;;		 -> STR_41(8), STR_40(7), STR_39(11), STR_37(6), 
  8253 ;;		 -> STR_36(8), STR_35(4), STR_34(5), STR_33(6), 
  8254 ;;		 -> STR_32(6), STR_31(3), STR_30(3), STR_29(8), 
  8255 ;;		 -> STR_28(2), STR_27(2), STR_26(2), STR_25(2), 
  8256 ;;		 -> STR_24(7), STR_23(4), STR_22(6), STR_21(8), 
  8257 ;;		 -> STR_20(16), STR_18(4), STR_17(2), STR_16(2), 
  8258 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  8259 ;;		 -> STR_11(2), STR_10(2), buffer1(20), 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;		None               void
  8264 ;; Registers used:
  8265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8275 ;;Total ram usage:        2 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    4
  8278 ;; This function calls:
  8279 ;;		_lcd_putc
  8280 ;; This function is called by:
  8281 ;;		_lcd_write
  8282 ;;		_button_number
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text59
  8287  00209E                     __ptext59:
  8288                           	opt stack 0
  8289  00209E                     _lcd_putrs:
  8290                           	opt stack 24
  8291                           
  8292                           ;unmc_lcd_216.c: 223: while(*ptr){
  8293                           
  8294                           ;incstack = 0
  8295  00209E  D015               	goto	l2777
  8296  0020A0                     l2773:
  8297                           
  8298                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  8299  0020A0  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  8300  0020A4  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  8301  0020A8  6AF8               	clrf	tblptru,c
  8302  0020AA  0E0E               	movlw	(high __ramtop+-1)
  8303  0020AC  64F7               	cpfsgt	tblptrh,c
  8304  0020AE  D003               	bra	u1397
  8305  0020B0  0008               	tblrd		*
  8306  0020B2  50F5               	movf	tablat,w,c
  8307  0020B4  D005               	bra	u1390
  8308  0020B6                     u1397:
  8309  0020B6  CFF6 FFE9          	movff	tblptrl,fsr0l
  8310  0020BA  CFF7 FFEA          	movff	tblptrh,fsr0h
  8311  0020BE  50EF               	movf	indf0,w,c
  8312  0020C0                     u1390:
  8313  0020C0  EC8F  F011         	call	_lcd_putc
  8314  0020C4  4A32               	infsnz	lcd_putrs@ptr,f,c
  8315  0020C6  2A33               	incf	lcd_putrs@ptr+1,f,c
  8316  0020C8  D000               	goto	l2777
  8317  0020CA                     l2777:
  8318  0020CA  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  8319  0020CE  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  8320  0020D2  6AF8               	clrf	tblptru,c
  8321  0020D4  0E0E               	movlw	(high __ramtop+-1)
  8322  0020D6  64F7               	cpfsgt	tblptrh,c
  8323  0020D8  D003               	bra	u1407
  8324  0020DA  0008               	tblrd		*
  8325  0020DC  50F5               	movf	tablat,w,c
  8326  0020DE  D005               	bra	u1400
  8327  0020E0                     u1407:
  8328  0020E0  CFF6 FFE9          	movff	tblptrl,fsr0l
  8329  0020E4  CFF7 FFEA          	movff	tblptrh,fsr0h
  8330  0020E8  50EF               	movf	indf0,w,c
  8331  0020EA                     u1400:
  8332  0020EA  0900               	iorlw	0
  8333  0020EC  A4D8               	btfss	status,2,c
  8334  0020EE  D7D8               	goto	l2773
  8335  0020F0  0012               	return		;funcret
  8336  0020F2                     __end_of_lcd_putrs:
  8337                           	opt stack 0
  8338                           tblptru	equ	0xFF8
  8339                           tblptrh	equ	0xFF7
  8340                           tblptrl	equ	0xFF6
  8341                           tablat	equ	0xFF5
  8342                           prodh	equ	0xFF4
  8343                           prodl	equ	0xFF3
  8344                           intcon	equ	0xFF2
  8345                           indf0	equ	0xFEF
  8346                           postinc0	equ	0xFEE
  8347                           fsr0h	equ	0xFEA
  8348                           fsr0l	equ	0xFE9
  8349                           wreg	equ	0xFE8
  8350                           indf1	equ	0xFE7
  8351                           postdec1	equ	0xFE5
  8352                           fsr1h	equ	0xFE2
  8353                           fsr1l	equ	0xFE1
  8354                           indf2	equ	0xFDF
  8355                           postinc2	equ	0xFDE
  8356                           postdec2	equ	0xFDD
  8357                           fsr2h	equ	0xFDA
  8358                           fsr2l	equ	0xFD9
  8359                           status	equ	0xFD8
  8360                           
  8361 ;; *************** function _lcd_putc *****************
  8362 ;; Defined at:
  8363 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  c               1    wreg     unsigned char 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  c               1    7[COMRAM] unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;		None               void
  8370 ;; Registers used:
  8371 ;;		wreg, status,2, status,0, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;Total ram usage:        1 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    3
  8384 ;; This function calls:
  8385 ;;		_lcd_gotoxy
  8386 ;;		_lcd_send_byte
  8387 ;; This function is called by:
  8388 ;;		_lcd_putrs
  8389 ;;		_lcd_puts
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text60
  8394  00231E                     __ptext60:
  8395                           	opt stack 0
  8396  00231E                     _lcd_putc:
  8397                           	opt stack 24
  8398                           
  8399                           ;incstack = 0
  8400                           ;lcd_putc@c stored from wreg
  8401  00231E  6E31               	movwf	lcd_putc@c,c
  8402                           
  8403                           ;unmc_lcd_216.c: 173: switch(c){
  8404  002320  D018               	goto	l2769
  8405  002322                     l2759:
  8406                           
  8407                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  8408  002322  0E01               	movlw	1
  8409  002324  6E2C               	movwf	lcd_send_byte@n,c
  8410  002326  0E00               	movlw	0
  8411  002328  ECD6  F013         	call	_lcd_send_byte
  8412                           
  8413                           ;unmc_lcd_216.c: 176: break;
  8414  00232C  0012               	return	
  8415  00232E                     l2761:
  8416                           
  8417                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  8418  00232E  0E02               	movlw	2
  8419  002330  6E2E               	movwf	lcd_gotoxy@y,c
  8420  002332  0E01               	movlw	1
  8421  002334  EC70  F014         	call	_lcd_gotoxy
  8422                           
  8423                           ;unmc_lcd_216.c: 179: break;
  8424  002338  0012               	return	
  8425  00233A                     l2763:
  8426                           
  8427                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  8428  00233A  0E10               	movlw	16
  8429  00233C  6E2C               	movwf	lcd_send_byte@n,c
  8430  00233E  0E00               	movlw	0
  8431  002340  ECD6  F013         	call	_lcd_send_byte
  8432                           
  8433                           ;unmc_lcd_216.c: 182: break;
  8434  002344  0012               	return	
  8435  002346                     l2765:
  8436                           
  8437                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  8438  002346  C031  F02C         	movff	lcd_putc@c,lcd_send_byte@n
  8439  00234A  0E01               	movlw	1
  8440  00234C  ECD6  F013         	call	_lcd_send_byte
  8441                           
  8442                           ;unmc_lcd_216.c: 186: }
  8443                           
  8444                           ;unmc_lcd_216.c: 185: break;
  8445  002350  0012               	return	
  8446  002352                     l2769:
  8447  002352  5031               	movf	lcd_putc@c,w,c
  8448                           
  8449                           ; Switch size 1, requested type "space"
  8450                           ; Number of cases is 3, Range of values is 8 to 12
  8451                           ; switch strategies available:
  8452                           ; Name         Instructions Cycles
  8453                           ; simple_byte           10     6 (average)
  8454                           ;	Chosen strategy is simple_byte
  8455  002354  0A08               	xorlw	8	; case 8
  8456  002356  B4D8               	btfsc	status,2,c
  8457  002358  D7F0               	goto	l2763
  8458  00235A  0A02               	xorlw	2	; case 10
  8459  00235C  B4D8               	btfsc	status,2,c
  8460  00235E  D7E7               	goto	l2761
  8461  002360  0A06               	xorlw	6	; case 12
  8462  002362  B4D8               	btfsc	status,2,c
  8463  002364  D7DE               	goto	l2759
  8464  002366  D7EF               	goto	l2765
  8465  002368  0012               	return		;funcret
  8466  00236A                     __end_of_lcd_putc:
  8467                           	opt stack 0
  8468                           tblptru	equ	0xFF8
  8469                           tblptrh	equ	0xFF7
  8470                           tblptrl	equ	0xFF6
  8471                           tablat	equ	0xFF5
  8472                           prodh	equ	0xFF4
  8473                           prodl	equ	0xFF3
  8474                           intcon	equ	0xFF2
  8475                           indf0	equ	0xFEF
  8476                           postinc0	equ	0xFEE
  8477                           fsr0h	equ	0xFEA
  8478                           fsr0l	equ	0xFE9
  8479                           wreg	equ	0xFE8
  8480                           indf1	equ	0xFE7
  8481                           postdec1	equ	0xFE5
  8482                           fsr1h	equ	0xFE2
  8483                           fsr1l	equ	0xFE1
  8484                           indf2	equ	0xFDF
  8485                           postinc2	equ	0xFDE
  8486                           postdec2	equ	0xFDD
  8487                           fsr2h	equ	0xFDA
  8488                           fsr2l	equ	0xFD9
  8489                           status	equ	0xFD8
  8490                           
  8491 ;; *************** function _lcd_gotoxy *****************
  8492 ;; Defined at:
  8493 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  x               1    wreg     unsigned char 
  8496 ;;  y               1    4[COMRAM] unsigned char 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  x               1    5[COMRAM] unsigned char 
  8499 ;;  address         1    6[COMRAM] unsigned char 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;		None               void
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0, cstack
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8512 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;Total ram usage:        3 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    2
  8516 ;; This function calls:
  8517 ;;		_lcd_send_byte
  8518 ;; This function is called by:
  8519 ;;		_lcd_write
  8520 ;;		_activity_pin
  8521 ;;		_activity_submenu_pin_set
  8522 ;;		_lcd_putc
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           	psect	text61
  8527  0028E0                     __ptext61:
  8528                           	opt stack 0
  8529  0028E0                     _lcd_gotoxy:
  8530                           	opt stack 24
  8531                           
  8532                           ;incstack = 0
  8533                           ;lcd_gotoxy@x stored from wreg
  8534  0028E0  6E2F               	movwf	lcd_gotoxy@x,c
  8535                           
  8536                           ;unmc_lcd_216.c: 159: int8 address;
  8537                           ;unmc_lcd_216.c: 161: if(y != 1)
  8538  0028E2  042E               	decf	lcd_gotoxy@y,w,c
  8539  0028E4  B4D8               	btfsc	status,2,c
  8540  0028E6  D002               	goto	l2751
  8541                           
  8542                           ;unmc_lcd_216.c: 162: address = 0x40;
  8543  0028E8  0E40               	movlw	64
  8544  0028EA  D001               	goto	L4
  8545  0028EC                     l2751:
  8546                           
  8547                           ;unmc_lcd_216.c: 163: else
  8548                           ;unmc_lcd_216.c: 164: address=0;
  8549  0028EC  0E00               	movlw	0
  8550  0028EE                     L4:
  8551  0028EE  6E30               	movwf	lcd_gotoxy@address,c
  8552  0028F0  D000               	goto	l2753
  8553  0028F2                     l2753:
  8554                           
  8555                           ;unmc_lcd_216.c: 166: address += x-1;
  8556  0028F2  042F               	decf	lcd_gotoxy@x,w,c
  8557  0028F4  2630               	addwf	lcd_gotoxy@address,f,c
  8558                           
  8559                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  8560  0028F6  5030               	movf	lcd_gotoxy@address,w,c
  8561  0028F8  0980               	iorlw	128
  8562  0028FA  6E2C               	movwf	lcd_send_byte@n,c
  8563  0028FC  0E00               	movlw	0
  8564  0028FE  ECD6  F013         	call	_lcd_send_byte
  8565  002902  0012               	return		;funcret
  8566  002904                     __end_of_lcd_gotoxy:
  8567                           	opt stack 0
  8568                           tblptru	equ	0xFF8
  8569                           tblptrh	equ	0xFF7
  8570                           tblptrl	equ	0xFF6
  8571                           tablat	equ	0xFF5
  8572                           prodh	equ	0xFF4
  8573                           prodl	equ	0xFF3
  8574                           intcon	equ	0xFF2
  8575                           indf0	equ	0xFEF
  8576                           postinc0	equ	0xFEE
  8577                           fsr0h	equ	0xFEA
  8578                           fsr0l	equ	0xFE9
  8579                           wreg	equ	0xFE8
  8580                           indf1	equ	0xFE7
  8581                           postdec1	equ	0xFE5
  8582                           fsr1h	equ	0xFE2
  8583                           fsr1l	equ	0xFE1
  8584                           indf2	equ	0xFDF
  8585                           postinc2	equ	0xFDE
  8586                           postdec2	equ	0xFDD
  8587                           fsr2h	equ	0xFDA
  8588                           fsr2l	equ	0xFD9
  8589                           status	equ	0xFD8
  8590                           
  8591 ;; *************** function _lcd_init *****************
  8592 ;; Defined at:
  8593 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;		None
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  i               1    4[COMRAM] unsigned char 
  8598 ;; Return value:  Size  Location     Type
  8599 ;;		None               void
  8600 ;; Registers used:
  8601 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8611 ;;Total ram usage:        1 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:    2
  8614 ;; This function calls:
  8615 ;;		_Delay1KTCYx
  8616 ;;		_lcd_send_byte
  8617 ;;		_lcd_send_nibble
  8618 ;; This function is called by:
  8619 ;;		_setup
  8620 ;;		_activity_home
  8621 ;;		_activity_pin
  8622 ;;		_activity_menu
  8623 ;;		_activity_submenu_activation
  8624 ;;		_activity_submenu_clock
  8625 ;;		_activity_submenu_pin
  8626 ;;		_activity_submenu_pin_set
  8627 ;;		_activity_submenu_alarm
  8628 ;;		_activity_submenu_alarm_volume
  8629 ;;		_activity_submenu_alarm_tone
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text62
  8634  001B2A                     __ptext62:
  8635                           	opt stack 0
  8636  001B2A                     _lcd_init:
  8637                           	opt stack 27
  8638                           
  8639                           ;unmc_lcd_216.c: 120: int8 i;
  8640                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  8641                           
  8642                           ;incstack = 0
  8643  001B2A  9693               	bcf	3987,3,c	;volatile
  8644                           
  8645                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  8646  001B2C  9493               	bcf	3987,2,c	;volatile
  8647                           
  8648                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  8649  001B2E  968A               	bcf	3978,3,c	;volatile
  8650                           
  8651                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  8652  001B30  948A               	bcf	3978,2,c	;volatile
  8653                           
  8654                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  8655  001B32  9893               	bcf	3987,4,c	;volatile
  8656                           
  8657                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  8658  001B34  9A93               	bcf	3987,5,c	;volatile
  8659                           
  8660                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  8661  001B36  9C93               	bcf	3987,6,c	;volatile
  8662                           
  8663                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  8664  001B38  9E93               	bcf	3987,7,c	;volatile
  8665                           
  8666                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  8667  001B3A  0E0A               	movlw	10
  8668  001B3C  ECE8  F014         	call	_Delay1KTCYx
  8669                           
  8670                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  8671  001B40  0E0A               	movlw	10
  8672  001B42  ECE8  F014         	call	_Delay1KTCYx
  8673                           
  8674                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  8675  001B46  0E0A               	movlw	10
  8676  001B48  ECE8  F014         	call	_Delay1KTCYx
  8677                           
  8678                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  8679  001B4C  0E00               	movlw	0
  8680  001B4E  6E2E               	movwf	lcd_init@i,c
  8681  001B50                     l2799:
  8682  001B50  0E02               	movlw	2
  8683  001B52  642E               	cpfsgt	lcd_init@i,c
  8684  001B54  D001               	goto	l2803
  8685  001B56  D008               	goto	l2809
  8686  001B58                     l2803:
  8687                           
  8688                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  8689  001B58  0E03               	movlw	3
  8690  001B5A  EC13  F00E         	call	_lcd_send_nibble
  8691                           
  8692                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  8693  001B5E  0E0A               	movlw	10
  8694  001B60  ECE8  F014         	call	_Delay1KTCYx
  8695  001B64  2A2E               	incf	lcd_init@i,f,c
  8696  001B66  D7F4               	goto	l2799
  8697  001B68                     l2809:
  8698                           
  8699                           ;unmc_lcd_216.c: 146: }
  8700                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  8701  001B68  0E02               	movlw	2
  8702  001B6A  EC13  F00E         	call	_lcd_send_nibble
  8703                           
  8704                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  8705  001B6E  0E00               	movlw	0
  8706  001B70  6E2E               	movwf	lcd_init@i,c
  8707  001B72  0E03               	movlw	3
  8708  001B74  642E               	cpfsgt	lcd_init@i,c
  8709  001B76  D002               	goto	l2817
  8710  001B78  0012               	return	
  8711  001B7A  0012               	return	
  8712  001B7C                     l2817:
  8713                           
  8714                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  8715  001B7C  502E               	movf	lcd_init@i,w,c
  8716  001B7E  0D01               	mullw	1
  8717  001B80  0E0B               	movlw	low _LCD_INIT_STRING
  8718  001B82  24F3               	addwf	prodl,w,c
  8719  001B84  6EF6               	movwf	tblptrl,c
  8720  001B86  0E0F               	movlw	high _LCD_INIT_STRING
  8721  001B88  20F4               	addwfc	prodh,w,c
  8722  001B8A  6EF7               	movwf	tblptrh,c
  8723  001B8C                     	if	0	;There are less than 3 active tblptr bytes
  8724  001B8C                     	endif
  8725  001B8C  0008               	tblrd		*
  8726  001B8E  CFF5 F02C          	movff	tablat,lcd_send_byte@n
  8727  001B92  0E00               	movlw	0
  8728  001B94  ECD6  F013         	call	_lcd_send_byte
  8729                           
  8730                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  8731  001B98  0E0A               	movlw	10
  8732  001B9A  ECE8  F014         	call	_Delay1KTCYx
  8733  001B9E  2A2E               	incf	lcd_init@i,f,c
  8734  001BA0  0E03               	movlw	3
  8735  001BA2  642E               	cpfsgt	lcd_init@i,c
  8736  001BA4  D7EB               	goto	l2817
  8737  001BA6  0012               	return	
  8738  001BA8  0012               	return		;funcret
  8739  001BAA                     __end_of_lcd_init:
  8740                           	opt stack 0
  8741                           tblptru	equ	0xFF8
  8742                           tblptrh	equ	0xFF7
  8743                           tblptrl	equ	0xFF6
  8744                           tablat	equ	0xFF5
  8745                           prodh	equ	0xFF4
  8746                           prodl	equ	0xFF3
  8747                           intcon	equ	0xFF2
  8748                           indf0	equ	0xFEF
  8749                           postinc0	equ	0xFEE
  8750                           fsr0h	equ	0xFEA
  8751                           fsr0l	equ	0xFE9
  8752                           wreg	equ	0xFE8
  8753                           indf1	equ	0xFE7
  8754                           postdec1	equ	0xFE5
  8755                           fsr1h	equ	0xFE2
  8756                           fsr1l	equ	0xFE1
  8757                           indf2	equ	0xFDF
  8758                           postinc2	equ	0xFDE
  8759                           postdec2	equ	0xFDD
  8760                           fsr2h	equ	0xFDA
  8761                           fsr2l	equ	0xFD9
  8762                           status	equ	0xFD8
  8763                           
  8764 ;; *************** function _lcd_send_byte *****************
  8765 ;; Defined at:
  8766 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  address         1    wreg     unsigned char 
  8769 ;;  n               1    2[COMRAM] unsigned char 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  address         1    3[COMRAM] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;		None               void
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8781 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8785 ;;Total ram usage:        2 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    1
  8788 ;; This function calls:
  8789 ;;		_Delay100TCYx
  8790 ;;		_lcd_send_nibble
  8791 ;; This function is called by:
  8792 ;;		_lcd_init
  8793 ;;		_lcd_gotoxy
  8794 ;;		_lcd_putc
  8795 ;;		_lcd_comand
  8796 ;;		_lcd_setcursor_vb
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           	psect	text63
  8801  0027AC                     __ptext63:
  8802                           	opt stack 0
  8803  0027AC                     _lcd_send_byte:
  8804                           	opt stack 27
  8805                           
  8806                           ;incstack = 0
  8807                           ;lcd_send_byte@address stored from wreg
  8808  0027AC  6E2D               	movwf	lcd_send_byte@address,c
  8809                           
  8810                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  8811  0027AE  968A               	bcf	3978,3,c	;volatile
  8812                           
  8813                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  8814  0027B0  0E02               	movlw	2
  8815  0027B2  ECDF  F014         	call	_Delay100TCYx
  8816                           
  8817                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  8818  0027B6  9893               	bcf	3987,4,c	;volatile
  8819                           
  8820                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  8821  0027B8  9A93               	bcf	3987,5,c	;volatile
  8822                           
  8823                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  8824  0027BA  9C93               	bcf	3987,6,c	;volatile
  8825                           
  8826                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  8827  0027BC  9E93               	bcf	3987,7,c	;volatile
  8828                           
  8829                           ;unmc_lcd_216.c: 101: if(address)
  8830  0027BE  502D               	movf	lcd_send_byte@address,w,c
  8831  0027C0  B4D8               	btfsc	status,2,c
  8832  0027C2  D002               	goto	l468
  8833                           
  8834                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  8835  0027C4  868A               	bsf	3978,3,c	;volatile
  8836  0027C6  D001               	goto	l469
  8837  0027C8                     l468:
  8838                           
  8839                           ;unmc_lcd_216.c: 103: else
  8840                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  8841  0027C8  968A               	bcf	3978,3,c	;volatile
  8842  0027CA                     l469:
  8843                           
  8844                           ;unmc_lcd_216.c: 106: __nop();
  8845  0027CA  F000               	nop	
  8846                           
  8847                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  8848  0027CC  382C               	swapf	lcd_send_byte@n,w,c
  8849  0027CE  0B0F               	andlw	15
  8850  0027D0  EC13  F00E         	call	_lcd_send_nibble
  8851                           
  8852                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  8853  0027D4  502C               	movf	lcd_send_byte@n,w,c
  8854  0027D6  0B0F               	andlw	15
  8855  0027D8  EC13  F00E         	call	_lcd_send_nibble
  8856  0027DC  0012               	return		;funcret
  8857  0027DE                     __end_of_lcd_send_byte:
  8858                           	opt stack 0
  8859                           tblptru	equ	0xFF8
  8860                           tblptrh	equ	0xFF7
  8861                           tblptrl	equ	0xFF6
  8862                           tablat	equ	0xFF5
  8863                           prodh	equ	0xFF4
  8864                           prodl	equ	0xFF3
  8865                           intcon	equ	0xFF2
  8866                           indf0	equ	0xFEF
  8867                           postinc0	equ	0xFEE
  8868                           fsr0h	equ	0xFEA
  8869                           fsr0l	equ	0xFE9
  8870                           wreg	equ	0xFE8
  8871                           indf1	equ	0xFE7
  8872                           postdec1	equ	0xFE5
  8873                           fsr1h	equ	0xFE2
  8874                           fsr1l	equ	0xFE1
  8875                           indf2	equ	0xFDF
  8876                           postinc2	equ	0xFDE
  8877                           postdec2	equ	0xFDD
  8878                           fsr2h	equ	0xFDA
  8879                           fsr2l	equ	0xFD9
  8880                           status	equ	0xFD8
  8881                           
  8882 ;; *************** function _lcd_send_nibble *****************
  8883 ;; Defined at:
  8884 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  nibble          1    wreg     unsigned char 
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;  nibble          1    1[COMRAM] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;		None               void
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, status,0
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8902 ;;Total ram usage:        2 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_lcd_send_byte
  8908 ;;		_lcd_init
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text64
  8913  001C26                     __ptext64:
  8914                           	opt stack 0
  8915  001C26                     _lcd_send_nibble:
  8916                           	opt stack 28
  8917                           
  8918                           ;incstack = 0
  8919                           ;lcd_send_nibble@nibble stored from wreg
  8920  001C26  6E2B               	movwf	lcd_send_nibble@nibble,c
  8921                           
  8922                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  8923  001C28  A02B               	btfss	lcd_send_nibble@nibble,0,c
  8924  001C2A  D003               	goto	u1290
  8925  001C2C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8926  001C2E  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  8927  001C30  D001               	goto	u1308
  8928  001C32                     u1290:
  8929  001C32  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8930  001C34                     u1308:
  8931  001C34  3A2A               	swapf	??_lcd_send_nibble,f,c
  8932  001C36  508A               	movf	3978,w,c	;volatile
  8933  001C38  182A               	xorwf	??_lcd_send_nibble,w,c
  8934  001C3A  0BEF               	andlw	-17
  8935  001C3C  182A               	xorwf	??_lcd_send_nibble,w,c
  8936  001C3E  6E8A               	movwf	3978,c	;volatile
  8937                           
  8938                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  8939  001C40  A22B               	btfss	lcd_send_nibble@nibble,1,c
  8940  001C42  D003               	goto	u1310
  8941  001C44  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8942  001C46  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  8943  001C48  D001               	goto	u1328
  8944  001C4A                     u1310:
  8945  001C4A  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8946  001C4C                     u1328:
  8947  001C4C  3A2A               	swapf	??_lcd_send_nibble,f,c
  8948  001C4E  462A               	rlncf	??_lcd_send_nibble,f,c
  8949  001C50  508A               	movf	3978,w,c	;volatile
  8950  001C52  182A               	xorwf	??_lcd_send_nibble,w,c
  8951  001C54  0BDF               	andlw	-33
  8952  001C56  182A               	xorwf	??_lcd_send_nibble,w,c
  8953  001C58  6E8A               	movwf	3978,c	;volatile
  8954                           
  8955                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  8956  001C5A  A42B               	btfss	lcd_send_nibble@nibble,2,c
  8957  001C5C  D003               	goto	u1330
  8958  001C5E  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8959  001C60  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  8960  001C62  D001               	goto	u1348
  8961  001C64                     u1330:
  8962  001C64  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8963  001C66                     u1348:
  8964  001C66  3A2A               	swapf	??_lcd_send_nibble,f,c
  8965  001C68  462A               	rlncf	??_lcd_send_nibble,f,c
  8966  001C6A  462A               	rlncf	??_lcd_send_nibble,f,c
  8967  001C6C  508A               	movf	3978,w,c	;volatile
  8968  001C6E  182A               	xorwf	??_lcd_send_nibble,w,c
  8969  001C70  0BBF               	andlw	-65
  8970  001C72  182A               	xorwf	??_lcd_send_nibble,w,c
  8971  001C74  6E8A               	movwf	3978,c	;volatile
  8972                           
  8973                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  8974  001C76  A62B               	btfss	lcd_send_nibble@nibble,3,c
  8975  001C78  D003               	goto	u1350
  8976  001C7A  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8977  001C7C  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  8978  001C7E  D001               	goto	u1368
  8979  001C80                     u1350:
  8980  001C80  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  8981  001C82                     u1368:
  8982  001C82  322A               	rrcf	??_lcd_send_nibble,f,c
  8983  001C84  322A               	rrcf	??_lcd_send_nibble,f,c
  8984  001C86  508A               	movf	3978,w,c	;volatile
  8985  001C88  182A               	xorwf	??_lcd_send_nibble,w,c
  8986  001C8A  0B7F               	andlw	-129
  8987  001C8C  182A               	xorwf	??_lcd_send_nibble,w,c
  8988  001C8E  6E8A               	movwf	3978,c	;volatile
  8989                           
  8990                           ;unmc_lcd_216.c: 32: __nop();
  8991  001C90  F000               	nop	
  8992                           
  8993                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  8994  001C92  848A               	bsf	3978,2,c	;volatile
  8995                           
  8996                           ;unmc_lcd_216.c: 34: __nop();__nop();
  8997  001C94  F000               	nop	
  8998  001C96  F000               	nop	
  8999                           
  9000                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  9001  001C98  948A               	bcf	3978,2,c	;volatile
  9002  001C9A  0012               	return		;funcret
  9003  001C9C                     __end_of_lcd_send_nibble:
  9004                           	opt stack 0
  9005                           tblptru	equ	0xFF8
  9006                           tblptrh	equ	0xFF7
  9007                           tblptrl	equ	0xFF6
  9008                           tablat	equ	0xFF5
  9009                           prodh	equ	0xFF4
  9010                           prodl	equ	0xFF3
  9011                           intcon	equ	0xFF2
  9012                           indf0	equ	0xFEF
  9013                           postinc0	equ	0xFEE
  9014                           fsr0h	equ	0xFEA
  9015                           fsr0l	equ	0xFE9
  9016                           wreg	equ	0xFE8
  9017                           indf1	equ	0xFE7
  9018                           postdec1	equ	0xFE5
  9019                           fsr1h	equ	0xFE2
  9020                           fsr1l	equ	0xFE1
  9021                           indf2	equ	0xFDF
  9022                           postinc2	equ	0xFDE
  9023                           postdec2	equ	0xFDD
  9024                           fsr2h	equ	0xFDA
  9025                           fsr2l	equ	0xFD9
  9026                           status	equ	0xFD8
  9027                           
  9028 ;; *************** function _Delay100TCYx *****************
  9029 ;; Defined at:
  9030 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  unit            1    wreg     unsigned char 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  unit            1    0[COMRAM] unsigned char 
  9035 ;; Return value:  Size  Location     Type
  9036 ;;		None               void
  9037 ;; Registers used:
  9038 ;;		wreg
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;Total ram usage:        1 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_lcd_send_byte
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text65
  9058  0029BE                     __ptext65:
  9059                           	opt stack 0
  9060  0029BE                     _Delay100TCYx:
  9061                           	opt stack 27
  9062                           
  9063                           ;incstack = 0
  9064                           ;Delay100TCYx@unit stored from wreg
  9065  0029BE  6E2A               	movwf	Delay100TCYx@unit,c
  9066  0029C0  0E21               	movlw	33
  9067  0029C2                     u2587:
  9068  0029C2  2EE8               	decfsz	wreg,f,c
  9069  0029C4  D7FE               	goto	u2587
  9070  0029C6  F000               	nop	
  9071  0029C8  2E2A               	decfsz	Delay100TCYx@unit,f,c
  9072  0029CA  D7FA               	goto	l2725
  9073  0029CC  0012               	return	
  9074  0029CE  0012               	return		;funcret
  9075  0029D0                     __end_of_Delay100TCYx:
  9076                           	opt stack 0
  9077                           tblptru	equ	0xFF8
  9078                           tblptrh	equ	0xFF7
  9079                           tblptrl	equ	0xFF6
  9080                           tablat	equ	0xFF5
  9081                           prodh	equ	0xFF4
  9082                           prodl	equ	0xFF3
  9083                           intcon	equ	0xFF2
  9084                           indf0	equ	0xFEF
  9085                           postinc0	equ	0xFEE
  9086                           fsr0h	equ	0xFEA
  9087                           fsr0l	equ	0xFE9
  9088                           wreg	equ	0xFE8
  9089                           indf1	equ	0xFE7
  9090                           postdec1	equ	0xFE5
  9091                           fsr1h	equ	0xFE2
  9092                           fsr1l	equ	0xFE1
  9093                           indf2	equ	0xFDF
  9094                           postinc2	equ	0xFDE
  9095                           postdec2	equ	0xFDD
  9096                           fsr2h	equ	0xFDA
  9097                           fsr2l	equ	0xFD9
  9098                           status	equ	0xFD8
  9099                           
  9100 ;; *************** function _Delay1KTCYx *****************
  9101 ;; Defined at:
  9102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  unit            1    wreg     unsigned char 
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;  unit            1    0[COMRAM] unsigned char 
  9107 ;; Return value:  Size  Location     Type
  9108 ;;		None               void
  9109 ;; Registers used:
  9110 ;;		wreg
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;Total ram usage:        1 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; This function calls:
  9123 ;;		Nothing
  9124 ;; This function is called by:
  9125 ;;		_lcd_init
  9126 ;;		_DelayPORXLCD
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text66
  9131  0029D0                     __ptext66:
  9132                           	opt stack 0
  9133  0029D0                     _Delay1KTCYx:
  9134                           	opt stack 28
  9135                           
  9136                           ;incstack = 0
  9137                           ;Delay1KTCYx@unit stored from wreg
  9138  0029D0  6E2A               	movwf	Delay1KTCYx@unit,c
  9139  0029D2  0EFA               	movlw	250
  9140  0029D4                     u2597:
  9141  0029D4  F000               	nop	
  9142  0029D6  2EE8               	decfsz	wreg,f,c
  9143  0029D8  D7FD               	goto	u2597
  9144  0029DA  2E2A               	decfsz	Delay1KTCYx@unit,f,c
  9145  0029DC  D7FA               	goto	l2779
  9146  0029DE  0012               	return	
  9147  0029E0  0012               	return		;funcret
  9148  0029E2                     __end_of_Delay1KTCYx:
  9149                           	opt stack 0
  9150                           tblptru	equ	0xFF8
  9151                           tblptrh	equ	0xFF7
  9152                           tblptrl	equ	0xFF6
  9153                           tablat	equ	0xFF5
  9154                           prodh	equ	0xFF4
  9155                           prodl	equ	0xFF3
  9156                           intcon	equ	0xFF2
  9157                           indf0	equ	0xFEF
  9158                           postinc0	equ	0xFEE
  9159                           fsr0h	equ	0xFEA
  9160                           fsr0l	equ	0xFE9
  9161                           wreg	equ	0xFE8
  9162                           indf1	equ	0xFE7
  9163                           postdec1	equ	0xFE5
  9164                           fsr1h	equ	0xFE2
  9165                           fsr1l	equ	0xFE1
  9166                           indf2	equ	0xFDF
  9167                           postinc2	equ	0xFDE
  9168                           postdec2	equ	0xFDD
  9169                           fsr2h	equ	0xFDA
  9170                           fsr2l	equ	0xFD9
  9171                           status	equ	0xFD8
  9172                           
  9173 ;; *************** function _Read_RTC *****************
  9174 ;; Defined at:
  9175 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;		None               void
  9182 ;; Registers used:
  9183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;Total ram usage:        0 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    1
  9196 ;; This function calls:
  9197 ;;		_RtccReadDate
  9198 ;;		_RtccReadTime
  9199 ;; This function is called by:
  9200 ;;		_main
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text67
  9205  001750                     __ptext67:
  9206                           	opt stack 0
  9207  001750                     _Read_RTC:
  9208                           	opt stack 29
  9209                           
  9210                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  9211                           
  9212                           ;incstack = 0
  9213  001750  0E26               	movlw	low _RtccTime
  9214  001752  6E2A               	movwf	RtccReadTime@pTm,c
  9215  001754  0E00               	movlw	high _RtccTime
  9216  001756  6E2B               	movwf	RtccReadTime@pTm+1,c
  9217  001758  EC86  F00E         	call	_RtccReadTime	;wreg free
  9218                           
  9219                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  9220  00175C  5027               	movf	_RtccTime+1,w,c
  9221  00175E  0B0F               	andlw	15
  9222  001760  0100               	movlb	0	; () banked
  9223  001762  6FA4               	movwf	_segundo_u& (0+255),b
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  9227  001764  3827               	swapf	_RtccTime+1,w,c
  9228  001766  0B0F               	andlw	15
  9229  001768  0B0F               	andlw	15
  9230  00176A  6E5E               	movwf	_segundo_d,c
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  9234  00176C  5028               	movf	_RtccTime+2,w,c
  9235  00176E  0B0F               	andlw	15
  9236  001770  0100               	movlb	0	; () banked
  9237  001772  6FA3               	movwf	_minuto_u& (0+255),b
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  9241  001774  3828               	swapf	_RtccTime+2,w,c
  9242  001776  0B0F               	andlw	15
  9243  001778  0B0F               	andlw	15
  9244  00177A  6E5D               	movwf	_minuto_d,c
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  9248  00177C  5029               	movf	_RtccTime+3,w,c
  9249  00177E  0B0F               	andlw	15
  9250  001780  0100               	movlb	0	; () banked
  9251  001782  6FA1               	movwf	_hora_u& (0+255),b
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  9255  001784  3829               	swapf	_RtccTime+3,w,c
  9256  001786  0B0F               	andlw	15
  9257  001788  0B0F               	andlw	15
  9258  00178A  6E5B               	movwf	_hora_d,c
  9259                           
  9260                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  9261  00178C  0E22               	movlw	low _RtccDate
  9262  00178E  6E2A               	movwf	RtccReadDate@pDt,c
  9263  001790  0E00               	movlw	high _RtccDate
  9264  001792  6E2B               	movwf	RtccReadDate@pDt+1,c
  9265  001794  EC0D  F00D         	call	_RtccReadDate	;wreg free
  9266                           
  9267                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  9268  001798  5023               	movf	_RtccDate+1,w,c
  9269  00179A  0B0F               	andlw	15
  9270  00179C  0100               	movlb	0	; () banked
  9271  00179E  6FA0               	movwf	_fecha_u& (0+255),b
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  9275  0017A0  3823               	swapf	_RtccDate+1,w,c
  9276  0017A2  0B0F               	andlw	15
  9277  0017A4  0B0F               	andlw	15
  9278  0017A6  6E5A               	movwf	_fecha_d,c
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  9282  0017A8  5024               	movf	_RtccDate+2,w,c
  9283  0017AA  0B0F               	andlw	15
  9284  0017AC  0100               	movlb	0	; () banked
  9285  0017AE  6FA2               	movwf	_mes_u& (0+255),b
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  9289  0017B0  3824               	swapf	_RtccDate+2,w,c
  9290  0017B2  0B0F               	andlw	15
  9291  0017B4  0B0F               	andlw	15
  9292  0017B6  6E5C               	movwf	_mes_d,c
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  9296  0017B8  C022  F09F         	movff	_RtccDate,_dia_semana
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  9300  0017BC  5025               	movf	_RtccDate+3,w,c
  9301  0017BE  0B0F               	andlw	15
  9302  0017C0  0100               	movlb	0	; () banked
  9303  0017C2  6F9E               	movwf	_anio_u& (0+255),b
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  9307  0017C4  3825               	swapf	_RtccDate+3,w,c
  9308  0017C6  0B0F               	andlw	15
  9309  0017C8  0B0F               	andlw	15
  9310  0017CA  6E59               	movwf	_anio_d,c
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  9314  0017CC  505E               	movf	_segundo_d,w,c
  9315  0017CE  0D0A               	mullw	10
  9316  0017D0  0100               	movlb	0	; () banked
  9317  0017D2  51A4               	movf	_segundo_u& (0+255),w,b
  9318  0017D4  24F3               	addwf	prodl,w,c
  9319  0017D6  6E1B               	movwf	_segundo,c
  9320  0017D8  0100               	movlb	0	; () banked
  9321  0017DA  0E00               	movlw	0
  9322  0017DC  20F4               	addwfc	prodh,w,c
  9323  0017DE  6E1C               	movwf	_segundo+1,c
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  9327  0017E0  505D               	movf	_minuto_d,w,c
  9328  0017E2  0D0A               	mullw	10
  9329  0017E4  0100               	movlb	0	; () banked
  9330  0017E6  51A3               	movf	_minuto_u& (0+255),w,b
  9331  0017E8  24F3               	addwf	prodl,w,c
  9332  0017EA  6E19               	movwf	_minuto,c
  9333  0017EC  0100               	movlb	0	; () banked
  9334  0017EE  0E00               	movlw	0
  9335  0017F0  20F4               	addwfc	prodh,w,c
  9336  0017F2  6E1A               	movwf	_minuto+1,c
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  9340  0017F4  505B               	movf	_hora_d,w,c
  9341  0017F6  0D0A               	mullw	10
  9342  0017F8  0100               	movlb	0	; () banked
  9343  0017FA  51A1               	movf	_hora_u& (0+255),w,b
  9344  0017FC  24F3               	addwf	prodl,w,c
  9345  0017FE  6E55               	movwf	_hora,c
  9346  001800  0100               	movlb	0	; () banked
  9347  001802  0E00               	movlw	0
  9348  001804  20F4               	addwfc	prodh,w,c
  9349  001806  6E56               	movwf	_hora+1,c
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  9353  001808  505A               	movf	_fecha_d,w,c
  9354  00180A  0D0A               	mullw	10
  9355  00180C  0100               	movlb	0	; () banked
  9356  00180E  51A0               	movf	_fecha_u& (0+255),w,b
  9357  001810  24F3               	addwf	prodl,w,c
  9358  001812  6E51               	movwf	_dia,c
  9359  001814  0100               	movlb	0	; () banked
  9360  001816  0E00               	movlw	0
  9361  001818  20F4               	addwfc	prodh,w,c
  9362  00181A  6E52               	movwf	_dia+1,c
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  9366  00181C  C09F  F053         	movff	_dia_semana,_diasem
  9367  001820  6A54               	clrf	_diasem+1,c
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  9371  001822  505C               	movf	_mes_d,w,c
  9372  001824  0D0A               	mullw	10
  9373  001826  0100               	movlb	0	; () banked
  9374  001828  51A2               	movf	_mes_u& (0+255),w,b
  9375  00182A  24F3               	addwf	prodl,w,c
  9376  00182C  6E57               	movwf	_mes,c
  9377  00182E  0100               	movlb	0	; () banked
  9378  001830  0E00               	movlw	0
  9379  001832  20F4               	addwfc	prodh,w,c
  9380  001834  6E58               	movwf	_mes+1,c
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  9384  001836  5059               	movf	_anio_d,w,c
  9385  001838  0D0A               	mullw	10
  9386  00183A  0100               	movlb	0	; () banked
  9387  00183C  519E               	movf	_anio_u& (0+255),w,b
  9388  00183E  24F3               	addwf	prodl,w,c
  9389  001840  6E4F               	movwf	_anio,c
  9390  001842  0100               	movlb	0	; () banked
  9391  001844  0E00               	movlw	0
  9392  001846  20F4               	addwfc	prodh,w,c
  9393  001848  6E50               	movwf	_anio+1,c
  9394                           
  9395                           ; BSR set to: 0
  9396  00184A  0012               	return		;funcret
  9397  00184C                     __end_of_Read_RTC:
  9398                           	opt stack 0
  9399                           tblptru	equ	0xFF8
  9400                           tblptrh	equ	0xFF7
  9401                           tblptrl	equ	0xFF6
  9402                           tablat	equ	0xFF5
  9403                           prodh	equ	0xFF4
  9404                           prodl	equ	0xFF3
  9405                           intcon	equ	0xFF2
  9406                           indf0	equ	0xFEF
  9407                           postinc0	equ	0xFEE
  9408                           fsr0h	equ	0xFEA
  9409                           fsr0l	equ	0xFE9
  9410                           wreg	equ	0xFE8
  9411                           indf1	equ	0xFE7
  9412                           postdec1	equ	0xFE5
  9413                           fsr1h	equ	0xFE2
  9414                           fsr1l	equ	0xFE1
  9415                           indf2	equ	0xFDF
  9416                           postinc2	equ	0xFDE
  9417                           postdec2	equ	0xFDD
  9418                           fsr2h	equ	0xFDA
  9419                           fsr2l	equ	0xFD9
  9420                           status	equ	0xFD8
  9421                           
  9422 ;; *************** function _RtccReadTime *****************
  9423 ;; Defined at:
  9424 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  pTm             2    0[COMRAM] PTR struct .
  9427 ;;		 -> RtccTime(4), 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  rTD0            8   10[COMRAM] struct .
  9430 ;;  rTD1            8    2[COMRAM] struct .
  9431 ;; Return value:  Size  Location     Type
  9432 ;;		None               void
  9433 ;; Registers used:
  9434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9441 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9443 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9444 ;;Total ram usage:       18 bytes
  9445 ;; Hardware stack levels used:    1
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_Read_RTC
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text68
  9454  001D0C                     __ptext68:
  9455                           	opt stack 0
  9456  001D0C                     _RtccReadTime:
  9457                           	opt stack 29
  9458  001D0C  0EFC               	movlw	252
  9459  001D0E  010F               	movlb	15	; () banked
  9460  001D10  173F               	andwf	63,f,b	;volatile
  9461                           
  9462                           ; BSR set to: 15
  9463  001D12  010F               	movlb	15	; () banked
  9464  001D14  813F               	bsf	63,0,b	;volatile
  9465                           
  9466                           ; BSR set to: 15
  9467  001D16  CF98 F038          	movff	3992,RtccReadTime@rTD0+4	;volatile
  9468                           
  9469                           ; BSR set to: 15
  9470  001D1A  CF99 F039          	movff	3993,RtccReadTime@rTD0+5	;volatile
  9471                           
  9472                           ; BSR set to: 15
  9473  001D1E  CF98 F03A          	movff	3992,RtccReadTime@rTD0+6	;volatile
  9474                           
  9475                           ; BSR set to: 15
  9476  001D22  CF99 F03B          	movff	3993,RtccReadTime@rTD0+7	;volatile
  9477                           
  9478                           ; BSR set to: 15
  9479  001D26  0EFC               	movlw	252
  9480  001D28  010F               	movlb	15	; () banked
  9481  001D2A  173F               	andwf	63,f,b	;volatile
  9482  001D2C  010F               	movlb	15	; () banked
  9483  001D2E  813F               	bsf	63,0,b	;volatile
  9484                           
  9485                           ; BSR set to: 15
  9486  001D30  CF98 F030          	movff	3992,RtccReadTime@rTD1+4	;volatile
  9487                           
  9488                           ; BSR set to: 15
  9489  001D34  CF99 F031          	movff	3993,RtccReadTime@rTD1+5	;volatile
  9490                           
  9491                           ; BSR set to: 15
  9492  001D38  CF98 F032          	movff	3992,RtccReadTime@rTD1+6	;volatile
  9493                           
  9494                           ; BSR set to: 15
  9495  001D3C  CF99 F033          	movff	3993,RtccReadTime@rTD1+7	;volatile
  9496                           
  9497                           ; BSR set to: 15
  9498  001D40  5032               	movf	RtccReadTime@rTD1+6,w,c
  9499  001D42  183A               	xorwf	RtccReadTime@rTD0+6,w,c
  9500  001D44  A4D8               	btfss	status,2,c
  9501  001D46  D7E2               	goto	l3529
  9502                           
  9503                           ; BSR set to: 15
  9504                           
  9505                           ; BSR set to: 15
  9506  001D48  EE20 F003          	lfsr	2,3
  9507  001D4C  502A               	movf	RtccReadTime@pTm,w,c
  9508  001D4E  26D9               	addwf	fsr2l,f,c
  9509  001D50  502B               	movf	RtccReadTime@pTm+1,w,c
  9510  001D52  22DA               	addwfc	fsr2h,f,c
  9511  001D54  C038  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  9512  001D58  EE20 F002          	lfsr	2,2
  9513  001D5C  502A               	movf	RtccReadTime@pTm,w,c
  9514  001D5E  26D9               	addwf	fsr2l,f,c
  9515  001D60  502B               	movf	RtccReadTime@pTm+1,w,c
  9516  001D62  22DA               	addwfc	fsr2h,f,c
  9517  001D64  C03B  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  9518  001D68  EE20 F001          	lfsr	2,1
  9519  001D6C  502A               	movf	RtccReadTime@pTm,w,c
  9520  001D6E  26D9               	addwf	fsr2l,f,c
  9521  001D70  502B               	movf	RtccReadTime@pTm+1,w,c
  9522  001D72  22DA               	addwfc	fsr2h,f,c
  9523  001D74  C03A  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  9524                           
  9525                           ; BSR set to: 15
  9526  001D78  0012               	return		;funcret
  9527  001D7A                     __end_of_RtccReadTime:
  9528                           	opt stack 0
  9529                           tblptru	equ	0xFF8
  9530                           tblptrh	equ	0xFF7
  9531                           tblptrl	equ	0xFF6
  9532                           tablat	equ	0xFF5
  9533                           prodh	equ	0xFF4
  9534                           prodl	equ	0xFF3
  9535                           intcon	equ	0xFF2
  9536                           indf0	equ	0xFEF
  9537                           postinc0	equ	0xFEE
  9538                           fsr0h	equ	0xFEA
  9539                           fsr0l	equ	0xFE9
  9540                           wreg	equ	0xFE8
  9541                           indf1	equ	0xFE7
  9542                           postdec1	equ	0xFE5
  9543                           fsr1h	equ	0xFE2
  9544                           fsr1l	equ	0xFE1
  9545                           indf2	equ	0xFDF
  9546                           postinc2	equ	0xFDE
  9547                           postdec2	equ	0xFDD
  9548                           fsr2h	equ	0xFDA
  9549                           fsr2l	equ	0xFD9
  9550                           status	equ	0xFD8
  9551                           
  9552 ;; *************** function _RtccReadDate *****************
  9553 ;; Defined at:
  9554 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  pDt             2    0[COMRAM] PTR struct .
  9557 ;;		 -> RtccDate(4), 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  rTD0            8   10[COMRAM] struct .
  9560 ;;  rTD1            8    2[COMRAM] struct .
  9561 ;; Return value:  Size  Location     Type
  9562 ;;		None               void
  9563 ;; Registers used:
  9564 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9571 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9573 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9574 ;;Total ram usage:       18 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_Read_RTC
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text69
  9584  001A1A                     __ptext69:
  9585                           	opt stack 0
  9586  001A1A                     _RtccReadDate:
  9587                           	opt stack 29
  9588  001A1A  0EFC               	movlw	252
  9589  001A1C  010F               	movlb	15	; () banked
  9590  001A1E  173F               	andwf	63,f,b	;volatile
  9591  001A20  0E03               	movlw	3
  9592  001A22  010F               	movlb	15	; () banked
  9593  001A24  133F               	iorwf	63,f,b	;volatile
  9594                           
  9595                           ; BSR set to: 15
  9596  001A26  CF98 F034          	movff	3992,RtccReadDate@rTD0	;volatile
  9597                           
  9598                           ; BSR set to: 15
  9599  001A2A  CF99 F035          	movff	3993,RtccReadDate@rTD0+1	;volatile
  9600                           
  9601                           ; BSR set to: 15
  9602  001A2E  CF98 F036          	movff	3992,RtccReadDate@rTD0+2	;volatile
  9603                           
  9604                           ; BSR set to: 15
  9605  001A32  CF99 F037          	movff	3993,RtccReadDate@rTD0+3	;volatile
  9606                           
  9607                           ; BSR set to: 15
  9608  001A36  CF98 F038          	movff	3992,RtccReadDate@rTD0+4	;volatile
  9609                           
  9610                           ; BSR set to: 15
  9611  001A3A  CF99 F039          	movff	3993,RtccReadDate@rTD0+5	;volatile
  9612  001A3E  0EFC               	movlw	252
  9613  001A40  010F               	movlb	15	; () banked
  9614  001A42  173F               	andwf	63,f,b	;volatile
  9615  001A44  0E03               	movlw	3
  9616  001A46  010F               	movlb	15	; () banked
  9617  001A48  133F               	iorwf	63,f,b	;volatile
  9618                           
  9619                           ; BSR set to: 15
  9620  001A4A  CF98 F02C          	movff	3992,RtccReadDate@rTD1	;volatile
  9621                           
  9622                           ; BSR set to: 15
  9623  001A4E  CF99 F02D          	movff	3993,RtccReadDate@rTD1+1	;volatile
  9624                           
  9625                           ; BSR set to: 15
  9626  001A52  CF98 F02E          	movff	3992,RtccReadDate@rTD1+2	;volatile
  9627                           
  9628                           ; BSR set to: 15
  9629  001A56  CF99 F02F          	movff	3993,RtccReadDate@rTD1+3	;volatile
  9630                           
  9631                           ; BSR set to: 15
  9632  001A5A  CF98 F030          	movff	3992,RtccReadDate@rTD1+4	;volatile
  9633                           
  9634                           ; BSR set to: 15
  9635  001A5E  CF99 F031          	movff	3993,RtccReadDate@rTD1+5	;volatile
  9636  001A62  502E               	movf	RtccReadDate@rTD1+2,w,c
  9637  001A64  1836               	xorwf	RtccReadDate@rTD0+2,w,c
  9638  001A66  A4D8               	btfss	status,2,c
  9639  001A68  D7D8               	goto	l3555
  9640                           
  9641                           ; BSR set to: 15
  9642                           
  9643                           ; BSR set to: 15
  9644  001A6A  EE20 F001          	lfsr	2,1
  9645  001A6E  502A               	movf	RtccReadDate@pDt,w,c
  9646  001A70  26D9               	addwf	fsr2l,f,c
  9647  001A72  502B               	movf	RtccReadDate@pDt+1,w,c
  9648  001A74  22DA               	addwfc	fsr2h,f,c
  9649  001A76  C036  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  9650  001A7A  EE20 F002          	lfsr	2,2
  9651  001A7E  502A               	movf	RtccReadDate@pDt,w,c
  9652  001A80  26D9               	addwf	fsr2l,f,c
  9653  001A82  502B               	movf	RtccReadDate@pDt+1,w,c
  9654  001A84  22DA               	addwfc	fsr2h,f,c
  9655  001A86  C037  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  9656                           
  9657                           ; BSR set to: 15
  9658  001A8A  C02A  FFD9         	movff	RtccReadDate@pDt,fsr2l
  9659  001A8E  C02B  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  9660  001A92  C039  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  9661                           
  9662                           ; BSR set to: 15
  9663  001A96  EE20 F003          	lfsr	2,3
  9664  001A9A  502A               	movf	RtccReadDate@pDt,w,c
  9665  001A9C  26D9               	addwf	fsr2l,f,c
  9666  001A9E  502B               	movf	RtccReadDate@pDt+1,w,c
  9667  001AA0  22DA               	addwfc	fsr2h,f,c
  9668  001AA2  C034  FFDF         	movff	RtccReadDate@rTD0,indf2
  9669                           
  9670                           ; BSR set to: 15
  9671  001AA6  0012               	return		;funcret
  9672  001AA8                     __end_of_RtccReadDate:
  9673                           	opt stack 0
  9674                           tblptru	equ	0xFF8
  9675                           tblptrh	equ	0xFF7
  9676                           tblptrl	equ	0xFF6
  9677                           tablat	equ	0xFF5
  9678                           prodh	equ	0xFF4
  9679                           prodl	equ	0xFF3
  9680                           intcon	equ	0xFF2
  9681                           indf0	equ	0xFEF
  9682                           postinc0	equ	0xFEE
  9683                           fsr0h	equ	0xFEA
  9684                           fsr0l	equ	0xFE9
  9685                           wreg	equ	0xFE8
  9686                           indf1	equ	0xFE7
  9687                           postdec1	equ	0xFE5
  9688                           fsr1h	equ	0xFE2
  9689                           fsr1l	equ	0xFE1
  9690                           indf2	equ	0xFDF
  9691                           postinc2	equ	0xFDE
  9692                           postdec2	equ	0xFDD
  9693                           fsr2h	equ	0xFDA
  9694                           fsr2l	equ	0xFD9
  9695                           status	equ	0xFD8
  9696                           tblptru	equ	0xFF8
  9697                           tblptrh	equ	0xFF7
  9698                           tblptrl	equ	0xFF6
  9699                           tablat	equ	0xFF5
  9700                           prodh	equ	0xFF4
  9701                           prodl	equ	0xFF3
  9702                           intcon	equ	0xFF2
  9703                           indf0	equ	0xFEF
  9704                           postinc0	equ	0xFEE
  9705                           fsr0h	equ	0xFEA
  9706                           fsr0l	equ	0xFE9
  9707                           wreg	equ	0xFE8
  9708                           indf1	equ	0xFE7
  9709                           postdec1	equ	0xFE5
  9710                           fsr1h	equ	0xFE2
  9711                           fsr1l	equ	0xFE1
  9712                           indf2	equ	0xFDF
  9713                           postinc2	equ	0xFDE
  9714                           postdec2	equ	0xFDD
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719                           	psect	rparam
  9720  0000                     tblptru	equ	0xFF8
  9721                           tblptrh	equ	0xFF7
  9722                           tblptrl	equ	0xFF6
  9723                           tablat	equ	0xFF5
  9724                           prodh	equ	0xFF4
  9725                           prodl	equ	0xFF3
  9726                           intcon	equ	0xFF2
  9727                           indf0	equ	0xFEF
  9728                           postinc0	equ	0xFEE
  9729                           fsr0h	equ	0xFEA
  9730                           fsr0l	equ	0xFE9
  9731                           wreg	equ	0xFE8
  9732                           indf1	equ	0xFE7
  9733                           postdec1	equ	0xFE5
  9734                           fsr1h	equ	0xFE2
  9735                           fsr1l	equ	0xFE1
  9736                           indf2	equ	0xFDF
  9737                           postinc2	equ	0xFDE
  9738                           postdec2	equ	0xFDD
  9739                           fsr2h	equ	0xFDA
  9740                           fsr2l	equ	0xFD9
  9741                           status	equ	0xFD8


Data Sizes:
    Strings     212
    Constant    14
    Data        10
    BSS         103
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      95
    BANK0           160      0      69
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_38(CODE[1]), STR_19(CODE[1]), pin_input(BANK0[5]), STR_1(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_9(CODE[7]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[7]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_49(CODE[2]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[5]), 
		 -> STR_45(CODE[5]), STR_44(CODE[5]), STR_43(CODE[8]), STR_42(CODE[5]), 
		 -> STR_41(CODE[8]), STR_40(CODE[7]), STR_39(CODE[11]), STR_37(CODE[6]), 
		 -> STR_36(CODE[8]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[6]), 
		 -> STR_32(CODE[6]), STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[8]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[7]), STR_23(CODE[4]), STR_22(CODE[6]), STR_21(CODE[8]), 
		 -> STR_20(CODE[16]), STR_18(CODE[4]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), buffer1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    lcd_write@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[5]), STR_45(CODE[5]), 
		 -> STR_44(CODE[5]), STR_43(CODE[8]), STR_42(CODE[5]), STR_41(CODE[8]), 
		 -> STR_40(CODE[7]), STR_39(CODE[11]), STR_37(CODE[6]), STR_36(CODE[8]), 
		 -> STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[6]), STR_32(CODE[6]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[8]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[7]), 
		 -> STR_23(CODE[4]), STR_22(CODE[6]), STR_21(CODE[8]), STR_20(CODE[16]), 
		 -> STR_18(CODE[4]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_home_config_refresh
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _button_hash->_pin_input_validator
    _activity_menu->_lcd_write
    _button_B->_button_B_menu
    _button_B->_button_B_submenu_activation
    _button_B->_button_B_submenu_alarm_config
    _button_B->_button_B_submenu_alarm_tone
    _button_B->_button_B_submenu_alarm_volume
    _button_B->_button_B_submenu_pin_config
    _reset_pin->_strcpy
    _activity_submenu_pin_set->_lcd_write
    _activity_submenu_alarm_volume->_lcd_write
    _activity_submenu_alarm_tone->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_clock->_lcd_write
    _activity_submenu_alarm->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_action_menu_selector
    _button_A->_action_submenu_selector
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _action_submenu_selector_1->_lcd_write
    _action_submenu_selector_0->_lcd_write
    _action_menu_selector_3->_lcd_write
    _action_menu_selector_2->_lcd_write
    _action_menu_selector_1->_lcd_write
    _action_menu_selector_0->_lcd_write
    _home_volume_refresh->_sprintf
    _home_tone_refresh->_sprintf
    _home_state_refresh->_sprintf
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  448269
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                _home_config_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4358
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                          _reset_pin
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  364273
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    4956
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   49031
                _pin_input_validator
                            _pin_set
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_set                                              0     0      0   12304
                      _activity_home
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  2     2      0   36727
                                             16 COMRAM     2     2      0
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0       0
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0   11717
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   22586
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   22586
             _action_menu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0  196870
                                             18 COMRAM     2     2      0
                      _button_B_menu
        _button_B_submenu_activation
      _button_B_submenu_alarm_config
        _button_B_submenu_alarm_tone
      _button_B_submenu_alarm_volume
        _button_B_submenu_pin_config
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_pin_config                          2     2      0   26203
                                             16 COMRAM     2     2      0
                      _activity_home
           _activity_submenu_pin_set
                          _reset_pin
 ---------------------------------------------------------------------------------
 (2) _reset_pin                                            0     0      0     587
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin_set                             0     0      0   13899
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_alarm_volume                        2     2      0   11717
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_alarm_tone                          2     2      0   11717
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_alarm_config                        2     2      0   45172
                                             16 COMRAM     2     2      0
        _activity_submenu_alarm_tone
      _activity_submenu_alarm_volume
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_alarm_volume                        0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_alarm_tone                          0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_activation                          2     2      0   11717
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_menu                                        2     2      0   90344
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
             _activity_submenu_alarm
             _activity_submenu_clock
               _activity_submenu_pin
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin                                 0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_clock                               0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_alarm                               0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_activation                          0     0      0   22586
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   79113
                                             18 COMRAM     2     2      0
               _action_menu_selector
            _action_submenu_selector
                       _activity_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   13899
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _action_submenu_selector                              2     2      0   21738
                                             16 COMRAM     2     2      0
          _action_submenu_selector_0
          _action_submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _action_submenu_selector_1                            0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _action_submenu_selector_0                            0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _action_menu_selector                                 2     2      0   43476
                                             16 COMRAM     2     2      0
             _action_menu_selector_0
             _action_menu_selector_1
             _action_menu_selector_2
             _action_menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_3                               0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_2                               0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_1                               0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _action_menu_selector_0                               0     0      0   10869
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _home_config_refresh                                  2     2      0   41427
                                             35 COMRAM     2     2      0
                 _home_state_refresh
                  _home_tone_refresh
                _home_volume_refresh
 ---------------------------------------------------------------------------------
 (2) _home_volume_refresh                                  0     0      0   13809
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_tone_refresh                                    0     0      0   13809
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_state_refresh                                   0     0      0   13809
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   13809
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2940
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0   11717
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _activity_home                                        0     0      0   11717
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6   10869
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1790
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1617
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1     949
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _home_config_refresh
     _home_state_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_tone_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_volume_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _keyboard_control
     _button_A
       _action_menu_selector
         _action_menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _action_submenu_selector
         _action_submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_B
       _button_B_menu
         _activity_submenu_activation
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_alarm
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_clock
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_activation
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_alarm_config
         _activity_submenu_alarm_tone
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_alarm_volume
           _action_submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_alarm_tone
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_alarm_volume
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_pin_config
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin_set
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _reset_pin
           _strcpy
       _reset_home_callback
     _button_C
       _activity_menu
         _action_menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _reset_home_callback
     _button_hash
       _pin_input_validator
         _activity_menu
           _action_menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _pin_set
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _reset_pin
       _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      45       5       43.1%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     25      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4       6        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Sep 16 22:32:33 2016

                ??_action_menu_selector 003A                                       _a 0001  
                                     _b 0009                                       _c 007C  
                                     _i 0013                                       _j 0015  
                                     _k 007E                          ?_lcd_send_byte 002C  
                          ___awdiv@sign 002F                     ___wmul@multiplicand 002C  
                  ?_home_volume_refresh 002A                             lcd_comand@d 002E  
              ??_action_menu_selector_0 003A                ??_action_menu_selector_1 003A  
              ??_action_menu_selector_2 003A                ??_action_menu_selector_3 003A  
                          __CFG_CP0$OFF 000000          ?_button_B_submenu_alarm_config 002A  
                       lcd_write@column 0034                                     l410 1474  
                                   l402 1448                                     l411 1470  
                                   l403 1444                                     l430 14D6  
                                   l422 14B2                                     l414 1486  
                                   l406 1462                                     l431 14D2  
                                   l423 14AE                                     l415 1482  
                                   l407 145E                                     l426 14C4  
                                   l418 1498                                     l435 14E4  
                                   l427 14C0                                     l419 1494  
                                   l390 1412                                     l382 13E6  
                                   l374 13C2                                     l391 140E  
                                   l383 13E2                                     l375 13BE  
                                   l394 1424                                     l386 13F8  
                                   l378 13D4                                     l547 11B6  
                                   l395 1420                                     l387 13F4  
                                   l379 13D0                                     l468 27C8  
                                   l469 27CA                                     l398 1436  
                                   l399 1432                   ??_check_home_callback 003A  
                                   _dia 0051                                     _key 0021  
                                   _mes 0057                                     _pin 0094  
                       lcd_write@string 0038                                     wreg 000FE8  
        ?_button_B_submenu_alarm_volume 002A                         RtccReadDate@pDt 002A  
                           lcd_gotoxy@x 002F                             lcd_gotoxy@y 002E  
                     ??_button_asterisk 002A                                    l1201 2314  
                                  l1191 2094                                    l3025 2058  
                                  l3009 291C                                    l3113 1738  
                                  l3027 2062                                    l3211 1036  
                                  l3203 1008                                    l3037 2088  
                                  l3029 206A                                    l3053 2308  
                                  l3045 22E0                                    l3205 1016  
                                  l3133 1560                                    l3117 1744  
                                  l3109 172C                                    l3047 22EA  
                                  l3223 10B8                                    l3215 1054  
                                  l3311 281C                                    l3143 15AE  
                                  l3071 16AC                                    l3049 22F2  
                                  l3209 1020                                    l3305 2810  
                                  l3401 26AC                                    l3081 16DC  
                                  l3065 1682                                    l3251 1154  
                                  l3243 112C                                    l3235 10FC  
                                  l3227 10BE                                    l3307 2816  
                                  l3331 23B4                                    l3411 26D4  
                                  l3403 26CC                                    l3323 27A4  
                                  l3139 159A                                    l3075 16C0  
                                  l3253 115E                                    l3229 10E0  
                                  l3333 23BA                                    l3341 23CC  
                                  l3413 26DC                                    l3181 1620  
                                  l3149 15CA                                    l3271 11BC  
                                  l3263 118C                                    l3247 1130  
                                  l3239 1108                                    l3335 23C0  
                                  l3351 2716                                    l3431 238C  
                                  l3265 1194                                    l3257 116A  
                                  l3281 1238                                    l3601 2126  
                                  l3337 23C6                                    l3417 26E6  
                                  l3433 2396                                    l3185 162C  
                                  l2803 1B58                                    l3291 2408  
                                  l3355 2720                                    l3419 2706  
                                  l3427 2374                                    l3443 1908  
                                  l2725 29C0                                    l3277 1210  
                                  l3197 0FEE                                    l3293 240E  
                                  l3613 265E                                    l3621 2670  
                                  l3357 2740                                    l3349 270E  
                                  l3381 27E0                                    l3365 2748  
                                  l3373 2758                                    l3429 237A  
                                  l3189 1638                                    l2751 28EC  
                                  l3279 121C                                    l3607 2162  
                                  l3287 23FC                                    l3615 2664  
                                  l3383 27E6                                    l3367 274E  
                                  l3631 1FEA                                    l3455 1930  
                                  l3471 196C                                    l3529 1D0C  
                                  l2817 1B7C                                    l2809 1B68  
                                  l2753 28F2                                    l2761 232E  
                                  l3609 2178                                    l3289 2402  
                                  l3297 2414                                    l3617 266A  
                                  l3633 1FF0                                    l3457 193A  
                                  l3449 191A                                    l3555 1A1A  
                                  l2763 233A                                    l3803 18CA  
                                  l3387 27EC                                    l3395 269A  
                                  l3635 1FF6                                    l3643 2008  
                                  l3475 197C                                    l3467 1960  
                                  l3459 1942                                    l2765 2346  
                                  l2773 20A0                                    l3397 26A2  
                                  l3637 1FFC                                    l3629 1FE4  
                                  l2759 2322                                    l3591 21B4  
                                  l2791 2456                                    l3639 2002  
                                  l2769 2352                                    l2777 20CA  
                                  l3593 21CA                                    l2779 29D2  
                                  l3781 1864                                    l2789 244C  
                                  l3669 28CE                                    l3685 1CEE  
                                  l2799 1B50                                    l3599 2110  
                                  l3783 186A                                    l2991 21EA  
                                  l3679 1CB2                                    l3777 1858  
                                  l2993 21F4                                    l3795 18AA  
                                  l3875 14EC                                    l3789 188A  
                                  l2997 2228                                    l3893 2848  
                                  STR_1 0FB1                                    STR_2 0F1F  
                                  STR_3 0F2E                                    STR_4 0F83  
                                  STR_5 0F91                                    STR_6 0F7C  
                                  STR_7 0F8A    __size_of_button_B_submenu_pin_config 0034  
                                  STR_8 0F67                                    STR_9 0F75  
                                  u1310 1C4A                                    u1400 20EA  
                                  u1330 1C64                                    u1308 1C34  
                                  u1420 247E                                    u1350 1C80  
                                  u1407 20E0                                    u1328 1C4C  
                                  u1290 1C32                                    u1427 2474  
                                  u1348 1C66                                    u1390 20C0  
                                  u1368 1C82                                    u1397 20B6  
                                  u2577 14F2                                    u2587 29C2  
                                  u2597 29D4                        ?_lcd_send_nibble 002A  
                                  _anio 004F                                    _flag 02F8  
                                  _main 283E                                    _hora 0055  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9              __size_of_home_tone_refresh 0052  
                         __CFG_T1DIG$ON 000000                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                         __CFG_IESO$OFF 000000                        RtccReadDate@rTD0 0034  
                      RtccReadDate@rTD1 002C                    __end_of_activity_pin 22D2  
                          ___param_bank 000010             ??_action_submenu_selector_0 003A  
           ??_action_submenu_selector_1 003A         __size_of_activity_submenu_alarm 0066  
       __size_of_activity_submenu_clock 0066                         RtccReadTime@pTm 002A  
                 ??_home_volume_refresh 004D                             _Delay1KTCYx 29D0  
                         __CFG_PLLDIV$1 000000                                   ?_main 002A  
                       __end_of___awdiv 1988                                   STR_10 0FE1  
                                 STR_11 0FDD                                   STR_12 0FE1  
                                 STR_20 0F0F                                   STR_13 0FDD  
                                 STR_21 0F58                                   STR_14 0FE1  
                                 STR_30 0FD7                                   STR_22 0FA5  
                                 STR_15 0FDD                                   STR_31 0FDA  
                                 STR_23 0FD3                                   STR_16 0FE1  
                                 STR_40 0F98                                   STR_32 0FA5  
                                 STR_24 0F98                                   STR_17 0FDD  
                                 STR_25 0FE1                                   STR_33 0F9F  
                                 STR_41 0F48                                   STR_26 0FDD  
                                 STR_18 0FCF                                   STR_50 0FCA  
                                 STR_42 0FC0                                   STR_34 0FB6  
                                 STR_19 0FDE                                   STR_27 0FE1  
                                 STR_43 0F48                                   STR_35 0FD3  
                                 STR_51 0FCA                                   STR_28 0FDD  
                                 STR_44 0FBB                                   STR_36 0F50  
                                 STR_29 0F58                                   STR_45 0FC5  
                                 STR_37 0FAB                                   STR_38 0FDE  
                                 STR_46 0FC0                                   STR_47 0F60  
                                 STR_39 0F3D                                   STR_48 0F6E  
                                 STR_49 0FDF                   __size_of_Delay100TCYx 0012  
                       ___awdiv@divisor 002C                         __end_of___lwdiv 209E  
                       __end_of___lwmod 231E                         ___awdiv@counter 002E  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                            ?_button_hash 002A  
                        __CFG_FCMEN$OFF 000000                         __end_of_dpowers 0F0B  
                                 _mes_d 005C                                   _mes_u 00A2  
                       __end_of_isdigit 2926                                   _setup 1BAA  
                                 _state 001D                         __end_of_pin_set 297E  
                        __pbitbssCOMRAM 02F8                                   tablat 000FF5  
           __size_of_home_state_refresh 0052                     _reset_home_callback 2A04  
                          lcd_putrs@ptr 0032                                   status 000FD8  
                       __end_of_sprintf 1248        __end_of_activity_submenu_pin_set 2284  
                 __end_of_activity_home 2894                   __end_of_activity_menu 1B2A  
                          lcd_write@row 0036                 __CFG_DSWDTOSC$INTOSCREF 000000  
                       __initialization 2488                            _Delay100TCYx 29BE  
                          __end_of_main 286A                         ??_lcd_send_byte 002D  
                      RtccReadTime@rTD0 0034                        RtccReadTime@rTD1 002C  
                      __end_of_Read_RTC 184C                 _action_submenu_selector 280E  
                  ?_reset_home_callback 002A                                  ??_main 004F  
       __size_of_action_menu_selector_0 0042         __size_of_action_menu_selector_1 0042  
       __size_of_action_menu_selector_2 0042         __size_of_action_menu_selector_3 0042  
                         __activetblptr 000002                        __end_of_RtccWrOn 29BE  
             _action_submenu_selector_0 250E               _action_submenu_selector_1 24CC  
                _activity_submenu_alarm 1F12                  _activity_submenu_clock 1EAC  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                                _EECON2 000FA7                                  _ANCON0 000F48  
                                _ANCON1 000F49                        ___awdiv@dividend 002A  
                                ?_setup 002A                          __CFG_WDTEN$OFF 000000  
          __size_of_pin_input_validator 0032                        RtccWriteDate@pDt 002A  
                                _RTCCFG 000F3F                          __CFG_WPCFG$OFF 000000  
                         _home_callback 000F                          __CFG_WPDIS$OFF 000000  
                   _home_callback_delay 0011                          __CFG_XINST$OFF 000000  
                   _home_config_refresh 184C                  __size_of_button_B_menu 0048  
                      __end_of_lcd_init 1BAA              __end_of_home_clock_refresh 1A1A  
                      __end_of_lcd_putc 236A                                  ___wmul 2894  
                             ??___awdiv 002E                          __CFG_STVREN$ON 000000  
                                _diasem 0053                                  _anio_d 0059  
                                _anio_u 009E                               ??___lwdiv 002E  
                             ??___lwmod 0035                   ??_reset_home_callback 002A  
                                _hora_d 005B                                  _hora_u 00A1  
                      __end_of_button_A 2698                        __end_of_button_B 2042  
                      __end_of_button_C 2964                        __end_of_button_D 2A04  
                                clear_0 248E                                  clear_1 249C  
                      ___awdiv@quotient 0030                                  _minuto 0019  
   __end_of_button_B_submenu_activation 2746             _button_B_submenu_activation 270C  
                 __end_of_RtccWriteDate 1644     __end_of_button_B_submenu_alarm_tone 270C  
           _button_B_submenu_alarm_tone 26D2                                  _strcat 236A  
                                _strcmp 21E8                   __end_of_RtccWriteTime 1750  
                                _strcpy 2442                        RtccWriteTime@pTm 002A  
                          __pdataCOMRAM 004F                               ??_isdigit 002A  
                __size_of_button_number 0070                            __mediumconst 0000  
                             ??_pin_set 003A                    ?_home_config_refresh 002A  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                               ??_sprintf 0040  
                 __size_of_activity_pin 004E                              __accesstop 0060  
               __end_of__initialization 24C2                  _action_menu_selector_0 2616  
                _action_menu_selector_1 25D4                  _action_menu_selector_2 2592  
                _action_menu_selector_3 2550                      __size_of_Write_RTC 0160  
                         ___rparam_used 000001               ??_action_submenu_selector 003A  
             __size_of_keyboard_control 0156                          __pcstackCOMRAM 002A  
                         __end_of_setup 1C26                         __CFG_DSWDTPS$G2 000000  
                       _button_asterisk 2A0E       __size_of_activity_submenu_pin_set 004E  
                       __CFG_OSC$INTOSC 000000                   ??_home_config_refresh 004D  
             ?_activity_submenu_pin_set 002A                           _button_B_menu 23B2  
                          _activity_pin 2284                            _alarm_volume 0007  
                     lcd_gotoxy@address 0030                    __size_of_button_hash 0024  
                    __size_of_lcd_putrs 0054                      __size_of_lcd_write 0018  
                          sprintf@width 004A                                 ??_setup 0037  
                            __pbssBANK0 0060         ??_button_B_submenu_alarm_config 003A  
                             ?_Read_RTC 002A                              _dia_semana 009F  
             RtccWriteTime@tempHourWDay 0033                              __pnvCOMRAM 0059  
                            _alarm_tone 0005           __size_of_activity_submenu_pin 0066  
       ??_button_B_submenu_alarm_volume 003A                           _button_number 1C9C  
                             ?_RtccWrOn 002A                          lcd_send_byte@n 002C  
   __end_of_button_B_submenu_pin_config 277A             _button_B_submenu_pin_config 2746  
                               ?___wmul 002A                           ?_RtccReadDate 002A  
           __end_of_check_home_callback 2948                           ?_RtccReadTime 002A  
         __size_of_action_menu_selector 0048                            ?_Delay1KTCYx 002A  
                    __size_of_reset_pin 0016                                 ?_strcat 002A  
                               ?_strcmp 002A                                 ?_strcpy 002A  
                     __end_of_Write_RTC 13A8                          ?_button_B_menu 002A  
                            _lcd_comand 29E2         __end_of_action_submenu_selector 283E  
                            _lcd_gotoxy 28E0                                 _RTCVALH 000F99  
                               _RTCVALL 000F98                               ?_lcd_init 002A  
                             ?_lcd_putc 002A                           _menu_selected 0017  
                            ??_Read_RTC 003C                               ?_button_A 002A  
                             ?_button_B 002A                               ?_button_C 002A  
                             ?_button_D 002A      __size_of_action_submenu_selector_0 0042  
    __size_of_action_submenu_selector_1 0042                          ?_button_number 002A  
       ??_activity_submenu_alarm_volume 003A                                 __Hparam 0000  
                               __Lparam 0000             __end_of_home_volume_refresh 2144  
              __size_of_lcd_send_nibble 0076                 __end_of_button_asterisk 2A14  
                            ??_RtccWrOn 002A                          ??_RtccReadDate 002C  
                        ??_RtccReadTime 002C                                 ___awdiv 18F2  
                     __end_of_lcd_putrs 20F2                       __end_of_lcd_write 2996  
                       __size_of___wmul 0028                                 ___lwdiv 2042  
                               ___lwmod 22D2                            __psmallconst 0F00  
                           _RtccTimeVal 0078                                 __pcinit 2488  
                               _fecha_d 005A                                 _fecha_u 00A0  
                               __ramtop 0F00                     _pin_input_validator 277A  
                               __ptext0 283E                                 __ptext1 1BAA  
                               __ptext2 1248                                 __ptext3 18F2  
                               __ptext4 1644                                 __ptext5 14FE  
                               __ptext6 29AC                                 __ptext7 13A8  
                               __ptext8 1C9C                                 __ptext9 236A  
          ?_activity_submenu_activation 002A                                 _buffer1 0080  
          ?_activity_submenu_alarm_tone 002A                 ?_activity_submenu_alarm 002A  
                       __size_of_strcat 0048                         __size_of_strcmp 004E  
                       __size_of_strcpy 0046                 ?_activity_submenu_clock 002A  
                             _T1CONbits 000FCD                                 _dpowers 0F01  
                               _isdigit 2904                                 _pin_set 2964  
                               _segundo 001B              __end_of_home_state_refresh 21E8  
                               _sprintf 0FE4                              ??_lcd_init 002E  
                            ??_lcd_putc 0031                    end_of_initialization 24C2  
                  ?_pin_input_validator 002A                    lcd_send_byte@address 002D  
                            ??_button_A 003C                           __Lmediumconst 0000  
                            ??_button_B 003C                              ??_button_C 003A  
                            ??_button_D 003A                       __end_of_reset_pin 29AC  
     __end_of_action_submenu_selector_0 2550       __end_of_action_submenu_selector_1 250E  
 __end_of_button_B_submenu_alarm_config 280E  __size_of_button_B_submenu_alarm_config 0030  
         _button_B_submenu_alarm_config 27DE                        _keyboard_control 13A8  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
 __end_of_button_B_submenu_alarm_volume 26D2  __size_of_button_B_submenu_alarm_volume 003A  
         _button_B_submenu_alarm_volume 2698                   __end_of_lcd_send_byte 27DE  
                               strcmp@r 002F          __end_of_activity_submenu_alarm 1F78  
        __end_of_activity_submenu_clock 1F12                               _PORTAbits 000F80  
                             _PORTCbits 000F82                         ??_button_B_menu 003A  
                      __CFG_DSBOREN$OFF 000000                             ?_lcd_comand 002A  
                    _home_clock_refresh 1988                        __CFG_CPUDIV$OSC1 000000  
                             _TRISBbits 000F93                  __size_of_activity_home 002A  
                __size_of_activity_menu 0082                             ?_lcd_gotoxy 002E  
               ?_action_menu_selector_0 002A                 ?_action_menu_selector_1 002A  
               ?_action_menu_selector_2 002A                 ?_action_menu_selector_3 002A  
                       _LCD_INIT_STRING 0F0B                     ?_home_clock_refresh 002A  
                 ??_pin_input_validator 003A                         ??_button_number 004D  
                      __CFG_IOL1WAY$OFF 000000               RtccWriteDate@tempDayMonth 0033  
           __end_of_reset_home_callback 2A0E                     __CFG_MSSP7B_EN$MSK7 000000  
                      ?_button_asterisk 002A                        Delay100TCYx@unit 002A  
 __end_of_activity_submenu_alarm_volume 1DE0  __size_of_activity_submenu_alarm_volume 0066  
         _activity_submenu_alarm_volume 1D7A                    ??_home_clock_refresh 004D  
                        __end_of___wmul 28BC                           __pidataCOMRAM 29F0  
             RtccWriteDate@tempHourWDay 0035                       ??_lcd_send_nibble 002A  
                  __size_of_Delay1KTCYx 0012                        __CFG_DSWDTEN$OFF 000000  
                        __end_of_strcat 23B2                          __end_of_strcmp 2236  
                        __end_of_strcpy 2488                     start_initialization 2488  
        __end_of_action_menu_selector_0 2658          __end_of_action_menu_selector_1 2616  
        __end_of_action_menu_selector_2 25D4          __end_of_action_menu_selector_3 2592  
                  __end_of_RtccReadDate 1AA8                    __end_of_RtccReadTime 1D7A  
                  RtccWriteTime@wasAlrm 002F                    RtccWriteTime@wasWrEn 0030  
  __size_of_activity_submenu_activation 0066    __size_of_activity_submenu_alarm_tone 0066  
                __size_of_RtccWriteDate 0146                         RtccWriteDate@di 002C  
                __size_of_RtccWriteTime 010C                       __size_of_Read_RTC 00FC  
                         _activity_home 286A                           _activity_menu 1AA8  
                   __size_of_lcd_comand 000E                     __size_of_lcd_gotoxy 0024  
                              ??___wmul 002E                       __size_of_RtccWrOn 0012  
                       RtccWriteTime@di 002C                        __CFG_LPT1OSC$OFF 000000  
           __end_of_home_config_refresh 18F2                                ??_strcat 002E  
                              ??_strcmp 002E                                ??_strcpy 002E  
          __end_of_activity_submenu_pin 1EAC                             _ALRMCFGbits 000F91  
               __end_of_LCD_INIT_STRING 0F0F                           ??_button_hash 003C  
                           __pbssCOMRAM 0001                               _Write_RTC 1248  
                          _isdigit$2192 002B            __end_of_action_menu_selector 2442  
                       Delay1KTCYx@unit 002A                       __size_of_lcd_init 0080  
                           sprintf@flag 0046                       __size_of_lcd_putc 004C  
                           sprintf@prec 0049                ?_action_submenu_selector 002A  
                             __pnvBANK0 009E                          ?_activity_home 002A  
                        ?_activity_menu 002A                       __size_of_button_A 0040  
                     __size_of_button_B 0064                       __size_of_button_C 001C  
                     __size_of_button_D 000A                        ___lwdiv@dividend 002A  
                         ?_Delay100TCYx 002A                                ?___awdiv 002A  
                              ?___lwdiv 002A                                ?___lwmod 0031  
               RtccWriteTime@tempMinSec 0031                _activity_submenu_pin_set 2236  
                             _lcd_putrs 209E                               _lcd_write 297E  
                      _submenu_selected 001F          ?_activity_submenu_alarm_volume 002A  
                         _RtccWriteDate 14FE                             __smallconst 0F00  
                         _RtccWriteTime 1644            __size_of_check_home_callback 0022  
                              ?_isdigit 002A                    __CFG_RTCOSC$T1OSCREF 000000  
                              ?_pin_set 002A                __end_of_keyboard_control 14FE  
                            ?_Write_RTC 002A                        ___lwdiv@quotient 002E  
                              ?_sprintf 0036                          __size_of_setup 007C  
                   __end_of_button_hash 28E0                        _RtccAlrmTimeDate 0060  
                        ___wmul@product 002E                                _LATAbits 000F89  
                              _LATBbits 000F8A                               _pin_input 0099  
                              _PIE3bits 000FA3                               _segundo_d 005E  
                        ??_Delay100TCYx 002A                      _home_state_refresh 2196  
                             _segundo_u 00A4                               _reset_pin 2996  
                      __CFG_WDTPS$32768 000000                      RtccWriteDate@wasOn 002E  
                   ?_home_state_refresh 002A                      _Rtcc_read_TimeDate 0070  
          __size_of_home_volume_refresh 0052                          ?_RtccWriteDate 002A  
                            ?_lcd_putrs 0032                              ?_lcd_write 0034  
                     ___wmul@multiplier 002A                          ?_RtccWriteTime 002A  
          ?_button_B_submenu_activation 002A                               lcd_init@i 002E  
          ?_button_B_submenu_alarm_tone 002A                   __size_of_RtccReadDate 008E  
                          ??_lcd_comand 002E                               lcd_putc@c 0031  
                 __size_of_RtccReadTime 006E                            ??_lcd_gotoxy 002F  
                             copy_data0 24B6                    ??_home_state_refresh 004D  
                              _Read_RTC 1750                         ??_activity_home 003A  
                       ??_activity_menu 003A                    _activity_submenu_pin 1E46  
                       _lcd_send_nibble 1C26                                __Hrparam 0000  
                            ?_reset_pin 002A                                _RtccDate 0022  
                              __Lrparam 0000              ?_action_submenu_selector_0 002A  
            ?_action_submenu_selector_1 002A                                _RtccTime 0026  
                              _RtccWrOn 29AC                      __end_of_lcd_comand 29F0  
                    __end_of_lcd_gotoxy 2904                            _RtccReadDate 1A1A  
                      __size_of___awdiv 0096                            _RtccReadTime 1D0C  
                  _action_menu_selector 23FA                        __size_of___lwdiv 005C  
                      __size_of___lwmod 004C                            _RtccTimeDate 0068  
                    _config_widget_time 000D                              sprintf@val 0047  
                 __end_of_button_B_menu 23FA           ??_button_B_submenu_activation 003A  
                            strcat@from 002C                             _button_hash 28BC  
         ??_button_B_submenu_alarm_tone 003A                           ?_activity_pin 002A  
                              _activity 0003             __end_of_pin_input_validator 27AC  
                      __size_of_isdigit 0022                         ___lwdiv@divisor 002C  
                           ??_Write_RTC 0037                        __size_of_pin_set 001A  
                       ___lwdiv@counter 0030                                __ptext10 28BC  
                              __ptext11 2964                                __ptext20 2996  
                              __ptext12 277A                                __ptext21 2236  
                              __ptext13 21E8                                __ptext30 1EAC  
                              __ptext22 2698                                __ptext14 2A0E  
                              __ptext31 1F12                                __ptext23 26D2  
                              __ptext15 29FA                                __ptext40 23FA  
                              __ptext32 1F78                                __ptext24 27DE  
                              __ptext16 2948                                __ptext41 2550  
                              __ptext33 2658                                __ptext25 1D7A  
                              __ptext17 1AA8                                __ptext50 0FE4  
                              __ptext42 2592                                __ptext34 2284  
                              __ptext26 1DE0                                __ptext18 1FDE  
                              __ptext51 2904                                __ptext43 25D4  
                              __ptext35 2442                                __ptext27 270C  
                              __ptext19 2746                                __ptext60 231E  
                              __ptext52 2894                                __ptext44 2616  
                              __ptext36 29E2                                __ptext28 23B2  
                              __ptext61 28E0                                __ptext53 22D2  
                              __ptext45 184C                                __ptext37 280E  
                              __ptext29 1E46                                __ptext62 1B2A  
                              __ptext54 2042                                __ptext46 20F2  
                              __ptext38 24CC                                __ptext63 27AC  
                              __ptext55 2926                                __ptext47 2144  
                              __ptext39 250E                                __ptext64 1C26  
                              __ptext56 2A04                                __ptext48 2196  
                              __ptext65 29BE                                __ptext57 286A  
                              __ptext49 1988                                __ptext66 29D0  
                              __ptext58 297E                                __ptext67 1750  
                              __ptext59 209E                                __ptext68 1D0C  
                              __ptext69 1A1A                                _lcd_init 1B2A  
                              _lcd_putc 231E                        __size_of_sprintf 0264  
                            strcpy@from 002C                  __size_of_lcd_send_byte 0032  
                              _button_A 2658                                _button_B 1FDE  
                              _button_C 2948                                _button_D 29FA  
                         __size_of_main 002C                   __end_of_button_number 1D0C  
                 ?_activity_submenu_pin 002A                                _minuto_d 005D  
                              _minuto_u 00A3                       _home_tone_refresh 2144  
                    ?_home_tone_refresh 002A            ?_button_B_submenu_pin_config 002A  
                 ?_action_menu_selector 002A                           ??_Delay1KTCYx 002A  
                       ??_RtccWriteDate 002D             __size_of_home_clock_refresh 0092  
                       ??_RtccWriteTime 002D     __end_of_activity_submenu_activation 1FDE  
           _activity_submenu_activation 1F78            __size_of_reset_home_callback 000A  
   __end_of_activity_submenu_alarm_tone 1E46             _activity_submenu_alarm_tone 1DE0  
                           ??_lcd_putrs 0034                             ??_lcd_write 003A  
                   ??_home_tone_refresh 004D                __size_of_button_asterisk 0006  
                        ??_activity_pin 003A                             _OSCTUNEbits 000F9B  
                            _INTCONbits 000FF2                      RtccWriteTime@wasOn 002E  
                  __end_of_Delay100TCYx 29D0           ??_activity_submenu_activation 003A  
                              isdigit@c 002C           ??_activity_submenu_alarm_tone 003A  
                             sprintf@ap 0044                 __end_of_lcd_send_nibble 1C9C  
                             sprintf@sp 0036                        ___lwmod@dividend 0031  
             __end_of_home_tone_refresh 2196    __size_of_button_B_submenu_activation 003A  
  __size_of_button_B_submenu_alarm_tone 003A                     _check_home_callback 2926  
            ??_activity_submenu_pin_set 003A                              _OSCCONbits 000FD3  
                         _config_widget 000B                             ??_reset_pin 0030  
              ??_activity_submenu_alarm 003A                ??_activity_submenu_clock 003A  
                 RtccWriteDate@tempYear 0030                           _lcd_send_byte 27AC  
      __size_of_action_submenu_selector 0030           ??_button_B_submenu_pin_config 003A  
                            _RTCCFGbits 000F3F                                sprintf@c 004C  
                              sprintf@f 0038                                strcat@cp 002E  
                              strcat@to 002A                    ?_check_home_callback 002A  
                              strcmp@s1 002A                                strcmp@s2 002C  
                       ___lwmod@divisor 0033                                strcpy@cp 002E  
                              strcpy@to 002A                     __end_of_Delay1KTCYx 29E2  
                       ___lwmod@counter 0035          pin_input_validator@comparision 003A  
          __size_of_home_config_refresh 00A6                    RtccWriteDate@wasAlrm 002F  
                  RtccWriteDate@wasWrEn 0032                       ?_keyboard_control 002A  
                    ??_keyboard_control 004D                     _home_volume_refresh 20F2  
                ??_activity_submenu_pin 003A                   lcd_send_nibble@nibble 002B  
