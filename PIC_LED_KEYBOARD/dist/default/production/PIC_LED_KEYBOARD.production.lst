

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 13 23:42:52 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           	psect	idataCOMRAM
    74  0024EA                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _anio
    78  0024EA  0010               	dw	16
    79                           
    80                           ;initializer for _dia
    81  0024EC  0006               	dw	6
    82                           
    83                           ;initializer for _diasem
    84  0024EE  0002               	dw	2
    85                           
    86                           ;initializer for _hora
    87  0024F0  0012               	dw	18
    88                           
    89                           ;initializer for _mes
    90  0024F2  0009               	dw	9
    91                           
    92                           	psect	smallconst
    93  000F00                     __psmallconst:
    94                           	opt stack 0
    95  000F00  00                 	db	0
    96  000F01                     _dpowers:
    97                           	opt stack 0
    98  000F01  0001               	dw	1
    99  000F03  000A               	dw	10
   100  000F05  0064               	dw	100
   101  000F07  03E8               	dw	1000
   102  000F09  2710               	dw	10000
   103  000F0B                     __end_of_dpowers:
   104                           	opt stack 0
   105  000F0B                     _LCD_INIT_STRING:
   106                           	opt stack 0
   107  000F0B  28                 	db	40
   108  000F0C  0C                 	db	12
   109  000F0D  01                 	db	1
   110  000F0E  06                 	db	6
   111  000F0F                     __end_of_LCD_INIT_STRING:
   112                           	opt stack 0
   113  000F0F                     STR_14:
   114                           
   115                           ; BSR set to: 15
   116  000F0F  49                 	db	73	;'I'
   117  000F10  6E                 	db	110	;'n'
   118  000F11  67                 	db	103	;'g'
   119  000F12  72                 	db	114	;'r'
   120  000F13  65                 	db	101	;'e'
   121  000F14  73                 	db	115	;'s'
   122  000F15  65                 	db	101	;'e'
   123  000F16  20                 	db	32
   124  000F17  73                 	db	115	;'s'
   125  000F18  75                 	db	117	;'u'
   126  000F19  20                 	db	32
   127  000F1A  50                 	db	80	;'P'
   128  000F1B  49                 	db	73	;'I'
   129  000F1C  4E                 	db	78	;'N'
   130  000F1D  3A                 	db	58	;':'
   131  000F1E  00                 	db	0
   132  000F1F                     STR_2:
   133                           
   134                           ; BSR set to: 15
   135  000F1F  25                 	db	37
   136  000F20  30                 	db	48	;'0'
   137  000F21  32                 	db	50	;'2'
   138  000F22  75                 	db	117	;'u'
   139  000F23  2F                 	db	47
   140  000F24  25                 	db	37
   141  000F25  30                 	db	48	;'0'
   142  000F26  32                 	db	50	;'2'
   143  000F27  75                 	db	117	;'u'
   144  000F28  2F                 	db	47
   145  000F29  25                 	db	37
   146  000F2A  30                 	db	48	;'0'
   147  000F2B  32                 	db	50	;'2'
   148  000F2C  75                 	db	117	;'u'
   149  000F2D  00                 	db	0
   150  000F2E                     STR_3:
   151                           
   152                           ; BSR set to: 15
   153  000F2E  25                 	db	37
   154  000F2F  30                 	db	48	;'0'
   155  000F30  32                 	db	50	;'2'
   156  000F31  75                 	db	117	;'u'
   157  000F32  3A                 	db	58	;':'
   158  000F33  25                 	db	37
   159  000F34  30                 	db	48	;'0'
   160  000F35  32                 	db	50	;'2'
   161  000F36  75                 	db	117	;'u'
   162  000F37  3A                 	db	58	;':'
   163  000F38  25                 	db	37
   164  000F39  30                 	db	48	;'0'
   165  000F3A  32                 	db	50	;'2'
   166  000F3B  75                 	db	117	;'u'
   167  000F3C  00                 	db	0
   168  000F3D                     STR_33:
   169                           
   170                           ; BSR set to: 15
   171  000F3D  56                 	db	86	;'V'
   172  000F3E  6F                 	db	111	;'o'
   173  000F3F  6C                 	db	108	;'l'
   174  000F40  75                 	db	117	;'u'
   175  000F41  6D                 	db	109	;'m'
   176  000F42  65                 	db	101	;'e'
   177  000F43  6E                 	db	110	;'n'
   178  000F44  00                 	db	0
   179  000F45                     STR_30:
   180                           
   181                           ; BSR set to: 15
   182  000F45  43                 	db	67	;'C'
   183  000F46  61                 	db	97	;'a'
   184  000F47  6D                 	db	109	;'m'
   185  000F48  62                 	db	98	;'b'
   186  000F49  69                 	db	105	;'i'
   187  000F4A  61                 	db	97	;'a'
   188  000F4B  72                 	db	114	;'r'
   189  000F4C  00                 	db	0
   190  000F4D                     STR_15:
   191                           
   192                           ; BSR set to: 15
   193  000F4D  41                 	db	65	;'A'
   194  000F4E  63                 	db	99	;'c'
   195  000F4F  74                 	db	116	;'t'
   196  000F50  69                 	db	105	;'i'
   197  000F51  76                 	db	118	;'v'
   198  000F52  61                 	db	97	;'a'
   199  000F53  72                 	db	114	;'r'
   200  000F54  00                 	db	0
   201  000F55                     STR_18:
   202                           
   203                           ; BSR set to: 15
   204  000F55  41                 	db	65	;'A'
   205  000F56  6C                 	db	108	;'l'
   206  000F57  61                 	db	97	;'a'
   207  000F58  72                 	db	114	;'r'
   208  000F59  6D                 	db	109	;'m'
   209  000F5A  61                 	db	97	;'a'
   210  000F5B  00                 	db	0
   211  000F5C                     STR_27:
   212                           
   213                           ; BSR set to: 15
   214  000F5C  46                 	db	70	;'F'
   215  000F5D  65                 	db	101	;'e'
   216  000F5E  63                 	db	99	;'c'
   217  000F5F  68                 	db	104	;'h'
   218  000F60  61                 	db	97	;'a'
   219  000F61  00                 	db	0
   220  000F62                     STR_16:
   221                           
   222                           ; BSR set to: 15
   223  000F62  52                 	db	82	;'R'
   224  000F63  65                 	db	101	;'e'
   225  000F64  6C                 	db	108	;'l'
   226  000F65  6F                 	db	111	;'o'
   227  000F66  6A                 	db	106	;'j'
   228  000F67  00                 	db	0
   229  000F68                     STR_31:
   230                           
   231                           ; BSR set to: 15
   232  000F68  52                 	db	82	;'R'
   233  000F69  65                 	db	101	;'e'
   234  000F6A  73                 	db	115	;'s'
   235  000F6B  65                 	db	101	;'e'
   236  000F6C  74                 	db	116	;'t'
   237  000F6D  00                 	db	0
   238  000F6E                     STR_1:
   239                           
   240                           ; BSR set to: 15
   241  000F6E  31                 	db	49	;'1'
   242  000F6F  32                 	db	50	;'2'
   243  000F70  33                 	db	51	;'3'
   244  000F71  34                 	db	52	;'4'
   245  000F72  00                 	db	0
   246  000F73                     STR_28:
   247                           
   248                           ; BSR set to: 15
   249  000F73  48                 	db	72	;'H'
   250  000F74  6F                 	db	111	;'o'
   251  000F75  72                 	db	114	;'r'
   252  000F76  61                 	db	97	;'a'
   253  000F77  00                 	db	0
   254  000F78                     STR_34:
   255                           
   256                           ; BSR set to: 15
   257  000F78  54                 	db	84	;'T'
   258  000F79  6F                 	db	111	;'o'
   259  000F7A  6E                 	db	110	;'n'
   260  000F7B  6F                 	db	111	;'o'
   261  000F7C  00                 	db	0
   262  000F7D                     STR_36:
   263                           
   264                           ; BSR set to: 15
   265  000F7D  25                 	db	37
   266  000F7E  30                 	db	48	;'0'
   267  000F7F  31                 	db	49	;'1'
   268  000F80  75                 	db	117	;'u'
   269  000F81  00                 	db	0
   270  000F82                     STR_12:
   271                           
   272                           ; BSR set to: 15
   273  000F82  58                 	db	88	;'X'
   274  000F83  32                 	db	50	;'2'
   275  000F84  38                 	db	56	;'8'
   276  000F85  00                 	db	0
   277  000F86                     STR_17:
   278                           
   279                           ; BSR set to: 15
   280  000F86  50                 	db	80	;'P'
   281  000F87  69                 	db	105	;'i'
   282  000F88  6E                 	db	110	;'n'
   283  000F89  00                 	db	0
   284  000F8A                     STR_24:
   285                           
   286                           ; BSR set to: 15
   287  000F8A  53                 	db	83	;'S'
   288  000F8B  49                 	db	73	;'I'
   289  000F8C  00                 	db	0
   290  000F8D                     STR_25:
   291                           
   292                           ; BSR set to: 15
   293  000F8D  4E                 	db	78	;'N'
   294  000F8E  4F                 	db	79	;'O'
   295  000F8F  00                 	db	0
   296  000F90                     STR_5:
   297                           
   298                           ; BSR set to: 15
   299  000F90  20                 	db	32
   300  000F91  00                 	db	0
   301  000F92                     STR_35:
   302                           
   303                           ; BSR set to: 15
   304  000F92  2A                 	db	42
   305  000F93  00                 	db	0
   306  000F94                     STR_4:
   307                           
   308                           ; BSR set to: 15
   309  000F94  3E                 	db	62	;'>'
   310  000F95  00                 	db	0
   311  0000                     
   312                           ; #config settings
   313  000F96  00                 	db	0	; dummy byte at the end
   314  0000                     
   315                           	psect	nvCOMRAM
   316  00004A                     __pnvCOMRAM:
   317                           	opt stack 0
   318  00004A                     _anio_d:
   319                           	opt stack 0
   320  00004A                     	ds	1
   321  00004B                     _fecha_d:
   322                           	opt stack 0
   323  00004B                     	ds	1
   324  00004C                     _fecha_u:
   325                           	opt stack 0
   326  00004C                     	ds	1
   327  00004D                     _hora_d:
   328                           	opt stack 0
   329  00004D                     	ds	1
   330  00004E                     _hora_u:
   331                           	opt stack 0
   332  00004E                     	ds	1
   333  00004F                     _mes_d:
   334                           	opt stack 0
   335  00004F                     	ds	1
   336  000050                     _mes_u:
   337                           	opt stack 0
   338  000050                     	ds	1
   339  000051                     _minuto_d:
   340                           	opt stack 0
   341  000051                     	ds	1
   342  000052                     _minuto_u:
   343                           	opt stack 0
   344  000052                     	ds	1
   345  000053                     _segundo_d:
   346                           	opt stack 0
   347  000053                     	ds	1
   348  000054                     _segundo_u:
   349                           	opt stack 0
   350  000054                     	ds	1
   351                           
   352                           	psect	nvBANK0
   353  00009A                     __pnvBANK0:
   354                           	opt stack 0
   355  00009A                     _anio_u:
   356                           	opt stack 0
   357  00009A                     	ds	1
   358  00009B                     _dia_semana:
   359                           	opt stack 0
   360  00009B                     	ds	1
   361  0000                     _ANCON0	set	3912
   362  0000                     _ANCON1	set	3913
   363  0000                     _RTCCFG	set	3903
   364  0000                     _RTCCFGbits	set	3903
   365  0000                     _ADCON0	set	4034
   366  0000                     _ADCON1	set	4033
   367  0000                     _ALRMCFGbits	set	3985
   368  0000                     _EECON2	set	4007
   369  0000                     _INTCONbits	set	4082
   370  0000                     _LATAbits	set	3977
   371  0000                     _LATBbits	set	3978
   372  0000                     _OSCCONbits	set	4051
   373  0000                     _OSCTUNEbits	set	3995
   374  0000                     _PIE3bits	set	4003
   375  0000                     _PORTAbits	set	3968
   376  0000                     _PORTCbits	set	3970
   377  0000                     _RTCVALH	set	3993
   378  0000                     _RTCVALL	set	3992
   379  0000                     _T1CONbits	set	4045
   380  0000                     _TRISA	set	3986
   381  0000                     _TRISB	set	3987
   382  0000                     _TRISBbits	set	3987
   383  0000                     _TRISC	set	3988
   384                           
   385                           	psect	cinit
   386  0020A6                     __pcinit:
   387                           	opt stack 0
   388  0020A6                     start_initialization:
   389                           	opt stack 0
   390  0020A6                     __initialization:
   391                           	opt stack 0
   392                           
   393                           ; Clear objects allocated to BANK0 (58 bytes)
   394  0020A6  EE00  F060         	lfsr	0,__pbssBANK0
   395  0020AA  0E3A               	movlw	58
   396  0020AC                     clear_0:
   397  0020AC  6AEE               	clrf	postinc0,c
   398  0020AE  06E8               	decf	wreg,f,c
   399  0020B0  E1FD               	bnz	clear_0
   400                           
   401                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   402  0020B2  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   403                           
   404                           ; Clear objects allocated to COMRAM (37 bytes)
   405  0020B4  EE00  F001         	lfsr	0,__pbssCOMRAM
   406  0020B8  0E25               	movlw	37
   407  0020BA                     clear_1:
   408  0020BA  6AEE               	clrf	postinc0,c
   409  0020BC  06E8               	decf	wreg,f,c
   410  0020BE  E1FD               	bnz	clear_1
   411                           
   412                           ; Initialize objects allocated to COMRAM (10 bytes)
   413                           ; load TBLPTR registers with __pidataCOMRAM
   414  0020C0  0EEA               	movlw	low __pidataCOMRAM
   415  0020C2  6EF6               	movwf	tblptrl,c
   416  0020C4  0E24               	movlw	high __pidataCOMRAM
   417  0020C6  6EF7               	movwf	tblptrh,c
   418  0020C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   419  0020CA  6EF8               	movwf	tblptru,c
   420  0020CC  EE00  F055         	lfsr	0,__pdataCOMRAM
   421  0020D0  EE10 F00A          	lfsr	1,10
   422  0020D4                     copy_data0:
   423  0020D4  0009               	tblrd		*+
   424  0020D6  CFF5 FFEE          	movff	tablat,postinc0
   425  0020DA  50E5               	movf	postdec1,w,c
   426  0020DC  50E1               	movf	fsr1l,w,c
   427  0020DE  E1FA               	bnz	copy_data0
   428  0020E0                     end_of_initialization:
   429                           	opt stack 0
   430  0020E0                     __end_of__initialization:
   431                           	opt stack 0
   432  0020E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   433  0020E2  6EF8               	movwf	tblptru,c
   434  0020E4  0100               	movlb	0
   435  0020E6  EFD3  F011         	goto	_main	;jump to C main() function
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           	psect	bitbssCOMRAM
   446  0002F8                     __pbitbssCOMRAM:
   447                           	opt stack 0
   448  0002F8                     _flag:
   449                           	opt stack 0
   450  0002F8                     	ds	1
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           postdec1	equ	0xFE5
   458                           fsr1l	equ	0xFE1
   459                           
   460                           	psect	bssCOMRAM
   461  000001                     __pbssCOMRAM:
   462                           	opt stack 0
   463  000001                     _a:
   464                           	opt stack 0
   465  000001                     	ds	2
   466  000003                     _activity:
   467                           	opt stack 0
   468  000003                     	ds	2
   469  000005                     _b:
   470                           	opt stack 0
   471  000005                     	ds	2
   472  000007                     _c:
   473                           	opt stack 0
   474  000007                     	ds	2
   475  000009                     _home_callback:
   476                           	opt stack 0
   477  000009                     	ds	2
   478  00000B                     _home_callback_delay:
   479                           	opt stack 0
   480  00000B                     	ds	2
   481  00000D                     _i:
   482                           	opt stack 0
   483  00000D                     	ds	2
   484  00000F                     _j:
   485                           	opt stack 0
   486  00000F                     	ds	2
   487  000011                     _k:
   488                           	opt stack 0
   489  000011                     	ds	2
   490  000013                     _menu_selected:
   491                           	opt stack 0
   492  000013                     	ds	2
   493  000015                     _minuto:
   494                           	opt stack 0
   495  000015                     	ds	2
   496  000017                     _segundo:
   497                           	opt stack 0
   498  000017                     	ds	2
   499  000019                     _state:
   500                           	opt stack 0
   501  000019                     	ds	2
   502  00001B                     _submenu_selected:
   503                           	opt stack 0
   504  00001B                     	ds	2
   505  00001D                     _key:
   506                           	opt stack 0
   507  00001D                     	ds	1
   508  00001E                     _RtccDate:
   509                           	opt stack 0
   510  00001E                     	ds	4
   511  000022                     _RtccTime:
   512                           	opt stack 0
   513  000022                     	ds	4
   514                           tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           postdec1	equ	0xFE5
   521                           fsr1l	equ	0xFE1
   522                           
   523                           	psect	dataCOMRAM
   524  000055                     __pdataCOMRAM:
   525                           	opt stack 0
   526  000055                     _anio:
   527                           	opt stack 0
   528  000055                     	ds	2
   529  000057                     _dia:
   530                           	opt stack 0
   531  000057                     	ds	2
   532  000059                     _diasem:
   533                           	opt stack 0
   534  000059                     	ds	2
   535  00005B                     _hora:
   536                           	opt stack 0
   537  00005B                     	ds	2
   538  00005D                     _mes:
   539                           	opt stack 0
   540  00005D                     	ds	2
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1l	equ	0xFE1
   549                           
   550                           	psect	bssBANK0
   551  000060                     __pbssBANK0:
   552                           	opt stack 0
   553  000060                     _RtccAlrmTimeDate:
   554                           	opt stack 0
   555  000060                     	ds	8
   556  000068                     _RtccTimeDate:
   557                           	opt stack 0
   558  000068                     	ds	8
   559  000070                     _Rtcc_read_TimeDate:
   560                           	opt stack 0
   561  000070                     	ds	8
   562  000078                     _RtccTimeVal:
   563                           	opt stack 0
   564  000078                     	ds	4
   565  00007C                     _buffer1:
   566                           	opt stack 0
   567  00007C                     	ds	20
   568  000090                     _pin:
   569                           	opt stack 0
   570  000090                     	ds	5
   571  000095                     _pin_input:
   572                           	opt stack 0
   573  000095                     	ds	5
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           tblptrl	equ	0xFF6
   577                           tablat	equ	0xFF5
   578                           postinc0	equ	0xFEE
   579                           wreg	equ	0xFE8
   580                           postdec1	equ	0xFE5
   581                           fsr1l	equ	0xFE1
   582                           
   583                           	psect	cstackCOMRAM
   584  000026                     __pcstackCOMRAM:
   585                           	opt stack 0
   586  000026                     ??_isdigit:
   587  000026                     ??_lcd_send_nibble:
   588  000026                     ?_strcmp:
   589                           	opt stack 0
   590  000026                     ?___wmul:
   591                           	opt stack 0
   592  000026                     ?___awdiv:
   593                           	opt stack 0
   594  000026                     ?___lwdiv:
   595                           	opt stack 0
   596  000026                     Delay100TCYx@unit:
   597                           	opt stack 0
   598  000026                     Delay1KTCYx@unit:
   599                           	opt stack 0
   600  000026                     RtccReadDate@pDt:
   601                           	opt stack 0
   602  000026                     RtccReadTime@pTm:
   603                           	opt stack 0
   604  000026                     RtccWriteDate@pDt:
   605                           	opt stack 0
   606  000026                     RtccWriteTime@pTm:
   607                           	opt stack 0
   608  000026                     ___wmul@multiplier:
   609                           	opt stack 0
   610  000026                     ___awdiv@dividend:
   611                           	opt stack 0
   612  000026                     ___lwdiv@dividend:
   613                           	opt stack 0
   614  000026                     strcat@to:
   615                           	opt stack 0
   616  000026                     strcmp@s1:
   617                           	opt stack 0
   618  000026                     strcpy@to:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x0
   622  000026                     	ds	1
   623  000027                     lcd_send_nibble@nibble:
   624                           	opt stack 0
   625  000027                     _isdigit$2144:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x1
   629  000027                     	ds	1
   630  000028                     lcd_send_byte@n:
   631                           	opt stack 0
   632  000028                     RtccWriteDate@di:
   633                           	opt stack 0
   634  000028                     RtccWriteTime@di:
   635                           	opt stack 0
   636  000028                     isdigit@c:
   637                           	opt stack 0
   638  000028                     ___wmul@multiplicand:
   639                           	opt stack 0
   640  000028                     ___awdiv@divisor:
   641                           	opt stack 0
   642  000028                     ___lwdiv@divisor:
   643                           	opt stack 0
   644  000028                     strcat@from:
   645                           	opt stack 0
   646  000028                     strcmp@s2:
   647                           	opt stack 0
   648  000028                     strcpy@from:
   649                           	opt stack 0
   650  000028                     RtccReadDate@rTD1:
   651                           	opt stack 0
   652  000028                     RtccReadTime@rTD1:
   653                           	opt stack 0
   654                           
   655                           ; 8 bytes @ 0x2
   656  000028                     	ds	1
   657  000029                     lcd_send_byte@address:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x3
   661  000029                     	ds	1
   662  00002A                     ??_strcmp:
   663  00002A                     lcd_init@i:
   664                           	opt stack 0
   665  00002A                     lcd_gotoxy@y:
   666                           	opt stack 0
   667  00002A                     lcd_comand@d:
   668                           	opt stack 0
   669  00002A                     RtccWriteDate@wasOn:
   670                           	opt stack 0
   671  00002A                     RtccWriteTime@wasOn:
   672                           	opt stack 0
   673  00002A                     ___awdiv@counter:
   674                           	opt stack 0
   675  00002A                     ___wmul@product:
   676                           	opt stack 0
   677  00002A                     ___lwdiv@quotient:
   678                           	opt stack 0
   679  00002A                     strcat@cp:
   680                           	opt stack 0
   681  00002A                     strcpy@cp:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x4
   685  00002A                     	ds	1
   686  00002B                     lcd_gotoxy@x:
   687                           	opt stack 0
   688  00002B                     RtccWriteDate@wasAlrm:
   689                           	opt stack 0
   690  00002B                     RtccWriteTime@wasAlrm:
   691                           	opt stack 0
   692  00002B                     ___awdiv@sign:
   693                           	opt stack 0
   694  00002B                     strcmp@r:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x5
   698  00002B                     	ds	1
   699  00002C                     lcd_gotoxy@address:
   700                           	opt stack 0
   701  00002C                     RtccWriteTime@wasWrEn:
   702                           	opt stack 0
   703  00002C                     ___lwdiv@counter:
   704                           	opt stack 0
   705  00002C                     RtccWriteDate@tempYear:
   706                           	opt stack 0
   707  00002C                     ___awdiv@quotient:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x6
   711  00002C                     	ds	1
   712  00002D                     ?___lwmod:
   713                           	opt stack 0
   714  00002D                     lcd_putc@c:
   715                           	opt stack 0
   716  00002D                     RtccWriteTime@tempMinSec:
   717                           	opt stack 0
   718  00002D                     ___lwmod@dividend:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x7
   722  00002D                     	ds	1
   723  00002E                     RtccWriteDate@wasWrEn:
   724                           	opt stack 0
   725  00002E                     lcd_putrs@ptr:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x8
   729  00002E                     	ds	1
   730  00002F                     RtccWriteDate@tempDayMonth:
   731                           	opt stack 0
   732  00002F                     RtccWriteTime@tempHourWDay:
   733                           	opt stack 0
   734  00002F                     ___lwmod@divisor:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x9
   738  00002F                     	ds	1
   739  000030                     lcd_write@column:
   740                           	opt stack 0
   741  000030                     RtccReadDate@rTD0:
   742                           	opt stack 0
   743  000030                     RtccReadTime@rTD0:
   744                           	opt stack 0
   745                           
   746                           ; 8 bytes @ 0xA
   747  000030                     	ds	1
   748  000031                     ___lwmod@counter:
   749                           	opt stack 0
   750  000031                     RtccWriteDate@tempHourWDay:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0xB
   754  000031                     	ds	1
   755  000032                     ?_sprintf:
   756                           	opt stack 0
   757  000032                     lcd_write@row:
   758                           	opt stack 0
   759  000032                     sprintf@sp:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0xC
   763  000032                     	ds	1
   764  000033                     
   765                           ; 0 bytes @ 0xD
   766  000033                     	ds	1
   767  000034                     lcd_write@string:
   768                           	opt stack 0
   769  000034                     sprintf@f:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0xE
   773  000034                     	ds	2
   774  000036                     ??_action_menu_selector:
   775  000036                     ??_action_submenu_selector:
   776  000036                     ??_button_B:
   777  000036                     pin_input_validator@comparision:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x10
   781  000036                     	ds	2
   782  000038                     ??_button_A:
   783  000038                     
   784                           ; 0 bytes @ 0x12
   785  000038                     	ds	4
   786  00003C                     ??_sprintf:
   787                           
   788                           ; 0 bytes @ 0x16
   789  00003C                     	ds	4
   790  000040                     sprintf@ap:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x1A
   794  000040                     	ds	2
   795  000042                     sprintf@flag:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x1C
   799  000042                     	ds	1
   800  000043                     sprintf@val:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x1D
   804  000043                     	ds	2
   805  000045                     sprintf@prec:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x1F
   809  000045                     	ds	1
   810  000046                     sprintf@width:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x20
   814  000046                     	ds	2
   815  000048                     sprintf@c:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x22
   819  000048                     	ds	1
   820  000049                     ??_keyboard_control:
   821                           
   822                           ; 0 bytes @ 0x23
   823  000049                     	ds	1
   824  00004A                     tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           postinc0	equ	0xFEE
   829                           wreg	equ	0xFE8
   830                           postdec1	equ	0xFE5
   831                           fsr1l	equ	0xFE1
   832                           
   833                           ; 0 bytes @ 0x24
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 428 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  2  346[None  ] int 
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels required when called:   11
   859 ;; This function calls:
   860 ;;		_Read_RTC
   861 ;;		_activity_home
   862 ;;		_check_home_callback
   863 ;;		_home_clock_refresh
   864 ;;		_keyboard_control
   865 ;;		_setup
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text0
   872  0023A6                     __ptext0:
   873                           	opt stack 0
   874  0023A6                     _main:
   875                           	opt stack 20
   876                           
   877                           ;main.c: 430: setup();
   878                           
   879                           ; BSR set to: 15
   880                           ;incstack = 0
   881  0023A6  EC7E  F00D         	call	_setup	;wreg free
   882                           
   883                           ;main.c: 432: activity_home();
   884  0023AA  ECBE  F011         	call	_activity_home	;wreg free
   885  0023AE  D000               	goto	l3230
   886  0023B0                     l3230:
   887                           
   888                           ;main.c: 436: check_home_callback();
   889  0023B0  EC1E  F012         	call	_check_home_callback	;wreg free
   890                           
   891                           ;main.c: 438: Read_RTC();
   892  0023B4  EC78  F00B         	call	_Read_RTC	;wreg free
   893                           
   894                           ;main.c: 440: keyboard_control();
   895  0023B8  ECFE  F008         	call	_keyboard_control	;wreg free
   896                           
   897                           ;main.c: 442: if(activity == 0){home_clock_refresh();}
   898  0023BC  5003               	movf	_activity,w,c
   899  0023BE  1004               	iorwf	_activity+1,w,c
   900  0023C0  A4D8               	btfss	status,2,c
   901  0023C2  D7F6               	goto	l3230
   902  0023C4  EC32  F00C         	call	_home_clock_refresh	;wreg free
   903  0023C8  D7F3               	goto	l3230
   904                           
   905                           ;main.c: 444: }
   906                           ;main.c: 446: return 0;
   907                           ;	Return value of _main is never used
   908  0023CA  EF00  F000         	goto	start
   909  0023CE                     __end_of_main:
   910                           	opt stack 0
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           postdec1	equ	0xFE5
   918                           fsr1l	equ	0xFE1
   919                           status	equ	0xFD8
   920                           
   921 ;; *************** function _setup *****************
   922 ;; Defined at:
   923 ;;		line 56 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;		None               void
   930 ;; Registers used:
   931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    3
   944 ;; This function calls:
   945 ;;		_Write_RTC
   946 ;;		_lcd_comand
   947 ;;		_lcd_init
   948 ;;		_strcpy
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text1
   955  001AFC                     __ptext1:
   956                           	opt stack 0
   957  001AFC                     _setup:
   958                           	opt stack 27
   959                           
   960                           ;main.c: 58: OSCTUNEbits.INTSRC=1;
   961                           
   962                           ;incstack = 0
   963  001AFC  8E9B               	bsf	3995,7,c	;volatile
   964                           
   965                           ;main.c: 59: OSCTUNEbits.PLLEN=0;
   966  001AFE  9C9B               	bcf	3995,6,c	;volatile
   967                           
   968                           ;main.c: 60: OSCCONbits.IRCF0=1;
   969  001B00  88D3               	bsf	4051,4,c	;volatile
   970                           
   971                           ;main.c: 61: OSCCONbits.IRCF1=1;
   972  001B02  8AD3               	bsf	4051,5,c	;volatile
   973                           
   974                           ;main.c: 62: OSCCONbits.IRCF2=1;
   975  001B04  8CD3               	bsf	4051,6,c	;volatile
   976                           
   977                           ;main.c: 63: OSCCONbits.SCS0=0;
   978  001B06  90D3               	bcf	4051,0,c	;volatile
   979                           
   980                           ;main.c: 64: OSCCONbits.SCS1=0;
   981  001B08  92D3               	bcf	4051,1,c	;volatile
   982                           
   983                           ;main.c: 65: TRISA = 0b11110000;
   984  001B0A  0EF0               	movlw	240
   985  001B0C  6E92               	movwf	3986,c	;volatile
   986                           
   987                           ;main.c: 66: TRISB = 0;
   988  001B0E  0E00               	movlw	0
   989  001B10  6E93               	movwf	3987,c	;volatile
   990                           
   991                           ;main.c: 67: TRISC = 0b00000111;
   992  001B12  0E07               	movlw	7
   993  001B14  6E94               	movwf	3988,c	;volatile
   994                           
   995                           ;main.c: 71: ANCON0=0b11111111;
   996  001B16  010F               	movlb	15	; () banked
   997  001B18  6948               	setf	72,b	;volatile
   998                           
   999                           ; BSR set to: 15
  1000                           ;main.c: 73: ANCON1=0b11111111;
  1001  001B1A  010F               	movlb	15	; () banked
  1002  001B1C  6949               	setf	73,b	;volatile
  1003                           
  1004                           ;main.c: 74: ADCON0=0b00101101;
  1005  001B1E  0E2D               	movlw	45
  1006  001B20  6EC2               	movwf	4034,c	;volatile
  1007                           
  1008                           ;main.c: 75: ADCON1=0b00010000;
  1009  001B22  0E10               	movlw	16
  1010  001B24  6EC1               	movwf	4033,c	;volatile
  1011                           
  1012                           ; BSR set to: 15
  1013                           ;main.c: 76: RTCCFGbits.RTCEN=1;
  1014  001B26  010F               	movlb	15	; () banked
  1015  001B28  8F3F               	bsf	63,7,b	;volatile
  1016                           
  1017                           ; BSR set to: 15
  1018                           ;main.c: 77: RTCCFGbits.RTCWREN=1;
  1019  001B2A  010F               	movlb	15	; () banked
  1020  001B2C  8B3F               	bsf	63,5,b	;volatile
  1021                           
  1022                           ; BSR set to: 15
  1023                           ;main.c: 78: T1CONbits.T1OSCEN=1;
  1024  001B2E  86CD               	bsf	4045,3,c	;volatile
  1025                           
  1026                           ; BSR set to: 15
  1027                           ;main.c: 79: Write_RTC();
  1028  001B30  ECA9  F009         	call	_Write_RTC	;wreg free
  1029                           
  1030                           ;main.c: 80: lcd_init();
  1031  001B34  EC03  F00D         	call	_lcd_init	;wreg free
  1032                           
  1033                           ;main.c: 81: lcd_comand(0b00001100);
  1034  001B38  0E0C               	movlw	12
  1035  001B3A  EC6E  F012         	call	_lcd_comand
  1036                           
  1037                           ;main.c: 82: LATBbits.LATB1 = 1;;
  1038  001B3E  828A               	bsf	3978,1,c	;volatile
  1039                           
  1040                           ;main.c: 83: LATBbits.LATB0 = 1;;
  1041  001B40  808A               	bsf	3978,0,c	;volatile
  1042                           
  1043                           ;main.c: 86: home_callback_delay = 50;
  1044  001B42  0E00               	movlw	0
  1045  001B44  6E0C               	movwf	_home_callback_delay+1,c
  1046  001B46  0E32               	movlw	50
  1047  001B48  6E0B               	movwf	_home_callback_delay,c
  1048                           
  1049                           ;main.c: 87: menu_selected = 0;
  1050  001B4A  0E00               	movlw	0
  1051  001B4C  6E14               	movwf	_menu_selected+1,c
  1052  001B4E  0E00               	movlw	0
  1053  001B50  6E13               	movwf	_menu_selected,c
  1054                           
  1055                           ;main.c: 88: submenu_selected = 0;
  1056  001B52  0E00               	movlw	0
  1057  001B54  6E1C               	movwf	_submenu_selected+1,c
  1058  001B56  0E00               	movlw	0
  1059  001B58  6E1B               	movwf	_submenu_selected,c
  1060                           
  1061                           ;main.c: 89: strcpy(pin, "1234");
  1062  001B5A  0E90               	movlw	low _pin
  1063  001B5C  6E26               	movwf	strcpy@to,c
  1064  001B5E  0E00               	movlw	high _pin
  1065  001B60  6E27               	movwf	strcpy@to+1,c
  1066  001B62  0E6E               	movlw	low STR_1
  1067  001B64  6E28               	movwf	strcpy@from,c
  1068  001B66  0E0F               	movlw	high STR_1
  1069  001B68  6E29               	movwf	strcpy@from+1,c
  1070  001B6A  EC74  F011         	call	_strcpy	;wreg free
  1071  001B6E  0012               	return		;funcret
  1072  001B70                     __end_of_setup:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           postinc0	equ	0xFEE
  1079                           wreg	equ	0xFE8
  1080                           postdec1	equ	0xFE5
  1081                           fsr1l	equ	0xFE1
  1082                           status	equ	0xFD8
  1083                           
  1084 ;; *************** function _Write_RTC *****************
  1085 ;; Defined at:
  1086 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;		None               void
  1093 ;; Registers used:
  1094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    2
  1107 ;; This function calls:
  1108 ;;		_RtccWrOn
  1109 ;;		_RtccWriteDate
  1110 ;;		_RtccWriteTime
  1111 ;;		___awdiv
  1112 ;; This function is called by:
  1113 ;;		_setup
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text2
  1118  001352                     __ptext2:
  1119                           	opt stack 0
  1120  001352                     _Write_RTC:
  1121                           	opt stack 27
  1122                           
  1123                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1124                           
  1125                           ;incstack = 0
  1126  001352  EC53  F012         	call	_RtccWrOn	;wreg free
  1127                           
  1128                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1129  001356  80A3               	bsf	4003,0,c	;volatile
  1130                           
  1131                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1132  001358  C017  F026         	movff	_segundo,___awdiv@dividend
  1133  00135C  C018  F027         	movff	_segundo+1,___awdiv@dividend+1
  1134  001360  0E00               	movlw	0
  1135  001362  6E29               	movwf	___awdiv@divisor+1,c
  1136  001364  0E0A               	movlw	10
  1137  001366  6E28               	movwf	___awdiv@divisor,c
  1138  001368  ECE7  F00B         	call	___awdiv	;wreg free
  1139  00136C  5026               	movf	?___awdiv,w,c
  1140  00136E  6E53               	movwf	_segundo_d,c
  1141                           
  1142                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1143  001370  5053               	movf	_segundo_d,w,c
  1144  001372  0D0A               	mullw	10
  1145  001374  50F3               	movf	prodl,w,c
  1146  001376  0800               	sublw	0
  1147  001378  2417               	addwf	_segundo,w,c
  1148  00137A  6E54               	movwf	_segundo_u,c
  1149                           
  1150                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1151  00137C  5053               	movf	_segundo_d,w,c
  1152  00137E  0D10               	mullw	16
  1153  001380  50F3               	movf	prodl,w,c
  1154  001382  2454               	addwf	_segundo_u,w,c
  1155  001384  6E23               	movwf	_RtccTime+1,c
  1156                           
  1157                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1158  001386  C015  F026         	movff	_minuto,___awdiv@dividend
  1159  00138A  C016  F027         	movff	_minuto+1,___awdiv@dividend+1
  1160  00138E  0E00               	movlw	0
  1161  001390  6E29               	movwf	___awdiv@divisor+1,c
  1162  001392  0E0A               	movlw	10
  1163  001394  6E28               	movwf	___awdiv@divisor,c
  1164  001396  ECE7  F00B         	call	___awdiv	;wreg free
  1165  00139A  5026               	movf	?___awdiv,w,c
  1166  00139C  6E51               	movwf	_minuto_d,c
  1167                           
  1168                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1169  00139E  5051               	movf	_minuto_d,w,c
  1170  0013A0  0D0A               	mullw	10
  1171  0013A2  50F3               	movf	prodl,w,c
  1172  0013A4  0800               	sublw	0
  1173  0013A6  2415               	addwf	_minuto,w,c
  1174  0013A8  6E52               	movwf	_minuto_u,c
  1175                           
  1176                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1177  0013AA  5051               	movf	_minuto_d,w,c
  1178  0013AC  0D10               	mullw	16
  1179  0013AE  50F3               	movf	prodl,w,c
  1180  0013B0  2452               	addwf	_minuto_u,w,c
  1181  0013B2  6E24               	movwf	_RtccTime+2,c
  1182                           
  1183                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1184  0013B4  C05B  F026         	movff	_hora,___awdiv@dividend
  1185  0013B8  C05C  F027         	movff	_hora+1,___awdiv@dividend+1
  1186  0013BC  0E00               	movlw	0
  1187  0013BE  6E29               	movwf	___awdiv@divisor+1,c
  1188  0013C0  0E0A               	movlw	10
  1189  0013C2  6E28               	movwf	___awdiv@divisor,c
  1190  0013C4  ECE7  F00B         	call	___awdiv	;wreg free
  1191  0013C8  5026               	movf	?___awdiv,w,c
  1192  0013CA  6E4D               	movwf	_hora_d,c
  1193                           
  1194                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1195  0013CC  504D               	movf	_hora_d,w,c
  1196  0013CE  0D0A               	mullw	10
  1197  0013D0  50F3               	movf	prodl,w,c
  1198  0013D2  0800               	sublw	0
  1199  0013D4  245B               	addwf	_hora,w,c
  1200  0013D6  6E4E               	movwf	_hora_u,c
  1201                           
  1202                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1203  0013D8  504D               	movf	_hora_d,w,c
  1204  0013DA  0D10               	mullw	16
  1205  0013DC  50F3               	movf	prodl,w,c
  1206  0013DE  244E               	addwf	_hora_u,w,c
  1207  0013E0  6E25               	movwf	_RtccTime+3,c
  1208                           
  1209                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1210  0013E2  C055  F026         	movff	_anio,___awdiv@dividend
  1211  0013E6  C056  F027         	movff	_anio+1,___awdiv@dividend+1
  1212  0013EA  0E00               	movlw	0
  1213  0013EC  6E29               	movwf	___awdiv@divisor+1,c
  1214  0013EE  0E0A               	movlw	10
  1215  0013F0  6E28               	movwf	___awdiv@divisor,c
  1216  0013F2  ECE7  F00B         	call	___awdiv	;wreg free
  1217  0013F6  5026               	movf	?___awdiv,w,c
  1218  0013F8  6E4A               	movwf	_anio_d,c
  1219                           
  1220                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1221  0013FA  504A               	movf	_anio_d,w,c
  1222  0013FC  0D0A               	mullw	10
  1223  0013FE  50F3               	movf	prodl,w,c
  1224  001400  0800               	sublw	0
  1225  001402  2455               	addwf	_anio,w,c
  1226  001404  0100               	movlb	0	; () banked
  1227  001406  6F9A               	movwf	_anio_u& (0+255),b
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1231  001408  504A               	movf	_anio_d,w,c
  1232  00140A  0D10               	mullw	16
  1233  00140C  50F3               	movf	prodl,w,c
  1234  00140E  0100               	movlb	0	; () banked
  1235  001410  259A               	addwf	_anio_u& (0+255),w,b
  1236  001412  6E21               	movwf	_RtccDate+3,c
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1240  001414  C05D  F026         	movff	_mes,___awdiv@dividend
  1241  001418  C05E  F027         	movff	_mes+1,___awdiv@dividend+1
  1242  00141C  0E00               	movlw	0
  1243  00141E  6E29               	movwf	___awdiv@divisor+1,c
  1244  001420  0E0A               	movlw	10
  1245  001422  6E28               	movwf	___awdiv@divisor,c
  1246  001424  ECE7  F00B         	call	___awdiv	;wreg free
  1247  001428  5026               	movf	?___awdiv,w,c
  1248  00142A  6E4F               	movwf	_mes_d,c
  1249                           
  1250                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1251  00142C  504F               	movf	_mes_d,w,c
  1252  00142E  0D0A               	mullw	10
  1253  001430  50F3               	movf	prodl,w,c
  1254  001432  0800               	sublw	0
  1255  001434  245D               	addwf	_mes,w,c
  1256  001436  6E50               	movwf	_mes_u,c
  1257                           
  1258                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1259  001438  504F               	movf	_mes_d,w,c
  1260  00143A  0D10               	mullw	16
  1261  00143C  50F3               	movf	prodl,w,c
  1262  00143E  2450               	addwf	_mes_u,w,c
  1263  001440  6E20               	movwf	_RtccDate+2,c
  1264                           
  1265                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1266  001442  C057  F026         	movff	_dia,___awdiv@dividend
  1267  001446  C058  F027         	movff	_dia+1,___awdiv@dividend+1
  1268  00144A  0E00               	movlw	0
  1269  00144C  6E29               	movwf	___awdiv@divisor+1,c
  1270  00144E  0E0A               	movlw	10
  1271  001450  6E28               	movwf	___awdiv@divisor,c
  1272  001452  ECE7  F00B         	call	___awdiv	;wreg free
  1273  001456  5026               	movf	?___awdiv,w,c
  1274  001458  6E4B               	movwf	_fecha_d,c
  1275                           
  1276                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1277  00145A  504B               	movf	_fecha_d,w,c
  1278  00145C  0D0A               	mullw	10
  1279  00145E  50F3               	movf	prodl,w,c
  1280  001460  0800               	sublw	0
  1281  001462  2457               	addwf	_dia,w,c
  1282  001464  6E4C               	movwf	_fecha_u,c
  1283                           
  1284                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1285  001466  504B               	movf	_fecha_d,w,c
  1286  001468  0D10               	mullw	16
  1287  00146A  50F3               	movf	prodl,w,c
  1288  00146C  244C               	addwf	_fecha_u,w,c
  1289  00146E  6E1F               	movwf	_RtccDate+1,c
  1290                           
  1291                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1292  001470  C059  F09B         	movff	_diasem,_dia_semana
  1293                           
  1294                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1295  001474  C059  F01E         	movff	_diasem,_RtccDate
  1296                           
  1297                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1298  001478  0E22               	movlw	low _RtccTime
  1299  00147A  6E26               	movwf	RtccWriteTime@pTm,c
  1300  00147C  0E00               	movlw	high _RtccTime
  1301  00147E  6E27               	movwf	RtccWriteTime@pTm+1,c
  1302  001480  0E01               	movlw	1
  1303  001482  6E28               	movwf	RtccWriteTime@di,c
  1304  001484  ECF2  F00A         	call	_RtccWriteTime	;wreg free
  1305                           
  1306                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1307  001488  0E1E               	movlw	low _RtccDate
  1308  00148A  6E26               	movwf	RtccWriteDate@pDt,c
  1309  00148C  0E00               	movlw	high _RtccDate
  1310  00148E  6E27               	movwf	RtccWriteDate@pDt+1,c
  1311  001490  0E01               	movlw	1
  1312  001492  6E28               	movwf	RtccWriteDate@di,c
  1313  001494  EC4F  F00A         	call	_RtccWriteDate	;wreg free
  1314                           
  1315                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1316  001498  010F               	movlb	15	; () banked
  1317  00149A  8F3F               	bsf	63,7,b	;volatile
  1318                           
  1319                           ; BSR set to: 15
  1320  00149C  0012               	return		;funcret
  1321  00149E                     __end_of_Write_RTC:
  1322                           	opt stack 0
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           prodl	equ	0xFF3
  1328                           postinc0	equ	0xFEE
  1329                           wreg	equ	0xFE8
  1330                           postdec1	equ	0xFE5
  1331                           fsr1l	equ	0xFE1
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function ___awdiv *****************
  1335 ;; Defined at:
  1336 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  dividend        2    0[COMRAM] int 
  1339 ;;  divisor         2    2[COMRAM] int 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  quotient        2    6[COMRAM] int 
  1342 ;;  sign            1    5[COMRAM] unsigned char 
  1343 ;;  counter         1    4[COMRAM] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2    0[COMRAM] int 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1356 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1357 ;;Total ram usage:        8 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_Write_RTC
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text3
  1367  0017CE                     __ptext3:
  1368                           	opt stack 0
  1369  0017CE                     ___awdiv:
  1370                           	opt stack 28
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;incstack = 0
  1374  0017CE  0E00               	movlw	0
  1375  0017D0  6E2B               	movwf	___awdiv@sign,c
  1376  0017D2  AE29               	btfss	___awdiv@divisor+1,7,c
  1377  0017D4  D007               	goto	l2854
  1378  0017D6  6C28               	negf	___awdiv@divisor,c
  1379  0017D8  1E29               	comf	___awdiv@divisor+1,f,c
  1380  0017DA  B0D8               	btfsc	status,0,c
  1381  0017DC  2A29               	incf	___awdiv@divisor+1,f,c
  1382  0017DE  0E01               	movlw	1
  1383  0017E0  6E2B               	movwf	___awdiv@sign,c
  1384  0017E2  D000               	goto	l2854
  1385  0017E4                     l2854:
  1386  0017E4  AE27               	btfss	___awdiv@dividend+1,7,c
  1387  0017E6  D007               	goto	l2860
  1388  0017E8  6C26               	negf	___awdiv@dividend,c
  1389  0017EA  1E27               	comf	___awdiv@dividend+1,f,c
  1390  0017EC  B0D8               	btfsc	status,0,c
  1391  0017EE  2A27               	incf	___awdiv@dividend+1,f,c
  1392  0017F0  0E01               	movlw	1
  1393  0017F2  1A2B               	xorwf	___awdiv@sign,f,c
  1394  0017F4  D000               	goto	l2860
  1395  0017F6                     l2860:
  1396  0017F6  0E00               	movlw	0
  1397  0017F8  6E2D               	movwf	___awdiv@quotient+1,c
  1398  0017FA  0E00               	movlw	0
  1399  0017FC  6E2C               	movwf	___awdiv@quotient,c
  1400  0017FE  5028               	movf	___awdiv@divisor,w,c
  1401  001800  1029               	iorwf	___awdiv@divisor+1,w,c
  1402  001802  B4D8               	btfsc	status,2,c
  1403  001804  D021               	goto	l2882
  1404  001806  0E01               	movlw	1
  1405  001808  6E2A               	movwf	___awdiv@counter,c
  1406  00180A  D005               	goto	l2868
  1407  00180C                     l2866:
  1408  00180C  90D8               	bcf	status,0,c
  1409  00180E  3628               	rlcf	___awdiv@divisor,f,c
  1410  001810  3629               	rlcf	___awdiv@divisor+1,f,c
  1411  001812  2A2A               	incf	___awdiv@counter,f,c
  1412  001814  D000               	goto	l2868
  1413  001816                     l2868:
  1414  001816  BE29               	btfsc	___awdiv@divisor+1,7,c
  1415  001818  D002               	goto	l2870
  1416  00181A  D7F8               	goto	l2866
  1417  00181C  D000               	goto	l2870
  1418  00181E                     l2870:
  1419  00181E  90D8               	bcf	status,0,c
  1420  001820  362C               	rlcf	___awdiv@quotient,f,c
  1421  001822  362D               	rlcf	___awdiv@quotient+1,f,c
  1422  001824  5028               	movf	___awdiv@divisor,w,c
  1423  001826  5C26               	subwf	___awdiv@dividend,w,c
  1424  001828  5029               	movf	___awdiv@divisor+1,w,c
  1425  00182A  5827               	subwfb	___awdiv@dividend+1,w,c
  1426  00182C  A0D8               	btfss	status,0,c
  1427  00182E  D006               	goto	l2878
  1428  001830  5028               	movf	___awdiv@divisor,w,c
  1429  001832  5E26               	subwf	___awdiv@dividend,f,c
  1430  001834  5029               	movf	___awdiv@divisor+1,w,c
  1431  001836  5A27               	subwfb	___awdiv@dividend+1,f,c
  1432  001838  802C               	bsf	___awdiv@quotient,0,c
  1433  00183A  D000               	goto	l2878
  1434  00183C                     l2878:
  1435  00183C  90D8               	bcf	status,0,c
  1436  00183E  3229               	rrcf	___awdiv@divisor+1,f,c
  1437  001840  3228               	rrcf	___awdiv@divisor,f,c
  1438  001842  2E2A               	decfsz	___awdiv@counter,f,c
  1439  001844  D7EC               	goto	l2870
  1440  001846  D000               	goto	l2882
  1441  001848                     l2882:
  1442  001848  502B               	movf	___awdiv@sign,w,c
  1443  00184A  B4D8               	btfsc	status,2,c
  1444  00184C  D005               	goto	l2886
  1445  00184E  6C2C               	negf	___awdiv@quotient,c
  1446  001850  1E2D               	comf	___awdiv@quotient+1,f,c
  1447  001852  B0D8               	btfsc	status,0,c
  1448  001854  2A2D               	incf	___awdiv@quotient+1,f,c
  1449  001856  D000               	goto	l2886
  1450  001858                     l2886:
  1451  001858  C02C  F026         	movff	___awdiv@quotient,?___awdiv
  1452  00185C  C02D  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  1453  001860  0012               	return	
  1454  001862  0012               	return		;funcret
  1455  001864                     __end_of___awdiv:
  1456                           	opt stack 0
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           prodl	equ	0xFF3
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1l	equ	0xFE1
  1466                           status	equ	0xFD8
  1467                           
  1468 ;; *************** function _RtccWriteTime *****************
  1469 ;; Defined at:
  1470 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  pTm             2    0[COMRAM] PTR const struct .
  1473 ;;		 -> RtccTime(4), 
  1474 ;;  di              1    2[COMRAM] enum E7121
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  tempHourWDay    2    9[COMRAM] struct .
  1477 ;;  tempMinSec      2    7[COMRAM] struct .
  1478 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1479 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1480 ;;  wasOn           1    4[COMRAM] enum E7121
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      enum E7337
  1483 ;; Registers used:
  1484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1490 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1491 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1494 ;;Total ram usage:       11 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		_RtccWrOn
  1499 ;; This function is called by:
  1500 ;;		_Write_RTC
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text4
  1505  0015E4                     __ptext4:
  1506                           	opt stack 0
  1507  0015E4                     _RtccWriteTime:
  1508                           	opt stack 27
  1509                           
  1510                           ;incstack = 0
  1511  0015E4  0E00               	movlw	0
  1512  0015E6  6E2B               	movwf	RtccWriteTime@wasAlrm,c
  1513  0015E8  EE20 F002          	lfsr	2,2
  1514  0015EC  5026               	movf	RtccWriteTime@pTm,w,c
  1515  0015EE  26D9               	addwf	fsr2l,f,c
  1516  0015F0  5027               	movf	RtccWriteTime@pTm+1,w,c
  1517  0015F2  22DA               	addwfc	fsr2h,f,c
  1518  0015F4  0E5A               	movlw	90
  1519  0015F6  60DF               	cpfslt	indf2,c
  1520  0015F8  0012               	return	
  1521  0015FA  EE20 F001          	lfsr	2,1
  1522  0015FE  5026               	movf	RtccWriteTime@pTm,w,c
  1523  001600  26D9               	addwf	fsr2l,f,c
  1524  001602  5027               	movf	RtccWriteTime@pTm+1,w,c
  1525  001604  22DA               	addwfc	fsr2h,f,c
  1526  001606  0E5A               	movlw	90
  1527  001608  60DF               	cpfslt	indf2,c
  1528  00160A  0012               	return	
  1529  00160C  EE20 F003          	lfsr	2,3
  1530  001610  5026               	movf	RtccWriteTime@pTm,w,c
  1531  001612  26D9               	addwf	fsr2l,f,c
  1532  001614  5027               	movf	RtccWriteTime@pTm+1,w,c
  1533  001616  22DA               	addwfc	fsr2h,f,c
  1534  001618  0E24               	movlw	36
  1535  00161A  64DF               	cpfsgt	indf2,c
  1536  00161C  D002               	goto	l2522
  1537  00161E  0012               	return	
  1538                           
  1539                           ;	Return value of _RtccWriteTime is never used
  1540  001620  0012               	return	
  1541  001622                     l2522:
  1542  001622  EE20 F002          	lfsr	2,2
  1543  001626  5026               	movf	RtccWriteTime@pTm,w,c
  1544  001628  26D9               	addwf	fsr2l,f,c
  1545  00162A  5027               	movf	RtccWriteTime@pTm+1,w,c
  1546  00162C  22DA               	addwfc	fsr2h,f,c
  1547  00162E  50DF               	movf	indf2,w,c
  1548  001630  6E2E               	movwf	RtccWriteTime@tempMinSec+1,c
  1549  001632  EE20 F001          	lfsr	2,1
  1550  001636  5026               	movf	RtccWriteTime@pTm,w,c
  1551  001638  26D9               	addwf	fsr2l,f,c
  1552  00163A  5027               	movf	RtccWriteTime@pTm+1,w,c
  1553  00163C  22DA               	addwfc	fsr2h,f,c
  1554  00163E  50DF               	movf	indf2,w,c
  1555  001640  6E2D               	movwf	RtccWriteTime@tempMinSec,c
  1556  001642  5028               	movf	RtccWriteTime@di,w,c
  1557  001644  B4D8               	btfsc	status,2,c
  1558  001646  D002               	goto	l2528
  1559  001648  9CF2               	bcf	intcon,6,c	;volatile
  1560  00164A  D000               	goto	l2528
  1561  00164C                     l2528:
  1562  00164C  0E00               	movlw	0
  1563  00164E  BB3F               	btfsc	63,5,b	;volatile
  1564  001650  0E01               	movlw	1
  1565  001652  6E2C               	movwf	RtccWriteTime@wasWrEn,c
  1566  001654  502C               	movf	RtccWriteTime@wasWrEn,w,c
  1567  001656  A4D8               	btfss	status,2,c
  1568  001658  D003               	goto	l2532
  1569  00165A  EC53  F012         	call	_RtccWrOn	;wreg free
  1570  00165E  D000               	goto	l2532
  1571  001660                     l2532:
  1572  001660  0E00               	movlw	0
  1573  001662  BF3F               	btfsc	63,7,b	;volatile
  1574  001664  0E01               	movlw	1
  1575  001666  6E2A               	movwf	RtccWriteTime@wasOn,c
  1576  001668  502A               	movf	RtccWriteTime@wasOn,w,c
  1577  00166A  B4D8               	btfsc	status,2,c
  1578  00166C  D007               	goto	l2538
  1579  00166E  0E00               	movlw	0
  1580  001670  BE91               	btfsc	3985,7,c	;volatile
  1581  001672  0E01               	movlw	1
  1582  001674  6E2B               	movwf	RtccWriteTime@wasAlrm,c
  1583  001676  010F               	movlb	15	; () banked
  1584  001678  9F3F               	bcf	63,7,b	;volatile
  1585  00167A  D000               	goto	l2538
  1586  00167C                     l2538:
  1587  00167C  0EFC               	movlw	252
  1588  00167E  010F               	movlb	15	; () banked
  1589  001680  173F               	andwf	63,f,b	;volatile
  1590  001682  010F               	movlb	15	; () banked
  1591  001684  813F               	bsf	63,0,b	;volatile
  1592                           
  1593                           ; BSR set to: 15
  1594  001686  CF98 F02F          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1595                           
  1596                           ; BSR set to: 15
  1597  00168A  CF99 F030          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1598                           
  1599                           ; BSR set to: 15
  1600  00168E  EE20 F003          	lfsr	2,3
  1601  001692  5026               	movf	RtccWriteTime@pTm,w,c
  1602  001694  26D9               	addwf	fsr2l,f,c
  1603  001696  5027               	movf	RtccWriteTime@pTm+1,w,c
  1604  001698  22DA               	addwfc	fsr2h,f,c
  1605  00169A  50DF               	movf	indf2,w,c
  1606  00169C  6E2F               	movwf	RtccWriteTime@tempHourWDay,c
  1607                           
  1608                           ; BSR set to: 15
  1609  00169E  0EFC               	movlw	252
  1610  0016A0  010F               	movlb	15	; () banked
  1611  0016A2  173F               	andwf	63,f,b	;volatile
  1612                           
  1613                           ; BSR set to: 15
  1614  0016A4  010F               	movlb	15	; () banked
  1615  0016A6  813F               	bsf	63,0,b	;volatile
  1616                           
  1617                           ; BSR set to: 15
  1618  0016A8  C02F  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1619                           
  1620                           ; BSR set to: 15
  1621  0016AC  C030  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1622                           
  1623                           ; BSR set to: 15
  1624  0016B0  C02D  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1625                           
  1626                           ; BSR set to: 15
  1627  0016B4  C02E  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1628                           
  1629                           ; BSR set to: 15
  1630  0016B8  502A               	movf	RtccWriteTime@wasOn,w,c
  1631  0016BA  B4D8               	btfsc	status,2,c
  1632  0016BC  D00D               	goto	l2570
  1633                           
  1634                           ; BSR set to: 15
  1635  0016BE  010F               	movlb	15	; () banked
  1636  0016C0  8F3F               	bsf	63,7,b	;volatile
  1637                           
  1638                           ; BSR set to: 15
  1639  0016C2  502B               	movf	RtccWriteTime@wasAlrm,w,c
  1640  0016C4  B4D8               	btfsc	status,2,c
  1641  0016C6  D002               	goto	l2566
  1642                           
  1643                           ; BSR set to: 15
  1644  0016C8  8E91               	bsf	3985,7,c	;volatile
  1645  0016CA  D000               	goto	l2566
  1646  0016CC                     l2566:
  1647                           
  1648                           ; BSR set to: 15
  1649  0016CC  502C               	movf	RtccWriteTime@wasWrEn,w,c
  1650  0016CE  B4D8               	btfsc	status,2,c
  1651  0016D0  D009               	goto	l2574
  1652                           
  1653                           ; BSR set to: 15
  1654  0016D2  EC53  F012         	call	_RtccWrOn	;wreg free
  1655  0016D6  D006               	goto	l2574
  1656  0016D8                     l2570:
  1657  0016D8  502C               	movf	RtccWriteTime@wasWrEn,w,c
  1658  0016DA  A4D8               	btfss	status,2,c
  1659  0016DC  D003               	goto	l2574
  1660  0016DE  010F               	movlb	15	; () banked
  1661  0016E0  9B3F               	bcf	63,5,b	;volatile
  1662                           
  1663                           ; BSR set to: 15
  1664  0016E2  D000               	goto	l2574
  1665  0016E4                     l2574:
  1666  0016E4  5028               	movf	RtccWriteTime@di,w,c
  1667  0016E6  B4D8               	btfsc	status,2,c
  1668  0016E8  0012               	return	
  1669  0016EA  8CF2               	bsf	intcon,6,c	;volatile
  1670  0016EC  0012               	return	
  1671                           
  1672                           ;	Return value of _RtccWriteTime is never used
  1673  0016EE  0012               	return		;funcret
  1674  0016F0                     __end_of_RtccWriteTime:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           prodl	equ	0xFF3
  1681                           intcon	equ	0xFF2
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1l	equ	0xFE1
  1686                           indf2	equ	0xFDF
  1687                           fsr2h	equ	0xFDA
  1688                           fsr2l	equ	0xFD9
  1689                           status	equ	0xFD8
  1690                           
  1691 ;; *************** function _RtccWriteDate *****************
  1692 ;; Defined at:
  1693 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  pDt             2    0[COMRAM] PTR const struct .
  1696 ;;		 -> RtccDate(4), 
  1697 ;;  di              1    2[COMRAM] enum E7121
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  tempHourWDay    2   11[COMRAM] struct .
  1700 ;;  tempDayMonth    2    9[COMRAM] struct .
  1701 ;;  tempYear        2    6[COMRAM] struct .
  1702 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1703 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1704 ;;  wasOn           1    4[COMRAM] enum E7121
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      enum E7337
  1707 ;; Registers used:
  1708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1714 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;Total ram usage:       13 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    1
  1721 ;; This function calls:
  1722 ;;		_RtccWrOn
  1723 ;; This function is called by:
  1724 ;;		_Write_RTC
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text5
  1729  00149E                     __ptext5:
  1730                           	opt stack 0
  1731  00149E                     _RtccWriteDate:
  1732                           	opt stack 27
  1733                           
  1734                           ;incstack = 0
  1735  00149E  0E00               	movlw	0
  1736  0014A0  6E2B               	movwf	RtccWriteDate@wasAlrm,c
  1737  0014A2  EE20 F002          	lfsr	2,2
  1738  0014A6  5026               	movf	RtccWriteDate@pDt,w,c
  1739  0014A8  26D9               	addwf	fsr2l,f,c
  1740  0014AA  5027               	movf	RtccWriteDate@pDt+1,w,c
  1741  0014AC  22DA               	addwfc	fsr2h,f,c
  1742  0014AE  0E13               	movlw	19
  1743  0014B0  60DF               	cpfslt	indf2,c
  1744  0014B2  0012               	return	
  1745  0014B4  EE20 F002          	lfsr	2,2
  1746  0014B8  5026               	movf	RtccWriteDate@pDt,w,c
  1747  0014BA  26D9               	addwf	fsr2l,f,c
  1748  0014BC  5027               	movf	RtccWriteDate@pDt+1,w,c
  1749  0014BE  22DA               	addwfc	fsr2h,f,c
  1750  0014C0  50DF               	movf	indf2,w,c
  1751  0014C2  B4D8               	btfsc	status,2,c
  1752  0014C4  0012               	return	
  1753  0014C6  EE20 F001          	lfsr	2,1
  1754  0014CA  5026               	movf	RtccWriteDate@pDt,w,c
  1755  0014CC  26D9               	addwf	fsr2l,f,c
  1756  0014CE  5027               	movf	RtccWriteDate@pDt+1,w,c
  1757  0014D0  22DA               	addwfc	fsr2h,f,c
  1758  0014D2  0E32               	movlw	50
  1759  0014D4  60DF               	cpfslt	indf2,c
  1760  0014D6  0012               	return	
  1761  0014D8  EE20 F001          	lfsr	2,1
  1762  0014DC  5026               	movf	RtccWriteDate@pDt,w,c
  1763  0014DE  26D9               	addwf	fsr2l,f,c
  1764  0014E0  5027               	movf	RtccWriteDate@pDt+1,w,c
  1765  0014E2  22DA               	addwfc	fsr2h,f,c
  1766  0014E4  50DF               	movf	indf2,w,c
  1767  0014E6  B4D8               	btfsc	status,2,c
  1768  0014E8  0012               	return	
  1769  0014EA  EE20 F003          	lfsr	2,3
  1770  0014EE  5026               	movf	RtccWriteDate@pDt,w,c
  1771  0014F0  26D9               	addwf	fsr2l,f,c
  1772  0014F2  5027               	movf	RtccWriteDate@pDt+1,w,c
  1773  0014F4  22DA               	addwfc	fsr2h,f,c
  1774  0014F6  0E99               	movlw	153
  1775  0014F8  64DF               	cpfsgt	indf2,c
  1776  0014FA  D002               	goto	l2590
  1777  0014FC  0012               	return	
  1778                           
  1779                           ;	Return value of _RtccWriteDate is never used
  1780  0014FE  0012               	return	
  1781  001500                     l2590:
  1782  001500  EE20 F003          	lfsr	2,3
  1783  001504  5026               	movf	RtccWriteDate@pDt,w,c
  1784  001506  26D9               	addwf	fsr2l,f,c
  1785  001508  5027               	movf	RtccWriteDate@pDt+1,w,c
  1786  00150A  22DA               	addwfc	fsr2h,f,c
  1787  00150C  50DF               	movf	indf2,w,c
  1788  00150E  6E2C               	movwf	RtccWriteDate@tempYear,c
  1789  001510  EE20 F001          	lfsr	2,1
  1790  001514  5026               	movf	RtccWriteDate@pDt,w,c
  1791  001516  26D9               	addwf	fsr2l,f,c
  1792  001518  5027               	movf	RtccWriteDate@pDt+1,w,c
  1793  00151A  22DA               	addwfc	fsr2h,f,c
  1794  00151C  50DF               	movf	indf2,w,c
  1795  00151E  6E2F               	movwf	RtccWriteDate@tempDayMonth,c
  1796  001520  EE20 F002          	lfsr	2,2
  1797  001524  5026               	movf	RtccWriteDate@pDt,w,c
  1798  001526  26D9               	addwf	fsr2l,f,c
  1799  001528  5027               	movf	RtccWriteDate@pDt+1,w,c
  1800  00152A  22DA               	addwfc	fsr2h,f,c
  1801  00152C  50DF               	movf	indf2,w,c
  1802  00152E  6E30               	movwf	RtccWriteDate@tempDayMonth+1,c
  1803  001530  5028               	movf	RtccWriteDate@di,w,c
  1804  001532  B4D8               	btfsc	status,2,c
  1805  001534  D002               	goto	l2596
  1806  001536  9CF2               	bcf	intcon,6,c	;volatile
  1807  001538  D000               	goto	l2596
  1808  00153A                     l2596:
  1809  00153A  0E00               	movlw	0
  1810  00153C  BB3F               	btfsc	63,5,b	;volatile
  1811  00153E  0E01               	movlw	1
  1812  001540  6E2E               	movwf	RtccWriteDate@wasWrEn,c
  1813  001542  502E               	movf	RtccWriteDate@wasWrEn,w,c
  1814  001544  A4D8               	btfss	status,2,c
  1815  001546  D003               	goto	l2600
  1816  001548  EC53  F012         	call	_RtccWrOn	;wreg free
  1817  00154C  D000               	goto	l2600
  1818  00154E                     l2600:
  1819  00154E  0E00               	movlw	0
  1820  001550  BF3F               	btfsc	63,7,b	;volatile
  1821  001552  0E01               	movlw	1
  1822  001554  6E2A               	movwf	RtccWriteDate@wasOn,c
  1823  001556  502A               	movf	RtccWriteDate@wasOn,w,c
  1824  001558  B4D8               	btfsc	status,2,c
  1825  00155A  D007               	goto	l2606
  1826  00155C  0E00               	movlw	0
  1827  00155E  BE91               	btfsc	3985,7,c	;volatile
  1828  001560  0E01               	movlw	1
  1829  001562  6E2B               	movwf	RtccWriteDate@wasAlrm,c
  1830  001564  010F               	movlb	15	; () banked
  1831  001566  9F3F               	bcf	63,7,b	;volatile
  1832  001568  D000               	goto	l2606
  1833  00156A                     l2606:
  1834  00156A  0EFC               	movlw	252
  1835  00156C  010F               	movlb	15	; () banked
  1836  00156E  173F               	andwf	63,f,b	;volatile
  1837  001570  010F               	movlb	15	; () banked
  1838  001572  813F               	bsf	63,0,b	;volatile
  1839                           
  1840                           ; BSR set to: 15
  1841  001574  CF98 F031          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  1842                           
  1843                           ; BSR set to: 15
  1844  001578  CF99 F032          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  1845                           
  1846                           ; BSR set to: 15
  1847  00157C  C026  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  1848  001580  C027  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  1849  001584  50DF               	movf	indf2,w,c
  1850  001586  6E32               	movwf	RtccWriteDate@tempHourWDay+1,c
  1851                           
  1852                           ; BSR set to: 15
  1853  001588  0EFC               	movlw	252
  1854  00158A  010F               	movlb	15	; () banked
  1855  00158C  173F               	andwf	63,f,b	;volatile
  1856                           
  1857                           ; BSR set to: 15
  1858  00158E  0E03               	movlw	3
  1859  001590  010F               	movlb	15	; () banked
  1860  001592  133F               	iorwf	63,f,b	;volatile
  1861                           
  1862                           ; BSR set to: 15
  1863  001594  C02C  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  1864                           
  1865                           ; BSR set to: 15
  1866  001598  C02D  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  1867                           
  1868                           ; BSR set to: 15
  1869  00159C  C02F  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  1870                           
  1871                           ; BSR set to: 15
  1872  0015A0  C030  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  1873                           
  1874                           ; BSR set to: 15
  1875  0015A4  C031  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  1876                           
  1877                           ; BSR set to: 15
  1878  0015A8  C032  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  1879                           
  1880                           ; BSR set to: 15
  1881  0015AC  502A               	movf	RtccWriteDate@wasOn,w,c
  1882  0015AE  B4D8               	btfsc	status,2,c
  1883  0015B0  D00D               	goto	l2642
  1884                           
  1885                           ; BSR set to: 15
  1886  0015B2  010F               	movlb	15	; () banked
  1887  0015B4  8F3F               	bsf	63,7,b	;volatile
  1888                           
  1889                           ; BSR set to: 15
  1890  0015B6  502B               	movf	RtccWriteDate@wasAlrm,w,c
  1891  0015B8  B4D8               	btfsc	status,2,c
  1892  0015BA  D002               	goto	l2638
  1893                           
  1894                           ; BSR set to: 15
  1895  0015BC  8E91               	bsf	3985,7,c	;volatile
  1896  0015BE  D000               	goto	l2638
  1897  0015C0                     l2638:
  1898                           
  1899                           ; BSR set to: 15
  1900  0015C0  502E               	movf	RtccWriteDate@wasWrEn,w,c
  1901  0015C2  B4D8               	btfsc	status,2,c
  1902  0015C4  D009               	goto	l2646
  1903                           
  1904                           ; BSR set to: 15
  1905  0015C6  EC53  F012         	call	_RtccWrOn	;wreg free
  1906  0015CA  D006               	goto	l2646
  1907  0015CC                     l2642:
  1908  0015CC  502E               	movf	RtccWriteDate@wasWrEn,w,c
  1909  0015CE  A4D8               	btfss	status,2,c
  1910  0015D0  D003               	goto	l2646
  1911  0015D2  010F               	movlb	15	; () banked
  1912  0015D4  9B3F               	bcf	63,5,b	;volatile
  1913                           
  1914                           ; BSR set to: 15
  1915  0015D6  D000               	goto	l2646
  1916  0015D8                     l2646:
  1917  0015D8  5028               	movf	RtccWriteDate@di,w,c
  1918  0015DA  B4D8               	btfsc	status,2,c
  1919  0015DC  0012               	return	
  1920  0015DE  9CF2               	bcf	intcon,6,c	;volatile
  1921  0015E0  0012               	return	
  1922                           
  1923                           ;	Return value of _RtccWriteDate is never used
  1924  0015E2  0012               	return		;funcret
  1925  0015E4                     __end_of_RtccWriteDate:
  1926                           	opt stack 0
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           prodl	equ	0xFF3
  1932                           intcon	equ	0xFF2
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1l	equ	0xFE1
  1937                           indf2	equ	0xFDF
  1938                           fsr2h	equ	0xFDA
  1939                           fsr2l	equ	0xFD9
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function _RtccWrOn *****************
  1943 ;; Defined at:
  1944 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  data            2    0        unsigned int 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;		None               void
  1951 ;; Registers used:
  1952 ;;		wreg, status,2
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_Write_RTC
  1968 ;;		_RtccWriteDate
  1969 ;;		_RtccWriteTime
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text6
  1974  0024A6                     __ptext6:
  1975                           	opt stack 0
  1976  0024A6                     _RtccWrOn:
  1977                           	opt stack 27
  1978                           
  1979                           ;incstack = 0
  1980  0024A6  9CF2               	bcf	intcon,6,c	;volatile
  1981  0024A8  0E55               	movlw	85
  1982  0024AA  6EA7               	movwf	4007,c	;volatile
  1983  0024AC  0EAA               	movlw	170
  1984  0024AE  6EA7               	movwf	4007,c	;volatile
  1985  0024B0  010F               	movlb	15	; () banked
  1986  0024B2  8B3F               	bsf	63,5,b	;volatile
  1987                           
  1988                           ; BSR set to: 15
  1989  0024B4  8CF2               	bsf	intcon,6,c	;volatile
  1990                           
  1991                           ; BSR set to: 15
  1992  0024B6  0012               	return		;funcret
  1993  0024B8                     __end_of_RtccWrOn:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           prodl	equ	0xFF3
  2000                           intcon	equ	0xFF2
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           postdec1	equ	0xFE5
  2004                           fsr1l	equ	0xFE1
  2005                           indf2	equ	0xFDF
  2006                           fsr2h	equ	0xFDA
  2007                           fsr2l	equ	0xFD9
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _keyboard_control *****************
  2011 ;; Defined at:
  2012 ;;		line 373 in file "main.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;		None               void
  2019 ;; Registers used:
  2020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;Total ram usage:        1 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:   10
  2033 ;; This function calls:
  2034 ;;		_button_A
  2035 ;;		_button_B
  2036 ;;		_button_C
  2037 ;;		_button_D
  2038 ;;		_button_asterisk
  2039 ;;		_button_hash
  2040 ;;		_button_number
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text7
  2047  0011FC                     __ptext7:
  2048                           	opt stack 0
  2049  0011FC                     _keyboard_control:
  2050                           	opt stack 20
  2051                           
  2052                           ;main.c: 375: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2053                           
  2054                           ; BSR set to: 15
  2055                           ;incstack = 0
  2056  0011FC  8089               	bsf	3977,0,c	;volatile
  2057  0011FE  9289               	bcf	3977,1,c	;volatile
  2058  001200  9489               	bcf	3977,2,c	;volatile
  2059  001202  9689               	bcf	3977,3,c	;volatile
  2060                           
  2061                           ;main.c: 376: {
  2062                           ;main.c: 377: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2063  001204  AA80               	btfss	3968,5,c	;volatile
  2064  001206  D007               	goto	l275
  2065  001208  0E01               	movlw	1
  2066  00120A  6E1D               	movwf	_key,c
  2067  00120C  ECEF  F00D         	call	_button_number	;wreg free
  2068  001210  D000               	goto	l276
  2069  001212                     l276:
  2070  001212  BA80               	btfsc	3968,5,c	;volatile
  2071  001214  D7FE               	goto	l276
  2072  001216                     l275:
  2073                           
  2074                           ;main.c: 378: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2075  001216  AE80               	btfss	3968,7,c	;volatile
  2076  001218  D007               	goto	l279
  2077  00121A  0E02               	movlw	2
  2078  00121C  6E1D               	movwf	_key,c
  2079  00121E  ECEF  F00D         	call	_button_number	;wreg free
  2080  001222  D000               	goto	l280
  2081  001224                     l280:
  2082  001224  BE80               	btfsc	3968,7,c	;volatile
  2083  001226  D7FE               	goto	l280
  2084  001228                     l279:
  2085                           
  2086                           ;main.c: 379: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2087  001228  AC80               	btfss	3968,6,c	;volatile
  2088  00122A  D007               	goto	l283
  2089  00122C  0E03               	movlw	3
  2090  00122E  6E1D               	movwf	_key,c
  2091  001230  ECEF  F00D         	call	_button_number	;wreg free
  2092  001234  D000               	goto	l284
  2093  001236                     l284:
  2094  001236  BC80               	btfsc	3968,6,c	;volatile
  2095  001238  D7FE               	goto	l284
  2096  00123A                     l283:
  2097                           
  2098                           ;main.c: 380: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2099  00123A  A482               	btfss	3970,2,c	;volatile
  2100  00123C  D007               	goto	l287
  2101  00123E  0E0B               	movlw	11
  2102  001240  6E1D               	movwf	_key,c
  2103  001242  EC3B  F011         	call	_button_A	;wreg free
  2104  001246  D000               	goto	l288
  2105  001248                     l288:
  2106  001248  B482               	btfsc	3970,2,c	;volatile
  2107  00124A  D7FE               	goto	l288
  2108  00124C                     l287:
  2109                           
  2110                           ;main.c: 381: }
  2111                           ;main.c: 383: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2112  00124C  9089               	bcf	3977,0,c	;volatile
  2113  00124E  8289               	bsf	3977,1,c	;volatile
  2114  001250  9489               	bcf	3977,2,c	;volatile
  2115  001252  9689               	bcf	3977,3,c	;volatile
  2116                           
  2117                           ;main.c: 384: {
  2118                           ;main.c: 385: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2119  001254  AA80               	btfss	3968,5,c	;volatile
  2120  001256  D007               	goto	l291
  2121  001258  0E04               	movlw	4
  2122  00125A  6E1D               	movwf	_key,c
  2123  00125C  ECEF  F00D         	call	_button_number	;wreg free
  2124  001260  D000               	goto	l292
  2125  001262                     l292:
  2126  001262  BA80               	btfsc	3968,5,c	;volatile
  2127  001264  D7FE               	goto	l292
  2128  001266                     l291:
  2129                           
  2130                           ;main.c: 386: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2131  001266  AE80               	btfss	3968,7,c	;volatile
  2132  001268  D007               	goto	l295
  2133  00126A  0E05               	movlw	5
  2134  00126C  6E1D               	movwf	_key,c
  2135  00126E  ECEF  F00D         	call	_button_number	;wreg free
  2136  001272  D000               	goto	l296
  2137  001274                     l296:
  2138  001274  BE80               	btfsc	3968,7,c	;volatile
  2139  001276  D7FE               	goto	l296
  2140  001278                     l295:
  2141                           
  2142                           ;main.c: 387: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2143  001278  AC80               	btfss	3968,6,c	;volatile
  2144  00127A  D007               	goto	l299
  2145  00127C  0E06               	movlw	6
  2146  00127E  6E1D               	movwf	_key,c
  2147  001280  ECEF  F00D         	call	_button_number	;wreg free
  2148  001284  D000               	goto	l300
  2149  001286                     l300:
  2150  001286  BC80               	btfsc	3968,6,c	;volatile
  2151  001288  D7FE               	goto	l300
  2152  00128A                     l299:
  2153                           
  2154                           ;main.c: 388: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2155  00128A  A482               	btfss	3970,2,c	;volatile
  2156  00128C  D007               	goto	l303
  2157  00128E  0E0C               	movlw	12
  2158  001290  6E1D               	movwf	_key,c
  2159  001292  EC1C  F00F         	call	_button_B	;wreg free
  2160  001296  D000               	goto	l304
  2161  001298                     l304:
  2162  001298  B482               	btfsc	3970,2,c	;volatile
  2163  00129A  D7FE               	goto	l304
  2164  00129C                     l303:
  2165                           
  2166                           ;main.c: 389: }
  2167                           ;main.c: 391: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2168  00129C  9089               	bcf	3977,0,c	;volatile
  2169  00129E  9289               	bcf	3977,1,c	;volatile
  2170  0012A0  8489               	bsf	3977,2,c	;volatile
  2171  0012A2  9689               	bcf	3977,3,c	;volatile
  2172                           
  2173                           ;main.c: 392: {
  2174                           ;main.c: 393: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2175  0012A4  AA80               	btfss	3968,5,c	;volatile
  2176  0012A6  D007               	goto	l307
  2177  0012A8  0E07               	movlw	7
  2178  0012AA  6E1D               	movwf	_key,c
  2179  0012AC  ECEF  F00D         	call	_button_number	;wreg free
  2180  0012B0  D000               	goto	l308
  2181  0012B2                     l308:
  2182  0012B2  BA80               	btfsc	3968,5,c	;volatile
  2183  0012B4  D7FE               	goto	l308
  2184  0012B6                     l307:
  2185                           
  2186                           ;main.c: 394: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2187  0012B6  AE80               	btfss	3968,7,c	;volatile
  2188  0012B8  D007               	goto	l311
  2189  0012BA  0E08               	movlw	8
  2190  0012BC  6E1D               	movwf	_key,c
  2191  0012BE  ECEF  F00D         	call	_button_number	;wreg free
  2192  0012C2  D000               	goto	l312
  2193  0012C4                     l312:
  2194  0012C4  BE80               	btfsc	3968,7,c	;volatile
  2195  0012C6  D7FE               	goto	l312
  2196  0012C8                     l311:
  2197                           
  2198                           ;main.c: 395: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2199  0012C8  AC80               	btfss	3968,6,c	;volatile
  2200  0012CA  D007               	goto	l315
  2201  0012CC  0E09               	movlw	9
  2202  0012CE  6E1D               	movwf	_key,c
  2203  0012D0  ECEF  F00D         	call	_button_number	;wreg free
  2204  0012D4  D000               	goto	l316
  2205  0012D6                     l316:
  2206  0012D6  BC80               	btfsc	3968,6,c	;volatile
  2207  0012D8  D7FE               	goto	l316
  2208  0012DA                     l315:
  2209                           
  2210                           ;main.c: 396: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2211  0012DA  A482               	btfss	3970,2,c	;volatile
  2212  0012DC  D007               	goto	l319
  2213  0012DE  0E0D               	movlw	13
  2214  0012E0  6E1D               	movwf	_key,c
  2215  0012E2  EC2F  F012         	call	_button_C	;wreg free
  2216  0012E6  D000               	goto	l320
  2217  0012E8                     l320:
  2218  0012E8  B482               	btfsc	3970,2,c	;volatile
  2219  0012EA  D7FE               	goto	l320
  2220  0012EC                     l319:
  2221                           
  2222                           ;main.c: 397: }
  2223                           ;main.c: 399: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2224  0012EC  9089               	bcf	3977,0,c	;volatile
  2225  0012EE  9289               	bcf	3977,1,c	;volatile
  2226  0012F0  9489               	bcf	3977,2,c	;volatile
  2227  0012F2  8689               	bsf	3977,3,c	;volatile
  2228                           
  2229                           ;main.c: 400: {
  2230                           ;main.c: 401: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2231  0012F4  AA80               	btfss	3968,5,c	;volatile
  2232  0012F6  D007               	goto	l323
  2233  0012F8  0E0E               	movlw	14
  2234  0012FA  6E1D               	movwf	_key,c
  2235  0012FC  EC84  F012         	call	_button_asterisk	;wreg free
  2236  001300  D000               	goto	l324
  2237  001302                     l324:
  2238  001302  BA80               	btfsc	3968,5,c	;volatile
  2239  001304  D7FE               	goto	l324
  2240  001306                     l323:
  2241                           
  2242                           ;main.c: 402: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2243  001306  AE80               	btfss	3968,7,c	;volatile
  2244  001308  D007               	goto	l327
  2245  00130A  0E00               	movlw	0
  2246  00130C  6E1D               	movwf	_key,c
  2247  00130E  ECEF  F00D         	call	_button_number	;wreg free
  2248  001312  D000               	goto	l328
  2249  001314                     l328:
  2250  001314  BE80               	btfsc	3968,7,c	;volatile
  2251  001316  D7FE               	goto	l328
  2252  001318                     l327:
  2253                           
  2254                           ;main.c: 403: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2255  001318  AC80               	btfss	3968,6,c	;volatile
  2256  00131A  D007               	goto	l331
  2257  00131C  0E0F               	movlw	15
  2258  00131E  6E1D               	movwf	_key,c
  2259  001320  EC49  F012         	call	_button_hash	;wreg free
  2260  001324  D000               	goto	l332
  2261  001326                     l332:
  2262  001326  BC80               	btfsc	3968,6,c	;volatile
  2263  001328  D7FE               	goto	l332
  2264  00132A                     l331:
  2265                           
  2266                           ;main.c: 404: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2267  00132A  A482               	btfss	3970,2,c	;volatile
  2268  00132C  D009               	goto	l3212
  2269  00132E  0E10               	movlw	16
  2270  001330  6E1D               	movwf	_key,c
  2271  001332  EC7A  F012         	call	_button_D	;wreg free
  2272  001336  D000               	goto	l336
  2273  001338                     l336:
  2274  001338  A482               	btfss	3970,2,c	;volatile
  2275  00133A  D002               	goto	l3212
  2276  00133C  D7FD               	goto	l336
  2277  00133E  D000               	goto	l3212
  2278  001340                     l3212:
  2279                           
  2280                           ;main.c: 405: }
  2281                           ;main.c: 407: _delay((unsigned long)((98)*(8000000/4000.0)));
  2282  001340  0EFF               	movlw	255
  2283  001342  6E49               	movwf	??_keyboard_control& (0+255),c
  2284  001344  0E8A               	movlw	138
  2285  001346                     u2377:
  2286  001346  2EE8               	decfsz	wreg,f,c
  2287  001348  D7FE               	goto	u2377
  2288  00134A  2E49               	decfsz	??_keyboard_control& (0+255),f,c
  2289  00134C  D7FC               	goto	u2377
  2290  00134E  D000               	nop2	
  2291  001350  0012               	return		;funcret
  2292  001352                     __end_of_keyboard_control:
  2293                           	opt stack 0
  2294                           tblptru	equ	0xFF8
  2295                           tblptrh	equ	0xFF7
  2296                           tblptrl	equ	0xFF6
  2297                           tablat	equ	0xFF5
  2298                           prodl	equ	0xFF3
  2299                           intcon	equ	0xFF2
  2300                           postinc0	equ	0xFEE
  2301                           wreg	equ	0xFE8
  2302                           postdec1	equ	0xFE5
  2303                           fsr1l	equ	0xFE1
  2304                           indf2	equ	0xFDF
  2305                           fsr2h	equ	0xFDA
  2306                           fsr2l	equ	0xFD9
  2307                           status	equ	0xFD8
  2308                           
  2309 ;; *************** function _button_number *****************
  2310 ;; Defined at:
  2311 ;;		line 354 in file "main.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;		None               void
  2318 ;; Registers used:
  2319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2329 ;;Total ram usage:        0 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    5
  2332 ;; This function calls:
  2333 ;;		_lcd_putrs
  2334 ;;		_reset_home_callback
  2335 ;;		_sprintf
  2336 ;;		_strcat
  2337 ;; This function is called by:
  2338 ;;		_keyboard_control
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text8
  2343  001BDE                     __ptext8:
  2344                           	opt stack 0
  2345  001BDE                     _button_number:
  2346                           	opt stack 24
  2347                           
  2348                           ;main.c: 356: reset_home_callback();
  2349                           
  2350                           ;incstack = 0
  2351  001BDE  EC7F  F012         	call	_reset_home_callback	;wreg free
  2352                           
  2353                           ;main.c: 358: if(activity == 1){
  2354  001BE2  0403               	decf	_activity,w,c
  2355  001BE4  1004               	iorwf	_activity+1,w,c
  2356  001BE6  A4D8               	btfss	status,2,c
  2357  001BE8  D01E               	goto	l3066
  2358                           
  2359                           ;main.c: 360: lcd_putrs("*");
  2360  001BEA  0E92               	movlw	low STR_35
  2361  001BEC  6E2E               	movwf	lcd_putrs@ptr,c
  2362  001BEE  0E0F               	movlw	high STR_35
  2363  001BF0  6E2F               	movwf	lcd_putrs@ptr+1,c
  2364  001BF2  EC47  F00F         	call	_lcd_putrs	;wreg free
  2365                           
  2366                           ;main.c: 361: sprintf(buffer1, "%01u", key);
  2367  001BF6  0E7C               	movlw	low _buffer1
  2368  001BF8  6E32               	movwf	sprintf@sp,c
  2369  001BFA  0E00               	movlw	high _buffer1
  2370  001BFC  6E33               	movwf	sprintf@sp+1,c
  2371  001BFE  0E7D               	movlw	low STR_36
  2372  001C00  6E34               	movwf	sprintf@f,c
  2373  001C02  0E0F               	movlw	high STR_36
  2374  001C04  6E35               	movwf	sprintf@f+1,c
  2375  001C06  C01D  F036         	movff	_key,?_sprintf+4
  2376  001C0A  6A37               	clrf	?_sprintf+5,c
  2377  001C0C  ECCC  F007         	call	_sprintf	;wreg free
  2378                           
  2379                           ;main.c: 362: strcat(pin_input, buffer1);
  2380  001C10  0E95               	movlw	low _pin_input
  2381  001C12  6E26               	movwf	strcat@to,c
  2382  001C14  0E00               	movlw	high _pin_input
  2383  001C16  6E27               	movwf	strcat@to+1,c
  2384  001C18  0E7C               	movlw	low _buffer1
  2385  001C1A  6E28               	movwf	strcat@from,c
  2386  001C1C  0E00               	movlw	high _buffer1
  2387  001C1E  6E29               	movwf	strcat@from+1,c
  2388  001C20  EC0B  F010         	call	_strcat	;wreg free
  2389                           
  2390                           ;main.c: 364: } else {
  2391  001C24  0012               	return	
  2392  001C26                     l3066:
  2393                           
  2394                           ;main.c: 366: sprintf(buffer1,"%01u",key);
  2395  001C26  0E7C               	movlw	low _buffer1
  2396  001C28  6E32               	movwf	sprintf@sp,c
  2397  001C2A  0E00               	movlw	high _buffer1
  2398  001C2C  6E33               	movwf	sprintf@sp+1,c
  2399  001C2E  0E7D               	movlw	low STR_36
  2400  001C30  6E34               	movwf	sprintf@f,c
  2401  001C32  0E0F               	movlw	high STR_36
  2402  001C34  6E35               	movwf	sprintf@f+1,c
  2403  001C36  C01D  F036         	movff	_key,?_sprintf+4
  2404  001C3A  6A37               	clrf	?_sprintf+5,c
  2405  001C3C  ECCC  F007         	call	_sprintf	;wreg free
  2406  001C40  0012               	return	
  2407  001C42  0012               	return		;funcret
  2408  001C44                     __end_of_button_number:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           prodl	equ	0xFF3
  2415                           intcon	equ	0xFF2
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1l	equ	0xFE1
  2420                           indf2	equ	0xFDF
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _strcat *****************
  2426 ;; Defined at:
  2427 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  to              2    0[COMRAM] PTR unsigned char 
  2430 ;;		 -> pin_input(5), 
  2431 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2432 ;;		 -> buffer1(20), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  cp              2    4[COMRAM] PTR unsigned char 
  2435 ;;		 -> pin_input(5), 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  2    0[COMRAM] PTR unsigned char 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2449 ;;Total ram usage:        6 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_button_number
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text9
  2459  002016                     __ptext9:
  2460                           	opt stack 0
  2461  002016                     _strcat:
  2462                           	opt stack 28
  2463                           
  2464                           ;incstack = 0
  2465  002016  C026  F02A         	movff	strcat@to,strcat@cp
  2466  00201A  C027  F02B         	movff	strcat@to+1,strcat@cp+1
  2467  00201E  D003               	goto	l2840
  2468  002020                     l2838:
  2469  002020  4A2A               	infsnz	strcat@cp,f,c
  2470  002022  2A2B               	incf	strcat@cp+1,f,c
  2471  002024  D000               	goto	l2840
  2472  002026                     l2840:
  2473  002026  C02A  FFD9         	movff	strcat@cp,fsr2l
  2474  00202A  C02B  FFDA         	movff	strcat@cp+1,fsr2h
  2475  00202E  50DF               	movf	indf2,w,c
  2476  002030  B4D8               	btfsc	status,2,c
  2477  002032  D007               	goto	l2844
  2478  002034  D7F5               	goto	l2838
  2479  002036  D005               	goto	l2844
  2480  002038                     l2842:
  2481  002038  4A2A               	infsnz	strcat@cp,f,c
  2482  00203A  2A2B               	incf	strcat@cp+1,f,c
  2483  00203C  4A28               	infsnz	strcat@from,f,c
  2484  00203E  2A29               	incf	strcat@from+1,f,c
  2485  002040  D000               	goto	l2844
  2486  002042                     l2844:
  2487  002042  C028  FFD9         	movff	strcat@from,fsr2l
  2488  002046  C029  FFDA         	movff	strcat@from+1,fsr2h
  2489  00204A  C02A  FFE1         	movff	strcat@cp,fsr1l
  2490  00204E  C02B  FFE2         	movff	strcat@cp+1,fsr1h
  2491  002052  CFDF FFE7          	movff	indf2,indf1
  2492  002056  50E7               	movf	indf1,w,c
  2493  002058  A4D8               	btfss	status,2,c
  2494  00205A  D7EE               	goto	l2842
  2495                           
  2496                           ;	Return value of _strcat is never used
  2497  00205C  0012               	return		;funcret
  2498  00205E                     __end_of_strcat:
  2499                           	opt stack 0
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodl	equ	0xFF3
  2505                           intcon	equ	0xFF2
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           indf1	equ	0xFE7
  2509                           postdec1	equ	0xFE5
  2510                           fsr1h	equ	0xFE2
  2511                           fsr1l	equ	0xFE1
  2512                           indf2	equ	0xFDF
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517 ;; *************** function _button_hash *****************
  2518 ;; Defined at:
  2519 ;;		line 344 in file "main.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;		None               void
  2526 ;; Registers used:
  2527 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    9
  2540 ;; This function calls:
  2541 ;;		_pin_input_validator
  2542 ;;		_reset_home_callback
  2543 ;; This function is called by:
  2544 ;;		_keyboard_control
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text10
  2549  002492                     __ptext10:
  2550                           	opt stack 0
  2551  002492                     _button_hash:
  2552                           	opt stack 20
  2553                           
  2554                           ;main.c: 346: reset_home_callback();
  2555                           
  2556                           ;incstack = 0
  2557  002492  EC7F  F012         	call	_reset_home_callback	;wreg free
  2558                           
  2559                           ;main.c: 348: if(activity == 1){
  2560  002496  0403               	decf	_activity,w,c
  2561  002498  1004               	iorwf	_activity+1,w,c
  2562  00249A  A4D8               	btfss	status,2,c
  2563  00249C  0012               	return	
  2564                           
  2565                           ;main.c: 349: pin_input_validator();
  2566  00249E  EC5B  F011         	call	_pin_input_validator	;wreg free
  2567  0024A2  0012               	return	
  2568  0024A4  0012               	return		;funcret
  2569  0024A6                     __end_of_button_hash:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           prodl	equ	0xFF3
  2576                           intcon	equ	0xFF2
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           indf1	equ	0xFE7
  2580                           postdec1	equ	0xFE5
  2581                           fsr1h	equ	0xFE2
  2582                           fsr1l	equ	0xFE1
  2583                           indf2	equ	0xFDF
  2584                           fsr2h	equ	0xFDA
  2585                           fsr2l	equ	0xFD9
  2586                           status	equ	0xFD8
  2587                           
  2588 ;; *************** function _pin_input_validator *****************
  2589 ;; Defined at:
  2590 ;;		line 253 in file "main.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  comparision     2   16[COMRAM] int 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;		None               void
  2597 ;; Registers used:
  2598 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    8
  2611 ;; This function calls:
  2612 ;;		_activity_menu
  2613 ;;		_activity_pin
  2614 ;;		_strcmp
  2615 ;; This function is called by:
  2616 ;;		_button_hash
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text11
  2621  0022B6                     __ptext11:
  2622                           	opt stack 0
  2623  0022B6                     _pin_input_validator:
  2624                           	opt stack 20
  2625                           
  2626                           ;main.c: 255: int comparision = strcmp(pin, pin_input);
  2627                           
  2628                           ;incstack = 0
  2629  0022B6  0E90               	movlw	low _pin
  2630  0022B8  6E26               	movwf	strcmp@s1,c
  2631  0022BA  0E00               	movlw	high _pin
  2632  0022BC  6E27               	movwf	strcmp@s1+1,c
  2633  0022BE  0E95               	movlw	low _pin_input
  2634  0022C0  6E28               	movwf	strcmp@s2,c
  2635  0022C2  0E00               	movlw	high _pin_input
  2636  0022C4  6E29               	movwf	strcmp@s2+1,c
  2637  0022C6  EC71  F00F         	call	_strcmp	;wreg free
  2638  0022CA  C026  F036         	movff	?_strcmp,pin_input_validator@comparision
  2639  0022CE  C027  F037         	movff	?_strcmp+1,pin_input_validator@comparision+1
  2640                           
  2641                           ;main.c: 257: if( comparision == 0 ){
  2642  0022D2  5036               	movf	pin_input_validator@comparision,w,c
  2643  0022D4  1037               	iorwf	pin_input_validator@comparision+1,w,c
  2644  0022D6  A4D8               	btfss	status,2,c
  2645  0022D8  D003               	goto	l2834
  2646                           
  2647                           ;main.c: 258: activity_menu();
  2648  0022DA  ECC2  F00C         	call	_activity_menu	;wreg free
  2649                           
  2650                           ;main.c: 259: }
  2651  0022DE  0012               	return	
  2652  0022E0                     l2834:
  2653                           
  2654                           ;main.c: 260: else{
  2655                           ;main.c: 261: activity_pin();
  2656  0022E0  EC98  F00F         	call	_activity_pin	;wreg free
  2657  0022E4  0012               	return	
  2658  0022E6  0012               	return		;funcret
  2659  0022E8                     __end_of_pin_input_validator:
  2660                           	opt stack 0
  2661                           tblptru	equ	0xFF8
  2662                           tblptrh	equ	0xFF7
  2663                           tblptrl	equ	0xFF6
  2664                           tablat	equ	0xFF5
  2665                           prodl	equ	0xFF3
  2666                           intcon	equ	0xFF2
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           indf1	equ	0xFE7
  2670                           postdec1	equ	0xFE5
  2671                           fsr1h	equ	0xFE2
  2672                           fsr1l	equ	0xFE1
  2673                           indf2	equ	0xFDF
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _strcmp *****************
  2679 ;; Defined at:
  2680 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  2683 ;;		 -> pin(5), 
  2684 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  2685 ;;		 -> pin_input(5), 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  r               1    5[COMRAM] char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  2    0[COMRAM] int 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;Total ram usage:        6 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_pin_input_validator
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text12
  2711  001EE2                     __ptext12:
  2712                           	opt stack 0
  2713  001EE2                     _strcmp:
  2714                           	opt stack 27
  2715                           
  2716                           ;incstack = 0
  2717  001EE2  D005               	goto	l2450
  2718  001EE4                     l2448:
  2719  001EE4  4A26               	infsnz	strcmp@s1,f,c
  2720  001EE6  2A27               	incf	strcmp@s1+1,f,c
  2721  001EE8  4A28               	infsnz	strcmp@s2,f,c
  2722  001EEA  2A29               	incf	strcmp@s2+1,f,c
  2723  001EEC  D000               	goto	l2450
  2724  001EEE                     l2450:
  2725  001EEE  C026  FFD9         	movff	strcmp@s1,fsr2l
  2726  001EF2  C027  FFDA         	movff	strcmp@s1+1,fsr2h
  2727  001EF6  50DF               	movf	indf2,w,c
  2728  001EF8  6E2A               	movwf	??_strcmp& (0+255),c
  2729  001EFA  C028  FFD9         	movff	strcmp@s2,fsr2l
  2730  001EFE  C029  FFDA         	movff	strcmp@s2+1,fsr2h
  2731  001F02  50DF               	movf	indf2,w,c
  2732  001F04  0800               	sublw	0
  2733  001F06  242A               	addwf	??_strcmp,w,c
  2734  001F08  6E2B               	movwf	strcmp@r,c
  2735  001F0A  502B               	movf	strcmp@r,w,c
  2736  001F0C  A4D8               	btfss	status,2,c
  2737  001F0E  D009               	goto	l2454
  2738  001F10  C026  FFD9         	movff	strcmp@s1,fsr2l
  2739  001F14  C027  FFDA         	movff	strcmp@s1+1,fsr2h
  2740  001F18  50DF               	movf	indf2,w,c
  2741  001F1A  B4D8               	btfsc	status,2,c
  2742  001F1C  D002               	goto	l2454
  2743  001F1E  D7E2               	goto	l2448
  2744  001F20  D000               	goto	l2454
  2745  001F22                     l2454:
  2746  001F22  502B               	movf	strcmp@r,w,c
  2747  001F24  6E26               	movwf	?_strcmp,c
  2748  001F26  6A27               	clrf	?_strcmp+1,c
  2749  001F28  BE26               	btfsc	?_strcmp,7,c
  2750  001F2A  0627               	decf	?_strcmp+1,f,c
  2751  001F2C  0012               	return	
  2752  001F2E  0012               	return		;funcret
  2753  001F30                     __end_of_strcmp:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           prodl	equ	0xFF3
  2760                           intcon	equ	0xFF2
  2761                           postinc0	equ	0xFEE
  2762                           wreg	equ	0xFE8
  2763                           indf1	equ	0xFE7
  2764                           postdec1	equ	0xFE5
  2765                           fsr1h	equ	0xFE2
  2766                           fsr1l	equ	0xFE1
  2767                           indf2	equ	0xFDF
  2768                           fsr2h	equ	0xFDA
  2769                           fsr2l	equ	0xFD9
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function _button_asterisk *****************
  2773 ;; Defined at:
  2774 ;;		line 336 in file "main.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    1
  2795 ;; This function calls:
  2796 ;;		_reset_home_callback
  2797 ;; This function is called by:
  2798 ;;		_keyboard_control
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text13
  2803  002508                     __ptext13:
  2804                           	opt stack 0
  2805  002508                     _button_asterisk:
  2806                           	opt stack 28
  2807                           
  2808                           ;main.c: 338: reset_home_callback();
  2809                           
  2810                           ;incstack = 0
  2811  002508  EC7F  F012         	call	_reset_home_callback	;wreg free
  2812  00250C  0012               	return		;funcret
  2813  00250E                     __end_of_button_asterisk:
  2814                           	opt stack 0
  2815                           tblptru	equ	0xFF8
  2816                           tblptrh	equ	0xFF7
  2817                           tblptrl	equ	0xFF6
  2818                           tablat	equ	0xFF5
  2819                           prodl	equ	0xFF3
  2820                           intcon	equ	0xFF2
  2821                           postinc0	equ	0xFEE
  2822                           wreg	equ	0xFE8
  2823                           indf1	equ	0xFE7
  2824                           postdec1	equ	0xFE5
  2825                           fsr1h	equ	0xFE2
  2826                           fsr1l	equ	0xFE1
  2827                           indf2	equ	0xFDF
  2828                           fsr2h	equ	0xFDA
  2829                           fsr2l	equ	0xFD9
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function _button_D *****************
  2833 ;; Defined at:
  2834 ;;		line 328 in file "main.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;		None               void
  2841 ;; Registers used:
  2842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2852 ;;Total ram usage:        0 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    7
  2855 ;; This function calls:
  2856 ;;		_activity_home
  2857 ;;		_reset_home_callback
  2858 ;; This function is called by:
  2859 ;;		_keyboard_control
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text14
  2864  0024F4                     __ptext14:
  2865                           	opt stack 0
  2866  0024F4                     _button_D:
  2867                           	opt stack 22
  2868                           
  2869                           ;main.c: 330: reset_home_callback();
  2870                           
  2871                           ;incstack = 0
  2872  0024F4  EC7F  F012         	call	_reset_home_callback	;wreg free
  2873                           
  2874                           ;main.c: 332: activity_home();
  2875  0024F8  ECBE  F011         	call	_activity_home	;wreg free
  2876  0024FC  0012               	return		;funcret
  2877  0024FE                     __end_of_button_D:
  2878                           	opt stack 0
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           prodl	equ	0xFF3
  2884                           intcon	equ	0xFF2
  2885                           postinc0	equ	0xFEE
  2886                           wreg	equ	0xFE8
  2887                           indf1	equ	0xFE7
  2888                           postdec1	equ	0xFE5
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           indf2	equ	0xFDF
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _button_C *****************
  2897 ;; Defined at:
  2898 ;;		line 318 in file "main.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    8
  2919 ;; This function calls:
  2920 ;;		_activity_menu
  2921 ;;		_reset_home_callback
  2922 ;; This function is called by:
  2923 ;;		_keyboard_control
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text15
  2928  00245E                     __ptext15:
  2929                           	opt stack 0
  2930  00245E                     _button_C:
  2931                           	opt stack 21
  2932                           
  2933                           ;main.c: 320: reset_home_callback();
  2934                           
  2935                           ;incstack = 0
  2936  00245E  EC7F  F012         	call	_reset_home_callback	;wreg free
  2937                           
  2938                           ;main.c: 322: if(activity != 0 && activity != 1){
  2939  002462  5003               	movf	_activity,w,c
  2940  002464  1004               	iorwf	_activity+1,w,c
  2941  002466  B4D8               	btfsc	status,2,c
  2942  002468  0012               	return	
  2943  00246A  0403               	decf	_activity,w,c
  2944  00246C  1004               	iorwf	_activity+1,w,c
  2945  00246E  B4D8               	btfsc	status,2,c
  2946  002470  0012               	return	
  2947                           
  2948                           ;main.c: 323: activity_menu();
  2949  002472  ECC2  F00C         	call	_activity_menu	;wreg free
  2950  002476  0012               	return	
  2951  002478  0012               	return		;funcret
  2952  00247A                     __end_of_button_C:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           postinc0	equ	0xFEE
  2961                           wreg	equ	0xFE8
  2962                           indf1	equ	0xFE7
  2963                           postdec1	equ	0xFE5
  2964                           fsr1h	equ	0xFE2
  2965                           fsr1l	equ	0xFE1
  2966                           indf2	equ	0xFDF
  2967                           fsr2h	equ	0xFDA
  2968                           fsr2l	equ	0xFD9
  2969                           status	equ	0xFD8
  2970                           
  2971 ;; *************** function _activity_menu *****************
  2972 ;; Defined at:
  2973 ;;		line 173 in file "main.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;		None               void
  2980 ;; Registers used:
  2981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    7
  2994 ;; This function calls:
  2995 ;;		_action_menu_selector_0
  2996 ;;		_lcd_init
  2997 ;;		_lcd_write
  2998 ;; This function is called by:
  2999 ;;		_pin_input_validator
  3000 ;;		_button_C
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text16
  3005  001984                     __ptext16:
  3006                           	opt stack 0
  3007  001984                     _activity_menu:
  3008                           	opt stack 20
  3009                           
  3010                           ;main.c: 175: activity = 2;
  3011                           
  3012                           ;incstack = 0
  3013  001984  0E00               	movlw	0
  3014  001986  6E04               	movwf	_activity+1,c
  3015  001988  0E02               	movlw	2
  3016  00198A  6E03               	movwf	_activity,c
  3017                           
  3018                           ;main.c: 176: lcd_init();
  3019  00198C  EC03  F00D         	call	_lcd_init	;wreg free
  3020                           
  3021                           ;main.c: 177: lcd_write(2,1,"Activar");
  3022  001990  0E00               	movlw	0
  3023  001992  6E31               	movwf	lcd_write@column+1,c
  3024  001994  0E02               	movlw	2
  3025  001996  6E30               	movwf	lcd_write@column,c
  3026  001998  0E00               	movlw	0
  3027  00199A  6E33               	movwf	lcd_write@row+1,c
  3028  00199C  0E01               	movlw	1
  3029  00199E  6E32               	movwf	lcd_write@row,c
  3030  0019A0  0E4D               	movlw	low STR_15
  3031  0019A2  6E34               	movwf	lcd_write@string,c
  3032  0019A4  0E0F               	movlw	high STR_15
  3033  0019A6  6E35               	movwf	lcd_write@string+1,c
  3034  0019A8  EC3D  F012         	call	_lcd_write	;wreg free
  3035                           
  3036                           ;main.c: 178: lcd_write(2,2,"Reloj");
  3037  0019AC  0E00               	movlw	0
  3038  0019AE  6E31               	movwf	lcd_write@column+1,c
  3039  0019B0  0E02               	movlw	2
  3040  0019B2  6E30               	movwf	lcd_write@column,c
  3041  0019B4  0E00               	movlw	0
  3042  0019B6  6E33               	movwf	lcd_write@row+1,c
  3043  0019B8  0E02               	movlw	2
  3044  0019BA  6E32               	movwf	lcd_write@row,c
  3045  0019BC  0E62               	movlw	low STR_16
  3046  0019BE  6E34               	movwf	lcd_write@string,c
  3047  0019C0  0E0F               	movlw	high STR_16
  3048  0019C2  6E35               	movwf	lcd_write@string+1,c
  3049  0019C4  EC3D  F012         	call	_lcd_write	;wreg free
  3050                           
  3051                           ;main.c: 179: lcd_write(10,1,"Pin");
  3052  0019C8  0E00               	movlw	0
  3053  0019CA  6E31               	movwf	lcd_write@column+1,c
  3054  0019CC  0E0A               	movlw	10
  3055  0019CE  6E30               	movwf	lcd_write@column,c
  3056  0019D0  0E00               	movlw	0
  3057  0019D2  6E33               	movwf	lcd_write@row+1,c
  3058  0019D4  0E01               	movlw	1
  3059  0019D6  6E32               	movwf	lcd_write@row,c
  3060  0019D8  0E86               	movlw	low STR_17
  3061  0019DA  6E34               	movwf	lcd_write@string,c
  3062  0019DC  0E0F               	movlw	high STR_17
  3063  0019DE  6E35               	movwf	lcd_write@string+1,c
  3064  0019E0  EC3D  F012         	call	_lcd_write	;wreg free
  3065                           
  3066                           ;main.c: 180: lcd_write(10,2,"Alarma");
  3067  0019E4  0E00               	movlw	0
  3068  0019E6  6E31               	movwf	lcd_write@column+1,c
  3069  0019E8  0E0A               	movlw	10
  3070  0019EA  6E30               	movwf	lcd_write@column,c
  3071  0019EC  0E00               	movlw	0
  3072  0019EE  6E33               	movwf	lcd_write@row+1,c
  3073  0019F0  0E02               	movlw	2
  3074  0019F2  6E32               	movwf	lcd_write@row,c
  3075  0019F4  0E55               	movlw	low STR_18
  3076  0019F6  6E34               	movwf	lcd_write@string,c
  3077  0019F8  0E0F               	movlw	high STR_18
  3078  0019FA  6E35               	movwf	lcd_write@string+1,c
  3079  0019FC  EC3D  F012         	call	_lcd_write	;wreg free
  3080                           
  3081                           ;main.c: 181: action_menu_selector_0();
  3082  001A00  EC1A  F011         	call	_action_menu_selector_0	;wreg free
  3083  001A04  0012               	return		;funcret
  3084  001A06                     __end_of_activity_menu:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodl	equ	0xFF3
  3091                           intcon	equ	0xFF2
  3092                           postinc0	equ	0xFEE
  3093                           wreg	equ	0xFE8
  3094                           indf1	equ	0xFE7
  3095                           postdec1	equ	0xFE5
  3096                           fsr1h	equ	0xFE2
  3097                           fsr1l	equ	0xFE1
  3098                           indf2	equ	0xFDF
  3099                           fsr2h	equ	0xFDA
  3100                           fsr2l	equ	0xFD9
  3101                           status	equ	0xFD8
  3102                           
  3103 ;; *************** function _button_B *****************
  3104 ;; Defined at:
  3105 ;;		line 289 in file "main.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;		None               void
  3112 ;; Registers used:
  3113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;Total ram usage:        2 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    8
  3126 ;; This function calls:
  3127 ;;		_activity_submenu_activation
  3128 ;;		_activity_submenu_alarm
  3129 ;;		_activity_submenu_clock
  3130 ;;		_activity_submenu_pin
  3131 ;;		_reset_home_callback
  3132 ;; This function is called by:
  3133 ;;		_keyboard_control
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text17
  3138  001E38                     __ptext17:
  3139                           	opt stack 0
  3140  001E38                     _button_B:
  3141                           	opt stack 21
  3142                           
  3143                           ;main.c: 291: reset_home_callback();
  3144                           
  3145                           ;incstack = 0
  3146  001E38  EC7F  F012         	call	_reset_home_callback	;wreg free
  3147                           
  3148                           ;main.c: 293: if(activity == 2){
  3149  001E3C  0E02               	movlw	2
  3150  001E3E  1803               	xorwf	_activity,w,c
  3151  001E40  1004               	iorwf	_activity+1,w,c
  3152  001E42  A4D8               	btfss	status,2,c
  3153  001E44  0012               	return	
  3154                           
  3155                           ;main.c: 295: switch(menu_selected){
  3156  001E46  D00C               	goto	l3030
  3157  001E48                     l3020:
  3158                           
  3159                           ;main.c: 298: activity_submenu_activation();
  3160  001E48  ECBB  F00E         	call	_activity_submenu_activation	;wreg free
  3161                           
  3162                           ;main.c: 299: break;
  3163  001E4C  0012               	return	
  3164  001E4E                     l3022:
  3165                           
  3166                           ;main.c: 302: activity_submenu_clock();
  3167  001E4E  EC55  F00E         	call	_activity_submenu_clock	;wreg free
  3168                           
  3169                           ;main.c: 303: break;
  3170  001E52  0012               	return	
  3171  001E54                     l3024:
  3172                           
  3173                           ;main.c: 306: activity_submenu_pin();
  3174  001E54  EC22  F00E         	call	_activity_submenu_pin	;wreg free
  3175                           
  3176                           ;main.c: 307: break;
  3177  001E58  0012               	return	
  3178  001E5A                     l3026:
  3179                           
  3180                           ;main.c: 310: activity_submenu_alarm();
  3181  001E5A  EC88  F00E         	call	_activity_submenu_alarm	;wreg free
  3182                           
  3183                           ;main.c: 312: }
  3184                           
  3185                           ;main.c: 311: break;
  3186  001E5E  0012               	return	
  3187  001E60                     l3030:
  3188  001E60  C013  F036         	movff	_menu_selected,??_button_B
  3189  001E64  C014  F037         	movff	_menu_selected+1,??_button_B+1
  3190                           
  3191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3192                           ; Switch size 1, requested type "space"
  3193                           ; Number of cases is 1, Range of values is 0 to 0
  3194                           ; switch strategies available:
  3195                           ; Name         Instructions Cycles
  3196                           ; simple_byte            4     3 (average)
  3197                           ;	Chosen strategy is simple_byte
  3198  001E68  5037               	movf	??_button_B+1,w,c
  3199  001E6A  0A00               	xorlw	0	; case 0
  3200  001E6C  A4D8               	btfss	status,2,c
  3201  001E6E  0012               	return	
  3202                           
  3203                           ; Switch size 1, requested type "space"
  3204                           ; Number of cases is 4, Range of values is 0 to 3
  3205                           ; switch strategies available:
  3206                           ; Name         Instructions Cycles
  3207                           ; simple_byte           13     7 (average)
  3208                           ;	Chosen strategy is simple_byte
  3209  001E70  5036               	movf	??_button_B,w,c
  3210  001E72  0A00               	xorlw	0	; case 0
  3211  001E74  B4D8               	btfsc	status,2,c
  3212  001E76  D7E8               	goto	l3020
  3213  001E78  0A01               	xorlw	1	; case 1
  3214  001E7A  B4D8               	btfsc	status,2,c
  3215  001E7C  D7E8               	goto	l3022
  3216  001E7E  0A03               	xorlw	3	; case 2
  3217  001E80  B4D8               	btfsc	status,2,c
  3218  001E82  D7E8               	goto	l3024
  3219  001E84  0A01               	xorlw	1	; case 3
  3220  001E86  B4D8               	btfsc	status,2,c
  3221  001E88  D7E8               	goto	l3026
  3222  001E8A  0012               	return	
  3223  001E8C  0012               	return		;funcret
  3224  001E8E                     __end_of_button_B:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodl	equ	0xFF3
  3231                           intcon	equ	0xFF2
  3232                           postinc0	equ	0xFEE
  3233                           wreg	equ	0xFE8
  3234                           indf1	equ	0xFE7
  3235                           postdec1	equ	0xFE5
  3236                           fsr1h	equ	0xFE2
  3237                           fsr1l	equ	0xFE1
  3238                           indf2	equ	0xFDF
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _activity_submenu_pin *****************
  3244 ;; Defined at:
  3245 ;;		line 233 in file "main.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;		None               void
  3252 ;; Registers used:
  3253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    7
  3266 ;; This function calls:
  3267 ;;		_action_submenu_selector_0
  3268 ;;		_lcd_init
  3269 ;;		_lcd_write
  3270 ;; This function is called by:
  3271 ;;		_button_B
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text18
  3276  001C44                     __ptext18:
  3277                           	opt stack 0
  3278  001C44                     _activity_submenu_pin:
  3279                           	opt stack 21
  3280                           
  3281                           ;main.c: 235: activity = 5;
  3282                           
  3283                           ;incstack = 0
  3284  001C44  0E00               	movlw	0
  3285  001C46  6E04               	movwf	_activity+1,c
  3286  001C48  0E05               	movlw	5
  3287  001C4A  6E03               	movwf	_activity,c
  3288                           
  3289                           ;main.c: 236: lcd_init();
  3290  001C4C  EC03  F00D         	call	_lcd_init	;wreg free
  3291                           
  3292                           ;main.c: 237: lcd_write(1,1,"Pin");
  3293  001C50  0E00               	movlw	0
  3294  001C52  6E31               	movwf	lcd_write@column+1,c
  3295  001C54  0E01               	movlw	1
  3296  001C56  6E30               	movwf	lcd_write@column,c
  3297  001C58  0E00               	movlw	0
  3298  001C5A  6E33               	movwf	lcd_write@row+1,c
  3299  001C5C  0E01               	movlw	1
  3300  001C5E  6E32               	movwf	lcd_write@row,c
  3301  001C60  0E86               	movlw	low STR_17
  3302  001C62  6E34               	movwf	lcd_write@string,c
  3303  001C64  0E0F               	movlw	high STR_17
  3304  001C66  6E35               	movwf	lcd_write@string+1,c
  3305  001C68  EC3D  F012         	call	_lcd_write	;wreg free
  3306                           
  3307                           ;main.c: 238: lcd_write(10,1,"Cambiar");
  3308  001C6C  0E00               	movlw	0
  3309  001C6E  6E31               	movwf	lcd_write@column+1,c
  3310  001C70  0E0A               	movlw	10
  3311  001C72  6E30               	movwf	lcd_write@column,c
  3312  001C74  0E00               	movlw	0
  3313  001C76  6E33               	movwf	lcd_write@row+1,c
  3314  001C78  0E01               	movlw	1
  3315  001C7A  6E32               	movwf	lcd_write@row,c
  3316  001C7C  0E45               	movlw	low STR_30
  3317  001C7E  6E34               	movwf	lcd_write@string,c
  3318  001C80  0E0F               	movlw	high STR_30
  3319  001C82  6E35               	movwf	lcd_write@string+1,c
  3320  001C84  EC3D  F012         	call	_lcd_write	;wreg free
  3321                           
  3322                           ;main.c: 239: lcd_write(10,2,"Reset");
  3323  001C88  0E00               	movlw	0
  3324  001C8A  6E31               	movwf	lcd_write@column+1,c
  3325  001C8C  0E0A               	movlw	10
  3326  001C8E  6E30               	movwf	lcd_write@column,c
  3327  001C90  0E00               	movlw	0
  3328  001C92  6E33               	movwf	lcd_write@row+1,c
  3329  001C94  0E02               	movlw	2
  3330  001C96  6E32               	movwf	lcd_write@row,c
  3331  001C98  0E68               	movlw	low STR_31
  3332  001C9A  6E34               	movwf	lcd_write@string,c
  3333  001C9C  0E0F               	movlw	high STR_31
  3334  001C9E  6E35               	movwf	lcd_write@string+1,c
  3335  001CA0  EC3D  F012         	call	_lcd_write	;wreg free
  3336                           
  3337                           ;main.c: 240: action_submenu_selector_0();
  3338  001CA4  EC96  F010         	call	_action_submenu_selector_0	;wreg free
  3339  001CA8  0012               	return		;funcret
  3340  001CAA                     __end_of_activity_submenu_pin:
  3341                           	opt stack 0
  3342                           tblptru	equ	0xFF8
  3343                           tblptrh	equ	0xFF7
  3344                           tblptrl	equ	0xFF6
  3345                           tablat	equ	0xFF5
  3346                           prodl	equ	0xFF3
  3347                           intcon	equ	0xFF2
  3348                           postinc0	equ	0xFEE
  3349                           wreg	equ	0xFE8
  3350                           indf1	equ	0xFE7
  3351                           postdec1	equ	0xFE5
  3352                           fsr1h	equ	0xFE2
  3353                           fsr1l	equ	0xFE1
  3354                           indf2	equ	0xFDF
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _activity_submenu_clock *****************
  3360 ;; Defined at:
  3361 ;;		line 222 in file "main.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;		None               void
  3368 ;; Registers used:
  3369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;Total ram usage:        0 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    7
  3382 ;; This function calls:
  3383 ;;		_action_submenu_selector_0
  3384 ;;		_lcd_init
  3385 ;;		_lcd_write
  3386 ;; This function is called by:
  3387 ;;		_button_B
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text19
  3392  001CAA                     __ptext19:
  3393                           	opt stack 0
  3394  001CAA                     _activity_submenu_clock:
  3395                           	opt stack 21
  3396                           
  3397                           ;main.c: 224: activity = 3;
  3398                           
  3399                           ;incstack = 0
  3400  001CAA  0E00               	movlw	0
  3401  001CAC  6E04               	movwf	_activity+1,c
  3402  001CAE  0E03               	movlw	3
  3403  001CB0  6E03               	movwf	_activity,c
  3404                           
  3405                           ;main.c: 225: lcd_init();
  3406  001CB2  EC03  F00D         	call	_lcd_init	;wreg free
  3407                           
  3408                           ;main.c: 226: lcd_write(1,1,"Reloj");
  3409  001CB6  0E00               	movlw	0
  3410  001CB8  6E31               	movwf	lcd_write@column+1,c
  3411  001CBA  0E01               	movlw	1
  3412  001CBC  6E30               	movwf	lcd_write@column,c
  3413  001CBE  0E00               	movlw	0
  3414  001CC0  6E33               	movwf	lcd_write@row+1,c
  3415  001CC2  0E01               	movlw	1
  3416  001CC4  6E32               	movwf	lcd_write@row,c
  3417  001CC6  0E62               	movlw	low STR_16
  3418  001CC8  6E34               	movwf	lcd_write@string,c
  3419  001CCA  0E0F               	movlw	high STR_16
  3420  001CCC  6E35               	movwf	lcd_write@string+1,c
  3421  001CCE  EC3D  F012         	call	_lcd_write	;wreg free
  3422                           
  3423                           ;main.c: 227: lcd_write(10,1,"Fecha");
  3424  001CD2  0E00               	movlw	0
  3425  001CD4  6E31               	movwf	lcd_write@column+1,c
  3426  001CD6  0E0A               	movlw	10
  3427  001CD8  6E30               	movwf	lcd_write@column,c
  3428  001CDA  0E00               	movlw	0
  3429  001CDC  6E33               	movwf	lcd_write@row+1,c
  3430  001CDE  0E01               	movlw	1
  3431  001CE0  6E32               	movwf	lcd_write@row,c
  3432  001CE2  0E5C               	movlw	low STR_27
  3433  001CE4  6E34               	movwf	lcd_write@string,c
  3434  001CE6  0E0F               	movlw	high STR_27
  3435  001CE8  6E35               	movwf	lcd_write@string+1,c
  3436  001CEA  EC3D  F012         	call	_lcd_write	;wreg free
  3437                           
  3438                           ;main.c: 228: lcd_write(10,2,"Hora");
  3439  001CEE  0E00               	movlw	0
  3440  001CF0  6E31               	movwf	lcd_write@column+1,c
  3441  001CF2  0E0A               	movlw	10
  3442  001CF4  6E30               	movwf	lcd_write@column,c
  3443  001CF6  0E00               	movlw	0
  3444  001CF8  6E33               	movwf	lcd_write@row+1,c
  3445  001CFA  0E02               	movlw	2
  3446  001CFC  6E32               	movwf	lcd_write@row,c
  3447  001CFE  0E73               	movlw	low STR_28
  3448  001D00  6E34               	movwf	lcd_write@string,c
  3449  001D02  0E0F               	movlw	high STR_28
  3450  001D04  6E35               	movwf	lcd_write@string+1,c
  3451  001D06  EC3D  F012         	call	_lcd_write	;wreg free
  3452                           
  3453                           ;main.c: 229: action_submenu_selector_0();
  3454  001D0A  EC96  F010         	call	_action_submenu_selector_0	;wreg free
  3455  001D0E  0012               	return		;funcret
  3456  001D10                     __end_of_activity_submenu_clock:
  3457                           	opt stack 0
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           prodl	equ	0xFF3
  3463                           intcon	equ	0xFF2
  3464                           postinc0	equ	0xFEE
  3465                           wreg	equ	0xFE8
  3466                           indf1	equ	0xFE7
  3467                           postdec1	equ	0xFE5
  3468                           fsr1h	equ	0xFE2
  3469                           fsr1l	equ	0xFE1
  3470                           indf2	equ	0xFDF
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _activity_submenu_alarm *****************
  3476 ;; Defined at:
  3477 ;;		line 243 in file "main.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    7
  3498 ;; This function calls:
  3499 ;;		_action_submenu_selector_0
  3500 ;;		_lcd_init
  3501 ;;		_lcd_write
  3502 ;; This function is called by:
  3503 ;;		_button_B
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text20
  3508  001D10                     __ptext20:
  3509                           	opt stack 0
  3510  001D10                     _activity_submenu_alarm:
  3511                           	opt stack 21
  3512                           
  3513                           ;main.c: 245: activity = 6;
  3514                           
  3515                           ;incstack = 0
  3516  001D10  0E00               	movlw	0
  3517  001D12  6E04               	movwf	_activity+1,c
  3518  001D14  0E06               	movlw	6
  3519  001D16  6E03               	movwf	_activity,c
  3520                           
  3521                           ;main.c: 246: lcd_init();
  3522  001D18  EC03  F00D         	call	_lcd_init	;wreg free
  3523                           
  3524                           ;main.c: 247: lcd_write(1,1,"Alarma");
  3525  001D1C  0E00               	movlw	0
  3526  001D1E  6E31               	movwf	lcd_write@column+1,c
  3527  001D20  0E01               	movlw	1
  3528  001D22  6E30               	movwf	lcd_write@column,c
  3529  001D24  0E00               	movlw	0
  3530  001D26  6E33               	movwf	lcd_write@row+1,c
  3531  001D28  0E01               	movlw	1
  3532  001D2A  6E32               	movwf	lcd_write@row,c
  3533  001D2C  0E55               	movlw	low STR_18
  3534  001D2E  6E34               	movwf	lcd_write@string,c
  3535  001D30  0E0F               	movlw	high STR_18
  3536  001D32  6E35               	movwf	lcd_write@string+1,c
  3537  001D34  EC3D  F012         	call	_lcd_write	;wreg free
  3538                           
  3539                           ;main.c: 248: lcd_write(10,1,"Volumen");
  3540  001D38  0E00               	movlw	0
  3541  001D3A  6E31               	movwf	lcd_write@column+1,c
  3542  001D3C  0E0A               	movlw	10
  3543  001D3E  6E30               	movwf	lcd_write@column,c
  3544  001D40  0E00               	movlw	0
  3545  001D42  6E33               	movwf	lcd_write@row+1,c
  3546  001D44  0E01               	movlw	1
  3547  001D46  6E32               	movwf	lcd_write@row,c
  3548  001D48  0E3D               	movlw	low STR_33
  3549  001D4A  6E34               	movwf	lcd_write@string,c
  3550  001D4C  0E0F               	movlw	high STR_33
  3551  001D4E  6E35               	movwf	lcd_write@string+1,c
  3552  001D50  EC3D  F012         	call	_lcd_write	;wreg free
  3553                           
  3554                           ;main.c: 249: lcd_write(10,2,"Tono");
  3555  001D54  0E00               	movlw	0
  3556  001D56  6E31               	movwf	lcd_write@column+1,c
  3557  001D58  0E0A               	movlw	10
  3558  001D5A  6E30               	movwf	lcd_write@column,c
  3559  001D5C  0E00               	movlw	0
  3560  001D5E  6E33               	movwf	lcd_write@row+1,c
  3561  001D60  0E02               	movlw	2
  3562  001D62  6E32               	movwf	lcd_write@row,c
  3563  001D64  0E78               	movlw	low STR_34
  3564  001D66  6E34               	movwf	lcd_write@string,c
  3565  001D68  0E0F               	movlw	high STR_34
  3566  001D6A  6E35               	movwf	lcd_write@string+1,c
  3567  001D6C  EC3D  F012         	call	_lcd_write	;wreg free
  3568                           
  3569                           ;main.c: 250: action_submenu_selector_0();
  3570  001D70  EC96  F010         	call	_action_submenu_selector_0	;wreg free
  3571  001D74  0012               	return		;funcret
  3572  001D76                     __end_of_activity_submenu_alarm:
  3573                           	opt stack 0
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           prodl	equ	0xFF3
  3579                           intcon	equ	0xFF2
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           indf1	equ	0xFE7
  3583                           postdec1	equ	0xFE5
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function _activity_submenu_activation *****************
  3592 ;; Defined at:
  3593 ;;		line 212 in file "main.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;		None               void
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    7
  3614 ;; This function calls:
  3615 ;;		_action_submenu_selector_0
  3616 ;;		_lcd_init
  3617 ;;		_lcd_write
  3618 ;; This function is called by:
  3619 ;;		_button_B
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text21
  3624  001D76                     __ptext21:
  3625                           	opt stack 0
  3626  001D76                     _activity_submenu_activation:
  3627                           	opt stack 21
  3628                           
  3629                           ;main.c: 214: activity = 4;
  3630                           
  3631                           ;incstack = 0
  3632  001D76  0E00               	movlw	0
  3633  001D78  6E04               	movwf	_activity+1,c
  3634  001D7A  0E04               	movlw	4
  3635  001D7C  6E03               	movwf	_activity,c
  3636                           
  3637                           ;main.c: 215: lcd_init();
  3638  001D7E  EC03  F00D         	call	_lcd_init	;wreg free
  3639                           
  3640                           ;main.c: 216: lcd_write(1,1,"Activar");
  3641  001D82  0E00               	movlw	0
  3642  001D84  6E31               	movwf	lcd_write@column+1,c
  3643  001D86  0E01               	movlw	1
  3644  001D88  6E30               	movwf	lcd_write@column,c
  3645  001D8A  0E00               	movlw	0
  3646  001D8C  6E33               	movwf	lcd_write@row+1,c
  3647  001D8E  0E01               	movlw	1
  3648  001D90  6E32               	movwf	lcd_write@row,c
  3649  001D92  0E4D               	movlw	low STR_15
  3650  001D94  6E34               	movwf	lcd_write@string,c
  3651  001D96  0E0F               	movlw	high STR_15
  3652  001D98  6E35               	movwf	lcd_write@string+1,c
  3653  001D9A  EC3D  F012         	call	_lcd_write	;wreg free
  3654                           
  3655                           ;main.c: 217: lcd_write(10,1,"SI");
  3656  001D9E  0E00               	movlw	0
  3657  001DA0  6E31               	movwf	lcd_write@column+1,c
  3658  001DA2  0E0A               	movlw	10
  3659  001DA4  6E30               	movwf	lcd_write@column,c
  3660  001DA6  0E00               	movlw	0
  3661  001DA8  6E33               	movwf	lcd_write@row+1,c
  3662  001DAA  0E01               	movlw	1
  3663  001DAC  6E32               	movwf	lcd_write@row,c
  3664  001DAE  0E8A               	movlw	low STR_24
  3665  001DB0  6E34               	movwf	lcd_write@string,c
  3666  001DB2  0E0F               	movlw	high STR_24
  3667  001DB4  6E35               	movwf	lcd_write@string+1,c
  3668  001DB6  EC3D  F012         	call	_lcd_write	;wreg free
  3669                           
  3670                           ;main.c: 218: lcd_write(10,2,"NO");
  3671  001DBA  0E00               	movlw	0
  3672  001DBC  6E31               	movwf	lcd_write@column+1,c
  3673  001DBE  0E0A               	movlw	10
  3674  001DC0  6E30               	movwf	lcd_write@column,c
  3675  001DC2  0E00               	movlw	0
  3676  001DC4  6E33               	movwf	lcd_write@row+1,c
  3677  001DC6  0E02               	movlw	2
  3678  001DC8  6E32               	movwf	lcd_write@row,c
  3679  001DCA  0E8D               	movlw	low STR_25
  3680  001DCC  6E34               	movwf	lcd_write@string,c
  3681  001DCE  0E0F               	movlw	high STR_25
  3682  001DD0  6E35               	movwf	lcd_write@string+1,c
  3683  001DD2  EC3D  F012         	call	_lcd_write	;wreg free
  3684                           
  3685                           ;main.c: 219: action_submenu_selector_0();
  3686  001DD6  EC96  F010         	call	_action_submenu_selector_0	;wreg free
  3687  001DDA  0012               	return		;funcret
  3688  001DDC                     __end_of_activity_submenu_activation:
  3689                           	opt stack 0
  3690                           tblptru	equ	0xFF8
  3691                           tblptrh	equ	0xFF7
  3692                           tblptrl	equ	0xFF6
  3693                           tablat	equ	0xFF5
  3694                           prodl	equ	0xFF3
  3695                           intcon	equ	0xFF2
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           indf1	equ	0xFE7
  3699                           postdec1	equ	0xFE5
  3700                           fsr1h	equ	0xFE2
  3701                           fsr1l	equ	0xFE1
  3702                           indf2	equ	0xFDF
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function _button_A *****************
  3708 ;; Defined at:
  3709 ;;		line 265 in file "main.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;		None               void
  3716 ;; Registers used:
  3717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3727 ;;Total ram usage:        2 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    8
  3730 ;; This function calls:
  3731 ;;		_action_menu_selector
  3732 ;;		_action_submenu_selector
  3733 ;;		_activity_pin
  3734 ;;		_reset_home_callback
  3735 ;; This function is called by:
  3736 ;;		_keyboard_control
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text22
  3741  002276                     __ptext22:
  3742                           	opt stack 0
  3743  002276                     _button_A:
  3744                           	opt stack 21
  3745                           
  3746                           ;main.c: 267: reset_home_callback();
  3747                           
  3748                           ;incstack = 0
  3749  002276  EC7F  F012         	call	_reset_home_callback	;wreg free
  3750                           
  3751                           ;main.c: 269: switch(activity){
  3752  00227A  D009               	goto	l3008
  3753  00227C                     l3000:
  3754                           
  3755                           ;main.c: 272: activity_pin();
  3756  00227C  EC98  F00F         	call	_activity_pin	;wreg free
  3757                           
  3758                           ;main.c: 276: break;
  3759                           
  3760                           ;main.c: 275: case 1:
  3761                           
  3762                           ;main.c: 273: break;
  3763  002280  0012               	return	
  3764  002282                     l3002:
  3765                           
  3766                           ;main.c: 279: action_menu_selector();
  3767  002282  EC2F  F010         	call	_action_menu_selector	;wreg free
  3768                           
  3769                           ;main.c: 280: break;
  3770  002286  0012               	return	
  3771  002288                     l3004:
  3772                           
  3773                           ;main.c: 283: action_submenu_selector();
  3774  002288  ECA6  F011         	call	_action_submenu_selector	;wreg free
  3775                           
  3776                           ;main.c: 285: }
  3777                           
  3778                           ;main.c: 284: break;
  3779  00228C  0012               	return	
  3780  00228E                     l3008:
  3781  00228E  C003  F038         	movff	_activity,??_button_A
  3782  002292  C004  F039         	movff	_activity+1,??_button_A+1
  3783                           
  3784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3785                           ; Switch size 1, requested type "space"
  3786                           ; Number of cases is 1, Range of values is 0 to 0
  3787                           ; switch strategies available:
  3788                           ; Name         Instructions Cycles
  3789                           ; simple_byte            4     3 (average)
  3790                           ;	Chosen strategy is simple_byte
  3791  002296  5039               	movf	??_button_A+1,w,c
  3792  002298  0A00               	xorlw	0	; case 0
  3793  00229A  A4D8               	btfss	status,2,c
  3794  00229C  D7F5               	goto	l3004
  3795                           
  3796                           ; Switch size 1, requested type "space"
  3797                           ; Number of cases is 3, Range of values is 0 to 2
  3798                           ; switch strategies available:
  3799                           ; Name         Instructions Cycles
  3800                           ; simple_byte           10     6 (average)
  3801                           ;	Chosen strategy is simple_byte
  3802  00229E  5038               	movf	??_button_A,w,c
  3803  0022A0  0A00               	xorlw	0	; case 0
  3804  0022A2  B4D8               	btfsc	status,2,c
  3805  0022A4  D7EB               	goto	l3000
  3806  0022A6  0A01               	xorlw	1	; case 1
  3807  0022A8  B4D8               	btfsc	status,2,c
  3808  0022AA  0012               	return	
  3809  0022AC  0A03               	xorlw	3	; case 2
  3810  0022AE  B4D8               	btfsc	status,2,c
  3811  0022B0  D7E8               	goto	l3002
  3812  0022B2  D7EA               	goto	l3004
  3813  0022B4  0012               	return		;funcret
  3814  0022B6                     __end_of_button_A:
  3815                           	opt stack 0
  3816                           tblptru	equ	0xFF8
  3817                           tblptrh	equ	0xFF7
  3818                           tblptrl	equ	0xFF6
  3819                           tablat	equ	0xFF5
  3820                           prodl	equ	0xFF3
  3821                           intcon	equ	0xFF2
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           indf1	equ	0xFE7
  3825                           postdec1	equ	0xFE5
  3826                           fsr1h	equ	0xFE2
  3827                           fsr1l	equ	0xFE1
  3828                           indf2	equ	0xFDF
  3829                           fsr2h	equ	0xFDA
  3830                           fsr2l	equ	0xFD9
  3831                           status	equ	0xFD8
  3832                           
  3833 ;; *************** function _activity_pin *****************
  3834 ;; Defined at:
  3835 ;;		line 163 in file "main.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;		None               void
  3842 ;; Registers used:
  3843 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3853 ;;Total ram usage:        0 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    6
  3856 ;; This function calls:
  3857 ;;		_lcd_comand
  3858 ;;		_lcd_gotoxy
  3859 ;;		_lcd_init
  3860 ;;		_lcd_write
  3861 ;;		_strcpy
  3862 ;; This function is called by:
  3863 ;;		_pin_input_validator
  3864 ;;		_button_A
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text23
  3869  001F30                     __ptext23:
  3870                           	opt stack 0
  3871  001F30                     _activity_pin:
  3872                           	opt stack 21
  3873                           
  3874                           ;main.c: 165: activity = 1;
  3875                           
  3876                           ;incstack = 0
  3877  001F30  0E00               	movlw	0
  3878  001F32  6E04               	movwf	_activity+1,c
  3879  001F34  0E01               	movlw	1
  3880  001F36  6E03               	movwf	_activity,c
  3881                           
  3882                           ;main.c: 166: strcpy(pin_input, "");
  3883  001F38  0E95               	movlw	low _pin_input
  3884  001F3A  6E26               	movwf	strcpy@to,c
  3885  001F3C  0E00               	movlw	high _pin_input
  3886  001F3E  6E27               	movwf	strcpy@to+1,c
  3887  001F40  0E91               	movlw	low (STR_5+1)
  3888  001F42  6E28               	movwf	strcpy@from,c
  3889  001F44  0E0F               	movlw	high (STR_5+1)
  3890  001F46  6E29               	movwf	strcpy@from+1,c
  3891  001F48  EC74  F011         	call	_strcpy	;wreg free
  3892                           
  3893                           ;main.c: 167: lcd_init();
  3894  001F4C  EC03  F00D         	call	_lcd_init	;wreg free
  3895                           
  3896                           ;main.c: 168: lcd_write(1,1,"Ingrese su PIN:");
  3897  001F50  0E00               	movlw	0
  3898  001F52  6E31               	movwf	lcd_write@column+1,c
  3899  001F54  0E01               	movlw	1
  3900  001F56  6E30               	movwf	lcd_write@column,c
  3901  001F58  0E00               	movlw	0
  3902  001F5A  6E33               	movwf	lcd_write@row+1,c
  3903  001F5C  0E01               	movlw	1
  3904  001F5E  6E32               	movwf	lcd_write@row,c
  3905  001F60  0E0F               	movlw	low STR_14
  3906  001F62  6E34               	movwf	lcd_write@string,c
  3907  001F64  0E0F               	movlw	high STR_14
  3908  001F66  6E35               	movwf	lcd_write@string+1,c
  3909  001F68  EC3D  F012         	call	_lcd_write	;wreg free
  3910                           
  3911                           ;main.c: 169: lcd_gotoxy(1,2);
  3912  001F6C  0E02               	movlw	2
  3913  001F6E  6E2A               	movwf	lcd_gotoxy@y,c
  3914  001F70  0E01               	movlw	1
  3915  001F72  ECFB  F011         	call	_lcd_gotoxy
  3916                           
  3917                           ;main.c: 170: lcd_comand(0b00001111);
  3918  001F76  0E0F               	movlw	15
  3919  001F78  EC6E  F012         	call	_lcd_comand
  3920  001F7C  0012               	return		;funcret
  3921  001F7E                     __end_of_activity_pin:
  3922                           	opt stack 0
  3923                           tblptru	equ	0xFF8
  3924                           tblptrh	equ	0xFF7
  3925                           tblptrl	equ	0xFF6
  3926                           tablat	equ	0xFF5
  3927                           prodl	equ	0xFF3
  3928                           intcon	equ	0xFF2
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           indf1	equ	0xFE7
  3932                           postdec1	equ	0xFE5
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           indf2	equ	0xFDF
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8
  3939                           
  3940 ;; *************** function _strcpy *****************
  3941 ;; Defined at:
  3942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  to              2    0[COMRAM] PTR unsigned char 
  3945 ;;		 -> pin_input(5), pin(5), 
  3946 ;;  from            2    2[COMRAM] PTR const unsigned char 
  3947 ;;		 -> STR_13(1), STR_1(5), 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  cp              2    4[COMRAM] PTR unsigned char 
  3950 ;;		 -> pin_input(5), pin(5), 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  2    0[COMRAM] PTR unsigned char 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3963 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3964 ;;Total ram usage:        6 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_setup
  3970 ;;		_activity_pin
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text24
  3975  0022E8                     __ptext24:
  3976                           	opt stack 0
  3977  0022E8                     _strcpy:
  3978                           	opt stack 29
  3979                           
  3980                           ;incstack = 0
  3981  0022E8  C026  F02A         	movff	strcpy@to,strcpy@cp
  3982  0022EC  C027  F02B         	movff	strcpy@to+1,strcpy@cp+1
  3983  0022F0  D005               	goto	l2374
  3984  0022F2                     l2372:
  3985  0022F2  4A2A               	infsnz	strcpy@cp,f,c
  3986  0022F4  2A2B               	incf	strcpy@cp+1,f,c
  3987  0022F6  4A28               	infsnz	strcpy@from,f,c
  3988  0022F8  2A29               	incf	strcpy@from+1,f,c
  3989  0022FA  D000               	goto	l2374
  3990  0022FC                     l2374:
  3991  0022FC  C028  FFF6         	movff	strcpy@from,tblptrl
  3992  002300  C029  FFF7         	movff	strcpy@from+1,tblptrh
  3993  002304                     	if	0	;tblptru may be non-zero
  3994  002304                     	endif
  3995  002304                     	if	0	;tblptru may be non-zero
  3996  002304                     	endif
  3997  002304  C02A  FFD9         	movff	strcpy@cp,fsr2l
  3998  002308  C02B  FFDA         	movff	strcpy@cp+1,fsr2h
  3999  00230C  0008               	tblrd		*
  4000  00230E  CFF5 FFDF          	movff	tablat,indf2
  4001  002312  50DF               	movf	indf2,w,c
  4002  002314  A4D8               	btfss	status,2,c
  4003  002316  D7ED               	goto	l2372
  4004                           
  4005                           ;	Return value of _strcpy is never used
  4006  002318  0012               	return		;funcret
  4007  00231A                     __end_of_strcpy:
  4008                           	opt stack 0
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           prodl	equ	0xFF3
  4014                           intcon	equ	0xFF2
  4015                           postinc0	equ	0xFEE
  4016                           wreg	equ	0xFE8
  4017                           indf1	equ	0xFE7
  4018                           postdec1	equ	0xFE5
  4019                           fsr1h	equ	0xFE2
  4020                           fsr1l	equ	0xFE1
  4021                           indf2	equ	0xFDF
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function _lcd_comand *****************
  4027 ;; Defined at:
  4028 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  d               1    wreg     unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  d               1    4[COMRAM] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;		None               void
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;Total ram usage:        1 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    2
  4049 ;; This function calls:
  4050 ;;		_lcd_send_byte
  4051 ;; This function is called by:
  4052 ;;		_setup
  4053 ;;		_activity_pin
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text25
  4058  0024DC                     __ptext25:
  4059                           	opt stack 0
  4060  0024DC                     _lcd_comand:
  4061                           	opt stack 27
  4062                           
  4063                           ;incstack = 0
  4064                           ;lcd_comand@d stored from wreg
  4065  0024DC  6E2A               	movwf	lcd_comand@d,c
  4066                           
  4067                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  4068  0024DE  C02A  F028         	movff	lcd_comand@d,lcd_send_byte@n
  4069  0024E2  0E00               	movlw	0
  4070  0024E4  EC8D  F011         	call	_lcd_send_byte
  4071  0024E8  0012               	return		;funcret
  4072  0024EA                     __end_of_lcd_comand:
  4073                           	opt stack 0
  4074                           tblptru	equ	0xFF8
  4075                           tblptrh	equ	0xFF7
  4076                           tblptrl	equ	0xFF6
  4077                           tablat	equ	0xFF5
  4078                           prodl	equ	0xFF3
  4079                           intcon	equ	0xFF2
  4080                           postinc0	equ	0xFEE
  4081                           wreg	equ	0xFE8
  4082                           indf1	equ	0xFE7
  4083                           postdec1	equ	0xFE5
  4084                           fsr1h	equ	0xFE2
  4085                           fsr1l	equ	0xFE1
  4086                           indf2	equ	0xFDF
  4087                           fsr2h	equ	0xFDA
  4088                           fsr2l	equ	0xFD9
  4089                           status	equ	0xFD8
  4090                           
  4091 ;; *************** function _action_submenu_selector *****************
  4092 ;; Defined at:
  4093 ;;		line 197 in file "main.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;		None               void
  4100 ;; Registers used:
  4101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4111 ;;Total ram usage:        2 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    7
  4114 ;; This function calls:
  4115 ;;		_action_submenu_selector_0
  4116 ;;		_action_submenu_selector_1
  4117 ;; This function is called by:
  4118 ;;		_button_A
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text26
  4123  00234C                     __ptext26:
  4124                           	opt stack 0
  4125  00234C                     _action_submenu_selector:
  4126                           	opt stack 21
  4127                           
  4128                           ;main.c: 199: switch(submenu_selected){
  4129                           
  4130                           ;incstack = 0
  4131  00234C  D006               	goto	l2774
  4132  00234E                     l2768:
  4133                           
  4134                           ;main.c: 202: action_submenu_selector_1();
  4135  00234E  EC75  F010         	call	_action_submenu_selector_1	;wreg free
  4136                           
  4137                           ;main.c: 203: break;
  4138  002352  0012               	return	
  4139  002354                     l2770:
  4140                           
  4141                           ;main.c: 206: action_submenu_selector_0();
  4142  002354  EC96  F010         	call	_action_submenu_selector_0	;wreg free
  4143                           
  4144                           ;main.c: 208: }
  4145                           
  4146                           ;main.c: 207: break;
  4147  002358  0012               	return	
  4148  00235A                     l2774:
  4149  00235A  C01B  F036         	movff	_submenu_selected,??_action_submenu_selector
  4150  00235E  C01C  F037         	movff	_submenu_selected+1,??_action_submenu_selector+1
  4151                           
  4152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4153                           ; Switch size 1, requested type "space"
  4154                           ; Number of cases is 1, Range of values is 0 to 0
  4155                           ; switch strategies available:
  4156                           ; Name         Instructions Cycles
  4157                           ; simple_byte            4     3 (average)
  4158                           ;	Chosen strategy is simple_byte
  4159  002362  5037               	movf	??_action_submenu_selector+1,w,c
  4160  002364  0A00               	xorlw	0	; case 0
  4161  002366  A4D8               	btfss	status,2,c
  4162  002368  0012               	return	
  4163                           
  4164                           ; Switch size 1, requested type "space"
  4165                           ; Number of cases is 2, Range of values is 0 to 1
  4166                           ; switch strategies available:
  4167                           ; Name         Instructions Cycles
  4168                           ; simple_byte            7     4 (average)
  4169                           ;	Chosen strategy is simple_byte
  4170  00236A  5036               	movf	??_action_submenu_selector,w,c
  4171  00236C  0A00               	xorlw	0	; case 0
  4172  00236E  B4D8               	btfsc	status,2,c
  4173  002370  D7EE               	goto	l2768
  4174  002372  0A01               	xorlw	1	; case 1
  4175  002374  A4D8               	btfss	status,2,c
  4176  002376  0012               	return	
  4177  002378  D7ED               	goto	l2770
  4178  00237A  0012               	return		;funcret
  4179  00237C                     __end_of_action_submenu_selector:
  4180                           	opt stack 0
  4181                           tblptru	equ	0xFF8
  4182                           tblptrh	equ	0xFF7
  4183                           tblptrl	equ	0xFF6
  4184                           tablat	equ	0xFF5
  4185                           prodl	equ	0xFF3
  4186                           intcon	equ	0xFF2
  4187                           postinc0	equ	0xFEE
  4188                           wreg	equ	0xFE8
  4189                           indf1	equ	0xFE7
  4190                           postdec1	equ	0xFE5
  4191                           fsr1h	equ	0xFE2
  4192                           fsr1l	equ	0xFE1
  4193                           indf2	equ	0xFDF
  4194                           fsr2h	equ	0xFDA
  4195                           fsr2l	equ	0xFD9
  4196                           status	equ	0xFD8
  4197                           
  4198 ;; *************** function _action_submenu_selector_1 *****************
  4199 ;; Defined at:
  4200 ;;		line 191 in file "main.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;		None
  4205 ;; Return value:  Size  Location     Type
  4206 ;;		None               void
  4207 ;; Registers used:
  4208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;Total ram usage:        0 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    6
  4221 ;; This function calls:
  4222 ;;		_lcd_write
  4223 ;; This function is called by:
  4224 ;;		_action_submenu_selector
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text27
  4229  0020EA                     __ptext27:
  4230                           	opt stack 0
  4231  0020EA                     _action_submenu_selector_1:
  4232                           	opt stack 21
  4233                           
  4234                           ;main.c: 192: lcd_write(9,2,">");
  4235                           
  4236                           ;incstack = 0
  4237  0020EA  0E00               	movlw	0
  4238  0020EC  6E31               	movwf	lcd_write@column+1,c
  4239  0020EE  0E09               	movlw	9
  4240  0020F0  6E30               	movwf	lcd_write@column,c
  4241  0020F2  0E00               	movlw	0
  4242  0020F4  6E33               	movwf	lcd_write@row+1,c
  4243  0020F6  0E02               	movlw	2
  4244  0020F8  6E32               	movwf	lcd_write@row,c
  4245  0020FA  0E94               	movlw	low STR_4
  4246  0020FC  6E34               	movwf	lcd_write@string,c
  4247  0020FE  0E0F               	movlw	high STR_4
  4248  002100  6E35               	movwf	lcd_write@string+1,c
  4249  002102  EC3D  F012         	call	_lcd_write	;wreg free
  4250                           
  4251                           ;main.c: 193: submenu_selected = 1;
  4252  002106  0E00               	movlw	0
  4253  002108  6E1C               	movwf	_submenu_selected+1,c
  4254  00210A  0E01               	movlw	1
  4255  00210C  6E1B               	movwf	_submenu_selected,c
  4256                           
  4257                           ;main.c: 194: lcd_write(9,1," ");
  4258  00210E  0E00               	movlw	0
  4259  002110  6E31               	movwf	lcd_write@column+1,c
  4260  002112  0E09               	movlw	9
  4261  002114  6E30               	movwf	lcd_write@column,c
  4262  002116  0E00               	movlw	0
  4263  002118  6E33               	movwf	lcd_write@row+1,c
  4264  00211A  0E01               	movlw	1
  4265  00211C  6E32               	movwf	lcd_write@row,c
  4266  00211E  0E90               	movlw	low STR_5
  4267  002120  6E34               	movwf	lcd_write@string,c
  4268  002122  0E0F               	movlw	high STR_5
  4269  002124  6E35               	movwf	lcd_write@string+1,c
  4270  002126  EC3D  F012         	call	_lcd_write	;wreg free
  4271  00212A  0012               	return		;funcret
  4272  00212C                     __end_of_action_submenu_selector_1:
  4273                           	opt stack 0
  4274                           tblptru	equ	0xFF8
  4275                           tblptrh	equ	0xFF7
  4276                           tblptrl	equ	0xFF6
  4277                           tablat	equ	0xFF5
  4278                           prodl	equ	0xFF3
  4279                           intcon	equ	0xFF2
  4280                           postinc0	equ	0xFEE
  4281                           wreg	equ	0xFE8
  4282                           indf1	equ	0xFE7
  4283                           postdec1	equ	0xFE5
  4284                           fsr1h	equ	0xFE2
  4285                           fsr1l	equ	0xFE1
  4286                           indf2	equ	0xFDF
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function _action_submenu_selector_0 *****************
  4292 ;; Defined at:
  4293 ;;		line 185 in file "main.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;		None
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;		None               void
  4300 ;; Registers used:
  4301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4311 ;;Total ram usage:        0 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    6
  4314 ;; This function calls:
  4315 ;;		_lcd_write
  4316 ;; This function is called by:
  4317 ;;		_action_submenu_selector
  4318 ;;		_activity_submenu_activation
  4319 ;;		_activity_submenu_clock
  4320 ;;		_activity_submenu_pin
  4321 ;;		_activity_submenu_alarm
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text28
  4326  00212C                     __ptext28:
  4327                           	opt stack 0
  4328  00212C                     _action_submenu_selector_0:
  4329                           	opt stack 21
  4330                           
  4331                           ;main.c: 186: lcd_write(9,1,">");
  4332                           
  4333                           ;incstack = 0
  4334  00212C  0E00               	movlw	0
  4335  00212E  6E31               	movwf	lcd_write@column+1,c
  4336  002130  0E09               	movlw	9
  4337  002132  6E30               	movwf	lcd_write@column,c
  4338  002134  0E00               	movlw	0
  4339  002136  6E33               	movwf	lcd_write@row+1,c
  4340  002138  0E01               	movlw	1
  4341  00213A  6E32               	movwf	lcd_write@row,c
  4342  00213C  0E94               	movlw	low STR_4
  4343  00213E  6E34               	movwf	lcd_write@string,c
  4344  002140  0E0F               	movlw	high STR_4
  4345  002142  6E35               	movwf	lcd_write@string+1,c
  4346  002144  EC3D  F012         	call	_lcd_write	;wreg free
  4347                           
  4348                           ;main.c: 187: submenu_selected = 0;
  4349  002148  0E00               	movlw	0
  4350  00214A  6E1C               	movwf	_submenu_selected+1,c
  4351  00214C  0E00               	movlw	0
  4352  00214E  6E1B               	movwf	_submenu_selected,c
  4353                           
  4354                           ;main.c: 188: lcd_write(9,2," ");
  4355  002150  0E00               	movlw	0
  4356  002152  6E31               	movwf	lcd_write@column+1,c
  4357  002154  0E09               	movlw	9
  4358  002156  6E30               	movwf	lcd_write@column,c
  4359  002158  0E00               	movlw	0
  4360  00215A  6E33               	movwf	lcd_write@row+1,c
  4361  00215C  0E02               	movlw	2
  4362  00215E  6E32               	movwf	lcd_write@row,c
  4363  002160  0E90               	movlw	low STR_5
  4364  002162  6E34               	movwf	lcd_write@string,c
  4365  002164  0E0F               	movlw	high STR_5
  4366  002166  6E35               	movwf	lcd_write@string+1,c
  4367  002168  EC3D  F012         	call	_lcd_write	;wreg free
  4368  00216C  0012               	return		;funcret
  4369  00216E                     __end_of_action_submenu_selector_0:
  4370                           	opt stack 0
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           prodl	equ	0xFF3
  4376                           intcon	equ	0xFF2
  4377                           postinc0	equ	0xFEE
  4378                           wreg	equ	0xFE8
  4379                           indf1	equ	0xFE7
  4380                           postdec1	equ	0xFE5
  4381                           fsr1h	equ	0xFE2
  4382                           fsr1l	equ	0xFE1
  4383                           indf2	equ	0xFDF
  4384                           fsr2h	equ	0xFDA
  4385                           fsr2l	equ	0xFD9
  4386                           status	equ	0xFD8
  4387                           
  4388 ;; *************** function _action_menu_selector *****************
  4389 ;; Defined at:
  4390 ;;		line 131 in file "main.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;		None               void
  4397 ;; Registers used:
  4398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4407 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;Total ram usage:        2 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    7
  4411 ;; This function calls:
  4412 ;;		_action_menu_selector_0
  4413 ;;		_action_menu_selector_1
  4414 ;;		_action_menu_selector_2
  4415 ;;		_action_menu_selector_3
  4416 ;; This function is called by:
  4417 ;;		_button_A
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text29
  4422  00205E                     __ptext29:
  4423                           	opt stack 0
  4424  00205E                     _action_menu_selector:
  4425                           	opt stack 21
  4426                           
  4427                           ;main.c: 133: switch(menu_selected){
  4428                           
  4429                           ;incstack = 0
  4430  00205E  D00C               	goto	l2754
  4431  002060                     l2744:
  4432                           
  4433                           ;main.c: 136: action_menu_selector_1();
  4434  002060  ECF9  F010         	call	_action_menu_selector_1	;wreg free
  4435                           
  4436                           ;main.c: 137: break;
  4437  002064  0012               	return	
  4438  002066                     l2746:
  4439                           
  4440                           ;main.c: 140: action_menu_selector_2();
  4441  002066  ECD8  F010         	call	_action_menu_selector_2	;wreg free
  4442                           
  4443                           ;main.c: 141: break;
  4444  00206A  0012               	return	
  4445  00206C                     l2748:
  4446                           
  4447                           ;main.c: 144: action_menu_selector_3();
  4448  00206C  ECB7  F010         	call	_action_menu_selector_3	;wreg free
  4449                           
  4450                           ;main.c: 145: break;
  4451  002070  0012               	return	
  4452  002072                     l2750:
  4453                           
  4454                           ;main.c: 148: action_menu_selector_0();
  4455  002072  EC1A  F011         	call	_action_menu_selector_0	;wreg free
  4456                           
  4457                           ;main.c: 151: }
  4458                           
  4459                           ;main.c: 149: break;
  4460  002076  0012               	return	
  4461  002078                     l2754:
  4462  002078  C013  F036         	movff	_menu_selected,??_action_menu_selector
  4463  00207C  C014  F037         	movff	_menu_selected+1,??_action_menu_selector+1
  4464                           
  4465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4466                           ; Switch size 1, requested type "space"
  4467                           ; Number of cases is 1, Range of values is 0 to 0
  4468                           ; switch strategies available:
  4469                           ; Name         Instructions Cycles
  4470                           ; simple_byte            4     3 (average)
  4471                           ;	Chosen strategy is simple_byte
  4472  002080  5037               	movf	??_action_menu_selector+1,w,c
  4473  002082  0A00               	xorlw	0	; case 0
  4474  002084  A4D8               	btfss	status,2,c
  4475  002086  0012               	return	
  4476                           
  4477                           ; Switch size 1, requested type "space"
  4478                           ; Number of cases is 4, Range of values is 0 to 3
  4479                           ; switch strategies available:
  4480                           ; Name         Instructions Cycles
  4481                           ; simple_byte           13     7 (average)
  4482                           ;	Chosen strategy is simple_byte
  4483  002088  5036               	movf	??_action_menu_selector,w,c
  4484  00208A  0A00               	xorlw	0	; case 0
  4485  00208C  B4D8               	btfsc	status,2,c
  4486  00208E  D7E8               	goto	l2744
  4487  002090  0A01               	xorlw	1	; case 1
  4488  002092  B4D8               	btfsc	status,2,c
  4489  002094  D7E8               	goto	l2746
  4490  002096  0A03               	xorlw	3	; case 2
  4491  002098  B4D8               	btfsc	status,2,c
  4492  00209A  D7E8               	goto	l2748
  4493  00209C  0A01               	xorlw	1	; case 3
  4494  00209E  A4D8               	btfss	status,2,c
  4495  0020A0  0012               	return	
  4496  0020A2  D7E7               	goto	l2750
  4497  0020A4  0012               	return		;funcret
  4498  0020A6                     __end_of_action_menu_selector:
  4499                           	opt stack 0
  4500                           tblptru	equ	0xFF8
  4501                           tblptrh	equ	0xFF7
  4502                           tblptrl	equ	0xFF6
  4503                           tablat	equ	0xFF5
  4504                           prodl	equ	0xFF3
  4505                           intcon	equ	0xFF2
  4506                           postinc0	equ	0xFEE
  4507                           wreg	equ	0xFE8
  4508                           indf1	equ	0xFE7
  4509                           postdec1	equ	0xFE5
  4510                           fsr1h	equ	0xFE2
  4511                           fsr1l	equ	0xFE1
  4512                           indf2	equ	0xFDF
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517 ;; *************** function _action_menu_selector_3 *****************
  4518 ;; Defined at:
  4519 ;;		line 125 in file "main.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;		None
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;		None               void
  4526 ;; Registers used:
  4527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4537 ;;Total ram usage:        0 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    6
  4540 ;; This function calls:
  4541 ;;		_lcd_write
  4542 ;; This function is called by:
  4543 ;;		_action_menu_selector
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text30
  4548  00216E                     __ptext30:
  4549                           	opt stack 0
  4550  00216E                     _action_menu_selector_3:
  4551                           	opt stack 21
  4552                           
  4553                           ;main.c: 126: lcd_write(9,2,">");
  4554                           
  4555                           ;incstack = 0
  4556  00216E  0E00               	movlw	0
  4557  002170  6E31               	movwf	lcd_write@column+1,c
  4558  002172  0E09               	movlw	9
  4559  002174  6E30               	movwf	lcd_write@column,c
  4560  002176  0E00               	movlw	0
  4561  002178  6E33               	movwf	lcd_write@row+1,c
  4562  00217A  0E02               	movlw	2
  4563  00217C  6E32               	movwf	lcd_write@row,c
  4564  00217E  0E94               	movlw	low STR_4
  4565  002180  6E34               	movwf	lcd_write@string,c
  4566  002182  0E0F               	movlw	high STR_4
  4567  002184  6E35               	movwf	lcd_write@string+1,c
  4568  002186  EC3D  F012         	call	_lcd_write	;wreg free
  4569                           
  4570                           ;main.c: 127: menu_selected = 3;
  4571  00218A  0E00               	movlw	0
  4572  00218C  6E14               	movwf	_menu_selected+1,c
  4573  00218E  0E03               	movlw	3
  4574  002190  6E13               	movwf	_menu_selected,c
  4575                           
  4576                           ;main.c: 128: lcd_write(9,1," ");
  4577  002192  0E00               	movlw	0
  4578  002194  6E31               	movwf	lcd_write@column+1,c
  4579  002196  0E09               	movlw	9
  4580  002198  6E30               	movwf	lcd_write@column,c
  4581  00219A  0E00               	movlw	0
  4582  00219C  6E33               	movwf	lcd_write@row+1,c
  4583  00219E  0E01               	movlw	1
  4584  0021A0  6E32               	movwf	lcd_write@row,c
  4585  0021A2  0E90               	movlw	low STR_5
  4586  0021A4  6E34               	movwf	lcd_write@string,c
  4587  0021A6  0E0F               	movlw	high STR_5
  4588  0021A8  6E35               	movwf	lcd_write@string+1,c
  4589  0021AA  EC3D  F012         	call	_lcd_write	;wreg free
  4590  0021AE  0012               	return		;funcret
  4591  0021B0                     __end_of_action_menu_selector_3:
  4592                           	opt stack 0
  4593                           tblptru	equ	0xFF8
  4594                           tblptrh	equ	0xFF7
  4595                           tblptrl	equ	0xFF6
  4596                           tablat	equ	0xFF5
  4597                           prodl	equ	0xFF3
  4598                           intcon	equ	0xFF2
  4599                           postinc0	equ	0xFEE
  4600                           wreg	equ	0xFE8
  4601                           indf1	equ	0xFE7
  4602                           postdec1	equ	0xFE5
  4603                           fsr1h	equ	0xFE2
  4604                           fsr1l	equ	0xFE1
  4605                           indf2	equ	0xFDF
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _action_menu_selector_2 *****************
  4611 ;; Defined at:
  4612 ;;		line 119 in file "main.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    6
  4633 ;; This function calls:
  4634 ;;		_lcd_write
  4635 ;; This function is called by:
  4636 ;;		_action_menu_selector
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text31
  4641  0021B0                     __ptext31:
  4642                           	opt stack 0
  4643  0021B0                     _action_menu_selector_2:
  4644                           	opt stack 21
  4645                           
  4646                           ;main.c: 120: lcd_write(9,1,">");
  4647                           
  4648                           ;incstack = 0
  4649  0021B0  0E00               	movlw	0
  4650  0021B2  6E31               	movwf	lcd_write@column+1,c
  4651  0021B4  0E09               	movlw	9
  4652  0021B6  6E30               	movwf	lcd_write@column,c
  4653  0021B8  0E00               	movlw	0
  4654  0021BA  6E33               	movwf	lcd_write@row+1,c
  4655  0021BC  0E01               	movlw	1
  4656  0021BE  6E32               	movwf	lcd_write@row,c
  4657  0021C0  0E94               	movlw	low STR_4
  4658  0021C2  6E34               	movwf	lcd_write@string,c
  4659  0021C4  0E0F               	movlw	high STR_4
  4660  0021C6  6E35               	movwf	lcd_write@string+1,c
  4661  0021C8  EC3D  F012         	call	_lcd_write	;wreg free
  4662                           
  4663                           ;main.c: 121: menu_selected = 2;
  4664  0021CC  0E00               	movlw	0
  4665  0021CE  6E14               	movwf	_menu_selected+1,c
  4666  0021D0  0E02               	movlw	2
  4667  0021D2  6E13               	movwf	_menu_selected,c
  4668                           
  4669                           ;main.c: 122: lcd_write(1,2," ");
  4670  0021D4  0E00               	movlw	0
  4671  0021D6  6E31               	movwf	lcd_write@column+1,c
  4672  0021D8  0E01               	movlw	1
  4673  0021DA  6E30               	movwf	lcd_write@column,c
  4674  0021DC  0E00               	movlw	0
  4675  0021DE  6E33               	movwf	lcd_write@row+1,c
  4676  0021E0  0E02               	movlw	2
  4677  0021E2  6E32               	movwf	lcd_write@row,c
  4678  0021E4  0E90               	movlw	low STR_5
  4679  0021E6  6E34               	movwf	lcd_write@string,c
  4680  0021E8  0E0F               	movlw	high STR_5
  4681  0021EA  6E35               	movwf	lcd_write@string+1,c
  4682  0021EC  EC3D  F012         	call	_lcd_write	;wreg free
  4683  0021F0  0012               	return		;funcret
  4684  0021F2                     __end_of_action_menu_selector_2:
  4685                           	opt stack 0
  4686                           tblptru	equ	0xFF8
  4687                           tblptrh	equ	0xFF7
  4688                           tblptrl	equ	0xFF6
  4689                           tablat	equ	0xFF5
  4690                           prodl	equ	0xFF3
  4691                           intcon	equ	0xFF2
  4692                           postinc0	equ	0xFEE
  4693                           wreg	equ	0xFE8
  4694                           indf1	equ	0xFE7
  4695                           postdec1	equ	0xFE5
  4696                           fsr1h	equ	0xFE2
  4697                           fsr1l	equ	0xFE1
  4698                           indf2	equ	0xFDF
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function _action_menu_selector_1 *****************
  4704 ;; Defined at:
  4705 ;;		line 113 in file "main.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    6
  4726 ;; This function calls:
  4727 ;;		_lcd_write
  4728 ;; This function is called by:
  4729 ;;		_action_menu_selector
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text32
  4734  0021F2                     __ptext32:
  4735                           	opt stack 0
  4736  0021F2                     _action_menu_selector_1:
  4737                           	opt stack 21
  4738                           
  4739                           ;main.c: 114: lcd_write(1,2,">");
  4740                           
  4741                           ;incstack = 0
  4742  0021F2  0E00               	movlw	0
  4743  0021F4  6E31               	movwf	lcd_write@column+1,c
  4744  0021F6  0E01               	movlw	1
  4745  0021F8  6E30               	movwf	lcd_write@column,c
  4746  0021FA  0E00               	movlw	0
  4747  0021FC  6E33               	movwf	lcd_write@row+1,c
  4748  0021FE  0E02               	movlw	2
  4749  002200  6E32               	movwf	lcd_write@row,c
  4750  002202  0E94               	movlw	low STR_4
  4751  002204  6E34               	movwf	lcd_write@string,c
  4752  002206  0E0F               	movlw	high STR_4
  4753  002208  6E35               	movwf	lcd_write@string+1,c
  4754  00220A  EC3D  F012         	call	_lcd_write	;wreg free
  4755                           
  4756                           ;main.c: 115: menu_selected = 1;
  4757  00220E  0E00               	movlw	0
  4758  002210  6E14               	movwf	_menu_selected+1,c
  4759  002212  0E01               	movlw	1
  4760  002214  6E13               	movwf	_menu_selected,c
  4761                           
  4762                           ;main.c: 116: lcd_write(1,1," ");
  4763  002216  0E00               	movlw	0
  4764  002218  6E31               	movwf	lcd_write@column+1,c
  4765  00221A  0E01               	movlw	1
  4766  00221C  6E30               	movwf	lcd_write@column,c
  4767  00221E  0E00               	movlw	0
  4768  002220  6E33               	movwf	lcd_write@row+1,c
  4769  002222  0E01               	movlw	1
  4770  002224  6E32               	movwf	lcd_write@row,c
  4771  002226  0E90               	movlw	low STR_5
  4772  002228  6E34               	movwf	lcd_write@string,c
  4773  00222A  0E0F               	movlw	high STR_5
  4774  00222C  6E35               	movwf	lcd_write@string+1,c
  4775  00222E  EC3D  F012         	call	_lcd_write	;wreg free
  4776  002232  0012               	return		;funcret
  4777  002234                     __end_of_action_menu_selector_1:
  4778                           	opt stack 0
  4779                           tblptru	equ	0xFF8
  4780                           tblptrh	equ	0xFF7
  4781                           tblptrl	equ	0xFF6
  4782                           tablat	equ	0xFF5
  4783                           prodl	equ	0xFF3
  4784                           intcon	equ	0xFF2
  4785                           postinc0	equ	0xFEE
  4786                           wreg	equ	0xFE8
  4787                           indf1	equ	0xFE7
  4788                           postdec1	equ	0xFE5
  4789                           fsr1h	equ	0xFE2
  4790                           fsr1l	equ	0xFE1
  4791                           indf2	equ	0xFDF
  4792                           fsr2h	equ	0xFDA
  4793                           fsr2l	equ	0xFD9
  4794                           status	equ	0xFD8
  4795                           
  4796 ;; *************** function _action_menu_selector_0 *****************
  4797 ;; Defined at:
  4798 ;;		line 107 in file "main.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;		None               void
  4805 ;; Registers used:
  4806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    6
  4819 ;; This function calls:
  4820 ;;		_lcd_write
  4821 ;; This function is called by:
  4822 ;;		_action_menu_selector
  4823 ;;		_activity_menu
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text33
  4828  002234                     __ptext33:
  4829                           	opt stack 0
  4830  002234                     _action_menu_selector_0:
  4831                           	opt stack 20
  4832                           
  4833                           ;main.c: 108: lcd_write(1,1,">");
  4834                           
  4835                           ;incstack = 0
  4836  002234  0E00               	movlw	0
  4837  002236  6E31               	movwf	lcd_write@column+1,c
  4838  002238  0E01               	movlw	1
  4839  00223A  6E30               	movwf	lcd_write@column,c
  4840  00223C  0E00               	movlw	0
  4841  00223E  6E33               	movwf	lcd_write@row+1,c
  4842  002240  0E01               	movlw	1
  4843  002242  6E32               	movwf	lcd_write@row,c
  4844  002244  0E94               	movlw	low STR_4
  4845  002246  6E34               	movwf	lcd_write@string,c
  4846  002248  0E0F               	movlw	high STR_4
  4847  00224A  6E35               	movwf	lcd_write@string+1,c
  4848  00224C  EC3D  F012         	call	_lcd_write	;wreg free
  4849                           
  4850                           ;main.c: 109: menu_selected = 0;
  4851  002250  0E00               	movlw	0
  4852  002252  6E14               	movwf	_menu_selected+1,c
  4853  002254  0E00               	movlw	0
  4854  002256  6E13               	movwf	_menu_selected,c
  4855                           
  4856                           ;main.c: 110: lcd_write(9,2," ");
  4857  002258  0E00               	movlw	0
  4858  00225A  6E31               	movwf	lcd_write@column+1,c
  4859  00225C  0E09               	movlw	9
  4860  00225E  6E30               	movwf	lcd_write@column,c
  4861  002260  0E00               	movlw	0
  4862  002262  6E33               	movwf	lcd_write@row+1,c
  4863  002264  0E02               	movlw	2
  4864  002266  6E32               	movwf	lcd_write@row,c
  4865  002268  0E90               	movlw	low STR_5
  4866  00226A  6E34               	movwf	lcd_write@string,c
  4867  00226C  0E0F               	movlw	high STR_5
  4868  00226E  6E35               	movwf	lcd_write@string+1,c
  4869  002270  EC3D  F012         	call	_lcd_write	;wreg free
  4870  002274  0012               	return		;funcret
  4871  002276                     __end_of_action_menu_selector_0:
  4872                           	opt stack 0
  4873                           tblptru	equ	0xFF8
  4874                           tblptrh	equ	0xFF7
  4875                           tblptrl	equ	0xFF6
  4876                           tablat	equ	0xFF5
  4877                           prodl	equ	0xFF3
  4878                           intcon	equ	0xFF2
  4879                           postinc0	equ	0xFEE
  4880                           wreg	equ	0xFE8
  4881                           indf1	equ	0xFE7
  4882                           postdec1	equ	0xFE5
  4883                           fsr1h	equ	0xFE2
  4884                           fsr1l	equ	0xFE1
  4885                           indf2	equ	0xFDF
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           status	equ	0xFD8
  4889                           
  4890 ;; *************** function _home_clock_refresh *****************
  4891 ;; Defined at:
  4892 ;;		line 98 in file "main.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;		None               void
  4899 ;; Registers used:
  4900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    6
  4913 ;; This function calls:
  4914 ;;		_lcd_write
  4915 ;;		_sprintf
  4916 ;; This function is called by:
  4917 ;;		_main
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text34
  4922  001864                     __ptext34:
  4923                           	opt stack 0
  4924  001864                     _home_clock_refresh:
  4925                           	opt stack 24
  4926                           
  4927                           ;main.c: 100: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  4928                           
  4929                           ;incstack = 0
  4930  001864  0E7C               	movlw	low _buffer1
  4931  001866  6E32               	movwf	sprintf@sp,c
  4932  001868  0E00               	movlw	high _buffer1
  4933  00186A  6E33               	movwf	sprintf@sp+1,c
  4934  00186C  0E1F               	movlw	low STR_2
  4935  00186E  6E34               	movwf	sprintf@f,c
  4936  001870  0E0F               	movlw	high STR_2
  4937  001872  6E35               	movwf	sprintf@f+1,c
  4938  001874  C057  F036         	movff	_dia,?_sprintf+4
  4939  001878  C058  F037         	movff	_dia+1,?_sprintf+5
  4940  00187C  C05D  F038         	movff	_mes,?_sprintf+6
  4941  001880  C05E  F039         	movff	_mes+1,?_sprintf+7
  4942  001884  C055  F03A         	movff	_anio,?_sprintf+8
  4943  001888  C056  F03B         	movff	_anio+1,?_sprintf+9
  4944  00188C  ECCC  F007         	call	_sprintf	;wreg free
  4945                           
  4946                           ;main.c: 101: lcd_write(9,1,buffer1);
  4947  001890  0E00               	movlw	0
  4948  001892  6E31               	movwf	lcd_write@column+1,c
  4949  001894  0E09               	movlw	9
  4950  001896  6E30               	movwf	lcd_write@column,c
  4951  001898  0E00               	movlw	0
  4952  00189A  6E33               	movwf	lcd_write@row+1,c
  4953  00189C  0E01               	movlw	1
  4954  00189E  6E32               	movwf	lcd_write@row,c
  4955  0018A0  0E7C               	movlw	low _buffer1
  4956  0018A2  6E34               	movwf	lcd_write@string,c
  4957  0018A4  0E00               	movlw	high _buffer1
  4958  0018A6  6E35               	movwf	lcd_write@string+1,c
  4959  0018A8  EC3D  F012         	call	_lcd_write	;wreg free
  4960                           
  4961                           ;main.c: 102: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  4962  0018AC  0E7C               	movlw	low _buffer1
  4963  0018AE  6E32               	movwf	sprintf@sp,c
  4964  0018B0  0E00               	movlw	high _buffer1
  4965  0018B2  6E33               	movwf	sprintf@sp+1,c
  4966  0018B4  0E2E               	movlw	low STR_3
  4967  0018B6  6E34               	movwf	sprintf@f,c
  4968  0018B8  0E0F               	movlw	high STR_3
  4969  0018BA  6E35               	movwf	sprintf@f+1,c
  4970  0018BC  C05B  F036         	movff	_hora,?_sprintf+4
  4971  0018C0  C05C  F037         	movff	_hora+1,?_sprintf+5
  4972  0018C4  C015  F038         	movff	_minuto,?_sprintf+6
  4973  0018C8  C016  F039         	movff	_minuto+1,?_sprintf+7
  4974  0018CC  C017  F03A         	movff	_segundo,?_sprintf+8
  4975  0018D0  C018  F03B         	movff	_segundo+1,?_sprintf+9
  4976  0018D4  ECCC  F007         	call	_sprintf	;wreg free
  4977                           
  4978                           ;main.c: 103: lcd_write(9,2,buffer1);
  4979  0018D8  0E00               	movlw	0
  4980  0018DA  6E31               	movwf	lcd_write@column+1,c
  4981  0018DC  0E09               	movlw	9
  4982  0018DE  6E30               	movwf	lcd_write@column,c
  4983  0018E0  0E00               	movlw	0
  4984  0018E2  6E33               	movwf	lcd_write@row+1,c
  4985  0018E4  0E02               	movlw	2
  4986  0018E6  6E32               	movwf	lcd_write@row,c
  4987  0018E8  0E7C               	movlw	low _buffer1
  4988  0018EA  6E34               	movwf	lcd_write@string,c
  4989  0018EC  0E00               	movlw	high _buffer1
  4990  0018EE  6E35               	movwf	lcd_write@string+1,c
  4991  0018F0  EC3D  F012         	call	_lcd_write	;wreg free
  4992  0018F4  0012               	return		;funcret
  4993  0018F6                     __end_of_home_clock_refresh:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodl	equ	0xFF3
  5000                           intcon	equ	0xFF2
  5001                           postinc0	equ	0xFEE
  5002                           wreg	equ	0xFE8
  5003                           indf1	equ	0xFE7
  5004                           postdec1	equ	0xFE5
  5005                           fsr1h	equ	0xFE2
  5006                           fsr1l	equ	0xFE1
  5007                           indf2	equ	0xFDF
  5008                           fsr2h	equ	0xFDA
  5009                           fsr2l	equ	0xFD9
  5010                           status	equ	0xFD8
  5011                           
  5012 ;; *************** function _sprintf *****************
  5013 ;; Defined at:
  5014 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  sp              2   12[COMRAM] PTR unsigned char 
  5017 ;;		 -> buffer1(20), 
  5018 ;;  f               2   14[COMRAM] PTR const unsigned char 
  5019 ;;		 -> STR_37(5), STR_36(5), STR_3(15), STR_2(15), 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  tmpval          4    0        struct .
  5022 ;;  cp              3    0        PTR const unsigned char 
  5023 ;;  width           2   32[COMRAM] int 
  5024 ;;  val             2   29[COMRAM] unsigned int 
  5025 ;;  ap              2   26[COMRAM] PTR void [1]
  5026 ;;		 -> ?_sprintf(2), 
  5027 ;;  len             2    0        unsigned int 
  5028 ;;  c               1   34[COMRAM] char 
  5029 ;;  prec            1   31[COMRAM] char 
  5030 ;;  flag            1   28[COMRAM] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  2   12[COMRAM] int 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5040 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5041 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;Total ram usage:       23 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    1
  5047 ;; This function calls:
  5048 ;;		___lwdiv
  5049 ;;		___lwmod
  5050 ;;		___wmul
  5051 ;;		_isdigit
  5052 ;; This function is called by:
  5053 ;;		_home_clock_refresh
  5054 ;;		_button_number
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text35
  5059  000F98                     __ptext35:
  5060                           	opt stack 0
  5061  000F98                     _sprintf:
  5062                           	opt stack 27
  5063                           
  5064                           ;doprnt.c: 494: va_list ap;
  5065                           ;doprnt.c: 499: signed char c;
  5066                           ;doprnt.c: 501: int width;
  5067                           ;doprnt.c: 506: signed char prec;
  5068                           ;doprnt.c: 508: unsigned char flag;
  5069                           ;doprnt.c: 523: union {
  5070                           ;doprnt.c: 524: unsigned long vd;
  5071                           ;doprnt.c: 525: double integ;
  5072                           ;doprnt.c: 526: } tmpval;
  5073                           ;doprnt.c: 528: unsigned int val;
  5074                           ;doprnt.c: 529: unsigned len;
  5075                           ;doprnt.c: 530: const char * cp;
  5076                           ;doprnt.c: 533: *ap = __va_start();
  5077                           
  5078                           ;incstack = 0
  5079  000F98  0E36               	movlw	low (?_sprintf+4)
  5080  000F9A  6E40               	movwf	sprintf@ap,c
  5081  000F9C  0E00               	movlw	high (?_sprintf+4)
  5082  000F9E  6E41               	movwf	sprintf@ap+1,c
  5083                           
  5084                           ;doprnt.c: 536: while(c = *f++) {
  5085  000FA0  D117               	goto	l2736
  5086  000FA2                     l2654:
  5087                           
  5088                           ;doprnt.c: 538: if(c != '%')
  5089  000FA2  0E25               	movlw	37
  5090  000FA4  1848               	xorwf	sprintf@c,w,c
  5091  000FA6  B4D8               	btfsc	status,2,c
  5092  000FA8  D009               	goto	l2660
  5093                           
  5094                           ;doprnt.c: 540: {
  5095                           ;doprnt.c: 541: ((*sp++ = (c)));
  5096  000FAA  C032  FFD9         	movff	sprintf@sp,fsr2l
  5097  000FAE  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5098  000FB2  C048  FFDF         	movff	sprintf@c,indf2
  5099  000FB6  4A32               	infsnz	sprintf@sp,f,c
  5100  000FB8  2A33               	incf	sprintf@sp+1,f,c
  5101                           
  5102                           ;doprnt.c: 542: continue;
  5103  000FBA  D10A               	goto	l2736
  5104  000FBC                     l2660:
  5105                           
  5106                           ;doprnt.c: 543: }
  5107                           ;doprnt.c: 546: width = 0;
  5108  000FBC  0E00               	movlw	0
  5109  000FBE  6E47               	movwf	sprintf@width+1,c
  5110  000FC0  0E00               	movlw	0
  5111  000FC2  6E46               	movwf	sprintf@width,c
  5112                           
  5113                           ;doprnt.c: 548: flag = 0;
  5114  000FC4  0E00               	movlw	0
  5115  000FC6  6E42               	movwf	sprintf@flag,c
  5116                           
  5117                           ;doprnt.c: 551: switch(*f) {
  5118                           
  5119                           ;doprnt.c: 550: for(;;) {
  5120  000FC8  D005               	goto	l2666
  5121  000FCA                     l2662:
  5122                           
  5123                           ;doprnt.c: 580: flag |= 0x04;
  5124  000FCA  8442               	bsf	sprintf@flag,2,c
  5125                           
  5126                           ;doprnt.c: 581: f++;
  5127  000FCC  4A34               	infsnz	sprintf@f,f,c
  5128  000FCE  2A35               	incf	sprintf@f+1,f,c
  5129                           
  5130                           ;doprnt.c: 582: continue;
  5131  000FD0  D001               	goto	l2666
  5132                           
  5133                           ;doprnt.c: 584: }
  5134  000FD2  D00B               	goto	l2668
  5135  000FD4                     l2666:
  5136  000FD4  C034  FFF6         	movff	sprintf@f,tblptrl
  5137  000FD8  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5138  000FDC                     	if	0	;tblptru may be non-zero
  5139  000FDC                     	endif
  5140  000FDC                     	if	0	;tblptru may be non-zero
  5141  000FDC                     	endif
  5142  000FDC  0008               	tblrd		*
  5143  000FDE  50F5               	movf	tablat,w,c
  5144                           
  5145                           ; Switch size 1, requested type "space"
  5146                           ; Number of cases is 1, Range of values is 48 to 48
  5147                           ; switch strategies available:
  5148                           ; Name         Instructions Cycles
  5149                           ; simple_byte            4     3 (average)
  5150                           ;	Chosen strategy is simple_byte
  5151  000FE0  0A30               	xorlw	48	; case 48
  5152  000FE2  B4D8               	btfsc	status,2,c
  5153  000FE4  D7F2               	goto	l2662
  5154                           
  5155                           ;doprnt.c: 585: break;
  5156  000FE6  D001               	goto	l2668
  5157                           
  5158                           ;doprnt.c: 586: }
  5159  000FE8  D7F5               	goto	l2666
  5160  000FEA                     l2668:
  5161                           
  5162                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5163  000FEA  C034  FFF6         	movff	sprintf@f,tblptrl
  5164  000FEE  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5165  000FF2                     	if	0	;tblptru may be non-zero
  5166  000FF2                     	endif
  5167  000FF2                     	if	0	;tblptru may be non-zero
  5168  000FF2                     	endif
  5169  000FF2  0008               	tblrd		*
  5170  000FF4  50F5               	movf	tablat,w,c
  5171  000FF6  EC0D  F012         	call	_isdigit
  5172  000FFA  A0D8               	btfss	status,0,c
  5173  000FFC  D03A               	goto	l2684
  5174                           
  5175                           ;doprnt.c: 598: width = 0;
  5176  000FFE  0E00               	movlw	0
  5177  001000  6E47               	movwf	sprintf@width+1,c
  5178  001002  0E00               	movlw	0
  5179  001004  6E46               	movwf	sprintf@width,c
  5180  001006  D000               	goto	l2672
  5181  001008                     l2672:
  5182                           
  5183                           ;doprnt.c: 600: width *= 10;
  5184  001008  C046  F026         	movff	sprintf@width,___wmul@multiplier
  5185  00100C  C047  F027         	movff	sprintf@width+1,___wmul@multiplier+1
  5186  001010  0E00               	movlw	0
  5187  001012  6E29               	movwf	___wmul@multiplicand+1,c
  5188  001014  0E0A               	movlw	10
  5189  001016  6E28               	movwf	___wmul@multiplicand,c
  5190  001018  ECE7  F011         	call	___wmul	;wreg free
  5191  00101C  C026  F046         	movff	?___wmul,sprintf@width
  5192  001020  C027  F047         	movff	?___wmul+1,sprintf@width+1
  5193                           
  5194                           ;doprnt.c: 601: width += *f++ - '0';
  5195  001024  0ED0               	movlw	208
  5196  001026  6E3C               	movwf	??_sprintf& (0+255),c
  5197  001028  0EFF               	movlw	255
  5198  00102A  6E3D               	movwf	(??_sprintf+1)& (0+255),c
  5199  00102C  C034  FFF6         	movff	sprintf@f,tblptrl
  5200  001030  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5201  001034                     	if	0	;tblptru may be non-zero
  5202  001034                     	endif
  5203  001034                     	if	0	;tblptru may be non-zero
  5204  001034                     	endif
  5205  001034  0008               	tblrd		*
  5206  001036  50F5               	movf	tablat,w,c
  5207  001038  6E3E               	movwf	(??_sprintf+2)& (0+255),c
  5208  00103A  6A3F               	clrf	(??_sprintf+3)& (0+255),c
  5209  00103C  503C               	movf	??_sprintf,w,c
  5210  00103E  263E               	addwf	??_sprintf+2,f,c
  5211  001040  503D               	movf	??_sprintf+1,w,c
  5212  001042  223F               	addwfc	??_sprintf+3,f,c
  5213  001044  503E               	movf	??_sprintf+2,w,c
  5214  001046  2646               	addwf	sprintf@width,f,c
  5215  001048  503F               	movf	??_sprintf+3,w,c
  5216  00104A  2247               	addwfc	sprintf@width+1,f,c
  5217  00104C  4A34               	infsnz	sprintf@f,f,c
  5218  00104E  2A35               	incf	sprintf@f+1,f,c
  5219                           
  5220                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5221  001050  C034  FFF6         	movff	sprintf@f,tblptrl
  5222  001054  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5223  001058                     	if	0	;tblptru may be non-zero
  5224  001058                     	endif
  5225  001058                     	if	0	;tblptru may be non-zero
  5226  001058                     	endif
  5227  001058  0008               	tblrd		*
  5228  00105A  50F5               	movf	tablat,w,c
  5229  00105C  EC0D  F012         	call	_isdigit
  5230  001060  A0D8               	btfss	status,0,c
  5231  001062  D007               	goto	l2684
  5232  001064  D7D1               	goto	l2672
  5233                           
  5234                           ;doprnt.c: 608: }
  5235                           ;doprnt.c: 635: switch(c = *f++) {
  5236  001066  D005               	goto	l2684
  5237                           
  5238                           ;doprnt.c: 638: goto alldone;
  5239                           
  5240                           ;doprnt.c: 637: case 0:
  5241  001068  D0C1               	goto	l2738
  5242                           
  5243                           ;doprnt.c: 813: continue;
  5244                           
  5245                           ;doprnt.c: 802: default:
  5246  00106A  D0B2               	goto	l2736
  5247  00106C                     l2680:
  5248                           
  5249                           ;doprnt.c: 818: flag |= 0xC0;
  5250  00106C  0EC0               	movlw	192
  5251  00106E  1242               	iorwf	sprintf@flag,f,c
  5252                           
  5253                           ;doprnt.c: 822: }
  5254                           
  5255                           ;doprnt.c: 819: break;
  5256  001070  D011               	goto	l2686
  5257  001072                     l2684:
  5258  001072  C034  FFF6         	movff	sprintf@f,tblptrl
  5259  001076  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5260  00107A  4A34               	infsnz	sprintf@f,f,c
  5261  00107C  2A35               	incf	sprintf@f+1,f,c
  5262  00107E                     	if	0	;tblptru may be non-zero
  5263  00107E                     	endif
  5264  00107E                     	if	0	;tblptru may be non-zero
  5265  00107E                     	endif
  5266  00107E  0008               	tblrd		*
  5267  001080  CFF5 F048          	movff	tablat,sprintf@c
  5268  001084  5048               	movf	sprintf@c,w,c
  5269                           
  5270                           ; Switch size 1, requested type "space"
  5271                           ; Number of cases is 2, Range of values is 0 to 117
  5272                           ; switch strategies available:
  5273                           ; Name         Instructions Cycles
  5274                           ; simple_byte            7     4 (average)
  5275                           ;	Chosen strategy is simple_byte
  5276  001086  0A00               	xorlw	0	; case 0
  5277  001088  B4D8               	btfsc	status,2,c
  5278  00108A  D0B0               	goto	l2738
  5279  00108C  0A75               	xorlw	117	; case 117
  5280  00108E  B4D8               	btfsc	status,2,c
  5281  001090  D7ED               	goto	l2680
  5282  001092  D09E               	goto	l2736
  5283  001094                     l2686:
  5284                           
  5285                           ;doprnt.c: 1273: {
  5286                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5287  001094  C040  FFD9         	movff	sprintf@ap,fsr2l
  5288  001098  C041  FFDA         	movff	sprintf@ap+1,fsr2h
  5289  00109C  CFDE F043          	movff	postinc2,sprintf@val
  5290  0010A0  CFDD F044          	movff	postdec2,sprintf@val+1
  5291  0010A4  0E02               	movlw	2
  5292  0010A6  2640               	addwf	sprintf@ap,f,c
  5293  0010A8  0E00               	movlw	0
  5294  0010AA  2241               	addwfc	sprintf@ap+1,f,c
  5295                           
  5296                           ;doprnt.c: 1287: }
  5297                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5298  0010AC  0E01               	movlw	1
  5299  0010AE  6E48               	movwf	sprintf@c,c
  5300  0010B0                     l2692:
  5301  0010B0  0E05               	movlw	5
  5302  0010B2  1848               	xorwf	sprintf@c,w,c
  5303  0010B4  B4D8               	btfsc	status,2,c
  5304  0010B6  D016               	goto	l2704
  5305  0010B8  D001               	goto	l2696
  5306  0010BA  D014               	goto	l2704
  5307  0010BC                     l2696:
  5308                           
  5309                           ;doprnt.c: 1306: if(val < dpowers[c])
  5310  0010BC  5048               	movf	sprintf@c,w,c
  5311  0010BE  0D02               	mullw	2
  5312  0010C0  0E01               	movlw	low _dpowers
  5313  0010C2  24F3               	addwf	prodl,w,c
  5314  0010C4  6EF6               	movwf	tblptrl,c
  5315  0010C6  0E0F               	movlw	high _dpowers
  5316  0010C8  20F4               	addwfc	prodh,w,c
  5317  0010CA  6EF7               	movwf	tblptrh,c
  5318  0010CC                     	if	0	;There are less than 3 active tblptr bytes
  5319  0010CC                     	endif
  5320  0010CC  0009               	tblrd		*+
  5321  0010CE  50F5               	movf	tablat,w,c
  5322  0010D0  5C43               	subwf	sprintf@val,w,c
  5323  0010D2  0009               	tblrd		*+
  5324  0010D4  50F5               	movf	tablat,w,c
  5325  0010D6  5844               	subwfb	sprintf@val+1,w,c
  5326  0010D8  A0D8               	btfss	status,0,c
  5327  0010DA  D004               	goto	l2704
  5328  0010DC  D001               	goto	l2700
  5329                           
  5330                           ;doprnt.c: 1307: break;
  5331  0010DE  D002               	goto	l2704
  5332  0010E0                     l2700:
  5333  0010E0  2A48               	incf	sprintf@c,f,c
  5334  0010E2  D7E6               	goto	l2692
  5335  0010E4                     l2704:
  5336                           
  5337                           ;doprnt.c: 1381: if(width > c)
  5338  0010E4  0E80               	movlw	128
  5339  0010E6  BE48               	btfsc	sprintf@c,7,c
  5340  0010E8  0E7F               	movlw	127
  5341  0010EA  6E3C               	movwf	??_sprintf& (0+255),c
  5342  0010EC  5046               	movf	sprintf@width,w,c
  5343  0010EE  5C48               	subwf	sprintf@c,w,c
  5344  0010F0  5047               	movf	sprintf@width+1,w,c
  5345  0010F2  0A80               	xorlw	128
  5346  0010F4  583C               	subwfb	??_sprintf& (0+255),w,c
  5347  0010F6  B0D8               	btfsc	status,0,c
  5348  0010F8  D007               	goto	l2708
  5349                           
  5350                           ;doprnt.c: 1382: width -= c;
  5351  0010FA  5048               	movf	sprintf@c,w,c
  5352  0010FC  5E46               	subwf	sprintf@width,f,c
  5353  0010FE  0E00               	movlw	0
  5354  001100  BE48               	btfsc	sprintf@c,7,c
  5355  001102  0EFF               	movlw	255
  5356  001104  5A47               	subwfb	sprintf@width+1,f,c
  5357  001106  D005               	goto	l2710
  5358  001108                     l2708:
  5359                           
  5360                           ;doprnt.c: 1383: else
  5361                           ;doprnt.c: 1384: width = 0;
  5362  001108  0E00               	movlw	0
  5363  00110A  6E47               	movwf	sprintf@width+1,c
  5364  00110C  0E00               	movlw	0
  5365  00110E  6E46               	movwf	sprintf@width,c
  5366  001110  D000               	goto	l2710
  5367  001112                     l2710:
  5368                           
  5369                           ;doprnt.c: 1387: if(flag & 0x04) {
  5370  001112  A442               	btfss	sprintf@flag,2,c
  5371  001114  D015               	goto	l2720
  5372                           
  5373                           ;doprnt.c: 1415: if(width)
  5374  001116  5046               	movf	sprintf@width,w,c
  5375  001118  1047               	iorwf	sprintf@width+1,w,c
  5376  00111A  B4D8               	btfsc	status,2,c
  5377  00111C  D026               	goto	l448
  5378  00111E                     l2714:
  5379                           
  5380                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5381  00111E  C032  FFD9         	movff	sprintf@sp,fsr2l
  5382  001122  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5383  001126  0E30               	movlw	48
  5384  001128  6EDF               	movwf	indf2,c
  5385  00112A  4A32               	infsnz	sprintf@sp,f,c
  5386  00112C  2A33               	incf	sprintf@sp+1,f,c
  5387                           
  5388                           ;doprnt.c: 1418: while(--width);
  5389  00112E  0646               	decf	sprintf@width,f,c
  5390  001130  A0D8               	btfss	status,0,c
  5391  001132  0647               	decf	sprintf@width+1,f,c
  5392  001134  5046               	movf	sprintf@width,w,c
  5393  001136  1047               	iorwf	sprintf@width+1,w,c
  5394  001138  B4D8               	btfsc	status,2,c
  5395  00113A  D017               	goto	l448
  5396  00113C  D7F0               	goto	l2714
  5397                           
  5398                           ;doprnt.c: 1420: } else
  5399  00113E  D015               	goto	l448
  5400  001140                     l2720:
  5401                           
  5402                           ;doprnt.c: 1422: {
  5403                           ;doprnt.c: 1424: if(width
  5404                           ;doprnt.c: 1428: )
  5405  001140  5046               	movf	sprintf@width,w,c
  5406  001142  1047               	iorwf	sprintf@width+1,w,c
  5407  001144  B4D8               	btfsc	status,2,c
  5408  001146  D011               	goto	l448
  5409  001148                     l2722:
  5410                           
  5411                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5412  001148  C032  FFD9         	movff	sprintf@sp,fsr2l
  5413  00114C  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5414  001150  0E20               	movlw	32
  5415  001152  6EDF               	movwf	indf2,c
  5416  001154  4A32               	infsnz	sprintf@sp,f,c
  5417  001156  2A33               	incf	sprintf@sp+1,f,c
  5418                           
  5419                           ;doprnt.c: 1431: while(--width);
  5420  001158  0646               	decf	sprintf@width,f,c
  5421  00115A  A0D8               	btfss	status,0,c
  5422  00115C  0647               	decf	sprintf@width+1,f,c
  5423  00115E  5046               	movf	sprintf@width,w,c
  5424  001160  1047               	iorwf	sprintf@width+1,w,c
  5425  001162  B4D8               	btfsc	status,2,c
  5426  001164  D002               	goto	l448
  5427  001166  D7F0               	goto	l2722
  5428  001168  D000               	goto	l448
  5429  00116A                     l448:
  5430                           
  5431                           ;doprnt.c: 1469: }
  5432                           ;doprnt.c: 1472: prec = c;
  5433  00116A  C048  F045         	movff	sprintf@c,sprintf@prec
  5434                           
  5435                           ;doprnt.c: 1474: while(prec--) {
  5436  00116E  D02A               	goto	l2734
  5437  001170                     l2728:
  5438                           
  5439                           ;doprnt.c: 1478: {
  5440                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5441  001170  5045               	movf	sprintf@prec,w,c
  5442  001172  0D02               	mullw	2
  5443  001174  0E01               	movlw	low _dpowers
  5444  001176  24F3               	addwf	prodl,w,c
  5445  001178  6EF6               	movwf	tblptrl,c
  5446  00117A  0E0F               	movlw	high _dpowers
  5447  00117C  20F4               	addwfc	prodh,w,c
  5448  00117E  6EF7               	movwf	tblptrh,c
  5449  001180                     	if	0	;There are less than 3 active tblptr bytes
  5450  001180                     	endif
  5451  001180  0009               	tblrd		*+
  5452  001182  CFF5 F028          	movff	tablat,___lwdiv@divisor
  5453  001186  000A               	tblrd		*-
  5454  001188  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  5455  00118C  C043  F026         	movff	sprintf@val,___lwdiv@dividend
  5456  001190  C044  F027         	movff	sprintf@val+1,___lwdiv@dividend+1
  5457  001194  ECEE  F00E         	call	___lwdiv	;wreg free
  5458  001198  C026  F02D         	movff	?___lwdiv,___lwmod@dividend
  5459  00119C  C027  F02E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5460  0011A0  0E00               	movlw	0
  5461  0011A2  6E30               	movwf	___lwmod@divisor+1,c
  5462  0011A4  0E0A               	movlw	10
  5463  0011A6  6E2F               	movwf	___lwmod@divisor,c
  5464  0011A8  ECBF  F00F         	call	___lwmod	;wreg free
  5465  0011AC  502D               	movf	?___lwmod,w,c
  5466  0011AE  0F30               	addlw	48
  5467  0011B0  6E48               	movwf	sprintf@c,c
  5468                           
  5469                           ;doprnt.c: 1523: }
  5470                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5471  0011B2  C032  FFD9         	movff	sprintf@sp,fsr2l
  5472  0011B6  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5473  0011BA  C048  FFDF         	movff	sprintf@c,indf2
  5474  0011BE  4A32               	infsnz	sprintf@sp,f,c
  5475  0011C0  2A33               	incf	sprintf@sp+1,f,c
  5476  0011C2  D000               	goto	l2734
  5477  0011C4                     l2734:
  5478  0011C4  0645               	decf	sprintf@prec,f,c
  5479  0011C6  2845               	incf	sprintf@prec,w,c
  5480  0011C8  B4D8               	btfsc	status,2,c
  5481  0011CA  D002               	goto	l2736
  5482  0011CC  D7D1               	goto	l2728
  5483  0011CE  D000               	goto	l2736
  5484  0011D0                     l2736:
  5485  0011D0  C034  FFF6         	movff	sprintf@f,tblptrl
  5486  0011D4  C035  FFF7         	movff	sprintf@f+1,tblptrh
  5487  0011D8  4A34               	infsnz	sprintf@f,f,c
  5488  0011DA  2A35               	incf	sprintf@f+1,f,c
  5489  0011DC                     	if	0	;tblptru may be non-zero
  5490  0011DC                     	endif
  5491  0011DC                     	if	0	;tblptru may be non-zero
  5492  0011DC                     	endif
  5493  0011DC  0008               	tblrd		*
  5494  0011DE  CFF5 F048          	movff	tablat,sprintf@c
  5495  0011E2  5048               	movf	sprintf@c,w,c
  5496  0011E4  B4D8               	btfsc	status,2,c
  5497  0011E6  D002               	goto	l2738
  5498  0011E8  D6DC               	goto	l2654
  5499  0011EA  D000               	goto	l2738
  5500  0011EC                     l2738:
  5501                           
  5502                           ;doprnt.c: 1538: *sp = 0;
  5503  0011EC  C032  FFD9         	movff	sprintf@sp,fsr2l
  5504  0011F0  C033  FFDA         	movff	sprintf@sp+1,fsr2h
  5505  0011F4  0E00               	movlw	0
  5506  0011F6  6EDF               	movwf	indf2,c
  5507  0011F8  0012               	return	
  5508                           
  5509                           ;doprnt.c: 1540: return 0;
  5510                           ;	Return value of _sprintf is never used
  5511  0011FA  0012               	return		;funcret
  5512  0011FC                     __end_of_sprintf:
  5513                           	opt stack 0
  5514                           tblptru	equ	0xFF8
  5515                           tblptrh	equ	0xFF7
  5516                           tblptrl	equ	0xFF6
  5517                           tablat	equ	0xFF5
  5518                           prodh	equ	0xFF4
  5519                           prodl	equ	0xFF3
  5520                           intcon	equ	0xFF2
  5521                           postinc0	equ	0xFEE
  5522                           wreg	equ	0xFE8
  5523                           indf1	equ	0xFE7
  5524                           postdec1	equ	0xFE5
  5525                           fsr1h	equ	0xFE2
  5526                           fsr1l	equ	0xFE1
  5527                           indf2	equ	0xFDF
  5528                           postinc2	equ	0xFDE
  5529                           postdec2	equ	0xFDD
  5530                           fsr2h	equ	0xFDA
  5531                           fsr2l	equ	0xFD9
  5532                           status	equ	0xFD8
  5533                           
  5534 ;; *************** function _isdigit *****************
  5535 ;; Defined at:
  5536 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  c               1    wreg     unsigned char 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  c               1    2[COMRAM] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;		None               void
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5554 ;;Total ram usage:        3 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_sprintf
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text36
  5564  00241A                     __ptext36:
  5565                           	opt stack 0
  5566  00241A                     _isdigit:
  5567                           	opt stack 27
  5568                           
  5569                           ;incstack = 0
  5570                           ;isdigit@c stored from wreg
  5571  00241A  6E28               	movwf	isdigit@c,c
  5572  00241C  0E00               	movlw	0
  5573  00241E  6E27               	movwf	_isdigit$2144,c
  5574  002420  0E3A               	movlw	58
  5575  002422  6028               	cpfslt	isdigit@c,c
  5576  002424  D006               	goto	l2466
  5577  002426  0E2F               	movlw	47
  5578  002428  6428               	cpfsgt	isdigit@c,c
  5579  00242A  D003               	goto	l2466
  5580  00242C  0E01               	movlw	1
  5581  00242E  6E27               	movwf	_isdigit$2144,c
  5582  002430  D000               	goto	l2466
  5583  002432                     l2466:
  5584  002432  C027  F026         	movff	_isdigit$2144,??_isdigit
  5585  002436  3026               	rrcf	??_isdigit,w,c
  5586  002438  0012               	return	
  5587  00243A  0012               	return		;funcret
  5588  00243C                     __end_of_isdigit:
  5589                           	opt stack 0
  5590                           tblptru	equ	0xFF8
  5591                           tblptrh	equ	0xFF7
  5592                           tblptrl	equ	0xFF6
  5593                           tablat	equ	0xFF5
  5594                           prodh	equ	0xFF4
  5595                           prodl	equ	0xFF3
  5596                           intcon	equ	0xFF2
  5597                           postinc0	equ	0xFEE
  5598                           wreg	equ	0xFE8
  5599                           indf1	equ	0xFE7
  5600                           postdec1	equ	0xFE5
  5601                           fsr1h	equ	0xFE2
  5602                           fsr1l	equ	0xFE1
  5603                           indf2	equ	0xFDF
  5604                           postinc2	equ	0xFDE
  5605                           postdec2	equ	0xFDD
  5606                           fsr2h	equ	0xFDA
  5607                           fsr2l	equ	0xFD9
  5608                           status	equ	0xFD8
  5609                           
  5610 ;; *************** function ___wmul *****************
  5611 ;; Defined at:
  5612 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  multiplier      2    0[COMRAM] unsigned int 
  5615 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  product         2    4[COMRAM] unsigned int 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  2    0[COMRAM] unsigned int 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0, prodl, prodh
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5630 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;Total ram usage:        6 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_sprintf
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text37
  5641  0023CE                     __ptext37:
  5642                           	opt stack 0
  5643  0023CE                     ___wmul:
  5644                           	opt stack 27
  5645                           
  5646                           ;incstack = 0
  5647  0023CE  5026               	movf	___wmul@multiplier,w,c
  5648  0023D0  0228               	mulwf	___wmul@multiplicand,c
  5649  0023D2  CFF3 F02A          	movff	prodl,___wmul@product
  5650  0023D6  CFF4 F02B          	movff	prodh,___wmul@product+1
  5651  0023DA  5026               	movf	___wmul@multiplier,w,c
  5652  0023DC  0229               	mulwf	___wmul@multiplicand+1,c
  5653  0023DE  50F3               	movf	prodl,w,c
  5654  0023E0  262B               	addwf	___wmul@product+1,f,c
  5655  0023E2  5027               	movf	___wmul@multiplier+1,w,c
  5656  0023E4  0228               	mulwf	___wmul@multiplicand,c
  5657  0023E6  50F3               	movf	prodl,w,c
  5658  0023E8  262B               	addwf	___wmul@product+1,f,c
  5659  0023EA  C02A  F026         	movff	___wmul@product,?___wmul
  5660  0023EE  C02B  F027         	movff	___wmul@product+1,?___wmul+1
  5661  0023F2  0012               	return	
  5662  0023F4  0012               	return		;funcret
  5663  0023F6                     __end_of___wmul:
  5664                           	opt stack 0
  5665                           tblptru	equ	0xFF8
  5666                           tblptrh	equ	0xFF7
  5667                           tblptrl	equ	0xFF6
  5668                           tablat	equ	0xFF5
  5669                           prodh	equ	0xFF4
  5670                           prodl	equ	0xFF3
  5671                           intcon	equ	0xFF2
  5672                           postinc0	equ	0xFEE
  5673                           wreg	equ	0xFE8
  5674                           indf1	equ	0xFE7
  5675                           postdec1	equ	0xFE5
  5676                           fsr1h	equ	0xFE2
  5677                           fsr1l	equ	0xFE1
  5678                           indf2	equ	0xFDF
  5679                           postinc2	equ	0xFDE
  5680                           postdec2	equ	0xFDD
  5681                           fsr2h	equ	0xFDA
  5682                           fsr2l	equ	0xFD9
  5683                           status	equ	0xFD8
  5684                           
  5685 ;; *************** function ___lwmod *****************
  5686 ;; Defined at:
  5687 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  dividend        2    7[COMRAM] unsigned int 
  5690 ;;  divisor         2    9[COMRAM] unsigned int 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  counter         1   11[COMRAM] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  2    7[COMRAM] unsigned int 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5706 ;;Total ram usage:        5 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_sprintf
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text38
  5716  001F7E                     __ptext38:
  5717                           	opt stack 0
  5718  001F7E                     ___lwmod:
  5719                           	opt stack 27
  5720                           
  5721                           ;incstack = 0
  5722  001F7E  502F               	movf	___lwmod@divisor,w,c
  5723  001F80  1030               	iorwf	___lwmod@divisor+1,w,c
  5724  001F82  B4D8               	btfsc	status,2,c
  5725  001F84  D01D               	goto	l1102
  5726  001F86  0E01               	movlw	1
  5727  001F88  6E31               	movwf	___lwmod@counter,c
  5728  001F8A  D005               	goto	l2504
  5729  001F8C                     l2502:
  5730  001F8C  90D8               	bcf	status,0,c
  5731  001F8E  362F               	rlcf	___lwmod@divisor,f,c
  5732  001F90  3630               	rlcf	___lwmod@divisor+1,f,c
  5733  001F92  2A31               	incf	___lwmod@counter,f,c
  5734  001F94  D000               	goto	l2504
  5735  001F96                     l2504:
  5736  001F96  BE30               	btfsc	___lwmod@divisor+1,7,c
  5737  001F98  D002               	goto	l2506
  5738  001F9A  D7F8               	goto	l2502
  5739  001F9C  D000               	goto	l2506
  5740  001F9E                     l2506:
  5741  001F9E  502F               	movf	___lwmod@divisor,w,c
  5742  001FA0  5C2D               	subwf	___lwmod@dividend,w,c
  5743  001FA2  5030               	movf	___lwmod@divisor+1,w,c
  5744  001FA4  582E               	subwfb	___lwmod@dividend+1,w,c
  5745  001FA6  A0D8               	btfss	status,0,c
  5746  001FA8  D005               	goto	l2510
  5747  001FAA  502F               	movf	___lwmod@divisor,w,c
  5748  001FAC  5E2D               	subwf	___lwmod@dividend,f,c
  5749  001FAE  5030               	movf	___lwmod@divisor+1,w,c
  5750  001FB0  5A2E               	subwfb	___lwmod@dividend+1,f,c
  5751  001FB2  D000               	goto	l2510
  5752  001FB4                     l2510:
  5753  001FB4  90D8               	bcf	status,0,c
  5754  001FB6  3230               	rrcf	___lwmod@divisor+1,f,c
  5755  001FB8  322F               	rrcf	___lwmod@divisor,f,c
  5756  001FBA  2E31               	decfsz	___lwmod@counter,f,c
  5757  001FBC  D7F0               	goto	l2506
  5758  001FBE  D000               	goto	l1102
  5759  001FC0                     l1102:
  5760  001FC0  C02D  F02D         	movff	___lwmod@dividend,?___lwmod
  5761  001FC4  C02E  F02E         	movff	___lwmod@dividend+1,?___lwmod+1
  5762  001FC8  0012               	return		;funcret
  5763  001FCA                     __end_of___lwmod:
  5764                           	opt stack 0
  5765                           tblptru	equ	0xFF8
  5766                           tblptrh	equ	0xFF7
  5767                           tblptrl	equ	0xFF6
  5768                           tablat	equ	0xFF5
  5769                           prodh	equ	0xFF4
  5770                           prodl	equ	0xFF3
  5771                           intcon	equ	0xFF2
  5772                           postinc0	equ	0xFEE
  5773                           wreg	equ	0xFE8
  5774                           indf1	equ	0xFE7
  5775                           postdec1	equ	0xFE5
  5776                           fsr1h	equ	0xFE2
  5777                           fsr1l	equ	0xFE1
  5778                           indf2	equ	0xFDF
  5779                           postinc2	equ	0xFDE
  5780                           postdec2	equ	0xFDD
  5781                           fsr2h	equ	0xFDA
  5782                           fsr2l	equ	0xFD9
  5783                           status	equ	0xFD8
  5784                           
  5785 ;; *************** function ___lwdiv *****************
  5786 ;; Defined at:
  5787 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  dividend        2    0[COMRAM] unsigned int 
  5790 ;;  divisor         2    2[COMRAM] unsigned int 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  quotient        2    4[COMRAM] unsigned int 
  5793 ;;  counter         1    6[COMRAM] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  2    0[COMRAM] unsigned int 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5804 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5806 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5807 ;;Total ram usage:        7 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_sprintf
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text39
  5817  001DDC                     __ptext39:
  5818                           	opt stack 0
  5819  001DDC                     ___lwdiv:
  5820                           	opt stack 27
  5821                           
  5822                           ;incstack = 0
  5823  001DDC  0E00               	movlw	0
  5824  001DDE  6E2B               	movwf	___lwdiv@quotient+1,c
  5825  001DE0  0E00               	movlw	0
  5826  001DE2  6E2A               	movwf	___lwdiv@quotient,c
  5827  001DE4  5028               	movf	___lwdiv@divisor,w,c
  5828  001DE6  1029               	iorwf	___lwdiv@divisor+1,w,c
  5829  001DE8  B4D8               	btfsc	status,2,c
  5830  001DEA  D021               	goto	l1092
  5831  001DEC  0E01               	movlw	1
  5832  001DEE  6E2C               	movwf	___lwdiv@counter,c
  5833  001DF0  D005               	goto	l2484
  5834  001DF2                     l2482:
  5835  001DF2  90D8               	bcf	status,0,c
  5836  001DF4  3628               	rlcf	___lwdiv@divisor,f,c
  5837  001DF6  3629               	rlcf	___lwdiv@divisor+1,f,c
  5838  001DF8  2A2C               	incf	___lwdiv@counter,f,c
  5839  001DFA  D000               	goto	l2484
  5840  001DFC                     l2484:
  5841  001DFC  BE29               	btfsc	___lwdiv@divisor+1,7,c
  5842  001DFE  D002               	goto	l2486
  5843  001E00  D7F8               	goto	l2482
  5844  001E02  D000               	goto	l2486
  5845  001E04                     l2486:
  5846  001E04  90D8               	bcf	status,0,c
  5847  001E06  362A               	rlcf	___lwdiv@quotient,f,c
  5848  001E08  362B               	rlcf	___lwdiv@quotient+1,f,c
  5849  001E0A  5028               	movf	___lwdiv@divisor,w,c
  5850  001E0C  5C26               	subwf	___lwdiv@dividend,w,c
  5851  001E0E  5029               	movf	___lwdiv@divisor+1,w,c
  5852  001E10  5827               	subwfb	___lwdiv@dividend+1,w,c
  5853  001E12  A0D8               	btfss	status,0,c
  5854  001E14  D006               	goto	l2494
  5855  001E16  5028               	movf	___lwdiv@divisor,w,c
  5856  001E18  5E26               	subwf	___lwdiv@dividend,f,c
  5857  001E1A  5029               	movf	___lwdiv@divisor+1,w,c
  5858  001E1C  5A27               	subwfb	___lwdiv@dividend+1,f,c
  5859  001E1E  802A               	bsf	___lwdiv@quotient,0,c
  5860  001E20  D000               	goto	l2494
  5861  001E22                     l2494:
  5862  001E22  90D8               	bcf	status,0,c
  5863  001E24  3229               	rrcf	___lwdiv@divisor+1,f,c
  5864  001E26  3228               	rrcf	___lwdiv@divisor,f,c
  5865  001E28  2E2C               	decfsz	___lwdiv@counter,f,c
  5866  001E2A  D7EC               	goto	l2486
  5867  001E2C  D000               	goto	l1092
  5868  001E2E                     l1092:
  5869  001E2E  C02A  F026         	movff	___lwdiv@quotient,?___lwdiv
  5870  001E32  C02B  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5871  001E36  0012               	return		;funcret
  5872  001E38                     __end_of___lwdiv:
  5873                           	opt stack 0
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           prodh	equ	0xFF4
  5879                           prodl	equ	0xFF3
  5880                           intcon	equ	0xFF2
  5881                           postinc0	equ	0xFEE
  5882                           wreg	equ	0xFE8
  5883                           indf1	equ	0xFE7
  5884                           postdec1	equ	0xFE5
  5885                           fsr1h	equ	0xFE2
  5886                           fsr1l	equ	0xFE1
  5887                           indf2	equ	0xFDF
  5888                           postinc2	equ	0xFDE
  5889                           postdec2	equ	0xFDD
  5890                           fsr2h	equ	0xFDA
  5891                           fsr2l	equ	0xFD9
  5892                           status	equ	0xFD8
  5893                           
  5894 ;; *************** function _check_home_callback *****************
  5895 ;; Defined at:
  5896 ;;		line 411 in file "main.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;		None               void
  5903 ;; Registers used:
  5904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    7
  5917 ;; This function calls:
  5918 ;;		_activity_home
  5919 ;;		_reset_home_callback
  5920 ;; This function is called by:
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text40
  5926  00243C                     __ptext40:
  5927                           	opt stack 0
  5928  00243C                     _check_home_callback:
  5929                           	opt stack 23
  5930                           
  5931                           ;main.c: 413: if(activity != 0){
  5932                           
  5933                           ;incstack = 0
  5934  00243C  5003               	movf	_activity,w,c
  5935  00243E  1004               	iorwf	_activity+1,w,c
  5936  002440  B4D8               	btfsc	status,2,c
  5937  002442  0012               	return	
  5938                           
  5939                           ;main.c: 415: home_callback--;
  5940  002444  0609               	decf	_home_callback,f,c
  5941  002446  A0D8               	btfss	status,0,c
  5942  002448  060A               	decf	_home_callback+1,f,c
  5943                           
  5944                           ;main.c: 417: if(home_callback == 0){
  5945  00244A  5009               	movf	_home_callback,w,c
  5946  00244C  100A               	iorwf	_home_callback+1,w,c
  5947  00244E  A4D8               	btfss	status,2,c
  5948  002450  0012               	return	
  5949                           
  5950                           ;main.c: 419: reset_home_callback();
  5951  002452  EC7F  F012         	call	_reset_home_callback	;wreg free
  5952                           
  5953                           ;main.c: 421: activity_home();
  5954  002456  ECBE  F011         	call	_activity_home	;wreg free
  5955  00245A  0012               	return	
  5956  00245C  0012               	return		;funcret
  5957  00245E                     __end_of_check_home_callback:
  5958                           	opt stack 0
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           intcon	equ	0xFF2
  5966                           postinc0	equ	0xFEE
  5967                           wreg	equ	0xFE8
  5968                           indf1	equ	0xFE7
  5969                           postdec1	equ	0xFE5
  5970                           fsr1h	equ	0xFE2
  5971                           fsr1l	equ	0xFE1
  5972                           indf2	equ	0xFDF
  5973                           postinc2	equ	0xFDE
  5974                           postdec2	equ	0xFDD
  5975                           fsr2h	equ	0xFDA
  5976                           fsr2l	equ	0xFD9
  5977                           status	equ	0xFD8
  5978                           
  5979 ;; *************** function _reset_home_callback *****************
  5980 ;; Defined at:
  5981 ;;		line 92 in file "main.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;		None               void
  5988 ;; Registers used:
  5989 ;;		None
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;Total ram usage:        0 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_button_A
  6005 ;;		_button_B
  6006 ;;		_button_C
  6007 ;;		_button_D
  6008 ;;		_button_asterisk
  6009 ;;		_button_hash
  6010 ;;		_button_number
  6011 ;;		_check_home_callback
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text41
  6016  0024FE                     __ptext41:
  6017                           	opt stack 0
  6018  0024FE                     _reset_home_callback:
  6019                           	opt stack 28
  6020                           
  6021                           ;main.c: 94: home_callback = home_callback_delay;
  6022                           
  6023                           ;incstack = 0
  6024  0024FE  C00B  F009         	movff	_home_callback_delay,_home_callback
  6025  002502  C00C  F00A         	movff	_home_callback_delay+1,_home_callback+1
  6026  002506  0012               	return		;funcret
  6027  002508                     __end_of_reset_home_callback:
  6028                           	opt stack 0
  6029                           tblptru	equ	0xFF8
  6030                           tblptrh	equ	0xFF7
  6031                           tblptrl	equ	0xFF6
  6032                           tablat	equ	0xFF5
  6033                           prodh	equ	0xFF4
  6034                           prodl	equ	0xFF3
  6035                           intcon	equ	0xFF2
  6036                           postinc0	equ	0xFEE
  6037                           wreg	equ	0xFE8
  6038                           indf1	equ	0xFE7
  6039                           postdec1	equ	0xFE5
  6040                           fsr1h	equ	0xFE2
  6041                           fsr1l	equ	0xFE1
  6042                           indf2	equ	0xFDF
  6043                           postinc2	equ	0xFDE
  6044                           postdec2	equ	0xFDD
  6045                           fsr2h	equ	0xFDA
  6046                           fsr2l	equ	0xFD9
  6047                           status	equ	0xFD8
  6048                           
  6049 ;; *************** function _activity_home *****************
  6050 ;; Defined at:
  6051 ;;		line 155 in file "main.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;		None               void
  6058 ;; Registers used:
  6059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    6
  6072 ;; This function calls:
  6073 ;;		_lcd_init
  6074 ;;		_lcd_write
  6075 ;; This function is called by:
  6076 ;;		_button_D
  6077 ;;		_check_home_callback
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text42
  6083  00237C                     __ptext42:
  6084                           	opt stack 0
  6085  00237C                     _activity_home:
  6086                           	opt stack 22
  6087                           
  6088                           ;main.c: 157: activity = 0;
  6089                           
  6090                           ;incstack = 0
  6091  00237C  0E00               	movlw	0
  6092  00237E  6E04               	movwf	_activity+1,c
  6093  002380  0E00               	movlw	0
  6094  002382  6E03               	movwf	_activity,c
  6095                           
  6096                           ;main.c: 158: lcd_init();
  6097  002384  EC03  F00D         	call	_lcd_init	;wreg free
  6098                           
  6099                           ;main.c: 159: lcd_write(1,1,"X28");
  6100  002388  0E00               	movlw	0
  6101  00238A  6E31               	movwf	lcd_write@column+1,c
  6102  00238C  0E01               	movlw	1
  6103  00238E  6E30               	movwf	lcd_write@column,c
  6104  002390  0E00               	movlw	0
  6105  002392  6E33               	movwf	lcd_write@row+1,c
  6106  002394  0E01               	movlw	1
  6107  002396  6E32               	movwf	lcd_write@row,c
  6108  002398  0E82               	movlw	low STR_12
  6109  00239A  6E34               	movwf	lcd_write@string,c
  6110  00239C  0E0F               	movlw	high STR_12
  6111  00239E  6E35               	movwf	lcd_write@string+1,c
  6112  0023A0  EC3D  F012         	call	_lcd_write	;wreg free
  6113  0023A4  0012               	return		;funcret
  6114  0023A6                     __end_of_activity_home:
  6115                           	opt stack 0
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           intcon	equ	0xFF2
  6123                           postinc0	equ	0xFEE
  6124                           wreg	equ	0xFE8
  6125                           indf1	equ	0xFE7
  6126                           postdec1	equ	0xFE5
  6127                           fsr1h	equ	0xFE2
  6128                           fsr1l	equ	0xFE1
  6129                           indf2	equ	0xFDF
  6130                           postinc2	equ	0xFDE
  6131                           postdec2	equ	0xFDD
  6132                           fsr2h	equ	0xFDA
  6133                           fsr2l	equ	0xFD9
  6134                           status	equ	0xFD8
  6135                           
  6136 ;; *************** function _lcd_write *****************
  6137 ;; Defined at:
  6138 ;;		line 51 in file "main.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  column          2   10[COMRAM] int 
  6141 ;;  row             2   12[COMRAM] int 
  6142 ;;  string          2   14[COMRAM] PTR unsigned char 
  6143 ;;		 -> STR_34(5), STR_33(8), STR_32(7), STR_31(6), 
  6144 ;;		 -> STR_30(8), STR_29(4), STR_28(5), STR_27(6), 
  6145 ;;		 -> STR_26(6), STR_25(3), STR_24(3), STR_23(8), 
  6146 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  6147 ;;		 -> STR_18(7), STR_17(4), STR_16(6), STR_15(8), 
  6148 ;;		 -> STR_14(16), STR_12(4), STR_11(2), STR_10(2), 
  6149 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  6150 ;;		 -> STR_5(2), STR_4(2), buffer1(20), 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;		None               void
  6155 ;; Registers used:
  6156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6162 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;Total ram usage:        6 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:    5
  6169 ;; This function calls:
  6170 ;;		_lcd_gotoxy
  6171 ;;		_lcd_putrs
  6172 ;; This function is called by:
  6173 ;;		_home_clock_refresh
  6174 ;;		_action_menu_selector_0
  6175 ;;		_action_menu_selector_1
  6176 ;;		_action_menu_selector_2
  6177 ;;		_action_menu_selector_3
  6178 ;;		_activity_home
  6179 ;;		_activity_pin
  6180 ;;		_activity_menu
  6181 ;;		_action_submenu_selector_0
  6182 ;;		_action_submenu_selector_1
  6183 ;;		_activity_submenu_activation
  6184 ;;		_activity_submenu_clock
  6185 ;;		_activity_submenu_pin
  6186 ;;		_activity_submenu_alarm
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text43
  6191  00247A                     __ptext43:
  6192                           	opt stack 0
  6193  00247A                     _lcd_write:
  6194                           	opt stack 21
  6195                           
  6196                           ;main.c: 52: lcd_gotoxy(column, row);
  6197                           
  6198                           ;incstack = 0
  6199  00247A  C032  F02A         	movff	lcd_write@row,lcd_gotoxy@y
  6200  00247E  5030               	movf	lcd_write@column,w,c
  6201  002480  ECFB  F011         	call	_lcd_gotoxy
  6202                           
  6203                           ;main.c: 53: lcd_putrs(string);
  6204  002484  C034  F02E         	movff	lcd_write@string,lcd_putrs@ptr
  6205  002488  C035  F02F         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  6206  00248C  EC47  F00F         	call	_lcd_putrs	;wreg free
  6207  002490  0012               	return		;funcret
  6208  002492                     __end_of_lcd_write:
  6209                           	opt stack 0
  6210                           tblptru	equ	0xFF8
  6211                           tblptrh	equ	0xFF7
  6212                           tblptrl	equ	0xFF6
  6213                           tablat	equ	0xFF5
  6214                           prodh	equ	0xFF4
  6215                           prodl	equ	0xFF3
  6216                           intcon	equ	0xFF2
  6217                           postinc0	equ	0xFEE
  6218                           wreg	equ	0xFE8
  6219                           indf1	equ	0xFE7
  6220                           postdec1	equ	0xFE5
  6221                           fsr1h	equ	0xFE2
  6222                           fsr1l	equ	0xFE1
  6223                           indf2	equ	0xFDF
  6224                           postinc2	equ	0xFDE
  6225                           postdec2	equ	0xFDD
  6226                           fsr2h	equ	0xFDA
  6227                           fsr2l	equ	0xFD9
  6228                           status	equ	0xFD8
  6229                           
  6230 ;; *************** function _lcd_putrs *****************
  6231 ;; Defined at:
  6232 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  6235 ;;		 -> STR_35(2), STR_34(5), STR_33(8), STR_32(7), 
  6236 ;;		 -> STR_31(6), STR_30(8), STR_29(4), STR_28(5), 
  6237 ;;		 -> STR_27(6), STR_26(6), STR_25(3), STR_24(3), 
  6238 ;;		 -> STR_23(8), STR_22(2), STR_21(2), STR_20(2), 
  6239 ;;		 -> STR_19(2), STR_18(7), STR_17(4), STR_16(6), 
  6240 ;;		 -> STR_15(8), STR_14(16), STR_12(4), STR_11(2), 
  6241 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  6242 ;;		 -> STR_6(2), STR_5(2), STR_4(2), buffer1(20), 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;		None
  6245 ;; Return value:  Size  Location     Type
  6246 ;;		None               void
  6247 ;; Registers used:
  6248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6258 ;;Total ram usage:        2 bytes
  6259 ;; Hardware stack levels used:    1
  6260 ;; Hardware stack levels required when called:    4
  6261 ;; This function calls:
  6262 ;;		_lcd_putc
  6263 ;; This function is called by:
  6264 ;;		_lcd_write
  6265 ;;		_button_number
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text44
  6270  001E8E                     __ptext44:
  6271                           	opt stack 0
  6272  001E8E                     _lcd_putrs:
  6273                           	opt stack 24
  6274                           
  6275                           ;unmc_lcd_216.c: 223: while(*ptr){
  6276                           
  6277                           ;incstack = 0
  6278  001E8E  D015               	goto	l2326
  6279  001E90                     l2322:
  6280                           
  6281                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  6282  001E90  C02E  FFF6         	movff	lcd_putrs@ptr,tblptrl
  6283  001E94  C02F  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  6284  001E98  6AF8               	clrf	tblptru,c
  6285  001E9A  0E0E               	movlw	(high __ramtop+-1)
  6286  001E9C  64F7               	cpfsgt	tblptrh,c
  6287  001E9E  D003               	bra	u1297
  6288  001EA0  0008               	tblrd		*
  6289  001EA2  50F5               	movf	tablat,w,c
  6290  001EA4  D005               	bra	u1290
  6291  001EA6                     u1297:
  6292  001EA6  CFF6 FFE9          	movff	tblptrl,fsr0l
  6293  001EAA  CFF7 FFEA          	movff	tblptrh,fsr0h
  6294  001EAE  50EF               	movf	indf0,w,c
  6295  001EB0                     u1290:
  6296  001EB0  ECE5  F00F         	call	_lcd_putc
  6297  001EB4  4A2E               	infsnz	lcd_putrs@ptr,f,c
  6298  001EB6  2A2F               	incf	lcd_putrs@ptr+1,f,c
  6299  001EB8  D000               	goto	l2326
  6300  001EBA                     l2326:
  6301  001EBA  C02E  FFF6         	movff	lcd_putrs@ptr,tblptrl
  6302  001EBE  C02F  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  6303  001EC2  6AF8               	clrf	tblptru,c
  6304  001EC4  0E0E               	movlw	(high __ramtop+-1)
  6305  001EC6  64F7               	cpfsgt	tblptrh,c
  6306  001EC8  D003               	bra	u1307
  6307  001ECA  0008               	tblrd		*
  6308  001ECC  50F5               	movf	tablat,w,c
  6309  001ECE  D005               	bra	u1300
  6310  001ED0                     u1307:
  6311  001ED0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6312  001ED4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6313  001ED8  50EF               	movf	indf0,w,c
  6314  001EDA                     u1300:
  6315  001EDA  0900               	iorlw	0
  6316  001EDC  A4D8               	btfss	status,2,c
  6317  001EDE  D7D8               	goto	l2322
  6318  001EE0  0012               	return		;funcret
  6319  001EE2                     __end_of_lcd_putrs:
  6320                           	opt stack 0
  6321                           tblptru	equ	0xFF8
  6322                           tblptrh	equ	0xFF7
  6323                           tblptrl	equ	0xFF6
  6324                           tablat	equ	0xFF5
  6325                           prodh	equ	0xFF4
  6326                           prodl	equ	0xFF3
  6327                           intcon	equ	0xFF2
  6328                           indf0	equ	0xFEF
  6329                           postinc0	equ	0xFEE
  6330                           fsr0h	equ	0xFEA
  6331                           fsr0l	equ	0xFE9
  6332                           wreg	equ	0xFE8
  6333                           indf1	equ	0xFE7
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           fsr2h	equ	0xFDA
  6341                           fsr2l	equ	0xFD9
  6342                           status	equ	0xFD8
  6343                           
  6344 ;; *************** function _lcd_putc *****************
  6345 ;; Defined at:
  6346 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  c               1    wreg     unsigned char 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  c               1    7[COMRAM] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;		None               void
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;Total ram usage:        1 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    3
  6367 ;; This function calls:
  6368 ;;		_lcd_gotoxy
  6369 ;;		_lcd_send_byte
  6370 ;; This function is called by:
  6371 ;;		_lcd_putrs
  6372 ;;		_lcd_puts
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text45
  6377  001FCA                     __ptext45:
  6378                           	opt stack 0
  6379  001FCA                     _lcd_putc:
  6380                           	opt stack 24
  6381                           
  6382                           ;incstack = 0
  6383                           ;lcd_putc@c stored from wreg
  6384  001FCA  6E2D               	movwf	lcd_putc@c,c
  6385                           
  6386                           ;unmc_lcd_216.c: 173: switch(c){
  6387  001FCC  D018               	goto	l2318
  6388  001FCE                     l2308:
  6389                           
  6390                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  6391  001FCE  0E01               	movlw	1
  6392  001FD0  6E28               	movwf	lcd_send_byte@n,c
  6393  001FD2  0E00               	movlw	0
  6394  001FD4  EC8D  F011         	call	_lcd_send_byte
  6395                           
  6396                           ;unmc_lcd_216.c: 176: break;
  6397  001FD8  0012               	return	
  6398  001FDA                     l2310:
  6399                           
  6400                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  6401  001FDA  0E02               	movlw	2
  6402  001FDC  6E2A               	movwf	lcd_gotoxy@y,c
  6403  001FDE  0E01               	movlw	1
  6404  001FE0  ECFB  F011         	call	_lcd_gotoxy
  6405                           
  6406                           ;unmc_lcd_216.c: 179: break;
  6407  001FE4  0012               	return	
  6408  001FE6                     l2312:
  6409                           
  6410                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  6411  001FE6  0E10               	movlw	16
  6412  001FE8  6E28               	movwf	lcd_send_byte@n,c
  6413  001FEA  0E00               	movlw	0
  6414  001FEC  EC8D  F011         	call	_lcd_send_byte
  6415                           
  6416                           ;unmc_lcd_216.c: 182: break;
  6417  001FF0  0012               	return	
  6418  001FF2                     l2314:
  6419                           
  6420                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  6421  001FF2  C02D  F028         	movff	lcd_putc@c,lcd_send_byte@n
  6422  001FF6  0E01               	movlw	1
  6423  001FF8  EC8D  F011         	call	_lcd_send_byte
  6424                           
  6425                           ;unmc_lcd_216.c: 186: }
  6426                           
  6427                           ;unmc_lcd_216.c: 185: break;
  6428  001FFC  0012               	return	
  6429  001FFE                     l2318:
  6430  001FFE  502D               	movf	lcd_putc@c,w,c
  6431                           
  6432                           ; Switch size 1, requested type "space"
  6433                           ; Number of cases is 3, Range of values is 8 to 12
  6434                           ; switch strategies available:
  6435                           ; Name         Instructions Cycles
  6436                           ; simple_byte           10     6 (average)
  6437                           ;	Chosen strategy is simple_byte
  6438  002000  0A08               	xorlw	8	; case 8
  6439  002002  B4D8               	btfsc	status,2,c
  6440  002004  D7F0               	goto	l2312
  6441  002006  0A02               	xorlw	2	; case 10
  6442  002008  B4D8               	btfsc	status,2,c
  6443  00200A  D7E7               	goto	l2310
  6444  00200C  0A06               	xorlw	6	; case 12
  6445  00200E  B4D8               	btfsc	status,2,c
  6446  002010  D7DE               	goto	l2308
  6447  002012  D7EF               	goto	l2314
  6448  002014  0012               	return		;funcret
  6449  002016                     __end_of_lcd_putc:
  6450                           	opt stack 0
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           intcon	equ	0xFF2
  6458                           indf0	equ	0xFEF
  6459                           postinc0	equ	0xFEE
  6460                           fsr0h	equ	0xFEA
  6461                           fsr0l	equ	0xFE9
  6462                           wreg	equ	0xFE8
  6463                           indf1	equ	0xFE7
  6464                           postdec1	equ	0xFE5
  6465                           fsr1h	equ	0xFE2
  6466                           fsr1l	equ	0xFE1
  6467                           indf2	equ	0xFDF
  6468                           postinc2	equ	0xFDE
  6469                           postdec2	equ	0xFDD
  6470                           fsr2h	equ	0xFDA
  6471                           fsr2l	equ	0xFD9
  6472                           status	equ	0xFD8
  6473                           
  6474 ;; *************** function _lcd_gotoxy *****************
  6475 ;; Defined at:
  6476 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  x               1    wreg     unsigned char 
  6479 ;;  y               1    4[COMRAM] unsigned char 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  x               1    5[COMRAM] unsigned char 
  6482 ;;  address         1    6[COMRAM] unsigned char 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;		None               void
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6492 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6495 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6496 ;;Total ram usage:        3 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    2
  6499 ;; This function calls:
  6500 ;;		_lcd_send_byte
  6501 ;; This function is called by:
  6502 ;;		_lcd_write
  6503 ;;		_activity_pin
  6504 ;;		_lcd_putc
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text46
  6509  0023F6                     __ptext46:
  6510                           	opt stack 0
  6511  0023F6                     _lcd_gotoxy:
  6512                           	opt stack 24
  6513                           
  6514                           ;incstack = 0
  6515                           ;lcd_gotoxy@x stored from wreg
  6516  0023F6  6E2B               	movwf	lcd_gotoxy@x,c
  6517                           
  6518                           ;unmc_lcd_216.c: 159: int8 address;
  6519                           ;unmc_lcd_216.c: 161: if(y != 1)
  6520  0023F8  042A               	decf	lcd_gotoxy@y,w,c
  6521  0023FA  B4D8               	btfsc	status,2,c
  6522  0023FC  D002               	goto	l2300
  6523                           
  6524                           ;unmc_lcd_216.c: 162: address = 0x40;
  6525  0023FE  0E40               	movlw	64
  6526  002400  D001               	goto	L1
  6527  002402                     l2300:
  6528                           
  6529                           ;unmc_lcd_216.c: 163: else
  6530                           ;unmc_lcd_216.c: 164: address=0;
  6531  002402  0E00               	movlw	0
  6532  002404                     L1:
  6533  002404  6E2C               	movwf	lcd_gotoxy@address,c
  6534  002406  D000               	goto	l2302
  6535  002408                     l2302:
  6536                           
  6537                           ;unmc_lcd_216.c: 166: address += x-1;
  6538  002408  042B               	decf	lcd_gotoxy@x,w,c
  6539  00240A  262C               	addwf	lcd_gotoxy@address,f,c
  6540                           
  6541                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  6542  00240C  502C               	movf	lcd_gotoxy@address,w,c
  6543  00240E  0980               	iorlw	128
  6544  002410  6E28               	movwf	lcd_send_byte@n,c
  6545  002412  0E00               	movlw	0
  6546  002414  EC8D  F011         	call	_lcd_send_byte
  6547  002418  0012               	return		;funcret
  6548  00241A                     __end_of_lcd_gotoxy:
  6549                           	opt stack 0
  6550                           tblptru	equ	0xFF8
  6551                           tblptrh	equ	0xFF7
  6552                           tblptrl	equ	0xFF6
  6553                           tablat	equ	0xFF5
  6554                           prodh	equ	0xFF4
  6555                           prodl	equ	0xFF3
  6556                           intcon	equ	0xFF2
  6557                           indf0	equ	0xFEF
  6558                           postinc0	equ	0xFEE
  6559                           fsr0h	equ	0xFEA
  6560                           fsr0l	equ	0xFE9
  6561                           wreg	equ	0xFE8
  6562                           indf1	equ	0xFE7
  6563                           postdec1	equ	0xFE5
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           fsr2h	equ	0xFDA
  6570                           fsr2l	equ	0xFD9
  6571                           status	equ	0xFD8
  6572                           
  6573 ;; *************** function _lcd_init *****************
  6574 ;; Defined at:
  6575 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  i               1    4[COMRAM] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;		None               void
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6593 ;;Total ram usage:        1 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    2
  6596 ;; This function calls:
  6597 ;;		_Delay1KTCYx
  6598 ;;		_lcd_send_byte
  6599 ;;		_lcd_send_nibble
  6600 ;; This function is called by:
  6601 ;;		_setup
  6602 ;;		_activity_home
  6603 ;;		_activity_pin
  6604 ;;		_activity_menu
  6605 ;;		_activity_submenu_activation
  6606 ;;		_activity_submenu_clock
  6607 ;;		_activity_submenu_pin
  6608 ;;		_activity_submenu_alarm
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text47
  6613  001A06                     __ptext47:
  6614                           	opt stack 0
  6615  001A06                     _lcd_init:
  6616                           	opt stack 27
  6617                           
  6618                           ;unmc_lcd_216.c: 120: int8 i;
  6619                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  6620                           
  6621                           ;incstack = 0
  6622  001A06  9693               	bcf	3987,3,c	;volatile
  6623                           
  6624                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  6625  001A08  9493               	bcf	3987,2,c	;volatile
  6626                           
  6627                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  6628  001A0A  968A               	bcf	3978,3,c	;volatile
  6629                           
  6630                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  6631  001A0C  948A               	bcf	3978,2,c	;volatile
  6632                           
  6633                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  6634  001A0E  9893               	bcf	3987,4,c	;volatile
  6635                           
  6636                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  6637  001A10  9A93               	bcf	3987,5,c	;volatile
  6638                           
  6639                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  6640  001A12  9C93               	bcf	3987,6,c	;volatile
  6641                           
  6642                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  6643  001A14  9E93               	bcf	3987,7,c	;volatile
  6644                           
  6645                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  6646  001A16  0E0A               	movlw	10
  6647  001A18  EC65  F012         	call	_Delay1KTCYx
  6648                           
  6649                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  6650  001A1C  0E0A               	movlw	10
  6651  001A1E  EC65  F012         	call	_Delay1KTCYx
  6652                           
  6653                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  6654  001A22  0E0A               	movlw	10
  6655  001A24  EC65  F012         	call	_Delay1KTCYx
  6656                           
  6657                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  6658  001A28  0E00               	movlw	0
  6659  001A2A  6E2A               	movwf	lcd_init@i,c
  6660  001A2C                     l2342:
  6661  001A2C  0E02               	movlw	2
  6662  001A2E  642A               	cpfsgt	lcd_init@i,c
  6663  001A30  D001               	goto	l2346
  6664  001A32  D008               	goto	l2352
  6665  001A34                     l2346:
  6666                           
  6667                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  6668  001A34  0E03               	movlw	3
  6669  001A36  EC43  F00D         	call	_lcd_send_nibble
  6670                           
  6671                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  6672  001A3A  0E0A               	movlw	10
  6673  001A3C  EC65  F012         	call	_Delay1KTCYx
  6674  001A40  2A2A               	incf	lcd_init@i,f,c
  6675  001A42  D7F4               	goto	l2342
  6676  001A44                     l2352:
  6677                           
  6678                           ;unmc_lcd_216.c: 146: }
  6679                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  6680  001A44  0E02               	movlw	2
  6681  001A46  EC43  F00D         	call	_lcd_send_nibble
  6682                           
  6683                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  6684  001A4A  0E00               	movlw	0
  6685  001A4C  6E2A               	movwf	lcd_init@i,c
  6686  001A4E  0E03               	movlw	3
  6687  001A50  642A               	cpfsgt	lcd_init@i,c
  6688  001A52  D002               	goto	l2360
  6689  001A54  0012               	return	
  6690  001A56  0012               	return	
  6691  001A58                     l2360:
  6692                           
  6693                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  6694  001A58  502A               	movf	lcd_init@i,w,c
  6695  001A5A  0D01               	mullw	1
  6696  001A5C  0E0B               	movlw	low _LCD_INIT_STRING
  6697  001A5E  24F3               	addwf	prodl,w,c
  6698  001A60  6EF6               	movwf	tblptrl,c
  6699  001A62  0E0F               	movlw	high _LCD_INIT_STRING
  6700  001A64  20F4               	addwfc	prodh,w,c
  6701  001A66  6EF7               	movwf	tblptrh,c
  6702  001A68                     	if	0	;There are less than 3 active tblptr bytes
  6703  001A68                     	endif
  6704  001A68  0008               	tblrd		*
  6705  001A6A  CFF5 F028          	movff	tablat,lcd_send_byte@n
  6706  001A6E  0E00               	movlw	0
  6707  001A70  EC8D  F011         	call	_lcd_send_byte
  6708                           
  6709                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  6710  001A74  0E0A               	movlw	10
  6711  001A76  EC65  F012         	call	_Delay1KTCYx
  6712  001A7A  2A2A               	incf	lcd_init@i,f,c
  6713  001A7C  0E03               	movlw	3
  6714  001A7E  642A               	cpfsgt	lcd_init@i,c
  6715  001A80  D7EB               	goto	l2360
  6716  001A82  0012               	return	
  6717  001A84  0012               	return		;funcret
  6718  001A86                     __end_of_lcd_init:
  6719                           	opt stack 0
  6720                           tblptru	equ	0xFF8
  6721                           tblptrh	equ	0xFF7
  6722                           tblptrl	equ	0xFF6
  6723                           tablat	equ	0xFF5
  6724                           prodh	equ	0xFF4
  6725                           prodl	equ	0xFF3
  6726                           intcon	equ	0xFF2
  6727                           indf0	equ	0xFEF
  6728                           postinc0	equ	0xFEE
  6729                           fsr0h	equ	0xFEA
  6730                           fsr0l	equ	0xFE9
  6731                           wreg	equ	0xFE8
  6732                           indf1	equ	0xFE7
  6733                           postdec1	equ	0xFE5
  6734                           fsr1h	equ	0xFE2
  6735                           fsr1l	equ	0xFE1
  6736                           indf2	equ	0xFDF
  6737                           postinc2	equ	0xFDE
  6738                           postdec2	equ	0xFDD
  6739                           fsr2h	equ	0xFDA
  6740                           fsr2l	equ	0xFD9
  6741                           status	equ	0xFD8
  6742                           
  6743 ;; *************** function _lcd_send_byte *****************
  6744 ;; Defined at:
  6745 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  address         1    wreg     unsigned char 
  6748 ;;  n               1    2[COMRAM] unsigned char 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  address         1    3[COMRAM] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;		None               void
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6760 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6764 ;;Total ram usage:        2 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    1
  6767 ;; This function calls:
  6768 ;;		_Delay100TCYx
  6769 ;;		_lcd_send_nibble
  6770 ;; This function is called by:
  6771 ;;		_lcd_init
  6772 ;;		_lcd_gotoxy
  6773 ;;		_lcd_putc
  6774 ;;		_lcd_comand
  6775 ;;		_lcd_setcursor_vb
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text48
  6780  00231A                     __ptext48:
  6781                           	opt stack 0
  6782  00231A                     _lcd_send_byte:
  6783                           	opt stack 27
  6784                           
  6785                           ;incstack = 0
  6786                           ;lcd_send_byte@address stored from wreg
  6787  00231A  6E29               	movwf	lcd_send_byte@address,c
  6788                           
  6789                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  6790  00231C  968A               	bcf	3978,3,c	;volatile
  6791                           
  6792                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  6793  00231E  0E02               	movlw	2
  6794  002320  EC5C  F012         	call	_Delay100TCYx
  6795                           
  6796                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  6797  002324  9893               	bcf	3987,4,c	;volatile
  6798                           
  6799                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  6800  002326  9A93               	bcf	3987,5,c	;volatile
  6801                           
  6802                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  6803  002328  9C93               	bcf	3987,6,c	;volatile
  6804                           
  6805                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  6806  00232A  9E93               	bcf	3987,7,c	;volatile
  6807                           
  6808                           ;unmc_lcd_216.c: 101: if(address)
  6809  00232C  5029               	movf	lcd_send_byte@address,w,c
  6810  00232E  B4D8               	btfsc	status,2,c
  6811  002330  D002               	goto	l369
  6812                           
  6813                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  6814  002332  868A               	bsf	3978,3,c	;volatile
  6815  002334  D001               	goto	l370
  6816  002336                     l369:
  6817                           
  6818                           ;unmc_lcd_216.c: 103: else
  6819                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  6820  002336  968A               	bcf	3978,3,c	;volatile
  6821  002338                     l370:
  6822                           
  6823                           ;unmc_lcd_216.c: 106: __nop();
  6824  002338  F000               	nop	
  6825                           
  6826                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  6827  00233A  3828               	swapf	lcd_send_byte@n,w,c
  6828  00233C  0B0F               	andlw	15
  6829  00233E  EC43  F00D         	call	_lcd_send_nibble
  6830                           
  6831                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  6832  002342  5028               	movf	lcd_send_byte@n,w,c
  6833  002344  0B0F               	andlw	15
  6834  002346  EC43  F00D         	call	_lcd_send_nibble
  6835  00234A  0012               	return		;funcret
  6836  00234C                     __end_of_lcd_send_byte:
  6837                           	opt stack 0
  6838                           tblptru	equ	0xFF8
  6839                           tblptrh	equ	0xFF7
  6840                           tblptrl	equ	0xFF6
  6841                           tablat	equ	0xFF5
  6842                           prodh	equ	0xFF4
  6843                           prodl	equ	0xFF3
  6844                           intcon	equ	0xFF2
  6845                           indf0	equ	0xFEF
  6846                           postinc0	equ	0xFEE
  6847                           fsr0h	equ	0xFEA
  6848                           fsr0l	equ	0xFE9
  6849                           wreg	equ	0xFE8
  6850                           indf1	equ	0xFE7
  6851                           postdec1	equ	0xFE5
  6852                           fsr1h	equ	0xFE2
  6853                           fsr1l	equ	0xFE1
  6854                           indf2	equ	0xFDF
  6855                           postinc2	equ	0xFDE
  6856                           postdec2	equ	0xFDD
  6857                           fsr2h	equ	0xFDA
  6858                           fsr2l	equ	0xFD9
  6859                           status	equ	0xFD8
  6860                           
  6861 ;; *************** function _lcd_send_nibble *****************
  6862 ;; Defined at:
  6863 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  nibble          1    wreg     unsigned char 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  nibble          1    1[COMRAM] unsigned char 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;		None               void
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;Total ram usage:        2 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_lcd_send_byte
  6887 ;;		_lcd_init
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text49
  6892  001A86                     __ptext49:
  6893                           	opt stack 0
  6894  001A86                     _lcd_send_nibble:
  6895                           	opt stack 28
  6896                           
  6897                           ;incstack = 0
  6898                           ;lcd_send_nibble@nibble stored from wreg
  6899  001A86  6E27               	movwf	lcd_send_nibble@nibble,c
  6900                           
  6901                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  6902  001A88  A027               	btfss	lcd_send_nibble@nibble,0,c
  6903  001A8A  D003               	goto	u1190
  6904  001A8C  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  6905  001A8E  2A26               	incf	??_lcd_send_nibble& (0+255),f,c
  6906  001A90  D001               	goto	u1208
  6907  001A92                     u1190:
  6908  001A92  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  6909  001A94                     u1208:
  6910  001A94  3A26               	swapf	??_lcd_send_nibble,f,c
  6911  001A96  508A               	movf	3978,w,c	;volatile
  6912  001A98  1826               	xorwf	??_lcd_send_nibble,w,c
  6913  001A9A  0BEF               	andlw	-17
  6914  001A9C  1826               	xorwf	??_lcd_send_nibble,w,c
  6915  001A9E  6E8A               	movwf	3978,c	;volatile
  6916                           
  6917                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  6918  001AA0  A227               	btfss	lcd_send_nibble@nibble,1,c
  6919  001AA2  D003               	goto	u1210
  6920  001AA4  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  6921  001AA6  2A26               	incf	??_lcd_send_nibble& (0+255),f,c
  6922  001AA8  D001               	goto	u1228
  6923  001AAA                     u1210:
  6924  001AAA  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  6925  001AAC                     u1228:
  6926  001AAC  3A26               	swapf	??_lcd_send_nibble,f,c
  6927  001AAE  4626               	rlncf	??_lcd_send_nibble,f,c
  6928  001AB0  508A               	movf	3978,w,c	;volatile
  6929  001AB2  1826               	xorwf	??_lcd_send_nibble,w,c
  6930  001AB4  0BDF               	andlw	-33
  6931  001AB6  1826               	xorwf	??_lcd_send_nibble,w,c
  6932  001AB8  6E8A               	movwf	3978,c	;volatile
  6933                           
  6934                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  6935  001ABA  A427               	btfss	lcd_send_nibble@nibble,2,c
  6936  001ABC  D003               	goto	u1230
  6937  001ABE  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  6938  001AC0  2A26               	incf	??_lcd_send_nibble& (0+255),f,c
  6939  001AC2  D001               	goto	u1248
  6940  001AC4                     u1230:
  6941  001AC4  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  6942  001AC6                     u1248:
  6943  001AC6  3A26               	swapf	??_lcd_send_nibble,f,c
  6944  001AC8  4626               	rlncf	??_lcd_send_nibble,f,c
  6945  001ACA  4626               	rlncf	??_lcd_send_nibble,f,c
  6946  001ACC  508A               	movf	3978,w,c	;volatile
  6947  001ACE  1826               	xorwf	??_lcd_send_nibble,w,c
  6948  001AD0  0BBF               	andlw	-65
  6949  001AD2  1826               	xorwf	??_lcd_send_nibble,w,c
  6950  001AD4  6E8A               	movwf	3978,c	;volatile
  6951                           
  6952                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  6953  001AD6  A627               	btfss	lcd_send_nibble@nibble,3,c
  6954  001AD8  D003               	goto	u1250
  6955  001ADA  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  6956  001ADC  2A26               	incf	??_lcd_send_nibble& (0+255),f,c
  6957  001ADE  D001               	goto	u1268
  6958  001AE0                     u1250:
  6959  001AE0  6A26               	clrf	??_lcd_send_nibble& (0+255),c
  6960  001AE2                     u1268:
  6961  001AE2  3226               	rrcf	??_lcd_send_nibble,f,c
  6962  001AE4  3226               	rrcf	??_lcd_send_nibble,f,c
  6963  001AE6  508A               	movf	3978,w,c	;volatile
  6964  001AE8  1826               	xorwf	??_lcd_send_nibble,w,c
  6965  001AEA  0B7F               	andlw	-129
  6966  001AEC  1826               	xorwf	??_lcd_send_nibble,w,c
  6967  001AEE  6E8A               	movwf	3978,c	;volatile
  6968                           
  6969                           ;unmc_lcd_216.c: 32: __nop();
  6970  001AF0  F000               	nop	
  6971                           
  6972                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  6973  001AF2  848A               	bsf	3978,2,c	;volatile
  6974                           
  6975                           ;unmc_lcd_216.c: 34: __nop();__nop();
  6976  001AF4  F000               	nop	
  6977  001AF6  F000               	nop	
  6978                           
  6979                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  6980  001AF8  948A               	bcf	3978,2,c	;volatile
  6981  001AFA  0012               	return		;funcret
  6982  001AFC                     __end_of_lcd_send_nibble:
  6983                           	opt stack 0
  6984                           tblptru	equ	0xFF8
  6985                           tblptrh	equ	0xFF7
  6986                           tblptrl	equ	0xFF6
  6987                           tablat	equ	0xFF5
  6988                           prodh	equ	0xFF4
  6989                           prodl	equ	0xFF3
  6990                           intcon	equ	0xFF2
  6991                           indf0	equ	0xFEF
  6992                           postinc0	equ	0xFEE
  6993                           fsr0h	equ	0xFEA
  6994                           fsr0l	equ	0xFE9
  6995                           wreg	equ	0xFE8
  6996                           indf1	equ	0xFE7
  6997                           postdec1	equ	0xFE5
  6998                           fsr1h	equ	0xFE2
  6999                           fsr1l	equ	0xFE1
  7000                           indf2	equ	0xFDF
  7001                           postinc2	equ	0xFDE
  7002                           postdec2	equ	0xFDD
  7003                           fsr2h	equ	0xFDA
  7004                           fsr2l	equ	0xFD9
  7005                           status	equ	0xFD8
  7006                           
  7007 ;; *************** function _Delay100TCYx *****************
  7008 ;; Defined at:
  7009 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  unit            1    wreg     unsigned char 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  unit            1    0[COMRAM] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;		None               void
  7016 ;; Registers used:
  7017 ;;		wreg
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7027 ;;Total ram usage:        1 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_lcd_send_byte
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text50
  7037  0024B8                     __ptext50:
  7038                           	opt stack 0
  7039  0024B8                     _Delay100TCYx:
  7040                           	opt stack 27
  7041                           
  7042                           ;incstack = 0
  7043                           ;Delay100TCYx@unit stored from wreg
  7044  0024B8  6E26               	movwf	Delay100TCYx@unit,c
  7045  0024BA  0E21               	movlw	33
  7046  0024BC                     u2387:
  7047  0024BC  2EE8               	decfsz	wreg,f,c
  7048  0024BE  D7FE               	goto	u2387
  7049  0024C0  F000               	nop	
  7050  0024C2  2E26               	decfsz	Delay100TCYx@unit,f,c
  7051  0024C4  D7FA               	goto	l2274
  7052  0024C6  0012               	return	
  7053  0024C8  0012               	return		;funcret
  7054  0024CA                     __end_of_Delay100TCYx:
  7055                           	opt stack 0
  7056                           tblptru	equ	0xFF8
  7057                           tblptrh	equ	0xFF7
  7058                           tblptrl	equ	0xFF6
  7059                           tablat	equ	0xFF5
  7060                           prodh	equ	0xFF4
  7061                           prodl	equ	0xFF3
  7062                           intcon	equ	0xFF2
  7063                           indf0	equ	0xFEF
  7064                           postinc0	equ	0xFEE
  7065                           fsr0h	equ	0xFEA
  7066                           fsr0l	equ	0xFE9
  7067                           wreg	equ	0xFE8
  7068                           indf1	equ	0xFE7
  7069                           postdec1	equ	0xFE5
  7070                           fsr1h	equ	0xFE2
  7071                           fsr1l	equ	0xFE1
  7072                           indf2	equ	0xFDF
  7073                           postinc2	equ	0xFDE
  7074                           postdec2	equ	0xFDD
  7075                           fsr2h	equ	0xFDA
  7076                           fsr2l	equ	0xFD9
  7077                           status	equ	0xFD8
  7078                           
  7079 ;; *************** function _Delay1KTCYx *****************
  7080 ;; Defined at:
  7081 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  unit            1    wreg     unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  unit            1    0[COMRAM] unsigned char 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;		None               void
  7088 ;; Registers used:
  7089 ;;		wreg
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;Total ram usage:        1 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_lcd_init
  7105 ;;		_DelayPORXLCD
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           	psect	text51
  7110  0024CA                     __ptext51:
  7111                           	opt stack 0
  7112  0024CA                     _Delay1KTCYx:
  7113                           	opt stack 28
  7114                           
  7115                           ;incstack = 0
  7116                           ;Delay1KTCYx@unit stored from wreg
  7117  0024CA  6E26               	movwf	Delay1KTCYx@unit,c
  7118  0024CC  0EFA               	movlw	250
  7119  0024CE                     u2397:
  7120  0024CE  F000               	nop	
  7121  0024D0  2EE8               	decfsz	wreg,f,c
  7122  0024D2  D7FD               	goto	u2397
  7123  0024D4  2E26               	decfsz	Delay1KTCYx@unit,f,c
  7124  0024D6  D7FA               	goto	l2328
  7125  0024D8  0012               	return	
  7126  0024DA  0012               	return		;funcret
  7127  0024DC                     __end_of_Delay1KTCYx:
  7128                           	opt stack 0
  7129                           tblptru	equ	0xFF8
  7130                           tblptrh	equ	0xFF7
  7131                           tblptrl	equ	0xFF6
  7132                           tablat	equ	0xFF5
  7133                           prodh	equ	0xFF4
  7134                           prodl	equ	0xFF3
  7135                           intcon	equ	0xFF2
  7136                           indf0	equ	0xFEF
  7137                           postinc0	equ	0xFEE
  7138                           fsr0h	equ	0xFEA
  7139                           fsr0l	equ	0xFE9
  7140                           wreg	equ	0xFE8
  7141                           indf1	equ	0xFE7
  7142                           postdec1	equ	0xFE5
  7143                           fsr1h	equ	0xFE2
  7144                           fsr1l	equ	0xFE1
  7145                           indf2	equ	0xFDF
  7146                           postinc2	equ	0xFDE
  7147                           postdec2	equ	0xFDD
  7148                           fsr2h	equ	0xFDA
  7149                           fsr2l	equ	0xFD9
  7150                           status	equ	0xFD8
  7151                           
  7152 ;; *************** function _Read_RTC *****************
  7153 ;; Defined at:
  7154 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;		None               void
  7161 ;; Registers used:
  7162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7172 ;;Total ram usage:        0 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:    1
  7175 ;; This function calls:
  7176 ;;		_RtccReadDate
  7177 ;;		_RtccReadTime
  7178 ;; This function is called by:
  7179 ;;		_main
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text52
  7184  0016F0                     __ptext52:
  7185                           	opt stack 0
  7186  0016F0                     _Read_RTC:
  7187                           	opt stack 29
  7188                           
  7189                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  7190                           
  7191                           ;incstack = 0
  7192  0016F0  0E22               	movlw	low _RtccTime
  7193  0016F2  6E26               	movwf	RtccReadTime@pTm,c
  7194  0016F4  0E00               	movlw	high _RtccTime
  7195  0016F6  6E27               	movwf	RtccReadTime@pTm+1,c
  7196  0016F8  ECB8  F00D         	call	_RtccReadTime	;wreg free
  7197                           
  7198                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  7199  0016FC  5023               	movf	_RtccTime+1,w,c
  7200  0016FE  0B0F               	andlw	15
  7201  001700  6E54               	movwf	_segundo_u,c
  7202                           
  7203                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  7204  001702  3823               	swapf	_RtccTime+1,w,c
  7205  001704  0B0F               	andlw	15
  7206  001706  0B0F               	andlw	15
  7207  001708  6E53               	movwf	_segundo_d,c
  7208                           
  7209                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  7210  00170A  5024               	movf	_RtccTime+2,w,c
  7211  00170C  0B0F               	andlw	15
  7212  00170E  6E52               	movwf	_minuto_u,c
  7213                           
  7214                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  7215  001710  3824               	swapf	_RtccTime+2,w,c
  7216  001712  0B0F               	andlw	15
  7217  001714  0B0F               	andlw	15
  7218  001716  6E51               	movwf	_minuto_d,c
  7219                           
  7220                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  7221  001718  5025               	movf	_RtccTime+3,w,c
  7222  00171A  0B0F               	andlw	15
  7223  00171C  6E4E               	movwf	_hora_u,c
  7224                           
  7225                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  7226  00171E  3825               	swapf	_RtccTime+3,w,c
  7227  001720  0B0F               	andlw	15
  7228  001722  0B0F               	andlw	15
  7229  001724  6E4D               	movwf	_hora_d,c
  7230                           
  7231                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  7232  001726  0E1E               	movlw	low _RtccDate
  7233  001728  6E26               	movwf	RtccReadDate@pDt,c
  7234  00172A  0E00               	movlw	high _RtccDate
  7235  00172C  6E27               	movwf	RtccReadDate@pDt+1,c
  7236  00172E  EC7B  F00C         	call	_RtccReadDate	;wreg free
  7237                           
  7238                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  7239  001732  501F               	movf	_RtccDate+1,w,c
  7240  001734  0B0F               	andlw	15
  7241  001736  6E4C               	movwf	_fecha_u,c
  7242                           
  7243                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  7244  001738  381F               	swapf	_RtccDate+1,w,c
  7245  00173A  0B0F               	andlw	15
  7246  00173C  0B0F               	andlw	15
  7247  00173E  6E4B               	movwf	_fecha_d,c
  7248                           
  7249                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  7250  001740  5020               	movf	_RtccDate+2,w,c
  7251  001742  0B0F               	andlw	15
  7252  001744  6E50               	movwf	_mes_u,c
  7253                           
  7254                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  7255  001746  3820               	swapf	_RtccDate+2,w,c
  7256  001748  0B0F               	andlw	15
  7257  00174A  0B0F               	andlw	15
  7258  00174C  6E4F               	movwf	_mes_d,c
  7259                           
  7260                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  7261  00174E  C01E  F09B         	movff	_RtccDate,_dia_semana
  7262                           
  7263                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  7264  001752  5021               	movf	_RtccDate+3,w,c
  7265  001754  0B0F               	andlw	15
  7266  001756  0100               	movlb	0	; () banked
  7267  001758  6F9A               	movwf	_anio_u& (0+255),b
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  7271  00175A  3821               	swapf	_RtccDate+3,w,c
  7272  00175C  0B0F               	andlw	15
  7273  00175E  0B0F               	andlw	15
  7274  001760  6E4A               	movwf	_anio_d,c
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  7278  001762  5053               	movf	_segundo_d,w,c
  7279  001764  0D0A               	mullw	10
  7280  001766  5054               	movf	_segundo_u,w,c
  7281  001768  24F3               	addwf	prodl,w,c
  7282  00176A  6E17               	movwf	_segundo,c
  7283  00176C  0E00               	movlw	0
  7284  00176E  20F4               	addwfc	prodh,w,c
  7285  001770  6E18               	movwf	_segundo+1,c
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  7289  001772  5051               	movf	_minuto_d,w,c
  7290  001774  0D0A               	mullw	10
  7291  001776  5052               	movf	_minuto_u,w,c
  7292  001778  24F3               	addwf	prodl,w,c
  7293  00177A  6E15               	movwf	_minuto,c
  7294  00177C  0E00               	movlw	0
  7295  00177E  20F4               	addwfc	prodh,w,c
  7296  001780  6E16               	movwf	_minuto+1,c
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  7300  001782  504D               	movf	_hora_d,w,c
  7301  001784  0D0A               	mullw	10
  7302  001786  504E               	movf	_hora_u,w,c
  7303  001788  24F3               	addwf	prodl,w,c
  7304  00178A  6E5B               	movwf	_hora,c
  7305  00178C  0E00               	movlw	0
  7306  00178E  20F4               	addwfc	prodh,w,c
  7307  001790  6E5C               	movwf	_hora+1,c
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  7311  001792  504B               	movf	_fecha_d,w,c
  7312  001794  0D0A               	mullw	10
  7313  001796  504C               	movf	_fecha_u,w,c
  7314  001798  24F3               	addwf	prodl,w,c
  7315  00179A  6E57               	movwf	_dia,c
  7316  00179C  0E00               	movlw	0
  7317  00179E  20F4               	addwfc	prodh,w,c
  7318  0017A0  6E58               	movwf	_dia+1,c
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  7322  0017A2  C09B  F059         	movff	_dia_semana,_diasem
  7323  0017A6  6A5A               	clrf	_diasem+1,c
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  7327  0017A8  504F               	movf	_mes_d,w,c
  7328  0017AA  0D0A               	mullw	10
  7329  0017AC  5050               	movf	_mes_u,w,c
  7330  0017AE  24F3               	addwf	prodl,w,c
  7331  0017B0  6E5D               	movwf	_mes,c
  7332  0017B2  0E00               	movlw	0
  7333  0017B4  20F4               	addwfc	prodh,w,c
  7334  0017B6  6E5E               	movwf	_mes+1,c
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  7338  0017B8  504A               	movf	_anio_d,w,c
  7339  0017BA  0D0A               	mullw	10
  7340  0017BC  0100               	movlb	0	; () banked
  7341  0017BE  519A               	movf	_anio_u& (0+255),w,b
  7342  0017C0  24F3               	addwf	prodl,w,c
  7343  0017C2  6E55               	movwf	_anio,c
  7344  0017C4  0100               	movlb	0	; () banked
  7345  0017C6  0E00               	movlw	0
  7346  0017C8  20F4               	addwfc	prodh,w,c
  7347  0017CA  6E56               	movwf	_anio+1,c
  7348                           
  7349                           ; BSR set to: 0
  7350  0017CC  0012               	return		;funcret
  7351  0017CE                     __end_of_Read_RTC:
  7352                           	opt stack 0
  7353                           tblptru	equ	0xFF8
  7354                           tblptrh	equ	0xFF7
  7355                           tblptrl	equ	0xFF6
  7356                           tablat	equ	0xFF5
  7357                           prodh	equ	0xFF4
  7358                           prodl	equ	0xFF3
  7359                           intcon	equ	0xFF2
  7360                           indf0	equ	0xFEF
  7361                           postinc0	equ	0xFEE
  7362                           fsr0h	equ	0xFEA
  7363                           fsr0l	equ	0xFE9
  7364                           wreg	equ	0xFE8
  7365                           indf1	equ	0xFE7
  7366                           postdec1	equ	0xFE5
  7367                           fsr1h	equ	0xFE2
  7368                           fsr1l	equ	0xFE1
  7369                           indf2	equ	0xFDF
  7370                           postinc2	equ	0xFDE
  7371                           postdec2	equ	0xFDD
  7372                           fsr2h	equ	0xFDA
  7373                           fsr2l	equ	0xFD9
  7374                           status	equ	0xFD8
  7375                           
  7376 ;; *************** function _RtccReadTime *****************
  7377 ;; Defined at:
  7378 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  pTm             2    0[COMRAM] PTR struct .
  7381 ;;		 -> RtccTime(4), 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  rTD0            8   10[COMRAM] struct .
  7384 ;;  rTD1            8    2[COMRAM] struct .
  7385 ;; Return value:  Size  Location     Type
  7386 ;;		None               void
  7387 ;; Registers used:
  7388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7397 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7398 ;;Total ram usage:       18 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_Read_RTC
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text53
  7408  001B70                     __ptext53:
  7409                           	opt stack 0
  7410  001B70                     _RtccReadTime:
  7411                           	opt stack 29
  7412  001B70  0EFC               	movlw	252
  7413  001B72  010F               	movlb	15	; () banked
  7414  001B74  173F               	andwf	63,f,b	;volatile
  7415                           
  7416                           ; BSR set to: 15
  7417  001B76  010F               	movlb	15	; () banked
  7418  001B78  813F               	bsf	63,0,b	;volatile
  7419                           
  7420                           ; BSR set to: 15
  7421  001B7A  CF98 F034          	movff	3992,RtccReadTime@rTD0+4	;volatile
  7422                           
  7423                           ; BSR set to: 15
  7424  001B7E  CF99 F035          	movff	3993,RtccReadTime@rTD0+5	;volatile
  7425                           
  7426                           ; BSR set to: 15
  7427  001B82  CF98 F036          	movff	3992,RtccReadTime@rTD0+6	;volatile
  7428                           
  7429                           ; BSR set to: 15
  7430  001B86  CF99 F037          	movff	3993,RtccReadTime@rTD0+7	;volatile
  7431                           
  7432                           ; BSR set to: 15
  7433  001B8A  0EFC               	movlw	252
  7434  001B8C  010F               	movlb	15	; () banked
  7435  001B8E  173F               	andwf	63,f,b	;volatile
  7436  001B90  010F               	movlb	15	; () banked
  7437  001B92  813F               	bsf	63,0,b	;volatile
  7438                           
  7439                           ; BSR set to: 15
  7440  001B94  CF98 F02C          	movff	3992,RtccReadTime@rTD1+4	;volatile
  7441                           
  7442                           ; BSR set to: 15
  7443  001B98  CF99 F02D          	movff	3993,RtccReadTime@rTD1+5	;volatile
  7444                           
  7445                           ; BSR set to: 15
  7446  001B9C  CF98 F02E          	movff	3992,RtccReadTime@rTD1+6	;volatile
  7447                           
  7448                           ; BSR set to: 15
  7449  001BA0  CF99 F02F          	movff	3993,RtccReadTime@rTD1+7	;volatile
  7450                           
  7451                           ; BSR set to: 15
  7452  001BA4  502E               	movf	RtccReadTime@rTD1+6,w,c
  7453  001BA6  1836               	xorwf	RtccReadTime@rTD0+6,w,c
  7454  001BA8  A4D8               	btfss	status,2,c
  7455  001BAA  D7E2               	goto	l2940
  7456                           
  7457                           ; BSR set to: 15
  7458                           
  7459                           ; BSR set to: 15
  7460  001BAC  EE20 F003          	lfsr	2,3
  7461  001BB0  5026               	movf	RtccReadTime@pTm,w,c
  7462  001BB2  26D9               	addwf	fsr2l,f,c
  7463  001BB4  5027               	movf	RtccReadTime@pTm+1,w,c
  7464  001BB6  22DA               	addwfc	fsr2h,f,c
  7465  001BB8  C034  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  7466  001BBC  EE20 F002          	lfsr	2,2
  7467  001BC0  5026               	movf	RtccReadTime@pTm,w,c
  7468  001BC2  26D9               	addwf	fsr2l,f,c
  7469  001BC4  5027               	movf	RtccReadTime@pTm+1,w,c
  7470  001BC6  22DA               	addwfc	fsr2h,f,c
  7471  001BC8  C037  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  7472  001BCC  EE20 F001          	lfsr	2,1
  7473  001BD0  5026               	movf	RtccReadTime@pTm,w,c
  7474  001BD2  26D9               	addwf	fsr2l,f,c
  7475  001BD4  5027               	movf	RtccReadTime@pTm+1,w,c
  7476  001BD6  22DA               	addwfc	fsr2h,f,c
  7477  001BD8  C036  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  7478                           
  7479                           ; BSR set to: 15
  7480  001BDC  0012               	return		;funcret
  7481  001BDE                     __end_of_RtccReadTime:
  7482                           	opt stack 0
  7483                           tblptru	equ	0xFF8
  7484                           tblptrh	equ	0xFF7
  7485                           tblptrl	equ	0xFF6
  7486                           tablat	equ	0xFF5
  7487                           prodh	equ	0xFF4
  7488                           prodl	equ	0xFF3
  7489                           intcon	equ	0xFF2
  7490                           indf0	equ	0xFEF
  7491                           postinc0	equ	0xFEE
  7492                           fsr0h	equ	0xFEA
  7493                           fsr0l	equ	0xFE9
  7494                           wreg	equ	0xFE8
  7495                           indf1	equ	0xFE7
  7496                           postdec1	equ	0xFE5
  7497                           fsr1h	equ	0xFE2
  7498                           fsr1l	equ	0xFE1
  7499                           indf2	equ	0xFDF
  7500                           postinc2	equ	0xFDE
  7501                           postdec2	equ	0xFDD
  7502                           fsr2h	equ	0xFDA
  7503                           fsr2l	equ	0xFD9
  7504                           status	equ	0xFD8
  7505                           
  7506 ;; *************** function _RtccReadDate *****************
  7507 ;; Defined at:
  7508 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  pDt             2    0[COMRAM] PTR struct .
  7511 ;;		 -> RtccDate(4), 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  rTD0            8   10[COMRAM] struct .
  7514 ;;  rTD1            8    2[COMRAM] struct .
  7515 ;; Return value:  Size  Location     Type
  7516 ;;		None               void
  7517 ;; Registers used:
  7518 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7525 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7527 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;Total ram usage:       18 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_Read_RTC
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text54
  7538  0018F6                     __ptext54:
  7539                           	opt stack 0
  7540  0018F6                     _RtccReadDate:
  7541                           	opt stack 29
  7542  0018F6  0EFC               	movlw	252
  7543  0018F8  010F               	movlb	15	; () banked
  7544  0018FA  173F               	andwf	63,f,b	;volatile
  7545  0018FC  0E03               	movlw	3
  7546  0018FE  010F               	movlb	15	; () banked
  7547  001900  133F               	iorwf	63,f,b	;volatile
  7548                           
  7549                           ; BSR set to: 15
  7550  001902  CF98 F030          	movff	3992,RtccReadDate@rTD0	;volatile
  7551                           
  7552                           ; BSR set to: 15
  7553  001906  CF99 F031          	movff	3993,RtccReadDate@rTD0+1	;volatile
  7554                           
  7555                           ; BSR set to: 15
  7556  00190A  CF98 F032          	movff	3992,RtccReadDate@rTD0+2	;volatile
  7557                           
  7558                           ; BSR set to: 15
  7559  00190E  CF99 F033          	movff	3993,RtccReadDate@rTD0+3	;volatile
  7560                           
  7561                           ; BSR set to: 15
  7562  001912  CF98 F034          	movff	3992,RtccReadDate@rTD0+4	;volatile
  7563                           
  7564                           ; BSR set to: 15
  7565  001916  CF99 F035          	movff	3993,RtccReadDate@rTD0+5	;volatile
  7566  00191A  0EFC               	movlw	252
  7567  00191C  010F               	movlb	15	; () banked
  7568  00191E  173F               	andwf	63,f,b	;volatile
  7569  001920  0E03               	movlw	3
  7570  001922  010F               	movlb	15	; () banked
  7571  001924  133F               	iorwf	63,f,b	;volatile
  7572                           
  7573                           ; BSR set to: 15
  7574  001926  CF98 F028          	movff	3992,RtccReadDate@rTD1	;volatile
  7575                           
  7576                           ; BSR set to: 15
  7577  00192A  CF99 F029          	movff	3993,RtccReadDate@rTD1+1	;volatile
  7578                           
  7579                           ; BSR set to: 15
  7580  00192E  CF98 F02A          	movff	3992,RtccReadDate@rTD1+2	;volatile
  7581                           
  7582                           ; BSR set to: 15
  7583  001932  CF99 F02B          	movff	3993,RtccReadDate@rTD1+3	;volatile
  7584                           
  7585                           ; BSR set to: 15
  7586  001936  CF98 F02C          	movff	3992,RtccReadDate@rTD1+4	;volatile
  7587                           
  7588                           ; BSR set to: 15
  7589  00193A  CF99 F02D          	movff	3993,RtccReadDate@rTD1+5	;volatile
  7590  00193E  502A               	movf	RtccReadDate@rTD1+2,w,c
  7591  001940  1832               	xorwf	RtccReadDate@rTD0+2,w,c
  7592  001942  A4D8               	btfss	status,2,c
  7593  001944  D7D8               	goto	l2966
  7594                           
  7595                           ; BSR set to: 15
  7596                           
  7597                           ; BSR set to: 15
  7598  001946  EE20 F001          	lfsr	2,1
  7599  00194A  5026               	movf	RtccReadDate@pDt,w,c
  7600  00194C  26D9               	addwf	fsr2l,f,c
  7601  00194E  5027               	movf	RtccReadDate@pDt+1,w,c
  7602  001950  22DA               	addwfc	fsr2h,f,c
  7603  001952  C032  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  7604  001956  EE20 F002          	lfsr	2,2
  7605  00195A  5026               	movf	RtccReadDate@pDt,w,c
  7606  00195C  26D9               	addwf	fsr2l,f,c
  7607  00195E  5027               	movf	RtccReadDate@pDt+1,w,c
  7608  001960  22DA               	addwfc	fsr2h,f,c
  7609  001962  C033  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  7610                           
  7611                           ; BSR set to: 15
  7612  001966  C026  FFD9         	movff	RtccReadDate@pDt,fsr2l
  7613  00196A  C027  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  7614  00196E  C035  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  7615                           
  7616                           ; BSR set to: 15
  7617  001972  EE20 F003          	lfsr	2,3
  7618  001976  5026               	movf	RtccReadDate@pDt,w,c
  7619  001978  26D9               	addwf	fsr2l,f,c
  7620  00197A  5027               	movf	RtccReadDate@pDt+1,w,c
  7621  00197C  22DA               	addwfc	fsr2h,f,c
  7622  00197E  C030  FFDF         	movff	RtccReadDate@rTD0,indf2
  7623                           
  7624                           ; BSR set to: 15
  7625  001982  0012               	return		;funcret
  7626  001984                     __end_of_RtccReadDate:
  7627                           	opt stack 0
  7628                           tblptru	equ	0xFF8
  7629                           tblptrh	equ	0xFF7
  7630                           tblptrl	equ	0xFF6
  7631                           tablat	equ	0xFF5
  7632                           prodh	equ	0xFF4
  7633                           prodl	equ	0xFF3
  7634                           intcon	equ	0xFF2
  7635                           indf0	equ	0xFEF
  7636                           postinc0	equ	0xFEE
  7637                           fsr0h	equ	0xFEA
  7638                           fsr0l	equ	0xFE9
  7639                           wreg	equ	0xFE8
  7640                           indf1	equ	0xFE7
  7641                           postdec1	equ	0xFE5
  7642                           fsr1h	equ	0xFE2
  7643                           fsr1l	equ	0xFE1
  7644                           indf2	equ	0xFDF
  7645                           postinc2	equ	0xFDE
  7646                           postdec2	equ	0xFDD
  7647                           fsr2h	equ	0xFDA
  7648                           fsr2l	equ	0xFD9
  7649                           status	equ	0xFD8
  7650                           tblptru	equ	0xFF8
  7651                           tblptrh	equ	0xFF7
  7652                           tblptrl	equ	0xFF6
  7653                           tablat	equ	0xFF5
  7654                           prodh	equ	0xFF4
  7655                           prodl	equ	0xFF3
  7656                           intcon	equ	0xFF2
  7657                           indf0	equ	0xFEF
  7658                           postinc0	equ	0xFEE
  7659                           fsr0h	equ	0xFEA
  7660                           fsr0l	equ	0xFE9
  7661                           wreg	equ	0xFE8
  7662                           indf1	equ	0xFE7
  7663                           postdec1	equ	0xFE5
  7664                           fsr1h	equ	0xFE2
  7665                           fsr1l	equ	0xFE1
  7666                           indf2	equ	0xFDF
  7667                           postinc2	equ	0xFDE
  7668                           postdec2	equ	0xFDD
  7669                           fsr2h	equ	0xFDA
  7670                           fsr2l	equ	0xFD9
  7671                           status	equ	0xFD8
  7672                           
  7673                           	psect	rparam
  7674  0000                     tblptru	equ	0xFF8
  7675                           tblptrh	equ	0xFF7
  7676                           tblptrl	equ	0xFF6
  7677                           tablat	equ	0xFF5
  7678                           prodh	equ	0xFF4
  7679                           prodl	equ	0xFF3
  7680                           intcon	equ	0xFF2
  7681                           indf0	equ	0xFEF
  7682                           postinc0	equ	0xFEE
  7683                           fsr0h	equ	0xFEA
  7684                           fsr0l	equ	0xFE9
  7685                           wreg	equ	0xFE8
  7686                           indf1	equ	0xFE7
  7687                           postdec1	equ	0xFE5
  7688                           fsr1h	equ	0xFE2
  7689                           fsr1l	equ	0xFE1
  7690                           indf2	equ	0xFDF
  7691                           postinc2	equ	0xFDE
  7692                           postdec2	equ	0xFDD
  7693                           fsr2h	equ	0xFDA
  7694                           fsr2l	equ	0xFD9
  7695                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    14
    Data        10
    BSS         95
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      95
    BANK0           160      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[1]), STR_1(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_35(CODE[2]), STR_34(CODE[5]), STR_33(CODE[8]), STR_32(CODE[7]), 
		 -> STR_31(CODE[6]), STR_30(CODE[8]), STR_29(CODE[4]), STR_28(CODE[5]), 
		 -> STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[8]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[7]), STR_17(CODE[4]), STR_16(CODE[6]), 
		 -> STR_15(CODE[8]), STR_14(CODE[16]), STR_12(CODE[4]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), buffer1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    lcd_write@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_34(CODE[5]), STR_33(CODE[8]), STR_32(CODE[7]), STR_31(CODE[6]), 
		 -> STR_30(CODE[8]), STR_29(CODE[4]), STR_28(CODE[5]), STR_27(CODE[6]), 
		 -> STR_26(CODE[6]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[8]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[7]), STR_17(CODE[4]), STR_16(CODE[6]), STR_15(CODE[8]), 
		 -> STR_14(CODE[16]), STR_12(CODE[4]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _button_hash->_pin_input_validator
    _activity_menu->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_clock->_lcd_write
    _activity_submenu_alarm->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_action_menu_selector
    _button_A->_action_submenu_selector
    _activity_pin->_lcd_write
    _lcd_comand->_lcd_send_byte
    _action_submenu_selector_1->_lcd_write
    _action_submenu_selector_0->_lcd_write
    _action_menu_selector_3->_lcd_write
    _action_menu_selector_2->_lcd_write
    _action_menu_selector_1->_lcd_write
    _action_menu_selector_0->_lcd_write
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _activity_home->_lcd_write
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  236364
                           _Read_RTC
                      _activity_home
                _check_home_callback
                 _home_clock_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4102
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  200963
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    4124
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   30263
                _pin_input_validator
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  2     2      0   30263
                                             16 COMRAM     2     2      0
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0       0
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0    9669
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   18490
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   18490
             _action_menu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0   73960
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
             _activity_submenu_alarm
             _activity_submenu_clock
               _activity_submenu_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_pin                                 0     0      0   18490
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_clock                               0     0      0   18490
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_alarm                               0     0      0   18490
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_activation                          0     0      0   18490
          _action_submenu_selector_0
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   64457
                                             18 COMRAM     2     2      0
               _action_menu_selector
            _action_submenu_selector
                       _activity_pin
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   11531
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     331
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _action_submenu_selector                              2     2      0   17642
                                             16 COMRAM     2     2      0
          _action_submenu_selector_0
          _action_submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _action_submenu_selector_1                            0     0      0    8821
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_submenu_selector_0                            0     0      0    8821
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _action_menu_selector                                 2     2      0   35284
                                             16 COMRAM     2     2      0
             _action_menu_selector_0
             _action_menu_selector_1
             _action_menu_selector_2
             _action_menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_3                               0     0      0    8821
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_2                               0     0      0    8821
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _action_menu_selector_1                               0     0      0    8821
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _action_menu_selector_0                               0     0      0    8821
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   10993
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2172
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0    9669
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _activity_home                                        0     0      0    9669
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6    8821
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1726
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1553
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1     885
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _keyboard_control
     _button_A
       _action_menu_selector
         _action_menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _action_submenu_selector
         _action_submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _action_submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_B
       _activity_submenu_activation
         _action_submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_alarm
         _action_submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_clock
         _action_submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_pin
         _action_submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_C
       _activity_menu
         _action_menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _reset_home_callback
     _button_hash
       _pin_input_validator
         _activity_menu
           _action_menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _reset_home_callback
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9B       6        0.0%
DATA                 0      0      9B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 13 23:42:52 2016

              ??_action_menu_selector 0036                                     _a 0001  
                                   _b 0005                                     _c 0007  
                                   _i 000D                                     _j 000F  
                                   _k 0011                        ?_lcd_send_byte 0028  
                        ___awdiv@sign 002B                   ___wmul@multiplicand 0028  
                         lcd_comand@d 002A              ??_action_menu_selector_0 0036  
            ??_action_menu_selector_1 0036              ??_action_menu_selector_2 0036  
            ??_action_menu_selector_3 0036                          __CFG_CP0$OFF 000000  
                     lcd_write@column 0030                                   l300 1286  
                                 l311 12C8                                   l303 129C  
                                 l320 12E8                                   l312 12C4  
                                 l304 1298                                   l331 132A  
                                 l323 1306                                   l315 12DA  
                                 l307 12B6                                   l332 1326  
                                 l324 1302                                   l316 12D6  
                                 l308 12B2                                   l327 1318  
                                 l319 12EC                                   l336 1338  
                                 l328 1314                                   l280 1224  
                                 l370 2338                                   l291 1266  
                                 l283 123A                                   l275 1216  
                                 l292 1262                                   l284 1236  
                                 l276 1212                                   l295 1278  
                                 l287 124C                                   l279 1228  
                                 l448 116A                                   l296 1274  
                                 l288 1248                                   l369 2336  
                                 l299 128A                 ??_check_home_callback 0036  
                                 _dia 0057                                   _key 001D  
                                 _mes 005D                                   _pin 0090  
                     lcd_write@string 0034                                   wreg 000FE8  
                     RtccReadDate@pDt 0026                           lcd_gotoxy@x 002B  
                         lcd_gotoxy@y 002A                     ??_button_asterisk 0026  
                                l1102 1FC0                                  l3000 227C  
                                l3002 2282                                  l2300 2402  
                                l1092 1E2E                                  l3004 2288  
                                l3020 1E48                                  l2302 2408  
                                l2310 1FDA                                  l3022 1E4E  
                                l3030 1E60                                  l2312 1FE6  
                                l3008 228E                                  l3024 1E54  
                                l2314 1FF2                                  l2322 1E90  
                                l3026 1E5A                                  l2308 1FCE  
                                l3212 1340                                  l2342 1A2C  
                                l2318 1FFE                                  l2326 1EBA  
                                l2510 1FB4                                  l2502 1F8C  
                                l3230 23B0                                  l2328 24CC  
                                l2360 1A58                                  l2352 1A44  
                                l2504 1F96                                  l2600 154E  
                                l2274 24BA                                  l2346 1A34  
                                l2506 1F9E                                  l2450 1EEE  
                                l3066 1C26                                  l2522 1622  
                                l2700 10E0                                  l2372 22F2  
                                l2532 1660                                  l2710 1112  
                                l2374 22FC                                  l2454 1F22  
                                l2606 156A                                  l2720 1140  
                                l2704 10E4                                  l2448 1EE4  
                                l2528 164C                                  l2482 1DF2  
                                l2466 2432                                  l2722 1148  
                                l2714 111E                                  l2642 15CC  
                                l2570 16D8                                  l2538 167C  
                                l2484 1DFC                                  l2708 1108  
                                l2660 0FBC                                  l2494 1E22  
                                l2486 1E04                                  l2734 11C4  
                                l2662 0FCA                                  l2654 0FA2  
                                l2750 2072                                  l2646 15D8  
                                l2638 15C0                                  l2590 1500  
                                l2574 16E4                                  l2566 16CC  
                                l2728 1170                                  l2680 106C  
                                l2672 1008                                  l2736 11D0  
                                l2744 2060                                  l2840 2026  
                                l2738 11EC                                  l2666 0FD4  
                                l2746 2066                                  l2754 2078  
                                l2770 2354                                  l2834 22E0  
                                l2842 2038                                  l2940 1B70  
                                l2692 10B0                                  l2684 1072  
                                l2668 0FEA                                  l2748 206C  
                                l2844 2042                                  l2596 153A  
                                l2860 17F6                                  l2686 1094  
                                l2774 235A                                  l2838 2020  
                                l2870 181E                                  l2854 17E4  
                                l2696 10BC                                  l2768 234E  
                                l2866 180C                                  l2882 1848  
                                l2868 1816                                  l2966 18F6  
                                l2886 1858                                  l2878 183C  
                                STR_1 0F6E                                  STR_2 0F1F  
                                STR_3 0F2E                                  STR_4 0F94  
                                STR_5 0F90                                  STR_6 0F94  
                                STR_7 0F90                                  STR_8 0F94  
                                STR_9 0F90                                  u1210 1AAA  
                                u1300 1EDA                                  u1230 1AC4  
                                u1208 1A94                                  u1250 1AE0  
                                u1307 1ED0                                  u1228 1AAC  
                                u1190 1A92                                  u1248 1AC6  
                                u1290 1EB0                                  u1268 1AE2  
                                u1297 1EA6                                  u2377 1346  
                                u2387 24BC                                  u2397 24CE  
                    ?_lcd_send_nibble 0026                                  _anio 0055  
                                _flag 02F8                                  _main 23A6  
                                _hora 005B                                  fsr0h 000FEA  
                                fsr1h 000FE2                                  indf0 000FEF  
                                fsr0l 000FE9                                  fsr2h 000FDA  
                                indf1 000FE7                                  fsr1l 000FE1  
                                indf2 000FDF                                  fsr2l 000FD9  
                       __CFG_T1DIG$ON 000000                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                       __CFG_IESO$OFF 000000                      RtccReadDate@rTD0 0030  
                    RtccReadDate@rTD1 0028                  __end_of_activity_pin 1F7E  
                        ___param_bank 000010           ??_action_submenu_selector_0 0036  
         ??_action_submenu_selector_1 0036       __size_of_activity_submenu_alarm 0066  
     __size_of_activity_submenu_clock 0066                       RtccReadTime@pTm 0026  
                         _Delay1KTCYx 24CA                         __CFG_PLLDIV$1 000000  
                               ?_main 0026                       __end_of___awdiv 1864  
                               STR_10 0F94                                 STR_11 0F90  
                               STR_20 0F90                                 STR_12 0F82  
                               STR_13 0F91                                 STR_21 0F94  
                               STR_22 0F90                                 STR_30 0F45  
                               STR_14 0F0F                                 STR_23 0F4D  
                               STR_31 0F68                                 STR_15 0F4D  
                               STR_32 0F55                                 STR_24 0F8A  
                               STR_16 0F62                                 STR_25 0F8D  
                               STR_17 0F86                                 STR_33 0F3D  
                               STR_26 0F62                                 STR_34 0F78  
                               STR_18 0F55                                 STR_19 0F94  
                               STR_35 0F92                                 STR_27 0F5C  
                               STR_36 0F7D                                 STR_28 0F73  
                               STR_29 0F86                                 STR_37 0F7D  
               __size_of_Delay100TCYx 0012                       ___awdiv@divisor 0028  
                     __end_of___lwdiv 1E38                       __end_of___lwmod 1FCA  
                     ___awdiv@counter 002A                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                        ?_button_hash 0026                        __CFG_FCMEN$OFF 000000  
                     __end_of_dpowers 0F0B                                 _mes_d 004F  
                               _mes_u 0050                       __end_of_isdigit 243C  
                               _setup 1AFC                                 _state 0019  
                      __pbitbssCOMRAM 02F8                                 tablat 000FF5  
                 _reset_home_callback 24FE                          lcd_putrs@ptr 002E  
                               status 000FD8                       __end_of_sprintf 11FC  
               __end_of_activity_home 23A6                 __end_of_activity_menu 1A06  
                        lcd_write@row 0032               __CFG_DSWDTOSC$INTOSCREF 000000  
                     __initialization 20A6                          _Delay100TCYx 24B8  
                        __end_of_main 23CE                       ??_lcd_send_byte 0029  
                    RtccReadTime@rTD0 0030                      RtccReadTime@rTD1 0028  
                    __end_of_Read_RTC 17CE               _action_submenu_selector 234C  
                ?_reset_home_callback 0026                                ??_main 004A  
     __size_of_action_menu_selector_0 0042       __size_of_action_menu_selector_1 0042  
     __size_of_action_menu_selector_2 0042       __size_of_action_menu_selector_3 0042  
                       __activetblptr 000002                      __end_of_RtccWrOn 24B8  
           _action_submenu_selector_0 212C             _action_submenu_selector_1 20EA  
              _activity_submenu_alarm 1D10                _activity_submenu_clock 1CAA  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _EECON2 000FA7                                _ANCON0 000F48  
                              _ANCON1 000F49                      ___awdiv@dividend 0026  
                              ?_setup 0026                        __CFG_WDTEN$OFF 000000  
        __size_of_pin_input_validator 0032                      RtccWriteDate@pDt 0026  
                              _RTCCFG 000F3F                        __CFG_WPCFG$OFF 000000  
                       _home_callback 0009                        __CFG_WPDIS$OFF 000000  
                 _home_callback_delay 000B                        __CFG_XINST$OFF 000000  
                    __end_of_lcd_init 1A86            __end_of_home_clock_refresh 18F6  
                    __end_of_lcd_putc 2016                                ___wmul 23CE  
                           ??___awdiv 002A                        __CFG_STVREN$ON 000000  
                              _diasem 0059                                _anio_d 004A  
                              _anio_u 009A                             ??___lwdiv 002A  
                           ??___lwmod 0031                 ??_reset_home_callback 0026  
                              _hora_d 004D                                _hora_u 004E  
                    __end_of_button_A 22B6                      __end_of_button_B 1E8E  
                    __end_of_button_C 247A                      __end_of_button_D 24FE  
                              clear_0 20AC                                clear_1 20BA  
                    ___awdiv@quotient 002C                                _minuto 0015  
               __end_of_RtccWriteDate 15E4                                _strcat 2016  
                              _strcmp 1EE2                 __end_of_RtccWriteTime 16F0  
                              _strcpy 22E8                      RtccWriteTime@pTm 0026  
                        __pdataCOMRAM 0055                             ??_isdigit 0026  
              __size_of_button_number 0066                          __mediumconst 0000  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                             ??_sprintf 003C  
               __size_of_activity_pin 004E                            __accesstop 0060  
             __end_of__initialization 20E0                _action_menu_selector_0 2234  
              _action_menu_selector_1 21F2                _action_menu_selector_2 21B0  
              _action_menu_selector_3 216E                    __size_of_Write_RTC 014C  
                       ___rparam_used 000001             ??_action_submenu_selector 0036  
           __size_of_keyboard_control 0156                        __pcstackCOMRAM 0026  
                       __end_of_setup 1B70                       __CFG_DSWDTPS$G2 000000  
                     _button_asterisk 2508                       __CFG_OSC$INTOSC 000000  
                        _activity_pin 1F30                     lcd_gotoxy@address 002C  
                __size_of_button_hash 0014                    __size_of_lcd_putrs 0054  
                  __size_of_lcd_write 0018                          sprintf@width 0046  
                             ??_setup 0033                            __pbssBANK0 0060  
                           ?_Read_RTC 0026                            _dia_semana 009B  
           RtccWriteTime@tempHourWDay 002F                            __pnvCOMRAM 004A  
       __size_of_activity_submenu_pin 0066                         _button_number 1BDE  
                           ?_RtccWrOn 0026                        lcd_send_byte@n 0028  
                             ?___wmul 0026                         ?_RtccReadDate 0026  
         __end_of_check_home_callback 245E                         ?_RtccReadTime 0026  
       __size_of_action_menu_selector 0048                          ?_Delay1KTCYx 0026  
                             ?_strcat 0026                               ?_strcmp 0026  
                             ?_strcpy 0026                     __end_of_Write_RTC 149E  
                          _lcd_comand 24DC       __end_of_action_submenu_selector 237C  
                          _lcd_gotoxy 23F6                               _RTCVALH 000F99  
                             _RTCVALL 000F98                             ?_lcd_init 0026  
                           ?_lcd_putc 0026                         _menu_selected 0013  
                          ??_Read_RTC 0038                             ?_button_A 0026  
                           ?_button_B 0026                             ?_button_C 0026  
                           ?_button_D 0026    __size_of_action_submenu_selector_0 0042  
  __size_of_action_submenu_selector_1 0042                        ?_button_number 0026  
                             __Hparam 0000                               __Lparam 0000  
            __size_of_lcd_send_nibble 0076               __end_of_button_asterisk 250E  
                          ??_RtccWrOn 0026                        ??_RtccReadDate 0028  
                      ??_RtccReadTime 0028                               ___awdiv 17CE  
                   __end_of_lcd_putrs 1EE2                     __end_of_lcd_write 2492  
                     __size_of___wmul 0028                               ___lwdiv 1DDC  
                             ___lwmod 1F7E                          __psmallconst 0F00  
                         _RtccTimeVal 0078                               __pcinit 20A6  
                             _fecha_d 004B                               _fecha_u 004C  
                             __ramtop 0F00                   _pin_input_validator 22B6  
                             __ptext0 23A6                               __ptext1 1AFC  
                             __ptext2 1352                               __ptext3 17CE  
                             __ptext4 15E4                               __ptext5 149E  
                             __ptext6 24A6                               __ptext7 11FC  
                             __ptext8 1BDE                               __ptext9 2016  
        ?_activity_submenu_activation 0026                               _buffer1 007C  
             ?_activity_submenu_alarm 0026                       __size_of_strcat 0048  
                     __size_of_strcmp 004E                       __size_of_strcpy 0032  
             ?_activity_submenu_clock 0026                             _T1CONbits 000FCD  
                             _dpowers 0F01                               _isdigit 241A  
                             _segundo 0017                               _sprintf 0F98  
                          ??_lcd_init 002A                            ??_lcd_putc 002D  
                end_of_initialization 20E0                  ?_pin_input_validator 0026  
                lcd_send_byte@address 0029                            ??_button_A 0038  
                       __Lmediumconst 0000                            ??_button_B 0036  
                          ??_button_C 0036                            ??_button_D 0036  
   __end_of_action_submenu_selector_0 216E     __end_of_action_submenu_selector_1 212C  
                    _keyboard_control 11FC                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc2 000FDE                 __end_of_lcd_send_byte 234C  
                             strcmp@r 002B        __end_of_activity_submenu_alarm 1D76  
      __end_of_activity_submenu_clock 1D10                             _PORTAbits 000F80  
                           _PORTCbits 000F82                      __CFG_DSBOREN$OFF 000000  
                         ?_lcd_comand 0026                    _home_clock_refresh 1864  
                    __CFG_CPUDIV$OSC1 000000                             _TRISBbits 000F93  
              __size_of_activity_home 002A                __size_of_activity_menu 0082  
                         ?_lcd_gotoxy 002A               ?_action_menu_selector_0 0026  
             ?_action_menu_selector_1 0026               ?_action_menu_selector_2 0026  
             ?_action_menu_selector_3 0026                       _LCD_INIT_STRING 0F0B  
                 ?_home_clock_refresh 0026                 ??_pin_input_validator 0036  
                     ??_button_number 0049                      __CFG_IOL1WAY$OFF 000000  
           RtccWriteDate@tempDayMonth 002F           __end_of_reset_home_callback 2508  
                 __CFG_MSSP7B_EN$MSK7 000000                      ?_button_asterisk 0026  
                    Delay100TCYx@unit 0026                  ??_home_clock_refresh 0049  
                      __end_of___wmul 23F6                         __pidataCOMRAM 24EA  
           RtccWriteDate@tempHourWDay 0031                     ??_lcd_send_nibble 0026  
                __size_of_Delay1KTCYx 0012                      __CFG_DSWDTEN$OFF 000000  
                      __end_of_strcat 205E                        __end_of_strcmp 1F30  
                      __end_of_strcpy 231A                   start_initialization 20A6  
      __end_of_action_menu_selector_0 2276        __end_of_action_menu_selector_1 2234  
      __end_of_action_menu_selector_2 21F2        __end_of_action_menu_selector_3 21B0  
                __end_of_RtccReadDate 1984                  __end_of_RtccReadTime 1BDE  
                RtccWriteTime@wasAlrm 002B                  RtccWriteTime@wasWrEn 002C  
__size_of_activity_submenu_activation 0066                __size_of_RtccWriteDate 0146  
                     RtccWriteDate@di 0028                __size_of_RtccWriteTime 010C  
                   __size_of_Read_RTC 00DE                         _activity_home 237C  
                       _activity_menu 1984                   __size_of_lcd_comand 000E  
                 __size_of_lcd_gotoxy 0024                              ??___wmul 002A  
                   __size_of_RtccWrOn 0012                       RtccWriteTime@di 0028  
                    __CFG_LPT1OSC$OFF 000000                              ??_strcat 002A  
                            ??_strcmp 002A                              ??_strcpy 002A  
        __end_of_activity_submenu_pin 1CAA                           _ALRMCFGbits 000F91  
             __end_of_LCD_INIT_STRING 0F0F                         ??_button_hash 0038  
                         __pbssCOMRAM 0001                             _Write_RTC 1352  
                        _isdigit$2144 0027          __end_of_action_menu_selector 20A6  
                     Delay1KTCYx@unit 0026                     __size_of_lcd_init 0080  
                         sprintf@flag 0042                     __size_of_lcd_putc 004C  
                         sprintf@prec 0045              ?_action_submenu_selector 0026  
                           __pnvBANK0 009A                        ?_activity_home 0026  
                      ?_activity_menu 0026                     __size_of_button_A 0040  
                   __size_of_button_B 0056                     __size_of_button_C 001C  
                   __size_of_button_D 000A                      ___lwdiv@dividend 0026  
                       ?_Delay100TCYx 0026                              ?___awdiv 0026  
                            ?___lwdiv 0026                              ?___lwmod 002D  
             RtccWriteTime@tempMinSec 002D                             _lcd_putrs 1E8E  
                           _lcd_write 247A                      _submenu_selected 001B  
                       _RtccWriteDate 149E                           __smallconst 0F00  
                       _RtccWriteTime 15E4          __size_of_check_home_callback 0022  
                            ?_isdigit 0026                  __CFG_RTCOSC$T1OSCREF 000000  
            __end_of_keyboard_control 1352                            ?_Write_RTC 0026  
                    ___lwdiv@quotient 002A                              ?_sprintf 0032  
                      __size_of_setup 0074                   __end_of_button_hash 24A6  
                    _RtccAlrmTimeDate 0060                        ___wmul@product 002A  
                            _LATAbits 000F89                              _LATBbits 000F8A  
                           _pin_input 0095                              _PIE3bits 000FA3  
                           _segundo_d 0053                        ??_Delay100TCYx 0026  
                           _segundo_u 0054                      __CFG_WDTPS$32768 000000  
                  RtccWriteDate@wasOn 002A                    _Rtcc_read_TimeDate 0070  
                      ?_RtccWriteDate 0026                            ?_lcd_putrs 002E  
                          ?_lcd_write 0030                     ___wmul@multiplier 0026  
                      ?_RtccWriteTime 0026                             lcd_init@i 002A  
               __size_of_RtccReadDate 008E                          ??_lcd_comand 002A  
                           lcd_putc@c 002D                 __size_of_RtccReadTime 006E  
                        ??_lcd_gotoxy 002B                             copy_data0 20D4  
                            _Read_RTC 16F0                       ??_activity_home 0036  
                     ??_activity_menu 0036                  _activity_submenu_pin 1C44  
                     _lcd_send_nibble 1A86                              __Hrparam 0000  
                            _RtccDate 001E                              __Lrparam 0000  
          ?_action_submenu_selector_0 0026            ?_action_submenu_selector_1 0026  
                            _RtccTime 0022                              _RtccWrOn 24A6  
                  __end_of_lcd_comand 24EA                    __end_of_lcd_gotoxy 241A  
                        _RtccReadDate 18F6                      __size_of___awdiv 0096  
                        _RtccReadTime 1B70                  _action_menu_selector 205E  
                    __size_of___lwdiv 005C                      __size_of___lwmod 004C  
                        _RtccTimeDate 0068                            sprintf@val 0043  
                          strcat@from 0028                           _button_hash 2492  
                       ?_activity_pin 0026                              _activity 0003  
         __end_of_pin_input_validator 22E8                      __size_of_isdigit 0022  
                     ___lwdiv@divisor 0028                           ??_Write_RTC 0033  
                     ___lwdiv@counter 002C                              __ptext10 2492  
                            __ptext11 22B6                              __ptext20 1D10  
                            __ptext12 1EE2                              __ptext21 1D76  
                            __ptext13 2508                              __ptext30 216E  
                            __ptext22 2276                              __ptext14 24F4  
                            __ptext31 21B0                              __ptext23 1F30  
                            __ptext15 245E                              __ptext40 243C  
                            __ptext32 21F2                              __ptext24 22E8  
                            __ptext16 1984                              __ptext41 24FE  
                            __ptext33 2234                              __ptext25 24DC  
                            __ptext17 1E38                              __ptext50 24B8  
                            __ptext42 237C                              __ptext34 1864  
                            __ptext26 234C                              __ptext18 1C44  
                            __ptext51 24CA                              __ptext43 247A  
                            __ptext35 0F98                              __ptext27 20EA  
                            __ptext19 1CAA                              __ptext52 16F0  
                            __ptext44 1E8E                              __ptext36 241A  
                            __ptext28 212C                              __ptext53 1B70  
                            __ptext45 1FCA                              __ptext37 23CE  
                            __ptext29 205E                              __ptext54 18F6  
                            __ptext46 23F6                              __ptext38 1F7E  
                            __ptext47 1A06                              __ptext39 1DDC  
                            __ptext48 231A                              __ptext49 1A86  
                            _lcd_init 1A06                              _lcd_putc 1FCA  
                    __size_of_sprintf 0264                            strcpy@from 0028  
              __size_of_lcd_send_byte 0032                              _button_A 2276  
                            _button_B 1E38                              _button_C 245E  
                            _button_D 24F4                         __size_of_main 0028  
               __end_of_button_number 1C44                 ?_activity_submenu_pin 0026  
                            _minuto_d 0051                              _minuto_u 0052  
               ?_action_menu_selector 0026                         ??_Delay1KTCYx 0026  
                     ??_RtccWriteDate 0029           __size_of_home_clock_refresh 0092  
                     ??_RtccWriteTime 0029   __end_of_activity_submenu_activation 1DDC  
         _activity_submenu_activation 1D76          __size_of_reset_home_callback 000A  
                         ??_lcd_putrs 0030                           ??_lcd_write 0036  
            __size_of_button_asterisk 0006                        ??_activity_pin 0036  
                         _OSCTUNEbits 000F9B                            _INTCONbits 000FF2  
                  RtccWriteTime@wasOn 002A                  __end_of_Delay100TCYx 24CA  
       ??_activity_submenu_activation 0036                              isdigit@c 0028  
                           sprintf@ap 0040               __end_of_lcd_send_nibble 1AFC  
                           sprintf@sp 0032                      ___lwmod@dividend 002D  
                 _check_home_callback 243C                            _OSCCONbits 000FD3  
            ??_activity_submenu_alarm 0036              ??_activity_submenu_clock 0036  
               RtccWriteDate@tempYear 002C                         _lcd_send_byte 231A  
    __size_of_action_submenu_selector 0030                            _RTCCFGbits 000F3F  
                            sprintf@c 0048                              sprintf@f 0034  
                            strcat@cp 002A                              strcat@to 0026  
                ?_check_home_callback 0026                              strcmp@s1 0026  
                            strcmp@s2 0028                       ___lwmod@divisor 002F  
                            strcpy@cp 002A                              strcpy@to 0026  
                 __end_of_Delay1KTCYx 24DC                       ___lwmod@counter 0031  
      pin_input_validator@comparision 0036                  RtccWriteDate@wasAlrm 002B  
                RtccWriteDate@wasWrEn 002E                     ?_keyboard_control 0026  
                  ??_keyboard_control 0049                ??_activity_submenu_pin 0036  
               lcd_send_nibble@nibble 0027  
