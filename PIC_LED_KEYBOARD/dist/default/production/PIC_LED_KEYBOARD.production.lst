

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Sep 17 20:22:08 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    92  0000                     
    93                           	psect	idataCOMRAM
    94  00E37A                     __pidataCOMRAM:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _anio
    98  00E37A  0010               	dw	16
    99                           
   100                           ;initializer for _dia
   101  00E37C  0006               	dw	6
   102                           
   103                           ;initializer for _diasem
   104  00E37E  0002               	dw	2
   105                           
   106                           ;initializer for _hora
   107  00E380  0012               	dw	18
   108                           
   109                           ;initializer for _mes
   110  00E382  0009               	dw	9
   111                           
   112                           	psect	mediumconst
   113  00FEEC                     __pmediumconst:
   114                           	opt stack 0
   115  00FEEC  00                 	db	0
   116  00FEED                     _dpowers:
   117                           	opt stack 0
   118  00FEED  0001               	dw	1
   119  00FEEF  000A               	dw	10
   120  00FEF1  0064               	dw	100
   121  00FEF3  03E8               	dw	1000
   122  00FEF5  2710               	dw	10000
   123  00FEF7                     __end_of_dpowers:
   124                           	opt stack 0
   125  00FEF7                     _LCD_INIT_STRING:
   126                           	opt stack 0
   127  00FEF7  28                 	db	40
   128  00FEF8  0C                 	db	12
   129  00FEF9  01                 	db	1
   130  00FEFA  06                 	db	6
   131  00FEFB                     __end_of_LCD_INIT_STRING:
   132                           	opt stack 0
   133  00FEFB                     STR_25:
   134                           
   135                           ; BSR set to: 15
   136  00FEFB  49                 	db	73	;'I'
   137  00FEFC  6E                 	db	110	;'n'
   138  00FEFD  67                 	db	103	;'g'
   139  00FEFE  72                 	db	114	;'r'
   140  00FEFF  65                 	db	101	;'e'
   141  00FF00  73                 	db	115	;'s'
   142  00FF01  65                 	db	101	;'e'
   143  00FF02  20                 	db	32
   144  00FF03  6C                 	db	108	;'l'
   145  00FF04  61                 	db	97	;'a'
   146  00FF05  20                 	db	32
   147  00FF06  66                 	db	102	;'f'
   148  00FF07  65                 	db	101	;'e'
   149  00FF08  63                 	db	99	;'c'
   150  00FF09  68                 	db	104	;'h'
   151  00FF0A  61                 	db	97	;'a'
   152  00FF0B  00                 	db	0
   153  00FF0C                     STR_15:
   154                           
   155                           ; BSR set to: 15
   156  00FF0C  49                 	db	73	;'I'
   157  00FF0D  6E                 	db	110	;'n'
   158  00FF0E  67                 	db	103	;'g'
   159  00FF0F  72                 	db	114	;'r'
   160  00FF10  65                 	db	101	;'e'
   161  00FF11  73                 	db	115	;'s'
   162  00FF12  65                 	db	101	;'e'
   163  00FF13  20                 	db	32
   164  00FF14  73                 	db	115	;'s'
   165  00FF15  75                 	db	117	;'u'
   166  00FF16  20                 	db	32
   167  00FF17  50                 	db	80	;'P'
   168  00FF18  49                 	db	73	;'I'
   169  00FF19  4E                 	db	78	;'N'
   170  00FF1A  3A                 	db	58	;':'
   171  00FF1B  00                 	db	0
   172  00FF1C                     STR_26:
   173                           
   174                           ; BSR set to: 15
   175  00FF1C  49                 	db	73	;'I'
   176  00FF1D  6E                 	db	110	;'n'
   177  00FF1E  67                 	db	103	;'g'
   178  00FF1F  72                 	db	114	;'r'
   179  00FF20  65                 	db	101	;'e'
   180  00FF21  73                 	db	115	;'s'
   181  00FF22  65                 	db	101	;'e'
   182  00FF23  20                 	db	32
   183  00FF24  6C                 	db	108	;'l'
   184  00FF25  61                 	db	97	;'a'
   185  00FF26  20                 	db	32
   186  00FF27  68                 	db	104	;'h'
   187  00FF28  6F                 	db	111	;'o'
   188  00FF29  72                 	db	114	;'r'
   189  00FF2A  61                 	db	97	;'a'
   190  00FF2B  00                 	db	0
   191  00FF2C                     STR_23:
   192                           
   193                           ; BSR set to: 15
   194  00FF2C  25                 	db	37
   195  00FF2D  30                 	db	48	;'0'
   196  00FF2E  32                 	db	50	;'2'
   197  00FF2F  75                 	db	117	;'u'
   198  00FF30  2F                 	db	47
   199  00FF31  25                 	db	37
   200  00FF32  30                 	db	48	;'0'
   201  00FF33  32                 	db	50	;'2'
   202  00FF34  75                 	db	117	;'u'
   203  00FF35  2F                 	db	47
   204  00FF36  25                 	db	37
   205  00FF37  30                 	db	48	;'0'
   206  00FF38  32                 	db	50	;'2'
   207  00FF39  75                 	db	117	;'u'
   208  00FF3A  00                 	db	0
   209  00FF3B                     STR_24:
   210                           
   211                           ; BSR set to: 15
   212  00FF3B  25                 	db	37
   213  00FF3C  30                 	db	48	;'0'
   214  00FF3D  32                 	db	50	;'2'
   215  00FF3E  75                 	db	117	;'u'
   216  00FF3F  3A                 	db	58	;':'
   217  00FF40  25                 	db	37
   218  00FF41  30                 	db	48	;'0'
   219  00FF42  32                 	db	50	;'2'
   220  00FF43  75                 	db	117	;'u'
   221  00FF44  3A                 	db	58	;':'
   222  00FF45  25                 	db	37
   223  00FF46  30                 	db	48	;'0'
   224  00FF47  32                 	db	50	;'2'
   225  00FF48  75                 	db	117	;'u'
   226  00FF49  00                 	db	0
   227  00FF4A                     STR_43:
   228                           
   229                           ; BSR set to: 15
   230  00FF4A  4E                 	db	78	;'N'
   231  00FF4B  75                 	db	117	;'u'
   232  00FF4C  65                 	db	101	;'e'
   233  00FF4D  76                 	db	118	;'v'
   234  00FF4E  6F                 	db	111	;'o'
   235  00FF4F  20                 	db	32
   236  00FF50  50                 	db	80	;'P'
   237  00FF51  49                 	db	73	;'I'
   238  00FF52  4E                 	db	78	;'N'
   239  00FF53  3A                 	db	58	;':'
   240  00FF54  00                 	db	0
   241  00FF55                     STR_31:
   242                           
   243                           ; BSR set to: 15
   244  00FF55  56                 	db	86	;'V'
   245  00FF56  6F                 	db	111	;'o'
   246  00FF57  6C                 	db	108	;'l'
   247  00FF58  75                 	db	117	;'u'
   248  00FF59  6D                 	db	109	;'m'
   249  00FF5A  65                 	db	101	;'e'
   250  00FF5B  6E                 	db	110	;'n'
   251  00FF5C  00                 	db	0
   252  00FF5D                     STR_40:
   253                           
   254                           ; BSR set to: 15
   255  00FF5D  43                 	db	67	;'C'
   256  00FF5E  61                 	db	97	;'a'
   257  00FF5F  6D                 	db	109	;'m'
   258  00FF60  62                 	db	98	;'b'
   259  00FF61  69                 	db	105	;'i'
   260  00FF62  61                 	db	97	;'a'
   261  00FF63  72                 	db	114	;'r'
   262  00FF64  00                 	db	0
   263  00FF65                     STR_16:
   264                           
   265                           ; BSR set to: 15
   266  00FF65  41                 	db	65	;'A'
   267  00FF66  63                 	db	99	;'c'
   268  00FF67  74                 	db	116	;'t'
   269  00FF68  69                 	db	105	;'i'
   270  00FF69  76                 	db	118	;'v'
   271  00FF6A  61                 	db	97	;'a'
   272  00FF6B  72                 	db	114	;'r'
   273  00FF6C  00                 	db	0
   274  00FF6D                     STR_37:
   275                           
   276                           ; BSR set to: 15
   277  00FF6D  42                 	db	66	;'B'
   278  00FF6E  65                 	db	101	;'e'
   279  00FF6F  65                 	db	101	;'e'
   280  00FF70  70                 	db	112	;'p'
   281  00FF71  20                 	db	32
   282  00FF72  31                 	db	49	;'1'
   283  00FF73  00                 	db	0
   284  00FF74                     STR_51:
   285                           
   286                           ; BSR set to: 15
   287  00FF74  54                 	db	84	;'T'
   288  00FF75  4F                 	db	79	;'O'
   289  00FF76  4E                 	db	78	;'N'
   290  00FF77  4F                 	db	79	;'O'
   291  00FF78  3A                 	db	58	;':'
   292  00FF79  31                 	db	49	;'1'
   293  00FF7A  00                 	db	0
   294  00FF7B                     STR_38:
   295                           
   296                           ; BSR set to: 15
   297  00FF7B  42                 	db	66	;'B'
   298  00FF7C  65                 	db	101	;'e'
   299  00FF7D  65                 	db	101	;'e'
   300  00FF7E  70                 	db	112	;'p'
   301  00FF7F  20                 	db	32
   302  00FF80  32                 	db	50	;'2'
   303  00FF81  00                 	db	0
   304  00FF82                     STR_52:
   305                           
   306                           ; BSR set to: 15
   307  00FF82  54                 	db	84	;'T'
   308  00FF83  4F                 	db	79	;'O'
   309  00FF84  4E                 	db	78	;'N'
   310  00FF85  4F                 	db	79	;'O'
   311  00FF86  3A                 	db	58	;':'
   312  00FF87  32                 	db	50	;'2'
   313  00FF88  00                 	db	0
   314  00FF89                     STR_49:
   315                           
   316                           ; BSR set to: 15
   317  00FF89  56                 	db	86	;'V'
   318  00FF8A  4F                 	db	79	;'O'
   319  00FF8B  4C                 	db	76	;'L'
   320  00FF8C  3A                 	db	58	;':'
   321  00FF8D  42                 	db	66	;'B'
   322  00FF8E  41                 	db	65	;'A'
   323  00FF8F  00                 	db	0
   324  00FF90                     STR_47:
   325                           
   326                           ; BSR set to: 15
   327  00FF90  41                 	db	65	;'A'
   328  00FF91  43                 	db	67	;'C'
   329  00FF92  54                 	db	84	;'T'
   330  00FF93  3A                 	db	58	;':'
   331  00FF94  53                 	db	83	;'S'
   332  00FF95  49                 	db	73	;'I'
   333  00FF96  00                 	db	0
   334  00FF97                     STR_50:
   335                           
   336                           ; BSR set to: 15
   337  00FF97  56                 	db	86	;'V'
   338  00FF98  4F                 	db	79	;'O'
   339  00FF99  4C                 	db	76	;'L'
   340  00FF9A  3A                 	db	58	;':'
   341  00FF9B  41                 	db	65	;'A'
   342  00FF9C  4C                 	db	76	;'L'
   343  00FF9D  00                 	db	0
   344  00FF9E                     STR_48:
   345                           
   346                           ; BSR set to: 15
   347  00FF9E  41                 	db	65	;'A'
   348  00FF9F  43                 	db	67	;'C'
   349  00FFA0  54                 	db	84	;'T'
   350  00FFA1  3A                 	db	58	;':'
   351  00FFA2  4E                 	db	78	;'N'
   352  00FFA3  4F                 	db	79	;'O'
   353  00FFA4  00                 	db	0
   354  00FFA5                     STR_19:
   355                           
   356                           ; BSR set to: 15
   357  00FFA5  41                 	db	65	;'A'
   358  00FFA6  6C                 	db	108	;'l'
   359  00FFA7  61                 	db	97	;'a'
   360  00FFA8  72                 	db	114	;'r'
   361  00FFA9  6D                 	db	109	;'m'
   362  00FFAA  61                 	db	97	;'a'
   363  00FFAB  00                 	db	0
   364  00FFAC                     STR_30:
   365                           
   366                           ; BSR set to: 15
   367  00FFAC  53                 	db	83	;'S'
   368  00FFAD  69                 	db	105	;'i'
   369  00FFAE  72                 	db	114	;'r'
   370  00FFAF  65                 	db	101	;'e'
   371  00FFB0  6E                 	db	110	;'n'
   372  00FFB1  61                 	db	97	;'a'
   373  00FFB2  00                 	db	0
   374  00FFB3                     STR_21:
   375                           
   376                           ; BSR set to: 15
   377  00FFB3  46                 	db	70	;'F'
   378  00FFB4  65                 	db	101	;'e'
   379  00FFB5  63                 	db	99	;'c'
   380  00FFB6  68                 	db	104	;'h'
   381  00FFB7  61                 	db	97	;'a'
   382  00FFB8  00                 	db	0
   383  00FFB9                     STR_17:
   384                           
   385                           ; BSR set to: 15
   386  00FFB9  52                 	db	82	;'R'
   387  00FFBA  65                 	db	101	;'e'
   388  00FFBB  6C                 	db	108	;'l'
   389  00FFBC  6F                 	db	111	;'o'
   390  00FFBD  6A                 	db	106	;'j'
   391  00FFBE  00                 	db	0
   392  00FFBF                     STR_41:
   393                           
   394                           ; BSR set to: 15
   395  00FFBF  52                 	db	82	;'R'
   396  00FFC0  65                 	db	101	;'e'
   397  00FFC1  73                 	db	115	;'s'
   398  00FFC2  65                 	db	101	;'e'
   399  00FFC3  74                 	db	116	;'t'
   400  00FFC4  00                 	db	0
   401  00FFC5                     STR_44:
   402                           
   403                           ; BSR set to: 15
   404  00FFC5  31                 	db	49	;'1'
   405  00FFC6  32                 	db	50	;'2'
   406  00FFC7  33                 	db	51	;'3'
   407  00FFC8  34                 	db	52	;'4'
   408  00FFC9  00                 	db	0
   409  00FFCA                     STR_22:
   410                           
   411                           ; BSR set to: 15
   412  00FFCA  48                 	db	72	;'H'
   413  00FFCB  6F                 	db	111	;'o'
   414  00FFCC  72                 	db	114	;'r'
   415  00FFCD  61                 	db	97	;'a'
   416  00FFCE  00                 	db	0
   417  00FFCF                     STR_34:
   418                           
   419                           ; BSR set to: 15
   420  00FFCF  42                 	db	66	;'B'
   421  00FFD0  61                 	db	97	;'a'
   422  00FFD1  6A                 	db	106	;'j'
   423  00FFD2  6F                 	db	111	;'o'
   424  00FFD3  00                 	db	0
   425  00FFD4                     STR_32:
   426                           
   427                           ; BSR set to: 15
   428  00FFD4  54                 	db	84	;'T'
   429  00FFD5  6F                 	db	111	;'o'
   430  00FFD6  6E                 	db	110	;'n'
   431  00FFD7  6F                 	db	111	;'o'
   432  00FFD8  00                 	db	0
   433  00FFD9                     STR_35:
   434                           
   435                           ; BSR set to: 15
   436  00FFD9  41                 	db	65	;'A'
   437  00FFDA  6C                 	db	108	;'l'
   438  00FFDB  74                 	db	116	;'t'
   439  00FFDC  6F                 	db	111	;'o'
   440  00FFDD  00                 	db	0
   441  00FFDE                     STR_54:
   442                           
   443                           ; BSR set to: 15
   444  00FFDE  25                 	db	37
   445  00FFDF  30                 	db	48	;'0'
   446  00FFE0  31                 	db	49	;'1'
   447  00FFE1  75                 	db	117	;'u'
   448  00FFE2  00                 	db	0
   449  00FFE3                     STR_1:
   450                           
   451                           ; BSR set to: 15
   452  00FFE3  58                 	db	88	;'X'
   453  00FFE4  32                 	db	50	;'2'
   454  00FFE5  38                 	db	56	;'8'
   455  00FFE6  00                 	db	0
   456  00FFE7                     STR_18:
   457                           
   458                           ; BSR set to: 15
   459  00FFE7  50                 	db	80	;'P'
   460  00FFE8  69                 	db	105	;'i'
   461  00FFE9  6E                 	db	110	;'n'
   462  00FFEA  00                 	db	0
   463  00FFEB                     STR_28:
   464                           
   465                           ; BSR set to: 15
   466  00FFEB  53                 	db	83	;'S'
   467  00FFEC  69                 	db	105	;'i'
   468  00FFED  00                 	db	0
   469  00FFEE                     STR_29:
   470                           
   471                           ; BSR set to: 15
   472  00FFEE  4E                 	db	78	;'N'
   473  00FFEF  6F                 	db	111	;'o'
   474  00FFF0  00                 	db	0
   475  00FFF1                     STR_3:
   476                           
   477                           ; BSR set to: 15
   478  00FFF1  20                 	db	32
   479  00FFF2  00                 	db	0
   480  00FFF3                     STR_53:
   481                           
   482                           ; BSR set to: 15
   483  00FFF3  2A                 	db	42
   484  00FFF4  00                 	db	0
   485  00FFF5                     STR_2:
   486                           
   487                           ; BSR set to: 15
   488  00FFF5  3E                 	db	62	;'>'
   489  00FFF6  00                 	db	0
   490  0000                     
   491                           ; #config settings
   492  00FFF7  00                 	db	0	; dummy byte at the end
   493  0000                     
   494                           	psect	nvCOMRAM
   495  000059                     __pnvCOMRAM:
   496                           	opt stack 0
   497  000059                     _anio_d:
   498                           	opt stack 0
   499  000059                     	ds	1
   500  00005A                     _fecha_d:
   501                           	opt stack 0
   502  00005A                     	ds	1
   503  00005B                     _hora_d:
   504                           	opt stack 0
   505  00005B                     	ds	1
   506  00005C                     _mes_d:
   507                           	opt stack 0
   508  00005C                     	ds	1
   509  00005D                     _minuto_d:
   510                           	opt stack 0
   511  00005D                     	ds	1
   512  00005E                     _segundo_d:
   513                           	opt stack 0
   514  00005E                     	ds	1
   515                           
   516                           	psect	nvBANK0
   517  00009E                     __pnvBANK0:
   518                           	opt stack 0
   519  00009E                     _anio_u:
   520                           	opt stack 0
   521  00009E                     	ds	1
   522  00009F                     _dia_semana:
   523                           	opt stack 0
   524  00009F                     	ds	1
   525  0000A0                     _fecha_u:
   526                           	opt stack 0
   527  0000A0                     	ds	1
   528  0000A1                     _hora_u:
   529                           	opt stack 0
   530  0000A1                     	ds	1
   531  0000A2                     _mes_u:
   532                           	opt stack 0
   533  0000A2                     	ds	1
   534  0000A3                     _minuto_u:
   535                           	opt stack 0
   536  0000A3                     	ds	1
   537  0000A4                     _segundo_u:
   538                           	opt stack 0
   539  0000A4                     	ds	1
   540  0000                     _ANCON0	set	3912
   541  0000                     _ANCON1	set	3913
   542  0000                     _RTCCFG	set	3903
   543  0000                     _RTCCFGbits	set	3903
   544  0000                     _ADCON0	set	4034
   545  0000                     _ADCON1	set	4033
   546  0000                     _ALRMCFGbits	set	3985
   547  0000                     _EECON2	set	4007
   548  0000                     _INTCONbits	set	4082
   549  0000                     _LATAbits	set	3977
   550  0000                     _LATBbits	set	3978
   551  0000                     _OSCCONbits	set	4051
   552  0000                     _OSCTUNEbits	set	3995
   553  0000                     _PIE3bits	set	4003
   554  0000                     _PORTAbits	set	3968
   555  0000                     _PORTCbits	set	3970
   556  0000                     _RTCVALH	set	3993
   557  0000                     _RTCVALL	set	3992
   558  0000                     _T1CONbits	set	4045
   559  0000                     _TRISA	set	3986
   560  0000                     _TRISB	set	3987
   561  0000                     _TRISBbits	set	3987
   562  0000                     _TRISC	set	3988
   563                           
   564                           	psect	cinit
   565  00E8F8                     __pcinit:
   566                           	opt stack 0
   567  00E8F8                     start_initialization:
   568                           	opt stack 0
   569  00E8F8                     __initialization:
   570                           	opt stack 0
   571                           
   572                           ; Clear objects allocated to BANK0 (62 bytes)
   573  00E8F8  EE00  F060         	lfsr	0,__pbssBANK0
   574  00E8FC  0E3E               	movlw	62
   575  00E8FE                     clear_0:
   576  00E8FE  6AEE               	clrf	postinc0,c
   577  00E900  06E8               	decf	wreg,f,c
   578  00E902  E1FD               	bnz	clear_0
   579                           
   580                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   581  00E904  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   582                           
   583                           ; Clear objects allocated to COMRAM (41 bytes)
   584  00E906  EE00  F001         	lfsr	0,__pbssCOMRAM
   585  00E90A  0E29               	movlw	41
   586  00E90C                     clear_1:
   587  00E90C  6AEE               	clrf	postinc0,c
   588  00E90E  06E8               	decf	wreg,f,c
   589  00E910  E1FD               	bnz	clear_1
   590                           
   591                           ; Initialize objects allocated to COMRAM (10 bytes)
   592                           ; load TBLPTR registers with __pidataCOMRAM
   593  00E912  0E7A               	movlw	low __pidataCOMRAM
   594  00E914  6EF6               	movwf	tblptrl,c
   595  00E916  0EE3               	movlw	high __pidataCOMRAM
   596  00E918  6EF7               	movwf	tblptrh,c
   597  00E91A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   598  00E91C  6EF8               	movwf	tblptru,c
   599  00E91E  EE00  F04F         	lfsr	0,__pdataCOMRAM
   600  00E922  EE10 F00A          	lfsr	1,10
   601  00E926                     copy_data0:
   602  00E926  0009               	tblrd		*+
   603  00E928  CFF5 FFEE          	movff	tablat,postinc0
   604  00E92C  50E5               	movf	postdec1,w,c
   605  00E92E  50E1               	movf	fsr1l,w,c
   606  00E930  E1FA               	bnz	copy_data0
   607  00E932                     end_of_initialization:
   608                           	opt stack 0
   609  00E932                     __end_of__initialization:
   610                           	opt stack 0
   611  00E932  0E00               	movlw	low (__Lmediumconst shr (0+16))
   612  00E934  6EF8               	movwf	tblptru,c
   613  00E936  0100               	movlb	0
   614  00E938  EF79  F075         	goto	_main	;jump to C main() function
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           
   624                           	psect	bitbssCOMRAM
   625  0002F8                     __pbitbssCOMRAM:
   626                           	opt stack 0
   627  0002F8                     _flag:
   628                           	opt stack 0
   629  0002F8                     	ds	1
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	bssCOMRAM
   640  000001                     __pbssCOMRAM:
   641                           	opt stack 0
   642  000001                     _a:
   643                           	opt stack 0
   644  000001                     	ds	2
   645  000003                     _activity:
   646                           	opt stack 0
   647  000003                     	ds	2
   648  000005                     _alarm_tone:
   649                           	opt stack 0
   650  000005                     	ds	2
   651  000007                     _alarm_volume:
   652                           	opt stack 0
   653  000007                     	ds	2
   654  000009                     _b:
   655                           	opt stack 0
   656  000009                     	ds	2
   657  00000B                     _config_widget:
   658                           	opt stack 0
   659  00000B                     	ds	2
   660  00000D                     _config_widget_time:
   661                           	opt stack 0
   662  00000D                     	ds	2
   663  00000F                     _home_callback:
   664                           	opt stack 0
   665  00000F                     	ds	2
   666  000011                     _home_callback_delay:
   667                           	opt stack 0
   668  000011                     	ds	2
   669  000013                     _i:
   670                           	opt stack 0
   671  000013                     	ds	2
   672  000015                     _j:
   673                           	opt stack 0
   674  000015                     	ds	2
   675  000017                     _menu_selected:
   676                           	opt stack 0
   677  000017                     	ds	2
   678  000019                     _minuto:
   679                           	opt stack 0
   680  000019                     	ds	2
   681  00001B                     _segundo:
   682                           	opt stack 0
   683  00001B                     	ds	2
   684  00001D                     _state:
   685                           	opt stack 0
   686  00001D                     	ds	2
   687  00001F                     _submenu_selected:
   688                           	opt stack 0
   689  00001F                     	ds	2
   690  000021                     _key:
   691                           	opt stack 0
   692  000021                     	ds	1
   693  000022                     _RtccDate:
   694                           	opt stack 0
   695  000022                     	ds	4
   696  000026                     _RtccTime:
   697                           	opt stack 0
   698  000026                     	ds	4
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           postdec1	equ	0xFE5
   706                           fsr1l	equ	0xFE1
   707                           
   708                           	psect	dataCOMRAM
   709  00004F                     __pdataCOMRAM:
   710                           	opt stack 0
   711  00004F                     _anio:
   712                           	opt stack 0
   713  00004F                     	ds	2
   714  000051                     _dia:
   715                           	opt stack 0
   716  000051                     	ds	2
   717  000053                     _diasem:
   718                           	opt stack 0
   719  000053                     	ds	2
   720  000055                     _hora:
   721                           	opt stack 0
   722  000055                     	ds	2
   723  000057                     _mes:
   724                           	opt stack 0
   725  000057                     	ds	2
   726                           tblptru	equ	0xFF8
   727                           tblptrh	equ	0xFF7
   728                           tblptrl	equ	0xFF6
   729                           tablat	equ	0xFF5
   730                           postinc0	equ	0xFEE
   731                           wreg	equ	0xFE8
   732                           postdec1	equ	0xFE5
   733                           fsr1l	equ	0xFE1
   734                           
   735                           	psect	bssBANK0
   736  000060                     __pbssBANK0:
   737                           	opt stack 0
   738  000060                     _RtccAlrmTimeDate:
   739                           	opt stack 0
   740  000060                     	ds	8
   741  000068                     _RtccTimeDate:
   742                           	opt stack 0
   743  000068                     	ds	8
   744  000070                     _Rtcc_read_TimeDate:
   745                           	opt stack 0
   746  000070                     	ds	8
   747  000078                     _RtccTimeVal:
   748                           	opt stack 0
   749  000078                     	ds	4
   750  00007C                     _c:
   751                           	opt stack 0
   752  00007C                     	ds	2
   753  00007E                     _k:
   754                           	opt stack 0
   755  00007E                     	ds	2
   756  000080                     _buffer1:
   757                           	opt stack 0
   758  000080                     	ds	20
   759  000094                     _pin:
   760                           	opt stack 0
   761  000094                     	ds	5
   762  000099                     _pin_input:
   763                           	opt stack 0
   764  000099                     	ds	5
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           postdec1	equ	0xFE5
   772                           fsr1l	equ	0xFE1
   773                           
   774                           	psect	cstackCOMRAM
   775  00002A                     __pcstackCOMRAM:
   776                           	opt stack 0
   777  00002A                     ??_isdigit:
   778  00002A                     ??_lcd_send_nibble:
   779  00002A                     ?_strcmp:
   780                           	opt stack 0
   781  00002A                     ?___wmul:
   782                           	opt stack 0
   783  00002A                     ?___awdiv:
   784                           	opt stack 0
   785  00002A                     ?___lwdiv:
   786                           	opt stack 0
   787  00002A                     Delay100TCYx@unit:
   788                           	opt stack 0
   789  00002A                     Delay1KTCYx@unit:
   790                           	opt stack 0
   791  00002A                     RtccReadDate@pDt:
   792                           	opt stack 0
   793  00002A                     RtccReadTime@pTm:
   794                           	opt stack 0
   795  00002A                     RtccWriteDate@pDt:
   796                           	opt stack 0
   797  00002A                     RtccWriteTime@pTm:
   798                           	opt stack 0
   799  00002A                     ___wmul@multiplier:
   800                           	opt stack 0
   801  00002A                     ___awdiv@dividend:
   802                           	opt stack 0
   803  00002A                     ___lwdiv@dividend:
   804                           	opt stack 0
   805  00002A                     strcat@to:
   806                           	opt stack 0
   807  00002A                     strcmp@s1:
   808                           	opt stack 0
   809  00002A                     strcpy@to:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x0
   813  00002A                     	ds	1
   814  00002B                     lcd_send_nibble@nibble:
   815                           	opt stack 0
   816  00002B                     _isdigit$2205:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x1
   820  00002B                     	ds	1
   821  00002C                     lcd_send_byte@n:
   822                           	opt stack 0
   823  00002C                     RtccWriteDate@di:
   824                           	opt stack 0
   825  00002C                     RtccWriteTime@di:
   826                           	opt stack 0
   827  00002C                     isdigit@c:
   828                           	opt stack 0
   829  00002C                     ___wmul@multiplicand:
   830                           	opt stack 0
   831  00002C                     ___awdiv@divisor:
   832                           	opt stack 0
   833  00002C                     ___lwdiv@divisor:
   834                           	opt stack 0
   835  00002C                     strcat@from:
   836                           	opt stack 0
   837  00002C                     strcmp@s2:
   838                           	opt stack 0
   839  00002C                     strcpy@from:
   840                           	opt stack 0
   841  00002C                     RtccReadDate@rTD1:
   842                           	opt stack 0
   843  00002C                     RtccReadTime@rTD1:
   844                           	opt stack 0
   845                           
   846                           ; 8 bytes @ 0x2
   847  00002C                     	ds	1
   848  00002D                     lcd_send_byte@address:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x3
   852  00002D                     	ds	1
   853  00002E                     ??_strcmp:
   854  00002E                     lcd_init@i:
   855                           	opt stack 0
   856  00002E                     lcd_gotoxy@y:
   857                           	opt stack 0
   858  00002E                     lcd_comand@d:
   859                           	opt stack 0
   860  00002E                     RtccWriteDate@wasOn:
   861                           	opt stack 0
   862  00002E                     RtccWriteTime@wasOn:
   863                           	opt stack 0
   864  00002E                     ___awdiv@counter:
   865                           	opt stack 0
   866  00002E                     ___wmul@product:
   867                           	opt stack 0
   868  00002E                     ___lwdiv@quotient:
   869                           	opt stack 0
   870  00002E                     strcat@cp:
   871                           	opt stack 0
   872  00002E                     strcpy@cp:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x4
   876  00002E                     	ds	1
   877  00002F                     lcd_gotoxy@x:
   878                           	opt stack 0
   879  00002F                     RtccWriteDate@wasAlrm:
   880                           	opt stack 0
   881  00002F                     RtccWriteTime@wasAlrm:
   882                           	opt stack 0
   883  00002F                     ___awdiv@sign:
   884                           	opt stack 0
   885  00002F                     strcmp@r:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x5
   889  00002F                     	ds	1
   890  000030                     lcd_gotoxy@address:
   891                           	opt stack 0
   892  000030                     RtccWriteTime@wasWrEn:
   893                           	opt stack 0
   894  000030                     ___lwdiv@counter:
   895                           	opt stack 0
   896  000030                     RtccWriteDate@tempYear:
   897                           	opt stack 0
   898  000030                     ___awdiv@quotient:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x6
   902  000030                     	ds	1
   903  000031                     ?___lwmod:
   904                           	opt stack 0
   905  000031                     lcd_putc@c:
   906                           	opt stack 0
   907  000031                     RtccWriteTime@tempMinSec:
   908                           	opt stack 0
   909  000031                     ___lwmod@dividend:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x7
   913  000031                     	ds	1
   914  000032                     RtccWriteDate@wasWrEn:
   915                           	opt stack 0
   916  000032                     lcd_putrs@ptr:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x8
   920  000032                     	ds	1
   921  000033                     RtccWriteDate@tempDayMonth:
   922                           	opt stack 0
   923  000033                     RtccWriteTime@tempHourWDay:
   924                           	opt stack 0
   925  000033                     ___lwmod@divisor:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x9
   929  000033                     	ds	1
   930  000034                     lcd_write@column:
   931                           	opt stack 0
   932  000034                     RtccReadDate@rTD0:
   933                           	opt stack 0
   934  000034                     RtccReadTime@rTD0:
   935                           	opt stack 0
   936                           
   937                           ; 8 bytes @ 0xA
   938  000034                     	ds	1
   939  000035                     ___lwmod@counter:
   940                           	opt stack 0
   941  000035                     RtccWriteDate@tempHourWDay:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0xB
   945  000035                     	ds	1
   946  000036                     ?_sprintf:
   947                           	opt stack 0
   948  000036                     lcd_write@row:
   949                           	opt stack 0
   950  000036                     sprintf@sp:
   951                           	opt stack 0
   952                           
   953                           ; 2 bytes @ 0xC
   954  000036                     	ds	1
   955  000037                     
   956                           ; 0 bytes @ 0xD
   957  000037                     	ds	1
   958  000038                     lcd_write@string:
   959                           	opt stack 0
   960  000038                     sprintf@f:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0xE
   964  000038                     	ds	2
   965  00003A                     ??_menu_selector:
   966  00003A                     ??_submenu_selector:
   967  00003A                     ??_button_B_menu:
   968  00003A                     ??_button_B_submenu_activation:
   969  00003A                     ??_button_B_submenu_pin_config:
   970  00003A                     ??_button_B_submenu_siren_config:
   971  00003A                     ??_button_B_submenu_siren_volume:
   972  00003A                     ??_button_B_submenu_siren_tone:
   973  00003A                     ??_button_B_submenu_date_and_time_config:
   974  00003A                     
   975                           ; 0 bytes @ 0x10
   976  00003A                     	ds	2
   977  00003C                     ??_button_A:
   978  00003C                     ??_button_B:
   979                           
   980                           ; 0 bytes @ 0x12
   981  00003C                     	ds	4
   982  000040                     ??_sprintf:
   983                           
   984                           ; 0 bytes @ 0x16
   985  000040                     	ds	4
   986  000044                     sprintf@ap:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x1A
   990  000044                     	ds	2
   991  000046                     sprintf@flag:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x1C
   995  000046                     	ds	1
   996  000047                     sprintf@val:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x1D
  1000  000047                     	ds	2
  1001  000049                     sprintf@prec:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x1F
  1005  000049                     	ds	1
  1006  00004A                     sprintf@width:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0x20
  1010  00004A                     	ds	2
  1011  00004C                     sprintf@c:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x22
  1015  00004C                     	ds	1
  1016  00004D                     ??_home_config_refresh:
  1017  00004D                     ??_keyboard_control:
  1018                           
  1019                           ; 0 bytes @ 0x23
  1020  00004D                     	ds	2
  1021  00004F                     tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           postdec1	equ	0xFE5
  1028                           fsr1l	equ	0xFE1
  1029                           
  1030                           ; 0 bytes @ 0x25
  1031 ;;
  1032 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1033 ;;
  1034 ;; *************** function _main *****************
  1035 ;; Defined at:
  1036 ;;		line 774 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2  465[None  ] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels required when called:   11
  1056 ;; This function calls:
  1057 ;;		_Read_RTC
  1058 ;;		_activity_home
  1059 ;;		_activity_submenu_date_config_refresh
  1060 ;;		_activity_submenu_time_config_refresh
  1061 ;;		_check_home_callback
  1062 ;;		_home_clock_refresh
  1063 ;;		_home_config_refresh
  1064 ;;		_keyboard_control
  1065 ;;		_setup
  1066 ;; This function is called by:
  1067 ;;		Startup code after reset
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text0
  1072  00EAF2                     __ptext0:
  1073                           	opt stack 0
  1074  00EAF2                     _main:
  1075                           	opt stack 20
  1076                           
  1077                           ;main.c: 776: setup();
  1078                           
  1079                           ; BSR set to: 15
  1080                           ;incstack = 0
  1081  00EAF2  EC55  F079         	call	_setup	;wreg free
  1082                           
  1083                           ;main.c: 777: activity_home();
  1084  00EAF6  EC70  F072         	call	_activity_home	;wreg free
  1085  00EAFA  D000               	goto	l4029
  1086  00EAFC                     l4029:
  1087                           
  1088                           ;main.c: 781: check_home_callback();
  1089  00EAFC  EC27  F072         	call	_check_home_callback	;wreg free
  1090                           
  1091                           ;main.c: 782: Read_RTC();
  1092  00EB00  EC42  F07B         	call	_Read_RTC	;wreg free
  1093                           
  1094                           ;main.c: 783: keyboard_control();
  1095  00EB04  ECE9  F07C         	call	_keyboard_control	;wreg free
  1096                           
  1097                           ;main.c: 785: if(activity == 0){
  1098  00EB08  5003               	movf	_activity,w,c
  1099  00EB0A  1004               	iorwf	_activity+1,w,c
  1100  00EB0C  A4D8               	btfss	status,2,c
  1101  00EB0E  D005               	goto	l4039
  1102                           
  1103                           ;main.c: 786: home_clock_refresh();
  1104  00EB10  EC5B  F07A         	call	_home_clock_refresh	;wreg free
  1105                           
  1106                           ;main.c: 787: home_config_refresh();
  1107  00EB14  ECEF  F07A         	call	_home_config_refresh	;wreg free
  1108                           
  1109                           ;main.c: 788: }
  1110  00EB18  D7F1               	goto	l4029
  1111  00EB1A                     l4039:
  1112                           
  1113                           ;main.c: 789: else if(activity == 10){
  1114  00EB1A  0E0A               	movlw	10
  1115  00EB1C  1803               	xorwf	_activity,w,c
  1116  00EB1E  1004               	iorwf	_activity+1,w,c
  1117  00EB20  A4D8               	btfss	status,2,c
  1118  00EB22  D003               	goto	l4043
  1119                           
  1120                           ;main.c: 790: activity_submenu_date_config_refresh();
  1121  00EB24  ECB9  F076         	call	_activity_submenu_date_config_refresh	;wreg free
  1122                           
  1123                           ;main.c: 791: }
  1124  00EB28  D7E9               	goto	l4029
  1125  00EB2A                     l4043:
  1126                           
  1127                           ;main.c: 792: else if(activity == 11){
  1128  00EB2A  0E0B               	movlw	11
  1129  00EB2C  1803               	xorwf	_activity,w,c
  1130  00EB2E  1004               	iorwf	_activity+1,w,c
  1131  00EB30  A4D8               	btfss	status,2,c
  1132  00EB32  D7E4               	goto	l4029
  1133                           
  1134                           ;main.c: 793: activity_submenu_time_config_refresh();
  1135  00EB34  ECE6  F076         	call	_activity_submenu_time_config_refresh	;wreg free
  1136  00EB38  D7E1               	goto	l4029
  1137                           
  1138                           ;main.c: 794: }
  1139                           ;main.c: 796: }
  1140                           ;main.c: 798: return 0;
  1141                           ;	Return value of _main is never used
  1142  00EB3A  EF00  F000         	goto	start
  1143  00EB3E                     __end_of_main:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           postdec1	equ	0xFE5
  1152                           fsr1l	equ	0xFE1
  1153                           status	equ	0xFD8
  1154                           
  1155 ;; *************** function _setup *****************
  1156 ;; Defined at:
  1157 ;;		line 734 in file "main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;		None               void
  1164 ;; Registers used:
  1165 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1175 ;;Total ram usage:        0 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    3
  1178 ;; This function calls:
  1179 ;;		_Write_RTC
  1180 ;;		_lcd_comand
  1181 ;;		_lcd_init
  1182 ;;		_pin_reset
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text1
  1189  00F2AA                     __ptext1:
  1190                           	opt stack 0
  1191  00F2AA                     _setup:
  1192                           	opt stack 27
  1193                           
  1194                           ;main.c: 736: OSCTUNEbits.INTSRC=1;
  1195                           
  1196                           ;incstack = 0
  1197  00F2AA  8E9B               	bsf	3995,7,c	;volatile
  1198                           
  1199                           ;main.c: 737: OSCTUNEbits.PLLEN=0;
  1200  00F2AC  9C9B               	bcf	3995,6,c	;volatile
  1201                           
  1202                           ;main.c: 738: OSCCONbits.IRCF0=1;
  1203  00F2AE  88D3               	bsf	4051,4,c	;volatile
  1204                           
  1205                           ;main.c: 739: OSCCONbits.IRCF1=1;
  1206  00F2B0  8AD3               	bsf	4051,5,c	;volatile
  1207                           
  1208                           ;main.c: 740: OSCCONbits.IRCF2=1;
  1209  00F2B2  8CD3               	bsf	4051,6,c	;volatile
  1210                           
  1211                           ;main.c: 741: OSCCONbits.SCS0=0;
  1212  00F2B4  90D3               	bcf	4051,0,c	;volatile
  1213                           
  1214                           ;main.c: 742: OSCCONbits.SCS1=0;
  1215  00F2B6  92D3               	bcf	4051,1,c	;volatile
  1216                           
  1217                           ;main.c: 743: TRISA = 0b11110000;
  1218  00F2B8  0EF0               	movlw	240
  1219  00F2BA  6E92               	movwf	3986,c	;volatile
  1220                           
  1221                           ;main.c: 744: TRISB = 0;
  1222  00F2BC  0E00               	movlw	0
  1223  00F2BE  6E93               	movwf	3987,c	;volatile
  1224                           
  1225                           ;main.c: 745: TRISC = 0b00000111;
  1226  00F2C0  0E07               	movlw	7
  1227  00F2C2  6E94               	movwf	3988,c	;volatile
  1228                           
  1229                           ;main.c: 749: ANCON0=0b11111111;
  1230  00F2C4  010F               	movlb	15	; () banked
  1231  00F2C6  6948               	setf	72,b	;volatile
  1232                           
  1233                           ; BSR set to: 15
  1234                           ;main.c: 751: ANCON1=0b11111111;
  1235  00F2C8  010F               	movlb	15	; () banked
  1236  00F2CA  6949               	setf	73,b	;volatile
  1237                           
  1238                           ;main.c: 752: ADCON0=0b00101101;
  1239  00F2CC  0E2D               	movlw	45
  1240  00F2CE  6EC2               	movwf	4034,c	;volatile
  1241                           
  1242                           ;main.c: 753: ADCON1=0b00010000;
  1243  00F2D0  0E10               	movlw	16
  1244  00F2D2  6EC1               	movwf	4033,c	;volatile
  1245                           
  1246                           ; BSR set to: 15
  1247                           ;main.c: 754: RTCCFGbits.RTCEN=1;
  1248  00F2D4  010F               	movlb	15	; () banked
  1249  00F2D6  8F3F               	bsf	63,7,b	;volatile
  1250                           
  1251                           ; BSR set to: 15
  1252                           ;main.c: 755: RTCCFGbits.RTCWREN=1;
  1253  00F2D8  010F               	movlb	15	; () banked
  1254  00F2DA  8B3F               	bsf	63,5,b	;volatile
  1255                           
  1256                           ; BSR set to: 15
  1257                           ;main.c: 756: T1CONbits.T1OSCEN=1;
  1258  00F2DC  86CD               	bsf	4045,3,c	;volatile
  1259                           
  1260                           ; BSR set to: 15
  1261                           ;main.c: 757: Write_RTC();
  1262  00F2DE  EC94  F07D         	call	_Write_RTC	;wreg free
  1263                           
  1264                           ;main.c: 758: lcd_init();
  1265  00F2E2  EC93  F079         	call	_lcd_init	;wreg free
  1266                           
  1267                           ;main.c: 759: lcd_comand(0b00001100);
  1268  00F2E6  0E0C               	movlw	12
  1269  00F2E8  ECC2  F071         	call	_lcd_comand
  1270                           
  1271                           ;main.c: 760: LATBbits.LATB1 = 1;;
  1272  00F2EC  828A               	bsf	3978,1,c	;volatile
  1273                           
  1274                           ;main.c: 761: LATBbits.LATB0 = 1;;
  1275  00F2EE  808A               	bsf	3978,0,c	;volatile
  1276                           
  1277                           ;main.c: 764: home_callback_delay = 50;
  1278  00F2F0  0E00               	movlw	0
  1279  00F2F2  6E12               	movwf	_home_callback_delay+1,c
  1280  00F2F4  0E32               	movlw	50
  1281  00F2F6  6E11               	movwf	_home_callback_delay,c
  1282                           
  1283                           ;main.c: 765: config_widget = 0;
  1284  00F2F8  0E00               	movlw	0
  1285  00F2FA  6E0C               	movwf	_config_widget+1,c
  1286  00F2FC  0E00               	movlw	0
  1287  00F2FE  6E0B               	movwf	_config_widget,c
  1288                           
  1289                           ;main.c: 766: menu_selected = 0;
  1290  00F300  0E00               	movlw	0
  1291  00F302  6E18               	movwf	_menu_selected+1,c
  1292  00F304  0E00               	movlw	0
  1293  00F306  6E17               	movwf	_menu_selected,c
  1294                           
  1295                           ;main.c: 767: submenu_selected = 0;
  1296  00F308  0E00               	movlw	0
  1297  00F30A  6E20               	movwf	_submenu_selected+1,c
  1298  00F30C  0E00               	movlw	0
  1299  00F30E  6E1F               	movwf	_submenu_selected,c
  1300                           
  1301                           ;main.c: 768: alarm_volume = 0;
  1302  00F310  0E00               	movlw	0
  1303  00F312  6E08               	movwf	_alarm_volume+1,c
  1304  00F314  0E00               	movlw	0
  1305  00F316  6E07               	movwf	_alarm_volume,c
  1306                           
  1307                           ;main.c: 769: alarm_tone = 0;
  1308  00F318  0E00               	movlw	0
  1309  00F31A  6E06               	movwf	_alarm_tone+1,c
  1310  00F31C  0E00               	movlw	0
  1311  00F31E  6E05               	movwf	_alarm_tone,c
  1312                           
  1313                           ;main.c: 770: pin_reset();
  1314  00F320  ECE4  F071         	call	_pin_reset	;wreg free
  1315  00F324  0012               	return		;funcret
  1316  00F326                     __end_of_setup:
  1317                           	opt stack 0
  1318                           tblptru	equ	0xFF8
  1319                           tblptrh	equ	0xFF7
  1320                           tblptrl	equ	0xFF6
  1321                           tablat	equ	0xFF5
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           postdec1	equ	0xFE5
  1325                           fsr1l	equ	0xFE1
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _Write_RTC *****************
  1329 ;; Defined at:
  1330 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    2
  1351 ;; This function calls:
  1352 ;;		_RtccWrOn
  1353 ;;		_RtccWriteDate
  1354 ;;		_RtccWriteTime
  1355 ;;		___awdiv
  1356 ;; This function is called by:
  1357 ;;		_setup
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text2
  1362  00FB28                     __ptext2:
  1363                           	opt stack 0
  1364  00FB28                     _Write_RTC:
  1365                           	opt stack 27
  1366                           
  1367                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1368                           
  1369                           ;incstack = 0
  1370  00FB28  ECDB  F071         	call	_RtccWrOn	;wreg free
  1371                           
  1372                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1373  00FB2C  80A3               	bsf	4003,0,c	;volatile
  1374                           
  1375                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1376  00FB2E  C01B  F02A         	movff	_segundo,___awdiv@dividend
  1377  00FB32  C01C  F02B         	movff	_segundo+1,___awdiv@dividend+1
  1378  00FB36  0E00               	movlw	0
  1379  00FB38  6E2D               	movwf	___awdiv@divisor+1,c
  1380  00FB3A  0E0A               	movlw	10
  1381  00FB3C  6E2C               	movwf	___awdiv@divisor,c
  1382  00FB3E  ECA4  F07A         	call	___awdiv	;wreg free
  1383  00FB42  502A               	movf	?___awdiv,w,c
  1384  00FB44  6E5E               	movwf	_segundo_d,c
  1385                           
  1386                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1387  00FB46  505E               	movf	_segundo_d,w,c
  1388  00FB48  0D0A               	mullw	10
  1389  00FB4A  50F3               	movf	prodl,w,c
  1390  00FB4C  0800               	sublw	0
  1391  00FB4E  241B               	addwf	_segundo,w,c
  1392  00FB50  0100               	movlb	0	; () banked
  1393  00FB52  6FA4               	movwf	_segundo_u& (0+255),b
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1397  00FB54  505E               	movf	_segundo_d,w,c
  1398  00FB56  0D10               	mullw	16
  1399  00FB58  50F3               	movf	prodl,w,c
  1400  00FB5A  0100               	movlb	0	; () banked
  1401  00FB5C  25A4               	addwf	_segundo_u& (0+255),w,b
  1402  00FB5E  6E27               	movwf	_RtccTime+1,c
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1406  00FB60  C019  F02A         	movff	_minuto,___awdiv@dividend
  1407  00FB64  C01A  F02B         	movff	_minuto+1,___awdiv@dividend+1
  1408  00FB68  0E00               	movlw	0
  1409  00FB6A  6E2D               	movwf	___awdiv@divisor+1,c
  1410  00FB6C  0E0A               	movlw	10
  1411  00FB6E  6E2C               	movwf	___awdiv@divisor,c
  1412  00FB70  ECA4  F07A         	call	___awdiv	;wreg free
  1413  00FB74  502A               	movf	?___awdiv,w,c
  1414  00FB76  6E5D               	movwf	_minuto_d,c
  1415                           
  1416                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1417  00FB78  505D               	movf	_minuto_d,w,c
  1418  00FB7A  0D0A               	mullw	10
  1419  00FB7C  50F3               	movf	prodl,w,c
  1420  00FB7E  0800               	sublw	0
  1421  00FB80  2419               	addwf	_minuto,w,c
  1422  00FB82  0100               	movlb	0	; () banked
  1423  00FB84  6FA3               	movwf	_minuto_u& (0+255),b
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1427  00FB86  505D               	movf	_minuto_d,w,c
  1428  00FB88  0D10               	mullw	16
  1429  00FB8A  50F3               	movf	prodl,w,c
  1430  00FB8C  0100               	movlb	0	; () banked
  1431  00FB8E  25A3               	addwf	_minuto_u& (0+255),w,b
  1432  00FB90  6E28               	movwf	_RtccTime+2,c
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1436  00FB92  C055  F02A         	movff	_hora,___awdiv@dividend
  1437  00FB96  C056  F02B         	movff	_hora+1,___awdiv@dividend+1
  1438  00FB9A  0E00               	movlw	0
  1439  00FB9C  6E2D               	movwf	___awdiv@divisor+1,c
  1440  00FB9E  0E0A               	movlw	10
  1441  00FBA0  6E2C               	movwf	___awdiv@divisor,c
  1442  00FBA2  ECA4  F07A         	call	___awdiv	;wreg free
  1443  00FBA6  502A               	movf	?___awdiv,w,c
  1444  00FBA8  6E5B               	movwf	_hora_d,c
  1445                           
  1446                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1447  00FBAA  505B               	movf	_hora_d,w,c
  1448  00FBAC  0D0A               	mullw	10
  1449  00FBAE  50F3               	movf	prodl,w,c
  1450  00FBB0  0800               	sublw	0
  1451  00FBB2  2455               	addwf	_hora,w,c
  1452  00FBB4  0100               	movlb	0	; () banked
  1453  00FBB6  6FA1               	movwf	_hora_u& (0+255),b
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1457  00FBB8  505B               	movf	_hora_d,w,c
  1458  00FBBA  0D10               	mullw	16
  1459  00FBBC  50F3               	movf	prodl,w,c
  1460  00FBBE  0100               	movlb	0	; () banked
  1461  00FBC0  25A1               	addwf	_hora_u& (0+255),w,b
  1462  00FBC2  6E29               	movwf	_RtccTime+3,c
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1466  00FBC4  C04F  F02A         	movff	_anio,___awdiv@dividend
  1467  00FBC8  C050  F02B         	movff	_anio+1,___awdiv@dividend+1
  1468  00FBCC  0E00               	movlw	0
  1469  00FBCE  6E2D               	movwf	___awdiv@divisor+1,c
  1470  00FBD0  0E0A               	movlw	10
  1471  00FBD2  6E2C               	movwf	___awdiv@divisor,c
  1472  00FBD4  ECA4  F07A         	call	___awdiv	;wreg free
  1473  00FBD8  502A               	movf	?___awdiv,w,c
  1474  00FBDA  6E59               	movwf	_anio_d,c
  1475                           
  1476                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1477  00FBDC  5059               	movf	_anio_d,w,c
  1478  00FBDE  0D0A               	mullw	10
  1479  00FBE0  50F3               	movf	prodl,w,c
  1480  00FBE2  0800               	sublw	0
  1481  00FBE4  244F               	addwf	_anio,w,c
  1482  00FBE6  0100               	movlb	0	; () banked
  1483  00FBE8  6F9E               	movwf	_anio_u& (0+255),b
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1487  00FBEA  5059               	movf	_anio_d,w,c
  1488  00FBEC  0D10               	mullw	16
  1489  00FBEE  50F3               	movf	prodl,w,c
  1490  00FBF0  0100               	movlb	0	; () banked
  1491  00FBF2  259E               	addwf	_anio_u& (0+255),w,b
  1492  00FBF4  6E25               	movwf	_RtccDate+3,c
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1496  00FBF6  C057  F02A         	movff	_mes,___awdiv@dividend
  1497  00FBFA  C058  F02B         	movff	_mes+1,___awdiv@dividend+1
  1498  00FBFE  0E00               	movlw	0
  1499  00FC00  6E2D               	movwf	___awdiv@divisor+1,c
  1500  00FC02  0E0A               	movlw	10
  1501  00FC04  6E2C               	movwf	___awdiv@divisor,c
  1502  00FC06  ECA4  F07A         	call	___awdiv	;wreg free
  1503  00FC0A  502A               	movf	?___awdiv,w,c
  1504  00FC0C  6E5C               	movwf	_mes_d,c
  1505                           
  1506                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1507  00FC0E  505C               	movf	_mes_d,w,c
  1508  00FC10  0D0A               	mullw	10
  1509  00FC12  50F3               	movf	prodl,w,c
  1510  00FC14  0800               	sublw	0
  1511  00FC16  2457               	addwf	_mes,w,c
  1512  00FC18  0100               	movlb	0	; () banked
  1513  00FC1A  6FA2               	movwf	_mes_u& (0+255),b
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1517  00FC1C  505C               	movf	_mes_d,w,c
  1518  00FC1E  0D10               	mullw	16
  1519  00FC20  50F3               	movf	prodl,w,c
  1520  00FC22  0100               	movlb	0	; () banked
  1521  00FC24  25A2               	addwf	_mes_u& (0+255),w,b
  1522  00FC26  6E24               	movwf	_RtccDate+2,c
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1526  00FC28  C051  F02A         	movff	_dia,___awdiv@dividend
  1527  00FC2C  C052  F02B         	movff	_dia+1,___awdiv@dividend+1
  1528  00FC30  0E00               	movlw	0
  1529  00FC32  6E2D               	movwf	___awdiv@divisor+1,c
  1530  00FC34  0E0A               	movlw	10
  1531  00FC36  6E2C               	movwf	___awdiv@divisor,c
  1532  00FC38  ECA4  F07A         	call	___awdiv	;wreg free
  1533  00FC3C  502A               	movf	?___awdiv,w,c
  1534  00FC3E  6E5A               	movwf	_fecha_d,c
  1535                           
  1536                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1537  00FC40  505A               	movf	_fecha_d,w,c
  1538  00FC42  0D0A               	mullw	10
  1539  00FC44  50F3               	movf	prodl,w,c
  1540  00FC46  0800               	sublw	0
  1541  00FC48  2451               	addwf	_dia,w,c
  1542  00FC4A  0100               	movlb	0	; () banked
  1543  00FC4C  6FA0               	movwf	_fecha_u& (0+255),b
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1547  00FC4E  505A               	movf	_fecha_d,w,c
  1548  00FC50  0D10               	mullw	16
  1549  00FC52  50F3               	movf	prodl,w,c
  1550  00FC54  0100               	movlb	0	; () banked
  1551  00FC56  25A0               	addwf	_fecha_u& (0+255),w,b
  1552  00FC58  6E23               	movwf	_RtccDate+1,c
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1556  00FC5A  C053  F09F         	movff	_diasem,_dia_semana
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1560  00FC5E  C053  F022         	movff	_diasem,_RtccDate
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1564  00FC62  0E26               	movlw	low _RtccTime
  1565  00FC64  6E2A               	movwf	RtccWriteTime@pTm,c
  1566  00FC66  0E00               	movlw	high _RtccTime
  1567  00FC68  6E2B               	movwf	RtccWriteTime@pTm+1,c
  1568  00FC6A  0E01               	movlw	1
  1569  00FC6C  6E2C               	movwf	RtccWriteTime@di,c
  1570  00FC6E  ECC0  F07B         	call	_RtccWriteTime	;wreg free
  1571                           
  1572                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1573  00FC72  0E22               	movlw	low _RtccDate
  1574  00FC74  6E2A               	movwf	RtccWriteDate@pDt,c
  1575  00FC76  0E00               	movlw	high _RtccDate
  1576  00FC78  6E2B               	movwf	RtccWriteDate@pDt+1,c
  1577  00FC7A  0E01               	movlw	1
  1578  00FC7C  6E2C               	movwf	RtccWriteDate@di,c
  1579  00FC7E  EC46  F07C         	call	_RtccWriteDate	;wreg free
  1580                           
  1581                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1582  00FC82  010F               	movlb	15	; () banked
  1583  00FC84  8F3F               	bsf	63,7,b	;volatile
  1584                           
  1585                           ; BSR set to: 15
  1586  00FC86  0012               	return		;funcret
  1587  00FC88                     __end_of_Write_RTC:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           prodl	equ	0xFF3
  1594                           postinc0	equ	0xFEE
  1595                           wreg	equ	0xFE8
  1596                           postdec1	equ	0xFE5
  1597                           fsr1l	equ	0xFE1
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function ___awdiv *****************
  1601 ;; Defined at:
  1602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  dividend        2    0[COMRAM] int 
  1605 ;;  divisor         2    2[COMRAM] int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  quotient        2    6[COMRAM] int 
  1608 ;;  sign            1    5[COMRAM] unsigned char 
  1609 ;;  counter         1    4[COMRAM] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  2    0[COMRAM] int 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1620 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1622 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1623 ;;Total ram usage:        8 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_Write_RTC
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text3
  1633  00F548                     __ptext3:
  1634                           	opt stack 0
  1635  00F548                     ___awdiv:
  1636                           	opt stack 28
  1637                           
  1638                           ; BSR set to: 15
  1639                           ;incstack = 0
  1640  00F548  0E00               	movlw	0
  1641  00F54A  6E2F               	movwf	___awdiv@sign,c
  1642  00F54C  AE2D               	btfss	___awdiv@divisor+1,7,c
  1643  00F54E  D007               	goto	l3561
  1644  00F550  6C2C               	negf	___awdiv@divisor,c
  1645  00F552  1E2D               	comf	___awdiv@divisor+1,f,c
  1646  00F554  B0D8               	btfsc	status,0,c
  1647  00F556  2A2D               	incf	___awdiv@divisor+1,f,c
  1648  00F558  0E01               	movlw	1
  1649  00F55A  6E2F               	movwf	___awdiv@sign,c
  1650  00F55C  D000               	goto	l3561
  1651  00F55E                     l3561:
  1652  00F55E  AE2B               	btfss	___awdiv@dividend+1,7,c
  1653  00F560  D007               	goto	l3567
  1654  00F562  6C2A               	negf	___awdiv@dividend,c
  1655  00F564  1E2B               	comf	___awdiv@dividend+1,f,c
  1656  00F566  B0D8               	btfsc	status,0,c
  1657  00F568  2A2B               	incf	___awdiv@dividend+1,f,c
  1658  00F56A  0E01               	movlw	1
  1659  00F56C  1A2F               	xorwf	___awdiv@sign,f,c
  1660  00F56E  D000               	goto	l3567
  1661  00F570                     l3567:
  1662  00F570  0E00               	movlw	0
  1663  00F572  6E31               	movwf	___awdiv@quotient+1,c
  1664  00F574  0E00               	movlw	0
  1665  00F576  6E30               	movwf	___awdiv@quotient,c
  1666  00F578  502C               	movf	___awdiv@divisor,w,c
  1667  00F57A  102D               	iorwf	___awdiv@divisor+1,w,c
  1668  00F57C  B4D8               	btfsc	status,2,c
  1669  00F57E  D021               	goto	l3589
  1670  00F580  0E01               	movlw	1
  1671  00F582  6E2E               	movwf	___awdiv@counter,c
  1672  00F584  D005               	goto	l3575
  1673  00F586                     l3573:
  1674  00F586  90D8               	bcf	status,0,c
  1675  00F588  362C               	rlcf	___awdiv@divisor,f,c
  1676  00F58A  362D               	rlcf	___awdiv@divisor+1,f,c
  1677  00F58C  2A2E               	incf	___awdiv@counter,f,c
  1678  00F58E  D000               	goto	l3575
  1679  00F590                     l3575:
  1680  00F590  BE2D               	btfsc	___awdiv@divisor+1,7,c
  1681  00F592  D002               	goto	l3577
  1682  00F594  D7F8               	goto	l3573
  1683  00F596  D000               	goto	l3577
  1684  00F598                     l3577:
  1685  00F598  90D8               	bcf	status,0,c
  1686  00F59A  3630               	rlcf	___awdiv@quotient,f,c
  1687  00F59C  3631               	rlcf	___awdiv@quotient+1,f,c
  1688  00F59E  502C               	movf	___awdiv@divisor,w,c
  1689  00F5A0  5C2A               	subwf	___awdiv@dividend,w,c
  1690  00F5A2  502D               	movf	___awdiv@divisor+1,w,c
  1691  00F5A4  582B               	subwfb	___awdiv@dividend+1,w,c
  1692  00F5A6  A0D8               	btfss	status,0,c
  1693  00F5A8  D006               	goto	l3585
  1694  00F5AA  502C               	movf	___awdiv@divisor,w,c
  1695  00F5AC  5E2A               	subwf	___awdiv@dividend,f,c
  1696  00F5AE  502D               	movf	___awdiv@divisor+1,w,c
  1697  00F5B0  5A2B               	subwfb	___awdiv@dividend+1,f,c
  1698  00F5B2  8030               	bsf	___awdiv@quotient,0,c
  1699  00F5B4  D000               	goto	l3585
  1700  00F5B6                     l3585:
  1701  00F5B6  90D8               	bcf	status,0,c
  1702  00F5B8  322D               	rrcf	___awdiv@divisor+1,f,c
  1703  00F5BA  322C               	rrcf	___awdiv@divisor,f,c
  1704  00F5BC  2E2E               	decfsz	___awdiv@counter,f,c
  1705  00F5BE  D7EC               	goto	l3577
  1706  00F5C0  D000               	goto	l3589
  1707  00F5C2                     l3589:
  1708  00F5C2  502F               	movf	___awdiv@sign,w,c
  1709  00F5C4  B4D8               	btfsc	status,2,c
  1710  00F5C6  D005               	goto	l3593
  1711  00F5C8  6C30               	negf	___awdiv@quotient,c
  1712  00F5CA  1E31               	comf	___awdiv@quotient+1,f,c
  1713  00F5CC  B0D8               	btfsc	status,0,c
  1714  00F5CE  2A31               	incf	___awdiv@quotient+1,f,c
  1715  00F5D0  D000               	goto	l3593
  1716  00F5D2                     l3593:
  1717  00F5D2  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  1718  00F5D6  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  1719  00F5DA  0012               	return	
  1720  00F5DC  0012               	return		;funcret
  1721  00F5DE                     __end_of___awdiv:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodl	equ	0xFF3
  1728                           postinc0	equ	0xFEE
  1729                           wreg	equ	0xFE8
  1730                           postdec1	equ	0xFE5
  1731                           fsr1l	equ	0xFE1
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _RtccWriteTime *****************
  1735 ;; Defined at:
  1736 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  pTm             2    0[COMRAM] PTR const struct .
  1739 ;;		 -> RtccTime(4), 
  1740 ;;  di              1    2[COMRAM] enum E7121
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  tempHourWDay    2    9[COMRAM] struct .
  1743 ;;  tempMinSec      2    7[COMRAM] struct .
  1744 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1745 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1746 ;;  wasOn           1    4[COMRAM] enum E7121
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      enum E7481
  1749 ;; Registers used:
  1750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1756 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;Total ram usage:       11 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    1
  1763 ;; This function calls:
  1764 ;;		_RtccWrOn
  1765 ;; This function is called by:
  1766 ;;		_Write_RTC
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text4
  1771  00F780                     __ptext4:
  1772                           	opt stack 0
  1773  00F780                     _RtccWriteTime:
  1774                           	opt stack 27
  1775                           
  1776                           ;incstack = 0
  1777  00F780  0E00               	movlw	0
  1778  00F782  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1779  00F784  EE20 F002          	lfsr	2,2
  1780  00F788  502A               	movf	RtccWriteTime@pTm,w,c
  1781  00F78A  26D9               	addwf	fsr2l,f,c
  1782  00F78C  502B               	movf	RtccWriteTime@pTm+1,w,c
  1783  00F78E  22DA               	addwfc	fsr2h,f,c
  1784  00F790  0E5A               	movlw	90
  1785  00F792  60DF               	cpfslt	indf2,c
  1786  00F794  0012               	return	
  1787  00F796  EE20 F001          	lfsr	2,1
  1788  00F79A  502A               	movf	RtccWriteTime@pTm,w,c
  1789  00F79C  26D9               	addwf	fsr2l,f,c
  1790  00F79E  502B               	movf	RtccWriteTime@pTm+1,w,c
  1791  00F7A0  22DA               	addwfc	fsr2h,f,c
  1792  00F7A2  0E5A               	movlw	90
  1793  00F7A4  60DF               	cpfslt	indf2,c
  1794  00F7A6  0012               	return	
  1795  00F7A8  EE20 F003          	lfsr	2,3
  1796  00F7AC  502A               	movf	RtccWriteTime@pTm,w,c
  1797  00F7AE  26D9               	addwf	fsr2l,f,c
  1798  00F7B0  502B               	movf	RtccWriteTime@pTm+1,w,c
  1799  00F7B2  22DA               	addwfc	fsr2h,f,c
  1800  00F7B4  0E24               	movlw	36
  1801  00F7B6  64DF               	cpfsgt	indf2,c
  1802  00F7B8  D002               	goto	l3171
  1803  00F7BA  0012               	return	
  1804                           
  1805                           ;	Return value of _RtccWriteTime is never used
  1806  00F7BC  0012               	return	
  1807  00F7BE                     l3171:
  1808  00F7BE  EE20 F002          	lfsr	2,2
  1809  00F7C2  502A               	movf	RtccWriteTime@pTm,w,c
  1810  00F7C4  26D9               	addwf	fsr2l,f,c
  1811  00F7C6  502B               	movf	RtccWriteTime@pTm+1,w,c
  1812  00F7C8  22DA               	addwfc	fsr2h,f,c
  1813  00F7CA  50DF               	movf	indf2,w,c
  1814  00F7CC  6E32               	movwf	RtccWriteTime@tempMinSec+1,c
  1815  00F7CE  EE20 F001          	lfsr	2,1
  1816  00F7D2  502A               	movf	RtccWriteTime@pTm,w,c
  1817  00F7D4  26D9               	addwf	fsr2l,f,c
  1818  00F7D6  502B               	movf	RtccWriteTime@pTm+1,w,c
  1819  00F7D8  22DA               	addwfc	fsr2h,f,c
  1820  00F7DA  50DF               	movf	indf2,w,c
  1821  00F7DC  6E31               	movwf	RtccWriteTime@tempMinSec,c
  1822  00F7DE  502C               	movf	RtccWriteTime@di,w,c
  1823  00F7E0  B4D8               	btfsc	status,2,c
  1824  00F7E2  D002               	goto	l3177
  1825  00F7E4  9CF2               	bcf	intcon,6,c	;volatile
  1826  00F7E6  D000               	goto	l3177
  1827  00F7E8                     l3177:
  1828  00F7E8  0E00               	movlw	0
  1829  00F7EA  BB3F               	btfsc	63,5,b	;volatile
  1830  00F7EC  0E01               	movlw	1
  1831  00F7EE  6E30               	movwf	RtccWriteTime@wasWrEn,c
  1832  00F7F0  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1833  00F7F2  A4D8               	btfss	status,2,c
  1834  00F7F4  D003               	goto	l3181
  1835  00F7F6  ECDB  F071         	call	_RtccWrOn	;wreg free
  1836  00F7FA  D000               	goto	l3181
  1837  00F7FC                     l3181:
  1838  00F7FC  0E00               	movlw	0
  1839  00F7FE  BF3F               	btfsc	63,7,b	;volatile
  1840  00F800  0E01               	movlw	1
  1841  00F802  6E2E               	movwf	RtccWriteTime@wasOn,c
  1842  00F804  502E               	movf	RtccWriteTime@wasOn,w,c
  1843  00F806  B4D8               	btfsc	status,2,c
  1844  00F808  D007               	goto	l3187
  1845  00F80A  0E00               	movlw	0
  1846  00F80C  BE91               	btfsc	3985,7,c	;volatile
  1847  00F80E  0E01               	movlw	1
  1848  00F810  6E2F               	movwf	RtccWriteTime@wasAlrm,c
  1849  00F812  010F               	movlb	15	; () banked
  1850  00F814  9F3F               	bcf	63,7,b	;volatile
  1851  00F816  D000               	goto	l3187
  1852  00F818                     l3187:
  1853  00F818  0EFC               	movlw	252
  1854  00F81A  010F               	movlb	15	; () banked
  1855  00F81C  173F               	andwf	63,f,b	;volatile
  1856  00F81E  010F               	movlb	15	; () banked
  1857  00F820  813F               	bsf	63,0,b	;volatile
  1858                           
  1859                           ; BSR set to: 15
  1860  00F822  CF98 F033          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1861                           
  1862                           ; BSR set to: 15
  1863  00F826  CF99 F034          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1864                           
  1865                           ; BSR set to: 15
  1866  00F82A  EE20 F003          	lfsr	2,3
  1867  00F82E  502A               	movf	RtccWriteTime@pTm,w,c
  1868  00F830  26D9               	addwf	fsr2l,f,c
  1869  00F832  502B               	movf	RtccWriteTime@pTm+1,w,c
  1870  00F834  22DA               	addwfc	fsr2h,f,c
  1871  00F836  50DF               	movf	indf2,w,c
  1872  00F838  6E33               	movwf	RtccWriteTime@tempHourWDay,c
  1873                           
  1874                           ; BSR set to: 15
  1875  00F83A  0EFC               	movlw	252
  1876  00F83C  010F               	movlb	15	; () banked
  1877  00F83E  173F               	andwf	63,f,b	;volatile
  1878                           
  1879                           ; BSR set to: 15
  1880  00F840  010F               	movlb	15	; () banked
  1881  00F842  813F               	bsf	63,0,b	;volatile
  1882                           
  1883                           ; BSR set to: 15
  1884  00F844  C033  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1885                           
  1886                           ; BSR set to: 15
  1887  00F848  C034  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1888                           
  1889                           ; BSR set to: 15
  1890  00F84C  C031  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1891                           
  1892                           ; BSR set to: 15
  1893  00F850  C032  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1894                           
  1895                           ; BSR set to: 15
  1896  00F854  502E               	movf	RtccWriteTime@wasOn,w,c
  1897  00F856  B4D8               	btfsc	status,2,c
  1898  00F858  D00D               	goto	l3219
  1899                           
  1900                           ; BSR set to: 15
  1901  00F85A  010F               	movlb	15	; () banked
  1902  00F85C  8F3F               	bsf	63,7,b	;volatile
  1903                           
  1904                           ; BSR set to: 15
  1905  00F85E  502F               	movf	RtccWriteTime@wasAlrm,w,c
  1906  00F860  B4D8               	btfsc	status,2,c
  1907  00F862  D002               	goto	l3215
  1908                           
  1909                           ; BSR set to: 15
  1910  00F864  8E91               	bsf	3985,7,c	;volatile
  1911  00F866  D000               	goto	l3215
  1912  00F868                     l3215:
  1913                           
  1914                           ; BSR set to: 15
  1915  00F868  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1916  00F86A  B4D8               	btfsc	status,2,c
  1917  00F86C  D009               	goto	l3223
  1918                           
  1919                           ; BSR set to: 15
  1920  00F86E  ECDB  F071         	call	_RtccWrOn	;wreg free
  1921  00F872  D006               	goto	l3223
  1922  00F874                     l3219:
  1923  00F874  5030               	movf	RtccWriteTime@wasWrEn,w,c
  1924  00F876  A4D8               	btfss	status,2,c
  1925  00F878  D003               	goto	l3223
  1926  00F87A  010F               	movlb	15	; () banked
  1927  00F87C  9B3F               	bcf	63,5,b	;volatile
  1928                           
  1929                           ; BSR set to: 15
  1930  00F87E  D000               	goto	l3223
  1931  00F880                     l3223:
  1932  00F880  502C               	movf	RtccWriteTime@di,w,c
  1933  00F882  B4D8               	btfsc	status,2,c
  1934  00F884  0012               	return	
  1935  00F886  8CF2               	bsf	intcon,6,c	;volatile
  1936  00F888  0012               	return	
  1937                           
  1938                           ;	Return value of _RtccWriteTime is never used
  1939  00F88A  0012               	return		;funcret
  1940  00F88C                     __end_of_RtccWriteTime:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           prodl	equ	0xFF3
  1947                           intcon	equ	0xFF2
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1l	equ	0xFE1
  1952                           indf2	equ	0xFDF
  1953                           fsr2h	equ	0xFDA
  1954                           fsr2l	equ	0xFD9
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _RtccWriteDate *****************
  1958 ;; Defined at:
  1959 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  pDt             2    0[COMRAM] PTR const struct .
  1962 ;;		 -> RtccDate(4), 
  1963 ;;  di              1    2[COMRAM] enum E7121
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  tempHourWDay    2   11[COMRAM] struct .
  1966 ;;  tempDayMonth    2    9[COMRAM] struct .
  1967 ;;  tempYear        2    6[COMRAM] struct .
  1968 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1969 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1970 ;;  wasOn           1    4[COMRAM] enum E7121
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      enum E7481
  1973 ;; Registers used:
  1974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1980 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1983 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;Total ram usage:       13 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    1
  1987 ;; This function calls:
  1988 ;;		_RtccWrOn
  1989 ;; This function is called by:
  1990 ;;		_Write_RTC
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text5
  1995  00F88C                     __ptext5:
  1996                           	opt stack 0
  1997  00F88C                     _RtccWriteDate:
  1998                           	opt stack 27
  1999                           
  2000                           ;incstack = 0
  2001  00F88C  0E00               	movlw	0
  2002  00F88E  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  2003  00F890  EE20 F002          	lfsr	2,2
  2004  00F894  502A               	movf	RtccWriteDate@pDt,w,c
  2005  00F896  26D9               	addwf	fsr2l,f,c
  2006  00F898  502B               	movf	RtccWriteDate@pDt+1,w,c
  2007  00F89A  22DA               	addwfc	fsr2h,f,c
  2008  00F89C  0E13               	movlw	19
  2009  00F89E  60DF               	cpfslt	indf2,c
  2010  00F8A0  0012               	return	
  2011  00F8A2  EE20 F002          	lfsr	2,2
  2012  00F8A6  502A               	movf	RtccWriteDate@pDt,w,c
  2013  00F8A8  26D9               	addwf	fsr2l,f,c
  2014  00F8AA  502B               	movf	RtccWriteDate@pDt+1,w,c
  2015  00F8AC  22DA               	addwfc	fsr2h,f,c
  2016  00F8AE  50DF               	movf	indf2,w,c
  2017  00F8B0  B4D8               	btfsc	status,2,c
  2018  00F8B2  0012               	return	
  2019  00F8B4  EE20 F001          	lfsr	2,1
  2020  00F8B8  502A               	movf	RtccWriteDate@pDt,w,c
  2021  00F8BA  26D9               	addwf	fsr2l,f,c
  2022  00F8BC  502B               	movf	RtccWriteDate@pDt+1,w,c
  2023  00F8BE  22DA               	addwfc	fsr2h,f,c
  2024  00F8C0  0E32               	movlw	50
  2025  00F8C2  60DF               	cpfslt	indf2,c
  2026  00F8C4  0012               	return	
  2027  00F8C6  EE20 F001          	lfsr	2,1
  2028  00F8CA  502A               	movf	RtccWriteDate@pDt,w,c
  2029  00F8CC  26D9               	addwf	fsr2l,f,c
  2030  00F8CE  502B               	movf	RtccWriteDate@pDt+1,w,c
  2031  00F8D0  22DA               	addwfc	fsr2h,f,c
  2032  00F8D2  50DF               	movf	indf2,w,c
  2033  00F8D4  B4D8               	btfsc	status,2,c
  2034  00F8D6  0012               	return	
  2035  00F8D8  EE20 F003          	lfsr	2,3
  2036  00F8DC  502A               	movf	RtccWriteDate@pDt,w,c
  2037  00F8DE  26D9               	addwf	fsr2l,f,c
  2038  00F8E0  502B               	movf	RtccWriteDate@pDt+1,w,c
  2039  00F8E2  22DA               	addwfc	fsr2h,f,c
  2040  00F8E4  0E99               	movlw	153
  2041  00F8E6  64DF               	cpfsgt	indf2,c
  2042  00F8E8  D002               	goto	l3239
  2043  00F8EA  0012               	return	
  2044                           
  2045                           ;	Return value of _RtccWriteDate is never used
  2046  00F8EC  0012               	return	
  2047  00F8EE                     l3239:
  2048  00F8EE  EE20 F003          	lfsr	2,3
  2049  00F8F2  502A               	movf	RtccWriteDate@pDt,w,c
  2050  00F8F4  26D9               	addwf	fsr2l,f,c
  2051  00F8F6  502B               	movf	RtccWriteDate@pDt+1,w,c
  2052  00F8F8  22DA               	addwfc	fsr2h,f,c
  2053  00F8FA  50DF               	movf	indf2,w,c
  2054  00F8FC  6E30               	movwf	RtccWriteDate@tempYear,c
  2055  00F8FE  EE20 F001          	lfsr	2,1
  2056  00F902  502A               	movf	RtccWriteDate@pDt,w,c
  2057  00F904  26D9               	addwf	fsr2l,f,c
  2058  00F906  502B               	movf	RtccWriteDate@pDt+1,w,c
  2059  00F908  22DA               	addwfc	fsr2h,f,c
  2060  00F90A  50DF               	movf	indf2,w,c
  2061  00F90C  6E33               	movwf	RtccWriteDate@tempDayMonth,c
  2062  00F90E  EE20 F002          	lfsr	2,2
  2063  00F912  502A               	movf	RtccWriteDate@pDt,w,c
  2064  00F914  26D9               	addwf	fsr2l,f,c
  2065  00F916  502B               	movf	RtccWriteDate@pDt+1,w,c
  2066  00F918  22DA               	addwfc	fsr2h,f,c
  2067  00F91A  50DF               	movf	indf2,w,c
  2068  00F91C  6E34               	movwf	RtccWriteDate@tempDayMonth+1,c
  2069  00F91E  502C               	movf	RtccWriteDate@di,w,c
  2070  00F920  B4D8               	btfsc	status,2,c
  2071  00F922  D002               	goto	l3245
  2072  00F924  9CF2               	bcf	intcon,6,c	;volatile
  2073  00F926  D000               	goto	l3245
  2074  00F928                     l3245:
  2075  00F928  0E00               	movlw	0
  2076  00F92A  BB3F               	btfsc	63,5,b	;volatile
  2077  00F92C  0E01               	movlw	1
  2078  00F92E  6E32               	movwf	RtccWriteDate@wasWrEn,c
  2079  00F930  5032               	movf	RtccWriteDate@wasWrEn,w,c
  2080  00F932  A4D8               	btfss	status,2,c
  2081  00F934  D003               	goto	l3249
  2082  00F936  ECDB  F071         	call	_RtccWrOn	;wreg free
  2083  00F93A  D000               	goto	l3249
  2084  00F93C                     l3249:
  2085  00F93C  0E00               	movlw	0
  2086  00F93E  BF3F               	btfsc	63,7,b	;volatile
  2087  00F940  0E01               	movlw	1
  2088  00F942  6E2E               	movwf	RtccWriteDate@wasOn,c
  2089  00F944  502E               	movf	RtccWriteDate@wasOn,w,c
  2090  00F946  B4D8               	btfsc	status,2,c
  2091  00F948  D007               	goto	l3255
  2092  00F94A  0E00               	movlw	0
  2093  00F94C  BE91               	btfsc	3985,7,c	;volatile
  2094  00F94E  0E01               	movlw	1
  2095  00F950  6E2F               	movwf	RtccWriteDate@wasAlrm,c
  2096  00F952  010F               	movlb	15	; () banked
  2097  00F954  9F3F               	bcf	63,7,b	;volatile
  2098  00F956  D000               	goto	l3255
  2099  00F958                     l3255:
  2100  00F958  0EFC               	movlw	252
  2101  00F95A  010F               	movlb	15	; () banked
  2102  00F95C  173F               	andwf	63,f,b	;volatile
  2103  00F95E  010F               	movlb	15	; () banked
  2104  00F960  813F               	bsf	63,0,b	;volatile
  2105                           
  2106                           ; BSR set to: 15
  2107  00F962  CF98 F035          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  2108                           
  2109                           ; BSR set to: 15
  2110  00F966  CF99 F036          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  2111                           
  2112                           ; BSR set to: 15
  2113  00F96A  C02A  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  2114  00F96E  C02B  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  2115  00F972  50DF               	movf	indf2,w,c
  2116  00F974  6E36               	movwf	RtccWriteDate@tempHourWDay+1,c
  2117                           
  2118                           ; BSR set to: 15
  2119  00F976  0EFC               	movlw	252
  2120  00F978  010F               	movlb	15	; () banked
  2121  00F97A  173F               	andwf	63,f,b	;volatile
  2122                           
  2123                           ; BSR set to: 15
  2124  00F97C  0E03               	movlw	3
  2125  00F97E  010F               	movlb	15	; () banked
  2126  00F980  133F               	iorwf	63,f,b	;volatile
  2127                           
  2128                           ; BSR set to: 15
  2129  00F982  C030  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  2130                           
  2131                           ; BSR set to: 15
  2132  00F986  C031  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  2133                           
  2134                           ; BSR set to: 15
  2135  00F98A  C033  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  2136                           
  2137                           ; BSR set to: 15
  2138  00F98E  C034  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  2139                           
  2140                           ; BSR set to: 15
  2141  00F992  C035  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  2142                           
  2143                           ; BSR set to: 15
  2144  00F996  C036  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  2145                           
  2146                           ; BSR set to: 15
  2147  00F99A  502E               	movf	RtccWriteDate@wasOn,w,c
  2148  00F99C  B4D8               	btfsc	status,2,c
  2149  00F99E  D00D               	goto	l3291
  2150                           
  2151                           ; BSR set to: 15
  2152  00F9A0  010F               	movlb	15	; () banked
  2153  00F9A2  8F3F               	bsf	63,7,b	;volatile
  2154                           
  2155                           ; BSR set to: 15
  2156  00F9A4  502F               	movf	RtccWriteDate@wasAlrm,w,c
  2157  00F9A6  B4D8               	btfsc	status,2,c
  2158  00F9A8  D002               	goto	l3287
  2159                           
  2160                           ; BSR set to: 15
  2161  00F9AA  8E91               	bsf	3985,7,c	;volatile
  2162  00F9AC  D000               	goto	l3287
  2163  00F9AE                     l3287:
  2164                           
  2165                           ; BSR set to: 15
  2166  00F9AE  5032               	movf	RtccWriteDate@wasWrEn,w,c
  2167  00F9B0  B4D8               	btfsc	status,2,c
  2168  00F9B2  D009               	goto	l3295
  2169                           
  2170                           ; BSR set to: 15
  2171  00F9B4  ECDB  F071         	call	_RtccWrOn	;wreg free
  2172  00F9B8  D006               	goto	l3295
  2173  00F9BA                     l3291:
  2174  00F9BA  5032               	movf	RtccWriteDate@wasWrEn,w,c
  2175  00F9BC  A4D8               	btfss	status,2,c
  2176  00F9BE  D003               	goto	l3295
  2177  00F9C0  010F               	movlb	15	; () banked
  2178  00F9C2  9B3F               	bcf	63,5,b	;volatile
  2179                           
  2180                           ; BSR set to: 15
  2181  00F9C4  D000               	goto	l3295
  2182  00F9C6                     l3295:
  2183  00F9C6  502C               	movf	RtccWriteDate@di,w,c
  2184  00F9C8  B4D8               	btfsc	status,2,c
  2185  00F9CA  0012               	return	
  2186  00F9CC  9CF2               	bcf	intcon,6,c	;volatile
  2187  00F9CE  0012               	return	
  2188                           
  2189                           ;	Return value of _RtccWriteDate is never used
  2190  00F9D0  0012               	return		;funcret
  2191  00F9D2                     __end_of_RtccWriteDate:
  2192                           	opt stack 0
  2193                           tblptru	equ	0xFF8
  2194                           tblptrh	equ	0xFF7
  2195                           tblptrl	equ	0xFF6
  2196                           tablat	equ	0xFF5
  2197                           prodl	equ	0xFF3
  2198                           intcon	equ	0xFF2
  2199                           postinc0	equ	0xFEE
  2200                           wreg	equ	0xFE8
  2201                           postdec1	equ	0xFE5
  2202                           fsr1l	equ	0xFE1
  2203                           indf2	equ	0xFDF
  2204                           fsr2h	equ	0xFDA
  2205                           fsr2l	equ	0xFD9
  2206                           status	equ	0xFD8
  2207                           
  2208 ;; *************** function _RtccWrOn *****************
  2209 ;; Defined at:
  2210 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  data            2    0        unsigned int 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;		None               void
  2217 ;; Registers used:
  2218 ;;		wreg, status,2
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_Write_RTC
  2234 ;;		_RtccWriteDate
  2235 ;;		_RtccWriteTime
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text6
  2240  00E3B6                     __ptext6:
  2241                           	opt stack 0
  2242  00E3B6                     _RtccWrOn:
  2243                           	opt stack 27
  2244                           
  2245                           ;incstack = 0
  2246  00E3B6  9CF2               	bcf	intcon,6,c	;volatile
  2247  00E3B8  0E55               	movlw	85
  2248  00E3BA  6EA7               	movwf	4007,c	;volatile
  2249  00E3BC  0EAA               	movlw	170
  2250  00E3BE  6EA7               	movwf	4007,c	;volatile
  2251  00E3C0  010F               	movlb	15	; () banked
  2252  00E3C2  8B3F               	bsf	63,5,b	;volatile
  2253                           
  2254                           ; BSR set to: 15
  2255  00E3C4  8CF2               	bsf	intcon,6,c	;volatile
  2256                           
  2257                           ; BSR set to: 15
  2258  00E3C6  0012               	return		;funcret
  2259  00E3C8                     __end_of_RtccWrOn:
  2260                           	opt stack 0
  2261                           tblptru	equ	0xFF8
  2262                           tblptrh	equ	0xFF7
  2263                           tblptrl	equ	0xFF6
  2264                           tablat	equ	0xFF5
  2265                           prodl	equ	0xFF3
  2266                           intcon	equ	0xFF2
  2267                           postinc0	equ	0xFEE
  2268                           wreg	equ	0xFE8
  2269                           postdec1	equ	0xFE5
  2270                           fsr1l	equ	0xFE1
  2271                           indf2	equ	0xFDF
  2272                           fsr2h	equ	0xFDA
  2273                           fsr2l	equ	0xFD9
  2274                           status	equ	0xFD8
  2275                           
  2276 ;; *************** function _keyboard_control *****************
  2277 ;; Defined at:
  2278 ;;		line 696 in file "main.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;		None               void
  2285 ;; Registers used:
  2286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2296 ;;Total ram usage:        1 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:   10
  2299 ;; This function calls:
  2300 ;;		_button_A
  2301 ;;		_button_B
  2302 ;;		_button_C
  2303 ;;		_button_D
  2304 ;;		_button_asterisk
  2305 ;;		_button_hash
  2306 ;;		_button_number
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text7
  2313  00F9D2                     __ptext7:
  2314                           	opt stack 0
  2315  00F9D2                     _keyboard_control:
  2316                           	opt stack 20
  2317                           
  2318                           ;main.c: 698: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2319                           
  2320                           ; BSR set to: 15
  2321                           ;incstack = 0
  2322  00F9D2  8089               	bsf	3977,0,c	;volatile
  2323  00F9D4  9289               	bcf	3977,1,c	;volatile
  2324  00F9D6  9489               	bcf	3977,2,c	;volatile
  2325  00F9D8  9689               	bcf	3977,3,c	;volatile
  2326                           
  2327                           ;main.c: 699: {
  2328                           ;main.c: 700: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2329  00F9DA  AA80               	btfss	3968,5,c	;volatile
  2330  00F9DC  D007               	goto	l396
  2331  00F9DE  0E01               	movlw	1
  2332  00F9E0  6E21               	movwf	_key,c
  2333  00F9E2  ECE2  F078         	call	_button_number	;wreg free
  2334  00F9E6  D000               	goto	l397
  2335  00F9E8                     l397:
  2336  00F9E8  BA80               	btfsc	3968,5,c	;volatile
  2337  00F9EA  D7FE               	goto	l397
  2338  00F9EC                     l396:
  2339                           
  2340                           ;main.c: 701: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2341  00F9EC  AE80               	btfss	3968,7,c	;volatile
  2342  00F9EE  D007               	goto	l400
  2343  00F9F0  0E02               	movlw	2
  2344  00F9F2  6E21               	movwf	_key,c
  2345  00F9F4  ECE2  F078         	call	_button_number	;wreg free
  2346  00F9F8  D000               	goto	l401
  2347  00F9FA                     l401:
  2348  00F9FA  BE80               	btfsc	3968,7,c	;volatile
  2349  00F9FC  D7FE               	goto	l401
  2350  00F9FE                     l400:
  2351                           
  2352                           ;main.c: 702: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2353  00F9FE  AC80               	btfss	3968,6,c	;volatile
  2354  00FA00  D007               	goto	l404
  2355  00FA02  0E03               	movlw	3
  2356  00FA04  6E21               	movwf	_key,c
  2357  00FA06  ECE2  F078         	call	_button_number	;wreg free
  2358  00FA0A  D000               	goto	l405
  2359  00FA0C                     l405:
  2360  00FA0C  BC80               	btfsc	3968,6,c	;volatile
  2361  00FA0E  D7FE               	goto	l405
  2362  00FA10                     l404:
  2363                           
  2364                           ;main.c: 703: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2365  00FA10  A482               	btfss	3970,2,c	;volatile
  2366  00FA12  D007               	goto	l408
  2367  00FA14  0E0B               	movlw	11
  2368  00FA16  6E21               	movwf	_key,c
  2369  00FA18  EC96  F073         	call	_button_A	;wreg free
  2370  00FA1C  D000               	goto	l409
  2371  00FA1E                     l409:
  2372  00FA1E  B482               	btfsc	3970,2,c	;volatile
  2373  00FA20  D7FE               	goto	l409
  2374  00FA22                     l408:
  2375                           
  2376                           ;main.c: 704: }
  2377                           ;main.c: 706: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2378  00FA22  9089               	bcf	3977,0,c	;volatile
  2379  00FA24  8289               	bsf	3977,1,c	;volatile
  2380  00FA26  9489               	bcf	3977,2,c	;volatile
  2381  00FA28  9689               	bcf	3977,3,c	;volatile
  2382                           
  2383                           ;main.c: 707: {
  2384                           ;main.c: 708: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2385  00FA2A  AA80               	btfss	3968,5,c	;volatile
  2386  00FA2C  D007               	goto	l412
  2387  00FA2E  0E04               	movlw	4
  2388  00FA30  6E21               	movwf	_key,c
  2389  00FA32  ECE2  F078         	call	_button_number	;wreg free
  2390  00FA36  D000               	goto	l413
  2391  00FA38                     l413:
  2392  00FA38  BA80               	btfsc	3968,5,c	;volatile
  2393  00FA3A  D7FE               	goto	l413
  2394  00FA3C                     l412:
  2395                           
  2396                           ;main.c: 709: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2397  00FA3C  AE80               	btfss	3968,7,c	;volatile
  2398  00FA3E  D007               	goto	l416
  2399  00FA40  0E05               	movlw	5
  2400  00FA42  6E21               	movwf	_key,c
  2401  00FA44  ECE2  F078         	call	_button_number	;wreg free
  2402  00FA48  D000               	goto	l417
  2403  00FA4A                     l417:
  2404  00FA4A  BE80               	btfsc	3968,7,c	;volatile
  2405  00FA4C  D7FE               	goto	l417
  2406  00FA4E                     l416:
  2407                           
  2408                           ;main.c: 710: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2409  00FA4E  AC80               	btfss	3968,6,c	;volatile
  2410  00FA50  D007               	goto	l420
  2411  00FA52  0E06               	movlw	6
  2412  00FA54  6E21               	movwf	_key,c
  2413  00FA56  ECE2  F078         	call	_button_number	;wreg free
  2414  00FA5A  D000               	goto	l421
  2415  00FA5C                     l421:
  2416  00FA5C  BC80               	btfsc	3968,6,c	;volatile
  2417  00FA5E  D7FE               	goto	l421
  2418  00FA60                     l420:
  2419                           
  2420                           ;main.c: 711: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2421  00FA60  A482               	btfss	3970,2,c	;volatile
  2422  00FA62  D007               	goto	l424
  2423  00FA64  0E0C               	movlw	12
  2424  00FA66  6E21               	movwf	_key,c
  2425  00FA68  ECAA  F078         	call	_button_B	;wreg free
  2426  00FA6C  D000               	goto	l425
  2427  00FA6E                     l425:
  2428  00FA6E  B482               	btfsc	3970,2,c	;volatile
  2429  00FA70  D7FE               	goto	l425
  2430  00FA72                     l424:
  2431                           
  2432                           ;main.c: 712: }
  2433                           ;main.c: 714: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2434  00FA72  9089               	bcf	3977,0,c	;volatile
  2435  00FA74  9289               	bcf	3977,1,c	;volatile
  2436  00FA76  8489               	bsf	3977,2,c	;volatile
  2437  00FA78  9689               	bcf	3977,3,c	;volatile
  2438                           
  2439                           ;main.c: 715: {
  2440                           ;main.c: 716: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2441  00FA7A  AA80               	btfss	3968,5,c	;volatile
  2442  00FA7C  D007               	goto	l428
  2443  00FA7E  0E07               	movlw	7
  2444  00FA80  6E21               	movwf	_key,c
  2445  00FA82  ECE2  F078         	call	_button_number	;wreg free
  2446  00FA86  D000               	goto	l429
  2447  00FA88                     l429:
  2448  00FA88  BA80               	btfsc	3968,5,c	;volatile
  2449  00FA8A  D7FE               	goto	l429
  2450  00FA8C                     l428:
  2451                           
  2452                           ;main.c: 717: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2453  00FA8C  AE80               	btfss	3968,7,c	;volatile
  2454  00FA8E  D007               	goto	l432
  2455  00FA90  0E08               	movlw	8
  2456  00FA92  6E21               	movwf	_key,c
  2457  00FA94  ECE2  F078         	call	_button_number	;wreg free
  2458  00FA98  D000               	goto	l433
  2459  00FA9A                     l433:
  2460  00FA9A  BE80               	btfsc	3968,7,c	;volatile
  2461  00FA9C  D7FE               	goto	l433
  2462  00FA9E                     l432:
  2463                           
  2464                           ;main.c: 718: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2465  00FA9E  AC80               	btfss	3968,6,c	;volatile
  2466  00FAA0  D007               	goto	l436
  2467  00FAA2  0E09               	movlw	9
  2468  00FAA4  6E21               	movwf	_key,c
  2469  00FAA6  ECE2  F078         	call	_button_number	;wreg free
  2470  00FAAA  D000               	goto	l437
  2471  00FAAC                     l437:
  2472  00FAAC  BC80               	btfsc	3968,6,c	;volatile
  2473  00FAAE  D7FE               	goto	l437
  2474  00FAB0                     l436:
  2475                           
  2476                           ;main.c: 719: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2477  00FAB0  A482               	btfss	3970,2,c	;volatile
  2478  00FAB2  D007               	goto	l440
  2479  00FAB4  0E0D               	movlw	13
  2480  00FAB6  6E21               	movwf	_key,c
  2481  00FAB8  EC08  F072         	call	_button_C	;wreg free
  2482  00FABC  D000               	goto	l441
  2483  00FABE                     l441:
  2484  00FABE  B482               	btfsc	3970,2,c	;volatile
  2485  00FAC0  D7FE               	goto	l441
  2486  00FAC2                     l440:
  2487                           
  2488                           ;main.c: 720: }
  2489                           ;main.c: 722: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2490  00FAC2  9089               	bcf	3977,0,c	;volatile
  2491  00FAC4  9289               	bcf	3977,1,c	;volatile
  2492  00FAC6  9489               	bcf	3977,2,c	;volatile
  2493  00FAC8  8689               	bsf	3977,3,c	;volatile
  2494                           
  2495                           ;main.c: 723: {
  2496                           ;main.c: 724: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2497  00FACA  AA80               	btfss	3968,5,c	;volatile
  2498  00FACC  D007               	goto	l444
  2499  00FACE  0E0E               	movlw	14
  2500  00FAD0  6E21               	movwf	_key,c
  2501  00FAD2  ECB0  F071         	call	_button_asterisk	;wreg free
  2502  00FAD6  D000               	goto	l445
  2503  00FAD8                     l445:
  2504  00FAD8  BA80               	btfsc	3968,5,c	;volatile
  2505  00FADA  D7FE               	goto	l445
  2506  00FADC                     l444:
  2507                           
  2508                           ;main.c: 725: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2509  00FADC  AE80               	btfss	3968,7,c	;volatile
  2510  00FADE  D007               	goto	l448
  2511  00FAE0  0E00               	movlw	0
  2512  00FAE2  6E21               	movwf	_key,c
  2513  00FAE4  ECE2  F078         	call	_button_number	;wreg free
  2514  00FAE8  D000               	goto	l449
  2515  00FAEA                     l449:
  2516  00FAEA  BE80               	btfsc	3968,7,c	;volatile
  2517  00FAEC  D7FE               	goto	l449
  2518  00FAEE                     l448:
  2519                           
  2520                           ;main.c: 726: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2521  00FAEE  AC80               	btfss	3968,6,c	;volatile
  2522  00FAF0  D007               	goto	l452
  2523  00FAF2  0E0F               	movlw	15
  2524  00FAF4  6E21               	movwf	_key,c
  2525  00FAF6  EC4A  F072         	call	_button_hash	;wreg free
  2526  00FAFA  D000               	goto	l453
  2527  00FAFC                     l453:
  2528  00FAFC  BC80               	btfsc	3968,6,c	;volatile
  2529  00FAFE  D7FE               	goto	l453
  2530  00FB00                     l452:
  2531                           
  2532                           ;main.c: 727: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2533  00FB00  A482               	btfss	3970,2,c	;volatile
  2534  00FB02  D009               	goto	l3983
  2535  00FB04  0E10               	movlw	16
  2536  00FB06  6E21               	movwf	_key,c
  2537  00FB08  ECB8  F071         	call	_button_D	;wreg free
  2538  00FB0C  D000               	goto	l457
  2539  00FB0E                     l457:
  2540  00FB0E  A482               	btfss	3970,2,c	;volatile
  2541  00FB10  D002               	goto	l3983
  2542  00FB12  D7FD               	goto	l457
  2543  00FB14  D000               	goto	l3983
  2544  00FB16                     l3983:
  2545                           
  2546                           ;main.c: 728: }
  2547                           ;main.c: 730: _delay((unsigned long)((98)*(8000000/4000.0)));
  2548  00FB16  0EFF               	movlw	255
  2549  00FB18  6E4D               	movwf	??_keyboard_control& (0+255),c
  2550  00FB1A  0E8A               	movlw	138
  2551  00FB1C                     u2617:
  2552  00FB1C  2EE8               	decfsz	wreg,f,c
  2553  00FB1E  D7FE               	goto	u2617
  2554  00FB20  2E4D               	decfsz	??_keyboard_control& (0+255),f,c
  2555  00FB22  D7FC               	goto	u2617
  2556  00FB24  D000               	nop2	
  2557  00FB26  0012               	return		;funcret
  2558  00FB28                     __end_of_keyboard_control:
  2559                           	opt stack 0
  2560                           tblptru	equ	0xFF8
  2561                           tblptrh	equ	0xFF7
  2562                           tblptrl	equ	0xFF6
  2563                           tablat	equ	0xFF5
  2564                           prodl	equ	0xFF3
  2565                           intcon	equ	0xFF2
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           fsr1l	equ	0xFE1
  2570                           indf2	equ	0xFDF
  2571                           fsr2h	equ	0xFDA
  2572                           fsr2l	equ	0xFD9
  2573                           status	equ	0xFD8
  2574                           
  2575 ;; *************** function _button_number *****************
  2576 ;; Defined at:
  2577 ;;		line 678 in file "main.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;		None               void
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2595 ;;Total ram usage:        0 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    5
  2598 ;; This function calls:
  2599 ;;		_lcd_putrs
  2600 ;;		_reset_home_callback
  2601 ;;		_sprintf
  2602 ;;		_strcat
  2603 ;; This function is called by:
  2604 ;;		_keyboard_control
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text8
  2609  00F1C4                     __ptext8:
  2610                           	opt stack 0
  2611  00F1C4                     _button_number:
  2612                           	opt stack 24
  2613                           
  2614                           ;main.c: 680: reset_home_callback();
  2615                           
  2616                           ;incstack = 0
  2617  00F1C4  ECB3  F071         	call	_reset_home_callback	;wreg free
  2618                           
  2619                           ;main.c: 682: if(activity == 1 || activity == 6){
  2620  00F1C8  0403               	decf	_activity,w,c
  2621  00F1CA  1004               	iorwf	_activity+1,w,c
  2622  00F1CC  B4D8               	btfsc	status,2,c
  2623  00F1CE  D005               	goto	l3799
  2624  00F1D0  0E06               	movlw	6
  2625  00F1D2  1803               	xorwf	_activity,w,c
  2626  00F1D4  1004               	iorwf	_activity+1,w,c
  2627  00F1D6  A4D8               	btfss	status,2,c
  2628  00F1D8  D01E               	goto	l3805
  2629  00F1DA                     l3799:
  2630                           
  2631                           ;main.c: 683: lcd_putrs("*");
  2632  00F1DA  0EF3               	movlw	low STR_53
  2633  00F1DC  6E32               	movwf	lcd_putrs@ptr,c
  2634  00F1DE  0EFF               	movlw	high STR_53
  2635  00F1E0  6E33               	movwf	lcd_putrs@ptr+1,c
  2636  00F1E2  EC8F  F076         	call	_lcd_putrs	;wreg free
  2637                           
  2638                           ;main.c: 684: sprintf(buffer1, "%01u", key);
  2639  00F1E6  0E80               	movlw	low _buffer1
  2640  00F1E8  6E36               	movwf	sprintf@sp,c
  2641  00F1EA  0E00               	movlw	high _buffer1
  2642  00F1EC  6E37               	movwf	sprintf@sp+1,c
  2643  00F1EE  0EDE               	movlw	low STR_54
  2644  00F1F0  6E38               	movwf	sprintf@f,c
  2645  00F1F2  0EFF               	movlw	high STR_54
  2646  00F1F4  6E39               	movwf	sprintf@f+1,c
  2647  00F1F6  C021  F03A         	movff	_key,?_sprintf+4
  2648  00F1FA  6A3B               	clrf	?_sprintf+5,c
  2649  00F1FC  EC44  F07E         	call	_sprintf	;wreg free
  2650                           
  2651                           ;main.c: 685: strcat(pin_input, buffer1);
  2652  00F200  0E99               	movlw	low _pin_input
  2653  00F202  6E2A               	movwf	strcat@to,c
  2654  00F204  0E00               	movlw	high _pin_input
  2655  00F206  6E2B               	movwf	strcat@to+1,c
  2656  00F208  0E80               	movlw	low _buffer1
  2657  00F20A  6E2C               	movwf	strcat@from,c
  2658  00F20C  0E00               	movlw	high _buffer1
  2659  00F20E  6E2D               	movwf	strcat@from+1,c
  2660  00F210  EC09  F075         	call	_strcat	;wreg free
  2661                           
  2662                           ;main.c: 686: }
  2663  00F214  0012               	return	
  2664  00F216                     l3805:
  2665                           
  2666                           ;main.c: 687: else {
  2667                           ;main.c: 688: sprintf(buffer1,"%01u",key);
  2668  00F216  0E80               	movlw	low _buffer1
  2669  00F218  6E36               	movwf	sprintf@sp,c
  2670  00F21A  0E00               	movlw	high _buffer1
  2671  00F21C  6E37               	movwf	sprintf@sp+1,c
  2672  00F21E  0EDE               	movlw	low STR_54
  2673  00F220  6E38               	movwf	sprintf@f,c
  2674  00F222  0EFF               	movlw	high STR_54
  2675  00F224  6E39               	movwf	sprintf@f+1,c
  2676  00F226  C021  F03A         	movff	_key,?_sprintf+4
  2677  00F22A  6A3B               	clrf	?_sprintf+5,c
  2678  00F22C  EC44  F07E         	call	_sprintf	;wreg free
  2679  00F230  0012               	return	
  2680  00F232  0012               	return		;funcret
  2681  00F234                     __end_of_button_number:
  2682                           	opt stack 0
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           prodl	equ	0xFF3
  2688                           intcon	equ	0xFF2
  2689                           postinc0	equ	0xFEE
  2690                           wreg	equ	0xFE8
  2691                           postdec1	equ	0xFE5
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _strcat *****************
  2699 ;; Defined at:
  2700 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  to              2    0[COMRAM] PTR unsigned char 
  2703 ;;		 -> pin_input(5), 
  2704 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2705 ;;		 -> buffer1(20), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  cp              2    4[COMRAM] PTR unsigned char 
  2708 ;;		 -> pin_input(5), 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  2    0[COMRAM] PTR unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;Total ram usage:        6 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_button_number
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text9
  2732  00EA12                     __ptext9:
  2733                           	opt stack 0
  2734  00EA12                     _strcat:
  2735                           	opt stack 28
  2736                           
  2737                           ;incstack = 0
  2738  00EA12  C02A  F02E         	movff	strcat@to,strcat@cp
  2739  00EA16  C02B  F02F         	movff	strcat@to+1,strcat@cp+1
  2740  00EA1A  D003               	goto	l3547
  2741  00EA1C                     l3545:
  2742  00EA1C  4A2E               	infsnz	strcat@cp,f,c
  2743  00EA1E  2A2F               	incf	strcat@cp+1,f,c
  2744  00EA20  D000               	goto	l3547
  2745  00EA22                     l3547:
  2746  00EA22  C02E  FFD9         	movff	strcat@cp,fsr2l
  2747  00EA26  C02F  FFDA         	movff	strcat@cp+1,fsr2h
  2748  00EA2A  50DF               	movf	indf2,w,c
  2749  00EA2C  B4D8               	btfsc	status,2,c
  2750  00EA2E  D007               	goto	l3551
  2751  00EA30  D7F5               	goto	l3545
  2752  00EA32  D005               	goto	l3551
  2753  00EA34                     l3549:
  2754  00EA34  4A2E               	infsnz	strcat@cp,f,c
  2755  00EA36  2A2F               	incf	strcat@cp+1,f,c
  2756  00EA38  4A2C               	infsnz	strcat@from,f,c
  2757  00EA3A  2A2D               	incf	strcat@from+1,f,c
  2758  00EA3C  D000               	goto	l3551
  2759  00EA3E                     l3551:
  2760  00EA3E  C02C  FFD9         	movff	strcat@from,fsr2l
  2761  00EA42  C02D  FFDA         	movff	strcat@from+1,fsr2h
  2762  00EA46  C02E  FFE1         	movff	strcat@cp,fsr1l
  2763  00EA4A  C02F  FFE2         	movff	strcat@cp+1,fsr1h
  2764  00EA4E  CFDF FFE7          	movff	indf2,indf1
  2765  00EA52  50E7               	movf	indf1,w,c
  2766  00EA54  A4D8               	btfss	status,2,c
  2767  00EA56  D7EE               	goto	l3549
  2768                           
  2769                           ;	Return value of _strcat is never used
  2770  00EA58  0012               	return		;funcret
  2771  00EA5A                     __end_of_strcat:
  2772                           	opt stack 0
  2773                           tblptru	equ	0xFF8
  2774                           tblptrh	equ	0xFF7
  2775                           tblptrl	equ	0xFF6
  2776                           tablat	equ	0xFF5
  2777                           prodl	equ	0xFF3
  2778                           intcon	equ	0xFF2
  2779                           postinc0	equ	0xFEE
  2780                           wreg	equ	0xFE8
  2781                           indf1	equ	0xFE7
  2782                           postdec1	equ	0xFE5
  2783                           fsr1h	equ	0xFE2
  2784                           fsr1l	equ	0xFE1
  2785                           indf2	equ	0xFDF
  2786                           fsr2h	equ	0xFDA
  2787                           fsr2l	equ	0xFD9
  2788                           status	equ	0xFD8
  2789                           
  2790 ;; *************** function _button_hash *****************
  2791 ;; Defined at:
  2792 ;;		line 664 in file "main.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;		None               void
  2799 ;; Registers used:
  2800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    9
  2813 ;; This function calls:
  2814 ;;		_pin_input_validator
  2815 ;;		_pin_set
  2816 ;;		_reset_home_callback
  2817 ;; This function is called by:
  2818 ;;		_keyboard_control
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text10
  2823  00E494                     __ptext10:
  2824                           	opt stack 0
  2825  00E494                     _button_hash:
  2826                           	opt stack 20
  2827                           
  2828                           ;main.c: 666: reset_home_callback();
  2829                           
  2830                           ;incstack = 0
  2831  00E494  ECB3  F071         	call	_reset_home_callback	;wreg free
  2832                           
  2833                           ;main.c: 668: if(activity == 1){
  2834  00E498  0403               	decf	_activity,w,c
  2835  00E49A  1004               	iorwf	_activity+1,w,c
  2836  00E49C  A4D8               	btfss	status,2,c
  2837  00E49E  D003               	goto	l3789
  2838                           
  2839                           ;main.c: 669: pin_input_validator();
  2840  00E4A0  ECAF  F072         	call	_pin_input_validator	;wreg free
  2841  00E4A4  D000               	goto	l3789
  2842  00E4A6                     l3789:
  2843                           
  2844                           ;main.c: 670: }
  2845                           ;main.c: 672: if(activity == 6){
  2846  00E4A6  0E06               	movlw	6
  2847  00E4A8  1803               	xorwf	_activity,w,c
  2848  00E4AA  1004               	iorwf	_activity+1,w,c
  2849  00E4AC  A4D8               	btfss	status,2,c
  2850  00E4AE  0012               	return	
  2851                           
  2852                           ;main.c: 673: pin_set();
  2853  00E4B0  ECFB  F071         	call	_pin_set	;wreg free
  2854  00E4B4  0012               	return	
  2855  00E4B6  0012               	return		;funcret
  2856  00E4B8                     __end_of_button_hash:
  2857                           	opt stack 0
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           prodl	equ	0xFF3
  2863                           intcon	equ	0xFF2
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           indf1	equ	0xFE7
  2867                           postdec1	equ	0xFE5
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _pin_set *****************
  2876 ;; Defined at:
  2877 ;;		line 342 in file "main.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;		None               void
  2884 ;; Registers used:
  2885 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    7
  2898 ;; This function calls:
  2899 ;;		_activity_home
  2900 ;;		_strcpy
  2901 ;; This function is called by:
  2902 ;;		_button_hash
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text11
  2907  00E3F6                     __ptext11:
  2908                           	opt stack 0
  2909  00E3F6                     _pin_set:
  2910                           	opt stack 21
  2911                           
  2912                           ;main.c: 344: strcpy(pin, pin_input);
  2913                           
  2914                           ;incstack = 0
  2915  00E3F6  0E94               	movlw	low _pin
  2916  00E3F8  6E2A               	movwf	strcpy@to,c
  2917  00E3FA  0E00               	movlw	high _pin
  2918  00E3FC  6E2B               	movwf	strcpy@to+1,c
  2919  00E3FE  0E99               	movlw	low _pin_input
  2920  00E400  6E2C               	movwf	strcpy@from,c
  2921  00E402  0E00               	movlw	high _pin_input
  2922  00E404  6E2D               	movwf	strcpy@from+1,c
  2923  00E406  EC9E  F074         	call	_strcpy	;wreg free
  2924                           
  2925                           ;main.c: 345: activity_home();
  2926  00E40A  EC70  F072         	call	_activity_home	;wreg free
  2927  00E40E  0012               	return		;funcret
  2928  00E410                     __end_of_pin_set:
  2929                           	opt stack 0
  2930                           tblptru	equ	0xFF8
  2931                           tblptrh	equ	0xFF7
  2932                           tblptrl	equ	0xFF6
  2933                           tablat	equ	0xFF5
  2934                           prodl	equ	0xFF3
  2935                           intcon	equ	0xFF2
  2936                           postinc0	equ	0xFEE
  2937                           wreg	equ	0xFE8
  2938                           indf1	equ	0xFE7
  2939                           postdec1	equ	0xFE5
  2940                           fsr1h	equ	0xFE2
  2941                           fsr1l	equ	0xFE1
  2942                           indf2	equ	0xFDF
  2943                           fsr2h	equ	0xFDA
  2944                           fsr2l	equ	0xFD9
  2945                           status	equ	0xFD8
  2946                           
  2947 ;; *************** function _pin_input_validator *****************
  2948 ;; Defined at:
  2949 ;;		line 349 in file "main.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    8
  2970 ;; This function calls:
  2971 ;;		_activity_menu
  2972 ;;		_activity_pin
  2973 ;;		_strcmp
  2974 ;; This function is called by:
  2975 ;;		_button_hash
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text12
  2980  00E55E                     __ptext12:
  2981                           	opt stack 0
  2982  00E55E                     _pin_input_validator:
  2983                           	opt stack 20
  2984                           
  2985                           ;main.c: 351: if( strcmp(pin, pin_input) == 0 ){
  2986                           
  2987                           ;incstack = 0
  2988  00E55E  0E94               	movlw	low _pin
  2989  00E560  6E2A               	movwf	strcmp@s1,c
  2990  00E562  0E00               	movlw	high _pin
  2991  00E564  6E2B               	movwf	strcmp@s1+1,c
  2992  00E566  0E99               	movlw	low _pin_input
  2993  00E568  6E2C               	movwf	strcmp@s2,c
  2994  00E56A  0E00               	movlw	high _pin_input
  2995  00E56C  6E2D               	movwf	strcmp@s2+1,c
  2996  00E56E  ECED  F075         	call	_strcmp	;wreg free
  2997  00E572  502A               	movf	?_strcmp,w,c
  2998  00E574  102B               	iorwf	?_strcmp+1,w,c
  2999  00E576  A4D8               	btfss	status,2,c
  3000  00E578  D003               	goto	l3431
  3001                           
  3002                           ;main.c: 352: activity_menu();
  3003  00E57A  ECD3  F079         	call	_activity_menu	;wreg free
  3004                           
  3005                           ;main.c: 353: }
  3006  00E57E  0012               	return	
  3007  00E580                     l3431:
  3008                           
  3009                           ;main.c: 354: else {
  3010                           ;main.c: 355: activity_pin();
  3011  00E580  EC9F  F075         	call	_activity_pin	;wreg free
  3012  00E584  0012               	return	
  3013  00E586  0012               	return		;funcret
  3014  00E588                     __end_of_pin_input_validator:
  3015                           	opt stack 0
  3016                           tblptru	equ	0xFF8
  3017                           tblptrh	equ	0xFF7
  3018                           tblptrl	equ	0xFF6
  3019                           tablat	equ	0xFF5
  3020                           prodl	equ	0xFF3
  3021                           intcon	equ	0xFF2
  3022                           postinc0	equ	0xFEE
  3023                           wreg	equ	0xFE8
  3024                           indf1	equ	0xFE7
  3025                           postdec1	equ	0xFE5
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           indf2	equ	0xFDF
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _strcmp *****************
  3034 ;; Defined at:
  3035 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  3038 ;;		 -> pin(5), 
  3039 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  3040 ;;		 -> pin_input(5), 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  r               1    5[COMRAM] char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2    0[COMRAM] int 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;Total ram usage:        6 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_pin_input_validator
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text13
  3066  00EBDA                     __ptext13:
  3067                           	opt stack 0
  3068  00EBDA                     _strcmp:
  3069                           	opt stack 27
  3070                           
  3071                           ;incstack = 0
  3072  00EBDA  D005               	goto	l3097
  3073  00EBDC                     l3095:
  3074  00EBDC  4A2A               	infsnz	strcmp@s1,f,c
  3075  00EBDE  2A2B               	incf	strcmp@s1+1,f,c
  3076  00EBE0  4A2C               	infsnz	strcmp@s2,f,c
  3077  00EBE2  2A2D               	incf	strcmp@s2+1,f,c
  3078  00EBE4  D000               	goto	l3097
  3079  00EBE6                     l3097:
  3080  00EBE6  C02A  FFD9         	movff	strcmp@s1,fsr2l
  3081  00EBEA  C02B  FFDA         	movff	strcmp@s1+1,fsr2h
  3082  00EBEE  50DF               	movf	indf2,w,c
  3083  00EBF0  6E2E               	movwf	??_strcmp& (0+255),c
  3084  00EBF2  C02C  FFD9         	movff	strcmp@s2,fsr2l
  3085  00EBF6  C02D  FFDA         	movff	strcmp@s2+1,fsr2h
  3086  00EBFA  50DF               	movf	indf2,w,c
  3087  00EBFC  0800               	sublw	0
  3088  00EBFE  242E               	addwf	??_strcmp,w,c
  3089  00EC00  6E2F               	movwf	strcmp@r,c
  3090  00EC02  502F               	movf	strcmp@r,w,c
  3091  00EC04  A4D8               	btfss	status,2,c
  3092  00EC06  D009               	goto	l3101
  3093  00EC08  C02A  FFD9         	movff	strcmp@s1,fsr2l
  3094  00EC0C  C02B  FFDA         	movff	strcmp@s1+1,fsr2h
  3095  00EC10  50DF               	movf	indf2,w,c
  3096  00EC12  B4D8               	btfsc	status,2,c
  3097  00EC14  D002               	goto	l3101
  3098  00EC16  D7E2               	goto	l3095
  3099  00EC18  D000               	goto	l3101
  3100  00EC1A                     l3101:
  3101  00EC1A  502F               	movf	strcmp@r,w,c
  3102  00EC1C  6E2A               	movwf	?_strcmp,c
  3103  00EC1E  6A2B               	clrf	?_strcmp+1,c
  3104  00EC20  BE2A               	btfsc	?_strcmp,7,c
  3105  00EC22  062B               	decf	?_strcmp+1,f,c
  3106  00EC24  0012               	return	
  3107  00EC26  0012               	return		;funcret
  3108  00EC28                     __end_of_strcmp:
  3109                           	opt stack 0
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodl	equ	0xFF3
  3115                           intcon	equ	0xFF2
  3116                           postinc0	equ	0xFEE
  3117                           wreg	equ	0xFE8
  3118                           indf1	equ	0xFE7
  3119                           postdec1	equ	0xFE5
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _button_asterisk *****************
  3128 ;; Defined at:
  3129 ;;		line 657 in file "main.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;		None               void
  3136 ;; Registers used:
  3137 ;;		cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    1
  3150 ;; This function calls:
  3151 ;;		_reset_home_callback
  3152 ;; This function is called by:
  3153 ;;		_keyboard_control
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text14
  3158  00E360                     __ptext14:
  3159                           	opt stack 0
  3160  00E360                     _button_asterisk:
  3161                           	opt stack 28
  3162                           
  3163                           ;main.c: 659: reset_home_callback();
  3164                           
  3165                           ;incstack = 0
  3166  00E360  ECB3  F071         	call	_reset_home_callback	;wreg free
  3167  00E364  0012               	return		;funcret
  3168  00E366                     __end_of_button_asterisk:
  3169                           	opt stack 0
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodl	equ	0xFF3
  3175                           intcon	equ	0xFF2
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           indf1	equ	0xFE7
  3179                           postdec1	equ	0xFE5
  3180                           fsr1h	equ	0xFE2
  3181                           fsr1l	equ	0xFE1
  3182                           indf2	equ	0xFDF
  3183                           fsr2h	equ	0xFDA
  3184                           fsr2l	equ	0xFD9
  3185                           status	equ	0xFD8
  3186                           
  3187 ;; *************** function _button_D *****************
  3188 ;; Defined at:
  3189 ;;		line 650 in file "main.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;		None               void
  3196 ;; Registers used:
  3197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    7
  3210 ;; This function calls:
  3211 ;;		_activity_home
  3212 ;;		_reset_home_callback
  3213 ;; This function is called by:
  3214 ;;		_keyboard_control
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text15
  3219  00E370                     __ptext15:
  3220                           	opt stack 0
  3221  00E370                     _button_D:
  3222                           	opt stack 22
  3223                           
  3224                           ;main.c: 652: reset_home_callback();
  3225                           
  3226                           ;incstack = 0
  3227  00E370  ECB3  F071         	call	_reset_home_callback	;wreg free
  3228                           
  3229                           ;main.c: 653: activity_home();
  3230  00E374  EC70  F072         	call	_activity_home	;wreg free
  3231  00E378  0012               	return		;funcret
  3232  00E37A                     __end_of_button_D:
  3233                           	opt stack 0
  3234                           tblptru	equ	0xFF8
  3235                           tblptrh	equ	0xFF7
  3236                           tblptrl	equ	0xFF6
  3237                           tablat	equ	0xFF5
  3238                           prodl	equ	0xFF3
  3239                           intcon	equ	0xFF2
  3240                           postinc0	equ	0xFEE
  3241                           wreg	equ	0xFE8
  3242                           indf1	equ	0xFE7
  3243                           postdec1	equ	0xFE5
  3244                           fsr1h	equ	0xFE2
  3245                           fsr1l	equ	0xFE1
  3246                           indf2	equ	0xFDF
  3247                           fsr2h	equ	0xFDA
  3248                           fsr2l	equ	0xFD9
  3249                           status	equ	0xFD8
  3250                           
  3251 ;; *************** function _button_C *****************
  3252 ;; Defined at:
  3253 ;;		line 640 in file "main.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    8
  3274 ;; This function calls:
  3275 ;;		_activity_menu
  3276 ;;		_reset_home_callback
  3277 ;; This function is called by:
  3278 ;;		_keyboard_control
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text16
  3283  00E410                     __ptext16:
  3284                           	opt stack 0
  3285  00E410                     _button_C:
  3286                           	opt stack 21
  3287                           
  3288                           ;main.c: 642: reset_home_callback();
  3289                           
  3290                           ;incstack = 0
  3291  00E410  ECB3  F071         	call	_reset_home_callback	;wreg free
  3292                           
  3293                           ;main.c: 644: if(activity != 0 && activity != 1){
  3294  00E414  5003               	movf	_activity,w,c
  3295  00E416  1004               	iorwf	_activity+1,w,c
  3296  00E418  B4D8               	btfsc	status,2,c
  3297  00E41A  0012               	return	
  3298  00E41C  0403               	decf	_activity,w,c
  3299  00E41E  1004               	iorwf	_activity+1,w,c
  3300  00E420  B4D8               	btfsc	status,2,c
  3301  00E422  0012               	return	
  3302                           
  3303                           ;main.c: 645: activity_menu();
  3304  00E424  ECD3  F079         	call	_activity_menu	;wreg free
  3305  00E428  0012               	return	
  3306  00E42A  0012               	return		;funcret
  3307  00E42C                     __end_of_button_C:
  3308                           	opt stack 0
  3309                           tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           postinc0	equ	0xFEE
  3316                           wreg	equ	0xFE8
  3317                           indf1	equ	0xFE7
  3318                           postdec1	equ	0xFE5
  3319                           fsr1h	equ	0xFE2
  3320                           fsr1l	equ	0xFE1
  3321                           indf2	equ	0xFDF
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326 ;; *************** function _activity_menu *****************
  3327 ;; Defined at:
  3328 ;;		line 209 in file "main.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;		None               void
  3335 ;; Registers used:
  3336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    7
  3349 ;; This function calls:
  3350 ;;		_lcd_init
  3351 ;;		_lcd_write
  3352 ;;		_menu_selector_0
  3353 ;; This function is called by:
  3354 ;;		_pin_input_validator
  3355 ;;		_button_C
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text17
  3360  00F3A6                     __ptext17:
  3361                           	opt stack 0
  3362  00F3A6                     _activity_menu:
  3363                           	opt stack 20
  3364                           
  3365                           ;main.c: 211: activity = 2;
  3366                           
  3367                           ;incstack = 0
  3368  00F3A6  0E00               	movlw	0
  3369  00F3A8  6E04               	movwf	_activity+1,c
  3370  00F3AA  0E02               	movlw	2
  3371  00F3AC  6E03               	movwf	_activity,c
  3372                           
  3373                           ;main.c: 212: lcd_init();
  3374  00F3AE  EC93  F079         	call	_lcd_init	;wreg free
  3375                           
  3376                           ;main.c: 213: lcd_write(2,1,"Activar");
  3377  00F3B2  0E00               	movlw	0
  3378  00F3B4  6E35               	movwf	lcd_write@column+1,c
  3379  00F3B6  0E02               	movlw	2
  3380  00F3B8  6E34               	movwf	lcd_write@column,c
  3381  00F3BA  0E00               	movlw	0
  3382  00F3BC  6E37               	movwf	lcd_write@row+1,c
  3383  00F3BE  0E01               	movlw	1
  3384  00F3C0  6E36               	movwf	lcd_write@row,c
  3385  00F3C2  0E65               	movlw	low STR_16
  3386  00F3C4  6E38               	movwf	lcd_write@string,c
  3387  00F3C6  0EFF               	movlw	high STR_16
  3388  00F3C8  6E39               	movwf	lcd_write@string+1,c
  3389  00F3CA  ECEF  F071         	call	_lcd_write	;wreg free
  3390                           
  3391                           ;main.c: 214: lcd_write(2,2,"Reloj");
  3392  00F3CE  0E00               	movlw	0
  3393  00F3D0  6E35               	movwf	lcd_write@column+1,c
  3394  00F3D2  0E02               	movlw	2
  3395  00F3D4  6E34               	movwf	lcd_write@column,c
  3396  00F3D6  0E00               	movlw	0
  3397  00F3D8  6E37               	movwf	lcd_write@row+1,c
  3398  00F3DA  0E02               	movlw	2
  3399  00F3DC  6E36               	movwf	lcd_write@row,c
  3400  00F3DE  0EB9               	movlw	low STR_17
  3401  00F3E0  6E38               	movwf	lcd_write@string,c
  3402  00F3E2  0EFF               	movlw	high STR_17
  3403  00F3E4  6E39               	movwf	lcd_write@string+1,c
  3404  00F3E6  ECEF  F071         	call	_lcd_write	;wreg free
  3405                           
  3406                           ;main.c: 215: lcd_write(10,1,"Pin");
  3407  00F3EA  0E00               	movlw	0
  3408  00F3EC  6E35               	movwf	lcd_write@column+1,c
  3409  00F3EE  0E0A               	movlw	10
  3410  00F3F0  6E34               	movwf	lcd_write@column,c
  3411  00F3F2  0E00               	movlw	0
  3412  00F3F4  6E37               	movwf	lcd_write@row+1,c
  3413  00F3F6  0E01               	movlw	1
  3414  00F3F8  6E36               	movwf	lcd_write@row,c
  3415  00F3FA  0EE7               	movlw	low STR_18
  3416  00F3FC  6E38               	movwf	lcd_write@string,c
  3417  00F3FE  0EFF               	movlw	high STR_18
  3418  00F400  6E39               	movwf	lcd_write@string+1,c
  3419  00F402  ECEF  F071         	call	_lcd_write	;wreg free
  3420                           
  3421                           ;main.c: 216: lcd_write(10,2,"Alarma");
  3422  00F406  0E00               	movlw	0
  3423  00F408  6E35               	movwf	lcd_write@column+1,c
  3424  00F40A  0E0A               	movlw	10
  3425  00F40C  6E34               	movwf	lcd_write@column,c
  3426  00F40E  0E00               	movlw	0
  3427  00F410  6E37               	movwf	lcd_write@row+1,c
  3428  00F412  0E02               	movlw	2
  3429  00F414  6E36               	movwf	lcd_write@row,c
  3430  00F416  0EA5               	movlw	low STR_19
  3431  00F418  6E38               	movwf	lcd_write@string,c
  3432  00F41A  0EFF               	movlw	high STR_19
  3433  00F41C  6E39               	movwf	lcd_write@string+1,c
  3434  00F41E  ECEF  F071         	call	_lcd_write	;wreg free
  3435                           
  3436                           ;main.c: 217: menu_selector_0();
  3437  00F422  ECB6  F073         	call	_menu_selector_0	;wreg free
  3438  00F426  0012               	return		;funcret
  3439  00F428                     __end_of_activity_menu:
  3440                           	opt stack 0
  3441                           tblptru	equ	0xFF8
  3442                           tblptrh	equ	0xFF7
  3443                           tblptrl	equ	0xFF6
  3444                           tablat	equ	0xFF5
  3445                           prodl	equ	0xFF3
  3446                           intcon	equ	0xFF2
  3447                           postinc0	equ	0xFEE
  3448                           wreg	equ	0xFE8
  3449                           indf1	equ	0xFE7
  3450                           postdec1	equ	0xFE5
  3451                           fsr1h	equ	0xFE2
  3452                           fsr1l	equ	0xFE1
  3453                           indf2	equ	0xFDF
  3454                           fsr2h	equ	0xFDA
  3455                           fsr2l	equ	0xFD9
  3456                           status	equ	0xFD8
  3457                           
  3458 ;; *************** function _button_B *****************
  3459 ;; Defined at:
  3460 ;;		line 603 in file "main.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;		None               void
  3467 ;; Registers used:
  3468 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;Total ram usage:        2 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    9
  3481 ;; This function calls:
  3482 ;;		_button_B_menu
  3483 ;;		_button_B_submenu_activation
  3484 ;;		_button_B_submenu_date_and_time_config
  3485 ;;		_button_B_submenu_pin_config
  3486 ;;		_button_B_submenu_siren_config
  3487 ;;		_button_B_submenu_siren_tone
  3488 ;;		_button_B_submenu_siren_volume
  3489 ;;		_reset_home_callback
  3490 ;; This function is called by:
  3491 ;;		_keyboard_control
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text18
  3496  00F154                     __ptext18:
  3497                           	opt stack 0
  3498  00F154                     _button_B:
  3499                           	opt stack 20
  3500                           
  3501                           ;main.c: 605: reset_home_callback();
  3502                           
  3503                           ;incstack = 0
  3504  00F154  ECB3  F071         	call	_reset_home_callback	;wreg free
  3505                           
  3506                           ;main.c: 607: switch(activity){
  3507  00F158  D015               	goto	l3763
  3508  00F15A                     l3747:
  3509                           
  3510                           ;main.c: 610: button_B_menu();
  3511  00F15A  ECE5  F074         	call	_button_B_menu	;wreg free
  3512                           
  3513                           ;main.c: 611: break;
  3514  00F15E  0012               	return	
  3515  00F160                     l3749:
  3516                           
  3517                           ;main.c: 614: button_B_submenu_date_and_time_config();
  3518  00F160  ECDC  F072         	call	_button_B_submenu_date_and_time_config	;wreg free
  3519                           
  3520                           ;main.c: 615: break;
  3521  00F164  0012               	return	
  3522  00F166                     l3751:
  3523                           
  3524                           ;main.c: 618: button_B_submenu_activation();
  3525  00F166  EC3F  F073         	call	_button_B_submenu_activation	;wreg free
  3526                           
  3527                           ;main.c: 619: break;
  3528  00F16A  0012               	return	
  3529  00F16C                     l3753:
  3530                           
  3531                           ;main.c: 622: button_B_submenu_pin_config();
  3532  00F16C  EC25  F073         	call	_button_B_submenu_pin_config	;wreg free
  3533                           
  3534                           ;main.c: 623: break;
  3535  00F170  0012               	return	
  3536  00F172                     l3755:
  3537                           
  3538                           ;main.c: 626: button_B_submenu_siren_config();
  3539  00F172  ECF4  F072         	call	_button_B_submenu_siren_config	;wreg free
  3540                           
  3541                           ;main.c: 627: break;
  3542  00F176  0012               	return	
  3543  00F178                     l3757:
  3544                           
  3545                           ;main.c: 630: button_B_submenu_siren_volume();
  3546  00F178  EC79  F073         	call	_button_B_submenu_siren_volume	;wreg free
  3547                           
  3548                           ;main.c: 631: break;
  3549  00F17C  0012               	return	
  3550  00F17E                     l3759:
  3551                           
  3552                           ;main.c: 634: button_B_submenu_siren_tone();
  3553  00F17E  EC5C  F073         	call	_button_B_submenu_siren_tone	;wreg free
  3554                           
  3555                           ;main.c: 636: }
  3556                           
  3557                           ;main.c: 635: break;
  3558  00F182  0012               	return	
  3559  00F184                     l3763:
  3560  00F184  C003  F03C         	movff	_activity,??_button_B
  3561  00F188  C004  F03D         	movff	_activity+1,??_button_B+1
  3562                           
  3563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3564                           ; Switch size 1, requested type "space"
  3565                           ; Number of cases is 1, Range of values is 0 to 0
  3566                           ; switch strategies available:
  3567                           ; Name         Instructions Cycles
  3568                           ; simple_byte            4     3 (average)
  3569                           ;	Chosen strategy is simple_byte
  3570  00F18C  503D               	movf	??_button_B+1,w,c
  3571  00F18E  0A00               	xorlw	0	; case 0
  3572  00F190  A4D8               	btfss	status,2,c
  3573  00F192  0012               	return	
  3574                           
  3575                           ; Switch size 1, requested type "space"
  3576                           ; Number of cases is 7, Range of values is 2 to 9
  3577                           ; switch strategies available:
  3578                           ; Name         Instructions Cycles
  3579                           ; simple_byte           22    12 (average)
  3580                           ;	Chosen strategy is simple_byte
  3581  00F194  503C               	movf	??_button_B,w,c
  3582  00F196  0A02               	xorlw	2	; case 2
  3583  00F198  B4D8               	btfsc	status,2,c
  3584  00F19A  D7DF               	goto	l3747
  3585  00F19C  0A01               	xorlw	1	; case 3
  3586  00F19E  B4D8               	btfsc	status,2,c
  3587  00F1A0  D7DF               	goto	l3749
  3588  00F1A2  0A07               	xorlw	7	; case 4
  3589  00F1A4  B4D8               	btfsc	status,2,c
  3590  00F1A6  D7DF               	goto	l3751
  3591  00F1A8  0A01               	xorlw	1	; case 5
  3592  00F1AA  B4D8               	btfsc	status,2,c
  3593  00F1AC  D7DF               	goto	l3753
  3594  00F1AE  0A02               	xorlw	2	; case 7
  3595  00F1B0  B4D8               	btfsc	status,2,c
  3596  00F1B2  D7DF               	goto	l3755
  3597  00F1B4  0A0F               	xorlw	15	; case 8
  3598  00F1B6  B4D8               	btfsc	status,2,c
  3599  00F1B8  D7DF               	goto	l3757
  3600  00F1BA  0A01               	xorlw	1	; case 9
  3601  00F1BC  A4D8               	btfss	status,2,c
  3602  00F1BE  0012               	return	
  3603  00F1C0  D7DE               	goto	l3759
  3604  00F1C2  0012               	return		;funcret
  3605  00F1C4                     __end_of_button_B:
  3606                           	opt stack 0
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodl	equ	0xFF3
  3612                           intcon	equ	0xFF2
  3613                           postinc0	equ	0xFEE
  3614                           wreg	equ	0xFE8
  3615                           indf1	equ	0xFE7
  3616                           postdec1	equ	0xFE5
  3617                           fsr1h	equ	0xFE2
  3618                           fsr1l	equ	0xFE1
  3619                           indf2	equ	0xFDF
  3620                           fsr2h	equ	0xFDA
  3621                           fsr2l	equ	0xFD9
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _button_B_submenu_siren_volume *****************
  3625 ;; Defined at:
  3626 ;;		line 551 in file "main.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;		None               void
  3633 ;; Registers used:
  3634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3643 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3644 ;;Total ram usage:        2 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    7
  3647 ;; This function calls:
  3648 ;;		_activity_home
  3649 ;; This function is called by:
  3650 ;;		_button_B
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text19
  3655  00E6F2                     __ptext19:
  3656                           	opt stack 0
  3657  00E6F2                     _button_B_submenu_siren_volume:
  3658                           	opt stack 21
  3659                           
  3660                           ;main.c: 553: switch(submenu_selected){
  3661                           
  3662                           ;incstack = 0
  3663  00E6F2  D009               	goto	l3505
  3664  00E6F4                     l3499:
  3665                           
  3666                           ;main.c: 556: alarm_volume = 0;
  3667  00E6F4  0E00               	movlw	0
  3668  00E6F6  6E08               	movwf	_alarm_volume+1,c
  3669  00E6F8  0E00               	movlw	0
  3670  00E6FA  D003               	goto	L1
  3671  00E6FC                     l3501:
  3672                           
  3673                           ;main.c: 560: alarm_volume = 1;
  3674  00E6FC  0E00               	movlw	0
  3675  00E6FE  6E08               	movwf	_alarm_volume+1,c
  3676  00E700  0E01               	movlw	1
  3677  00E702                     L1:
  3678  00E702  6E07               	movwf	_alarm_volume,c
  3679                           
  3680                           ;main.c: 563: }
  3681                           
  3682                           ;main.c: 561: break;
  3683  00E704  D010               	goto	l3507
  3684  00E706                     l3505:
  3685  00E706  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_siren_volume
  3686  00E70A  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_siren_volume+1
  3687                           
  3688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3689                           ; Switch size 1, requested type "space"
  3690                           ; Number of cases is 1, Range of values is 0 to 0
  3691                           ; switch strategies available:
  3692                           ; Name         Instructions Cycles
  3693                           ; simple_byte            4     3 (average)
  3694                           ;	Chosen strategy is simple_byte
  3695  00E70E  503B               	movf	??_button_B_submenu_siren_volume+1,w,c
  3696  00E710  0A00               	xorlw	0	; case 0
  3697  00E712  A4D8               	btfss	status,2,c
  3698  00E714  D008               	goto	l3507
  3699                           
  3700                           ; Switch size 1, requested type "space"
  3701                           ; Number of cases is 2, Range of values is 0 to 1
  3702                           ; switch strategies available:
  3703                           ; Name         Instructions Cycles
  3704                           ; simple_byte            7     4 (average)
  3705                           ;	Chosen strategy is simple_byte
  3706  00E716  503A               	movf	??_button_B_submenu_siren_volume,w,c
  3707  00E718  0A00               	xorlw	0	; case 0
  3708  00E71A  B4D8               	btfsc	status,2,c
  3709  00E71C  D7EB               	goto	l3499
  3710  00E71E  0A01               	xorlw	1	; case 1
  3711  00E720  B4D8               	btfsc	status,2,c
  3712  00E722  D7EC               	goto	l3501
  3713  00E724  D000               	goto	l3507
  3714  00E726                     l3507:
  3715                           
  3716                           ;main.c: 565: activity_home();
  3717  00E726  EC70  F072         	call	_activity_home	;wreg free
  3718  00E72A  0012               	return		;funcret
  3719  00E72C                     __end_of_button_B_submenu_siren_volume:
  3720                           	opt stack 0
  3721                           tblptru	equ	0xFF8
  3722                           tblptrh	equ	0xFF7
  3723                           tblptrl	equ	0xFF6
  3724                           tablat	equ	0xFF5
  3725                           prodl	equ	0xFF3
  3726                           intcon	equ	0xFF2
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           indf1	equ	0xFE7
  3730                           postdec1	equ	0xFE5
  3731                           fsr1h	equ	0xFE2
  3732                           fsr1l	equ	0xFE1
  3733                           indf2	equ	0xFDF
  3734                           fsr2h	equ	0xFDA
  3735                           fsr2l	equ	0xFD9
  3736                           status	equ	0xFD8
  3737                           
  3738 ;; *************** function _button_B_submenu_siren_tone *****************
  3739 ;; Defined at:
  3740 ;;		line 569 in file "main.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;		None               void
  3747 ;; Registers used:
  3748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3758 ;;Total ram usage:        2 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    7
  3761 ;; This function calls:
  3762 ;;		_activity_home
  3763 ;; This function is called by:
  3764 ;;		_button_B
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text20
  3769  00E6B8                     __ptext20:
  3770                           	opt stack 0
  3771  00E6B8                     _button_B_submenu_siren_tone:
  3772                           	opt stack 21
  3773                           
  3774                           ;main.c: 571: switch(submenu_selected){
  3775                           
  3776                           ;incstack = 0
  3777  00E6B8  D009               	goto	l3521
  3778  00E6BA                     l3515:
  3779                           
  3780                           ;main.c: 574: alarm_tone = 0;
  3781  00E6BA  0E00               	movlw	0
  3782  00E6BC  6E06               	movwf	_alarm_tone+1,c
  3783  00E6BE  0E00               	movlw	0
  3784  00E6C0  D003               	goto	L2
  3785  00E6C2                     l3517:
  3786                           
  3787                           ;main.c: 578: alarm_tone = 1;
  3788  00E6C2  0E00               	movlw	0
  3789  00E6C4  6E06               	movwf	_alarm_tone+1,c
  3790  00E6C6  0E01               	movlw	1
  3791  00E6C8                     L2:
  3792  00E6C8  6E05               	movwf	_alarm_tone,c
  3793                           
  3794                           ;main.c: 581: }
  3795                           
  3796                           ;main.c: 579: break;
  3797  00E6CA  D010               	goto	l3523
  3798  00E6CC                     l3521:
  3799  00E6CC  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_siren_tone
  3800  00E6D0  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_siren_tone+1
  3801                           
  3802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3803                           ; Switch size 1, requested type "space"
  3804                           ; Number of cases is 1, Range of values is 0 to 0
  3805                           ; switch strategies available:
  3806                           ; Name         Instructions Cycles
  3807                           ; simple_byte            4     3 (average)
  3808                           ;	Chosen strategy is simple_byte
  3809  00E6D4  503B               	movf	??_button_B_submenu_siren_tone+1,w,c
  3810  00E6D6  0A00               	xorlw	0	; case 0
  3811  00E6D8  A4D8               	btfss	status,2,c
  3812  00E6DA  D008               	goto	l3523
  3813                           
  3814                           ; Switch size 1, requested type "space"
  3815                           ; Number of cases is 2, Range of values is 0 to 1
  3816                           ; switch strategies available:
  3817                           ; Name         Instructions Cycles
  3818                           ; simple_byte            7     4 (average)
  3819                           ;	Chosen strategy is simple_byte
  3820  00E6DC  503A               	movf	??_button_B_submenu_siren_tone,w,c
  3821  00E6DE  0A00               	xorlw	0	; case 0
  3822  00E6E0  B4D8               	btfsc	status,2,c
  3823  00E6E2  D7EB               	goto	l3515
  3824  00E6E4  0A01               	xorlw	1	; case 1
  3825  00E6E6  B4D8               	btfsc	status,2,c
  3826  00E6E8  D7EC               	goto	l3517
  3827  00E6EA  D000               	goto	l3523
  3828  00E6EC                     l3523:
  3829                           
  3830                           ;main.c: 583: activity_home();
  3831  00E6EC  EC70  F072         	call	_activity_home	;wreg free
  3832  00E6F0  0012               	return		;funcret
  3833  00E6F2                     __end_of_button_B_submenu_siren_tone:
  3834                           	opt stack 0
  3835                           tblptru	equ	0xFF8
  3836                           tblptrh	equ	0xFF7
  3837                           tblptrl	equ	0xFF6
  3838                           tablat	equ	0xFF5
  3839                           prodl	equ	0xFF3
  3840                           intcon	equ	0xFF2
  3841                           postinc0	equ	0xFEE
  3842                           wreg	equ	0xFE8
  3843                           indf1	equ	0xFE7
  3844                           postdec1	equ	0xFE5
  3845                           fsr1h	equ	0xFE2
  3846                           fsr1l	equ	0xFE1
  3847                           indf2	equ	0xFDF
  3848                           fsr2h	equ	0xFDA
  3849                           fsr2l	equ	0xFD9
  3850                           status	equ	0xFD8
  3851                           
  3852 ;; *************** function _button_B_submenu_siren_config *****************
  3853 ;; Defined at:
  3854 ;;		line 535 in file "main.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;		None               void
  3861 ;; Registers used:
  3862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;Total ram usage:        2 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    8
  3875 ;; This function calls:
  3876 ;;		_activity_submenu_siren_tone
  3877 ;;		_activity_submenu_siren_volume
  3878 ;; This function is called by:
  3879 ;;		_button_B
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text21
  3884  00E5E8                     __ptext21:
  3885                           	opt stack 0
  3886  00E5E8                     _button_B_submenu_siren_config:
  3887                           	opt stack 20
  3888                           
  3889                           ;main.c: 537: switch(submenu_selected){
  3890                           
  3891                           ;incstack = 0
  3892  00E5E8  D006               	goto	l3491
  3893  00E5EA                     l3485:
  3894                           
  3895                           ;main.c: 540: activity_submenu_siren_volume();
  3896  00E5EA  EC40  F078         	call	_activity_submenu_siren_volume	;wreg free
  3897                           
  3898                           ;main.c: 541: break;
  3899  00E5EE  0012               	return	
  3900  00E5F0                     l3487:
  3901                           
  3902                           ;main.c: 544: activity_submenu_siren_tone();
  3903  00E5F0  EC0D  F078         	call	_activity_submenu_siren_tone	;wreg free
  3904                           
  3905                           ;main.c: 547: }
  3906                           
  3907                           ;main.c: 545: break;
  3908  00E5F4  0012               	return	
  3909  00E5F6                     l3491:
  3910  00E5F6  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_siren_config
  3911  00E5FA  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_siren_config+1
  3912                           
  3913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3914                           ; Switch size 1, requested type "space"
  3915                           ; Number of cases is 1, Range of values is 0 to 0
  3916                           ; switch strategies available:
  3917                           ; Name         Instructions Cycles
  3918                           ; simple_byte            4     3 (average)
  3919                           ;	Chosen strategy is simple_byte
  3920  00E5FE  503B               	movf	??_button_B_submenu_siren_config+1,w,c
  3921  00E600  0A00               	xorlw	0	; case 0
  3922  00E602  A4D8               	btfss	status,2,c
  3923  00E604  0012               	return	
  3924                           
  3925                           ; Switch size 1, requested type "space"
  3926                           ; Number of cases is 2, Range of values is 0 to 1
  3927                           ; switch strategies available:
  3928                           ; Name         Instructions Cycles
  3929                           ; simple_byte            7     4 (average)
  3930                           ;	Chosen strategy is simple_byte
  3931  00E606  503A               	movf	??_button_B_submenu_siren_config,w,c
  3932  00E608  0A00               	xorlw	0	; case 0
  3933  00E60A  B4D8               	btfsc	status,2,c
  3934  00E60C  D7EE               	goto	l3485
  3935  00E60E  0A01               	xorlw	1	; case 1
  3936  00E610  A4D8               	btfss	status,2,c
  3937  00E612  0012               	return	
  3938  00E614  D7ED               	goto	l3487
  3939  00E616  0012               	return		;funcret
  3940  00E618                     __end_of_button_B_submenu_siren_config:
  3941                           	opt stack 0
  3942                           tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           prodl	equ	0xFF3
  3947                           intcon	equ	0xFF2
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           indf1	equ	0xFE7
  3951                           postdec1	equ	0xFE5
  3952                           fsr1h	equ	0xFE2
  3953                           fsr1l	equ	0xFE1
  3954                           indf2	equ	0xFDF
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8
  3958                           
  3959 ;; *************** function _activity_submenu_siren_volume *****************
  3960 ;; Defined at:
  3961 ;;		line 295 in file "main.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;		None               void
  3968 ;; Registers used:
  3969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    7
  3982 ;; This function calls:
  3983 ;;		_lcd_init
  3984 ;;		_lcd_write
  3985 ;;		_submenu_selector_0
  3986 ;; This function is called by:
  3987 ;;		_button_B_submenu_siren_config
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text22
  3992  00F080                     __ptext22:
  3993                           	opt stack 0
  3994  00F080                     _activity_submenu_siren_volume:
  3995                           	opt stack 20
  3996                           
  3997                           ;main.c: 297: activity = 8;
  3998                           
  3999                           ;incstack = 0
  4000  00F080  0E00               	movlw	0
  4001  00F082  6E04               	movwf	_activity+1,c
  4002  00F084  0E08               	movlw	8
  4003  00F086  6E03               	movwf	_activity,c
  4004                           
  4005                           ;main.c: 298: lcd_init();
  4006  00F088  EC93  F079         	call	_lcd_init	;wreg free
  4007                           
  4008                           ;main.c: 299: lcd_write(1,1,"Volumen");
  4009  00F08C  0E00               	movlw	0
  4010  00F08E  6E35               	movwf	lcd_write@column+1,c
  4011  00F090  0E01               	movlw	1
  4012  00F092  6E34               	movwf	lcd_write@column,c
  4013  00F094  0E00               	movlw	0
  4014  00F096  6E37               	movwf	lcd_write@row+1,c
  4015  00F098  0E01               	movlw	1
  4016  00F09A  6E36               	movwf	lcd_write@row,c
  4017  00F09C  0E55               	movlw	low STR_31
  4018  00F09E  6E38               	movwf	lcd_write@string,c
  4019  00F0A0  0EFF               	movlw	high STR_31
  4020  00F0A2  6E39               	movwf	lcd_write@string+1,c
  4021  00F0A4  ECEF  F071         	call	_lcd_write	;wreg free
  4022                           
  4023                           ;main.c: 300: lcd_write(10,1,"Bajo");
  4024  00F0A8  0E00               	movlw	0
  4025  00F0AA  6E35               	movwf	lcd_write@column+1,c
  4026  00F0AC  0E0A               	movlw	10
  4027  00F0AE  6E34               	movwf	lcd_write@column,c
  4028  00F0B0  0E00               	movlw	0
  4029  00F0B2  6E37               	movwf	lcd_write@row+1,c
  4030  00F0B4  0E01               	movlw	1
  4031  00F0B6  6E36               	movwf	lcd_write@row,c
  4032  00F0B8  0ECF               	movlw	low STR_34
  4033  00F0BA  6E38               	movwf	lcd_write@string,c
  4034  00F0BC  0EFF               	movlw	high STR_34
  4035  00F0BE  6E39               	movwf	lcd_write@string+1,c
  4036  00F0C0  ECEF  F071         	call	_lcd_write	;wreg free
  4037                           
  4038                           ;main.c: 301: lcd_write(10,2,"Alto");
  4039  00F0C4  0E00               	movlw	0
  4040  00F0C6  6E35               	movwf	lcd_write@column+1,c
  4041  00F0C8  0E0A               	movlw	10
  4042  00F0CA  6E34               	movwf	lcd_write@column,c
  4043  00F0CC  0E00               	movlw	0
  4044  00F0CE  6E37               	movwf	lcd_write@row+1,c
  4045  00F0D0  0E02               	movlw	2
  4046  00F0D2  6E36               	movwf	lcd_write@row,c
  4047  00F0D4  0ED9               	movlw	low STR_35
  4048  00F0D6  6E38               	movwf	lcd_write@string,c
  4049  00F0D8  0EFF               	movlw	high STR_35
  4050  00F0DA  6E39               	movwf	lcd_write@string+1,c
  4051  00F0DC  ECEF  F071         	call	_lcd_write	;wreg free
  4052                           
  4053                           ;main.c: 302: submenu_selector_0();
  4054  00F0E0  EC3A  F074         	call	_submenu_selector_0	;wreg free
  4055  00F0E4  0012               	return		;funcret
  4056  00F0E6                     __end_of_activity_submenu_siren_volume:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           prodl	equ	0xFF3
  4063                           intcon	equ	0xFF2
  4064                           postinc0	equ	0xFEE
  4065                           wreg	equ	0xFE8
  4066                           indf1	equ	0xFE7
  4067                           postdec1	equ	0xFE5
  4068                           fsr1h	equ	0xFE2
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           fsr2h	equ	0xFDA
  4072                           fsr2l	equ	0xFD9
  4073                           status	equ	0xFD8
  4074                           
  4075 ;; *************** function _activity_submenu_siren_tone *****************
  4076 ;; Defined at:
  4077 ;;		line 306 in file "main.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;		None               void
  4084 ;; Registers used:
  4085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;Total ram usage:        0 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    7
  4098 ;; This function calls:
  4099 ;;		_lcd_init
  4100 ;;		_lcd_write
  4101 ;;		_submenu_selector_0
  4102 ;; This function is called by:
  4103 ;;		_button_B_submenu_siren_config
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text23
  4108  00F01A                     __ptext23:
  4109                           	opt stack 0
  4110  00F01A                     _activity_submenu_siren_tone:
  4111                           	opt stack 20
  4112                           
  4113                           ;main.c: 308: activity = 9;
  4114                           
  4115                           ;incstack = 0
  4116  00F01A  0E00               	movlw	0
  4117  00F01C  6E04               	movwf	_activity+1,c
  4118  00F01E  0E09               	movlw	9
  4119  00F020  6E03               	movwf	_activity,c
  4120                           
  4121                           ;main.c: 309: lcd_init();
  4122  00F022  EC93  F079         	call	_lcd_init	;wreg free
  4123                           
  4124                           ;main.c: 310: lcd_write(1,1,"Tono");
  4125  00F026  0E00               	movlw	0
  4126  00F028  6E35               	movwf	lcd_write@column+1,c
  4127  00F02A  0E01               	movlw	1
  4128  00F02C  6E34               	movwf	lcd_write@column,c
  4129  00F02E  0E00               	movlw	0
  4130  00F030  6E37               	movwf	lcd_write@row+1,c
  4131  00F032  0E01               	movlw	1
  4132  00F034  6E36               	movwf	lcd_write@row,c
  4133  00F036  0ED4               	movlw	low STR_32
  4134  00F038  6E38               	movwf	lcd_write@string,c
  4135  00F03A  0EFF               	movlw	high STR_32
  4136  00F03C  6E39               	movwf	lcd_write@string+1,c
  4137  00F03E  ECEF  F071         	call	_lcd_write	;wreg free
  4138                           
  4139                           ;main.c: 311: lcd_write(10,1,"Beep 1");
  4140  00F042  0E00               	movlw	0
  4141  00F044  6E35               	movwf	lcd_write@column+1,c
  4142  00F046  0E0A               	movlw	10
  4143  00F048  6E34               	movwf	lcd_write@column,c
  4144  00F04A  0E00               	movlw	0
  4145  00F04C  6E37               	movwf	lcd_write@row+1,c
  4146  00F04E  0E01               	movlw	1
  4147  00F050  6E36               	movwf	lcd_write@row,c
  4148  00F052  0E6D               	movlw	low STR_37
  4149  00F054  6E38               	movwf	lcd_write@string,c
  4150  00F056  0EFF               	movlw	high STR_37
  4151  00F058  6E39               	movwf	lcd_write@string+1,c
  4152  00F05A  ECEF  F071         	call	_lcd_write	;wreg free
  4153                           
  4154                           ;main.c: 312: lcd_write(10,2,"Beep 2");
  4155  00F05E  0E00               	movlw	0
  4156  00F060  6E35               	movwf	lcd_write@column+1,c
  4157  00F062  0E0A               	movlw	10
  4158  00F064  6E34               	movwf	lcd_write@column,c
  4159  00F066  0E00               	movlw	0
  4160  00F068  6E37               	movwf	lcd_write@row+1,c
  4161  00F06A  0E02               	movlw	2
  4162  00F06C  6E36               	movwf	lcd_write@row,c
  4163  00F06E  0E7B               	movlw	low STR_38
  4164  00F070  6E38               	movwf	lcd_write@string,c
  4165  00F072  0EFF               	movlw	high STR_38
  4166  00F074  6E39               	movwf	lcd_write@string+1,c
  4167  00F076  ECEF  F071         	call	_lcd_write	;wreg free
  4168                           
  4169                           ;main.c: 313: submenu_selector_0();
  4170  00F07A  EC3A  F074         	call	_submenu_selector_0	;wreg free
  4171  00F07E  0012               	return		;funcret
  4172  00F080                     __end_of_activity_submenu_siren_tone:
  4173                           	opt stack 0
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           prodl	equ	0xFF3
  4179                           intcon	equ	0xFF2
  4180                           postinc0	equ	0xFEE
  4181                           wreg	equ	0xFE8
  4182                           indf1	equ	0xFE7
  4183                           postdec1	equ	0xFE5
  4184                           fsr1h	equ	0xFE2
  4185                           fsr1l	equ	0xFE1
  4186                           indf2	equ	0xFDF
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function _button_B_submenu_pin_config *****************
  4192 ;; Defined at:
  4193 ;;		line 518 in file "main.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;Total ram usage:        2 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    7
  4214 ;; This function calls:
  4215 ;;		_activity_home
  4216 ;;		_activity_submenu_pin_set
  4217 ;;		_pin_reset
  4218 ;; This function is called by:
  4219 ;;		_button_B
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text24
  4224  00E64A                     __ptext24:
  4225                           	opt stack 0
  4226  00E64A                     _button_B_submenu_pin_config:
  4227                           	opt stack 21
  4228                           
  4229                           ;main.c: 520: switch(submenu_selected){
  4230                           
  4231                           ;incstack = 0
  4232  00E64A  D008               	goto	l3477
  4233  00E64C                     l3469:
  4234                           
  4235                           ;main.c: 523: activity_submenu_pin_set();
  4236  00E64C  ECC6  F075         	call	_activity_submenu_pin_set	;wreg free
  4237                           
  4238                           ;main.c: 524: break;
  4239  00E650  0012               	return	
  4240  00E652                     l3471:
  4241                           
  4242                           ;main.c: 527: pin_reset();
  4243  00E652  ECE4  F071         	call	_pin_reset	;wreg free
  4244                           
  4245                           ;main.c: 528: activity_home();
  4246  00E656  EC70  F072         	call	_activity_home	;wreg free
  4247                           
  4248                           ;main.c: 531: }
  4249                           
  4250                           ;main.c: 529: break;
  4251  00E65A  0012               	return	
  4252  00E65C                     l3477:
  4253  00E65C  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_pin_config
  4254  00E660  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_pin_config+1
  4255                           
  4256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4257                           ; Switch size 1, requested type "space"
  4258                           ; Number of cases is 1, Range of values is 0 to 0
  4259                           ; switch strategies available:
  4260                           ; Name         Instructions Cycles
  4261                           ; simple_byte            4     3 (average)
  4262                           ;	Chosen strategy is simple_byte
  4263  00E664  503B               	movf	??_button_B_submenu_pin_config+1,w,c
  4264  00E666  0A00               	xorlw	0	; case 0
  4265  00E668  A4D8               	btfss	status,2,c
  4266  00E66A  0012               	return	
  4267                           
  4268                           ; Switch size 1, requested type "space"
  4269                           ; Number of cases is 2, Range of values is 0 to 1
  4270                           ; switch strategies available:
  4271                           ; Name         Instructions Cycles
  4272                           ; simple_byte            7     4 (average)
  4273                           ;	Chosen strategy is simple_byte
  4274  00E66C  503A               	movf	??_button_B_submenu_pin_config,w,c
  4275  00E66E  0A00               	xorlw	0	; case 0
  4276  00E670  B4D8               	btfsc	status,2,c
  4277  00E672  D7EC               	goto	l3469
  4278  00E674  0A01               	xorlw	1	; case 1
  4279  00E676  A4D8               	btfss	status,2,c
  4280  00E678  0012               	return	
  4281  00E67A  D7EB               	goto	l3471
  4282  00E67C  0012               	return		;funcret
  4283  00E67E                     __end_of_button_B_submenu_pin_config:
  4284                           	opt stack 0
  4285                           tblptru	equ	0xFF8
  4286                           tblptrh	equ	0xFF7
  4287                           tblptrl	equ	0xFF6
  4288                           tablat	equ	0xFF5
  4289                           prodl	equ	0xFF3
  4290                           intcon	equ	0xFF2
  4291                           postinc0	equ	0xFEE
  4292                           wreg	equ	0xFE8
  4293                           indf1	equ	0xFE7
  4294                           postdec1	equ	0xFE5
  4295                           fsr1h	equ	0xFE2
  4296                           fsr1l	equ	0xFE1
  4297                           indf2	equ	0xFDF
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _pin_reset *****************
  4303 ;; Defined at:
  4304 ;;		line 360 in file "main.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;		None               void
  4311 ;; Registers used:
  4312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    1
  4325 ;; This function calls:
  4326 ;;		_strcpy
  4327 ;; This function is called by:
  4328 ;;		_button_B_submenu_pin_config
  4329 ;;		_setup
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text25
  4334  00E3C8                     __ptext25:
  4335                           	opt stack 0
  4336  00E3C8                     _pin_reset:
  4337                           	opt stack 28
  4338                           
  4339                           ;main.c: 362: strcpy(pin, "1234");
  4340                           
  4341                           ;incstack = 0
  4342  00E3C8  0E94               	movlw	low _pin
  4343  00E3CA  6E2A               	movwf	strcpy@to,c
  4344  00E3CC  0E00               	movlw	high _pin
  4345  00E3CE  6E2B               	movwf	strcpy@to+1,c
  4346  00E3D0  0EC5               	movlw	low STR_44
  4347  00E3D2  6E2C               	movwf	strcpy@from,c
  4348  00E3D4  0EFF               	movlw	high STR_44
  4349  00E3D6  6E2D               	movwf	strcpy@from+1,c
  4350  00E3D8  EC9E  F074         	call	_strcpy	;wreg free
  4351  00E3DC  0012               	return		;funcret
  4352  00E3DE                     __end_of_pin_reset:
  4353                           	opt stack 0
  4354                           tblptru	equ	0xFF8
  4355                           tblptrh	equ	0xFF7
  4356                           tblptrl	equ	0xFF6
  4357                           tablat	equ	0xFF5
  4358                           prodl	equ	0xFF3
  4359                           intcon	equ	0xFF2
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           indf1	equ	0xFE7
  4363                           postdec1	equ	0xFE5
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           fsr2h	equ	0xFDA
  4368                           fsr2l	equ	0xFD9
  4369                           status	equ	0xFD8
  4370                           
  4371 ;; *************** function _activity_submenu_pin_set *****************
  4372 ;; Defined at:
  4373 ;;		line 329 in file "main.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;		None               void
  4380 ;; Registers used:
  4381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    6
  4394 ;; This function calls:
  4395 ;;		_lcd_comand
  4396 ;;		_lcd_gotoxy
  4397 ;;		_lcd_init
  4398 ;;		_lcd_write
  4399 ;;		_strcpy
  4400 ;; This function is called by:
  4401 ;;		_button_B_submenu_pin_config
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text26
  4406  00EB8C                     __ptext26:
  4407                           	opt stack 0
  4408  00EB8C                     _activity_submenu_pin_set:
  4409                           	opt stack 21
  4410                           
  4411                           ;main.c: 331: activity = 6;
  4412                           
  4413                           ;incstack = 0
  4414  00EB8C  0E00               	movlw	0
  4415  00EB8E  6E04               	movwf	_activity+1,c
  4416  00EB90  0E06               	movlw	6
  4417  00EB92  6E03               	movwf	_activity,c
  4418                           
  4419                           ;main.c: 332: strcpy(pin_input, "");
  4420  00EB94  0E99               	movlw	low _pin_input
  4421  00EB96  6E2A               	movwf	strcpy@to,c
  4422  00EB98  0E00               	movlw	high _pin_input
  4423  00EB9A  6E2B               	movwf	strcpy@to+1,c
  4424  00EB9C  0EF2               	movlw	low (STR_3+1)
  4425  00EB9E  6E2C               	movwf	strcpy@from,c
  4426  00EBA0  0EFF               	movlw	high (STR_3+1)
  4427  00EBA2  6E2D               	movwf	strcpy@from+1,c
  4428  00EBA4  EC9E  F074         	call	_strcpy	;wreg free
  4429                           
  4430                           ;main.c: 333: lcd_init();
  4431  00EBA8  EC93  F079         	call	_lcd_init	;wreg free
  4432                           
  4433                           ;main.c: 334: lcd_write(1,1,"Nuevo PIN:");
  4434  00EBAC  0E00               	movlw	0
  4435  00EBAE  6E35               	movwf	lcd_write@column+1,c
  4436  00EBB0  0E01               	movlw	1
  4437  00EBB2  6E34               	movwf	lcd_write@column,c
  4438  00EBB4  0E00               	movlw	0
  4439  00EBB6  6E37               	movwf	lcd_write@row+1,c
  4440  00EBB8  0E01               	movlw	1
  4441  00EBBA  6E36               	movwf	lcd_write@row,c
  4442  00EBBC  0E4A               	movlw	low STR_43
  4443  00EBBE  6E38               	movwf	lcd_write@string,c
  4444  00EBC0  0EFF               	movlw	high STR_43
  4445  00EBC2  6E39               	movwf	lcd_write@string+1,c
  4446  00EBC4  ECEF  F071         	call	_lcd_write	;wreg free
  4447                           
  4448                           ;main.c: 335: lcd_gotoxy(1,2);
  4449  00EBC8  0E02               	movlw	2
  4450  00EBCA  6E2E               	movwf	lcd_gotoxy@y,c
  4451  00EBCC  0E01               	movlw	1
  4452  00EBCE  EC38  F072         	call	_lcd_gotoxy
  4453                           
  4454                           ;main.c: 336: lcd_comand(0b00001111);
  4455  00EBD2  0E0F               	movlw	15
  4456  00EBD4  ECC2  F071         	call	_lcd_comand
  4457  00EBD8  0012               	return		;funcret
  4458  00EBDA                     __end_of_activity_submenu_pin_set:
  4459                           	opt stack 0
  4460                           tblptru	equ	0xFF8
  4461                           tblptrh	equ	0xFF7
  4462                           tblptrl	equ	0xFF6
  4463                           tablat	equ	0xFF5
  4464                           prodl	equ	0xFF3
  4465                           intcon	equ	0xFF2
  4466                           postinc0	equ	0xFEE
  4467                           wreg	equ	0xFE8
  4468                           indf1	equ	0xFE7
  4469                           postdec1	equ	0xFE5
  4470                           fsr1h	equ	0xFE2
  4471                           fsr1l	equ	0xFE1
  4472                           indf2	equ	0xFDF
  4473                           fsr2h	equ	0xFDA
  4474                           fsr2l	equ	0xFD9
  4475                           status	equ	0xFD8
  4476                           
  4477 ;; *************** function _button_B_submenu_date_and_time_config *****************
  4478 ;; Defined at:
  4479 ;;		line 587 in file "main.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;		None               void
  4486 ;; Registers used:
  4487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4497 ;;Total ram usage:        2 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    7
  4500 ;; This function calls:
  4501 ;;		_activity_submenu_date_config
  4502 ;;		_activity_submenu_time_config
  4503 ;; This function is called by:
  4504 ;;		_button_B
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text27
  4509  00E5B8                     __ptext27:
  4510                           	opt stack 0
  4511  00E5B8                     _button_B_submenu_date_and_time_config:
  4512                           	opt stack 21
  4513                           
  4514                           ;main.c: 589: switch(submenu_selected){
  4515                           
  4516                           ;incstack = 0
  4517  00E5B8  D006               	goto	l3537
  4518  00E5BA                     l3531:
  4519                           
  4520                           ;main.c: 592: activity_submenu_date_config();
  4521  00E5BA  EC85  F072         	call	_activity_submenu_date_config	;wreg free
  4522                           
  4523                           ;main.c: 593: break;
  4524  00E5BE  0012               	return	
  4525  00E5C0                     l3533:
  4526                           
  4527                           ;main.c: 596: activity_submenu_time_config();
  4528  00E5C0  EC9A  F072         	call	_activity_submenu_time_config	;wreg free
  4529                           
  4530                           ;main.c: 599: }
  4531                           
  4532                           ;main.c: 597: break;
  4533  00E5C4  0012               	return	
  4534  00E5C6                     l3537:
  4535  00E5C6  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_date_and_time_config
  4536  00E5CA  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_date_and_time_config+1
  4537                           
  4538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4539                           ; Switch size 1, requested type "space"
  4540                           ; Number of cases is 1, Range of values is 0 to 0
  4541                           ; switch strategies available:
  4542                           ; Name         Instructions Cycles
  4543                           ; simple_byte            4     3 (average)
  4544                           ;	Chosen strategy is simple_byte
  4545  00E5CE  503B               	movf	??_button_B_submenu_date_and_time_config+1,w,c
  4546  00E5D0  0A00               	xorlw	0	; case 0
  4547  00E5D2  A4D8               	btfss	status,2,c
  4548  00E5D4  0012               	return	
  4549                           
  4550                           ; Switch size 1, requested type "space"
  4551                           ; Number of cases is 2, Range of values is 0 to 1
  4552                           ; switch strategies available:
  4553                           ; Name         Instructions Cycles
  4554                           ; simple_byte            7     4 (average)
  4555                           ;	Chosen strategy is simple_byte
  4556  00E5D6  503A               	movf	??_button_B_submenu_date_and_time_config,w,c
  4557  00E5D8  0A00               	xorlw	0	; case 0
  4558  00E5DA  B4D8               	btfsc	status,2,c
  4559  00E5DC  D7EE               	goto	l3531
  4560  00E5DE  0A01               	xorlw	1	; case 1
  4561  00E5E0  A4D8               	btfss	status,2,c
  4562  00E5E2  0012               	return	
  4563  00E5E4  D7ED               	goto	l3533
  4564  00E5E6  0012               	return		;funcret
  4565  00E5E8                     __end_of_button_B_submenu_date_and_time_config:
  4566                           	opt stack 0
  4567                           tblptru	equ	0xFF8
  4568                           tblptrh	equ	0xFF7
  4569                           tblptrl	equ	0xFF6
  4570                           tablat	equ	0xFF5
  4571                           prodl	equ	0xFF3
  4572                           intcon	equ	0xFF2
  4573                           postinc0	equ	0xFEE
  4574                           wreg	equ	0xFE8
  4575                           indf1	equ	0xFE7
  4576                           postdec1	equ	0xFE5
  4577                           fsr1h	equ	0xFE2
  4578                           fsr1l	equ	0xFE1
  4579                           indf2	equ	0xFDF
  4580                           fsr2h	equ	0xFDA
  4581                           fsr2l	equ	0xFD9
  4582                           status	equ	0xFD8
  4583                           
  4584 ;; *************** function _activity_submenu_time_config *****************
  4585 ;; Defined at:
  4586 ;;		line 261 in file "main.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;		None               void
  4593 ;; Registers used:
  4594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4604 ;;Total ram usage:        0 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    6
  4607 ;; This function calls:
  4608 ;;		_lcd_init
  4609 ;;		_lcd_write
  4610 ;; This function is called by:
  4611 ;;		_button_B_submenu_date_and_time_config
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text28
  4616  00E534                     __ptext28:
  4617                           	opt stack 0
  4618  00E534                     _activity_submenu_time_config:
  4619                           	opt stack 21
  4620                           
  4621                           ;main.c: 263: activity = 11;
  4622                           
  4623                           ;incstack = 0
  4624  00E534  0E00               	movlw	0
  4625  00E536  6E04               	movwf	_activity+1,c
  4626  00E538  0E0B               	movlw	11
  4627  00E53A  6E03               	movwf	_activity,c
  4628                           
  4629                           ;main.c: 264: lcd_init();
  4630  00E53C  EC93  F079         	call	_lcd_init	;wreg free
  4631                           
  4632                           ;main.c: 265: lcd_write(1,1,"Ingrese la hora");
  4633  00E540  0E00               	movlw	0
  4634  00E542  6E35               	movwf	lcd_write@column+1,c
  4635  00E544  0E01               	movlw	1
  4636  00E546  6E34               	movwf	lcd_write@column,c
  4637  00E548  0E00               	movlw	0
  4638  00E54A  6E37               	movwf	lcd_write@row+1,c
  4639  00E54C  0E01               	movlw	1
  4640  00E54E  6E36               	movwf	lcd_write@row,c
  4641  00E550  0E1C               	movlw	low STR_26
  4642  00E552  6E38               	movwf	lcd_write@string,c
  4643  00E554  0EFF               	movlw	high STR_26
  4644  00E556  6E39               	movwf	lcd_write@string+1,c
  4645  00E558  ECEF  F071         	call	_lcd_write	;wreg free
  4646  00E55C  0012               	return		;funcret
  4647  00E55E                     __end_of_activity_submenu_time_config:
  4648                           	opt stack 0
  4649                           tblptru	equ	0xFF8
  4650                           tblptrh	equ	0xFF7
  4651                           tblptrl	equ	0xFF6
  4652                           tablat	equ	0xFF5
  4653                           prodl	equ	0xFF3
  4654                           intcon	equ	0xFF2
  4655                           postinc0	equ	0xFEE
  4656                           wreg	equ	0xFE8
  4657                           indf1	equ	0xFE7
  4658                           postdec1	equ	0xFE5
  4659                           fsr1h	equ	0xFE2
  4660                           fsr1l	equ	0xFE1
  4661                           indf2	equ	0xFDF
  4662                           fsr2h	equ	0xFDA
  4663                           fsr2l	equ	0xFD9
  4664                           status	equ	0xFD8
  4665                           
  4666 ;; *************** function _activity_submenu_date_config *****************
  4667 ;; Defined at:
  4668 ;;		line 252 in file "main.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;		None               void
  4675 ;; Registers used:
  4676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    6
  4689 ;; This function calls:
  4690 ;;		_lcd_init
  4691 ;;		_lcd_write
  4692 ;; This function is called by:
  4693 ;;		_button_B_submenu_date_and_time_config
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text29
  4698  00E50A                     __ptext29:
  4699                           	opt stack 0
  4700  00E50A                     _activity_submenu_date_config:
  4701                           	opt stack 21
  4702                           
  4703                           ;main.c: 254: activity = 10;
  4704                           
  4705                           ;incstack = 0
  4706  00E50A  0E00               	movlw	0
  4707  00E50C  6E04               	movwf	_activity+1,c
  4708  00E50E  0E0A               	movlw	10
  4709  00E510  6E03               	movwf	_activity,c
  4710                           
  4711                           ;main.c: 255: lcd_init();
  4712  00E512  EC93  F079         	call	_lcd_init	;wreg free
  4713                           
  4714                           ;main.c: 256: lcd_write(1,1,"Ingrese la fecha");
  4715  00E516  0E00               	movlw	0
  4716  00E518  6E35               	movwf	lcd_write@column+1,c
  4717  00E51A  0E01               	movlw	1
  4718  00E51C  6E34               	movwf	lcd_write@column,c
  4719  00E51E  0E00               	movlw	0
  4720  00E520  6E37               	movwf	lcd_write@row+1,c
  4721  00E522  0E01               	movlw	1
  4722  00E524  6E36               	movwf	lcd_write@row,c
  4723  00E526  0EFB               	movlw	low STR_25
  4724  00E528  6E38               	movwf	lcd_write@string,c
  4725  00E52A  0EFE               	movlw	high STR_25
  4726  00E52C  6E39               	movwf	lcd_write@string+1,c
  4727  00E52E  ECEF  F071         	call	_lcd_write	;wreg free
  4728  00E532  0012               	return		;funcret
  4729  00E534                     __end_of_activity_submenu_date_config:
  4730                           	opt stack 0
  4731                           tblptru	equ	0xFF8
  4732                           tblptrh	equ	0xFF7
  4733                           tblptrl	equ	0xFF6
  4734                           tablat	equ	0xFF5
  4735                           prodl	equ	0xFF3
  4736                           intcon	equ	0xFF2
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           indf1	equ	0xFE7
  4740                           postdec1	equ	0xFE5
  4741                           fsr1h	equ	0xFE2
  4742                           fsr1l	equ	0xFE1
  4743                           indf2	equ	0xFDF
  4744                           fsr2h	equ	0xFDA
  4745                           fsr2l	equ	0xFD9
  4746                           status	equ	0xFD8
  4747                           
  4748 ;; *************** function _button_B_submenu_activation *****************
  4749 ;; Defined at:
  4750 ;;		line 500 in file "main.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;		None               void
  4757 ;; Registers used:
  4758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;Total ram usage:        2 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    7
  4771 ;; This function calls:
  4772 ;;		_activity_home
  4773 ;; This function is called by:
  4774 ;;		_button_B
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text30
  4779  00E67E                     __ptext30:
  4780                           	opt stack 0
  4781  00E67E                     _button_B_submenu_activation:
  4782                           	opt stack 21
  4783                           
  4784                           ;main.c: 502: switch(submenu_selected){
  4785                           
  4786                           ;incstack = 0
  4787  00E67E  D009               	goto	l3459
  4788  00E680                     l3453:
  4789                           
  4790                           ;main.c: 505: state = 1;
  4791  00E680  0E00               	movlw	0
  4792  00E682  6E1E               	movwf	_state+1,c
  4793  00E684  0E01               	movlw	1
  4794  00E686  D003               	goto	L3
  4795  00E688                     l3455:
  4796                           
  4797                           ;main.c: 509: state = 0;
  4798  00E688  0E00               	movlw	0
  4799  00E68A  6E1E               	movwf	_state+1,c
  4800  00E68C  0E00               	movlw	0
  4801  00E68E                     L3:
  4802  00E68E  6E1D               	movwf	_state,c
  4803                           
  4804                           ;main.c: 512: }
  4805                           
  4806                           ;main.c: 510: break;
  4807  00E690  D010               	goto	l3461
  4808  00E692                     l3459:
  4809  00E692  C01F  F03A         	movff	_submenu_selected,??_button_B_submenu_activation
  4810  00E696  C020  F03B         	movff	_submenu_selected+1,??_button_B_submenu_activation+1
  4811                           
  4812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4813                           ; Switch size 1, requested type "space"
  4814                           ; Number of cases is 1, Range of values is 0 to 0
  4815                           ; switch strategies available:
  4816                           ; Name         Instructions Cycles
  4817                           ; simple_byte            4     3 (average)
  4818                           ;	Chosen strategy is simple_byte
  4819  00E69A  503B               	movf	??_button_B_submenu_activation+1,w,c
  4820  00E69C  0A00               	xorlw	0	; case 0
  4821  00E69E  A4D8               	btfss	status,2,c
  4822  00E6A0  D008               	goto	l3461
  4823                           
  4824                           ; Switch size 1, requested type "space"
  4825                           ; Number of cases is 2, Range of values is 0 to 1
  4826                           ; switch strategies available:
  4827                           ; Name         Instructions Cycles
  4828                           ; simple_byte            7     4 (average)
  4829                           ;	Chosen strategy is simple_byte
  4830  00E6A2  503A               	movf	??_button_B_submenu_activation,w,c
  4831  00E6A4  0A00               	xorlw	0	; case 0
  4832  00E6A6  B4D8               	btfsc	status,2,c
  4833  00E6A8  D7EB               	goto	l3453
  4834  00E6AA  0A01               	xorlw	1	; case 1
  4835  00E6AC  B4D8               	btfsc	status,2,c
  4836  00E6AE  D7EC               	goto	l3455
  4837  00E6B0  D000               	goto	l3461
  4838  00E6B2                     l3461:
  4839                           
  4840                           ;main.c: 514: activity_home();
  4841  00E6B2  EC70  F072         	call	_activity_home	;wreg free
  4842  00E6B6  0012               	return		;funcret
  4843  00E6B8                     __end_of_button_B_submenu_activation:
  4844                           	opt stack 0
  4845                           tblptru	equ	0xFF8
  4846                           tblptrh	equ	0xFF7
  4847                           tblptrl	equ	0xFF6
  4848                           tablat	equ	0xFF5
  4849                           prodl	equ	0xFF3
  4850                           intcon	equ	0xFF2
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           indf1	equ	0xFE7
  4854                           postdec1	equ	0xFE5
  4855                           fsr1h	equ	0xFE2
  4856                           fsr1l	equ	0xFE1
  4857                           indf2	equ	0xFDF
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _button_B_menu *****************
  4863 ;; Defined at:
  4864 ;;		line 476 in file "main.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;		None               void
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;Total ram usage:        2 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    8
  4885 ;; This function calls:
  4886 ;;		_activity_submenu_activation
  4887 ;;		_activity_submenu_date_and_time
  4888 ;;		_activity_submenu_pin
  4889 ;;		_activity_submenu_siren
  4890 ;; This function is called by:
  4891 ;;		_button_B
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text31
  4896  00E9CA                     __ptext31:
  4897                           	opt stack 0
  4898  00E9CA                     _button_B_menu:
  4899                           	opt stack 20
  4900                           
  4901                           ;main.c: 478: switch(menu_selected){
  4902                           
  4903                           ;incstack = 0
  4904  00E9CA  D00C               	goto	l3445
  4905  00E9CC                     l3435:
  4906                           
  4907                           ;main.c: 481: activity_submenu_activation();
  4908  00E9CC  EC41  F077         	call	_activity_submenu_activation	;wreg free
  4909                           
  4910                           ;main.c: 482: break;
  4911  00E9D0  0012               	return	
  4912  00E9D2                     l3437:
  4913                           
  4914                           ;main.c: 485: activity_submenu_date_and_time();
  4915  00E9D2  EC74  F077         	call	_activity_submenu_date_and_time	;wreg free
  4916                           
  4917                           ;main.c: 486: break;
  4918  00E9D6  0012               	return	
  4919  00E9D8                     l3439:
  4920                           
  4921                           ;main.c: 489: activity_submenu_pin();
  4922  00E9D8  ECA7  F077         	call	_activity_submenu_pin	;wreg free
  4923                           
  4924                           ;main.c: 490: break;
  4925  00E9DC  0012               	return	
  4926  00E9DE                     l3441:
  4927                           
  4928                           ;main.c: 493: activity_submenu_siren();
  4929  00E9DE  ECDA  F077         	call	_activity_submenu_siren	;wreg free
  4930                           
  4931                           ;main.c: 496: }
  4932                           
  4933                           ;main.c: 494: break;
  4934  00E9E2  0012               	return	
  4935  00E9E4                     l3445:
  4936  00E9E4  C017  F03A         	movff	_menu_selected,??_button_B_menu
  4937  00E9E8  C018  F03B         	movff	_menu_selected+1,??_button_B_menu+1
  4938                           
  4939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4940                           ; Switch size 1, requested type "space"
  4941                           ; Number of cases is 1, Range of values is 0 to 0
  4942                           ; switch strategies available:
  4943                           ; Name         Instructions Cycles
  4944                           ; simple_byte            4     3 (average)
  4945                           ;	Chosen strategy is simple_byte
  4946  00E9EC  503B               	movf	??_button_B_menu+1,w,c
  4947  00E9EE  0A00               	xorlw	0	; case 0
  4948  00E9F0  A4D8               	btfss	status,2,c
  4949  00E9F2  0012               	return	
  4950                           
  4951                           ; Switch size 1, requested type "space"
  4952                           ; Number of cases is 4, Range of values is 0 to 3
  4953                           ; switch strategies available:
  4954                           ; Name         Instructions Cycles
  4955                           ; simple_byte           13     7 (average)
  4956                           ;	Chosen strategy is simple_byte
  4957  00E9F4  503A               	movf	??_button_B_menu,w,c
  4958  00E9F6  0A00               	xorlw	0	; case 0
  4959  00E9F8  B4D8               	btfsc	status,2,c
  4960  00E9FA  D7E8               	goto	l3435
  4961  00E9FC  0A01               	xorlw	1	; case 1
  4962  00E9FE  B4D8               	btfsc	status,2,c
  4963  00EA00  D7E8               	goto	l3437
  4964  00EA02  0A03               	xorlw	3	; case 2
  4965  00EA04  B4D8               	btfsc	status,2,c
  4966  00EA06  D7E8               	goto	l3439
  4967  00EA08  0A01               	xorlw	1	; case 3
  4968  00EA0A  A4D8               	btfss	status,2,c
  4969  00EA0C  0012               	return	
  4970  00EA0E  D7E7               	goto	l3441
  4971  00EA10  0012               	return		;funcret
  4972  00EA12                     __end_of_button_B_menu:
  4973                           	opt stack 0
  4974                           tblptru	equ	0xFF8
  4975                           tblptrh	equ	0xFF7
  4976                           tblptrl	equ	0xFF6
  4977                           tablat	equ	0xFF5
  4978                           prodl	equ	0xFF3
  4979                           intcon	equ	0xFF2
  4980                           postinc0	equ	0xFEE
  4981                           wreg	equ	0xFE8
  4982                           indf1	equ	0xFE7
  4983                           postdec1	equ	0xFE5
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           indf2	equ	0xFDF
  4987                           fsr2h	equ	0xFDA
  4988                           fsr2l	equ	0xFD9
  4989                           status	equ	0xFD8
  4990                           
  4991 ;; *************** function _activity_submenu_siren *****************
  4992 ;; Defined at:
  4993 ;;		line 284 in file "main.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;		None               void
  5000 ;; Registers used:
  5001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    7
  5014 ;; This function calls:
  5015 ;;		_lcd_init
  5016 ;;		_lcd_write
  5017 ;;		_submenu_selector_0
  5018 ;; This function is called by:
  5019 ;;		_button_B_menu
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text32
  5024  00EFB4                     __ptext32:
  5025                           	opt stack 0
  5026  00EFB4                     _activity_submenu_siren:
  5027                           	opt stack 20
  5028                           
  5029                           ;main.c: 286: activity = 7;
  5030                           
  5031                           ;incstack = 0
  5032  00EFB4  0E00               	movlw	0
  5033  00EFB6  6E04               	movwf	_activity+1,c
  5034  00EFB8  0E07               	movlw	7
  5035  00EFBA  6E03               	movwf	_activity,c
  5036                           
  5037                           ;main.c: 287: lcd_init();
  5038  00EFBC  EC93  F079         	call	_lcd_init	;wreg free
  5039                           
  5040                           ;main.c: 288: lcd_write(1,1,"Sirena");
  5041  00EFC0  0E00               	movlw	0
  5042  00EFC2  6E35               	movwf	lcd_write@column+1,c
  5043  00EFC4  0E01               	movlw	1
  5044  00EFC6  6E34               	movwf	lcd_write@column,c
  5045  00EFC8  0E00               	movlw	0
  5046  00EFCA  6E37               	movwf	lcd_write@row+1,c
  5047  00EFCC  0E01               	movlw	1
  5048  00EFCE  6E36               	movwf	lcd_write@row,c
  5049  00EFD0  0EAC               	movlw	low STR_30
  5050  00EFD2  6E38               	movwf	lcd_write@string,c
  5051  00EFD4  0EFF               	movlw	high STR_30
  5052  00EFD6  6E39               	movwf	lcd_write@string+1,c
  5053  00EFD8  ECEF  F071         	call	_lcd_write	;wreg free
  5054                           
  5055                           ;main.c: 289: lcd_write(10,1,"Volumen");
  5056  00EFDC  0E00               	movlw	0
  5057  00EFDE  6E35               	movwf	lcd_write@column+1,c
  5058  00EFE0  0E0A               	movlw	10
  5059  00EFE2  6E34               	movwf	lcd_write@column,c
  5060  00EFE4  0E00               	movlw	0
  5061  00EFE6  6E37               	movwf	lcd_write@row+1,c
  5062  00EFE8  0E01               	movlw	1
  5063  00EFEA  6E36               	movwf	lcd_write@row,c
  5064  00EFEC  0E55               	movlw	low STR_31
  5065  00EFEE  6E38               	movwf	lcd_write@string,c
  5066  00EFF0  0EFF               	movlw	high STR_31
  5067  00EFF2  6E39               	movwf	lcd_write@string+1,c
  5068  00EFF4  ECEF  F071         	call	_lcd_write	;wreg free
  5069                           
  5070                           ;main.c: 290: lcd_write(10,2,"Tono");
  5071  00EFF8  0E00               	movlw	0
  5072  00EFFA  6E35               	movwf	lcd_write@column+1,c
  5073  00EFFC  0E0A               	movlw	10
  5074  00EFFE  6E34               	movwf	lcd_write@column,c
  5075  00F000  0E00               	movlw	0
  5076  00F002  6E37               	movwf	lcd_write@row+1,c
  5077  00F004  0E02               	movlw	2
  5078  00F006  6E36               	movwf	lcd_write@row,c
  5079  00F008  0ED4               	movlw	low STR_32
  5080  00F00A  6E38               	movwf	lcd_write@string,c
  5081  00F00C  0EFF               	movlw	high STR_32
  5082  00F00E  6E39               	movwf	lcd_write@string+1,c
  5083  00F010  ECEF  F071         	call	_lcd_write	;wreg free
  5084                           
  5085                           ;main.c: 291: submenu_selector_0();
  5086  00F014  EC3A  F074         	call	_submenu_selector_0	;wreg free
  5087  00F018  0012               	return		;funcret
  5088  00F01A                     __end_of_activity_submenu_siren:
  5089                           	opt stack 0
  5090                           tblptru	equ	0xFF8
  5091                           tblptrh	equ	0xFF7
  5092                           tblptrl	equ	0xFF6
  5093                           tablat	equ	0xFF5
  5094                           prodl	equ	0xFF3
  5095                           intcon	equ	0xFF2
  5096                           postinc0	equ	0xFEE
  5097                           wreg	equ	0xFE8
  5098                           indf1	equ	0xFE7
  5099                           postdec1	equ	0xFE5
  5100                           fsr1h	equ	0xFE2
  5101                           fsr1l	equ	0xFE1
  5102                           indf2	equ	0xFDF
  5103                           fsr2h	equ	0xFDA
  5104                           fsr2l	equ	0xFD9
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _activity_submenu_pin *****************
  5108 ;; Defined at:
  5109 ;;		line 319 in file "main.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    7
  5130 ;; This function calls:
  5131 ;;		_lcd_init
  5132 ;;		_lcd_write
  5133 ;;		_submenu_selector_0
  5134 ;; This function is called by:
  5135 ;;		_button_B_menu
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text33
  5140  00EF4E                     __ptext33:
  5141                           	opt stack 0
  5142  00EF4E                     _activity_submenu_pin:
  5143                           	opt stack 20
  5144                           
  5145                           ;main.c: 321: activity = 5;
  5146                           
  5147                           ;incstack = 0
  5148  00EF4E  0E00               	movlw	0
  5149  00EF50  6E04               	movwf	_activity+1,c
  5150  00EF52  0E05               	movlw	5
  5151  00EF54  6E03               	movwf	_activity,c
  5152                           
  5153                           ;main.c: 322: lcd_init();
  5154  00EF56  EC93  F079         	call	_lcd_init	;wreg free
  5155                           
  5156                           ;main.c: 323: lcd_write(1,1,"Pin");
  5157  00EF5A  0E00               	movlw	0
  5158  00EF5C  6E35               	movwf	lcd_write@column+1,c
  5159  00EF5E  0E01               	movlw	1
  5160  00EF60  6E34               	movwf	lcd_write@column,c
  5161  00EF62  0E00               	movlw	0
  5162  00EF64  6E37               	movwf	lcd_write@row+1,c
  5163  00EF66  0E01               	movlw	1
  5164  00EF68  6E36               	movwf	lcd_write@row,c
  5165  00EF6A  0EE7               	movlw	low STR_18
  5166  00EF6C  6E38               	movwf	lcd_write@string,c
  5167  00EF6E  0EFF               	movlw	high STR_18
  5168  00EF70  6E39               	movwf	lcd_write@string+1,c
  5169  00EF72  ECEF  F071         	call	_lcd_write	;wreg free
  5170                           
  5171                           ;main.c: 324: lcd_write(10,1,"Cambiar");
  5172  00EF76  0E00               	movlw	0
  5173  00EF78  6E35               	movwf	lcd_write@column+1,c
  5174  00EF7A  0E0A               	movlw	10
  5175  00EF7C  6E34               	movwf	lcd_write@column,c
  5176  00EF7E  0E00               	movlw	0
  5177  00EF80  6E37               	movwf	lcd_write@row+1,c
  5178  00EF82  0E01               	movlw	1
  5179  00EF84  6E36               	movwf	lcd_write@row,c
  5180  00EF86  0E5D               	movlw	low STR_40
  5181  00EF88  6E38               	movwf	lcd_write@string,c
  5182  00EF8A  0EFF               	movlw	high STR_40
  5183  00EF8C  6E39               	movwf	lcd_write@string+1,c
  5184  00EF8E  ECEF  F071         	call	_lcd_write	;wreg free
  5185                           
  5186                           ;main.c: 325: lcd_write(10,2,"Reset");
  5187  00EF92  0E00               	movlw	0
  5188  00EF94  6E35               	movwf	lcd_write@column+1,c
  5189  00EF96  0E0A               	movlw	10
  5190  00EF98  6E34               	movwf	lcd_write@column,c
  5191  00EF9A  0E00               	movlw	0
  5192  00EF9C  6E37               	movwf	lcd_write@row+1,c
  5193  00EF9E  0E02               	movlw	2
  5194  00EFA0  6E36               	movwf	lcd_write@row,c
  5195  00EFA2  0EBF               	movlw	low STR_41
  5196  00EFA4  6E38               	movwf	lcd_write@string,c
  5197  00EFA6  0EFF               	movlw	high STR_41
  5198  00EFA8  6E39               	movwf	lcd_write@string+1,c
  5199  00EFAA  ECEF  F071         	call	_lcd_write	;wreg free
  5200                           
  5201                           ;main.c: 326: submenu_selector_0();
  5202  00EFAE  EC3A  F074         	call	_submenu_selector_0	;wreg free
  5203  00EFB2  0012               	return		;funcret
  5204  00EFB4                     __end_of_activity_submenu_pin:
  5205                           	opt stack 0
  5206                           tblptru	equ	0xFF8
  5207                           tblptrh	equ	0xFF7
  5208                           tblptrl	equ	0xFF6
  5209                           tablat	equ	0xFF5
  5210                           prodl	equ	0xFF3
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           indf1	equ	0xFE7
  5215                           postdec1	equ	0xFE5
  5216                           fsr1h	equ	0xFE2
  5217                           fsr1l	equ	0xFE1
  5218                           indf2	equ	0xFDF
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function _activity_submenu_date_and_time *****************
  5224 ;; Defined at:
  5225 ;;		line 223 in file "main.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;		None               void
  5232 ;; Registers used:
  5233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    7
  5246 ;; This function calls:
  5247 ;;		_lcd_init
  5248 ;;		_lcd_write
  5249 ;;		_submenu_selector_0
  5250 ;; This function is called by:
  5251 ;;		_button_B_menu
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text34
  5256  00EEE8                     __ptext34:
  5257                           	opt stack 0
  5258  00EEE8                     _activity_submenu_date_and_time:
  5259                           	opt stack 20
  5260                           
  5261                           ;main.c: 225: activity = 3;
  5262                           
  5263                           ;incstack = 0
  5264  00EEE8  0E00               	movlw	0
  5265  00EEEA  6E04               	movwf	_activity+1,c
  5266  00EEEC  0E03               	movlw	3
  5267  00EEEE  6E03               	movwf	_activity,c
  5268                           
  5269                           ;main.c: 226: lcd_init();
  5270  00EEF0  EC93  F079         	call	_lcd_init	;wreg free
  5271                           
  5272                           ;main.c: 227: lcd_write(1,1,"Reloj");
  5273  00EEF4  0E00               	movlw	0
  5274  00EEF6  6E35               	movwf	lcd_write@column+1,c
  5275  00EEF8  0E01               	movlw	1
  5276  00EEFA  6E34               	movwf	lcd_write@column,c
  5277  00EEFC  0E00               	movlw	0
  5278  00EEFE  6E37               	movwf	lcd_write@row+1,c
  5279  00EF00  0E01               	movlw	1
  5280  00EF02  6E36               	movwf	lcd_write@row,c
  5281  00EF04  0EB9               	movlw	low STR_17
  5282  00EF06  6E38               	movwf	lcd_write@string,c
  5283  00EF08  0EFF               	movlw	high STR_17
  5284  00EF0A  6E39               	movwf	lcd_write@string+1,c
  5285  00EF0C  ECEF  F071         	call	_lcd_write	;wreg free
  5286                           
  5287                           ;main.c: 228: lcd_write(10,1,"Fecha");
  5288  00EF10  0E00               	movlw	0
  5289  00EF12  6E35               	movwf	lcd_write@column+1,c
  5290  00EF14  0E0A               	movlw	10
  5291  00EF16  6E34               	movwf	lcd_write@column,c
  5292  00EF18  0E00               	movlw	0
  5293  00EF1A  6E37               	movwf	lcd_write@row+1,c
  5294  00EF1C  0E01               	movlw	1
  5295  00EF1E  6E36               	movwf	lcd_write@row,c
  5296  00EF20  0EB3               	movlw	low STR_21
  5297  00EF22  6E38               	movwf	lcd_write@string,c
  5298  00EF24  0EFF               	movlw	high STR_21
  5299  00EF26  6E39               	movwf	lcd_write@string+1,c
  5300  00EF28  ECEF  F071         	call	_lcd_write	;wreg free
  5301                           
  5302                           ;main.c: 229: lcd_write(10,2,"Hora");
  5303  00EF2C  0E00               	movlw	0
  5304  00EF2E  6E35               	movwf	lcd_write@column+1,c
  5305  00EF30  0E0A               	movlw	10
  5306  00EF32  6E34               	movwf	lcd_write@column,c
  5307  00EF34  0E00               	movlw	0
  5308  00EF36  6E37               	movwf	lcd_write@row+1,c
  5309  00EF38  0E02               	movlw	2
  5310  00EF3A  6E36               	movwf	lcd_write@row,c
  5311  00EF3C  0ECA               	movlw	low STR_22
  5312  00EF3E  6E38               	movwf	lcd_write@string,c
  5313  00EF40  0EFF               	movlw	high STR_22
  5314  00EF42  6E39               	movwf	lcd_write@string+1,c
  5315  00EF44  ECEF  F071         	call	_lcd_write	;wreg free
  5316                           
  5317                           ;main.c: 230: submenu_selector_0();
  5318  00EF48  EC3A  F074         	call	_submenu_selector_0	;wreg free
  5319  00EF4C  0012               	return		;funcret
  5320  00EF4E                     __end_of_activity_submenu_date_and_time:
  5321                           	opt stack 0
  5322                           tblptru	equ	0xFF8
  5323                           tblptrh	equ	0xFF7
  5324                           tblptrl	equ	0xFF6
  5325                           tablat	equ	0xFF5
  5326                           prodl	equ	0xFF3
  5327                           intcon	equ	0xFF2
  5328                           postinc0	equ	0xFEE
  5329                           wreg	equ	0xFE8
  5330                           indf1	equ	0xFE7
  5331                           postdec1	equ	0xFE5
  5332                           fsr1h	equ	0xFE2
  5333                           fsr1l	equ	0xFE1
  5334                           indf2	equ	0xFDF
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8
  5338                           
  5339 ;; *************** function _activity_submenu_activation *****************
  5340 ;; Defined at:
  5341 ;;		line 271 in file "main.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;		None               void
  5348 ;; Registers used:
  5349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;Total ram usage:        0 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    7
  5362 ;; This function calls:
  5363 ;;		_lcd_init
  5364 ;;		_lcd_write
  5365 ;;		_submenu_selector_0
  5366 ;; This function is called by:
  5367 ;;		_button_B_menu
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text35
  5372  00EE82                     __ptext35:
  5373                           	opt stack 0
  5374  00EE82                     _activity_submenu_activation:
  5375                           	opt stack 20
  5376                           
  5377                           ;main.c: 273: activity = 4;
  5378                           
  5379                           ;incstack = 0
  5380  00EE82  0E00               	movlw	0
  5381  00EE84  6E04               	movwf	_activity+1,c
  5382  00EE86  0E04               	movlw	4
  5383  00EE88  6E03               	movwf	_activity,c
  5384                           
  5385                           ;main.c: 274: lcd_init();
  5386  00EE8A  EC93  F079         	call	_lcd_init	;wreg free
  5387                           
  5388                           ;main.c: 275: lcd_write(1,1,"Activar");
  5389  00EE8E  0E00               	movlw	0
  5390  00EE90  6E35               	movwf	lcd_write@column+1,c
  5391  00EE92  0E01               	movlw	1
  5392  00EE94  6E34               	movwf	lcd_write@column,c
  5393  00EE96  0E00               	movlw	0
  5394  00EE98  6E37               	movwf	lcd_write@row+1,c
  5395  00EE9A  0E01               	movlw	1
  5396  00EE9C  6E36               	movwf	lcd_write@row,c
  5397  00EE9E  0E65               	movlw	low STR_16
  5398  00EEA0  6E38               	movwf	lcd_write@string,c
  5399  00EEA2  0EFF               	movlw	high STR_16
  5400  00EEA4  6E39               	movwf	lcd_write@string+1,c
  5401  00EEA6  ECEF  F071         	call	_lcd_write	;wreg free
  5402                           
  5403                           ;main.c: 276: lcd_write(10,1,"Si");
  5404  00EEAA  0E00               	movlw	0
  5405  00EEAC  6E35               	movwf	lcd_write@column+1,c
  5406  00EEAE  0E0A               	movlw	10
  5407  00EEB0  6E34               	movwf	lcd_write@column,c
  5408  00EEB2  0E00               	movlw	0
  5409  00EEB4  6E37               	movwf	lcd_write@row+1,c
  5410  00EEB6  0E01               	movlw	1
  5411  00EEB8  6E36               	movwf	lcd_write@row,c
  5412  00EEBA  0EEB               	movlw	low STR_28
  5413  00EEBC  6E38               	movwf	lcd_write@string,c
  5414  00EEBE  0EFF               	movlw	high STR_28
  5415  00EEC0  6E39               	movwf	lcd_write@string+1,c
  5416  00EEC2  ECEF  F071         	call	_lcd_write	;wreg free
  5417                           
  5418                           ;main.c: 277: lcd_write(10,2,"No");
  5419  00EEC6  0E00               	movlw	0
  5420  00EEC8  6E35               	movwf	lcd_write@column+1,c
  5421  00EECA  0E0A               	movlw	10
  5422  00EECC  6E34               	movwf	lcd_write@column,c
  5423  00EECE  0E00               	movlw	0
  5424  00EED0  6E37               	movwf	lcd_write@row+1,c
  5425  00EED2  0E02               	movlw	2
  5426  00EED4  6E36               	movwf	lcd_write@row,c
  5427  00EED6  0EEE               	movlw	low STR_29
  5428  00EED8  6E38               	movwf	lcd_write@string,c
  5429  00EEDA  0EFF               	movlw	high STR_29
  5430  00EEDC  6E39               	movwf	lcd_write@string+1,c
  5431  00EEDE  ECEF  F071         	call	_lcd_write	;wreg free
  5432                           
  5433                           ;main.c: 278: submenu_selector_0();
  5434  00EEE2  EC3A  F074         	call	_submenu_selector_0	;wreg free
  5435  00EEE6  0012               	return		;funcret
  5436  00EEE8                     __end_of_activity_submenu_activation:
  5437                           	opt stack 0
  5438                           tblptru	equ	0xFF8
  5439                           tblptrh	equ	0xFF7
  5440                           tblptrl	equ	0xFF6
  5441                           tablat	equ	0xFF5
  5442                           prodl	equ	0xFF3
  5443                           intcon	equ	0xFF2
  5444                           postinc0	equ	0xFEE
  5445                           wreg	equ	0xFE8
  5446                           indf1	equ	0xFE7
  5447                           postdec1	equ	0xFE5
  5448                           fsr1h	equ	0xFE2
  5449                           fsr1l	equ	0xFE1
  5450                           indf2	equ	0xFDF
  5451                           fsr2h	equ	0xFDA
  5452                           fsr2l	equ	0xFD9
  5453                           status	equ	0xFD8
  5454                           
  5455 ;; *************** function _button_A *****************
  5456 ;; Defined at:
  5457 ;;		line 452 in file "main.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;		None               void
  5464 ;; Registers used:
  5465 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5475 ;;Total ram usage:        2 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    8
  5478 ;; This function calls:
  5479 ;;		_activity_pin
  5480 ;;		_menu_selector
  5481 ;;		_reset_home_callback
  5482 ;;		_submenu_selector
  5483 ;; This function is called by:
  5484 ;;		_keyboard_control
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text36
  5489  00E72C                     __ptext36:
  5490                           	opt stack 0
  5491  00E72C                     _button_A:
  5492                           	opt stack 21
  5493                           
  5494                           ;main.c: 454: reset_home_callback();
  5495                           
  5496                           ;incstack = 0
  5497  00E72C  ECB3  F071         	call	_reset_home_callback	;wreg free
  5498                           
  5499                           ;main.c: 456: switch(activity){
  5500  00E730  D009               	goto	l3739
  5501  00E732                     l3731:
  5502                           
  5503                           ;main.c: 459: activity_pin();
  5504  00E732  EC9F  F075         	call	_activity_pin	;wreg free
  5505                           
  5506                           ;main.c: 463: break;
  5507                           
  5508                           ;main.c: 462: case 1:
  5509                           
  5510                           ;main.c: 460: break;
  5511  00E736  0012               	return	
  5512  00E738                     l3733:
  5513                           
  5514                           ;main.c: 466: menu_selector();
  5515  00E738  ECC1  F074         	call	_menu_selector	;wreg free
  5516                           
  5517                           ;main.c: 467: break;
  5518  00E73C  0012               	return	
  5519  00E73E                     l3735:
  5520                           
  5521                           ;main.c: 470: submenu_selector();
  5522  00E73E  ECC4  F072         	call	_submenu_selector	;wreg free
  5523                           
  5524                           ;main.c: 472: }
  5525                           
  5526                           ;main.c: 471: break;
  5527  00E742  0012               	return	
  5528  00E744                     l3739:
  5529  00E744  C003  F03C         	movff	_activity,??_button_A
  5530  00E748  C004  F03D         	movff	_activity+1,??_button_A+1
  5531                           
  5532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5533                           ; Switch size 1, requested type "space"
  5534                           ; Number of cases is 1, Range of values is 0 to 0
  5535                           ; switch strategies available:
  5536                           ; Name         Instructions Cycles
  5537                           ; simple_byte            4     3 (average)
  5538                           ;	Chosen strategy is simple_byte
  5539  00E74C  503D               	movf	??_button_A+1,w,c
  5540  00E74E  0A00               	xorlw	0	; case 0
  5541  00E750  A4D8               	btfss	status,2,c
  5542  00E752  D7F5               	goto	l3735
  5543                           
  5544                           ; Switch size 1, requested type "space"
  5545                           ; Number of cases is 3, Range of values is 0 to 2
  5546                           ; switch strategies available:
  5547                           ; Name         Instructions Cycles
  5548                           ; simple_byte           10     6 (average)
  5549                           ;	Chosen strategy is simple_byte
  5550  00E754  503C               	movf	??_button_A,w,c
  5551  00E756  0A00               	xorlw	0	; case 0
  5552  00E758  B4D8               	btfsc	status,2,c
  5553  00E75A  D7EB               	goto	l3731
  5554  00E75C  0A01               	xorlw	1	; case 1
  5555  00E75E  B4D8               	btfsc	status,2,c
  5556  00E760  0012               	return	
  5557  00E762  0A03               	xorlw	3	; case 2
  5558  00E764  B4D8               	btfsc	status,2,c
  5559  00E766  D7E8               	goto	l3733
  5560  00E768  D7EA               	goto	l3735
  5561  00E76A  0012               	return		;funcret
  5562  00E76C                     __end_of_button_A:
  5563                           	opt stack 0
  5564                           tblptru	equ	0xFF8
  5565                           tblptrh	equ	0xFF7
  5566                           tblptrl	equ	0xFF6
  5567                           tablat	equ	0xFF5
  5568                           prodl	equ	0xFF3
  5569                           intcon	equ	0xFF2
  5570                           postinc0	equ	0xFEE
  5571                           wreg	equ	0xFE8
  5572                           indf1	equ	0xFE7
  5573                           postdec1	equ	0xFE5
  5574                           fsr1h	equ	0xFE2
  5575                           fsr1l	equ	0xFE1
  5576                           indf2	equ	0xFDF
  5577                           fsr2h	equ	0xFDA
  5578                           fsr2l	equ	0xFD9
  5579                           status	equ	0xFD8
  5580                           
  5581 ;; *************** function _submenu_selector *****************
  5582 ;; Defined at:
  5583 ;;		line 183 in file "main.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;		None               void
  5590 ;; Registers used:
  5591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;Total ram usage:        2 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    7
  5604 ;; This function calls:
  5605 ;;		_submenu_selector_0
  5606 ;;		_submenu_selector_1
  5607 ;; This function is called by:
  5608 ;;		_button_A
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text37
  5613  00E588                     __ptext37:
  5614                           	opt stack 0
  5615  00E588                     _submenu_selector:
  5616                           	opt stack 21
  5617                           
  5618                           ;main.c: 185: switch(submenu_selected){
  5619                           
  5620                           ;incstack = 0
  5621  00E588  D006               	goto	l3327
  5622  00E58A                     l3321:
  5623                           
  5624                           ;main.c: 188: submenu_selector_1();
  5625  00E58A  EC5B  F074         	call	_submenu_selector_1	;wreg free
  5626                           
  5627                           ;main.c: 189: break;
  5628  00E58E  0012               	return	
  5629  00E590                     l3323:
  5630                           
  5631                           ;main.c: 192: submenu_selector_0();
  5632  00E590  EC3A  F074         	call	_submenu_selector_0	;wreg free
  5633                           
  5634                           ;main.c: 194: }
  5635                           
  5636                           ;main.c: 193: break;
  5637  00E594  0012               	return	
  5638  00E596                     l3327:
  5639  00E596  C01F  F03A         	movff	_submenu_selected,??_submenu_selector
  5640  00E59A  C020  F03B         	movff	_submenu_selected+1,??_submenu_selector+1
  5641                           
  5642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5643                           ; Switch size 1, requested type "space"
  5644                           ; Number of cases is 1, Range of values is 0 to 0
  5645                           ; switch strategies available:
  5646                           ; Name         Instructions Cycles
  5647                           ; simple_byte            4     3 (average)
  5648                           ;	Chosen strategy is simple_byte
  5649  00E59E  503B               	movf	??_submenu_selector+1,w,c
  5650  00E5A0  0A00               	xorlw	0	; case 0
  5651  00E5A2  A4D8               	btfss	status,2,c
  5652  00E5A4  0012               	return	
  5653                           
  5654                           ; Switch size 1, requested type "space"
  5655                           ; Number of cases is 2, Range of values is 0 to 1
  5656                           ; switch strategies available:
  5657                           ; Name         Instructions Cycles
  5658                           ; simple_byte            7     4 (average)
  5659                           ;	Chosen strategy is simple_byte
  5660  00E5A6  503A               	movf	??_submenu_selector,w,c
  5661  00E5A8  0A00               	xorlw	0	; case 0
  5662  00E5AA  B4D8               	btfsc	status,2,c
  5663  00E5AC  D7EE               	goto	l3321
  5664  00E5AE  0A01               	xorlw	1	; case 1
  5665  00E5B0  A4D8               	btfss	status,2,c
  5666  00E5B2  0012               	return	
  5667  00E5B4  D7ED               	goto	l3323
  5668  00E5B6  0012               	return		;funcret
  5669  00E5B8                     __end_of_submenu_selector:
  5670                           	opt stack 0
  5671                           tblptru	equ	0xFF8
  5672                           tblptrh	equ	0xFF7
  5673                           tblptrl	equ	0xFF6
  5674                           tablat	equ	0xFF5
  5675                           prodl	equ	0xFF3
  5676                           intcon	equ	0xFF2
  5677                           postinc0	equ	0xFEE
  5678                           wreg	equ	0xFE8
  5679                           indf1	equ	0xFE7
  5680                           postdec1	equ	0xFE5
  5681                           fsr1h	equ	0xFE2
  5682                           fsr1l	equ	0xFE1
  5683                           indf2	equ	0xFDF
  5684                           fsr2h	equ	0xFDA
  5685                           fsr2l	equ	0xFD9
  5686                           status	equ	0xFD8
  5687                           
  5688 ;; *************** function _submenu_selector_1 *****************
  5689 ;; Defined at:
  5690 ;;		line 175 in file "main.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;		None
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;		None
  5695 ;; Return value:  Size  Location     Type
  5696 ;;		None               void
  5697 ;; Registers used:
  5698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5708 ;;Total ram usage:        0 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    6
  5711 ;; This function calls:
  5712 ;;		_lcd_write
  5713 ;; This function is called by:
  5714 ;;		_submenu_selector
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text38
  5719  00E8B6                     __ptext38:
  5720                           	opt stack 0
  5721  00E8B6                     _submenu_selector_1:
  5722                           	opt stack 21
  5723                           
  5724                           ;main.c: 177: lcd_write(9,2,">");
  5725                           
  5726                           ;incstack = 0
  5727  00E8B6  0E00               	movlw	0
  5728  00E8B8  6E35               	movwf	lcd_write@column+1,c
  5729  00E8BA  0E09               	movlw	9
  5730  00E8BC  6E34               	movwf	lcd_write@column,c
  5731  00E8BE  0E00               	movlw	0
  5732  00E8C0  6E37               	movwf	lcd_write@row+1,c
  5733  00E8C2  0E02               	movlw	2
  5734  00E8C4  6E36               	movwf	lcd_write@row,c
  5735  00E8C6  0EF5               	movlw	low STR_2
  5736  00E8C8  6E38               	movwf	lcd_write@string,c
  5737  00E8CA  0EFF               	movlw	high STR_2
  5738  00E8CC  6E39               	movwf	lcd_write@string+1,c
  5739  00E8CE  ECEF  F071         	call	_lcd_write	;wreg free
  5740                           
  5741                           ;main.c: 178: submenu_selected = 1;
  5742  00E8D2  0E00               	movlw	0
  5743  00E8D4  6E20               	movwf	_submenu_selected+1,c
  5744  00E8D6  0E01               	movlw	1
  5745  00E8D8  6E1F               	movwf	_submenu_selected,c
  5746                           
  5747                           ;main.c: 179: lcd_write(9,1," ");
  5748  00E8DA  0E00               	movlw	0
  5749  00E8DC  6E35               	movwf	lcd_write@column+1,c
  5750  00E8DE  0E09               	movlw	9
  5751  00E8E0  6E34               	movwf	lcd_write@column,c
  5752  00E8E2  0E00               	movlw	0
  5753  00E8E4  6E37               	movwf	lcd_write@row+1,c
  5754  00E8E6  0E01               	movlw	1
  5755  00E8E8  6E36               	movwf	lcd_write@row,c
  5756  00E8EA  0EF1               	movlw	low STR_3
  5757  00E8EC  6E38               	movwf	lcd_write@string,c
  5758  00E8EE  0EFF               	movlw	high STR_3
  5759  00E8F0  6E39               	movwf	lcd_write@string+1,c
  5760  00E8F2  ECEF  F071         	call	_lcd_write	;wreg free
  5761  00E8F6  0012               	return		;funcret
  5762  00E8F8                     __end_of_submenu_selector_1:
  5763                           	opt stack 0
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodl	equ	0xFF3
  5769                           intcon	equ	0xFF2
  5770                           postinc0	equ	0xFEE
  5771                           wreg	equ	0xFE8
  5772                           indf1	equ	0xFE7
  5773                           postdec1	equ	0xFE5
  5774                           fsr1h	equ	0xFE2
  5775                           fsr1l	equ	0xFE1
  5776                           indf2	equ	0xFDF
  5777                           fsr2h	equ	0xFDA
  5778                           fsr2l	equ	0xFD9
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function _submenu_selector_0 *****************
  5782 ;; Defined at:
  5783 ;;		line 167 in file "main.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;		None               void
  5790 ;; Registers used:
  5791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    6
  5804 ;; This function calls:
  5805 ;;		_lcd_write
  5806 ;; This function is called by:
  5807 ;;		_submenu_selector
  5808 ;;		_activity_submenu_date_and_time
  5809 ;;		_activity_submenu_activation
  5810 ;;		_activity_submenu_siren
  5811 ;;		_activity_submenu_siren_volume
  5812 ;;		_activity_submenu_siren_tone
  5813 ;;		_activity_submenu_pin
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text39
  5818  00E874                     __ptext39:
  5819                           	opt stack 0
  5820  00E874                     _submenu_selector_0:
  5821                           	opt stack 20
  5822                           
  5823                           ;main.c: 169: lcd_write(9,1,">");
  5824                           
  5825                           ;incstack = 0
  5826  00E874  0E00               	movlw	0
  5827  00E876  6E35               	movwf	lcd_write@column+1,c
  5828  00E878  0E09               	movlw	9
  5829  00E87A  6E34               	movwf	lcd_write@column,c
  5830  00E87C  0E00               	movlw	0
  5831  00E87E  6E37               	movwf	lcd_write@row+1,c
  5832  00E880  0E01               	movlw	1
  5833  00E882  6E36               	movwf	lcd_write@row,c
  5834  00E884  0EF5               	movlw	low STR_2
  5835  00E886  6E38               	movwf	lcd_write@string,c
  5836  00E888  0EFF               	movlw	high STR_2
  5837  00E88A  6E39               	movwf	lcd_write@string+1,c
  5838  00E88C  ECEF  F071         	call	_lcd_write	;wreg free
  5839                           
  5840                           ;main.c: 170: submenu_selected = 0;
  5841  00E890  0E00               	movlw	0
  5842  00E892  6E20               	movwf	_submenu_selected+1,c
  5843  00E894  0E00               	movlw	0
  5844  00E896  6E1F               	movwf	_submenu_selected,c
  5845                           
  5846                           ;main.c: 171: lcd_write(9,2," ");
  5847  00E898  0E00               	movlw	0
  5848  00E89A  6E35               	movwf	lcd_write@column+1,c
  5849  00E89C  0E09               	movlw	9
  5850  00E89E  6E34               	movwf	lcd_write@column,c
  5851  00E8A0  0E00               	movlw	0
  5852  00E8A2  6E37               	movwf	lcd_write@row+1,c
  5853  00E8A4  0E02               	movlw	2
  5854  00E8A6  6E36               	movwf	lcd_write@row,c
  5855  00E8A8  0EF1               	movlw	low STR_3
  5856  00E8AA  6E38               	movwf	lcd_write@string,c
  5857  00E8AC  0EFF               	movlw	high STR_3
  5858  00E8AE  6E39               	movwf	lcd_write@string+1,c
  5859  00E8B0  ECEF  F071         	call	_lcd_write	;wreg free
  5860  00E8B4  0012               	return		;funcret
  5861  00E8B6                     __end_of_submenu_selector_0:
  5862                           	opt stack 0
  5863                           tblptru	equ	0xFF8
  5864                           tblptrh	equ	0xFF7
  5865                           tblptrl	equ	0xFF6
  5866                           tablat	equ	0xFF5
  5867                           prodl	equ	0xFF3
  5868                           intcon	equ	0xFF2
  5869                           postinc0	equ	0xFEE
  5870                           wreg	equ	0xFE8
  5871                           indf1	equ	0xFE7
  5872                           postdec1	equ	0xFE5
  5873                           fsr1h	equ	0xFE2
  5874                           fsr1l	equ	0xFE1
  5875                           indf2	equ	0xFDF
  5876                           fsr2h	equ	0xFDA
  5877                           fsr2l	equ	0xFD9
  5878                           status	equ	0xFD8
  5879                           
  5880 ;; *************** function _menu_selector *****************
  5881 ;; Defined at:
  5882 ;;		line 141 in file "main.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;		None
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;		None               void
  5889 ;; Registers used:
  5890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5900 ;;Total ram usage:        2 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    7
  5903 ;; This function calls:
  5904 ;;		_menu_selector_0
  5905 ;;		_menu_selector_1
  5906 ;;		_menu_selector_2
  5907 ;;		_menu_selector_3
  5908 ;; This function is called by:
  5909 ;;		_button_A
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text40
  5914  00E982                     __ptext40:
  5915                           	opt stack 0
  5916  00E982                     _menu_selector:
  5917                           	opt stack 21
  5918                           
  5919                           ;main.c: 143: switch(menu_selected){
  5920                           
  5921                           ;incstack = 0
  5922  00E982  D00C               	goto	l3313
  5923  00E984                     l3303:
  5924                           
  5925                           ;main.c: 146: menu_selector_1();
  5926  00E984  ECD7  F073         	call	_menu_selector_1	;wreg free
  5927                           
  5928                           ;main.c: 147: break;
  5929  00E988  0012               	return	
  5930  00E98A                     l3305:
  5931                           
  5932                           ;main.c: 150: menu_selector_2();
  5933  00E98A  ECF8  F073         	call	_menu_selector_2	;wreg free
  5934                           
  5935                           ;main.c: 151: break;
  5936  00E98E  0012               	return	
  5937  00E990                     l3307:
  5938                           
  5939                           ;main.c: 154: menu_selector_3();
  5940  00E990  EC19  F074         	call	_menu_selector_3	;wreg free
  5941                           
  5942                           ;main.c: 155: break;
  5943  00E994  0012               	return	
  5944  00E996                     l3309:
  5945                           
  5946                           ;main.c: 158: menu_selector_0();
  5947  00E996  ECB6  F073         	call	_menu_selector_0	;wreg free
  5948                           
  5949                           ;main.c: 161: }
  5950                           
  5951                           ;main.c: 159: break;
  5952  00E99A  0012               	return	
  5953  00E99C                     l3313:
  5954  00E99C  C017  F03A         	movff	_menu_selected,??_menu_selector
  5955  00E9A0  C018  F03B         	movff	_menu_selected+1,??_menu_selector+1
  5956                           
  5957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5958                           ; Switch size 1, requested type "space"
  5959                           ; Number of cases is 1, Range of values is 0 to 0
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte            4     3 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  00E9A4  503B               	movf	??_menu_selector+1,w,c
  5965  00E9A6  0A00               	xorlw	0	; case 0
  5966  00E9A8  A4D8               	btfss	status,2,c
  5967  00E9AA  0012               	return	
  5968                           
  5969                           ; Switch size 1, requested type "space"
  5970                           ; Number of cases is 4, Range of values is 0 to 3
  5971                           ; switch strategies available:
  5972                           ; Name         Instructions Cycles
  5973                           ; simple_byte           13     7 (average)
  5974                           ;	Chosen strategy is simple_byte
  5975  00E9AC  503A               	movf	??_menu_selector,w,c
  5976  00E9AE  0A00               	xorlw	0	; case 0
  5977  00E9B0  B4D8               	btfsc	status,2,c
  5978  00E9B2  D7E8               	goto	l3303
  5979  00E9B4  0A01               	xorlw	1	; case 1
  5980  00E9B6  B4D8               	btfsc	status,2,c
  5981  00E9B8  D7E8               	goto	l3305
  5982  00E9BA  0A03               	xorlw	3	; case 2
  5983  00E9BC  B4D8               	btfsc	status,2,c
  5984  00E9BE  D7E8               	goto	l3307
  5985  00E9C0  0A01               	xorlw	1	; case 3
  5986  00E9C2  A4D8               	btfss	status,2,c
  5987  00E9C4  0012               	return	
  5988  00E9C6  D7E7               	goto	l3309
  5989  00E9C8  0012               	return		;funcret
  5990  00E9CA                     __end_of_menu_selector:
  5991                           	opt stack 0
  5992                           tblptru	equ	0xFF8
  5993                           tblptrh	equ	0xFF7
  5994                           tblptrl	equ	0xFF6
  5995                           tablat	equ	0xFF5
  5996                           prodl	equ	0xFF3
  5997                           intcon	equ	0xFF2
  5998                           postinc0	equ	0xFEE
  5999                           wreg	equ	0xFE8
  6000                           indf1	equ	0xFE7
  6001                           postdec1	equ	0xFE5
  6002                           fsr1h	equ	0xFE2
  6003                           fsr1l	equ	0xFE1
  6004                           indf2	equ	0xFDF
  6005                           fsr2h	equ	0xFDA
  6006                           fsr2l	equ	0xFD9
  6007                           status	equ	0xFD8
  6008                           
  6009 ;; *************** function _menu_selector_3 *****************
  6010 ;; Defined at:
  6011 ;;		line 133 in file "main.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;		None
  6016 ;; Return value:  Size  Location     Type
  6017 ;;		None               void
  6018 ;; Registers used:
  6019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6029 ;;Total ram usage:        0 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:    6
  6032 ;; This function calls:
  6033 ;;		_lcd_write
  6034 ;; This function is called by:
  6035 ;;		_menu_selector
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text41
  6040  00E832                     __ptext41:
  6041                           	opt stack 0
  6042  00E832                     _menu_selector_3:
  6043                           	opt stack 21
  6044                           
  6045                           ;main.c: 135: lcd_write(9,2,">");
  6046                           
  6047                           ;incstack = 0
  6048  00E832  0E00               	movlw	0
  6049  00E834  6E35               	movwf	lcd_write@column+1,c
  6050  00E836  0E09               	movlw	9
  6051  00E838  6E34               	movwf	lcd_write@column,c
  6052  00E83A  0E00               	movlw	0
  6053  00E83C  6E37               	movwf	lcd_write@row+1,c
  6054  00E83E  0E02               	movlw	2
  6055  00E840  6E36               	movwf	lcd_write@row,c
  6056  00E842  0EF5               	movlw	low STR_2
  6057  00E844  6E38               	movwf	lcd_write@string,c
  6058  00E846  0EFF               	movlw	high STR_2
  6059  00E848  6E39               	movwf	lcd_write@string+1,c
  6060  00E84A  ECEF  F071         	call	_lcd_write	;wreg free
  6061                           
  6062                           ;main.c: 136: menu_selected = 3;
  6063  00E84E  0E00               	movlw	0
  6064  00E850  6E18               	movwf	_menu_selected+1,c
  6065  00E852  0E03               	movlw	3
  6066  00E854  6E17               	movwf	_menu_selected,c
  6067                           
  6068                           ;main.c: 137: lcd_write(9,1," ");
  6069  00E856  0E00               	movlw	0
  6070  00E858  6E35               	movwf	lcd_write@column+1,c
  6071  00E85A  0E09               	movlw	9
  6072  00E85C  6E34               	movwf	lcd_write@column,c
  6073  00E85E  0E00               	movlw	0
  6074  00E860  6E37               	movwf	lcd_write@row+1,c
  6075  00E862  0E01               	movlw	1
  6076  00E864  6E36               	movwf	lcd_write@row,c
  6077  00E866  0EF1               	movlw	low STR_3
  6078  00E868  6E38               	movwf	lcd_write@string,c
  6079  00E86A  0EFF               	movlw	high STR_3
  6080  00E86C  6E39               	movwf	lcd_write@string+1,c
  6081  00E86E  ECEF  F071         	call	_lcd_write	;wreg free
  6082  00E872  0012               	return		;funcret
  6083  00E874                     __end_of_menu_selector_3:
  6084                           	opt stack 0
  6085                           tblptru	equ	0xFF8
  6086                           tblptrh	equ	0xFF7
  6087                           tblptrl	equ	0xFF6
  6088                           tablat	equ	0xFF5
  6089                           prodl	equ	0xFF3
  6090                           intcon	equ	0xFF2
  6091                           postinc0	equ	0xFEE
  6092                           wreg	equ	0xFE8
  6093                           indf1	equ	0xFE7
  6094                           postdec1	equ	0xFE5
  6095                           fsr1h	equ	0xFE2
  6096                           fsr1l	equ	0xFE1
  6097                           indf2	equ	0xFDF
  6098                           fsr2h	equ	0xFDA
  6099                           fsr2l	equ	0xFD9
  6100                           status	equ	0xFD8
  6101                           
  6102 ;; *************** function _menu_selector_2 *****************
  6103 ;; Defined at:
  6104 ;;		line 125 in file "main.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;		None               void
  6111 ;; Registers used:
  6112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    6
  6125 ;; This function calls:
  6126 ;;		_lcd_write
  6127 ;; This function is called by:
  6128 ;;		_menu_selector
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text42
  6133  00E7F0                     __ptext42:
  6134                           	opt stack 0
  6135  00E7F0                     _menu_selector_2:
  6136                           	opt stack 21
  6137                           
  6138                           ;main.c: 127: lcd_write(9,1,">");
  6139                           
  6140                           ;incstack = 0
  6141  00E7F0  0E00               	movlw	0
  6142  00E7F2  6E35               	movwf	lcd_write@column+1,c
  6143  00E7F4  0E09               	movlw	9
  6144  00E7F6  6E34               	movwf	lcd_write@column,c
  6145  00E7F8  0E00               	movlw	0
  6146  00E7FA  6E37               	movwf	lcd_write@row+1,c
  6147  00E7FC  0E01               	movlw	1
  6148  00E7FE  6E36               	movwf	lcd_write@row,c
  6149  00E800  0EF5               	movlw	low STR_2
  6150  00E802  6E38               	movwf	lcd_write@string,c
  6151  00E804  0EFF               	movlw	high STR_2
  6152  00E806  6E39               	movwf	lcd_write@string+1,c
  6153  00E808  ECEF  F071         	call	_lcd_write	;wreg free
  6154                           
  6155                           ;main.c: 128: menu_selected = 2;
  6156  00E80C  0E00               	movlw	0
  6157  00E80E  6E18               	movwf	_menu_selected+1,c
  6158  00E810  0E02               	movlw	2
  6159  00E812  6E17               	movwf	_menu_selected,c
  6160                           
  6161                           ;main.c: 129: lcd_write(1,2," ");
  6162  00E814  0E00               	movlw	0
  6163  00E816  6E35               	movwf	lcd_write@column+1,c
  6164  00E818  0E01               	movlw	1
  6165  00E81A  6E34               	movwf	lcd_write@column,c
  6166  00E81C  0E00               	movlw	0
  6167  00E81E  6E37               	movwf	lcd_write@row+1,c
  6168  00E820  0E02               	movlw	2
  6169  00E822  6E36               	movwf	lcd_write@row,c
  6170  00E824  0EF1               	movlw	low STR_3
  6171  00E826  6E38               	movwf	lcd_write@string,c
  6172  00E828  0EFF               	movlw	high STR_3
  6173  00E82A  6E39               	movwf	lcd_write@string+1,c
  6174  00E82C  ECEF  F071         	call	_lcd_write	;wreg free
  6175  00E830  0012               	return		;funcret
  6176  00E832                     __end_of_menu_selector_2:
  6177                           	opt stack 0
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodl	equ	0xFF3
  6183                           intcon	equ	0xFF2
  6184                           postinc0	equ	0xFEE
  6185                           wreg	equ	0xFE8
  6186                           indf1	equ	0xFE7
  6187                           postdec1	equ	0xFE5
  6188                           fsr1h	equ	0xFE2
  6189                           fsr1l	equ	0xFE1
  6190                           indf2	equ	0xFDF
  6191                           fsr2h	equ	0xFDA
  6192                           fsr2l	equ	0xFD9
  6193                           status	equ	0xFD8
  6194                           
  6195 ;; *************** function _menu_selector_1 *****************
  6196 ;; Defined at:
  6197 ;;		line 117 in file "main.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;		None
  6202 ;; Return value:  Size  Location     Type
  6203 ;;		None               void
  6204 ;; Registers used:
  6205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6215 ;;Total ram usage:        0 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:    6
  6218 ;; This function calls:
  6219 ;;		_lcd_write
  6220 ;; This function is called by:
  6221 ;;		_menu_selector
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text43
  6226  00E7AE                     __ptext43:
  6227                           	opt stack 0
  6228  00E7AE                     _menu_selector_1:
  6229                           	opt stack 21
  6230                           
  6231                           ;main.c: 119: lcd_write(1,2,">");
  6232                           
  6233                           ;incstack = 0
  6234  00E7AE  0E00               	movlw	0
  6235  00E7B0  6E35               	movwf	lcd_write@column+1,c
  6236  00E7B2  0E01               	movlw	1
  6237  00E7B4  6E34               	movwf	lcd_write@column,c
  6238  00E7B6  0E00               	movlw	0
  6239  00E7B8  6E37               	movwf	lcd_write@row+1,c
  6240  00E7BA  0E02               	movlw	2
  6241  00E7BC  6E36               	movwf	lcd_write@row,c
  6242  00E7BE  0EF5               	movlw	low STR_2
  6243  00E7C0  6E38               	movwf	lcd_write@string,c
  6244  00E7C2  0EFF               	movlw	high STR_2
  6245  00E7C4  6E39               	movwf	lcd_write@string+1,c
  6246  00E7C6  ECEF  F071         	call	_lcd_write	;wreg free
  6247                           
  6248                           ;main.c: 120: menu_selected = 1;
  6249  00E7CA  0E00               	movlw	0
  6250  00E7CC  6E18               	movwf	_menu_selected+1,c
  6251  00E7CE  0E01               	movlw	1
  6252  00E7D0  6E17               	movwf	_menu_selected,c
  6253                           
  6254                           ;main.c: 121: lcd_write(1,1," ");
  6255  00E7D2  0E00               	movlw	0
  6256  00E7D4  6E35               	movwf	lcd_write@column+1,c
  6257  00E7D6  0E01               	movlw	1
  6258  00E7D8  6E34               	movwf	lcd_write@column,c
  6259  00E7DA  0E00               	movlw	0
  6260  00E7DC  6E37               	movwf	lcd_write@row+1,c
  6261  00E7DE  0E01               	movlw	1
  6262  00E7E0  6E36               	movwf	lcd_write@row,c
  6263  00E7E2  0EF1               	movlw	low STR_3
  6264  00E7E4  6E38               	movwf	lcd_write@string,c
  6265  00E7E6  0EFF               	movlw	high STR_3
  6266  00E7E8  6E39               	movwf	lcd_write@string+1,c
  6267  00E7EA  ECEF  F071         	call	_lcd_write	;wreg free
  6268  00E7EE  0012               	return		;funcret
  6269  00E7F0                     __end_of_menu_selector_1:
  6270                           	opt stack 0
  6271                           tblptru	equ	0xFF8
  6272                           tblptrh	equ	0xFF7
  6273                           tblptrl	equ	0xFF6
  6274                           tablat	equ	0xFF5
  6275                           prodl	equ	0xFF3
  6276                           intcon	equ	0xFF2
  6277                           postinc0	equ	0xFEE
  6278                           wreg	equ	0xFE8
  6279                           indf1	equ	0xFE7
  6280                           postdec1	equ	0xFE5
  6281                           fsr1h	equ	0xFE2
  6282                           fsr1l	equ	0xFE1
  6283                           indf2	equ	0xFDF
  6284                           fsr2h	equ	0xFDA
  6285                           fsr2l	equ	0xFD9
  6286                           status	equ	0xFD8
  6287                           
  6288 ;; *************** function _menu_selector_0 *****************
  6289 ;; Defined at:
  6290 ;;		line 109 in file "main.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;		None               void
  6297 ;; Registers used:
  6298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6308 ;;Total ram usage:        0 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    6
  6311 ;; This function calls:
  6312 ;;		_lcd_write
  6313 ;; This function is called by:
  6314 ;;		_menu_selector
  6315 ;;		_activity_menu
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text44
  6320  00E76C                     __ptext44:
  6321                           	opt stack 0
  6322  00E76C                     _menu_selector_0:
  6323                           	opt stack 20
  6324                           
  6325                           ;main.c: 111: lcd_write(1,1,">");
  6326                           
  6327                           ;incstack = 0
  6328  00E76C  0E00               	movlw	0
  6329  00E76E  6E35               	movwf	lcd_write@column+1,c
  6330  00E770  0E01               	movlw	1
  6331  00E772  6E34               	movwf	lcd_write@column,c
  6332  00E774  0E00               	movlw	0
  6333  00E776  6E37               	movwf	lcd_write@row+1,c
  6334  00E778  0E01               	movlw	1
  6335  00E77A  6E36               	movwf	lcd_write@row,c
  6336  00E77C  0EF5               	movlw	low STR_2
  6337  00E77E  6E38               	movwf	lcd_write@string,c
  6338  00E780  0EFF               	movlw	high STR_2
  6339  00E782  6E39               	movwf	lcd_write@string+1,c
  6340  00E784  ECEF  F071         	call	_lcd_write	;wreg free
  6341                           
  6342                           ;main.c: 112: menu_selected = 0;
  6343  00E788  0E00               	movlw	0
  6344  00E78A  6E18               	movwf	_menu_selected+1,c
  6345  00E78C  0E00               	movlw	0
  6346  00E78E  6E17               	movwf	_menu_selected,c
  6347                           
  6348                           ;main.c: 113: lcd_write(9,2," ");
  6349  00E790  0E00               	movlw	0
  6350  00E792  6E35               	movwf	lcd_write@column+1,c
  6351  00E794  0E09               	movlw	9
  6352  00E796  6E34               	movwf	lcd_write@column,c
  6353  00E798  0E00               	movlw	0
  6354  00E79A  6E37               	movwf	lcd_write@row+1,c
  6355  00E79C  0E02               	movlw	2
  6356  00E79E  6E36               	movwf	lcd_write@row,c
  6357  00E7A0  0EF1               	movlw	low STR_3
  6358  00E7A2  6E38               	movwf	lcd_write@string,c
  6359  00E7A4  0EFF               	movlw	high STR_3
  6360  00E7A6  6E39               	movwf	lcd_write@string+1,c
  6361  00E7A8  ECEF  F071         	call	_lcd_write	;wreg free
  6362  00E7AC  0012               	return		;funcret
  6363  00E7AE                     __end_of_menu_selector_0:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodl	equ	0xFF3
  6370                           intcon	equ	0xFF2
  6371                           postinc0	equ	0xFEE
  6372                           wreg	equ	0xFE8
  6373                           indf1	equ	0xFE7
  6374                           postdec1	equ	0xFE5
  6375                           fsr1h	equ	0xFE2
  6376                           fsr1l	equ	0xFE1
  6377                           indf2	equ	0xFDF
  6378                           fsr2h	equ	0xFDA
  6379                           fsr2l	equ	0xFD9
  6380                           status	equ	0xFD8
  6381                           
  6382 ;; *************** function _activity_pin *****************
  6383 ;; Defined at:
  6384 ;;		line 198 in file "main.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;		None               void
  6391 ;; Registers used:
  6392 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    6
  6405 ;; This function calls:
  6406 ;;		_lcd_comand
  6407 ;;		_lcd_gotoxy
  6408 ;;		_lcd_init
  6409 ;;		_lcd_write
  6410 ;;		_strcpy
  6411 ;; This function is called by:
  6412 ;;		_pin_input_validator
  6413 ;;		_button_A
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text45
  6418  00EB3E                     __ptext45:
  6419                           	opt stack 0
  6420  00EB3E                     _activity_pin:
  6421                           	opt stack 21
  6422                           
  6423                           ;main.c: 200: activity = 1;
  6424                           
  6425                           ;incstack = 0
  6426  00EB3E  0E00               	movlw	0
  6427  00EB40  6E04               	movwf	_activity+1,c
  6428  00EB42  0E01               	movlw	1
  6429  00EB44  6E03               	movwf	_activity,c
  6430                           
  6431                           ;main.c: 201: strcpy(pin_input, "");
  6432  00EB46  0E99               	movlw	low _pin_input
  6433  00EB48  6E2A               	movwf	strcpy@to,c
  6434  00EB4A  0E00               	movlw	high _pin_input
  6435  00EB4C  6E2B               	movwf	strcpy@to+1,c
  6436  00EB4E  0EF2               	movlw	low (STR_3+1)
  6437  00EB50  6E2C               	movwf	strcpy@from,c
  6438  00EB52  0EFF               	movlw	high (STR_3+1)
  6439  00EB54  6E2D               	movwf	strcpy@from+1,c
  6440  00EB56  EC9E  F074         	call	_strcpy	;wreg free
  6441                           
  6442                           ;main.c: 202: lcd_init();
  6443  00EB5A  EC93  F079         	call	_lcd_init	;wreg free
  6444                           
  6445                           ;main.c: 203: lcd_write(1,1,"Ingrese su PIN:");
  6446  00EB5E  0E00               	movlw	0
  6447  00EB60  6E35               	movwf	lcd_write@column+1,c
  6448  00EB62  0E01               	movlw	1
  6449  00EB64  6E34               	movwf	lcd_write@column,c
  6450  00EB66  0E00               	movlw	0
  6451  00EB68  6E37               	movwf	lcd_write@row+1,c
  6452  00EB6A  0E01               	movlw	1
  6453  00EB6C  6E36               	movwf	lcd_write@row,c
  6454  00EB6E  0E0C               	movlw	low STR_15
  6455  00EB70  6E38               	movwf	lcd_write@string,c
  6456  00EB72  0EFF               	movlw	high STR_15
  6457  00EB74  6E39               	movwf	lcd_write@string+1,c
  6458  00EB76  ECEF  F071         	call	_lcd_write	;wreg free
  6459                           
  6460                           ;main.c: 204: lcd_gotoxy(1,2);
  6461  00EB7A  0E02               	movlw	2
  6462  00EB7C  6E2E               	movwf	lcd_gotoxy@y,c
  6463  00EB7E  0E01               	movlw	1
  6464  00EB80  EC38  F072         	call	_lcd_gotoxy
  6465                           
  6466                           ;main.c: 205: lcd_comand(0b00001111);
  6467  00EB84  0E0F               	movlw	15
  6468  00EB86  ECC2  F071         	call	_lcd_comand
  6469  00EB8A  0012               	return		;funcret
  6470  00EB8C                     __end_of_activity_pin:
  6471                           	opt stack 0
  6472                           tblptru	equ	0xFF8
  6473                           tblptrh	equ	0xFF7
  6474                           tblptrl	equ	0xFF6
  6475                           tablat	equ	0xFF5
  6476                           prodl	equ	0xFF3
  6477                           intcon	equ	0xFF2
  6478                           postinc0	equ	0xFEE
  6479                           wreg	equ	0xFE8
  6480                           indf1	equ	0xFE7
  6481                           postdec1	equ	0xFE5
  6482                           fsr1h	equ	0xFE2
  6483                           fsr1l	equ	0xFE1
  6484                           indf2	equ	0xFDF
  6485                           fsr2h	equ	0xFDA
  6486                           fsr2l	equ	0xFD9
  6487                           status	equ	0xFD8
  6488                           
  6489 ;; *************** function _strcpy *****************
  6490 ;; Defined at:
  6491 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  to              2    0[COMRAM] PTR unsigned char 
  6494 ;;		 -> pin(5), pin_input(5), 
  6495 ;;  from            2    2[COMRAM] PTR const unsigned char 
  6496 ;;		 -> STR_44(5), STR_42(1), STR_14(1), pin_input(5), 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;  cp              2    4[COMRAM] PTR unsigned char 
  6499 ;;		 -> pin(5), pin_input(5), 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  2    0[COMRAM] PTR unsigned char 
  6502 ;; Registers used:
  6503 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6512 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6513 ;;Total ram usage:        6 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_activity_pin
  6519 ;;		_activity_submenu_pin_set
  6520 ;;		_pin_set
  6521 ;;		_pin_reset
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text46
  6526  00E93C                     __ptext46:
  6527                           	opt stack 0
  6528  00E93C                     _strcpy:
  6529                           	opt stack 28
  6530                           
  6531                           ;incstack = 0
  6532  00E93C  C02A  F02E         	movff	strcpy@to,strcpy@cp
  6533  00E940  C02B  F02F         	movff	strcpy@to+1,strcpy@cp+1
  6534  00E944  D005               	goto	l2929
  6535  00E946                     l2927:
  6536  00E946  4A2E               	infsnz	strcpy@cp,f,c
  6537  00E948  2A2F               	incf	strcpy@cp+1,f,c
  6538  00E94A  4A2C               	infsnz	strcpy@from,f,c
  6539  00E94C  2A2D               	incf	strcpy@from+1,f,c
  6540  00E94E  D000               	goto	l2929
  6541  00E950                     l2929:
  6542  00E950  C02C  FFF6         	movff	strcpy@from,tblptrl
  6543  00E954  C02D  FFF7         	movff	strcpy@from+1,tblptrh
  6544  00E958  6AF8               	clrf	tblptru,c
  6545  00E95A  C02E  FFD9         	movff	strcpy@cp,fsr2l
  6546  00E95E  C02F  FFDA         	movff	strcpy@cp+1,fsr2h
  6547  00E962  0E0E               	movlw	(high __ramtop+-1)
  6548  00E964  64F7               	cpfsgt	tblptrh,c
  6549  00E966  D003               	bra	u1487
  6550  00E968  0008               	tblrd		*
  6551  00E96A  50F5               	movf	tablat,w,c
  6552  00E96C  D005               	bra	u1480
  6553  00E96E                     u1487:
  6554  00E96E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6555  00E972  CFF7 FFEA          	movff	tblptrh,fsr0h
  6556  00E976  50EF               	movf	indf0,w,c
  6557  00E978                     u1480:
  6558  00E978  6EDF               	movwf	indf2,c
  6559  00E97A  50DF               	movf	indf2,w,c
  6560  00E97C  A4D8               	btfss	status,2,c
  6561  00E97E  D7E3               	goto	l2927
  6562                           
  6563                           ;	Return value of _strcpy is never used
  6564  00E980  0012               	return		;funcret
  6565  00E982                     __end_of_strcpy:
  6566                           	opt stack 0
  6567                           tblptru	equ	0xFF8
  6568                           tblptrh	equ	0xFF7
  6569                           tblptrl	equ	0xFF6
  6570                           tablat	equ	0xFF5
  6571                           prodl	equ	0xFF3
  6572                           intcon	equ	0xFF2
  6573                           indf0	equ	0xFEF
  6574                           postinc0	equ	0xFEE
  6575                           fsr0h	equ	0xFEA
  6576                           fsr0l	equ	0xFE9
  6577                           wreg	equ	0xFE8
  6578                           indf1	equ	0xFE7
  6579                           postdec1	equ	0xFE5
  6580                           fsr1h	equ	0xFE2
  6581                           fsr1l	equ	0xFE1
  6582                           indf2	equ	0xFDF
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8
  6586                           
  6587 ;; *************** function _home_config_refresh *****************
  6588 ;; Defined at:
  6589 ;;		line 413 in file "main.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;		None
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;		None
  6594 ;; Return value:  Size  Location     Type
  6595 ;;		None               void
  6596 ;; Registers used:
  6597 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;Total ram usage:        2 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    7
  6610 ;; This function calls:
  6611 ;;		_home_state_refresh
  6612 ;;		_home_tone_refresh
  6613 ;;		_home_volume_refresh
  6614 ;; This function is called by:
  6615 ;;		_main
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text47
  6620  00F5DE                     __ptext47:
  6621                           	opt stack 0
  6622  00F5DE                     _home_config_refresh:
  6623                           	opt stack 23
  6624                           
  6625                           ;main.c: 415: if(state == 1){LATBbits.LATB1 = 1;;}
  6626                           
  6627                           ;incstack = 0
  6628  00F5DE  041D               	decf	_state,w,c
  6629  00F5E0  101E               	iorwf	_state+1,w,c
  6630  00F5E2  A4D8               	btfss	status,2,c
  6631  00F5E4  D002               	goto	l3885
  6632  00F5E6  828A               	bsf	3978,1,c	;volatile
  6633  00F5E8  D000               	goto	l3885
  6634  00F5EA                     l3885:
  6635                           
  6636                           ;main.c: 416: if(state == 0){LATBbits.LATB1 = 0;;}
  6637  00F5EA  501D               	movf	_state,w,c
  6638  00F5EC  101E               	iorwf	_state+1,w,c
  6639  00F5EE  A4D8               	btfss	status,2,c
  6640  00F5F0  D002               	goto	l3889
  6641  00F5F2  928A               	bcf	3978,1,c	;volatile
  6642  00F5F4  D000               	goto	l3889
  6643  00F5F6                     l3889:
  6644                           
  6645                           ;main.c: 418: config_widget_time++;
  6646  00F5F6  4A0D               	infsnz	_config_widget_time,f,c
  6647  00F5F8  2A0E               	incf	_config_widget_time+1,f,c
  6648                           
  6649                           ;main.c: 420: switch(config_widget){
  6650  00F5FA  D030               	goto	l3911
  6651  00F5FC                     l3891:
  6652                           
  6653                           ;main.c: 423: home_state_refresh();
  6654  00F5FC  EC14  F076         	call	_home_state_refresh	;wreg free
  6655                           
  6656                           ;main.c: 424: if(config_widget_time == 5){
  6657  00F600  0E05               	movlw	5
  6658  00F602  180D               	xorwf	_config_widget_time,w,c
  6659  00F604  100E               	iorwf	_config_widget_time+1,w,c
  6660  00F606  A4D8               	btfss	status,2,c
  6661  00F608  0012               	return	
  6662                           
  6663                           ;main.c: 425: config_widget_time = 0;
  6664  00F60A  0E00               	movlw	0
  6665  00F60C  6E0E               	movwf	_config_widget_time+1,c
  6666  00F60E  0E00               	movlw	0
  6667  00F610  6E0D               	movwf	_config_widget_time,c
  6668                           
  6669                           ;main.c: 426: config_widget = 1;
  6670  00F612  0E00               	movlw	0
  6671  00F614  6E0C               	movwf	_config_widget+1,c
  6672  00F616  0E01               	movlw	1
  6673  00F618  6E0B               	movwf	_config_widget,c
  6674                           
  6675                           ;main.c: 427: }
  6676                           ;main.c: 428: break;
  6677  00F61A  0012               	return	
  6678  00F61C                     l3897:
  6679                           
  6680                           ;main.c: 431: home_volume_refresh();
  6681  00F61C  EC66  F076         	call	_home_volume_refresh	;wreg free
  6682                           
  6683                           ;main.c: 432: if(config_widget_time == 5){
  6684  00F620  0E05               	movlw	5
  6685  00F622  180D               	xorwf	_config_widget_time,w,c
  6686  00F624  100E               	iorwf	_config_widget_time+1,w,c
  6687  00F626  A4D8               	btfss	status,2,c
  6688  00F628  0012               	return	
  6689                           
  6690                           ;main.c: 433: config_widget_time = 0;
  6691  00F62A  0E00               	movlw	0
  6692  00F62C  6E0E               	movwf	_config_widget_time+1,c
  6693  00F62E  0E00               	movlw	0
  6694  00F630  6E0D               	movwf	_config_widget_time,c
  6695                           
  6696                           ;main.c: 434: config_widget = 2;
  6697  00F632  0E00               	movlw	0
  6698  00F634  6E0C               	movwf	_config_widget+1,c
  6699  00F636  0E02               	movlw	2
  6700  00F638  6E0B               	movwf	_config_widget,c
  6701                           
  6702                           ;main.c: 435: }
  6703                           ;main.c: 436: break;
  6704  00F63A  0012               	return	
  6705  00F63C                     l3903:
  6706                           
  6707                           ;main.c: 439: home_tone_refresh();
  6708  00F63C  EC3D  F076         	call	_home_tone_refresh	;wreg free
  6709                           
  6710                           ;main.c: 440: if(config_widget_time == 5){
  6711  00F640  0E05               	movlw	5
  6712  00F642  180D               	xorwf	_config_widget_time,w,c
  6713  00F644  100E               	iorwf	_config_widget_time+1,w,c
  6714  00F646  A4D8               	btfss	status,2,c
  6715  00F648  0012               	return	
  6716                           
  6717                           ;main.c: 441: config_widget_time = 0;
  6718  00F64A  0E00               	movlw	0
  6719  00F64C  6E0E               	movwf	_config_widget_time+1,c
  6720  00F64E  0E00               	movlw	0
  6721  00F650  6E0D               	movwf	_config_widget_time,c
  6722                           
  6723                           ;main.c: 442: config_widget = 0;
  6724  00F652  0E00               	movlw	0
  6725  00F654  6E0C               	movwf	_config_widget+1,c
  6726  00F656  0E00               	movlw	0
  6727  00F658  6E0B               	movwf	_config_widget,c
  6728                           
  6729                           ;main.c: 446: }
  6730                           
  6731                           ;main.c: 443: }
  6732                           ;main.c: 444: break;
  6733  00F65A  0012               	return	
  6734  00F65C                     l3911:
  6735  00F65C  C00B  F04D         	movff	_config_widget,??_home_config_refresh
  6736  00F660  C00C  F04E         	movff	_config_widget+1,??_home_config_refresh+1
  6737                           
  6738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6739                           ; Switch size 1, requested type "space"
  6740                           ; Number of cases is 1, Range of values is 0 to 0
  6741                           ; switch strategies available:
  6742                           ; Name         Instructions Cycles
  6743                           ; simple_byte            4     3 (average)
  6744                           ;	Chosen strategy is simple_byte
  6745  00F664  504E               	movf	??_home_config_refresh+1,w,c
  6746  00F666  0A00               	xorlw	0	; case 0
  6747  00F668  A4D8               	btfss	status,2,c
  6748  00F66A  0012               	return	
  6749                           
  6750                           ; Switch size 1, requested type "space"
  6751                           ; Number of cases is 3, Range of values is 0 to 2
  6752                           ; switch strategies available:
  6753                           ; Name         Instructions Cycles
  6754                           ; simple_byte           10     6 (average)
  6755                           ;	Chosen strategy is simple_byte
  6756  00F66C  504D               	movf	??_home_config_refresh,w,c
  6757  00F66E  0A00               	xorlw	0	; case 0
  6758  00F670  B4D8               	btfsc	status,2,c
  6759  00F672  D7C4               	goto	l3891
  6760  00F674  0A01               	xorlw	1	; case 1
  6761  00F676  B4D8               	btfsc	status,2,c
  6762  00F678  D7D1               	goto	l3897
  6763  00F67A  0A03               	xorlw	3	; case 2
  6764  00F67C  A4D8               	btfss	status,2,c
  6765  00F67E  0012               	return	
  6766  00F680  D7DD               	goto	l3903
  6767  00F682  0012               	return		;funcret
  6768  00F684                     __end_of_home_config_refresh:
  6769                           	opt stack 0
  6770                           tblptru	equ	0xFF8
  6771                           tblptrh	equ	0xFF7
  6772                           tblptrl	equ	0xFF6
  6773                           tablat	equ	0xFF5
  6774                           prodl	equ	0xFF3
  6775                           intcon	equ	0xFF2
  6776                           indf0	equ	0xFEF
  6777                           postinc0	equ	0xFEE
  6778                           fsr0h	equ	0xFEA
  6779                           fsr0l	equ	0xFE9
  6780                           wreg	equ	0xFE8
  6781                           indf1	equ	0xFE7
  6782                           postdec1	equ	0xFE5
  6783                           fsr1h	equ	0xFE2
  6784                           fsr1l	equ	0xFE1
  6785                           indf2	equ	0xFDF
  6786                           fsr2h	equ	0xFDA
  6787                           fsr2l	equ	0xFD9
  6788                           status	equ	0xFD8
  6789                           
  6790 ;; *************** function _home_volume_refresh *****************
  6791 ;; Defined at:
  6792 ;;		line 389 in file "main.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;		None
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;		None               void
  6799 ;; Registers used:
  6800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6810 ;;Total ram usage:        0 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    6
  6813 ;; This function calls:
  6814 ;;		_lcd_write
  6815 ;;		_sprintf
  6816 ;; This function is called by:
  6817 ;;		_home_config_refresh
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text48
  6822  00ECCC                     __ptext48:
  6823                           	opt stack 0
  6824  00ECCC                     _home_volume_refresh:
  6825                           	opt stack 23
  6826                           
  6827                           ;main.c: 391: if(alarm_volume == 0){
  6828                           
  6829                           ;incstack = 0
  6830  00ECCC  5007               	movf	_alarm_volume,w,c
  6831  00ECCE  1008               	iorwf	_alarm_volume+1,w,c
  6832  00ECD0  A4D8               	btfss	status,2,c
  6833  00ECD2  D00B               	goto	l3717
  6834                           
  6835                           ;main.c: 392: sprintf(buffer1,"VOL:BA");
  6836  00ECD4  0E80               	movlw	low _buffer1
  6837  00ECD6  6E36               	movwf	sprintf@sp,c
  6838  00ECD8  0E00               	movlw	high _buffer1
  6839  00ECDA  6E37               	movwf	sprintf@sp+1,c
  6840  00ECDC  0E89               	movlw	low STR_49
  6841  00ECDE  6E38               	movwf	sprintf@f,c
  6842  00ECE0  0EFF               	movlw	high STR_49
  6843  00ECE2  6E39               	movwf	sprintf@f+1,c
  6844  00ECE4  EC44  F07E         	call	_sprintf	;wreg free
  6845                           
  6846                           ;main.c: 393: }
  6847  00ECE8  D00B               	goto	l3719
  6848  00ECEA                     l3717:
  6849                           
  6850                           ;main.c: 394: else{
  6851                           ;main.c: 395: sprintf(buffer1,"VOL:AL");
  6852  00ECEA  0E80               	movlw	low _buffer1
  6853  00ECEC  6E36               	movwf	sprintf@sp,c
  6854  00ECEE  0E00               	movlw	high _buffer1
  6855  00ECF0  6E37               	movwf	sprintf@sp+1,c
  6856  00ECF2  0E97               	movlw	low STR_50
  6857  00ECF4  6E38               	movwf	sprintf@f,c
  6858  00ECF6  0EFF               	movlw	high STR_50
  6859  00ECF8  6E39               	movwf	sprintf@f+1,c
  6860  00ECFA  EC44  F07E         	call	_sprintf	;wreg free
  6861  00ECFE  D000               	goto	l3719
  6862  00ED00                     l3719:
  6863                           
  6864                           ;main.c: 396: }
  6865                           ;main.c: 397: lcd_write(1,2,buffer1);
  6866  00ED00  0E00               	movlw	0
  6867  00ED02  6E35               	movwf	lcd_write@column+1,c
  6868  00ED04  0E01               	movlw	1
  6869  00ED06  6E34               	movwf	lcd_write@column,c
  6870  00ED08  0E00               	movlw	0
  6871  00ED0A  6E37               	movwf	lcd_write@row+1,c
  6872  00ED0C  0E02               	movlw	2
  6873  00ED0E  6E36               	movwf	lcd_write@row,c
  6874  00ED10  0E80               	movlw	low _buffer1
  6875  00ED12  6E38               	movwf	lcd_write@string,c
  6876  00ED14  0E00               	movlw	high _buffer1
  6877  00ED16  6E39               	movwf	lcd_write@string+1,c
  6878  00ED18  ECEF  F071         	call	_lcd_write	;wreg free
  6879  00ED1C  0012               	return		;funcret
  6880  00ED1E                     __end_of_home_volume_refresh:
  6881                           	opt stack 0
  6882                           tblptru	equ	0xFF8
  6883                           tblptrh	equ	0xFF7
  6884                           tblptrl	equ	0xFF6
  6885                           tablat	equ	0xFF5
  6886                           prodl	equ	0xFF3
  6887                           intcon	equ	0xFF2
  6888                           indf0	equ	0xFEF
  6889                           postinc0	equ	0xFEE
  6890                           fsr0h	equ	0xFEA
  6891                           fsr0l	equ	0xFE9
  6892                           wreg	equ	0xFE8
  6893                           indf1	equ	0xFE7
  6894                           postdec1	equ	0xFE5
  6895                           fsr1h	equ	0xFE2
  6896                           fsr1l	equ	0xFE1
  6897                           indf2	equ	0xFDF
  6898                           fsr2h	equ	0xFDA
  6899                           fsr2l	equ	0xFD9
  6900                           status	equ	0xFD8
  6901                           
  6902 ;; *************** function _home_tone_refresh *****************
  6903 ;; Defined at:
  6904 ;;		line 401 in file "main.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;		None
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;		None               void
  6911 ;; Registers used:
  6912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6922 ;;Total ram usage:        0 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    6
  6925 ;; This function calls:
  6926 ;;		_lcd_write
  6927 ;;		_sprintf
  6928 ;; This function is called by:
  6929 ;;		_home_config_refresh
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text49
  6934  00EC7A                     __ptext49:
  6935                           	opt stack 0
  6936  00EC7A                     _home_tone_refresh:
  6937                           	opt stack 23
  6938                           
  6939                           ;main.c: 403: if(alarm_tone == 0){
  6940                           
  6941                           ;incstack = 0
  6942  00EC7A  5005               	movf	_alarm_tone,w,c
  6943  00EC7C  1006               	iorwf	_alarm_tone+1,w,c
  6944  00EC7E  A4D8               	btfss	status,2,c
  6945  00EC80  D00B               	goto	l3725
  6946                           
  6947                           ;main.c: 404: sprintf(buffer1,"TONO:1");
  6948  00EC82  0E80               	movlw	low _buffer1
  6949  00EC84  6E36               	movwf	sprintf@sp,c
  6950  00EC86  0E00               	movlw	high _buffer1
  6951  00EC88  6E37               	movwf	sprintf@sp+1,c
  6952  00EC8A  0E74               	movlw	low STR_51
  6953  00EC8C  6E38               	movwf	sprintf@f,c
  6954  00EC8E  0EFF               	movlw	high STR_51
  6955  00EC90  6E39               	movwf	sprintf@f+1,c
  6956  00EC92  EC44  F07E         	call	_sprintf	;wreg free
  6957                           
  6958                           ;main.c: 405: }
  6959  00EC96  D00B               	goto	l3727
  6960  00EC98                     l3725:
  6961                           
  6962                           ;main.c: 406: else{
  6963                           ;main.c: 407: sprintf(buffer1,"TONO:2");
  6964  00EC98  0E80               	movlw	low _buffer1
  6965  00EC9A  6E36               	movwf	sprintf@sp,c
  6966  00EC9C  0E00               	movlw	high _buffer1
  6967  00EC9E  6E37               	movwf	sprintf@sp+1,c
  6968  00ECA0  0E82               	movlw	low STR_52
  6969  00ECA2  6E38               	movwf	sprintf@f,c
  6970  00ECA4  0EFF               	movlw	high STR_52
  6971  00ECA6  6E39               	movwf	sprintf@f+1,c
  6972  00ECA8  EC44  F07E         	call	_sprintf	;wreg free
  6973  00ECAC  D000               	goto	l3727
  6974  00ECAE                     l3727:
  6975                           
  6976                           ;main.c: 408: }
  6977                           ;main.c: 409: lcd_write(1,2,buffer1);
  6978  00ECAE  0E00               	movlw	0
  6979  00ECB0  6E35               	movwf	lcd_write@column+1,c
  6980  00ECB2  0E01               	movlw	1
  6981  00ECB4  6E34               	movwf	lcd_write@column,c
  6982  00ECB6  0E00               	movlw	0
  6983  00ECB8  6E37               	movwf	lcd_write@row+1,c
  6984  00ECBA  0E02               	movlw	2
  6985  00ECBC  6E36               	movwf	lcd_write@row,c
  6986  00ECBE  0E80               	movlw	low _buffer1
  6987  00ECC0  6E38               	movwf	lcd_write@string,c
  6988  00ECC2  0E00               	movlw	high _buffer1
  6989  00ECC4  6E39               	movwf	lcd_write@string+1,c
  6990  00ECC6  ECEF  F071         	call	_lcd_write	;wreg free
  6991  00ECCA  0012               	return		;funcret
  6992  00ECCC                     __end_of_home_tone_refresh:
  6993                           	opt stack 0
  6994                           tblptru	equ	0xFF8
  6995                           tblptrh	equ	0xFF7
  6996                           tblptrl	equ	0xFF6
  6997                           tablat	equ	0xFF5
  6998                           prodl	equ	0xFF3
  6999                           intcon	equ	0xFF2
  7000                           indf0	equ	0xFEF
  7001                           postinc0	equ	0xFEE
  7002                           fsr0h	equ	0xFEA
  7003                           fsr0l	equ	0xFE9
  7004                           wreg	equ	0xFE8
  7005                           indf1	equ	0xFE7
  7006                           postdec1	equ	0xFE5
  7007                           fsr1h	equ	0xFE2
  7008                           fsr1l	equ	0xFE1
  7009                           indf2	equ	0xFDF
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8
  7013                           
  7014 ;; *************** function _home_state_refresh *****************
  7015 ;; Defined at:
  7016 ;;		line 377 in file "main.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;		None               void
  7023 ;; Registers used:
  7024 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    6
  7037 ;; This function calls:
  7038 ;;		_lcd_write
  7039 ;;		_sprintf
  7040 ;; This function is called by:
  7041 ;;		_home_config_refresh
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text50
  7046  00EC28                     __ptext50:
  7047                           	opt stack 0
  7048  00EC28                     _home_state_refresh:
  7049                           	opt stack 23
  7050                           
  7051                           ;main.c: 379: if(state == 1){
  7052                           
  7053                           ;incstack = 0
  7054  00EC28  041D               	decf	_state,w,c
  7055  00EC2A  101E               	iorwf	_state+1,w,c
  7056  00EC2C  A4D8               	btfss	status,2,c
  7057  00EC2E  D00B               	goto	l3709
  7058                           
  7059                           ;main.c: 380: sprintf(buffer1,"ACT:SI");
  7060  00EC30  0E80               	movlw	low _buffer1
  7061  00EC32  6E36               	movwf	sprintf@sp,c
  7062  00EC34  0E00               	movlw	high _buffer1
  7063  00EC36  6E37               	movwf	sprintf@sp+1,c
  7064  00EC38  0E90               	movlw	low STR_47
  7065  00EC3A  6E38               	movwf	sprintf@f,c
  7066  00EC3C  0EFF               	movlw	high STR_47
  7067  00EC3E  6E39               	movwf	sprintf@f+1,c
  7068  00EC40  EC44  F07E         	call	_sprintf	;wreg free
  7069                           
  7070                           ;main.c: 381: }
  7071  00EC44  D00B               	goto	l3711
  7072  00EC46                     l3709:
  7073                           
  7074                           ;main.c: 382: else{
  7075                           ;main.c: 383: sprintf(buffer1,"ACT:NO");
  7076  00EC46  0E80               	movlw	low _buffer1
  7077  00EC48  6E36               	movwf	sprintf@sp,c
  7078  00EC4A  0E00               	movlw	high _buffer1
  7079  00EC4C  6E37               	movwf	sprintf@sp+1,c
  7080  00EC4E  0E9E               	movlw	low STR_48
  7081  00EC50  6E38               	movwf	sprintf@f,c
  7082  00EC52  0EFF               	movlw	high STR_48
  7083  00EC54  6E39               	movwf	sprintf@f+1,c
  7084  00EC56  EC44  F07E         	call	_sprintf	;wreg free
  7085  00EC5A  D000               	goto	l3711
  7086  00EC5C                     l3711:
  7087                           
  7088                           ;main.c: 384: }
  7089                           ;main.c: 385: lcd_write(1,2,buffer1);
  7090  00EC5C  0E00               	movlw	0
  7091  00EC5E  6E35               	movwf	lcd_write@column+1,c
  7092  00EC60  0E01               	movlw	1
  7093  00EC62  6E34               	movwf	lcd_write@column,c
  7094  00EC64  0E00               	movlw	0
  7095  00EC66  6E37               	movwf	lcd_write@row+1,c
  7096  00EC68  0E02               	movlw	2
  7097  00EC6A  6E36               	movwf	lcd_write@row,c
  7098  00EC6C  0E80               	movlw	low _buffer1
  7099  00EC6E  6E38               	movwf	lcd_write@string,c
  7100  00EC70  0E00               	movlw	high _buffer1
  7101  00EC72  6E39               	movwf	lcd_write@string+1,c
  7102  00EC74  ECEF  F071         	call	_lcd_write	;wreg free
  7103  00EC78  0012               	return		;funcret
  7104  00EC7A                     __end_of_home_state_refresh:
  7105                           	opt stack 0
  7106                           tblptru	equ	0xFF8
  7107                           tblptrh	equ	0xFF7
  7108                           tblptrl	equ	0xFF6
  7109                           tablat	equ	0xFF5
  7110                           prodl	equ	0xFF3
  7111                           intcon	equ	0xFF2
  7112                           indf0	equ	0xFEF
  7113                           postinc0	equ	0xFEE
  7114                           fsr0h	equ	0xFEA
  7115                           fsr0l	equ	0xFE9
  7116                           wreg	equ	0xFE8
  7117                           indf1	equ	0xFE7
  7118                           postdec1	equ	0xFE5
  7119                           fsr1h	equ	0xFE2
  7120                           fsr1l	equ	0xFE1
  7121                           indf2	equ	0xFDF
  7122                           fsr2h	equ	0xFDA
  7123                           fsr2l	equ	0xFD9
  7124                           status	equ	0xFD8
  7125                           
  7126 ;; *************** function _home_clock_refresh *****************
  7127 ;; Defined at:
  7128 ;;		line 368 in file "main.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;		None
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;		None               void
  7135 ;; Registers used:
  7136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7146 ;;Total ram usage:        0 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    6
  7149 ;; This function calls:
  7150 ;;		_lcd_write
  7151 ;;		_sprintf
  7152 ;; This function is called by:
  7153 ;;		_main
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text51
  7158  00F4B6                     __ptext51:
  7159                           	opt stack 0
  7160  00F4B6                     _home_clock_refresh:
  7161                           	opt stack 24
  7162                           
  7163                           ;main.c: 370: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  7164                           
  7165                           ;incstack = 0
  7166  00F4B6  0E80               	movlw	low _buffer1
  7167  00F4B8  6E36               	movwf	sprintf@sp,c
  7168  00F4BA  0E00               	movlw	high _buffer1
  7169  00F4BC  6E37               	movwf	sprintf@sp+1,c
  7170  00F4BE  0E2C               	movlw	low STR_23
  7171  00F4C0  6E38               	movwf	sprintf@f,c
  7172  00F4C2  0EFF               	movlw	high STR_23
  7173  00F4C4  6E39               	movwf	sprintf@f+1,c
  7174  00F4C6  C051  F03A         	movff	_dia,?_sprintf+4
  7175  00F4CA  C052  F03B         	movff	_dia+1,?_sprintf+5
  7176  00F4CE  C057  F03C         	movff	_mes,?_sprintf+6
  7177  00F4D2  C058  F03D         	movff	_mes+1,?_sprintf+7
  7178  00F4D6  C04F  F03E         	movff	_anio,?_sprintf+8
  7179  00F4DA  C050  F03F         	movff	_anio+1,?_sprintf+9
  7180  00F4DE  EC44  F07E         	call	_sprintf	;wreg free
  7181                           
  7182                           ;main.c: 371: lcd_write(9,1,buffer1);
  7183  00F4E2  0E00               	movlw	0
  7184  00F4E4  6E35               	movwf	lcd_write@column+1,c
  7185  00F4E6  0E09               	movlw	9
  7186  00F4E8  6E34               	movwf	lcd_write@column,c
  7187  00F4EA  0E00               	movlw	0
  7188  00F4EC  6E37               	movwf	lcd_write@row+1,c
  7189  00F4EE  0E01               	movlw	1
  7190  00F4F0  6E36               	movwf	lcd_write@row,c
  7191  00F4F2  0E80               	movlw	low _buffer1
  7192  00F4F4  6E38               	movwf	lcd_write@string,c
  7193  00F4F6  0E00               	movlw	high _buffer1
  7194  00F4F8  6E39               	movwf	lcd_write@string+1,c
  7195  00F4FA  ECEF  F071         	call	_lcd_write	;wreg free
  7196                           
  7197                           ;main.c: 372: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  7198  00F4FE  0E80               	movlw	low _buffer1
  7199  00F500  6E36               	movwf	sprintf@sp,c
  7200  00F502  0E00               	movlw	high _buffer1
  7201  00F504  6E37               	movwf	sprintf@sp+1,c
  7202  00F506  0E3B               	movlw	low STR_24
  7203  00F508  6E38               	movwf	sprintf@f,c
  7204  00F50A  0EFF               	movlw	high STR_24
  7205  00F50C  6E39               	movwf	sprintf@f+1,c
  7206  00F50E  C055  F03A         	movff	_hora,?_sprintf+4
  7207  00F512  C056  F03B         	movff	_hora+1,?_sprintf+5
  7208  00F516  C019  F03C         	movff	_minuto,?_sprintf+6
  7209  00F51A  C01A  F03D         	movff	_minuto+1,?_sprintf+7
  7210  00F51E  C01B  F03E         	movff	_segundo,?_sprintf+8
  7211  00F522  C01C  F03F         	movff	_segundo+1,?_sprintf+9
  7212  00F526  EC44  F07E         	call	_sprintf	;wreg free
  7213                           
  7214                           ;main.c: 373: lcd_write(9,2,buffer1);
  7215  00F52A  0E00               	movlw	0
  7216  00F52C  6E35               	movwf	lcd_write@column+1,c
  7217  00F52E  0E09               	movlw	9
  7218  00F530  6E34               	movwf	lcd_write@column,c
  7219  00F532  0E00               	movlw	0
  7220  00F534  6E37               	movwf	lcd_write@row+1,c
  7221  00F536  0E02               	movlw	2
  7222  00F538  6E36               	movwf	lcd_write@row,c
  7223  00F53A  0E80               	movlw	low _buffer1
  7224  00F53C  6E38               	movwf	lcd_write@string,c
  7225  00F53E  0E00               	movlw	high _buffer1
  7226  00F540  6E39               	movwf	lcd_write@string+1,c
  7227  00F542  ECEF  F071         	call	_lcd_write	;wreg free
  7228  00F546  0012               	return		;funcret
  7229  00F548                     __end_of_home_clock_refresh:
  7230                           	opt stack 0
  7231                           tblptru	equ	0xFF8
  7232                           tblptrh	equ	0xFF7
  7233                           tblptrl	equ	0xFF6
  7234                           tablat	equ	0xFF5
  7235                           prodl	equ	0xFF3
  7236                           intcon	equ	0xFF2
  7237                           indf0	equ	0xFEF
  7238                           postinc0	equ	0xFEE
  7239                           fsr0h	equ	0xFEA
  7240                           fsr0l	equ	0xFE9
  7241                           wreg	equ	0xFE8
  7242                           indf1	equ	0xFE7
  7243                           postdec1	equ	0xFE5
  7244                           fsr1h	equ	0xFE2
  7245                           fsr1l	equ	0xFE1
  7246                           indf2	equ	0xFDF
  7247                           fsr2h	equ	0xFDA
  7248                           fsr2l	equ	0xFD9
  7249                           status	equ	0xFD8
  7250                           
  7251 ;; *************** function _check_home_callback *****************
  7252 ;; Defined at:
  7253 ;;		line 93 in file "main.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;		None               void
  7260 ;; Registers used:
  7261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    7
  7274 ;; This function calls:
  7275 ;;		_activity_home
  7276 ;;		_reset_home_callback
  7277 ;; This function is called by:
  7278 ;;		_main
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text52
  7283  00E44E                     __ptext52:
  7284                           	opt stack 0
  7285  00E44E                     _check_home_callback:
  7286                           	opt stack 23
  7287                           
  7288                           ;main.c: 95: if(activity != 0){
  7289                           
  7290                           ;incstack = 0
  7291  00E44E  5003               	movf	_activity,w,c
  7292  00E450  1004               	iorwf	_activity+1,w,c
  7293  00E452  B4D8               	btfsc	status,2,c
  7294  00E454  0012               	return	
  7295                           
  7296                           ;main.c: 96: home_callback--;
  7297  00E456  060F               	decf	_home_callback,f,c
  7298  00E458  A0D8               	btfss	status,0,c
  7299  00E45A  0610               	decf	_home_callback+1,f,c
  7300                           
  7301                           ;main.c: 98: if(home_callback == 0){
  7302  00E45C  500F               	movf	_home_callback,w,c
  7303  00E45E  1010               	iorwf	_home_callback+1,w,c
  7304  00E460  A4D8               	btfss	status,2,c
  7305  00E462  0012               	return	
  7306                           
  7307                           ;main.c: 99: reset_home_callback();
  7308  00E464  ECB3  F071         	call	_reset_home_callback	;wreg free
  7309                           
  7310                           ;main.c: 100: activity_home();
  7311  00E468  EC70  F072         	call	_activity_home	;wreg free
  7312  00E46C  0012               	return	
  7313  00E46E  0012               	return		;funcret
  7314  00E470                     __end_of_check_home_callback:
  7315                           	opt stack 0
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodl	equ	0xFF3
  7321                           intcon	equ	0xFF2
  7322                           indf0	equ	0xFEF
  7323                           postinc0	equ	0xFEE
  7324                           fsr0h	equ	0xFEA
  7325                           fsr0l	equ	0xFE9
  7326                           wreg	equ	0xFE8
  7327                           indf1	equ	0xFE7
  7328                           postdec1	equ	0xFE5
  7329                           fsr1h	equ	0xFE2
  7330                           fsr1l	equ	0xFE1
  7331                           indf2	equ	0xFDF
  7332                           fsr2h	equ	0xFDA
  7333                           fsr2l	equ	0xFD9
  7334                           status	equ	0xFD8
  7335                           
  7336 ;; *************** function _reset_home_callback *****************
  7337 ;; Defined at:
  7338 ;;		line 87 in file "main.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;		None
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;		None               void
  7345 ;; Registers used:
  7346 ;;		None
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7356 ;;Total ram usage:        0 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_check_home_callback
  7362 ;;		_button_A
  7363 ;;		_button_B
  7364 ;;		_button_C
  7365 ;;		_button_D
  7366 ;;		_button_asterisk
  7367 ;;		_button_hash
  7368 ;;		_button_number
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text53
  7373  00E366                     __ptext53:
  7374                           	opt stack 0
  7375  00E366                     _reset_home_callback:
  7376                           	opt stack 28
  7377                           
  7378                           ;main.c: 89: home_callback = home_callback_delay;
  7379                           
  7380                           ;incstack = 0
  7381  00E366  C011  F00F         	movff	_home_callback_delay,_home_callback
  7382  00E36A  C012  F010         	movff	_home_callback_delay+1,_home_callback+1
  7383  00E36E  0012               	return		;funcret
  7384  00E370                     __end_of_reset_home_callback:
  7385                           	opt stack 0
  7386                           tblptru	equ	0xFF8
  7387                           tblptrh	equ	0xFF7
  7388                           tblptrl	equ	0xFF6
  7389                           tablat	equ	0xFF5
  7390                           prodl	equ	0xFF3
  7391                           intcon	equ	0xFF2
  7392                           indf0	equ	0xFEF
  7393                           postinc0	equ	0xFEE
  7394                           fsr0h	equ	0xFEA
  7395                           fsr0l	equ	0xFE9
  7396                           wreg	equ	0xFE8
  7397                           indf1	equ	0xFE7
  7398                           postdec1	equ	0xFE5
  7399                           fsr1h	equ	0xFE2
  7400                           fsr1l	equ	0xFE1
  7401                           indf2	equ	0xFDF
  7402                           fsr2h	equ	0xFDA
  7403                           fsr2l	equ	0xFD9
  7404                           status	equ	0xFD8
  7405                           
  7406 ;; *************** function _activity_home *****************
  7407 ;; Defined at:
  7408 ;;		line 79 in file "main.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;		None
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;		None               void
  7415 ;; Registers used:
  7416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;Total ram usage:        0 bytes
  7427 ;; Hardware stack levels used:    1
  7428 ;; Hardware stack levels required when called:    6
  7429 ;; This function calls:
  7430 ;;		_lcd_init
  7431 ;;		_lcd_write
  7432 ;; This function is called by:
  7433 ;;		_check_home_callback
  7434 ;;		_pin_set
  7435 ;;		_button_B_submenu_activation
  7436 ;;		_button_B_submenu_pin_config
  7437 ;;		_button_B_submenu_siren_volume
  7438 ;;		_button_B_submenu_siren_tone
  7439 ;;		_button_D
  7440 ;;		_main
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text54
  7445  00E4E0                     __ptext54:
  7446                           	opt stack 0
  7447  00E4E0                     _activity_home:
  7448                           	opt stack 21
  7449                           
  7450                           ;main.c: 81: activity = 0;
  7451                           
  7452                           ;incstack = 0
  7453  00E4E0  0E00               	movlw	0
  7454  00E4E2  6E04               	movwf	_activity+1,c
  7455  00E4E4  0E00               	movlw	0
  7456  00E4E6  6E03               	movwf	_activity,c
  7457                           
  7458                           ;main.c: 82: lcd_init();
  7459  00E4E8  EC93  F079         	call	_lcd_init	;wreg free
  7460                           
  7461                           ;main.c: 83: lcd_write(1,1,"X28");
  7462  00E4EC  0E00               	movlw	0
  7463  00E4EE  6E35               	movwf	lcd_write@column+1,c
  7464  00E4F0  0E01               	movlw	1
  7465  00E4F2  6E34               	movwf	lcd_write@column,c
  7466  00E4F4  0E00               	movlw	0
  7467  00E4F6  6E37               	movwf	lcd_write@row+1,c
  7468  00E4F8  0E01               	movlw	1
  7469  00E4FA  6E36               	movwf	lcd_write@row,c
  7470  00E4FC  0EE3               	movlw	low STR_1
  7471  00E4FE  6E38               	movwf	lcd_write@string,c
  7472  00E500  0EFF               	movlw	high STR_1
  7473  00E502  6E39               	movwf	lcd_write@string+1,c
  7474  00E504  ECEF  F071         	call	_lcd_write	;wreg free
  7475  00E508  0012               	return		;funcret
  7476  00E50A                     __end_of_activity_home:
  7477                           	opt stack 0
  7478                           tblptru	equ	0xFF8
  7479                           tblptrh	equ	0xFF7
  7480                           tblptrl	equ	0xFF6
  7481                           tablat	equ	0xFF5
  7482                           prodl	equ	0xFF3
  7483                           intcon	equ	0xFF2
  7484                           indf0	equ	0xFEF
  7485                           postinc0	equ	0xFEE
  7486                           fsr0h	equ	0xFEA
  7487                           fsr0l	equ	0xFE9
  7488                           wreg	equ	0xFE8
  7489                           indf1	equ	0xFE7
  7490                           postdec1	equ	0xFE5
  7491                           fsr1h	equ	0xFE2
  7492                           fsr1l	equ	0xFE1
  7493                           indf2	equ	0xFDF
  7494                           fsr2h	equ	0xFDA
  7495                           fsr2l	equ	0xFD9
  7496                           status	equ	0xFD8
  7497                           
  7498 ;; *************** function _lcd_init *****************
  7499 ;; Defined at:
  7500 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;		None
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  i               1    4[COMRAM] unsigned char 
  7505 ;; Return value:  Size  Location     Type
  7506 ;;		None               void
  7507 ;; Registers used:
  7508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;Total ram usage:        1 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; Hardware stack levels required when called:    2
  7521 ;; This function calls:
  7522 ;;		_Delay1KTCYx
  7523 ;;		_lcd_send_byte
  7524 ;;		_lcd_send_nibble
  7525 ;; This function is called by:
  7526 ;;		_activity_home
  7527 ;;		_activity_pin
  7528 ;;		_activity_menu
  7529 ;;		_activity_submenu_date_and_time
  7530 ;;		_activity_submenu_date_config
  7531 ;;		_activity_submenu_time_config
  7532 ;;		_activity_submenu_activation
  7533 ;;		_activity_submenu_siren
  7534 ;;		_activity_submenu_siren_volume
  7535 ;;		_activity_submenu_siren_tone
  7536 ;;		_activity_submenu_pin
  7537 ;;		_activity_submenu_pin_set
  7538 ;;		_setup
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text55
  7543  00F326                     __ptext55:
  7544                           	opt stack 0
  7545  00F326                     _lcd_init:
  7546                           	opt stack 27
  7547                           
  7548                           ;unmc_lcd_216.c: 120: int8 i;
  7549                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  7550                           
  7551                           ;incstack = 0
  7552  00F326  9693               	bcf	3987,3,c	;volatile
  7553                           
  7554                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  7555  00F328  9493               	bcf	3987,2,c	;volatile
  7556                           
  7557                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  7558  00F32A  968A               	bcf	3978,3,c	;volatile
  7559                           
  7560                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  7561  00F32C  948A               	bcf	3978,2,c	;volatile
  7562                           
  7563                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  7564  00F32E  9893               	bcf	3987,4,c	;volatile
  7565                           
  7566                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  7567  00F330  9A93               	bcf	3987,5,c	;volatile
  7568                           
  7569                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  7570  00F332  9C93               	bcf	3987,6,c	;volatile
  7571                           
  7572                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  7573  00F334  9E93               	bcf	3987,7,c	;volatile
  7574                           
  7575                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  7576  00F336  0E0A               	movlw	10
  7577  00F338  ECD2  F071         	call	_Delay1KTCYx
  7578                           
  7579                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  7580  00F33C  0E0A               	movlw	10
  7581  00F33E  ECD2  F071         	call	_Delay1KTCYx
  7582                           
  7583                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  7584  00F342  0E0A               	movlw	10
  7585  00F344  ECD2  F071         	call	_Delay1KTCYx
  7586                           
  7587                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  7588  00F348  0E00               	movlw	0
  7589  00F34A  6E2E               	movwf	lcd_init@i,c
  7590  00F34C                     l2887:
  7591  00F34C  0E02               	movlw	2
  7592  00F34E  642E               	cpfsgt	lcd_init@i,c
  7593  00F350  D001               	goto	l2891
  7594  00F352  D008               	goto	l2897
  7595  00F354                     l2891:
  7596                           
  7597                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  7598  00F354  0E03               	movlw	3
  7599  00F356  EC1A  F079         	call	_lcd_send_nibble
  7600                           
  7601                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  7602  00F35A  0E0A               	movlw	10
  7603  00F35C  ECD2  F071         	call	_Delay1KTCYx
  7604  00F360  2A2E               	incf	lcd_init@i,f,c
  7605  00F362  D7F4               	goto	l2887
  7606  00F364                     l2897:
  7607                           
  7608                           ;unmc_lcd_216.c: 146: }
  7609                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  7610  00F364  0E02               	movlw	2
  7611  00F366  EC1A  F079         	call	_lcd_send_nibble
  7612                           
  7613                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  7614  00F36A  0E00               	movlw	0
  7615  00F36C  6E2E               	movwf	lcd_init@i,c
  7616  00F36E  0E03               	movlw	3
  7617  00F370  642E               	cpfsgt	lcd_init@i,c
  7618  00F372  D002               	goto	l2905
  7619  00F374  0012               	return	
  7620  00F376  0012               	return	
  7621  00F378                     l2905:
  7622                           
  7623                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  7624  00F378  502E               	movf	lcd_init@i,w,c
  7625  00F37A  0D01               	mullw	1
  7626  00F37C  0EF7               	movlw	low _LCD_INIT_STRING
  7627  00F37E  24F3               	addwf	prodl,w,c
  7628  00F380  6EF6               	movwf	tblptrl,c
  7629  00F382  0EFE               	movlw	high _LCD_INIT_STRING
  7630  00F384  20F4               	addwfc	prodh,w,c
  7631  00F386  6EF7               	movwf	tblptrh,c
  7632  00F388                     	if	0	;There are less than 3 active tblptr bytes
  7633  00F388                     	endif
  7634  00F388  0008               	tblrd		*
  7635  00F38A  CFF5 F02C          	movff	tablat,lcd_send_byte@n
  7636  00F38E  0E00               	movlw	0
  7637  00F390  EC0C  F073         	call	_lcd_send_byte
  7638                           
  7639                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  7640  00F394  0E0A               	movlw	10
  7641  00F396  ECD2  F071         	call	_Delay1KTCYx
  7642  00F39A  2A2E               	incf	lcd_init@i,f,c
  7643  00F39C  0E03               	movlw	3
  7644  00F39E  642E               	cpfsgt	lcd_init@i,c
  7645  00F3A0  D7EB               	goto	l2905
  7646  00F3A2  0012               	return	
  7647  00F3A4  0012               	return		;funcret
  7648  00F3A6                     __end_of_lcd_init:
  7649                           	opt stack 0
  7650                           tblptru	equ	0xFF8
  7651                           tblptrh	equ	0xFF7
  7652                           tblptrl	equ	0xFF6
  7653                           tablat	equ	0xFF5
  7654                           prodh	equ	0xFF4
  7655                           prodl	equ	0xFF3
  7656                           intcon	equ	0xFF2
  7657                           indf0	equ	0xFEF
  7658                           postinc0	equ	0xFEE
  7659                           fsr0h	equ	0xFEA
  7660                           fsr0l	equ	0xFE9
  7661                           wreg	equ	0xFE8
  7662                           indf1	equ	0xFE7
  7663                           postdec1	equ	0xFE5
  7664                           fsr1h	equ	0xFE2
  7665                           fsr1l	equ	0xFE1
  7666                           indf2	equ	0xFDF
  7667                           fsr2h	equ	0xFDA
  7668                           fsr2l	equ	0xFD9
  7669                           status	equ	0xFD8
  7670                           
  7671 ;; *************** function _Delay1KTCYx *****************
  7672 ;; Defined at:
  7673 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  unit            1    wreg     unsigned char 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  unit            1    0[COMRAM] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;		None               void
  7680 ;; Registers used:
  7681 ;;		wreg
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7691 ;;Total ram usage:        1 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_lcd_init
  7697 ;;		_DelayPORXLCD
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text56
  7702  00E3A4                     __ptext56:
  7703                           	opt stack 0
  7704  00E3A4                     _Delay1KTCYx:
  7705                           	opt stack 28
  7706                           
  7707                           ;incstack = 0
  7708                           ;Delay1KTCYx@unit stored from wreg
  7709  00E3A4  6E2A               	movwf	Delay1KTCYx@unit,c
  7710  00E3A6  0EFA               	movlw	250
  7711  00E3A8                     u2627:
  7712  00E3A8  F000               	nop	
  7713  00E3AA  2EE8               	decfsz	wreg,f,c
  7714  00E3AC  D7FD               	goto	u2627
  7715  00E3AE  2E2A               	decfsz	Delay1KTCYx@unit,f,c
  7716  00E3B0  D7FA               	goto	l2873
  7717  00E3B2  0012               	return	
  7718  00E3B4  0012               	return		;funcret
  7719  00E3B6                     __end_of_Delay1KTCYx:
  7720                           	opt stack 0
  7721                           tblptru	equ	0xFF8
  7722                           tblptrh	equ	0xFF7
  7723                           tblptrl	equ	0xFF6
  7724                           tablat	equ	0xFF5
  7725                           prodh	equ	0xFF4
  7726                           prodl	equ	0xFF3
  7727                           intcon	equ	0xFF2
  7728                           indf0	equ	0xFEF
  7729                           postinc0	equ	0xFEE
  7730                           fsr0h	equ	0xFEA
  7731                           fsr0l	equ	0xFE9
  7732                           wreg	equ	0xFE8
  7733                           indf1	equ	0xFE7
  7734                           postdec1	equ	0xFE5
  7735                           fsr1h	equ	0xFE2
  7736                           fsr1l	equ	0xFE1
  7737                           indf2	equ	0xFDF
  7738                           fsr2h	equ	0xFDA
  7739                           fsr2l	equ	0xFD9
  7740                           status	equ	0xFD8
  7741                           
  7742 ;; *************** function _activity_submenu_time_config_refresh *****************
  7743 ;; Defined at:
  7744 ;;		line 243 in file "main.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;		None               void
  7751 ;; Registers used:
  7752 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7762 ;;Total ram usage:        0 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    6
  7765 ;; This function calls:
  7766 ;;		_lcd_comand
  7767 ;;		_lcd_gotoxy
  7768 ;;		_lcd_write
  7769 ;;		_sprintf
  7770 ;; This function is called by:
  7771 ;;		_main
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text57
  7776  00EDCC                     __ptext57:
  7777                           	opt stack 0
  7778  00EDCC                     _activity_submenu_time_config_refresh:
  7779                           	opt stack 24
  7780                           
  7781                           ;main.c: 245: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  7782                           
  7783                           ;incstack = 0
  7784  00EDCC  0E80               	movlw	low _buffer1
  7785  00EDCE  6E36               	movwf	sprintf@sp,c
  7786  00EDD0  0E00               	movlw	high _buffer1
  7787  00EDD2  6E37               	movwf	sprintf@sp+1,c
  7788  00EDD4  0E3B               	movlw	low STR_24
  7789  00EDD6  6E38               	movwf	sprintf@f,c
  7790  00EDD8  0EFF               	movlw	high STR_24
  7791  00EDDA  6E39               	movwf	sprintf@f+1,c
  7792  00EDDC  C055  F03A         	movff	_hora,?_sprintf+4
  7793  00EDE0  C056  F03B         	movff	_hora+1,?_sprintf+5
  7794  00EDE4  C019  F03C         	movff	_minuto,?_sprintf+6
  7795  00EDE8  C01A  F03D         	movff	_minuto+1,?_sprintf+7
  7796  00EDEC  C01B  F03E         	movff	_segundo,?_sprintf+8
  7797  00EDF0  C01C  F03F         	movff	_segundo+1,?_sprintf+9
  7798  00EDF4  EC44  F07E         	call	_sprintf	;wreg free
  7799                           
  7800                           ;main.c: 246: lcd_write(1,2,buffer1);
  7801  00EDF8  0E00               	movlw	0
  7802  00EDFA  6E35               	movwf	lcd_write@column+1,c
  7803  00EDFC  0E01               	movlw	1
  7804  00EDFE  6E34               	movwf	lcd_write@column,c
  7805  00EE00  0E00               	movlw	0
  7806  00EE02  6E37               	movwf	lcd_write@row+1,c
  7807  00EE04  0E02               	movlw	2
  7808  00EE06  6E36               	movwf	lcd_write@row,c
  7809  00EE08  0E80               	movlw	low _buffer1
  7810  00EE0A  6E38               	movwf	lcd_write@string,c
  7811  00EE0C  0E00               	movlw	high _buffer1
  7812  00EE0E  6E39               	movwf	lcd_write@string+1,c
  7813  00EE10  ECEF  F071         	call	_lcd_write	;wreg free
  7814                           
  7815                           ;main.c: 247: lcd_gotoxy(1, 2);
  7816  00EE14  0E02               	movlw	2
  7817  00EE16  6E2E               	movwf	lcd_gotoxy@y,c
  7818  00EE18  0E01               	movlw	1
  7819  00EE1A  EC38  F072         	call	_lcd_gotoxy
  7820                           
  7821                           ;main.c: 248: lcd_comand(0b00001111);
  7822  00EE1E  0E0F               	movlw	15
  7823  00EE20  ECC2  F071         	call	_lcd_comand
  7824  00EE24  0012               	return		;funcret
  7825  00EE26                     __end_of_activity_submenu_time_config_refresh:
  7826                           	opt stack 0
  7827                           tblptru	equ	0xFF8
  7828                           tblptrh	equ	0xFF7
  7829                           tblptrl	equ	0xFF6
  7830                           tablat	equ	0xFF5
  7831                           prodh	equ	0xFF4
  7832                           prodl	equ	0xFF3
  7833                           intcon	equ	0xFF2
  7834                           indf0	equ	0xFEF
  7835                           postinc0	equ	0xFEE
  7836                           fsr0h	equ	0xFEA
  7837                           fsr0l	equ	0xFE9
  7838                           wreg	equ	0xFE8
  7839                           indf1	equ	0xFE7
  7840                           postdec1	equ	0xFE5
  7841                           fsr1h	equ	0xFE2
  7842                           fsr1l	equ	0xFE1
  7843                           indf2	equ	0xFDF
  7844                           fsr2h	equ	0xFDA
  7845                           fsr2l	equ	0xFD9
  7846                           status	equ	0xFD8
  7847                           
  7848 ;; *************** function _activity_submenu_date_config_refresh *****************
  7849 ;; Defined at:
  7850 ;;		line 234 in file "main.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;		None               void
  7857 ;; Registers used:
  7858 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7868 ;;Total ram usage:        0 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    6
  7871 ;; This function calls:
  7872 ;;		_lcd_comand
  7873 ;;		_lcd_gotoxy
  7874 ;;		_lcd_write
  7875 ;;		_sprintf
  7876 ;; This function is called by:
  7877 ;;		_main
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text58
  7882  00ED72                     __ptext58:
  7883                           	opt stack 0
  7884  00ED72                     _activity_submenu_date_config_refresh:
  7885                           	opt stack 24
  7886                           
  7887                           ;main.c: 236: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  7888                           
  7889                           ;incstack = 0
  7890  00ED72  0E80               	movlw	low _buffer1
  7891  00ED74  6E36               	movwf	sprintf@sp,c
  7892  00ED76  0E00               	movlw	high _buffer1
  7893  00ED78  6E37               	movwf	sprintf@sp+1,c
  7894  00ED7A  0E2C               	movlw	low STR_23
  7895  00ED7C  6E38               	movwf	sprintf@f,c
  7896  00ED7E  0EFF               	movlw	high STR_23
  7897  00ED80  6E39               	movwf	sprintf@f+1,c
  7898  00ED82  C051  F03A         	movff	_dia,?_sprintf+4
  7899  00ED86  C052  F03B         	movff	_dia+1,?_sprintf+5
  7900  00ED8A  C057  F03C         	movff	_mes,?_sprintf+6
  7901  00ED8E  C058  F03D         	movff	_mes+1,?_sprintf+7
  7902  00ED92  C04F  F03E         	movff	_anio,?_sprintf+8
  7903  00ED96  C050  F03F         	movff	_anio+1,?_sprintf+9
  7904  00ED9A  EC44  F07E         	call	_sprintf	;wreg free
  7905                           
  7906                           ;main.c: 237: lcd_write(1,2,buffer1);
  7907  00ED9E  0E00               	movlw	0
  7908  00EDA0  6E35               	movwf	lcd_write@column+1,c
  7909  00EDA2  0E01               	movlw	1
  7910  00EDA4  6E34               	movwf	lcd_write@column,c
  7911  00EDA6  0E00               	movlw	0
  7912  00EDA8  6E37               	movwf	lcd_write@row+1,c
  7913  00EDAA  0E02               	movlw	2
  7914  00EDAC  6E36               	movwf	lcd_write@row,c
  7915  00EDAE  0E80               	movlw	low _buffer1
  7916  00EDB0  6E38               	movwf	lcd_write@string,c
  7917  00EDB2  0E00               	movlw	high _buffer1
  7918  00EDB4  6E39               	movwf	lcd_write@string+1,c
  7919  00EDB6  ECEF  F071         	call	_lcd_write	;wreg free
  7920                           
  7921                           ;main.c: 238: lcd_gotoxy(1, 2);
  7922  00EDBA  0E02               	movlw	2
  7923  00EDBC  6E2E               	movwf	lcd_gotoxy@y,c
  7924  00EDBE  0E01               	movlw	1
  7925  00EDC0  EC38  F072         	call	_lcd_gotoxy
  7926                           
  7927                           ;main.c: 239: lcd_comand(0b00001111);
  7928  00EDC4  0E0F               	movlw	15
  7929  00EDC6  ECC2  F071         	call	_lcd_comand
  7930  00EDCA  0012               	return		;funcret
  7931  00EDCC                     __end_of_activity_submenu_date_config_refresh:
  7932                           	opt stack 0
  7933                           tblptru	equ	0xFF8
  7934                           tblptrh	equ	0xFF7
  7935                           tblptrl	equ	0xFF6
  7936                           tablat	equ	0xFF5
  7937                           prodh	equ	0xFF4
  7938                           prodl	equ	0xFF3
  7939                           intcon	equ	0xFF2
  7940                           indf0	equ	0xFEF
  7941                           postinc0	equ	0xFEE
  7942                           fsr0h	equ	0xFEA
  7943                           fsr0l	equ	0xFE9
  7944                           wreg	equ	0xFE8
  7945                           indf1	equ	0xFE7
  7946                           postdec1	equ	0xFE5
  7947                           fsr1h	equ	0xFE2
  7948                           fsr1l	equ	0xFE1
  7949                           indf2	equ	0xFDF
  7950                           fsr2h	equ	0xFDA
  7951                           fsr2l	equ	0xFD9
  7952                           status	equ	0xFD8
  7953                           
  7954 ;; *************** function _sprintf *****************
  7955 ;; Defined at:
  7956 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;  sp              2   12[COMRAM] PTR unsigned char 
  7959 ;;		 -> buffer1(20), 
  7960 ;;  f               2   14[COMRAM] PTR const unsigned char 
  7961 ;;		 -> STR_55(5), STR_54(5), STR_52(7), STR_51(7), 
  7962 ;;		 -> STR_50(7), STR_49(7), STR_48(7), STR_47(7), 
  7963 ;;		 -> STR_46(15), STR_45(15), STR_24(15), STR_23(15), 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  tmpval          4    0        struct .
  7966 ;;  cp              3    0        PTR const unsigned char 
  7967 ;;  width           2   32[COMRAM] int 
  7968 ;;  val             2   29[COMRAM] unsigned int 
  7969 ;;  ap              2   26[COMRAM] PTR void [1]
  7970 ;;		 -> ?_sprintf(2), 
  7971 ;;  len             2    0        unsigned int 
  7972 ;;  c               1   34[COMRAM] char 
  7973 ;;  prec            1   31[COMRAM] char 
  7974 ;;  flag            1   28[COMRAM] unsigned char 
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  2   12[COMRAM] int 
  7977 ;; Registers used:
  7978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7984 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7988 ;;Total ram usage:       23 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    1
  7991 ;; This function calls:
  7992 ;;		___lwdiv
  7993 ;;		___lwmod
  7994 ;;		___wmul
  7995 ;;		_isdigit
  7996 ;; This function is called by:
  7997 ;;		_activity_submenu_date_config_refresh
  7998 ;;		_activity_submenu_time_config_refresh
  7999 ;;		_home_clock_refresh
  8000 ;;		_home_state_refresh
  8001 ;;		_home_volume_refresh
  8002 ;;		_home_tone_refresh
  8003 ;;		_button_number
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text59
  8008  00FC88                     __ptext59:
  8009                           	opt stack 0
  8010  00FC88                     _sprintf:
  8011                           	opt stack 27
  8012                           
  8013                           ;doprnt.c: 494: va_list ap;
  8014                           ;doprnt.c: 499: signed char c;
  8015                           ;doprnt.c: 501: int width;
  8016                           ;doprnt.c: 506: signed char prec;
  8017                           ;doprnt.c: 508: unsigned char flag;
  8018                           ;doprnt.c: 523: union {
  8019                           ;doprnt.c: 524: unsigned long vd;
  8020                           ;doprnt.c: 525: double integ;
  8021                           ;doprnt.c: 526: } tmpval;
  8022                           ;doprnt.c: 528: unsigned int val;
  8023                           ;doprnt.c: 529: unsigned len;
  8024                           ;doprnt.c: 530: const char * cp;
  8025                           ;doprnt.c: 533: *ap = __va_start();
  8026                           
  8027                           ;incstack = 0
  8028  00FC88  0E3A               	movlw	low (?_sprintf+4)
  8029  00FC8A  6E44               	movwf	sprintf@ap,c
  8030  00FC8C  0E00               	movlw	high (?_sprintf+4)
  8031  00FC8E  6E45               	movwf	sprintf@ap+1,c
  8032                           
  8033                           ;doprnt.c: 536: while(c = *f++) {
  8034  00FC90  D117               	goto	l3417
  8035  00FC92                     l3335:
  8036                           
  8037                           ;doprnt.c: 538: if(c != '%')
  8038  00FC92  0E25               	movlw	37
  8039  00FC94  184C               	xorwf	sprintf@c,w,c
  8040  00FC96  B4D8               	btfsc	status,2,c
  8041  00FC98  D009               	goto	l3341
  8042                           
  8043                           ;doprnt.c: 540: {
  8044                           ;doprnt.c: 541: ((*sp++ = (c)));
  8045  00FC9A  C036  FFD9         	movff	sprintf@sp,fsr2l
  8046  00FC9E  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  8047  00FCA2  C04C  FFDF         	movff	sprintf@c,indf2
  8048  00FCA6  4A36               	infsnz	sprintf@sp,f,c
  8049  00FCA8  2A37               	incf	sprintf@sp+1,f,c
  8050                           
  8051                           ;doprnt.c: 542: continue;
  8052  00FCAA  D10A               	goto	l3417
  8053  00FCAC                     l3341:
  8054                           
  8055                           ;doprnt.c: 543: }
  8056                           ;doprnt.c: 546: width = 0;
  8057  00FCAC  0E00               	movlw	0
  8058  00FCAE  6E4B               	movwf	sprintf@width+1,c
  8059  00FCB0  0E00               	movlw	0
  8060  00FCB2  6E4A               	movwf	sprintf@width,c
  8061                           
  8062                           ;doprnt.c: 548: flag = 0;
  8063  00FCB4  0E00               	movlw	0
  8064  00FCB6  6E46               	movwf	sprintf@flag,c
  8065                           
  8066                           ;doprnt.c: 551: switch(*f) {
  8067                           
  8068                           ;doprnt.c: 550: for(;;) {
  8069  00FCB8  D005               	goto	l3347
  8070  00FCBA                     l3343:
  8071                           
  8072                           ;doprnt.c: 580: flag |= 0x04;
  8073  00FCBA  8446               	bsf	sprintf@flag,2,c
  8074                           
  8075                           ;doprnt.c: 581: f++;
  8076  00FCBC  4A38               	infsnz	sprintf@f,f,c
  8077  00FCBE  2A39               	incf	sprintf@f+1,f,c
  8078                           
  8079                           ;doprnt.c: 582: continue;
  8080  00FCC0  D001               	goto	l3347
  8081                           
  8082                           ;doprnt.c: 584: }
  8083  00FCC2  D00B               	goto	l3349
  8084  00FCC4                     l3347:
  8085  00FCC4  C038  FFF6         	movff	sprintf@f,tblptrl
  8086  00FCC8  C039  FFF7         	movff	sprintf@f+1,tblptrh
  8087  00FCCC                     	if	0	;tblptru may be non-zero
  8088  00FCCC                     	endif
  8089  00FCCC                     	if	0	;tblptru may be non-zero
  8090  00FCCC                     	endif
  8091  00FCCC  0008               	tblrd		*
  8092  00FCCE  50F5               	movf	tablat,w,c
  8093                           
  8094                           ; Switch size 1, requested type "space"
  8095                           ; Number of cases is 1, Range of values is 48 to 48
  8096                           ; switch strategies available:
  8097                           ; Name         Instructions Cycles
  8098                           ; simple_byte            4     3 (average)
  8099                           ;	Chosen strategy is simple_byte
  8100  00FCD0  0A30               	xorlw	48	; case 48
  8101  00FCD2  B4D8               	btfsc	status,2,c
  8102  00FCD4  D7F2               	goto	l3343
  8103                           
  8104                           ;doprnt.c: 585: break;
  8105  00FCD6  D001               	goto	l3349
  8106                           
  8107                           ;doprnt.c: 586: }
  8108  00FCD8  D7F5               	goto	l3347
  8109  00FCDA                     l3349:
  8110                           
  8111                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8112  00FCDA  C038  FFF6         	movff	sprintf@f,tblptrl
  8113  00FCDE  C039  FFF7         	movff	sprintf@f+1,tblptrh
  8114  00FCE2                     	if	0	;tblptru may be non-zero
  8115  00FCE2                     	endif
  8116  00FCE2                     	if	0	;tblptru may be non-zero
  8117  00FCE2                     	endif
  8118  00FCE2  0008               	tblrd		*
  8119  00FCE4  50F5               	movf	tablat,w,c
  8120  00FCE6  EC16  F072         	call	_isdigit
  8121  00FCEA  A0D8               	btfss	status,0,c
  8122  00FCEC  D03A               	goto	l3365
  8123                           
  8124                           ;doprnt.c: 598: width = 0;
  8125  00FCEE  0E00               	movlw	0
  8126  00FCF0  6E4B               	movwf	sprintf@width+1,c
  8127  00FCF2  0E00               	movlw	0
  8128  00FCF4  6E4A               	movwf	sprintf@width,c
  8129  00FCF6  D000               	goto	l3353
  8130  00FCF8                     l3353:
  8131                           
  8132                           ;doprnt.c: 600: width *= 10;
  8133  00FCF8  C04A  F02A         	movff	sprintf@width,___wmul@multiplier
  8134  00FCFC  C04B  F02B         	movff	sprintf@width+1,___wmul@multiplier+1
  8135  00FD00  0E00               	movlw	0
  8136  00FD02  6E2D               	movwf	___wmul@multiplicand+1,c
  8137  00FD04  0E0A               	movlw	10
  8138  00FD06  6E2C               	movwf	___wmul@multiplicand,c
  8139  00FD08  EC5C  F072         	call	___wmul	;wreg free
  8140  00FD0C  C02A  F04A         	movff	?___wmul,sprintf@width
  8141  00FD10  C02B  F04B         	movff	?___wmul+1,sprintf@width+1
  8142                           
  8143                           ;doprnt.c: 601: width += *f++ - '0';
  8144  00FD14  0ED0               	movlw	208
  8145  00FD16  6E40               	movwf	??_sprintf& (0+255),c
  8146  00FD18  0EFF               	movlw	255
  8147  00FD1A  6E41               	movwf	(??_sprintf+1)& (0+255),c
  8148  00FD1C  C038  FFF6         	movff	sprintf@f,tblptrl
  8149  00FD20  C039  FFF7         	movff	sprintf@f+1,tblptrh
  8150  00FD24                     	if	0	;tblptru may be non-zero
  8151  00FD24                     	endif
  8152  00FD24                     	if	0	;tblptru may be non-zero
  8153  00FD24                     	endif
  8154  00FD24  0008               	tblrd		*
  8155  00FD26  50F5               	movf	tablat,w,c
  8156  00FD28  6E42               	movwf	(??_sprintf+2)& (0+255),c
  8157  00FD2A  6A43               	clrf	(??_sprintf+3)& (0+255),c
  8158  00FD2C  5040               	movf	??_sprintf,w,c
  8159  00FD2E  2642               	addwf	??_sprintf+2,f,c
  8160  00FD30  5041               	movf	??_sprintf+1,w,c
  8161  00FD32  2243               	addwfc	??_sprintf+3,f,c
  8162  00FD34  5042               	movf	??_sprintf+2,w,c
  8163  00FD36  264A               	addwf	sprintf@width,f,c
  8164  00FD38  5043               	movf	??_sprintf+3,w,c
  8165  00FD3A  224B               	addwfc	sprintf@width+1,f,c
  8166  00FD3C  4A38               	infsnz	sprintf@f,f,c
  8167  00FD3E  2A39               	incf	sprintf@f+1,f,c
  8168                           
  8169                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8170  00FD40  C038  FFF6         	movff	sprintf@f,tblptrl
  8171  00FD44  C039  FFF7         	movff	sprintf@f+1,tblptrh
  8172  00FD48                     	if	0	;tblptru may be non-zero
  8173  00FD48                     	endif
  8174  00FD48                     	if	0	;tblptru may be non-zero
  8175  00FD48                     	endif
  8176  00FD48  0008               	tblrd		*
  8177  00FD4A  50F5               	movf	tablat,w,c
  8178  00FD4C  EC16  F072         	call	_isdigit
  8179  00FD50  A0D8               	btfss	status,0,c
  8180  00FD52  D007               	goto	l3365
  8181  00FD54  D7D1               	goto	l3353
  8182                           
  8183                           ;doprnt.c: 608: }
  8184                           ;doprnt.c: 635: switch(c = *f++) {
  8185  00FD56  D005               	goto	l3365
  8186                           
  8187                           ;doprnt.c: 638: goto alldone;
  8188                           
  8189                           ;doprnt.c: 637: case 0:
  8190  00FD58  D0C1               	goto	l3419
  8191                           
  8192                           ;doprnt.c: 813: continue;
  8193                           
  8194                           ;doprnt.c: 802: default:
  8195  00FD5A  D0B2               	goto	l3417
  8196  00FD5C                     l3361:
  8197                           
  8198                           ;doprnt.c: 818: flag |= 0xC0;
  8199  00FD5C  0EC0               	movlw	192
  8200  00FD5E  1246               	iorwf	sprintf@flag,f,c
  8201                           
  8202                           ;doprnt.c: 822: }
  8203                           
  8204                           ;doprnt.c: 819: break;
  8205  00FD60  D011               	goto	l3367
  8206  00FD62                     l3365:
  8207  00FD62  C038  FFF6         	movff	sprintf@f,tblptrl
  8208  00FD66  C039  FFF7         	movff	sprintf@f+1,tblptrh
  8209  00FD6A  4A38               	infsnz	sprintf@f,f,c
  8210  00FD6C  2A39               	incf	sprintf@f+1,f,c
  8211  00FD6E                     	if	0	;tblptru may be non-zero
  8212  00FD6E                     	endif
  8213  00FD6E                     	if	0	;tblptru may be non-zero
  8214  00FD6E                     	endif
  8215  00FD6E  0008               	tblrd		*
  8216  00FD70  CFF5 F04C          	movff	tablat,sprintf@c
  8217  00FD74  504C               	movf	sprintf@c,w,c
  8218                           
  8219                           ; Switch size 1, requested type "space"
  8220                           ; Number of cases is 2, Range of values is 0 to 117
  8221                           ; switch strategies available:
  8222                           ; Name         Instructions Cycles
  8223                           ; simple_byte            7     4 (average)
  8224                           ;	Chosen strategy is simple_byte
  8225  00FD76  0A00               	xorlw	0	; case 0
  8226  00FD78  B4D8               	btfsc	status,2,c
  8227  00FD7A  D0B0               	goto	l3419
  8228  00FD7C  0A75               	xorlw	117	; case 117
  8229  00FD7E  B4D8               	btfsc	status,2,c
  8230  00FD80  D7ED               	goto	l3361
  8231  00FD82  D09E               	goto	l3417
  8232  00FD84                     l3367:
  8233                           
  8234                           ;doprnt.c: 1273: {
  8235                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8236  00FD84  C044  FFD9         	movff	sprintf@ap,fsr2l
  8237  00FD88  C045  FFDA         	movff	sprintf@ap+1,fsr2h
  8238  00FD8C  CFDE F047          	movff	postinc2,sprintf@val
  8239  00FD90  CFDD F048          	movff	postdec2,sprintf@val+1
  8240  00FD94  0E02               	movlw	2
  8241  00FD96  2644               	addwf	sprintf@ap,f,c
  8242  00FD98  0E00               	movlw	0
  8243  00FD9A  2245               	addwfc	sprintf@ap+1,f,c
  8244                           
  8245                           ;doprnt.c: 1287: }
  8246                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8247  00FD9C  0E01               	movlw	1
  8248  00FD9E  6E4C               	movwf	sprintf@c,c
  8249  00FDA0                     l3373:
  8250  00FDA0  0E05               	movlw	5
  8251  00FDA2  184C               	xorwf	sprintf@c,w,c
  8252  00FDA4  B4D8               	btfsc	status,2,c
  8253  00FDA6  D016               	goto	l3385
  8254  00FDA8  D001               	goto	l3377
  8255  00FDAA  D014               	goto	l3385
  8256  00FDAC                     l3377:
  8257                           
  8258                           ;doprnt.c: 1306: if(val < dpowers[c])
  8259  00FDAC  504C               	movf	sprintf@c,w,c
  8260  00FDAE  0D02               	mullw	2
  8261  00FDB0  0EED               	movlw	low _dpowers
  8262  00FDB2  24F3               	addwf	prodl,w,c
  8263  00FDB4  6EF6               	movwf	tblptrl,c
  8264  00FDB6  0EFE               	movlw	high _dpowers
  8265  00FDB8  20F4               	addwfc	prodh,w,c
  8266  00FDBA  6EF7               	movwf	tblptrh,c
  8267  00FDBC                     	if	0	;There are less than 3 active tblptr bytes
  8268  00FDBC                     	endif
  8269  00FDBC  0009               	tblrd		*+
  8270  00FDBE  50F5               	movf	tablat,w,c
  8271  00FDC0  5C47               	subwf	sprintf@val,w,c
  8272  00FDC2  0009               	tblrd		*+
  8273  00FDC4  50F5               	movf	tablat,w,c
  8274  00FDC6  5848               	subwfb	sprintf@val+1,w,c
  8275  00FDC8  A0D8               	btfss	status,0,c
  8276  00FDCA  D004               	goto	l3385
  8277  00FDCC  D001               	goto	l3381
  8278                           
  8279                           ;doprnt.c: 1307: break;
  8280  00FDCE  D002               	goto	l3385
  8281  00FDD0                     l3381:
  8282  00FDD0  2A4C               	incf	sprintf@c,f,c
  8283  00FDD2  D7E6               	goto	l3373
  8284  00FDD4                     l3385:
  8285                           
  8286                           ;doprnt.c: 1381: if(width > c)
  8287  00FDD4  0E80               	movlw	128
  8288  00FDD6  BE4C               	btfsc	sprintf@c,7,c
  8289  00FDD8  0E7F               	movlw	127
  8290  00FDDA  6E40               	movwf	??_sprintf& (0+255),c
  8291  00FDDC  504A               	movf	sprintf@width,w,c
  8292  00FDDE  5C4C               	subwf	sprintf@c,w,c
  8293  00FDE0  504B               	movf	sprintf@width+1,w,c
  8294  00FDE2  0A80               	xorlw	128
  8295  00FDE4  5840               	subwfb	??_sprintf& (0+255),w,c
  8296  00FDE6  B0D8               	btfsc	status,0,c
  8297  00FDE8  D007               	goto	l3389
  8298                           
  8299                           ;doprnt.c: 1382: width -= c;
  8300  00FDEA  504C               	movf	sprintf@c,w,c
  8301  00FDEC  5E4A               	subwf	sprintf@width,f,c
  8302  00FDEE  0E00               	movlw	0
  8303  00FDF0  BE4C               	btfsc	sprintf@c,7,c
  8304  00FDF2  0EFF               	movlw	255
  8305  00FDF4  5A4B               	subwfb	sprintf@width+1,f,c
  8306  00FDF6  D005               	goto	l3391
  8307  00FDF8                     l3389:
  8308                           
  8309                           ;doprnt.c: 1383: else
  8310                           ;doprnt.c: 1384: width = 0;
  8311  00FDF8  0E00               	movlw	0
  8312  00FDFA  6E4B               	movwf	sprintf@width+1,c
  8313  00FDFC  0E00               	movlw	0
  8314  00FDFE  6E4A               	movwf	sprintf@width,c
  8315  00FE00  D000               	goto	l3391
  8316  00FE02                     l3391:
  8317                           
  8318                           ;doprnt.c: 1387: if(flag & 0x04) {
  8319  00FE02  A446               	btfss	sprintf@flag,2,c
  8320  00FE04  D015               	goto	l3401
  8321                           
  8322                           ;doprnt.c: 1415: if(width)
  8323  00FE06  504A               	movf	sprintf@width,w,c
  8324  00FE08  104B               	iorwf	sprintf@width+1,w,c
  8325  00FE0A  B4D8               	btfsc	status,2,c
  8326  00FE0C  D026               	goto	l571
  8327  00FE0E                     l3395:
  8328                           
  8329                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8330  00FE0E  C036  FFD9         	movff	sprintf@sp,fsr2l
  8331  00FE12  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  8332  00FE16  0E30               	movlw	48
  8333  00FE18  6EDF               	movwf	indf2,c
  8334  00FE1A  4A36               	infsnz	sprintf@sp,f,c
  8335  00FE1C  2A37               	incf	sprintf@sp+1,f,c
  8336                           
  8337                           ;doprnt.c: 1418: while(--width);
  8338  00FE1E  064A               	decf	sprintf@width,f,c
  8339  00FE20  A0D8               	btfss	status,0,c
  8340  00FE22  064B               	decf	sprintf@width+1,f,c
  8341  00FE24  504A               	movf	sprintf@width,w,c
  8342  00FE26  104B               	iorwf	sprintf@width+1,w,c
  8343  00FE28  B4D8               	btfsc	status,2,c
  8344  00FE2A  D017               	goto	l571
  8345  00FE2C  D7F0               	goto	l3395
  8346                           
  8347                           ;doprnt.c: 1420: } else
  8348  00FE2E  D015               	goto	l571
  8349  00FE30                     l3401:
  8350                           
  8351                           ;doprnt.c: 1422: {
  8352                           ;doprnt.c: 1424: if(width
  8353                           ;doprnt.c: 1428: )
  8354  00FE30  504A               	movf	sprintf@width,w,c
  8355  00FE32  104B               	iorwf	sprintf@width+1,w,c
  8356  00FE34  B4D8               	btfsc	status,2,c
  8357  00FE36  D011               	goto	l571
  8358  00FE38                     l3403:
  8359                           
  8360                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8361  00FE38  C036  FFD9         	movff	sprintf@sp,fsr2l
  8362  00FE3C  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  8363  00FE40  0E20               	movlw	32
  8364  00FE42  6EDF               	movwf	indf2,c
  8365  00FE44  4A36               	infsnz	sprintf@sp,f,c
  8366  00FE46  2A37               	incf	sprintf@sp+1,f,c
  8367                           
  8368                           ;doprnt.c: 1431: while(--width);
  8369  00FE48  064A               	decf	sprintf@width,f,c
  8370  00FE4A  A0D8               	btfss	status,0,c
  8371  00FE4C  064B               	decf	sprintf@width+1,f,c
  8372  00FE4E  504A               	movf	sprintf@width,w,c
  8373  00FE50  104B               	iorwf	sprintf@width+1,w,c
  8374  00FE52  B4D8               	btfsc	status,2,c
  8375  00FE54  D002               	goto	l571
  8376  00FE56  D7F0               	goto	l3403
  8377  00FE58  D000               	goto	l571
  8378  00FE5A                     l571:
  8379                           
  8380                           ;doprnt.c: 1469: }
  8381                           ;doprnt.c: 1472: prec = c;
  8382  00FE5A  C04C  F049         	movff	sprintf@c,sprintf@prec
  8383                           
  8384                           ;doprnt.c: 1474: while(prec--) {
  8385  00FE5E  D02A               	goto	l3415
  8386  00FE60                     l3409:
  8387                           
  8388                           ;doprnt.c: 1478: {
  8389                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8390  00FE60  5049               	movf	sprintf@prec,w,c
  8391  00FE62  0D02               	mullw	2
  8392  00FE64  0EED               	movlw	low _dpowers
  8393  00FE66  24F3               	addwf	prodl,w,c
  8394  00FE68  6EF6               	movwf	tblptrl,c
  8395  00FE6A  0EFE               	movlw	high _dpowers
  8396  00FE6C  20F4               	addwfc	prodh,w,c
  8397  00FE6E  6EF7               	movwf	tblptrh,c
  8398  00FE70                     	if	0	;There are less than 3 active tblptr bytes
  8399  00FE70                     	endif
  8400  00FE70  0009               	tblrd		*+
  8401  00FE72  CFF5 F02C          	movff	tablat,___lwdiv@divisor
  8402  00FE76  000A               	tblrd		*-
  8403  00FE78  CFF5 F02D          	movff	tablat,___lwdiv@divisor+1
  8404  00FE7C  C047  F02A         	movff	sprintf@val,___lwdiv@dividend
  8405  00FE80  C048  F02B         	movff	sprintf@val+1,___lwdiv@dividend+1
  8406  00FE84  EC13  F077         	call	___lwdiv	;wreg free
  8407  00FE88  C02A  F031         	movff	?___lwdiv,___lwmod@dividend
  8408  00FE8C  C02B  F032         	movff	?___lwdiv+1,___lwmod@dividend+1
  8409  00FE90  0E00               	movlw	0
  8410  00FE92  6E34               	movwf	___lwmod@divisor+1,c
  8411  00FE94  0E0A               	movlw	10
  8412  00FE96  6E33               	movwf	___lwmod@divisor,c
  8413  00FE98  EC53  F075         	call	___lwmod	;wreg free
  8414  00FE9C  5031               	movf	?___lwmod,w,c
  8415  00FE9E  0F30               	addlw	48
  8416  00FEA0  6E4C               	movwf	sprintf@c,c
  8417                           
  8418                           ;doprnt.c: 1523: }
  8419                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8420  00FEA2  C036  FFD9         	movff	sprintf@sp,fsr2l
  8421  00FEA6  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  8422  00FEAA  C04C  FFDF         	movff	sprintf@c,indf2
  8423  00FEAE  4A36               	infsnz	sprintf@sp,f,c
  8424  00FEB0  2A37               	incf	sprintf@sp+1,f,c
  8425  00FEB2  D000               	goto	l3415
  8426  00FEB4                     l3415:
  8427  00FEB4  0649               	decf	sprintf@prec,f,c
  8428  00FEB6  2849               	incf	sprintf@prec,w,c
  8429  00FEB8  B4D8               	btfsc	status,2,c
  8430  00FEBA  D002               	goto	l3417
  8431  00FEBC  D7D1               	goto	l3409
  8432  00FEBE  D000               	goto	l3417
  8433  00FEC0                     l3417:
  8434  00FEC0  C038  FFF6         	movff	sprintf@f,tblptrl
  8435  00FEC4  C039  FFF7         	movff	sprintf@f+1,tblptrh
  8436  00FEC8  4A38               	infsnz	sprintf@f,f,c
  8437  00FECA  2A39               	incf	sprintf@f+1,f,c
  8438  00FECC                     	if	0	;tblptru may be non-zero
  8439  00FECC                     	endif
  8440  00FECC                     	if	0	;tblptru may be non-zero
  8441  00FECC                     	endif
  8442  00FECC  0008               	tblrd		*
  8443  00FECE  CFF5 F04C          	movff	tablat,sprintf@c
  8444  00FED2  504C               	movf	sprintf@c,w,c
  8445  00FED4  B4D8               	btfsc	status,2,c
  8446  00FED6  D002               	goto	l3419
  8447  00FED8  D6DC               	goto	l3335
  8448  00FEDA  D000               	goto	l3419
  8449  00FEDC                     l3419:
  8450                           
  8451                           ;doprnt.c: 1538: *sp = 0;
  8452  00FEDC  C036  FFD9         	movff	sprintf@sp,fsr2l
  8453  00FEE0  C037  FFDA         	movff	sprintf@sp+1,fsr2h
  8454  00FEE4  0E00               	movlw	0
  8455  00FEE6  6EDF               	movwf	indf2,c
  8456  00FEE8  0012               	return	
  8457                           
  8458                           ;doprnt.c: 1540: return 0;
  8459                           ;	Return value of _sprintf is never used
  8460  00FEEA  0012               	return		;funcret
  8461  00FEEC                     __end_of_sprintf:
  8462                           	opt stack 0
  8463                           tblptru	equ	0xFF8
  8464                           tblptrh	equ	0xFF7
  8465                           tblptrl	equ	0xFF6
  8466                           tablat	equ	0xFF5
  8467                           prodh	equ	0xFF4
  8468                           prodl	equ	0xFF3
  8469                           intcon	equ	0xFF2
  8470                           indf0	equ	0xFEF
  8471                           postinc0	equ	0xFEE
  8472                           fsr0h	equ	0xFEA
  8473                           fsr0l	equ	0xFE9
  8474                           wreg	equ	0xFE8
  8475                           indf1	equ	0xFE7
  8476                           postdec1	equ	0xFE5
  8477                           fsr1h	equ	0xFE2
  8478                           fsr1l	equ	0xFE1
  8479                           indf2	equ	0xFDF
  8480                           postinc2	equ	0xFDE
  8481                           postdec2	equ	0xFDD
  8482                           fsr2h	equ	0xFDA
  8483                           fsr2l	equ	0xFD9
  8484                           status	equ	0xFD8
  8485                           
  8486 ;; *************** function _isdigit *****************
  8487 ;; Defined at:
  8488 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;  c               1    wreg     unsigned char 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  c               1    2[COMRAM] unsigned char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;		None               void
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8506 ;;Total ram usage:        3 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; This function calls:
  8509 ;;		Nothing
  8510 ;; This function is called by:
  8511 ;;		_sprintf
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text60
  8516  00E42C                     __ptext60:
  8517                           	opt stack 0
  8518  00E42C                     _isdigit:
  8519                           	opt stack 27
  8520                           
  8521                           ;incstack = 0
  8522                           ;isdigit@c stored from wreg
  8523  00E42C  6E2C               	movwf	isdigit@c,c
  8524  00E42E  0E00               	movlw	0
  8525  00E430  6E2B               	movwf	_isdigit$2205,c
  8526  00E432  0E3A               	movlw	58
  8527  00E434  602C               	cpfslt	isdigit@c,c
  8528  00E436  D006               	goto	l3115
  8529  00E438  0E2F               	movlw	47
  8530  00E43A  642C               	cpfsgt	isdigit@c,c
  8531  00E43C  D003               	goto	l3115
  8532  00E43E  0E01               	movlw	1
  8533  00E440  6E2B               	movwf	_isdigit$2205,c
  8534  00E442  D000               	goto	l3115
  8535  00E444                     l3115:
  8536  00E444  C02B  F02A         	movff	_isdigit$2205,??_isdigit
  8537  00E448  302A               	rrcf	??_isdigit,w,c
  8538  00E44A  0012               	return	
  8539  00E44C  0012               	return		;funcret
  8540  00E44E                     __end_of_isdigit:
  8541                           	opt stack 0
  8542                           tblptru	equ	0xFF8
  8543                           tblptrh	equ	0xFF7
  8544                           tblptrl	equ	0xFF6
  8545                           tablat	equ	0xFF5
  8546                           prodh	equ	0xFF4
  8547                           prodl	equ	0xFF3
  8548                           intcon	equ	0xFF2
  8549                           indf0	equ	0xFEF
  8550                           postinc0	equ	0xFEE
  8551                           fsr0h	equ	0xFEA
  8552                           fsr0l	equ	0xFE9
  8553                           wreg	equ	0xFE8
  8554                           indf1	equ	0xFE7
  8555                           postdec1	equ	0xFE5
  8556                           fsr1h	equ	0xFE2
  8557                           fsr1l	equ	0xFE1
  8558                           indf2	equ	0xFDF
  8559                           postinc2	equ	0xFDE
  8560                           postdec2	equ	0xFDD
  8561                           fsr2h	equ	0xFDA
  8562                           fsr2l	equ	0xFD9
  8563                           status	equ	0xFD8
  8564                           
  8565 ;; *************** function ___wmul *****************
  8566 ;; Defined at:
  8567 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  multiplier      2    0[COMRAM] unsigned int 
  8570 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;  product         2    4[COMRAM] unsigned int 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  2    0[COMRAM] unsigned int 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0, prodl, prodh
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8585 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8586 ;;Total ram usage:        6 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_sprintf
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text61
  8596  00E4B8                     __ptext61:
  8597                           	opt stack 0
  8598  00E4B8                     ___wmul:
  8599                           	opt stack 27
  8600                           
  8601                           ;incstack = 0
  8602  00E4B8  502A               	movf	___wmul@multiplier,w,c
  8603  00E4BA  022C               	mulwf	___wmul@multiplicand,c
  8604  00E4BC  CFF3 F02E          	movff	prodl,___wmul@product
  8605  00E4C0  CFF4 F02F          	movff	prodh,___wmul@product+1
  8606  00E4C4  502A               	movf	___wmul@multiplier,w,c
  8607  00E4C6  022D               	mulwf	___wmul@multiplicand+1,c
  8608  00E4C8  50F3               	movf	prodl,w,c
  8609  00E4CA  262F               	addwf	___wmul@product+1,f,c
  8610  00E4CC  502B               	movf	___wmul@multiplier+1,w,c
  8611  00E4CE  022C               	mulwf	___wmul@multiplicand,c
  8612  00E4D0  50F3               	movf	prodl,w,c
  8613  00E4D2  262F               	addwf	___wmul@product+1,f,c
  8614  00E4D4  C02E  F02A         	movff	___wmul@product,?___wmul
  8615  00E4D8  C02F  F02B         	movff	___wmul@product+1,?___wmul+1
  8616  00E4DC  0012               	return	
  8617  00E4DE  0012               	return		;funcret
  8618  00E4E0                     __end_of___wmul:
  8619                           	opt stack 0
  8620                           tblptru	equ	0xFF8
  8621                           tblptrh	equ	0xFF7
  8622                           tblptrl	equ	0xFF6
  8623                           tablat	equ	0xFF5
  8624                           prodh	equ	0xFF4
  8625                           prodl	equ	0xFF3
  8626                           intcon	equ	0xFF2
  8627                           indf0	equ	0xFEF
  8628                           postinc0	equ	0xFEE
  8629                           fsr0h	equ	0xFEA
  8630                           fsr0l	equ	0xFE9
  8631                           wreg	equ	0xFE8
  8632                           indf1	equ	0xFE7
  8633                           postdec1	equ	0xFE5
  8634                           fsr1h	equ	0xFE2
  8635                           fsr1l	equ	0xFE1
  8636                           indf2	equ	0xFDF
  8637                           postinc2	equ	0xFDE
  8638                           postdec2	equ	0xFDD
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8
  8642                           
  8643 ;; *************** function ___lwmod *****************
  8644 ;; Defined at:
  8645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  dividend        2    7[COMRAM] unsigned int 
  8648 ;;  divisor         2    9[COMRAM] unsigned int 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  counter         1   11[COMRAM] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  2    7[COMRAM] unsigned int 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8663 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8664 ;;Total ram usage:        5 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_sprintf
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text62
  8674  00EAA6                     __ptext62:
  8675                           	opt stack 0
  8676  00EAA6                     ___lwmod:
  8677                           	opt stack 27
  8678                           
  8679                           ;incstack = 0
  8680  00EAA6  5033               	movf	___lwmod@divisor,w,c
  8681  00EAA8  1034               	iorwf	___lwmod@divisor+1,w,c
  8682  00EAAA  B4D8               	btfsc	status,2,c
  8683  00EAAC  D01D               	goto	l1225
  8684  00EAAE  0E01               	movlw	1
  8685  00EAB0  6E35               	movwf	___lwmod@counter,c
  8686  00EAB2  D005               	goto	l3153
  8687  00EAB4                     l3151:
  8688  00EAB4  90D8               	bcf	status,0,c
  8689  00EAB6  3633               	rlcf	___lwmod@divisor,f,c
  8690  00EAB8  3634               	rlcf	___lwmod@divisor+1,f,c
  8691  00EABA  2A35               	incf	___lwmod@counter,f,c
  8692  00EABC  D000               	goto	l3153
  8693  00EABE                     l3153:
  8694  00EABE  BE34               	btfsc	___lwmod@divisor+1,7,c
  8695  00EAC0  D002               	goto	l3155
  8696  00EAC2  D7F8               	goto	l3151
  8697  00EAC4  D000               	goto	l3155
  8698  00EAC6                     l3155:
  8699  00EAC6  5033               	movf	___lwmod@divisor,w,c
  8700  00EAC8  5C31               	subwf	___lwmod@dividend,w,c
  8701  00EACA  5034               	movf	___lwmod@divisor+1,w,c
  8702  00EACC  5832               	subwfb	___lwmod@dividend+1,w,c
  8703  00EACE  A0D8               	btfss	status,0,c
  8704  00EAD0  D005               	goto	l3159
  8705  00EAD2  5033               	movf	___lwmod@divisor,w,c
  8706  00EAD4  5E31               	subwf	___lwmod@dividend,f,c
  8707  00EAD6  5034               	movf	___lwmod@divisor+1,w,c
  8708  00EAD8  5A32               	subwfb	___lwmod@dividend+1,f,c
  8709  00EADA  D000               	goto	l3159
  8710  00EADC                     l3159:
  8711  00EADC  90D8               	bcf	status,0,c
  8712  00EADE  3234               	rrcf	___lwmod@divisor+1,f,c
  8713  00EAE0  3233               	rrcf	___lwmod@divisor,f,c
  8714  00EAE2  2E35               	decfsz	___lwmod@counter,f,c
  8715  00EAE4  D7F0               	goto	l3155
  8716  00EAE6  D000               	goto	l1225
  8717  00EAE8                     l1225:
  8718  00EAE8  C031  F031         	movff	___lwmod@dividend,?___lwmod
  8719  00EAEC  C032  F032         	movff	___lwmod@dividend+1,?___lwmod+1
  8720  00EAF0  0012               	return		;funcret
  8721  00EAF2                     __end_of___lwmod:
  8722                           	opt stack 0
  8723                           tblptru	equ	0xFF8
  8724                           tblptrh	equ	0xFF7
  8725                           tblptrl	equ	0xFF6
  8726                           tablat	equ	0xFF5
  8727                           prodh	equ	0xFF4
  8728                           prodl	equ	0xFF3
  8729                           intcon	equ	0xFF2
  8730                           indf0	equ	0xFEF
  8731                           postinc0	equ	0xFEE
  8732                           fsr0h	equ	0xFEA
  8733                           fsr0l	equ	0xFE9
  8734                           wreg	equ	0xFE8
  8735                           indf1	equ	0xFE7
  8736                           postdec1	equ	0xFE5
  8737                           fsr1h	equ	0xFE2
  8738                           fsr1l	equ	0xFE1
  8739                           indf2	equ	0xFDF
  8740                           postinc2	equ	0xFDE
  8741                           postdec2	equ	0xFDD
  8742                           fsr2h	equ	0xFDA
  8743                           fsr2l	equ	0xFD9
  8744                           status	equ	0xFD8
  8745                           
  8746 ;; *************** function ___lwdiv *****************
  8747 ;; Defined at:
  8748 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;  dividend        2    0[COMRAM] unsigned int 
  8751 ;;  divisor         2    2[COMRAM] unsigned int 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;  quotient        2    4[COMRAM] unsigned int 
  8754 ;;  counter         1    6[COMRAM] unsigned char 
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  2    0[COMRAM] unsigned int 
  8757 ;; Registers used:
  8758 ;;		wreg, status,2, status,0
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8765 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;Total ram usage:        7 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_sprintf
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text63
  8778  00EE26                     __ptext63:
  8779                           	opt stack 0
  8780  00EE26                     ___lwdiv:
  8781                           	opt stack 27
  8782                           
  8783                           ;incstack = 0
  8784  00EE26  0E00               	movlw	0
  8785  00EE28  6E2F               	movwf	___lwdiv@quotient+1,c
  8786  00EE2A  0E00               	movlw	0
  8787  00EE2C  6E2E               	movwf	___lwdiv@quotient,c
  8788  00EE2E  502C               	movf	___lwdiv@divisor,w,c
  8789  00EE30  102D               	iorwf	___lwdiv@divisor+1,w,c
  8790  00EE32  B4D8               	btfsc	status,2,c
  8791  00EE34  D021               	goto	l1215
  8792  00EE36  0E01               	movlw	1
  8793  00EE38  6E30               	movwf	___lwdiv@counter,c
  8794  00EE3A  D005               	goto	l3133
  8795  00EE3C                     l3131:
  8796  00EE3C  90D8               	bcf	status,0,c
  8797  00EE3E  362C               	rlcf	___lwdiv@divisor,f,c
  8798  00EE40  362D               	rlcf	___lwdiv@divisor+1,f,c
  8799  00EE42  2A30               	incf	___lwdiv@counter,f,c
  8800  00EE44  D000               	goto	l3133
  8801  00EE46                     l3133:
  8802  00EE46  BE2D               	btfsc	___lwdiv@divisor+1,7,c
  8803  00EE48  D002               	goto	l3135
  8804  00EE4A  D7F8               	goto	l3131
  8805  00EE4C  D000               	goto	l3135
  8806  00EE4E                     l3135:
  8807  00EE4E  90D8               	bcf	status,0,c
  8808  00EE50  362E               	rlcf	___lwdiv@quotient,f,c
  8809  00EE52  362F               	rlcf	___lwdiv@quotient+1,f,c
  8810  00EE54  502C               	movf	___lwdiv@divisor,w,c
  8811  00EE56  5C2A               	subwf	___lwdiv@dividend,w,c
  8812  00EE58  502D               	movf	___lwdiv@divisor+1,w,c
  8813  00EE5A  582B               	subwfb	___lwdiv@dividend+1,w,c
  8814  00EE5C  A0D8               	btfss	status,0,c
  8815  00EE5E  D006               	goto	l3143
  8816  00EE60  502C               	movf	___lwdiv@divisor,w,c
  8817  00EE62  5E2A               	subwf	___lwdiv@dividend,f,c
  8818  00EE64  502D               	movf	___lwdiv@divisor+1,w,c
  8819  00EE66  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  8820  00EE68  802E               	bsf	___lwdiv@quotient,0,c
  8821  00EE6A  D000               	goto	l3143
  8822  00EE6C                     l3143:
  8823  00EE6C  90D8               	bcf	status,0,c
  8824  00EE6E  322D               	rrcf	___lwdiv@divisor+1,f,c
  8825  00EE70  322C               	rrcf	___lwdiv@divisor,f,c
  8826  00EE72  2E30               	decfsz	___lwdiv@counter,f,c
  8827  00EE74  D7EC               	goto	l3135
  8828  00EE76  D000               	goto	l1215
  8829  00EE78                     l1215:
  8830  00EE78  C02E  F02A         	movff	___lwdiv@quotient,?___lwdiv
  8831  00EE7C  C02F  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8832  00EE80  0012               	return		;funcret
  8833  00EE82                     __end_of___lwdiv:
  8834                           	opt stack 0
  8835                           tblptru	equ	0xFF8
  8836                           tblptrh	equ	0xFF7
  8837                           tblptrl	equ	0xFF6
  8838                           tablat	equ	0xFF5
  8839                           prodh	equ	0xFF4
  8840                           prodl	equ	0xFF3
  8841                           intcon	equ	0xFF2
  8842                           indf0	equ	0xFEF
  8843                           postinc0	equ	0xFEE
  8844                           fsr0h	equ	0xFEA
  8845                           fsr0l	equ	0xFE9
  8846                           wreg	equ	0xFE8
  8847                           indf1	equ	0xFE7
  8848                           postdec1	equ	0xFE5
  8849                           fsr1h	equ	0xFE2
  8850                           fsr1l	equ	0xFE1
  8851                           indf2	equ	0xFDF
  8852                           postinc2	equ	0xFDE
  8853                           postdec2	equ	0xFDD
  8854                           fsr2h	equ	0xFDA
  8855                           fsr2l	equ	0xFD9
  8856                           status	equ	0xFD8
  8857                           
  8858 ;; *************** function _lcd_write *****************
  8859 ;; Defined at:
  8860 ;;		line 70 in file "main.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;  column          2   10[COMRAM] int 
  8863 ;;  row             2   12[COMRAM] int 
  8864 ;;  string          2   14[COMRAM] PTR const unsigned char 
  8865 ;;		 -> STR_43(11), STR_41(6), STR_40(8), STR_39(4), 
  8866 ;;		 -> STR_38(7), STR_37(7), STR_36(5), STR_35(5), 
  8867 ;;		 -> STR_34(5), STR_33(8), STR_32(5), STR_31(8), 
  8868 ;;		 -> STR_30(7), STR_29(3), STR_28(3), STR_27(8), 
  8869 ;;		 -> STR_26(16), STR_25(17), buffer1(20), STR_22(5), 
  8870 ;;		 -> STR_21(6), STR_20(6), STR_19(7), STR_18(4), 
  8871 ;;		 -> STR_17(6), STR_16(8), STR_15(16), STR_13(2), 
  8872 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  8873 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  8874 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(4), 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;		None
  8877 ;; Return value:  Size  Location     Type
  8878 ;;		None               void
  8879 ;; Registers used:
  8880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8886 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8890 ;;Total ram usage:        6 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:    5
  8893 ;; This function calls:
  8894 ;;		_lcd_gotoxy
  8895 ;;		_lcd_putrs
  8896 ;; This function is called by:
  8897 ;;		_activity_home
  8898 ;;		_menu_selector_0
  8899 ;;		_menu_selector_1
  8900 ;;		_menu_selector_2
  8901 ;;		_menu_selector_3
  8902 ;;		_submenu_selector_0
  8903 ;;		_submenu_selector_1
  8904 ;;		_activity_pin
  8905 ;;		_activity_menu
  8906 ;;		_activity_submenu_date_and_time
  8907 ;;		_activity_submenu_date_config_refresh
  8908 ;;		_activity_submenu_time_config_refresh
  8909 ;;		_activity_submenu_date_config
  8910 ;;		_activity_submenu_time_config
  8911 ;;		_activity_submenu_activation
  8912 ;;		_activity_submenu_siren
  8913 ;;		_activity_submenu_siren_volume
  8914 ;;		_activity_submenu_siren_tone
  8915 ;;		_activity_submenu_pin
  8916 ;;		_activity_submenu_pin_set
  8917 ;;		_home_clock_refresh
  8918 ;;		_home_state_refresh
  8919 ;;		_home_volume_refresh
  8920 ;;		_home_tone_refresh
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text64
  8925  00E3DE                     __ptext64:
  8926                           	opt stack 0
  8927  00E3DE                     _lcd_write:
  8928                           	opt stack 21
  8929                           
  8930                           ;main.c: 72: lcd_gotoxy(column, row);
  8931                           
  8932                           ;incstack = 0
  8933  00E3DE  C036  F02E         	movff	lcd_write@row,lcd_gotoxy@y
  8934  00E3E2  5034               	movf	lcd_write@column,w,c
  8935  00E3E4  EC38  F072         	call	_lcd_gotoxy
  8936                           
  8937                           ;main.c: 73: lcd_putrs(string);
  8938  00E3E8  C038  F032         	movff	lcd_write@string,lcd_putrs@ptr
  8939  00E3EC  C039  F033         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  8940  00E3F0  EC8F  F076         	call	_lcd_putrs	;wreg free
  8941  00E3F4  0012               	return		;funcret
  8942  00E3F6                     __end_of_lcd_write:
  8943                           	opt stack 0
  8944                           tblptru	equ	0xFF8
  8945                           tblptrh	equ	0xFF7
  8946                           tblptrl	equ	0xFF6
  8947                           tablat	equ	0xFF5
  8948                           prodh	equ	0xFF4
  8949                           prodl	equ	0xFF3
  8950                           intcon	equ	0xFF2
  8951                           indf0	equ	0xFEF
  8952                           postinc0	equ	0xFEE
  8953                           fsr0h	equ	0xFEA
  8954                           fsr0l	equ	0xFE9
  8955                           wreg	equ	0xFE8
  8956                           indf1	equ	0xFE7
  8957                           postdec1	equ	0xFE5
  8958                           fsr1h	equ	0xFE2
  8959                           fsr1l	equ	0xFE1
  8960                           indf2	equ	0xFDF
  8961                           postinc2	equ	0xFDE
  8962                           postdec2	equ	0xFDD
  8963                           fsr2h	equ	0xFDA
  8964                           fsr2l	equ	0xFD9
  8965                           status	equ	0xFD8
  8966                           
  8967 ;; *************** function _lcd_putrs *****************
  8968 ;; Defined at:
  8969 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  8972 ;;		 -> STR_53(2), STR_43(11), STR_41(6), STR_40(8), 
  8973 ;;		 -> STR_39(4), STR_38(7), STR_37(7), STR_36(5), 
  8974 ;;		 -> STR_35(5), STR_34(5), STR_33(8), STR_32(5), 
  8975 ;;		 -> STR_31(8), STR_30(7), STR_29(3), STR_28(3), 
  8976 ;;		 -> STR_27(8), STR_26(16), STR_25(17), buffer1(20), 
  8977 ;;		 -> STR_22(5), STR_21(6), STR_20(6), STR_19(7), 
  8978 ;;		 -> STR_18(4), STR_17(6), STR_16(8), STR_15(16), 
  8979 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  8980 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  8981 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  8982 ;;		 -> STR_1(4), 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;		None               void
  8987 ;; Registers used:
  8988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8998 ;;Total ram usage:        2 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    4
  9001 ;; This function calls:
  9002 ;;		_lcd_putc
  9003 ;; This function is called by:
  9004 ;;		_lcd_write
  9005 ;;		_button_number
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text65
  9010  00ED1E                     __ptext65:
  9011                           	opt stack 0
  9012  00ED1E                     _lcd_putrs:
  9013                           	opt stack 24
  9014                           
  9015                           ;unmc_lcd_216.c: 223: while(*ptr){
  9016                           
  9017                           ;incstack = 0
  9018  00ED1E  D015               	goto	l2871
  9019  00ED20                     l2867:
  9020                           
  9021                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  9022  00ED20  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9023  00ED24  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9024  00ED28  6AF8               	clrf	tblptru,c
  9025  00ED2A  0E0E               	movlw	(high __ramtop+-1)
  9026  00ED2C  64F7               	cpfsgt	tblptrh,c
  9027  00ED2E  D003               	bra	u1417
  9028  00ED30  0008               	tblrd		*
  9029  00ED32  50F5               	movf	tablat,w,c
  9030  00ED34  D005               	bra	u1410
  9031  00ED36                     u1417:
  9032  00ED36  CFF6 FFE9          	movff	tblptrl,fsr0l
  9033  00ED3A  CFF7 FFEA          	movff	tblptrh,fsr0h
  9034  00ED3E  50EF               	movf	indf0,w,c
  9035  00ED40                     u1410:
  9036  00ED40  EC2D  F075         	call	_lcd_putc
  9037  00ED44  4A32               	infsnz	lcd_putrs@ptr,f,c
  9038  00ED46  2A33               	incf	lcd_putrs@ptr+1,f,c
  9039  00ED48  D000               	goto	l2871
  9040  00ED4A                     l2871:
  9041  00ED4A  C032  FFF6         	movff	lcd_putrs@ptr,tblptrl
  9042  00ED4E  C033  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  9043  00ED52  6AF8               	clrf	tblptru,c
  9044  00ED54  0E0E               	movlw	(high __ramtop+-1)
  9045  00ED56  64F7               	cpfsgt	tblptrh,c
  9046  00ED58  D003               	bra	u1427
  9047  00ED5A  0008               	tblrd		*
  9048  00ED5C  50F5               	movf	tablat,w,c
  9049  00ED5E  D005               	bra	u1420
  9050  00ED60                     u1427:
  9051  00ED60  CFF6 FFE9          	movff	tblptrl,fsr0l
  9052  00ED64  CFF7 FFEA          	movff	tblptrh,fsr0h
  9053  00ED68  50EF               	movf	indf0,w,c
  9054  00ED6A                     u1420:
  9055  00ED6A  0900               	iorlw	0
  9056  00ED6C  A4D8               	btfss	status,2,c
  9057  00ED6E  D7D8               	goto	l2867
  9058  00ED70  0012               	return		;funcret
  9059  00ED72                     __end_of_lcd_putrs:
  9060                           	opt stack 0
  9061                           tblptru	equ	0xFF8
  9062                           tblptrh	equ	0xFF7
  9063                           tblptrl	equ	0xFF6
  9064                           tablat	equ	0xFF5
  9065                           prodh	equ	0xFF4
  9066                           prodl	equ	0xFF3
  9067                           intcon	equ	0xFF2
  9068                           indf0	equ	0xFEF
  9069                           postinc0	equ	0xFEE
  9070                           fsr0h	equ	0xFEA
  9071                           fsr0l	equ	0xFE9
  9072                           wreg	equ	0xFE8
  9073                           indf1	equ	0xFE7
  9074                           postdec1	equ	0xFE5
  9075                           fsr1h	equ	0xFE2
  9076                           fsr1l	equ	0xFE1
  9077                           indf2	equ	0xFDF
  9078                           postinc2	equ	0xFDE
  9079                           postdec2	equ	0xFDD
  9080                           fsr2h	equ	0xFDA
  9081                           fsr2l	equ	0xFD9
  9082                           status	equ	0xFD8
  9083                           
  9084 ;; *************** function _lcd_putc *****************
  9085 ;; Defined at:
  9086 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;  c               1    wreg     unsigned char 
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;  c               1    7[COMRAM] unsigned char 
  9091 ;; Return value:  Size  Location     Type
  9092 ;;		None               void
  9093 ;; Registers used:
  9094 ;;		wreg, status,2, status,0, cstack
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;Total ram usage:        1 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; Hardware stack levels required when called:    3
  9107 ;; This function calls:
  9108 ;;		_lcd_gotoxy
  9109 ;;		_lcd_send_byte
  9110 ;; This function is called by:
  9111 ;;		_lcd_putrs
  9112 ;;		_lcd_puts
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           	psect	text66
  9117  00EA5A                     __ptext66:
  9118                           	opt stack 0
  9119  00EA5A                     _lcd_putc:
  9120                           	opt stack 24
  9121                           
  9122                           ;incstack = 0
  9123                           ;lcd_putc@c stored from wreg
  9124  00EA5A  6E31               	movwf	lcd_putc@c,c
  9125                           
  9126                           ;unmc_lcd_216.c: 173: switch(c){
  9127  00EA5C  D018               	goto	l2863
  9128  00EA5E                     l2853:
  9129                           
  9130                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  9131  00EA5E  0E01               	movlw	1
  9132  00EA60  6E2C               	movwf	lcd_send_byte@n,c
  9133  00EA62  0E00               	movlw	0
  9134  00EA64  EC0C  F073         	call	_lcd_send_byte
  9135                           
  9136                           ;unmc_lcd_216.c: 176: break;
  9137  00EA68  0012               	return	
  9138  00EA6A                     l2855:
  9139                           
  9140                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  9141  00EA6A  0E02               	movlw	2
  9142  00EA6C  6E2E               	movwf	lcd_gotoxy@y,c
  9143  00EA6E  0E01               	movlw	1
  9144  00EA70  EC38  F072         	call	_lcd_gotoxy
  9145                           
  9146                           ;unmc_lcd_216.c: 179: break;
  9147  00EA74  0012               	return	
  9148  00EA76                     l2857:
  9149                           
  9150                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  9151  00EA76  0E10               	movlw	16
  9152  00EA78  6E2C               	movwf	lcd_send_byte@n,c
  9153  00EA7A  0E00               	movlw	0
  9154  00EA7C  EC0C  F073         	call	_lcd_send_byte
  9155                           
  9156                           ;unmc_lcd_216.c: 182: break;
  9157  00EA80  0012               	return	
  9158  00EA82                     l2859:
  9159                           
  9160                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  9161  00EA82  C031  F02C         	movff	lcd_putc@c,lcd_send_byte@n
  9162  00EA86  0E01               	movlw	1
  9163  00EA88  EC0C  F073         	call	_lcd_send_byte
  9164                           
  9165                           ;unmc_lcd_216.c: 186: }
  9166                           
  9167                           ;unmc_lcd_216.c: 185: break;
  9168  00EA8C  0012               	return	
  9169  00EA8E                     l2863:
  9170  00EA8E  5031               	movf	lcd_putc@c,w,c
  9171                           
  9172                           ; Switch size 1, requested type "space"
  9173                           ; Number of cases is 3, Range of values is 8 to 12
  9174                           ; switch strategies available:
  9175                           ; Name         Instructions Cycles
  9176                           ; simple_byte           10     6 (average)
  9177                           ;	Chosen strategy is simple_byte
  9178  00EA90  0A08               	xorlw	8	; case 8
  9179  00EA92  B4D8               	btfsc	status,2,c
  9180  00EA94  D7F0               	goto	l2857
  9181  00EA96  0A02               	xorlw	2	; case 10
  9182  00EA98  B4D8               	btfsc	status,2,c
  9183  00EA9A  D7E7               	goto	l2855
  9184  00EA9C  0A06               	xorlw	6	; case 12
  9185  00EA9E  B4D8               	btfsc	status,2,c
  9186  00EAA0  D7DE               	goto	l2853
  9187  00EAA2  D7EF               	goto	l2859
  9188  00EAA4  0012               	return		;funcret
  9189  00EAA6                     __end_of_lcd_putc:
  9190                           	opt stack 0
  9191                           tblptru	equ	0xFF8
  9192                           tblptrh	equ	0xFF7
  9193                           tblptrl	equ	0xFF6
  9194                           tablat	equ	0xFF5
  9195                           prodh	equ	0xFF4
  9196                           prodl	equ	0xFF3
  9197                           intcon	equ	0xFF2
  9198                           indf0	equ	0xFEF
  9199                           postinc0	equ	0xFEE
  9200                           fsr0h	equ	0xFEA
  9201                           fsr0l	equ	0xFE9
  9202                           wreg	equ	0xFE8
  9203                           indf1	equ	0xFE7
  9204                           postdec1	equ	0xFE5
  9205                           fsr1h	equ	0xFE2
  9206                           fsr1l	equ	0xFE1
  9207                           indf2	equ	0xFDF
  9208                           postinc2	equ	0xFDE
  9209                           postdec2	equ	0xFDD
  9210                           fsr2h	equ	0xFDA
  9211                           fsr2l	equ	0xFD9
  9212                           status	equ	0xFD8
  9213                           
  9214 ;; *************** function _lcd_gotoxy *****************
  9215 ;; Defined at:
  9216 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  x               1    wreg     unsigned char 
  9219 ;;  y               1    4[COMRAM] unsigned char 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;  x               1    5[COMRAM] unsigned char 
  9222 ;;  address         1    6[COMRAM] unsigned char 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;		None               void
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, status,0, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9232 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9235 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9236 ;;Total ram usage:        3 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    2
  9239 ;; This function calls:
  9240 ;;		_lcd_send_byte
  9241 ;; This function is called by:
  9242 ;;		_lcd_write
  9243 ;;		_activity_pin
  9244 ;;		_activity_submenu_date_config_refresh
  9245 ;;		_activity_submenu_time_config_refresh
  9246 ;;		_activity_submenu_pin_set
  9247 ;;		_lcd_putc
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text67
  9252  00E470                     __ptext67:
  9253                           	opt stack 0
  9254  00E470                     _lcd_gotoxy:
  9255                           	opt stack 24
  9256                           
  9257                           ;incstack = 0
  9258                           ;lcd_gotoxy@x stored from wreg
  9259  00E470  6E2F               	movwf	lcd_gotoxy@x,c
  9260                           
  9261                           ;unmc_lcd_216.c: 159: int8 address;
  9262                           ;unmc_lcd_216.c: 161: if(y != 1)
  9263  00E472  042E               	decf	lcd_gotoxy@y,w,c
  9264  00E474  B4D8               	btfsc	status,2,c
  9265  00E476  D002               	goto	l2845
  9266                           
  9267                           ;unmc_lcd_216.c: 162: address = 0x40;
  9268  00E478  0E40               	movlw	64
  9269  00E47A  D001               	goto	L4
  9270  00E47C                     l2845:
  9271                           
  9272                           ;unmc_lcd_216.c: 163: else
  9273                           ;unmc_lcd_216.c: 164: address=0;
  9274  00E47C  0E00               	movlw	0
  9275  00E47E                     L4:
  9276  00E47E  6E30               	movwf	lcd_gotoxy@address,c
  9277  00E480  D000               	goto	l2847
  9278  00E482                     l2847:
  9279                           
  9280                           ;unmc_lcd_216.c: 166: address += x-1;
  9281  00E482  042F               	decf	lcd_gotoxy@x,w,c
  9282  00E484  2630               	addwf	lcd_gotoxy@address,f,c
  9283                           
  9284                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  9285  00E486  5030               	movf	lcd_gotoxy@address,w,c
  9286  00E488  0980               	iorlw	128
  9287  00E48A  6E2C               	movwf	lcd_send_byte@n,c
  9288  00E48C  0E00               	movlw	0
  9289  00E48E  EC0C  F073         	call	_lcd_send_byte
  9290  00E492  0012               	return		;funcret
  9291  00E494                     __end_of_lcd_gotoxy:
  9292                           	opt stack 0
  9293                           tblptru	equ	0xFF8
  9294                           tblptrh	equ	0xFF7
  9295                           tblptrl	equ	0xFF6
  9296                           tablat	equ	0xFF5
  9297                           prodh	equ	0xFF4
  9298                           prodl	equ	0xFF3
  9299                           intcon	equ	0xFF2
  9300                           indf0	equ	0xFEF
  9301                           postinc0	equ	0xFEE
  9302                           fsr0h	equ	0xFEA
  9303                           fsr0l	equ	0xFE9
  9304                           wreg	equ	0xFE8
  9305                           indf1	equ	0xFE7
  9306                           postdec1	equ	0xFE5
  9307                           fsr1h	equ	0xFE2
  9308                           fsr1l	equ	0xFE1
  9309                           indf2	equ	0xFDF
  9310                           postinc2	equ	0xFDE
  9311                           postdec2	equ	0xFDD
  9312                           fsr2h	equ	0xFDA
  9313                           fsr2l	equ	0xFD9
  9314                           status	equ	0xFD8
  9315                           
  9316 ;; *************** function _lcd_comand *****************
  9317 ;; Defined at:
  9318 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;  d               1    wreg     unsigned char 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;  d               1    4[COMRAM] unsigned char 
  9323 ;; Return value:  Size  Location     Type
  9324 ;;		None               void
  9325 ;; Registers used:
  9326 ;;		wreg, status,2, status,0, cstack
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9336 ;;Total ram usage:        1 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    2
  9339 ;; This function calls:
  9340 ;;		_lcd_send_byte
  9341 ;; This function is called by:
  9342 ;;		_activity_pin
  9343 ;;		_activity_submenu_date_config_refresh
  9344 ;;		_activity_submenu_time_config_refresh
  9345 ;;		_activity_submenu_pin_set
  9346 ;;		_setup
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text68
  9351  00E384                     __ptext68:
  9352                           	opt stack 0
  9353  00E384                     _lcd_comand:
  9354                           	opt stack 27
  9355                           
  9356                           ;incstack = 0
  9357                           ;lcd_comand@d stored from wreg
  9358  00E384  6E2E               	movwf	lcd_comand@d,c
  9359                           
  9360                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  9361  00E386  C02E  F02C         	movff	lcd_comand@d,lcd_send_byte@n
  9362  00E38A  0E00               	movlw	0
  9363  00E38C  EC0C  F073         	call	_lcd_send_byte
  9364  00E390  0012               	return		;funcret
  9365  00E392                     __end_of_lcd_comand:
  9366                           	opt stack 0
  9367                           tblptru	equ	0xFF8
  9368                           tblptrh	equ	0xFF7
  9369                           tblptrl	equ	0xFF6
  9370                           tablat	equ	0xFF5
  9371                           prodh	equ	0xFF4
  9372                           prodl	equ	0xFF3
  9373                           intcon	equ	0xFF2
  9374                           indf0	equ	0xFEF
  9375                           postinc0	equ	0xFEE
  9376                           fsr0h	equ	0xFEA
  9377                           fsr0l	equ	0xFE9
  9378                           wreg	equ	0xFE8
  9379                           indf1	equ	0xFE7
  9380                           postdec1	equ	0xFE5
  9381                           fsr1h	equ	0xFE2
  9382                           fsr1l	equ	0xFE1
  9383                           indf2	equ	0xFDF
  9384                           postinc2	equ	0xFDE
  9385                           postdec2	equ	0xFDD
  9386                           fsr2h	equ	0xFDA
  9387                           fsr2l	equ	0xFD9
  9388                           status	equ	0xFD8
  9389                           
  9390 ;; *************** function _lcd_send_byte *****************
  9391 ;; Defined at:
  9392 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  address         1    wreg     unsigned char 
  9395 ;;  n               1    2[COMRAM] unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  address         1    3[COMRAM] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;		None               void
  9400 ;; Registers used:
  9401 ;;		wreg, status,2, status,0, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9407 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9411 ;;Total ram usage:        2 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    1
  9414 ;; This function calls:
  9415 ;;		_Delay100TCYx
  9416 ;;		_lcd_send_nibble
  9417 ;; This function is called by:
  9418 ;;		_lcd_init
  9419 ;;		_lcd_gotoxy
  9420 ;;		_lcd_putc
  9421 ;;		_lcd_comand
  9422 ;;		_lcd_setcursor_vb
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text69
  9427  00E618                     __ptext69:
  9428                           	opt stack 0
  9429  00E618                     _lcd_send_byte:
  9430                           	opt stack 27
  9431                           
  9432                           ;incstack = 0
  9433                           ;lcd_send_byte@address stored from wreg
  9434  00E618  6E2D               	movwf	lcd_send_byte@address,c
  9435                           
  9436                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  9437  00E61A  968A               	bcf	3978,3,c	;volatile
  9438                           
  9439                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  9440  00E61C  0E02               	movlw	2
  9441  00E61E  ECC9  F071         	call	_Delay100TCYx
  9442                           
  9443                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  9444  00E622  9893               	bcf	3987,4,c	;volatile
  9445                           
  9446                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  9447  00E624  9A93               	bcf	3987,5,c	;volatile
  9448                           
  9449                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  9450  00E626  9C93               	bcf	3987,6,c	;volatile
  9451                           
  9452                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  9453  00E628  9E93               	bcf	3987,7,c	;volatile
  9454                           
  9455                           ;unmc_lcd_216.c: 101: if(address)
  9456  00E62A  502D               	movf	lcd_send_byte@address,w,c
  9457  00E62C  B4D8               	btfsc	status,2,c
  9458  00E62E  D002               	goto	l492
  9459                           
  9460                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  9461  00E630  868A               	bsf	3978,3,c	;volatile
  9462  00E632  D001               	goto	l493
  9463  00E634                     l492:
  9464                           
  9465                           ;unmc_lcd_216.c: 103: else
  9466                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  9467  00E634  968A               	bcf	3978,3,c	;volatile
  9468  00E636                     l493:
  9469                           
  9470                           ;unmc_lcd_216.c: 106: __nop();
  9471  00E636  F000               	nop	
  9472                           
  9473                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  9474  00E638  382C               	swapf	lcd_send_byte@n,w,c
  9475  00E63A  0B0F               	andlw	15
  9476  00E63C  EC1A  F079         	call	_lcd_send_nibble
  9477                           
  9478                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  9479  00E640  502C               	movf	lcd_send_byte@n,w,c
  9480  00E642  0B0F               	andlw	15
  9481  00E644  EC1A  F079         	call	_lcd_send_nibble
  9482  00E648  0012               	return		;funcret
  9483  00E64A                     __end_of_lcd_send_byte:
  9484                           	opt stack 0
  9485                           tblptru	equ	0xFF8
  9486                           tblptrh	equ	0xFF7
  9487                           tblptrl	equ	0xFF6
  9488                           tablat	equ	0xFF5
  9489                           prodh	equ	0xFF4
  9490                           prodl	equ	0xFF3
  9491                           intcon	equ	0xFF2
  9492                           indf0	equ	0xFEF
  9493                           postinc0	equ	0xFEE
  9494                           fsr0h	equ	0xFEA
  9495                           fsr0l	equ	0xFE9
  9496                           wreg	equ	0xFE8
  9497                           indf1	equ	0xFE7
  9498                           postdec1	equ	0xFE5
  9499                           fsr1h	equ	0xFE2
  9500                           fsr1l	equ	0xFE1
  9501                           indf2	equ	0xFDF
  9502                           postinc2	equ	0xFDE
  9503                           postdec2	equ	0xFDD
  9504                           fsr2h	equ	0xFDA
  9505                           fsr2l	equ	0xFD9
  9506                           status	equ	0xFD8
  9507                           
  9508 ;; *************** function _lcd_send_nibble *****************
  9509 ;; Defined at:
  9510 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;  nibble          1    wreg     unsigned char 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;  nibble          1    1[COMRAM] unsigned char 
  9515 ;; Return value:  Size  Location     Type
  9516 ;;		None               void
  9517 ;; Registers used:
  9518 ;;		wreg, status,2, status,0
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;Total ram usage:        2 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_lcd_send_byte
  9534 ;;		_lcd_init
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text70
  9539  00F234                     __ptext70:
  9540                           	opt stack 0
  9541  00F234                     _lcd_send_nibble:
  9542                           	opt stack 28
  9543                           
  9544                           ;incstack = 0
  9545                           ;lcd_send_nibble@nibble stored from wreg
  9546  00F234  6E2B               	movwf	lcd_send_nibble@nibble,c
  9547                           
  9548                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  9549  00F236  A02B               	btfss	lcd_send_nibble@nibble,0,c
  9550  00F238  D003               	goto	u1310
  9551  00F23A  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  9552  00F23C  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  9553  00F23E  D001               	goto	u1328
  9554  00F240                     u1310:
  9555  00F240  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  9556  00F242                     u1328:
  9557  00F242  3A2A               	swapf	??_lcd_send_nibble,f,c
  9558  00F244  508A               	movf	3978,w,c	;volatile
  9559  00F246  182A               	xorwf	??_lcd_send_nibble,w,c
  9560  00F248  0BEF               	andlw	-17
  9561  00F24A  182A               	xorwf	??_lcd_send_nibble,w,c
  9562  00F24C  6E8A               	movwf	3978,c	;volatile
  9563                           
  9564                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  9565  00F24E  A22B               	btfss	lcd_send_nibble@nibble,1,c
  9566  00F250  D003               	goto	u1330
  9567  00F252  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  9568  00F254  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  9569  00F256  D001               	goto	u1348
  9570  00F258                     u1330:
  9571  00F258  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  9572  00F25A                     u1348:
  9573  00F25A  3A2A               	swapf	??_lcd_send_nibble,f,c
  9574  00F25C  462A               	rlncf	??_lcd_send_nibble,f,c
  9575  00F25E  508A               	movf	3978,w,c	;volatile
  9576  00F260  182A               	xorwf	??_lcd_send_nibble,w,c
  9577  00F262  0BDF               	andlw	-33
  9578  00F264  182A               	xorwf	??_lcd_send_nibble,w,c
  9579  00F266  6E8A               	movwf	3978,c	;volatile
  9580                           
  9581                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  9582  00F268  A42B               	btfss	lcd_send_nibble@nibble,2,c
  9583  00F26A  D003               	goto	u1350
  9584  00F26C  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  9585  00F26E  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  9586  00F270  D001               	goto	u1368
  9587  00F272                     u1350:
  9588  00F272  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  9589  00F274                     u1368:
  9590  00F274  3A2A               	swapf	??_lcd_send_nibble,f,c
  9591  00F276  462A               	rlncf	??_lcd_send_nibble,f,c
  9592  00F278  462A               	rlncf	??_lcd_send_nibble,f,c
  9593  00F27A  508A               	movf	3978,w,c	;volatile
  9594  00F27C  182A               	xorwf	??_lcd_send_nibble,w,c
  9595  00F27E  0BBF               	andlw	-65
  9596  00F280  182A               	xorwf	??_lcd_send_nibble,w,c
  9597  00F282  6E8A               	movwf	3978,c	;volatile
  9598                           
  9599                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  9600  00F284  A62B               	btfss	lcd_send_nibble@nibble,3,c
  9601  00F286  D003               	goto	u1370
  9602  00F288  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  9603  00F28A  2A2A               	incf	??_lcd_send_nibble& (0+255),f,c
  9604  00F28C  D001               	goto	u1388
  9605  00F28E                     u1370:
  9606  00F28E  6A2A               	clrf	??_lcd_send_nibble& (0+255),c
  9607  00F290                     u1388:
  9608  00F290  322A               	rrcf	??_lcd_send_nibble,f,c
  9609  00F292  322A               	rrcf	??_lcd_send_nibble,f,c
  9610  00F294  508A               	movf	3978,w,c	;volatile
  9611  00F296  182A               	xorwf	??_lcd_send_nibble,w,c
  9612  00F298  0B7F               	andlw	-129
  9613  00F29A  182A               	xorwf	??_lcd_send_nibble,w,c
  9614  00F29C  6E8A               	movwf	3978,c	;volatile
  9615                           
  9616                           ;unmc_lcd_216.c: 32: __nop();
  9617  00F29E  F000               	nop	
  9618                           
  9619                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  9620  00F2A0  848A               	bsf	3978,2,c	;volatile
  9621                           
  9622                           ;unmc_lcd_216.c: 34: __nop();__nop();
  9623  00F2A2  F000               	nop	
  9624  00F2A4  F000               	nop	
  9625                           
  9626                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  9627  00F2A6  948A               	bcf	3978,2,c	;volatile
  9628  00F2A8  0012               	return		;funcret
  9629  00F2AA                     __end_of_lcd_send_nibble:
  9630                           	opt stack 0
  9631                           tblptru	equ	0xFF8
  9632                           tblptrh	equ	0xFF7
  9633                           tblptrl	equ	0xFF6
  9634                           tablat	equ	0xFF5
  9635                           prodh	equ	0xFF4
  9636                           prodl	equ	0xFF3
  9637                           intcon	equ	0xFF2
  9638                           indf0	equ	0xFEF
  9639                           postinc0	equ	0xFEE
  9640                           fsr0h	equ	0xFEA
  9641                           fsr0l	equ	0xFE9
  9642                           wreg	equ	0xFE8
  9643                           indf1	equ	0xFE7
  9644                           postdec1	equ	0xFE5
  9645                           fsr1h	equ	0xFE2
  9646                           fsr1l	equ	0xFE1
  9647                           indf2	equ	0xFDF
  9648                           postinc2	equ	0xFDE
  9649                           postdec2	equ	0xFDD
  9650                           fsr2h	equ	0xFDA
  9651                           fsr2l	equ	0xFD9
  9652                           status	equ	0xFD8
  9653                           
  9654 ;; *************** function _Delay100TCYx *****************
  9655 ;; Defined at:
  9656 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  unit            1    wreg     unsigned char 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  unit            1    0[COMRAM] unsigned char 
  9661 ;; Return value:  Size  Location     Type
  9662 ;;		None               void
  9663 ;; Registers used:
  9664 ;;		wreg
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9674 ;;Total ram usage:        1 bytes
  9675 ;; Hardware stack levels used:    1
  9676 ;; This function calls:
  9677 ;;		Nothing
  9678 ;; This function is called by:
  9679 ;;		_lcd_send_byte
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           	psect	text71
  9684  00E392                     __ptext71:
  9685                           	opt stack 0
  9686  00E392                     _Delay100TCYx:
  9687                           	opt stack 27
  9688                           
  9689                           ;incstack = 0
  9690                           ;Delay100TCYx@unit stored from wreg
  9691  00E392  6E2A               	movwf	Delay100TCYx@unit,c
  9692  00E394  0E21               	movlw	33
  9693  00E396                     u2637:
  9694  00E396  2EE8               	decfsz	wreg,f,c
  9695  00E398  D7FE               	goto	u2637
  9696  00E39A  F000               	nop	
  9697  00E39C  2E2A               	decfsz	Delay100TCYx@unit,f,c
  9698  00E39E  D7FA               	goto	l2819
  9699  00E3A0  0012               	return	
  9700  00E3A2  0012               	return		;funcret
  9701  00E3A4                     __end_of_Delay100TCYx:
  9702                           	opt stack 0
  9703                           tblptru	equ	0xFF8
  9704                           tblptrh	equ	0xFF7
  9705                           tblptrl	equ	0xFF6
  9706                           tablat	equ	0xFF5
  9707                           prodh	equ	0xFF4
  9708                           prodl	equ	0xFF3
  9709                           intcon	equ	0xFF2
  9710                           indf0	equ	0xFEF
  9711                           postinc0	equ	0xFEE
  9712                           fsr0h	equ	0xFEA
  9713                           fsr0l	equ	0xFE9
  9714                           wreg	equ	0xFE8
  9715                           indf1	equ	0xFE7
  9716                           postdec1	equ	0xFE5
  9717                           fsr1h	equ	0xFE2
  9718                           fsr1l	equ	0xFE1
  9719                           indf2	equ	0xFDF
  9720                           postinc2	equ	0xFDE
  9721                           postdec2	equ	0xFDD
  9722                           fsr2h	equ	0xFDA
  9723                           fsr2l	equ	0xFD9
  9724                           status	equ	0xFD8
  9725                           
  9726 ;; *************** function _Read_RTC *****************
  9727 ;; Defined at:
  9728 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;		None
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;		None               void
  9735 ;; Registers used:
  9736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9746 ;;Total ram usage:        0 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:    1
  9749 ;; This function calls:
  9750 ;;		_RtccReadDate
  9751 ;;		_RtccReadTime
  9752 ;; This function is called by:
  9753 ;;		_main
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text72
  9758  00F684                     __ptext72:
  9759                           	opt stack 0
  9760  00F684                     _Read_RTC:
  9761                           	opt stack 29
  9762                           
  9763                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  9764                           
  9765                           ;incstack = 0
  9766  00F684  0E26               	movlw	low _RtccTime
  9767  00F686  6E2A               	movwf	RtccReadTime@pTm,c
  9768  00F688  0E00               	movlw	high _RtccTime
  9769  00F68A  6E2B               	movwf	RtccReadTime@pTm+1,c
  9770  00F68C  EC73  F078         	call	_RtccReadTime	;wreg free
  9771                           
  9772                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  9773  00F690  5027               	movf	_RtccTime+1,w,c
  9774  00F692  0B0F               	andlw	15
  9775  00F694  0100               	movlb	0	; () banked
  9776  00F696  6FA4               	movwf	_segundo_u& (0+255),b
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  9780  00F698  3827               	swapf	_RtccTime+1,w,c
  9781  00F69A  0B0F               	andlw	15
  9782  00F69C  0B0F               	andlw	15
  9783  00F69E  6E5E               	movwf	_segundo_d,c
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  9787  00F6A0  5028               	movf	_RtccTime+2,w,c
  9788  00F6A2  0B0F               	andlw	15
  9789  00F6A4  0100               	movlb	0	; () banked
  9790  00F6A6  6FA3               	movwf	_minuto_u& (0+255),b
  9791                           
  9792                           ; BSR set to: 0
  9793                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  9794  00F6A8  3828               	swapf	_RtccTime+2,w,c
  9795  00F6AA  0B0F               	andlw	15
  9796  00F6AC  0B0F               	andlw	15
  9797  00F6AE  6E5D               	movwf	_minuto_d,c
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  9801  00F6B0  5029               	movf	_RtccTime+3,w,c
  9802  00F6B2  0B0F               	andlw	15
  9803  00F6B4  0100               	movlb	0	; () banked
  9804  00F6B6  6FA1               	movwf	_hora_u& (0+255),b
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  9808  00F6B8  3829               	swapf	_RtccTime+3,w,c
  9809  00F6BA  0B0F               	andlw	15
  9810  00F6BC  0B0F               	andlw	15
  9811  00F6BE  6E5B               	movwf	_hora_d,c
  9812                           
  9813                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  9814  00F6C0  0E22               	movlw	low _RtccDate
  9815  00F6C2  6E2A               	movwf	RtccReadDate@pDt,c
  9816  00F6C4  0E00               	movlw	high _RtccDate
  9817  00F6C6  6E2B               	movwf	RtccReadDate@pDt+1,c
  9818  00F6C8  EC14  F07A         	call	_RtccReadDate	;wreg free
  9819                           
  9820                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  9821  00F6CC  5023               	movf	_RtccDate+1,w,c
  9822  00F6CE  0B0F               	andlw	15
  9823  00F6D0  0100               	movlb	0	; () banked
  9824  00F6D2  6FA0               	movwf	_fecha_u& (0+255),b
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  9828  00F6D4  3823               	swapf	_RtccDate+1,w,c
  9829  00F6D6  0B0F               	andlw	15
  9830  00F6D8  0B0F               	andlw	15
  9831  00F6DA  6E5A               	movwf	_fecha_d,c
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  9835  00F6DC  5024               	movf	_RtccDate+2,w,c
  9836  00F6DE  0B0F               	andlw	15
  9837  00F6E0  0100               	movlb	0	; () banked
  9838  00F6E2  6FA2               	movwf	_mes_u& (0+255),b
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  9842  00F6E4  3824               	swapf	_RtccDate+2,w,c
  9843  00F6E6  0B0F               	andlw	15
  9844  00F6E8  0B0F               	andlw	15
  9845  00F6EA  6E5C               	movwf	_mes_d,c
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  9849  00F6EC  C022  F09F         	movff	_RtccDate,_dia_semana
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  9853  00F6F0  5025               	movf	_RtccDate+3,w,c
  9854  00F6F2  0B0F               	andlw	15
  9855  00F6F4  0100               	movlb	0	; () banked
  9856  00F6F6  6F9E               	movwf	_anio_u& (0+255),b
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  9860  00F6F8  3825               	swapf	_RtccDate+3,w,c
  9861  00F6FA  0B0F               	andlw	15
  9862  00F6FC  0B0F               	andlw	15
  9863  00F6FE  6E59               	movwf	_anio_d,c
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  9867  00F700  505E               	movf	_segundo_d,w,c
  9868  00F702  0D0A               	mullw	10
  9869  00F704  0100               	movlb	0	; () banked
  9870  00F706  51A4               	movf	_segundo_u& (0+255),w,b
  9871  00F708  24F3               	addwf	prodl,w,c
  9872  00F70A  6E1B               	movwf	_segundo,c
  9873  00F70C  0100               	movlb	0	; () banked
  9874  00F70E  0E00               	movlw	0
  9875  00F710  20F4               	addwfc	prodh,w,c
  9876  00F712  6E1C               	movwf	_segundo+1,c
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  9880  00F714  505D               	movf	_minuto_d,w,c
  9881  00F716  0D0A               	mullw	10
  9882  00F718  0100               	movlb	0	; () banked
  9883  00F71A  51A3               	movf	_minuto_u& (0+255),w,b
  9884  00F71C  24F3               	addwf	prodl,w,c
  9885  00F71E  6E19               	movwf	_minuto,c
  9886  00F720  0100               	movlb	0	; () banked
  9887  00F722  0E00               	movlw	0
  9888  00F724  20F4               	addwfc	prodh,w,c
  9889  00F726  6E1A               	movwf	_minuto+1,c
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  9893  00F728  505B               	movf	_hora_d,w,c
  9894  00F72A  0D0A               	mullw	10
  9895  00F72C  0100               	movlb	0	; () banked
  9896  00F72E  51A1               	movf	_hora_u& (0+255),w,b
  9897  00F730  24F3               	addwf	prodl,w,c
  9898  00F732  6E55               	movwf	_hora,c
  9899  00F734  0100               	movlb	0	; () banked
  9900  00F736  0E00               	movlw	0
  9901  00F738  20F4               	addwfc	prodh,w,c
  9902  00F73A  6E56               	movwf	_hora+1,c
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  9906  00F73C  505A               	movf	_fecha_d,w,c
  9907  00F73E  0D0A               	mullw	10
  9908  00F740  0100               	movlb	0	; () banked
  9909  00F742  51A0               	movf	_fecha_u& (0+255),w,b
  9910  00F744  24F3               	addwf	prodl,w,c
  9911  00F746  6E51               	movwf	_dia,c
  9912  00F748  0100               	movlb	0	; () banked
  9913  00F74A  0E00               	movlw	0
  9914  00F74C  20F4               	addwfc	prodh,w,c
  9915  00F74E  6E52               	movwf	_dia+1,c
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  9919  00F750  C09F  F053         	movff	_dia_semana,_diasem
  9920  00F754  6A54               	clrf	_diasem+1,c
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  9924  00F756  505C               	movf	_mes_d,w,c
  9925  00F758  0D0A               	mullw	10
  9926  00F75A  0100               	movlb	0	; () banked
  9927  00F75C  51A2               	movf	_mes_u& (0+255),w,b
  9928  00F75E  24F3               	addwf	prodl,w,c
  9929  00F760  6E57               	movwf	_mes,c
  9930  00F762  0100               	movlb	0	; () banked
  9931  00F764  0E00               	movlw	0
  9932  00F766  20F4               	addwfc	prodh,w,c
  9933  00F768  6E58               	movwf	_mes+1,c
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  9937  00F76A  5059               	movf	_anio_d,w,c
  9938  00F76C  0D0A               	mullw	10
  9939  00F76E  0100               	movlb	0	; () banked
  9940  00F770  519E               	movf	_anio_u& (0+255),w,b
  9941  00F772  24F3               	addwf	prodl,w,c
  9942  00F774  6E4F               	movwf	_anio,c
  9943  00F776  0100               	movlb	0	; () banked
  9944  00F778  0E00               	movlw	0
  9945  00F77A  20F4               	addwfc	prodh,w,c
  9946  00F77C  6E50               	movwf	_anio+1,c
  9947                           
  9948                           ; BSR set to: 0
  9949  00F77E  0012               	return		;funcret
  9950  00F780                     __end_of_Read_RTC:
  9951                           	opt stack 0
  9952                           tblptru	equ	0xFF8
  9953                           tblptrh	equ	0xFF7
  9954                           tblptrl	equ	0xFF6
  9955                           tablat	equ	0xFF5
  9956                           prodh	equ	0xFF4
  9957                           prodl	equ	0xFF3
  9958                           intcon	equ	0xFF2
  9959                           indf0	equ	0xFEF
  9960                           postinc0	equ	0xFEE
  9961                           fsr0h	equ	0xFEA
  9962                           fsr0l	equ	0xFE9
  9963                           wreg	equ	0xFE8
  9964                           indf1	equ	0xFE7
  9965                           postdec1	equ	0xFE5
  9966                           fsr1h	equ	0xFE2
  9967                           fsr1l	equ	0xFE1
  9968                           indf2	equ	0xFDF
  9969                           postinc2	equ	0xFDE
  9970                           postdec2	equ	0xFDD
  9971                           fsr2h	equ	0xFDA
  9972                           fsr2l	equ	0xFD9
  9973                           status	equ	0xFD8
  9974                           
  9975 ;; *************** function _RtccReadTime *****************
  9976 ;; Defined at:
  9977 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  pTm             2    0[COMRAM] PTR struct .
  9980 ;;		 -> RtccTime(4), 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;  rTD0            8   10[COMRAM] struct .
  9983 ;;  rTD1            8    2[COMRAM] struct .
  9984 ;; Return value:  Size  Location     Type
  9985 ;;		None               void
  9986 ;; Registers used:
  9987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9994 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9996 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9997 ;;Total ram usage:       18 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_Read_RTC
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text73
 10007  00F0E6                     __ptext73:
 10008                           	opt stack 0
 10009  00F0E6                     _RtccReadTime:
 10010                           	opt stack 29
 10011  00F0E6  0EFC               	movlw	252
 10012  00F0E8  010F               	movlb	15	; () banked
 10013  00F0EA  173F               	andwf	63,f,b	;volatile
 10014                           
 10015                           ; BSR set to: 15
 10016  00F0EC  010F               	movlb	15	; () banked
 10017  00F0EE  813F               	bsf	63,0,b	;volatile
 10018                           
 10019                           ; BSR set to: 15
 10020  00F0F0  CF98 F038          	movff	3992,RtccReadTime@rTD0+4	;volatile
 10021                           
 10022                           ; BSR set to: 15
 10023  00F0F4  CF99 F039          	movff	3993,RtccReadTime@rTD0+5	;volatile
 10024                           
 10025                           ; BSR set to: 15
 10026  00F0F8  CF98 F03A          	movff	3992,RtccReadTime@rTD0+6	;volatile
 10027                           
 10028                           ; BSR set to: 15
 10029  00F0FC  CF99 F03B          	movff	3993,RtccReadTime@rTD0+7	;volatile
 10030                           
 10031                           ; BSR set to: 15
 10032  00F100  0EFC               	movlw	252
 10033  00F102  010F               	movlb	15	; () banked
 10034  00F104  173F               	andwf	63,f,b	;volatile
 10035  00F106  010F               	movlb	15	; () banked
 10036  00F108  813F               	bsf	63,0,b	;volatile
 10037                           
 10038                           ; BSR set to: 15
 10039  00F10A  CF98 F030          	movff	3992,RtccReadTime@rTD1+4	;volatile
 10040                           
 10041                           ; BSR set to: 15
 10042  00F10E  CF99 F031          	movff	3993,RtccReadTime@rTD1+5	;volatile
 10043                           
 10044                           ; BSR set to: 15
 10045  00F112  CF98 F032          	movff	3992,RtccReadTime@rTD1+6	;volatile
 10046                           
 10047                           ; BSR set to: 15
 10048  00F116  CF99 F033          	movff	3993,RtccReadTime@rTD1+7	;volatile
 10049                           
 10050                           ; BSR set to: 15
 10051  00F11A  5032               	movf	RtccReadTime@rTD1+6,w,c
 10052  00F11C  183A               	xorwf	RtccReadTime@rTD0+6,w,c
 10053  00F11E  A4D8               	btfss	status,2,c
 10054  00F120  D7E2               	goto	l3647
 10055                           
 10056                           ; BSR set to: 15
 10057                           
 10058                           ; BSR set to: 15
 10059  00F122  EE20 F003          	lfsr	2,3
 10060  00F126  502A               	movf	RtccReadTime@pTm,w,c
 10061  00F128  26D9               	addwf	fsr2l,f,c
 10062  00F12A  502B               	movf	RtccReadTime@pTm+1,w,c
 10063  00F12C  22DA               	addwfc	fsr2h,f,c
 10064  00F12E  C038  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 10065  00F132  EE20 F002          	lfsr	2,2
 10066  00F136  502A               	movf	RtccReadTime@pTm,w,c
 10067  00F138  26D9               	addwf	fsr2l,f,c
 10068  00F13A  502B               	movf	RtccReadTime@pTm+1,w,c
 10069  00F13C  22DA               	addwfc	fsr2h,f,c
 10070  00F13E  C03B  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 10071  00F142  EE20 F001          	lfsr	2,1
 10072  00F146  502A               	movf	RtccReadTime@pTm,w,c
 10073  00F148  26D9               	addwf	fsr2l,f,c
 10074  00F14A  502B               	movf	RtccReadTime@pTm+1,w,c
 10075  00F14C  22DA               	addwfc	fsr2h,f,c
 10076  00F14E  C03A  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 10077                           
 10078                           ; BSR set to: 15
 10079  00F152  0012               	return		;funcret
 10080  00F154                     __end_of_RtccReadTime:
 10081                           	opt stack 0
 10082                           tblptru	equ	0xFF8
 10083                           tblptrh	equ	0xFF7
 10084                           tblptrl	equ	0xFF6
 10085                           tablat	equ	0xFF5
 10086                           prodh	equ	0xFF4
 10087                           prodl	equ	0xFF3
 10088                           intcon	equ	0xFF2
 10089                           indf0	equ	0xFEF
 10090                           postinc0	equ	0xFEE
 10091                           fsr0h	equ	0xFEA
 10092                           fsr0l	equ	0xFE9
 10093                           wreg	equ	0xFE8
 10094                           indf1	equ	0xFE7
 10095                           postdec1	equ	0xFE5
 10096                           fsr1h	equ	0xFE2
 10097                           fsr1l	equ	0xFE1
 10098                           indf2	equ	0xFDF
 10099                           postinc2	equ	0xFDE
 10100                           postdec2	equ	0xFDD
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105 ;; *************** function _RtccReadDate *****************
 10106 ;; Defined at:
 10107 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  pDt             2    0[COMRAM] PTR struct .
 10110 ;;		 -> RtccDate(4), 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  rTD0            8   10[COMRAM] struct .
 10113 ;;  rTD1            8    2[COMRAM] struct .
 10114 ;; Return value:  Size  Location     Type
 10115 ;;		None               void
 10116 ;; Registers used:
 10117 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10124 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10126 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10127 ;;Total ram usage:       18 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_Read_RTC
 10133 ;; This function uses a non-reentrant model
 10134 ;;
 10135                           
 10136                           	psect	text74
 10137  00F428                     __ptext74:
 10138                           	opt stack 0
 10139  00F428                     _RtccReadDate:
 10140                           	opt stack 29
 10141  00F428  0EFC               	movlw	252
 10142  00F42A  010F               	movlb	15	; () banked
 10143  00F42C  173F               	andwf	63,f,b	;volatile
 10144  00F42E  0E03               	movlw	3
 10145  00F430  010F               	movlb	15	; () banked
 10146  00F432  133F               	iorwf	63,f,b	;volatile
 10147                           
 10148                           ; BSR set to: 15
 10149  00F434  CF98 F034          	movff	3992,RtccReadDate@rTD0	;volatile
 10150                           
 10151                           ; BSR set to: 15
 10152  00F438  CF99 F035          	movff	3993,RtccReadDate@rTD0+1	;volatile
 10153                           
 10154                           ; BSR set to: 15
 10155  00F43C  CF98 F036          	movff	3992,RtccReadDate@rTD0+2	;volatile
 10156                           
 10157                           ; BSR set to: 15
 10158  00F440  CF99 F037          	movff	3993,RtccReadDate@rTD0+3	;volatile
 10159                           
 10160                           ; BSR set to: 15
 10161  00F444  CF98 F038          	movff	3992,RtccReadDate@rTD0+4	;volatile
 10162                           
 10163                           ; BSR set to: 15
 10164  00F448  CF99 F039          	movff	3993,RtccReadDate@rTD0+5	;volatile
 10165  00F44C  0EFC               	movlw	252
 10166  00F44E  010F               	movlb	15	; () banked
 10167  00F450  173F               	andwf	63,f,b	;volatile
 10168  00F452  0E03               	movlw	3
 10169  00F454  010F               	movlb	15	; () banked
 10170  00F456  133F               	iorwf	63,f,b	;volatile
 10171                           
 10172                           ; BSR set to: 15
 10173  00F458  CF98 F02C          	movff	3992,RtccReadDate@rTD1	;volatile
 10174                           
 10175                           ; BSR set to: 15
 10176  00F45C  CF99 F02D          	movff	3993,RtccReadDate@rTD1+1	;volatile
 10177                           
 10178                           ; BSR set to: 15
 10179  00F460  CF98 F02E          	movff	3992,RtccReadDate@rTD1+2	;volatile
 10180                           
 10181                           ; BSR set to: 15
 10182  00F464  CF99 F02F          	movff	3993,RtccReadDate@rTD1+3	;volatile
 10183                           
 10184                           ; BSR set to: 15
 10185  00F468  CF98 F030          	movff	3992,RtccReadDate@rTD1+4	;volatile
 10186                           
 10187                           ; BSR set to: 15
 10188  00F46C  CF99 F031          	movff	3993,RtccReadDate@rTD1+5	;volatile
 10189  00F470  502E               	movf	RtccReadDate@rTD1+2,w,c
 10190  00F472  1836               	xorwf	RtccReadDate@rTD0+2,w,c
 10191  00F474  A4D8               	btfss	status,2,c
 10192  00F476  D7D8               	goto	l3673
 10193                           
 10194                           ; BSR set to: 15
 10195                           
 10196                           ; BSR set to: 15
 10197  00F478  EE20 F001          	lfsr	2,1
 10198  00F47C  502A               	movf	RtccReadDate@pDt,w,c
 10199  00F47E  26D9               	addwf	fsr2l,f,c
 10200  00F480  502B               	movf	RtccReadDate@pDt+1,w,c
 10201  00F482  22DA               	addwfc	fsr2h,f,c
 10202  00F484  C036  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 10203  00F488  EE20 F002          	lfsr	2,2
 10204  00F48C  502A               	movf	RtccReadDate@pDt,w,c
 10205  00F48E  26D9               	addwf	fsr2l,f,c
 10206  00F490  502B               	movf	RtccReadDate@pDt+1,w,c
 10207  00F492  22DA               	addwfc	fsr2h,f,c
 10208  00F494  C037  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 10209                           
 10210                           ; BSR set to: 15
 10211  00F498  C02A  FFD9         	movff	RtccReadDate@pDt,fsr2l
 10212  00F49C  C02B  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 10213  00F4A0  C039  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 10214                           
 10215                           ; BSR set to: 15
 10216  00F4A4  EE20 F003          	lfsr	2,3
 10217  00F4A8  502A               	movf	RtccReadDate@pDt,w,c
 10218  00F4AA  26D9               	addwf	fsr2l,f,c
 10219  00F4AC  502B               	movf	RtccReadDate@pDt+1,w,c
 10220  00F4AE  22DA               	addwfc	fsr2h,f,c
 10221  00F4B0  C034  FFDF         	movff	RtccReadDate@rTD0,indf2
 10222                           
 10223                           ; BSR set to: 15
 10224  00F4B4  0012               	return		;funcret
 10225  00F4B6                     __end_of_RtccReadDate:
 10226                           	opt stack 0
 10227                           tblptru	equ	0xFF8
 10228                           tblptrh	equ	0xFF7
 10229                           tblptrl	equ	0xFF6
 10230                           tablat	equ	0xFF5
 10231                           prodh	equ	0xFF4
 10232                           prodl	equ	0xFF3
 10233                           intcon	equ	0xFF2
 10234                           indf0	equ	0xFEF
 10235                           postinc0	equ	0xFEE
 10236                           fsr0h	equ	0xFEA
 10237                           fsr0l	equ	0xFE9
 10238                           wreg	equ	0xFE8
 10239                           indf1	equ	0xFE7
 10240                           postdec1	equ	0xFE5
 10241                           fsr1h	equ	0xFE2
 10242                           fsr1l	equ	0xFE1
 10243                           indf2	equ	0xFDF
 10244                           postinc2	equ	0xFDE
 10245                           postdec2	equ	0xFDD
 10246                           fsr2h	equ	0xFDA
 10247                           fsr2l	equ	0xFD9
 10248                           status	equ	0xFD8
 10249                           tblptru	equ	0xFF8
 10250                           tblptrh	equ	0xFF7
 10251                           tblptrl	equ	0xFF6
 10252                           tablat	equ	0xFF5
 10253                           prodh	equ	0xFF4
 10254                           prodl	equ	0xFF3
 10255                           intcon	equ	0xFF2
 10256                           indf0	equ	0xFEF
 10257                           postinc0	equ	0xFEE
 10258                           fsr0h	equ	0xFEA
 10259                           fsr0l	equ	0xFE9
 10260                           wreg	equ	0xFE8
 10261                           indf1	equ	0xFE7
 10262                           postdec1	equ	0xFE5
 10263                           fsr1h	equ	0xFE2
 10264                           fsr1l	equ	0xFE1
 10265                           indf2	equ	0xFDF
 10266                           postinc2	equ	0xFDE
 10267                           postdec2	equ	0xFDD
 10268                           fsr2h	equ	0xFDA
 10269                           fsr2l	equ	0xFD9
 10270                           status	equ	0xFD8
 10271                           
 10272                           	psect	rparam
 10273  0000                     tblptru	equ	0xFF8
 10274                           tblptrh	equ	0xFF7
 10275                           tblptrl	equ	0xFF6
 10276                           tablat	equ	0xFF5
 10277                           prodh	equ	0xFF4
 10278                           prodl	equ	0xFF3
 10279                           intcon	equ	0xFF2
 10280                           indf0	equ	0xFEF
 10281                           postinc0	equ	0xFEE
 10282                           fsr0h	equ	0xFEA
 10283                           fsr0l	equ	0xFE9
 10284                           wreg	equ	0xFE8
 10285                           indf1	equ	0xFE7
 10286                           postdec1	equ	0xFE5
 10287                           fsr1h	equ	0xFE2
 10288                           fsr1l	equ	0xFE1
 10289                           indf2	equ	0xFDF
 10290                           postinc2	equ	0xFDE
 10291                           postdec2	equ	0xFDD
 10292                           fsr2h	equ	0xFDA
 10293                           fsr2l	equ	0xFD9
 10294                           status	equ	0xFD8


Data Sizes:
    Strings     252
    Constant    14
    Data        10
    BSS         103
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      95
    BANK0           160      0      69
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_44(CODE[5]), STR_42(CODE[1]), STR_14(CODE[1]), pin_input(BANK0[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[5]), STR_54(CODE[5]), STR_52(CODE[7]), STR_51(CODE[7]), 
		 -> STR_50(CODE[7]), STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), 
		 -> STR_46(CODE[15]), STR_45(CODE[15]), STR_24(CODE[15]), STR_23(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_53(CODE[2]), STR_43(CODE[11]), STR_41(CODE[6]), STR_40(CODE[8]), 
		 -> STR_39(CODE[4]), STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[5]), 
		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[8]), STR_32(CODE[5]), 
		 -> STR_31(CODE[8]), STR_30(CODE[7]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[8]), STR_26(CODE[16]), STR_25(CODE[17]), buffer1(BANK0[20]), 
		 -> STR_22(CODE[5]), STR_21(CODE[6]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[4]), STR_17(CODE[6]), STR_16(CODE[8]), STR_15(CODE[16]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), pin_input(BANK0[5]), 

    lcd_write@string	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_43(CODE[11]), STR_41(CODE[6]), STR_40(CODE[8]), STR_39(CODE[4]), 
		 -> STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[5]), STR_35(CODE[5]), 
		 -> STR_34(CODE[5]), STR_33(CODE[8]), STR_32(CODE[5]), STR_31(CODE[8]), 
		 -> STR_30(CODE[7]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[8]), 
		 -> STR_26(CODE[16]), STR_25(CODE[17]), buffer1(BANK0[20]), STR_22(CODE[5]), 
		 -> STR_21(CODE[6]), STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[4]), 
		 -> STR_17(CODE[6]), STR_16(CODE[8]), STR_15(CODE[16]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_home_config_refresh
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _activity_menu->_lcd_write
    _button_B->_button_B_menu
    _button_B->_button_B_submenu_activation
    _button_B->_button_B_submenu_date_and_time_config
    _button_B->_button_B_submenu_pin_config
    _button_B->_button_B_submenu_siren_config
    _button_B->_button_B_submenu_siren_tone
    _button_B->_button_B_submenu_siren_volume
    _activity_submenu_siren_volume->_lcd_write
    _activity_submenu_siren_tone->_lcd_write
    _pin_reset->_strcpy
    _activity_submenu_pin_set->_lcd_write
    _activity_submenu_time_config->_lcd_write
    _activity_submenu_date_config->_lcd_write
    _activity_submenu_siren->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_date_and_time->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_menu_selector
    _button_A->_submenu_selector
    _submenu_selector_1->_lcd_write
    _submenu_selector_0->_lcd_write
    _menu_selector_3->_lcd_write
    _menu_selector_2->_lcd_write
    _menu_selector_1->_lcd_write
    _menu_selector_0->_lcd_write
    _activity_pin->_lcd_write
    _home_volume_refresh->_sprintf
    _home_tone_refresh->_sprintf
    _home_state_refresh->_sprintf
    _home_clock_refresh->_sprintf
    _activity_home->_lcd_write
    _lcd_init->_lcd_send_byte
    _activity_submenu_time_config_refresh->_sprintf
    _activity_submenu_date_config_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  547032
                           _Read_RTC
                      _activity_home
_activity_submenu_date_config_refres
_activity_submenu_time_config_refres
                _check_home_callback
                 _home_clock_refresh
                _home_config_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4358
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                          _pin_reset
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  422244
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    5340
                          _lcd_putrs
                _reset_home_callback
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   53232
                _pin_input_validator
                            _pin_set
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _pin_set                                              0     0      0   13328
                      _activity_home
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  0     0      0   39904
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0       0
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0   12741
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0   24634
                      _activity_menu
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0   24634
                           _lcd_init
                          _lcd_write
                    _menu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0  239888
                                             18 COMRAM     2     2      0
                      _button_B_menu
        _button_B_submenu_activation
_button_B_submenu_date_and_time_conf
        _button_B_submenu_pin_config
      _button_B_submenu_siren_config
        _button_B_submenu_siren_tone
      _button_B_submenu_siren_volume
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_volume                        2     2      0   12741
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_tone                          2     2      0   12741
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_siren_config                        2     2      0   49268
                                             16 COMRAM     2     2      0
        _activity_submenu_siren_tone
      _activity_submenu_siren_volume
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_volume                        0     0      0   24634
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren_tone                          0     0      0   24634
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_pin_config                          2     2      0   28379
                                             16 COMRAM     2     2      0
                      _activity_home
           _activity_submenu_pin_set
                          _pin_reset
 ---------------------------------------------------------------------------------
 (2) _pin_reset                                            0     0      0     587
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin_set                             0     0      0   15051
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_date_and_time_config                2     2      0   25482
                                             16 COMRAM     2     2      0
       _activity_submenu_date_config
       _activity_submenu_time_config
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_time_config                         0     0      0   12741
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_config                         0     0      0   12741
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _button_B_submenu_activation                          2     2      0   12741
                                             16 COMRAM     2     2      0
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _button_B_menu                                        2     2      0   98536
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
     _activity_submenu_date_and_time
               _activity_submenu_pin
             _activity_submenu_siren
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_siren                               0     0      0   24634
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_pin                                 0     0      0   24634
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_date_and_time                       0     0      0   24634
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (4) _activity_submenu_activation                          0     0      0   24634
                           _lcd_init
                          _lcd_write
                 _submenu_selector_0
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   86409
                                             18 COMRAM     2     2      0
                       _activity_pin
                      _menu_selector
                _reset_home_callback
                   _submenu_selector
 ---------------------------------------------------------------------------------
 (3) _submenu_selector                                     2     2      0   23786
                                             16 COMRAM     2     2      0
                 _submenu_selector_0
                 _submenu_selector_1
 ---------------------------------------------------------------------------------
 (4) _submenu_selector_1                                   0     0      0   11893
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _submenu_selector_0                                   0     0      0   11893
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _menu_selector                                        2     2      0   47572
                                             16 COMRAM     2     2      0
                    _menu_selector_0
                    _menu_selector_1
                    _menu_selector_2
                    _menu_selector_3
 ---------------------------------------------------------------------------------
 (4) _menu_selector_3                                      0     0      0   11893
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_2                                      0     0      0   11893
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _menu_selector_1                                      0     0      0   11893
                          _lcd_write
 ---------------------------------------------------------------------------------
 (5) _menu_selector_0                                      0     0      0   11893
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   15051
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _home_config_refresh                                  2     2      0   45267
                                             35 COMRAM     2     2      0
                 _home_state_refresh
                  _home_tone_refresh
                _home_volume_refresh
 ---------------------------------------------------------------------------------
 (2) _home_volume_refresh                                  0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_tone_refresh                                    0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _home_state_refresh                                   0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   15089
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _check_home_callback                                  0     0      0   12741
                      _activity_home
                _reset_home_callback
 ---------------------------------------------------------------------------------
 (3) _reset_home_callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _activity_home                                        0     0      0   12741
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _activity_submenu_time_config_refresh                 0     0      0   16812
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _activity_submenu_date_config_refresh                 0     0      0   16812
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    3196
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6   11893
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1918
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1745
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    1077
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _activity_submenu_date_config_refresh
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _activity_submenu_time_config_refresh
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _check_home_callback
     _activity_home
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _reset_home_callback
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _home_config_refresh
     _home_state_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_tone_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _home_volume_refresh
       _lcd_write
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _keyboard_control
     _button_A
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
       _menu_selector
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_2
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _menu_selector_3
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
       _submenu_selector
         _submenu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _submenu_selector_1
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
     _button_B
       _button_B_menu
         _activity_submenu_activation
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_date_and_time
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_pin
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_activation
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_date_and_time_config
         _activity_submenu_date_config
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_time_config
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_pin_config
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_submenu_pin_set
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _pin_reset
           _strcpy
       _button_B_submenu_siren_config
         _activity_submenu_siren_tone
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_submenu_siren_volume
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _submenu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
       _button_B_submenu_siren_tone
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _button_B_submenu_siren_volume
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_C
       _activity_menu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _menu_selector_0
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
       _reset_home_callback
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _reset_home_callback
     _button_asterisk
       _reset_home_callback
     _button_hash
       _pin_input_validator
         _activity_menu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _menu_selector_0
             _lcd_write
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
       _pin_set
         _activity_home
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _strcpy
       _reset_home_callback
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _reset_home_callback
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _pin_reset
       _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      45       5       43.1%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     25      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4       6        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Sep 17 20:22:08 2016

                                             _a 0001                                               _b 0009  
                                             _c 007C                                               _i 0013  
                                             _j 0015                                               _k 007E  
                                ?_lcd_send_byte 002C                                    ___awdiv@sign 002F  
                           ___wmul@multiplicand 002C                            ?_home_volume_refresh 002A  
                                   lcd_comand@d 002E                                    __CFG_CP0$OFF 000000  
                               lcd_write@column 0034                                             l400 F9FE  
                                           l401 F9FA                                             l420 FA60  
                                           l412 FA3C                                             l404 FA10  
                                           l421 FA5C                                             l413 FA38  
                                           l405 FA0C                                             l440 FAC2  
                                           l432 FA9E                                             l424 FA72  
                                           l416 FA4E                                             l408 FA22  
                                           l441 FABE                                             l433 FA9A  
                                           l425 FA6E                                             l417 FA4A  
                                           l409 FA1E                                             l452 FB00  
                                           l444 FADC                                             l436 FAB0  
                                           l428 FA8C                                             l453 FAFC  
                                           l445 FAD8                                             l437 FAAC  
                                           l429 FA88                                             l448 FAEE  
                                           l457 FB0E                                             l449 FAEA  
                                           l571 FE5A                                             l492 E634  
                                           l396 F9EC                                             l493 E636  
                                           l397 F9E8                           ??_check_home_callback 003A  
                                           _dia 0051                                             _key 0021  
                                           _mes 0057                                             _pin 0094  
                               lcd_write@string 0038                                             wreg 000FE8  
                               RtccReadDate@pDt 002A                                     lcd_gotoxy@x 002F  
                                   lcd_gotoxy@y 002E                               ??_button_asterisk 002A  
                                          l1215 EE78                                            l1225 EAE8  
                                          l3101 EC1A                                            l3131 EE3C  
                                          l3115 E444                                            l3133 EE46  
                                          l3143 EE6C                                            l3135 EE4E  
                                          l3151 EAB4                                            l3303 E984  
                                          l3223 F880                                            l3215 F868  
                                          l3153 EABE                                            l3401 FE30  
                                          l3305 E98A                                            l3313 E99C  
                                          l3321 E58A                                            l3155 EAC6  
                                          l3403 FE38                                            l3307 E990  
                                          l3323 E590                                            l3219 F874  
                                          l3171 F7BE                                            l4043 EB2A  
                                          l3341 FCAC                                            l3309 E996  
                                          l3501 E6FC                                            l3245 F928  
                                          l3181 F7FC                                            l4029 EAFC  
                                          l3159 EADC                                            l3415 FEB4  
                                          l3343 FCBA                                            l3335 FC92  
                                          l3327 E596                                            l3095 EBDC  
                                          l3431 E580                                            l3255 F958  
                                          l3239 F8EE                                            l4039 EB1A  
                                          l3409 FE60                                            l3361 FD5C  
                                          l3353 FCF8                                            l3417 FEC0  
                                          l3441 E9DE                                            l3521 E6CC  
                                          l3505 E706                                            l3097 EBE6  
                                          l3249 F93C                                            l3177 F7E8  
                                          l3419 FEDC                                            l3347 FCC4  
                                          l3435 E9CC                                            l3531 E5BA  
                                          l3523 E6EC                                            l3515 E6BA  
                                          l3507 E726                                            l3291 F9BA  
                                          l3187 F818                                            l3381 FDD0  
                                          l3373 FDA0                                            l3365 FD62  
                                          l3349 FCDA                                            l3437 E9D2  
                                          l3445 E9E4                                            l3461 E6B2  
                                          l3453 E680                                            l3533 E5C0  
                                          l3517 E6C2                                            l3391 FE02  
                                          l3367 FD84                                            l3711 EC5C  
                                          l3439 E9D8                                            l3455 E688  
                                          l3471 E652                                            l3551 EA3E  
                                          l3295 F9C6                                            l3287 F9AE  
                                          l3385 FDD4                                            l3377 FDAC  
                                          l2905 F378                                            l3537 E5C6  
                                          l3545 EA1C                                            l3561 F55E  
                                          l2819 E394                                            l3395 FE0E  
                                          l3731 E732                                            l3459 E692  
                                          l3491 E5F6                                            l3547 EA22  
                                          l2845 E47C                                            l2853 EA5E  
                                          l3389 FDF8                                            l3709 EC46  
                                          l3725 EC98                                            l3717 ECEA  
                                          l3733 E738                                            l3469 E64C  
                                          l3477 E65C                                            l3485 E5EA  
                                          l3549 EA34                                            l3805 F216  
                                          l3573 F586                                            l3647 F0E6  
                                          l2847 E482                                            l2855 EA6A  
                                          l2863 EA8E                                            l2871 ED4A  
                                          l3727 ECAE                                            l3719 ED00  
                                          l3903 F63C                                            l3911 F65C  
                                          l2927 E946                                            l3735 E73E  
                                          l3487 E5F0                                            l3751 F166  
                                          l3575 F590                                            l3567 F570  
                                          l3673 F428                                            l2857 EA76  
                                          l2873 E3A6                                            l2929 E950  
                                          l3753 F16C                                            l3593 F5D2  
                                          l3585 F5B6                                            l3577 F598  
                                          l2859 EA82                                            l2867 ED20  
                                          l2891 F354                                            l3739 E744  
                                          l3499 E6F4                                            l3755 F172  
                                          l3747 F15A                                            l3763 F184  
                                          l3757 F178                                            l3749 F160  
                                          l3589 F5C2                                            l2887 F34C  
                                          l3759 F17E                                            l2897 F364  
                                          l3891 F5FC                                            l3885 F5EA  
                                          l3789 E4A6                                            l3799 F1DA  
                                          l3983 FB16                                            l3897 F61C  
                                          l3889 F5F6                 ??_activity_submenu_siren_volume 003A  
                                          STR_1 FFE3                                            STR_2 FFF5  
                                          STR_3 FFF1                                            STR_4 FFF5  
                                          STR_5 FFF1                                            STR_6 FFF5  
                                          STR_7 FFF1            __size_of_button_B_submenu_pin_config 0034  
                                          STR_8 FFF5                                            STR_9 FFF1  
                                          u1310 F240                                            u1330 F258  
                                          u1410 ED40                                            u1420 ED6A  
                                          u1350 F272                                            u1328 F242  
                                          u1417 ED36                                            u1370 F28E  
                                          u1427 ED60                                            u1348 F25A  
                                          u1368 F274                                            u1480 E978  
                                          u1388 F290                                            u1487 E96E  
                                          u2617 FB1C                                            u2627 E3A8  
                                          u2637 E396             __end_of_activity_submenu_siren_tone F080  
                   _activity_submenu_siren_tone F01A                                ?_lcd_send_nibble 002A  
                                          _anio 004F                                            _flag 02F8  
                                          _main EAF2                                            _hora 0055  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr0l 000FE9  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          fsr1l 000FE1                                            indf2 000FDF  
                                          fsr2l 000FD9                      __size_of_home_tone_refresh 0052  
                                 __CFG_T1DIG$ON 000000                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                                 __CFG_IESO$OFF 000000                                RtccReadDate@rTD0 0034  
                              RtccReadDate@rTD1 002C                            __end_of_activity_pin EB8C  
                 ??_activity_submenu_siren_tone 003A                                    ___param_bank 000010  
                               RtccReadTime@pTm 002A                 __size_of_activity_submenu_siren 0066  
          __end_of_activity_submenu_time_config E55E           __size_of_activity_submenu_time_config 002A  
                  _activity_submenu_time_config E534                           ??_home_volume_refresh 004D  
                                   _Delay1KTCYx E3A4                                   __CFG_PLLDIV$1 000000  
                                         ?_main 002A                                 __end_of___awdiv F5DE  
                                         STR_10 FFF5                                           STR_11 FFF1  
                                         STR_12 FFF5                                           STR_20 FFB9  
                                         STR_13 FFF1                                           STR_21 FFB3  
                                         STR_14 FFF2                                           STR_22 FFCA  
                                         STR_30 FFAC                                           STR_31 FF55  
                                         STR_23 FF2C                                           STR_15 FF0C  
                                         STR_32 FFD4                                           STR_16 FF65  
                                         STR_40 FF5D                                           STR_24 FF3B  
                                         STR_33 FF55                                           STR_41 FFBF  
                                         STR_17 FFB9                                           STR_25 FEFB  
                                         STR_42 FFF2                                           STR_18 FFE7  
                                         STR_34 FFCF                                           STR_50 FF97  
                                         STR_26 FF1C                                           STR_27 FF65  
                                         STR_35 FFD9                                           STR_19 FFA5  
                                         STR_51 FF74                                           STR_43 FF4A  
                                         STR_36 FFD4                                           STR_28 FFEB  
                                         STR_44 FFC5                                           STR_52 FF82  
                                         STR_45 FF2C                                           STR_53 FFF3  
                                         STR_29 FFEE                                           STR_37 FF6D  
          __size_of_button_B_submenu_siren_tone 003A                                           STR_46 FF3B  
                                         STR_54 FFDE                                           STR_38 FF7B  
                                         STR_39 FFE7                                           STR_55 FFDE  
                                         STR_47 FF90                                           STR_48 FF9E  
                                         STR_49 FF89                           __size_of_Delay100TCYx 0012  
                               ___awdiv@divisor 002C                                 __end_of___lwdiv EE82  
                               __end_of___lwmod EAF2                                 ___awdiv@counter 002E  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                    ?_button_hash 002A  
                                __CFG_FCMEN$OFF 000000                                 __end_of_dpowers FEF7  
                                         _mes_d 005C                                           _mes_u 00A2  
                               __end_of_isdigit E44E                                           _setup F2AA  
                                         _state 001D                                 __end_of_pin_set E410  
         __end_of_button_B_submenu_siren_config E618          __size_of_button_B_submenu_siren_config 0030  
                 _button_B_submenu_siren_config E5E8                                  __pbitbssCOMRAM 02F8  
                                         tablat 000FF5                     __size_of_home_state_refresh 0052  
                           _reset_home_callback E366                                    lcd_putrs@ptr 0032  
                                         status 000FD8                                 __end_of_sprintf FEEC  
         __end_of_button_B_submenu_siren_volume E72C          __size_of_button_B_submenu_siren_volume 003A  
                 _button_B_submenu_siren_volume E6F2                __end_of_activity_submenu_pin_set EBDA  
                         __end_of_activity_home E50A                           __end_of_activity_menu F428  
                                  lcd_write@row 0036                        __size_of_menu_selector_0 0042  
                      __size_of_menu_selector_1 0042                        __size_of_menu_selector_2 0042  
                      __size_of_menu_selector_3 0042                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization E8F8                                    _Delay100TCYx E392  
                                  __end_of_main EB3E                     __size_of_submenu_selector_0 0042  
                   __size_of_submenu_selector_1 0042                                 ??_lcd_send_byte 002D  
                              RtccReadTime@rTD0 0034                                RtccReadTime@rTD1 002C  
                              __end_of_Read_RTC F780                   ?_activity_submenu_time_config 002A  
                          ?_reset_home_callback 002A                                          ??_main 004F  
                                 __activetblptr 000002                                __end_of_RtccWrOn E3C8  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                        _activity_submenu_siren EFB4                                          _EECON2 000FA7  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                              ___awdiv@dividend 002A                                          ?_setup 002A  
                                __CFG_WDTEN$OFF 000000                    __size_of_pin_input_validator 002A  
                              RtccWriteDate@pDt 002A                                          _RTCCFG 000F3F  
                                __CFG_WPCFG$OFF 000000                                   _home_callback 000F  
         __end_of_activity_submenu_siren_volume F0E6          __size_of_activity_submenu_siren_volume 0066  
                 _activity_submenu_siren_volume F080                                  __CFG_WPDIS$OFF 000000  
                             ?_submenu_selector 002A                             _home_callback_delay 0011  
                                __CFG_XINST$OFF 000000                             _home_config_refresh F5DE  
                        __size_of_button_B_menu 0048                              ??_submenu_selector 003A  
                              __end_of_lcd_init F3A6                      __end_of_home_clock_refresh F548  
                              __end_of_lcd_putc EAA6                                          ___wmul E4B8  
                                     ??___awdiv 002E                                  __CFG_STVREN$ON 000000  
                                        _diasem 0053                                          _anio_d 0059  
                                        _anio_u 009E                                       ??___lwdiv 002E  
                                     ??___lwmod 0035                           ??_reset_home_callback 002A  
                                        _hora_d 005B                                          _hora_u 00A1  
                              __end_of_button_A E76C                                __end_of_button_B F1C4  
                              __end_of_button_C E42C                                __end_of_button_D E37A  
                                        clear_0 E8FE                                          clear_1 E90C  
                              ___awdiv@quotient 0030                                          _minuto 0019  
           __end_of_button_B_submenu_activation E6B8                     _button_B_submenu_activation E67E  
                         __end_of_RtccWriteDate F9D2                                          _strcat EA12  
                                        _strcmp EBDA                           __end_of_RtccWriteTime F88C  
                                        _strcpy E93C                                RtccWriteTime@pTm 002A  
                                  __pdataCOMRAM 004F                                       ??_isdigit 002A  
                        __size_of_button_number 0070                                    __mediumconst FEEC  
                                     ??_pin_set 003A                            ?_home_config_refresh 002A  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ??_sprintf 0040  
                         __size_of_activity_pin 004E                                      __accesstop 0060  
                       __end_of__initialization E932                              __size_of_Write_RTC 0160  
                                 ___rparam_used 000001                       __size_of_keyboard_control 0156  
                                __pcstackCOMRAM 002A                                   __end_of_setup F326  
                             ??_menu_selector_0 003A                               ??_menu_selector_1 003A  
                             ??_menu_selector_2 003A                               ??_menu_selector_3 003A  
                               __CFG_DSWDTPS$G2 000000                          __size_of_menu_selector 0048  
                               _button_asterisk E360               __size_of_activity_submenu_pin_set 004E  
                               __CFG_OSC$INTOSC 000000                           ??_home_config_refresh 004D  
                     ?_activity_submenu_pin_set 002A                                   _button_B_menu E9CA  
                                  _activity_pin EB3E                                    _alarm_volume 0007  
                             lcd_gotoxy@address 0030                            __size_of_button_hash 0024  
                            __size_of_lcd_putrs 0054                              __size_of_lcd_write 0018  
                                  sprintf@width 004A                                         ??_setup 0037  
                                    __pbssBANK0 0060                                       ?_Read_RTC 002A  
                                    _dia_semana 009F                       RtccWriteTime@tempHourWDay 0033  
                                    __pnvCOMRAM 0059                                      _alarm_tone 0005  
                 __size_of_activity_submenu_pin 0066                                   _button_number F1C4  
                                     ?_RtccWrOn 002A                                  lcd_send_byte@n 002C  
                ?_activity_submenu_siren_volume 002A             __end_of_button_B_submenu_pin_config E67E  
                   _button_B_submenu_pin_config E64A                                         ?___wmul 002A  
                                 ?_RtccReadDate 002A                     __end_of_check_home_callback E470  
                                 ?_RtccReadTime 002A                              __size_of_pin_reset 0016  
                                  ?_Delay1KTCYx 002A                ??_activity_submenu_date_and_time 003A  
               ?_activity_submenu_date_and_time 002A                                         ?_strcat 002A  
                                       ?_strcmp 002A                                         ?_strcpy 002A  
                             __end_of_Write_RTC FC88                                  ?_button_B_menu 002A  
                                    _lcd_comand E384                                      _lcd_gotoxy E470  
                                       _RTCVALH 000F99                                         _RTCVALL 000F98  
                                     ?_lcd_init 002A                                       ?_lcd_putc 002A  
  __end_of_activity_submenu_date_config_refresh EDCC   __size_of_activity_submenu_date_config_refresh 005A  
        ??_activity_submenu_date_config_refresh 004D           ?_activity_submenu_date_config_refresh 002A  
          _activity_submenu_date_config_refresh ED72                                   _menu_selected 0017  
                                 _menu_selector E982             __end_of_button_B_submenu_siren_tone E6F2  
                   _button_B_submenu_siren_tone E6B8                                      ??_Read_RTC 003C  
                                     ?_button_A 002A                                       ?_button_B 002A  
                                     ?_button_C 002A                                       ?_button_D 002A  
                                ?_button_number 002A                                         __Hparam 0000  
                ??_activity_submenu_date_config 003A                                         __Lparam 0000  
                   __end_of_home_volume_refresh ED1E                        __size_of_lcd_send_nibble 0076  
                       __end_of_button_asterisk E366                                      ??_RtccWrOn 002A  
                                ??_RtccReadDate 002C                                  ??_RtccReadTime 002C  
                                       ___awdiv F548                               __end_of_lcd_putrs ED72  
                             __end_of_lcd_write E3F6                                 __size_of___wmul 0028  
                                       ___lwdiv EE26                                         ___lwmod EAA6  
                                   _RtccTimeVal 0078                                         __pcinit E8F8  
                                       _fecha_d 005A                                         _fecha_u 00A0  
                                       __ramtop 0F00                             _pin_input_validator E55E  
                                       __ptext0 EAF2                                         __ptext1 F2AA  
                                       __ptext2 FB28                                         __ptext3 F548  
                                       __ptext4 F780                                         __ptext5 F88C  
                                       __ptext6 E3B6                                         __ptext7 F9D2  
                                       __ptext8 F1C4                                         __ptext9 EA12  
                  ?_activity_submenu_activation 002A                                         _buffer1 0080  
                               __size_of_strcat 0048                                 __size_of_strcmp 004E  
                               __size_of_strcpy 0046                                       _T1CONbits 000FCD  
                                       _dpowers FEED                                         _isdigit E42C  
                       ?_activity_submenu_siren 002A                                         _pin_set E3F6  
                                       _segundo 001B                      __end_of_home_state_refresh EC7A  
                                       _sprintf FC88                                      ??_lcd_init 002E  
                                    ??_lcd_putc 0031                            end_of_initialization E932  
                                ?_menu_selector 002A                               __end_of_pin_reset E3DE  
                          ?_pin_input_validator 002A                            lcd_send_byte@address 002D  
                                    ??_button_A 003C                                   __Lmediumconst FEEC  
                                    ??_button_B 003C                                      ??_button_C 003A  
                                    ??_button_D 003A                      __end_of_submenu_selector_0 E8B6  
                    __end_of_submenu_selector_1 E8F8    __end_of_activity_submenu_time_config_refresh EE26  
 __size_of_activity_submenu_time_config_refresh 005A          ??_activity_submenu_time_config_refresh 004D  
         ?_activity_submenu_time_config_refresh 002A            _activity_submenu_time_config_refresh EDCC  
                              _keyboard_control F9D2                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc2 000FDE                           __end_of_lcd_send_byte E64A  
                                       strcmp@r 002F                                       _PORTAbits 000F80  
                                     _PORTCbits 000F82                                 ??_button_B_menu 003A  
                __end_of_activity_submenu_siren F01A                                __CFG_DSBOREN$OFF 000000  
                     __size_of_submenu_selector 0030                                     ?_lcd_comand 002A  
                            _home_clock_refresh F4B6                                __CFG_CPUDIV$OSC1 000000  
                                     _TRISBbits 000F93                          __size_of_activity_home 002A  
                        __size_of_activity_menu 0082                                     ?_lcd_gotoxy 002E  
                               _LCD_INIT_STRING FEF7                             ?_home_clock_refresh 002A  
                         ??_pin_input_validator 003A                                 ??_button_number 004D  
                               _menu_selector_0 E76C                                 _menu_selector_1 E7AE  
                               _menu_selector_2 E7F0                                 _menu_selector_3 E832  
                              __CFG_IOL1WAY$OFF 000000                       RtccWriteDate@tempDayMonth 0033  
                   __end_of_reset_home_callback E370                             __CFG_MSSP7B_EN$MSK7 000000  
                              ?_button_asterisk 002A                                Delay100TCYx@unit 002A  
                          ??_home_clock_refresh 004D                                  __end_of___wmul E4E0  
                                 __pidataCOMRAM E37A                       RtccWriteDate@tempHourWDay 0035  
                             ??_lcd_send_nibble 002A                            __size_of_Delay1KTCYx 0012  
                              __CFG_DSWDTEN$OFF 000000                                  __end_of_strcat EA5A  
                                __end_of_strcmp EC28                                  __end_of_strcpy E982  
                           start_initialization E8F8                                 ??_menu_selector 003A  
                          __end_of_RtccReadDate F4B6                            __end_of_RtccReadTime F154  
                          RtccWriteTime@wasAlrm 002F                    ?_activity_submenu_siren_tone 002A  
                          RtccWriteTime@wasWrEn 0030            __size_of_activity_submenu_activation 0066  
                        __size_of_RtccWriteDate 0146                                 RtccWriteDate@di 002C  
                        __size_of_RtccWriteTime 010C                               __size_of_Read_RTC 00FC  
                                 _activity_home E4E0                                   _activity_menu F3A6  
                           __size_of_lcd_comand 000E                             __size_of_lcd_gotoxy 0024  
                                      ??___wmul 002E                               __size_of_RtccWrOn 0012  
                               RtccWriteTime@di 002C                                __CFG_LPT1OSC$OFF 000000  
                   __end_of_home_config_refresh F684                                        ??_strcat 002E  
                                      ??_strcmp 002E                                        ??_strcpy 002E  
                  __end_of_activity_submenu_pin EFB4                                     _ALRMCFGbits 000F91  
                       __end_of_LCD_INIT_STRING FEFB                                   ??_button_hash 003A  
                                   __pbssCOMRAM 0001                                       _Write_RTC FB28  
                                  _isdigit$2205 002B                         __end_of_menu_selector_0 E7AE  
                       __end_of_menu_selector_1 E7F0                         __end_of_menu_selector_2 E832  
                       __end_of_menu_selector_3 E874          __end_of_activity_submenu_date_and_time EF4E  
       __size_of_activity_submenu_date_and_time 0066                  _activity_submenu_date_and_time EEE8  
                               Delay1KTCYx@unit 002A                               __size_of_lcd_init 0080  
                                   sprintf@flag 0046                               __size_of_lcd_putc 004C  
                                   sprintf@prec 0049                                       __pnvBANK0 009E  
                                ?_activity_home 002A                                  ?_activity_menu 002A  
                             __size_of_button_A 0040                               __size_of_button_B 0070  
                             __size_of_button_C 001C                               __size_of_button_D 000A  
                              ___lwdiv@dividend 002A                                   ?_Delay100TCYx 002A  
                ?_button_B_submenu_siren_config 002A                                   __pmediumconst FEEC  
                                      ?___awdiv 002A                                        ?___lwdiv 002A  
                                      ?___lwmod 0031                  ?_button_B_submenu_siren_volume 002A  
                       RtccWriteTime@tempMinSec 0031                        _activity_submenu_pin_set EB8C  
                                     _lcd_putrs ED1E                                       _lcd_write E3DE  
                              _submenu_selected 001F                                _submenu_selector E588  
                                 _RtccWriteDate F88C                                   _RtccWriteTime F780  
                  __size_of_check_home_callback 0022                                        ?_isdigit 002A  
                          __CFG_RTCOSC$T1OSCREF 000000                                        ?_pin_set 002A  
                      __end_of_keyboard_control FB28                                      ?_Write_RTC 002A  
                              ___lwdiv@quotient 002E                  ??_activity_submenu_time_config 003A  
                                      ?_sprintf 0036                                  __size_of_setup 007C  
                           __end_of_button_hash E4B8                                _RtccAlrmTimeDate 0060  
                                ___wmul@product 002E                                        _LATAbits 000F89  
                                      _LATBbits 000F8A                                       _pin_input 0099  
                                     _pin_reset E3C8                                        _PIE3bits 000FA3  
                                     _segundo_d 005E                                  ??_Delay100TCYx 002A  
                            _home_state_refresh EC28                                       _segundo_u 00A4  
                              __CFG_WDTPS$32768 000000                              RtccWriteDate@wasOn 002E  
                           ?_home_state_refresh 002A                              _Rtcc_read_TimeDate 0070  
                  __size_of_home_volume_refresh 0052            __size_of_activity_submenu_siren_tone 0066  
                                ?_RtccWriteDate 002A                                      ?_lcd_putrs 0032  
                                    ?_lcd_write 0034                               ___wmul@multiplier 002A  
                                ?_RtccWriteTime 002A                              _submenu_selector_0 E874  
                            _submenu_selector_1 E8B6                    ?_button_B_submenu_activation 002A  
                                     lcd_init@i 002E                           __size_of_RtccReadDate 008E  
 __end_of_button_B_submenu_date_and_time_config E5E8  __size_of_button_B_submenu_date_and_time_config 0030  
       ??_button_B_submenu_date_and_time_config 003A          ?_button_B_submenu_date_and_time_config 002A  
         _button_B_submenu_date_and_time_config E5B8                                    ??_lcd_comand 002E  
                                     lcd_putc@c 0031                           __size_of_RtccReadTime 006E  
          __end_of_activity_submenu_date_config E534           __size_of_activity_submenu_date_config 002A  
                  _activity_submenu_date_config E50A                                    ??_lcd_gotoxy 002F  
                           ?_submenu_selector_0 002A                             ?_submenu_selector_1 002A  
                              ?_menu_selector_0 002A                                ?_menu_selector_1 002A  
                              ?_menu_selector_2 002A                                ?_menu_selector_3 002A  
                                     copy_data0 E926                            ??_home_state_refresh 004D  
                                      _Read_RTC F684                                 ??_activity_home 003A  
                               ??_activity_menu 003A                                      ?_pin_reset 002A  
                          _activity_submenu_pin EF4E                                 _lcd_send_nibble F234  
                                      __Hrparam 0000                                        _RtccDate 0022  
                                      __Lrparam 0000                                        _RtccTime 0026  
                                      _RtccWrOn E3B6                            ??_submenu_selector_0 003A  
                          ??_submenu_selector_1 003A                              __end_of_lcd_comand E392  
                            __end_of_lcd_gotoxy E494                                    _RtccReadDate F428  
                              __size_of___awdiv 0096                                    _RtccReadTime F0E6  
                              __size_of___lwdiv 005C                                __size_of___lwmod 004C  
                                  _RtccTimeDate 0068                              _config_widget_time 000D  
                                    sprintf@val 0047                           __end_of_button_B_menu EA12  
                 ??_button_B_submenu_activation 003A                                      strcat@from 002C  
                                   _button_hash E494                                   ?_activity_pin 002A  
                                      _activity 0003                     __end_of_pin_input_validator E588  
                              __size_of_isdigit 0022                                 ___lwdiv@divisor 002C  
                                   ??_Write_RTC 0037                                __size_of_pin_set 001A  
                               ___lwdiv@counter 0030                                        __ptext10 E494  
                                      __ptext11 E3F6                                        __ptext20 E6B8  
                                      __ptext12 E55E                                        __ptext21 E5E8  
                                      __ptext13 EBDA                                        __ptext30 E67E  
                                      __ptext22 F080                                        __ptext14 E360  
                                      __ptext31 E9CA                                        __ptext23 F01A  
                                      __ptext15 E370                                        __ptext40 E982  
                                      __ptext32 EFB4                                        __ptext24 E64A  
                                      __ptext16 E410                                        __ptext41 E832  
                                      __ptext33 EF4E                                        __ptext25 E3C8  
                                      __ptext17 F3A6                                        __ptext50 EC28  
                                      __ptext42 E7F0                                        __ptext34 EEE8  
                                      __ptext26 EB8C                                        __ptext18 F154  
                                      __ptext51 F4B6                                        __ptext43 E7AE  
                                      __ptext35 EE82                                        __ptext27 E5B8  
                                      __ptext19 E6F2                                        __ptext60 E42C  
                                      __ptext52 E44E                                        __ptext44 E76C  
                                      __ptext36 E72C                                        __ptext28 E534  
                                      __ptext61 E4B8                                        __ptext53 E366  
                                      __ptext45 EB3E                                        __ptext37 E588  
                                      __ptext29 E50A                                        __ptext70 F234  
                                      __ptext62 EAA6                                        __ptext54 E4E0  
                                      __ptext46 E93C                                        __ptext38 E8B6  
                                      __ptext71 E392                                        __ptext63 EE26  
                                      __ptext55 F326                                        __ptext47 F5DE  
                                      __ptext39 E874                                        __ptext72 F684  
                                      __ptext64 E3DE                                        __ptext56 E3A4  
                                      __ptext48 ECCC                                        __ptext73 F0E6  
                                      __ptext65 ED1E                                        __ptext57 EDCC  
                                      __ptext49 EC7A                                        __ptext74 F428  
                                      __ptext66 EA5A                                        __ptext58 ED72  
                                      __ptext67 E470                                        __ptext59 FC88  
                                      __ptext68 E384                                        __ptext69 E618  
                 ?_activity_submenu_date_config 002A                                        _lcd_init F326  
                                      _lcd_putc EA5A                                __size_of_sprintf 0264  
                                    strcpy@from 002C                          __size_of_lcd_send_byte 0032  
                                      _button_A E72C                                        _button_B F154  
                                      _button_C E410                                        _button_D E370  
                                 __size_of_main 004C                           __end_of_button_number F234  
                         ?_activity_submenu_pin 002A                                        _minuto_d 005D  
                                      _minuto_u 00A3                               _home_tone_refresh EC7A  
                            ?_home_tone_refresh 002A                    ?_button_B_submenu_pin_config 002A  
                                 ??_Delay1KTCYx 002A                                 ??_RtccWriteDate 002D  
                   __size_of_home_clock_refresh 0092                                 ??_RtccWriteTime 002D  
           __end_of_activity_submenu_activation EEE8                     _activity_submenu_activation EE82  
                  __size_of_reset_home_callback 000A                                     ??_lcd_putrs 0034  
                                   ??_lcd_write 003A                             ??_home_tone_refresh 004D  
                      __size_of_button_asterisk 0006                                  ??_activity_pin 003A  
                                   _OSCTUNEbits 000F9B                                      _INTCONbits 000FF2  
                            RtccWriteTime@wasOn 002E                            __end_of_Delay100TCYx E3A4  
                 ??_activity_submenu_activation 003A                                        isdigit@c 002C  
                         __end_of_menu_selector E9CA                                       sprintf@ap 0044  
                       __end_of_lcd_send_nibble F2AA                                       sprintf@sp 0036  
                              ___lwmod@dividend 0031                    ?_button_B_submenu_siren_tone 002A  
                     __end_of_home_tone_refresh ECCC            __size_of_button_B_submenu_activation 003A  
                      __end_of_submenu_selector E5B8                                     ??_pin_reset 0030  
                           _check_home_callback E44E                      ??_activity_submenu_pin_set 003A  
                                    _OSCCONbits 000FD3                                   _config_widget 000B  
                         RtccWriteDate@tempYear 0030                        ??_activity_submenu_siren 003A  
                                 _lcd_send_byte E618                   ??_button_B_submenu_pin_config 003A  
                                    _RTCCFGbits 000F3F                                        sprintf@c 004C  
                                      sprintf@f 0038                                        strcat@cp 002E  
                                      strcat@to 002A                            ?_check_home_callback 002A  
                                      strcmp@s1 002A                                        strcmp@s2 002C  
                               ___lwmod@divisor 0033                                        strcpy@cp 002E  
                                      strcpy@to 002A                             __end_of_Delay1KTCYx E3B6  
                               ___lwmod@counter 0035                 ??_button_B_submenu_siren_config 003A  
                  __size_of_home_config_refresh 00A6                            RtccWriteDate@wasAlrm 002F  
                          RtccWriteDate@wasWrEn 0032                               ?_keyboard_control 002A  
               ??_button_B_submenu_siren_volume 003A                              ??_keyboard_control 004D  
                           _home_volume_refresh ECCC                          ??_activity_submenu_pin 003A  
                 ??_button_B_submenu_siren_tone 003A                           lcd_send_nibble@nibble 002B  
