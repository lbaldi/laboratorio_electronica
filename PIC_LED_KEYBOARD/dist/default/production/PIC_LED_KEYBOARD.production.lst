

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 13 20:38:17 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  0024A8                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _anio
    69  0024A8  0010               	dw	16
    70                           
    71                           ;initializer for _dia
    72  0024AA  0006               	dw	6
    73                           
    74                           ;initializer for _diasem
    75  0024AC  0002               	dw	2
    76                           
    77                           ;initializer for _hora
    78  0024AE  0012               	dw	18
    79                           
    80                           ;initializer for _mes
    81  0024B0  0009               	dw	9
    82                           
    83                           	psect	smallconst
    84  000F00                     __psmallconst:
    85                           	opt stack 0
    86  000F00  00                 	db	0
    87  000F01                     _dpowers:
    88                           	opt stack 0
    89  000F01  0001               	dw	1
    90  000F03  000A               	dw	10
    91  000F05  0064               	dw	100
    92  000F07  03E8               	dw	1000
    93  000F09  2710               	dw	10000
    94  000F0B                     __end_of_dpowers:
    95                           	opt stack 0
    96  000F0B                     _LCD_INIT_STRING:
    97                           	opt stack 0
    98  000F0B  28                 	db	40
    99  000F0C  0C                 	db	12
   100  000F0D  01                 	db	1
   101  000F0E  06                 	db	6
   102  000F0F                     __end_of_LCD_INIT_STRING:
   103                           	opt stack 0
   104  000F0F                     STR_6:
   105                           
   106                           ; BSR set to: 15
   107  000F0F  49                 	db	73	;'I'
   108  000F10  6E                 	db	110	;'n'
   109  000F11  67                 	db	103	;'g'
   110  000F12  72                 	db	114	;'r'
   111  000F13  65                 	db	101	;'e'
   112  000F14  73                 	db	115	;'s'
   113  000F15  65                 	db	101	;'e'
   114  000F16  20                 	db	32
   115  000F17  73                 	db	115	;'s'
   116  000F18  75                 	db	117	;'u'
   117  000F19  20                 	db	32
   118  000F1A  50                 	db	80	;'P'
   119  000F1B  49                 	db	73	;'I'
   120  000F1C  4E                 	db	78	;'N'
   121  000F1D  3A                 	db	58	;':'
   122  000F1E  00                 	db	0
   123  000F1F                     STR_2:
   124                           
   125                           ; BSR set to: 15
   126  000F1F  25                 	db	37
   127  000F20  30                 	db	48	;'0'
   128  000F21  32                 	db	50	;'2'
   129  000F22  75                 	db	117	;'u'
   130  000F23  2F                 	db	47
   131  000F24  25                 	db	37
   132  000F25  30                 	db	48	;'0'
   133  000F26  32                 	db	50	;'2'
   134  000F27  75                 	db	117	;'u'
   135  000F28  2F                 	db	47
   136  000F29  25                 	db	37
   137  000F2A  30                 	db	48	;'0'
   138  000F2B  32                 	db	50	;'2'
   139  000F2C  75                 	db	117	;'u'
   140  000F2D  00                 	db	0
   141  000F2E                     STR_3:
   142                           
   143                           ; BSR set to: 15
   144  000F2E  25                 	db	37
   145  000F2F  30                 	db	48	;'0'
   146  000F30  32                 	db	50	;'2'
   147  000F31  75                 	db	117	;'u'
   148  000F32  3A                 	db	58	;':'
   149  000F33  25                 	db	37
   150  000F34  30                 	db	48	;'0'
   151  000F35  32                 	db	50	;'2'
   152  000F36  75                 	db	117	;'u'
   153  000F37  3A                 	db	58	;':'
   154  000F38  25                 	db	37
   155  000F39  30                 	db	48	;'0'
   156  000F3A  32                 	db	50	;'2'
   157  000F3B  75                 	db	117	;'u'
   158  000F3C  00                 	db	0
   159  000F3D                     STR_33:
   160                           
   161                           ; BSR set to: 15
   162  000F3D  56                 	db	86	;'V'
   163  000F3E  6F                 	db	111	;'o'
   164  000F3F  6C                 	db	108	;'l'
   165  000F40  75                 	db	117	;'u'
   166  000F41  6D                 	db	109	;'m'
   167  000F42  65                 	db	101	;'e'
   168  000F43  6E                 	db	110	;'n'
   169  000F44  00                 	db	0
   170  000F45                     STR_30:
   171                           
   172                           ; BSR set to: 15
   173  000F45  43                 	db	67	;'C'
   174  000F46  61                 	db	97	;'a'
   175  000F47  6D                 	db	109	;'m'
   176  000F48  62                 	db	98	;'b'
   177  000F49  69                 	db	105	;'i'
   178  000F4A  61                 	db	97	;'a'
   179  000F4B  72                 	db	114	;'r'
   180  000F4C  00                 	db	0
   181  000F4D                     STR_7:
   182                           
   183                           ; BSR set to: 15
   184  000F4D  41                 	db	65	;'A'
   185  000F4E  63                 	db	99	;'c'
   186  000F4F  74                 	db	116	;'t'
   187  000F50  69                 	db	105	;'i'
   188  000F51  76                 	db	118	;'v'
   189  000F52  61                 	db	97	;'a'
   190  000F53  72                 	db	114	;'r'
   191  000F54  00                 	db	0
   192  000F55                     STR_10:
   193                           
   194                           ; BSR set to: 15
   195  000F55  41                 	db	65	;'A'
   196  000F56  6C                 	db	108	;'l'
   197  000F57  61                 	db	97	;'a'
   198  000F58  72                 	db	114	;'r'
   199  000F59  6D                 	db	109	;'m'
   200  000F5A  61                 	db	97	;'a'
   201  000F5B  00                 	db	0
   202  000F5C                     STR_27:
   203                           
   204                           ; BSR set to: 15
   205  000F5C  46                 	db	70	;'F'
   206  000F5D  65                 	db	101	;'e'
   207  000F5E  63                 	db	99	;'c'
   208  000F5F  68                 	db	104	;'h'
   209  000F60  61                 	db	97	;'a'
   210  000F61  00                 	db	0
   211  000F62                     STR_8:
   212                           
   213                           ; BSR set to: 15
   214  000F62  52                 	db	82	;'R'
   215  000F63  65                 	db	101	;'e'
   216  000F64  6C                 	db	108	;'l'
   217  000F65  6F                 	db	111	;'o'
   218  000F66  6A                 	db	106	;'j'
   219  000F67  00                 	db	0
   220  000F68                     STR_31:
   221                           
   222                           ; BSR set to: 15
   223  000F68  52                 	db	82	;'R'
   224  000F69  65                 	db	101	;'e'
   225  000F6A  73                 	db	115	;'s'
   226  000F6B  65                 	db	101	;'e'
   227  000F6C  74                 	db	116	;'t'
   228  000F6D  00                 	db	0
   229  000F6E                     STR_1:
   230                           
   231                           ; BSR set to: 15
   232  000F6E  31                 	db	49	;'1'
   233  000F6F  32                 	db	50	;'2'
   234  000F70  33                 	db	51	;'3'
   235  000F71  34                 	db	52	;'4'
   236  000F72  00                 	db	0
   237  000F73                     STR_28:
   238                           
   239                           ; BSR set to: 15
   240  000F73  48                 	db	72	;'H'
   241  000F74  6F                 	db	111	;'o'
   242  000F75  72                 	db	114	;'r'
   243  000F76  61                 	db	97	;'a'
   244  000F77  00                 	db	0
   245  000F78                     STR_34:
   246                           
   247                           ; BSR set to: 15
   248  000F78  54                 	db	84	;'T'
   249  000F79  6F                 	db	111	;'o'
   250  000F7A  6E                 	db	110	;'n'
   251  000F7B  6F                 	db	111	;'o'
   252  000F7C  00                 	db	0
   253  000F7D                     STR_37:
   254                           
   255                           ; BSR set to: 15
   256  000F7D  25                 	db	37
   257  000F7E  30                 	db	48	;'0'
   258  000F7F  31                 	db	49	;'1'
   259  000F80  75                 	db	117	;'u'
   260  000F81  00                 	db	0
   261  000F82                     STR_4:
   262                           
   263                           ; BSR set to: 15
   264  000F82  58                 	db	88	;'X'
   265  000F83  32                 	db	50	;'2'
   266  000F84  38                 	db	56	;'8'
   267  000F85  00                 	db	0
   268  000F86                     STR_9:
   269                           
   270                           ; BSR set to: 15
   271  000F86  50                 	db	80	;'P'
   272  000F87  69                 	db	105	;'i'
   273  000F88  6E                 	db	110	;'n'
   274  000F89  00                 	db	0
   275  000F8A                     STR_24:
   276                           
   277                           ; BSR set to: 15
   278  000F8A  53                 	db	83	;'S'
   279  000F8B  49                 	db	73	;'I'
   280  000F8C  00                 	db	0
   281  000F8D                     STR_25:
   282                           
   283                           ; BSR set to: 15
   284  000F8D  4E                 	db	78	;'N'
   285  000F8E  4F                 	db	79	;'O'
   286  000F8F  00                 	db	0
   287  000F90                     STR_12:
   288                           
   289                           ; BSR set to: 15
   290  000F90  20                 	db	32
   291  000F91  00                 	db	0
   292  000F92                     STR_35:
   293                           
   294                           ; BSR set to: 15
   295  000F92  2A                 	db	42
   296  000F93  00                 	db	0
   297  000F94                     STR_11:
   298                           
   299                           ; BSR set to: 15
   300  000F94  3E                 	db	62	;'>'
   301  000F95  00                 	db	0
   302  0000                     
   303                           ; #config settings
   304  000F96  00                 	db	0	; dummy byte at the end
   305  0000                     
   306                           	psect	nvCOMRAM
   307  000048                     __pnvCOMRAM:
   308                           	opt stack 0
   309  000048                     _anio_d:
   310                           	opt stack 0
   311  000048                     	ds	1
   312  000049                     _anio_u:
   313                           	opt stack 0
   314  000049                     	ds	1
   315  00004A                     _dia_semana:
   316                           	opt stack 0
   317  00004A                     	ds	1
   318  00004B                     _fecha_d:
   319                           	opt stack 0
   320  00004B                     	ds	1
   321  00004C                     _fecha_u:
   322                           	opt stack 0
   323  00004C                     	ds	1
   324  00004D                     _hora_d:
   325                           	opt stack 0
   326  00004D                     	ds	1
   327  00004E                     _hora_u:
   328                           	opt stack 0
   329  00004E                     	ds	1
   330  00004F                     _mes_d:
   331                           	opt stack 0
   332  00004F                     	ds	1
   333  000050                     _mes_u:
   334                           	opt stack 0
   335  000050                     	ds	1
   336  000051                     _minuto_d:
   337                           	opt stack 0
   338  000051                     	ds	1
   339  000052                     _minuto_u:
   340                           	opt stack 0
   341  000052                     	ds	1
   342  000053                     _segundo_d:
   343                           	opt stack 0
   344  000053                     	ds	1
   345  000054                     _segundo_u:
   346                           	opt stack 0
   347  000054                     	ds	1
   348  0000                     _ANCON0	set	3912
   349  0000                     _ANCON1	set	3913
   350  0000                     _RTCCFG	set	3903
   351  0000                     _RTCCFGbits	set	3903
   352  0000                     _ADCON0	set	4034
   353  0000                     _ADCON1	set	4033
   354  0000                     _ALRMCFGbits	set	3985
   355  0000                     _EECON2	set	4007
   356  0000                     _INTCONbits	set	4082
   357  0000                     _LATAbits	set	3977
   358  0000                     _LATBbits	set	3978
   359  0000                     _OSCCONbits	set	4051
   360  0000                     _OSCTUNEbits	set	3995
   361  0000                     _PIE3bits	set	4003
   362  0000                     _PORTAbits	set	3968
   363  0000                     _PORTCbits	set	3970
   364  0000                     _RTCVALH	set	3993
   365  0000                     _RTCVALL	set	3992
   366  0000                     _T1CONbits	set	4045
   367  0000                     _TRISA	set	3986
   368  0000                     _TRISB	set	3987
   369  0000                     _TRISBbits	set	3987
   370  0000                     _TRISC	set	3988
   371                           
   372                           	psect	cinit
   373  002244                     __pcinit:
   374                           	opt stack 0
   375  002244                     start_initialization:
   376                           	opt stack 0
   377  002244                     __initialization:
   378                           	opt stack 0
   379                           
   380                           ; Clear objects allocated to BANK0 (58 bytes)
   381  002244  EE00  F060         	lfsr	0,__pbssBANK0
   382  002248  0E3A               	movlw	58
   383  00224A                     clear_0:
   384  00224A  6AEE               	clrf	postinc0,c
   385  00224C  06E8               	decf	wreg,f,c
   386  00224E  E1FD               	bnz	clear_0
   387                           
   388                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   389  002250  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   390                           
   391                           ; Clear objects allocated to COMRAM (35 bytes)
   392  002252  EE00  F025         	lfsr	0,__pbssCOMRAM
   393  002256  0E23               	movlw	35
   394  002258                     clear_1:
   395  002258  6AEE               	clrf	postinc0,c
   396  00225A  06E8               	decf	wreg,f,c
   397  00225C  E1FD               	bnz	clear_1
   398                           
   399                           ; Initialize objects allocated to COMRAM (10 bytes)
   400                           ; load TBLPTR registers with __pidataCOMRAM
   401  00225E  0EA8               	movlw	low __pidataCOMRAM
   402  002260  6EF6               	movwf	tblptrl,c
   403  002262  0E24               	movlw	high __pidataCOMRAM
   404  002264  6EF7               	movwf	tblptrh,c
   405  002266  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   406  002268  6EF8               	movwf	tblptru,c
   407  00226A  EE00  F055         	lfsr	0,__pdataCOMRAM
   408  00226E  EE10 F00A          	lfsr	1,10
   409  002272                     copy_data0:
   410  002272  0009               	tblrd		*+
   411  002274  CFF5 FFEE          	movff	tablat,postinc0
   412  002278  50E5               	movf	postdec1,w,c
   413  00227A  50E1               	movf	fsr1l,w,c
   414  00227C  E1FA               	bnz	copy_data0
   415  00227E                     end_of_initialization:
   416                           	opt stack 0
   417  00227E                     __end_of__initialization:
   418                           	opt stack 0
   419  00227E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   420  002280  6EF8               	movwf	tblptru,c
   421  002282  0100               	movlb	0
   422  002284  EFD6  F011         	goto	_main	;jump to C main() function
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           postdec1	equ	0xFE5
   430                           fsr1l	equ	0xFE1
   431                           
   432                           	psect	bitbssCOMRAM
   433  0002F8                     __pbitbssCOMRAM:
   434                           	opt stack 0
   435  0002F8                     _flag:
   436                           	opt stack 0
   437  0002F8                     	ds	1
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	bssCOMRAM
   448  000025                     __pbssCOMRAM:
   449                           	opt stack 0
   450  000025                     _a:
   451                           	opt stack 0
   452  000025                     	ds	2
   453  000027                     _activity:
   454                           	opt stack 0
   455  000027                     	ds	2
   456  000029                     _b:
   457                           	opt stack 0
   458  000029                     	ds	2
   459  00002B                     _c:
   460                           	opt stack 0
   461  00002B                     	ds	2
   462  00002D                     _i:
   463                           	opt stack 0
   464  00002D                     	ds	2
   465  00002F                     _j:
   466                           	opt stack 0
   467  00002F                     	ds	2
   468  000031                     _k:
   469                           	opt stack 0
   470  000031                     	ds	2
   471  000033                     _menu_selected:
   472                           	opt stack 0
   473  000033                     	ds	2
   474  000035                     _menu_selector:
   475                           	opt stack 0
   476  000035                     	ds	2
   477  000037                     _minuto:
   478                           	opt stack 0
   479  000037                     	ds	2
   480  000039                     _segundo:
   481                           	opt stack 0
   482  000039                     	ds	2
   483  00003B                     _state:
   484                           	opt stack 0
   485  00003B                     	ds	2
   486  00003D                     _submenu_selector:
   487                           	opt stack 0
   488  00003D                     	ds	2
   489  00003F                     _key:
   490                           	opt stack 0
   491  00003F                     	ds	1
   492  000040                     _RtccDate:
   493                           	opt stack 0
   494  000040                     	ds	4
   495  000044                     _RtccTime:
   496                           	opt stack 0
   497  000044                     	ds	4
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           postdec1	equ	0xFE5
   505                           fsr1l	equ	0xFE1
   506                           
   507                           	psect	dataCOMRAM
   508  000055                     __pdataCOMRAM:
   509                           	opt stack 0
   510  000055                     _anio:
   511                           	opt stack 0
   512  000055                     	ds	2
   513  000057                     _dia:
   514                           	opt stack 0
   515  000057                     	ds	2
   516  000059                     _diasem:
   517                           	opt stack 0
   518  000059                     	ds	2
   519  00005B                     _hora:
   520                           	opt stack 0
   521  00005B                     	ds	2
   522  00005D                     _mes:
   523                           	opt stack 0
   524  00005D                     	ds	2
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           postdec1	equ	0xFE5
   532                           fsr1l	equ	0xFE1
   533                           
   534                           	psect	bssBANK0
   535  000060                     __pbssBANK0:
   536                           	opt stack 0
   537  000060                     _RtccAlrmTimeDate:
   538                           	opt stack 0
   539  000060                     	ds	8
   540  000068                     _RtccTimeDate:
   541                           	opt stack 0
   542  000068                     	ds	8
   543  000070                     _Rtcc_read_TimeDate:
   544                           	opt stack 0
   545  000070                     	ds	8
   546  000078                     _RtccTimeVal:
   547                           	opt stack 0
   548  000078                     	ds	4
   549  00007C                     _buffer1:
   550                           	opt stack 0
   551  00007C                     	ds	20
   552  000090                     _pin:
   553                           	opt stack 0
   554  000090                     	ds	5
   555  000095                     _pin_input:
   556                           	opt stack 0
   557  000095                     	ds	5
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           postdec1	equ	0xFE5
   565                           fsr1l	equ	0xFE1
   566                           
   567                           	psect	cstackCOMRAM
   568  000001                     __pcstackCOMRAM:
   569                           	opt stack 0
   570  000001                     ??_isdigit:
   571  000001                     ??_lcd_send_nibble:
   572  000001                     ?_strcmp:
   573                           	opt stack 0
   574  000001                     ?___wmul:
   575                           	opt stack 0
   576  000001                     ?___awdiv:
   577                           	opt stack 0
   578  000001                     ?___lwdiv:
   579                           	opt stack 0
   580  000001                     Delay100TCYx@unit:
   581                           	opt stack 0
   582  000001                     Delay1KTCYx@unit:
   583                           	opt stack 0
   584  000001                     RtccReadDate@pDt:
   585                           	opt stack 0
   586  000001                     RtccReadTime@pTm:
   587                           	opt stack 0
   588  000001                     RtccWriteDate@pDt:
   589                           	opt stack 0
   590  000001                     RtccWriteTime@pTm:
   591                           	opt stack 0
   592  000001                     ___wmul@multiplier:
   593                           	opt stack 0
   594  000001                     ___awdiv@dividend:
   595                           	opt stack 0
   596  000001                     ___lwdiv@dividend:
   597                           	opt stack 0
   598  000001                     strcat@to:
   599                           	opt stack 0
   600  000001                     strcmp@s1:
   601                           	opt stack 0
   602  000001                     strcpy@to:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x0
   606  000001                     	ds	1
   607  000002                     lcd_send_nibble@nibble:
   608                           	opt stack 0
   609  000002                     _isdigit$2128:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x1
   613  000002                     	ds	1
   614  000003                     lcd_send_byte@n:
   615                           	opt stack 0
   616  000003                     RtccWriteDate@di:
   617                           	opt stack 0
   618  000003                     RtccWriteTime@di:
   619                           	opt stack 0
   620  000003                     isdigit@c:
   621                           	opt stack 0
   622  000003                     ___wmul@multiplicand:
   623                           	opt stack 0
   624  000003                     ___awdiv@divisor:
   625                           	opt stack 0
   626  000003                     ___lwdiv@divisor:
   627                           	opt stack 0
   628  000003                     strcat@from:
   629                           	opt stack 0
   630  000003                     strcmp@s2:
   631                           	opt stack 0
   632  000003                     strcpy@from:
   633                           	opt stack 0
   634  000003                     RtccReadDate@rTD1:
   635                           	opt stack 0
   636  000003                     RtccReadTime@rTD1:
   637                           	opt stack 0
   638                           
   639                           ; 8 bytes @ 0x2
   640  000003                     	ds	1
   641  000004                     lcd_send_byte@address:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x3
   645  000004                     	ds	1
   646  000005                     ??_strcmp:
   647  000005                     lcd_init@i:
   648                           	opt stack 0
   649  000005                     lcd_gotoxy@y:
   650                           	opt stack 0
   651  000005                     lcd_comand@d:
   652                           	opt stack 0
   653  000005                     RtccWriteDate@wasOn:
   654                           	opt stack 0
   655  000005                     RtccWriteTime@wasOn:
   656                           	opt stack 0
   657  000005                     ___awdiv@counter:
   658                           	opt stack 0
   659  000005                     ___wmul@product:
   660                           	opt stack 0
   661  000005                     ___lwdiv@quotient:
   662                           	opt stack 0
   663  000005                     strcat@cp:
   664                           	opt stack 0
   665  000005                     strcpy@cp:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x4
   669  000005                     	ds	1
   670  000006                     lcd_gotoxy@x:
   671                           	opt stack 0
   672  000006                     RtccWriteDate@wasAlrm:
   673                           	opt stack 0
   674  000006                     RtccWriteTime@wasAlrm:
   675                           	opt stack 0
   676  000006                     ___awdiv@sign:
   677                           	opt stack 0
   678  000006                     strcmp@r:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x5
   682  000006                     	ds	1
   683  000007                     lcd_gotoxy@address:
   684                           	opt stack 0
   685  000007                     RtccWriteTime@wasWrEn:
   686                           	opt stack 0
   687  000007                     ___lwdiv@counter:
   688                           	opt stack 0
   689  000007                     RtccWriteDate@tempYear:
   690                           	opt stack 0
   691  000007                     ___awdiv@quotient:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x6
   695  000007                     	ds	1
   696  000008                     ?___lwmod:
   697                           	opt stack 0
   698  000008                     lcd_putc@c:
   699                           	opt stack 0
   700  000008                     RtccWriteTime@tempMinSec:
   701                           	opt stack 0
   702  000008                     ___lwmod@dividend:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x7
   706  000008                     	ds	1
   707  000009                     RtccWriteDate@wasWrEn:
   708                           	opt stack 0
   709  000009                     lcd_putrs@ptr:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x8
   713  000009                     	ds	1
   714  00000A                     RtccWriteDate@tempDayMonth:
   715                           	opt stack 0
   716  00000A                     RtccWriteTime@tempHourWDay:
   717                           	opt stack 0
   718  00000A                     ___lwmod@divisor:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x9
   722  00000A                     	ds	1
   723  00000B                     lcd_write@column:
   724                           	opt stack 0
   725  00000B                     RtccReadDate@rTD0:
   726                           	opt stack 0
   727  00000B                     RtccReadTime@rTD0:
   728                           	opt stack 0
   729                           
   730                           ; 8 bytes @ 0xA
   731  00000B                     	ds	1
   732  00000C                     ___lwmod@counter:
   733                           	opt stack 0
   734  00000C                     RtccWriteDate@tempHourWDay:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0xB
   738  00000C                     	ds	1
   739  00000D                     ?_sprintf:
   740                           	opt stack 0
   741  00000D                     lcd_write@row:
   742                           	opt stack 0
   743  00000D                     sprintf@sp:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0xC
   747  00000D                     	ds	1
   748  00000E                     
   749                           ; 0 bytes @ 0xD
   750  00000E                     	ds	1
   751  00000F                     lcd_write@string:
   752                           	opt stack 0
   753  00000F                     sprintf@f:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0xE
   757  00000F                     	ds	2
   758  000011                     ??_action_menu_selector:
   759  000011                     ??_action_submenu_selector:
   760  000011                     ??_button_B:
   761  000011                     pin_input_validator@comparision:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x10
   765  000011                     	ds	2
   766  000013                     ??_button_A:
   767  000013                     
   768                           ; 0 bytes @ 0x12
   769  000013                     	ds	4
   770  000017                     ??_sprintf:
   771                           
   772                           ; 0 bytes @ 0x16
   773  000017                     	ds	4
   774  00001B                     sprintf@ap:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x1A
   778  00001B                     	ds	2
   779  00001D                     sprintf@flag:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x1C
   783  00001D                     	ds	1
   784  00001E                     sprintf@val:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x1D
   788  00001E                     	ds	2
   789  000020                     sprintf@prec:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x1F
   793  000020                     	ds	1
   794  000021                     sprintf@width:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x20
   798  000021                     	ds	2
   799  000023                     sprintf@c:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x22
   803  000023                     	ds	1
   804  000024                     ??_keyboard_control:
   805                           
   806                           ; 0 bytes @ 0x23
   807  000024                     	ds	1
   808  000025                     tblptru	equ	0xFF8
   809                           tblptrh	equ	0xFF7
   810                           tblptrl	equ	0xFF6
   811                           tablat	equ	0xFF5
   812                           postinc0	equ	0xFEE
   813                           wreg	equ	0xFE8
   814                           postdec1	equ	0xFE5
   815                           fsr1l	equ	0xFE1
   816                           
   817                           ; 0 bytes @ 0x24
   818 ;;
   819 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   820 ;;
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 369 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  2  318[None  ] int 
   830 ;; Registers used:
   831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels required when called:   10
   843 ;; This function calls:
   844 ;;		_Read_RTC
   845 ;;		_activity_home
   846 ;;		_home_clock_refresh
   847 ;;		_keyboard_control
   848 ;;		_setup
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text0
   855  0023AC                     __ptext0:
   856                           	opt stack 0
   857  0023AC                     _main:
   858                           	opt stack 21
   859                           
   860                           ;main.c: 371: setup();
   861                           
   862                           ; BSR set to: 15
   863                           ;incstack = 0
   864  0023AC  EC77  F00E         	call	_setup	;wreg free
   865                           
   866                           ;main.c: 372: activity_home();
   867  0023B0  ECAD  F011         	call	_activity_home	;wreg free
   868  0023B4  D000               	goto	l3116
   869  0023B6                     l3116:
   870                           
   871                           ;main.c: 374: Read_RTC();
   872  0023B6  EC22  F00C         	call	_Read_RTC	;wreg free
   873                           
   874                           ;main.c: 375: keyboard_control();
   875  0023BA  ECAA  F009         	call	_keyboard_control	;wreg free
   876                           
   877                           ;main.c: 376: if(activity == 0){home_clock_refresh();}
   878  0023BE  5027               	movf	_activity,w,c
   879  0023C0  1028               	iorwf	_activity+1,w,c
   880  0023C2  A4D8               	btfss	status,2,c
   881  0023C4  D7F8               	goto	l3116
   882  0023C6  EC2D  F00D         	call	_home_clock_refresh	;wreg free
   883  0023CA  D7F5               	goto	l3116
   884                           
   885                           ;main.c: 377: }
   886                           ;main.c: 379: return 0;
   887                           ;	Return value of _main is never used
   888  0023CC  EF00  F000         	goto	start
   889  0023D0                     __end_of_main:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           postdec1	equ	0xFE5
   898                           fsr1l	equ	0xFE1
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _setup *****************
   902 ;; Defined at:
   903 ;;		line 55 in file "main.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;		None               void
   910 ;; Registers used:
   911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    3
   924 ;; This function calls:
   925 ;;		_Write_RTC
   926 ;;		_lcd_comand
   927 ;;		_lcd_init
   928 ;;		_strcpy
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text1
   935  001CEE                     __ptext1:
   936                           	opt stack 0
   937  001CEE                     _setup:
   938                           	opt stack 27
   939                           
   940                           ;main.c: 57: OSCTUNEbits.INTSRC=1;
   941                           
   942                           ;incstack = 0
   943  001CEE  8E9B               	bsf	3995,7,c	;volatile
   944                           
   945                           ;main.c: 58: OSCTUNEbits.PLLEN=0;
   946  001CF0  9C9B               	bcf	3995,6,c	;volatile
   947                           
   948                           ;main.c: 59: OSCCONbits.IRCF0=1;
   949  001CF2  88D3               	bsf	4051,4,c	;volatile
   950                           
   951                           ;main.c: 60: OSCCONbits.IRCF1=1;
   952  001CF4  8AD3               	bsf	4051,5,c	;volatile
   953                           
   954                           ;main.c: 61: OSCCONbits.IRCF2=1;
   955  001CF6  8CD3               	bsf	4051,6,c	;volatile
   956                           
   957                           ;main.c: 62: OSCCONbits.SCS0=0;
   958  001CF8  90D3               	bcf	4051,0,c	;volatile
   959                           
   960                           ;main.c: 63: OSCCONbits.SCS1=0;
   961  001CFA  92D3               	bcf	4051,1,c	;volatile
   962                           
   963                           ;main.c: 64: TRISA = 0b11110000;
   964  001CFC  0EF0               	movlw	240
   965  001CFE  6E92               	movwf	3986,c	;volatile
   966                           
   967                           ;main.c: 65: TRISB = 0;
   968  001D00  0E00               	movlw	0
   969  001D02  6E93               	movwf	3987,c	;volatile
   970                           
   971                           ;main.c: 66: TRISC = 0b00000111;
   972  001D04  0E07               	movlw	7
   973  001D06  6E94               	movwf	3988,c	;volatile
   974                           
   975                           ;main.c: 70: ANCON0=0b11111111;
   976  001D08  010F               	movlb	15	; () banked
   977  001D0A  6948               	setf	72,b	;volatile
   978                           
   979                           ; BSR set to: 15
   980                           ;main.c: 72: ANCON1=0b11111111;
   981  001D0C  010F               	movlb	15	; () banked
   982  001D0E  6949               	setf	73,b	;volatile
   983                           
   984                           ;main.c: 73: ADCON0=0b00101101;
   985  001D10  0E2D               	movlw	45
   986  001D12  6EC2               	movwf	4034,c	;volatile
   987                           
   988                           ;main.c: 74: ADCON1=0b00010000;
   989  001D14  0E10               	movlw	16
   990  001D16  6EC1               	movwf	4033,c	;volatile
   991                           
   992                           ; BSR set to: 15
   993                           ;main.c: 75: RTCCFGbits.RTCEN=1;
   994  001D18  010F               	movlb	15	; () banked
   995  001D1A  8F3F               	bsf	63,7,b	;volatile
   996                           
   997                           ; BSR set to: 15
   998                           ;main.c: 76: RTCCFGbits.RTCWREN=1;
   999  001D1C  010F               	movlb	15	; () banked
  1000  001D1E  8B3F               	bsf	63,5,b	;volatile
  1001                           
  1002                           ; BSR set to: 15
  1003                           ;main.c: 77: T1CONbits.T1OSCEN=1;
  1004  001D20  86CD               	bsf	4045,3,c	;volatile
  1005                           
  1006                           ; BSR set to: 15
  1007                           ;main.c: 78: Write_RTC();
  1008  001D22  EC55  F00A         	call	_Write_RTC	;wreg free
  1009                           
  1010                           ;main.c: 79: lcd_init();
  1011  001D26  ECBD  F00D         	call	_lcd_init	;wreg free
  1012                           
  1013                           ;main.c: 80: lcd_comand(0b00001100);
  1014  001D2A  0E0C               	movlw	12
  1015  001D2C  EC4D  F012         	call	_lcd_comand
  1016                           
  1017                           ;main.c: 81: LATBbits.LATB1 = 1;;
  1018  001D30  828A               	bsf	3978,1,c	;volatile
  1019                           
  1020                           ;main.c: 82: LATBbits.LATB0 = 1;;
  1021  001D32  808A               	bsf	3978,0,c	;volatile
  1022                           
  1023                           ;main.c: 85: menu_selected = 1;
  1024  001D34  0E00               	movlw	0
  1025  001D36  6E34               	movwf	_menu_selected+1,c
  1026  001D38  0E01               	movlw	1
  1027  001D3A  6E33               	movwf	_menu_selected,c
  1028                           
  1029                           ;main.c: 86: menu_selector = 1;
  1030  001D3C  0E00               	movlw	0
  1031  001D3E  6E36               	movwf	_menu_selector+1,c
  1032  001D40  0E01               	movlw	1
  1033  001D42  6E35               	movwf	_menu_selector,c
  1034                           
  1035                           ;main.c: 87: submenu_selector = 1;
  1036  001D44  0E00               	movlw	0
  1037  001D46  6E3E               	movwf	_submenu_selector+1,c
  1038  001D48  0E01               	movlw	1
  1039  001D4A  6E3D               	movwf	_submenu_selector,c
  1040                           
  1041                           ;main.c: 88: strcpy(pin, "1234");
  1042  001D4C  0E90               	movlw	low _pin
  1043  001D4E  6E01               	movwf	strcpy@to,c
  1044  001D50  0E00               	movlw	high _pin
  1045  001D52  6E02               	movwf	strcpy@to+1,c
  1046  001D54  0E6E               	movlw	low STR_1
  1047  001D56  6E03               	movwf	strcpy@from,c
  1048  001D58  0E0F               	movlw	high STR_1
  1049  001D5A  6E04               	movwf	strcpy@from+1,c
  1050  001D5C  EC7B  F011         	call	_strcpy	;wreg free
  1051  001D60  0012               	return		;funcret
  1052  001D62                     __end_of_setup:
  1053                           	opt stack 0
  1054                           tblptru	equ	0xFF8
  1055                           tblptrh	equ	0xFF7
  1056                           tblptrl	equ	0xFF6
  1057                           tablat	equ	0xFF5
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           postdec1	equ	0xFE5
  1061                           fsr1l	equ	0xFE1
  1062                           status	equ	0xFD8
  1063                           
  1064 ;; *************** function _Write_RTC *****************
  1065 ;; Defined at:
  1066 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;		None               void
  1073 ;; Registers used:
  1074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1084 ;;Total ram usage:        0 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    2
  1087 ;; This function calls:
  1088 ;;		_RtccWrOn
  1089 ;;		_RtccWriteDate
  1090 ;;		_RtccWriteTime
  1091 ;;		___awdiv
  1092 ;; This function is called by:
  1093 ;;		_setup
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text2
  1098  0014AA                     __ptext2:
  1099                           	opt stack 0
  1100  0014AA                     _Write_RTC:
  1101                           	opt stack 27
  1102                           
  1103                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  1104                           
  1105                           ;incstack = 0
  1106  0014AA  EC23  F012         	call	_RtccWrOn	;wreg free
  1107                           
  1108                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  1109  0014AE  80A3               	bsf	4003,0,c	;volatile
  1110                           
  1111                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  1112  0014B0  C039  F001         	movff	_segundo,___awdiv@dividend
  1113  0014B4  C03A  F002         	movff	_segundo+1,___awdiv@dividend+1
  1114  0014B8  0E00               	movlw	0
  1115  0014BA  6E04               	movwf	___awdiv@divisor+1,c
  1116  0014BC  0E0A               	movlw	10
  1117  0014BE  6E03               	movwf	___awdiv@divisor,c
  1118  0014C0  ECE2  F00C         	call	___awdiv	;wreg free
  1119  0014C4  5001               	movf	?___awdiv,w,c
  1120  0014C6  6E53               	movwf	_segundo_d,c
  1121                           
  1122                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  1123  0014C8  5053               	movf	_segundo_d,w,c
  1124  0014CA  0D0A               	mullw	10
  1125  0014CC  50F3               	movf	prodl,w,c
  1126  0014CE  0800               	sublw	0
  1127  0014D0  2439               	addwf	_segundo,w,c
  1128  0014D2  6E54               	movwf	_segundo_u,c
  1129                           
  1130                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  1131  0014D4  5053               	movf	_segundo_d,w,c
  1132  0014D6  0D10               	mullw	16
  1133  0014D8  50F3               	movf	prodl,w,c
  1134  0014DA  2454               	addwf	_segundo_u,w,c
  1135  0014DC  6E45               	movwf	_RtccTime+1,c
  1136                           
  1137                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  1138  0014DE  C037  F001         	movff	_minuto,___awdiv@dividend
  1139  0014E2  C038  F002         	movff	_minuto+1,___awdiv@dividend+1
  1140  0014E6  0E00               	movlw	0
  1141  0014E8  6E04               	movwf	___awdiv@divisor+1,c
  1142  0014EA  0E0A               	movlw	10
  1143  0014EC  6E03               	movwf	___awdiv@divisor,c
  1144  0014EE  ECE2  F00C         	call	___awdiv	;wreg free
  1145  0014F2  5001               	movf	?___awdiv,w,c
  1146  0014F4  6E51               	movwf	_minuto_d,c
  1147                           
  1148                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1149  0014F6  5051               	movf	_minuto_d,w,c
  1150  0014F8  0D0A               	mullw	10
  1151  0014FA  50F3               	movf	prodl,w,c
  1152  0014FC  0800               	sublw	0
  1153  0014FE  2437               	addwf	_minuto,w,c
  1154  001500  6E52               	movwf	_minuto_u,c
  1155                           
  1156                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1157  001502  5051               	movf	_minuto_d,w,c
  1158  001504  0D10               	mullw	16
  1159  001506  50F3               	movf	prodl,w,c
  1160  001508  2452               	addwf	_minuto_u,w,c
  1161  00150A  6E46               	movwf	_RtccTime+2,c
  1162                           
  1163                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1164  00150C  C05B  F001         	movff	_hora,___awdiv@dividend
  1165  001510  C05C  F002         	movff	_hora+1,___awdiv@dividend+1
  1166  001514  0E00               	movlw	0
  1167  001516  6E04               	movwf	___awdiv@divisor+1,c
  1168  001518  0E0A               	movlw	10
  1169  00151A  6E03               	movwf	___awdiv@divisor,c
  1170  00151C  ECE2  F00C         	call	___awdiv	;wreg free
  1171  001520  5001               	movf	?___awdiv,w,c
  1172  001522  6E4D               	movwf	_hora_d,c
  1173                           
  1174                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1175  001524  504D               	movf	_hora_d,w,c
  1176  001526  0D0A               	mullw	10
  1177  001528  50F3               	movf	prodl,w,c
  1178  00152A  0800               	sublw	0
  1179  00152C  245B               	addwf	_hora,w,c
  1180  00152E  6E4E               	movwf	_hora_u,c
  1181                           
  1182                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1183  001530  504D               	movf	_hora_d,w,c
  1184  001532  0D10               	mullw	16
  1185  001534  50F3               	movf	prodl,w,c
  1186  001536  244E               	addwf	_hora_u,w,c
  1187  001538  6E47               	movwf	_RtccTime+3,c
  1188                           
  1189                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1190  00153A  C055  F001         	movff	_anio,___awdiv@dividend
  1191  00153E  C056  F002         	movff	_anio+1,___awdiv@dividend+1
  1192  001542  0E00               	movlw	0
  1193  001544  6E04               	movwf	___awdiv@divisor+1,c
  1194  001546  0E0A               	movlw	10
  1195  001548  6E03               	movwf	___awdiv@divisor,c
  1196  00154A  ECE2  F00C         	call	___awdiv	;wreg free
  1197  00154E  5001               	movf	?___awdiv,w,c
  1198  001550  6E48               	movwf	_anio_d,c
  1199                           
  1200                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1201  001552  5048               	movf	_anio_d,w,c
  1202  001554  0D0A               	mullw	10
  1203  001556  50F3               	movf	prodl,w,c
  1204  001558  0800               	sublw	0
  1205  00155A  2455               	addwf	_anio,w,c
  1206  00155C  6E49               	movwf	_anio_u,c
  1207                           
  1208                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1209  00155E  5048               	movf	_anio_d,w,c
  1210  001560  0D10               	mullw	16
  1211  001562  50F3               	movf	prodl,w,c
  1212  001564  2449               	addwf	_anio_u,w,c
  1213  001566  6E43               	movwf	_RtccDate+3,c
  1214                           
  1215                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1216  001568  C05D  F001         	movff	_mes,___awdiv@dividend
  1217  00156C  C05E  F002         	movff	_mes+1,___awdiv@dividend+1
  1218  001570  0E00               	movlw	0
  1219  001572  6E04               	movwf	___awdiv@divisor+1,c
  1220  001574  0E0A               	movlw	10
  1221  001576  6E03               	movwf	___awdiv@divisor,c
  1222  001578  ECE2  F00C         	call	___awdiv	;wreg free
  1223  00157C  5001               	movf	?___awdiv,w,c
  1224  00157E  6E4F               	movwf	_mes_d,c
  1225                           
  1226                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1227  001580  504F               	movf	_mes_d,w,c
  1228  001582  0D0A               	mullw	10
  1229  001584  50F3               	movf	prodl,w,c
  1230  001586  0800               	sublw	0
  1231  001588  245D               	addwf	_mes,w,c
  1232  00158A  6E50               	movwf	_mes_u,c
  1233                           
  1234                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1235  00158C  504F               	movf	_mes_d,w,c
  1236  00158E  0D10               	mullw	16
  1237  001590  50F3               	movf	prodl,w,c
  1238  001592  2450               	addwf	_mes_u,w,c
  1239  001594  6E42               	movwf	_RtccDate+2,c
  1240                           
  1241                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1242  001596  C057  F001         	movff	_dia,___awdiv@dividend
  1243  00159A  C058  F002         	movff	_dia+1,___awdiv@dividend+1
  1244  00159E  0E00               	movlw	0
  1245  0015A0  6E04               	movwf	___awdiv@divisor+1,c
  1246  0015A2  0E0A               	movlw	10
  1247  0015A4  6E03               	movwf	___awdiv@divisor,c
  1248  0015A6  ECE2  F00C         	call	___awdiv	;wreg free
  1249  0015AA  5001               	movf	?___awdiv,w,c
  1250  0015AC  6E4B               	movwf	_fecha_d,c
  1251                           
  1252                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1253  0015AE  504B               	movf	_fecha_d,w,c
  1254  0015B0  0D0A               	mullw	10
  1255  0015B2  50F3               	movf	prodl,w,c
  1256  0015B4  0800               	sublw	0
  1257  0015B6  2457               	addwf	_dia,w,c
  1258  0015B8  6E4C               	movwf	_fecha_u,c
  1259                           
  1260                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1261  0015BA  504B               	movf	_fecha_d,w,c
  1262  0015BC  0D10               	mullw	16
  1263  0015BE  50F3               	movf	prodl,w,c
  1264  0015C0  244C               	addwf	_fecha_u,w,c
  1265  0015C2  6E41               	movwf	_RtccDate+1,c
  1266                           
  1267                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1268  0015C4  C059  F04A         	movff	_diasem,_dia_semana
  1269                           
  1270                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1271  0015C8  C059  F040         	movff	_diasem,_RtccDate
  1272                           
  1273                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1274  0015CC  0E44               	movlw	low _RtccTime
  1275  0015CE  6E01               	movwf	RtccWriteTime@pTm,c
  1276  0015D0  0E00               	movlw	high _RtccTime
  1277  0015D2  6E02               	movwf	RtccWriteTime@pTm+1,c
  1278  0015D4  0E01               	movlw	1
  1279  0015D6  6E03               	movwf	RtccWriteTime@di,c
  1280  0015D8  EC9C  F00B         	call	_RtccWriteTime	;wreg free
  1281                           
  1282                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1283  0015DC  0E40               	movlw	low _RtccDate
  1284  0015DE  6E01               	movwf	RtccWriteDate@pDt,c
  1285  0015E0  0E00               	movlw	high _RtccDate
  1286  0015E2  6E02               	movwf	RtccWriteDate@pDt+1,c
  1287  0015E4  0E01               	movlw	1
  1288  0015E6  6E03               	movwf	RtccWriteDate@di,c
  1289  0015E8  ECF9  F00A         	call	_RtccWriteDate	;wreg free
  1290                           
  1291                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1292  0015EC  010F               	movlb	15	; () banked
  1293  0015EE  8F3F               	bsf	63,7,b	;volatile
  1294                           
  1295                           ; BSR set to: 15
  1296  0015F0  0012               	return		;funcret
  1297  0015F2                     __end_of_Write_RTC:
  1298                           	opt stack 0
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           prodl	equ	0xFF3
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           postdec1	equ	0xFE5
  1307                           fsr1l	equ	0xFE1
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function ___awdiv *****************
  1311 ;; Defined at:
  1312 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  dividend        2    0[COMRAM] int 
  1315 ;;  divisor         2    2[COMRAM] int 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  quotient        2    6[COMRAM] int 
  1318 ;;  sign            1    5[COMRAM] unsigned char 
  1319 ;;  counter         1    4[COMRAM] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2    0[COMRAM] int 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;Total ram usage:        8 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_Write_RTC
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text3
  1343  0019C4                     __ptext3:
  1344                           	opt stack 0
  1345  0019C4                     ___awdiv:
  1346                           	opt stack 28
  1347                           
  1348                           ; BSR set to: 15
  1349                           ;incstack = 0
  1350  0019C4  0E00               	movlw	0
  1351  0019C6  6E06               	movwf	___awdiv@sign,c
  1352  0019C8  AE04               	btfss	___awdiv@divisor+1,7,c
  1353  0019CA  D007               	goto	l2758
  1354  0019CC  6C03               	negf	___awdiv@divisor,c
  1355  0019CE  1E04               	comf	___awdiv@divisor+1,f,c
  1356  0019D0  B0D8               	btfsc	status,0,c
  1357  0019D2  2A04               	incf	___awdiv@divisor+1,f,c
  1358  0019D4  0E01               	movlw	1
  1359  0019D6  6E06               	movwf	___awdiv@sign,c
  1360  0019D8  D000               	goto	l2758
  1361  0019DA                     l2758:
  1362  0019DA  AE02               	btfss	___awdiv@dividend+1,7,c
  1363  0019DC  D007               	goto	l2764
  1364  0019DE  6C01               	negf	___awdiv@dividend,c
  1365  0019E0  1E02               	comf	___awdiv@dividend+1,f,c
  1366  0019E2  B0D8               	btfsc	status,0,c
  1367  0019E4  2A02               	incf	___awdiv@dividend+1,f,c
  1368  0019E6  0E01               	movlw	1
  1369  0019E8  1A06               	xorwf	___awdiv@sign,f,c
  1370  0019EA  D000               	goto	l2764
  1371  0019EC                     l2764:
  1372  0019EC  0E00               	movlw	0
  1373  0019EE  6E08               	movwf	___awdiv@quotient+1,c
  1374  0019F0  0E00               	movlw	0
  1375  0019F2  6E07               	movwf	___awdiv@quotient,c
  1376  0019F4  5003               	movf	___awdiv@divisor,w,c
  1377  0019F6  1004               	iorwf	___awdiv@divisor+1,w,c
  1378  0019F8  B4D8               	btfsc	status,2,c
  1379  0019FA  D021               	goto	l2786
  1380  0019FC  0E01               	movlw	1
  1381  0019FE  6E05               	movwf	___awdiv@counter,c
  1382  001A00  D005               	goto	l2772
  1383  001A02                     l2770:
  1384  001A02  90D8               	bcf	status,0,c
  1385  001A04  3603               	rlcf	___awdiv@divisor,f,c
  1386  001A06  3604               	rlcf	___awdiv@divisor+1,f,c
  1387  001A08  2A05               	incf	___awdiv@counter,f,c
  1388  001A0A  D000               	goto	l2772
  1389  001A0C                     l2772:
  1390  001A0C  BE04               	btfsc	___awdiv@divisor+1,7,c
  1391  001A0E  D002               	goto	l2774
  1392  001A10  D7F8               	goto	l2770
  1393  001A12  D000               	goto	l2774
  1394  001A14                     l2774:
  1395  001A14  90D8               	bcf	status,0,c
  1396  001A16  3607               	rlcf	___awdiv@quotient,f,c
  1397  001A18  3608               	rlcf	___awdiv@quotient+1,f,c
  1398  001A1A  5003               	movf	___awdiv@divisor,w,c
  1399  001A1C  5C01               	subwf	___awdiv@dividend,w,c
  1400  001A1E  5004               	movf	___awdiv@divisor+1,w,c
  1401  001A20  5802               	subwfb	___awdiv@dividend+1,w,c
  1402  001A22  A0D8               	btfss	status,0,c
  1403  001A24  D006               	goto	l2782
  1404  001A26  5003               	movf	___awdiv@divisor,w,c
  1405  001A28  5E01               	subwf	___awdiv@dividend,f,c
  1406  001A2A  5004               	movf	___awdiv@divisor+1,w,c
  1407  001A2C  5A02               	subwfb	___awdiv@dividend+1,f,c
  1408  001A2E  8007               	bsf	___awdiv@quotient,0,c
  1409  001A30  D000               	goto	l2782
  1410  001A32                     l2782:
  1411  001A32  90D8               	bcf	status,0,c
  1412  001A34  3204               	rrcf	___awdiv@divisor+1,f,c
  1413  001A36  3203               	rrcf	___awdiv@divisor,f,c
  1414  001A38  2E05               	decfsz	___awdiv@counter,f,c
  1415  001A3A  D7EC               	goto	l2774
  1416  001A3C  D000               	goto	l2786
  1417  001A3E                     l2786:
  1418  001A3E  5006               	movf	___awdiv@sign,w,c
  1419  001A40  B4D8               	btfsc	status,2,c
  1420  001A42  D005               	goto	l2790
  1421  001A44  6C07               	negf	___awdiv@quotient,c
  1422  001A46  1E08               	comf	___awdiv@quotient+1,f,c
  1423  001A48  B0D8               	btfsc	status,0,c
  1424  001A4A  2A08               	incf	___awdiv@quotient+1,f,c
  1425  001A4C  D000               	goto	l2790
  1426  001A4E                     l2790:
  1427  001A4E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1428  001A52  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1429  001A56  0012               	return	
  1430  001A58  0012               	return		;funcret
  1431  001A5A                     __end_of___awdiv:
  1432                           	opt stack 0
  1433                           tblptru	equ	0xFF8
  1434                           tblptrh	equ	0xFF7
  1435                           tblptrl	equ	0xFF6
  1436                           tablat	equ	0xFF5
  1437                           prodl	equ	0xFF3
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           postdec1	equ	0xFE5
  1441                           fsr1l	equ	0xFE1
  1442                           status	equ	0xFD8
  1443                           
  1444 ;; *************** function _RtccWriteTime *****************
  1445 ;; Defined at:
  1446 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  pTm             2    0[COMRAM] PTR const struct .
  1449 ;;		 -> RtccTime(4), 
  1450 ;;  di              1    2[COMRAM] enum E7121
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  tempHourWDay    2    9[COMRAM] struct .
  1453 ;;  tempMinSec      2    7[COMRAM] struct .
  1454 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1455 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1456 ;;  wasOn           1    4[COMRAM] enum E7121
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      enum E7337
  1459 ;; Registers used:
  1460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1466 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1469 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;Total ram usage:       11 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    1
  1473 ;; This function calls:
  1474 ;;		_RtccWrOn
  1475 ;; This function is called by:
  1476 ;;		_Write_RTC
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text4
  1481  001738                     __ptext4:
  1482                           	opt stack 0
  1483  001738                     _RtccWriteTime:
  1484                           	opt stack 27
  1485                           
  1486                           ;incstack = 0
  1487  001738  0E00               	movlw	0
  1488  00173A  6E06               	movwf	RtccWriteTime@wasAlrm,c
  1489  00173C  EE20 F002          	lfsr	2,2
  1490  001740  5001               	movf	RtccWriteTime@pTm,w,c
  1491  001742  26D9               	addwf	fsr2l,f,c
  1492  001744  5002               	movf	RtccWriteTime@pTm+1,w,c
  1493  001746  22DA               	addwfc	fsr2h,f,c
  1494  001748  0E5A               	movlw	90
  1495  00174A  60DF               	cpfslt	indf2,c
  1496  00174C  0012               	return	
  1497  00174E  EE20 F001          	lfsr	2,1
  1498  001752  5001               	movf	RtccWriteTime@pTm,w,c
  1499  001754  26D9               	addwf	fsr2l,f,c
  1500  001756  5002               	movf	RtccWriteTime@pTm+1,w,c
  1501  001758  22DA               	addwfc	fsr2h,f,c
  1502  00175A  0E5A               	movlw	90
  1503  00175C  60DF               	cpfslt	indf2,c
  1504  00175E  0012               	return	
  1505  001760  EE20 F003          	lfsr	2,3
  1506  001764  5001               	movf	RtccWriteTime@pTm,w,c
  1507  001766  26D9               	addwf	fsr2l,f,c
  1508  001768  5002               	movf	RtccWriteTime@pTm+1,w,c
  1509  00176A  22DA               	addwfc	fsr2h,f,c
  1510  00176C  0E24               	movlw	36
  1511  00176E  64DF               	cpfsgt	indf2,c
  1512  001770  D002               	goto	l2412
  1513  001772  0012               	return	
  1514                           
  1515                           ;	Return value of _RtccWriteTime is never used
  1516  001774  0012               	return	
  1517  001776                     l2412:
  1518  001776  EE20 F002          	lfsr	2,2
  1519  00177A  5001               	movf	RtccWriteTime@pTm,w,c
  1520  00177C  26D9               	addwf	fsr2l,f,c
  1521  00177E  5002               	movf	RtccWriteTime@pTm+1,w,c
  1522  001780  22DA               	addwfc	fsr2h,f,c
  1523  001782  50DF               	movf	indf2,w,c
  1524  001784  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  1525  001786  EE20 F001          	lfsr	2,1
  1526  00178A  5001               	movf	RtccWriteTime@pTm,w,c
  1527  00178C  26D9               	addwf	fsr2l,f,c
  1528  00178E  5002               	movf	RtccWriteTime@pTm+1,w,c
  1529  001790  22DA               	addwfc	fsr2h,f,c
  1530  001792  50DF               	movf	indf2,w,c
  1531  001794  6E08               	movwf	RtccWriteTime@tempMinSec,c
  1532  001796  5003               	movf	RtccWriteTime@di,w,c
  1533  001798  B4D8               	btfsc	status,2,c
  1534  00179A  D002               	goto	l2418
  1535  00179C  9CF2               	bcf	intcon,6,c	;volatile
  1536  00179E  D000               	goto	l2418
  1537  0017A0                     l2418:
  1538  0017A0  0E00               	movlw	0
  1539  0017A2  BB3F               	btfsc	63,5,b	;volatile
  1540  0017A4  0E01               	movlw	1
  1541  0017A6  6E07               	movwf	RtccWriteTime@wasWrEn,c
  1542  0017A8  5007               	movf	RtccWriteTime@wasWrEn,w,c
  1543  0017AA  A4D8               	btfss	status,2,c
  1544  0017AC  D003               	goto	l2422
  1545  0017AE  EC23  F012         	call	_RtccWrOn	;wreg free
  1546  0017B2  D000               	goto	l2422
  1547  0017B4                     l2422:
  1548  0017B4  0E00               	movlw	0
  1549  0017B6  BF3F               	btfsc	63,7,b	;volatile
  1550  0017B8  0E01               	movlw	1
  1551  0017BA  6E05               	movwf	RtccWriteTime@wasOn,c
  1552  0017BC  5005               	movf	RtccWriteTime@wasOn,w,c
  1553  0017BE  B4D8               	btfsc	status,2,c
  1554  0017C0  D007               	goto	l2428
  1555  0017C2  0E00               	movlw	0
  1556  0017C4  BE91               	btfsc	3985,7,c	;volatile
  1557  0017C6  0E01               	movlw	1
  1558  0017C8  6E06               	movwf	RtccWriteTime@wasAlrm,c
  1559  0017CA  010F               	movlb	15	; () banked
  1560  0017CC  9F3F               	bcf	63,7,b	;volatile
  1561  0017CE  D000               	goto	l2428
  1562  0017D0                     l2428:
  1563  0017D0  0EFC               	movlw	252
  1564  0017D2  010F               	movlb	15	; () banked
  1565  0017D4  173F               	andwf	63,f,b	;volatile
  1566  0017D6  010F               	movlb	15	; () banked
  1567  0017D8  813F               	bsf	63,0,b	;volatile
  1568                           
  1569                           ; BSR set to: 15
  1570  0017DA  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1571                           
  1572                           ; BSR set to: 15
  1573  0017DE  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1574                           
  1575                           ; BSR set to: 15
  1576  0017E2  EE20 F003          	lfsr	2,3
  1577  0017E6  5001               	movf	RtccWriteTime@pTm,w,c
  1578  0017E8  26D9               	addwf	fsr2l,f,c
  1579  0017EA  5002               	movf	RtccWriteTime@pTm+1,w,c
  1580  0017EC  22DA               	addwfc	fsr2h,f,c
  1581  0017EE  50DF               	movf	indf2,w,c
  1582  0017F0  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  1583                           
  1584                           ; BSR set to: 15
  1585  0017F2  0EFC               	movlw	252
  1586  0017F4  010F               	movlb	15	; () banked
  1587  0017F6  173F               	andwf	63,f,b	;volatile
  1588                           
  1589                           ; BSR set to: 15
  1590  0017F8  010F               	movlb	15	; () banked
  1591  0017FA  813F               	bsf	63,0,b	;volatile
  1592                           
  1593                           ; BSR set to: 15
  1594  0017FC  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1595                           
  1596                           ; BSR set to: 15
  1597  001800  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1598                           
  1599                           ; BSR set to: 15
  1600  001804  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1601                           
  1602                           ; BSR set to: 15
  1603  001808  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1604                           
  1605                           ; BSR set to: 15
  1606  00180C  5005               	movf	RtccWriteTime@wasOn,w,c
  1607  00180E  B4D8               	btfsc	status,2,c
  1608  001810  D00D               	goto	l2460
  1609                           
  1610                           ; BSR set to: 15
  1611  001812  010F               	movlb	15	; () banked
  1612  001814  8F3F               	bsf	63,7,b	;volatile
  1613                           
  1614                           ; BSR set to: 15
  1615  001816  5006               	movf	RtccWriteTime@wasAlrm,w,c
  1616  001818  B4D8               	btfsc	status,2,c
  1617  00181A  D002               	goto	l2456
  1618                           
  1619                           ; BSR set to: 15
  1620  00181C  8E91               	bsf	3985,7,c	;volatile
  1621  00181E  D000               	goto	l2456
  1622  001820                     l2456:
  1623                           
  1624                           ; BSR set to: 15
  1625  001820  5007               	movf	RtccWriteTime@wasWrEn,w,c
  1626  001822  B4D8               	btfsc	status,2,c
  1627  001824  D009               	goto	l2464
  1628                           
  1629                           ; BSR set to: 15
  1630  001826  EC23  F012         	call	_RtccWrOn	;wreg free
  1631  00182A  D006               	goto	l2464
  1632  00182C                     l2460:
  1633  00182C  5007               	movf	RtccWriteTime@wasWrEn,w,c
  1634  00182E  A4D8               	btfss	status,2,c
  1635  001830  D003               	goto	l2464
  1636  001832  010F               	movlb	15	; () banked
  1637  001834  9B3F               	bcf	63,5,b	;volatile
  1638                           
  1639                           ; BSR set to: 15
  1640  001836  D000               	goto	l2464
  1641  001838                     l2464:
  1642  001838  5003               	movf	RtccWriteTime@di,w,c
  1643  00183A  B4D8               	btfsc	status,2,c
  1644  00183C  0012               	return	
  1645  00183E  8CF2               	bsf	intcon,6,c	;volatile
  1646  001840  0012               	return	
  1647                           
  1648                           ;	Return value of _RtccWriteTime is never used
  1649  001842  0012               	return		;funcret
  1650  001844                     __end_of_RtccWriteTime:
  1651                           	opt stack 0
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           prodl	equ	0xFF3
  1657                           intcon	equ	0xFF2
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           postdec1	equ	0xFE5
  1661                           fsr1l	equ	0xFE1
  1662                           indf2	equ	0xFDF
  1663                           fsr2h	equ	0xFDA
  1664                           fsr2l	equ	0xFD9
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _RtccWriteDate *****************
  1668 ;; Defined at:
  1669 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  pDt             2    0[COMRAM] PTR const struct .
  1672 ;;		 -> RtccDate(4), 
  1673 ;;  di              1    2[COMRAM] enum E7121
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  tempHourWDay    2   11[COMRAM] struct .
  1676 ;;  tempDayMonth    2    9[COMRAM] struct .
  1677 ;;  tempYear        2    6[COMRAM] struct .
  1678 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1679 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1680 ;;  wasOn           1    4[COMRAM] enum E7121
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      enum E7337
  1683 ;; Registers used:
  1684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1690 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1691 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;Total ram usage:       13 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    1
  1697 ;; This function calls:
  1698 ;;		_RtccWrOn
  1699 ;; This function is called by:
  1700 ;;		_Write_RTC
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text5
  1705  0015F2                     __ptext5:
  1706                           	opt stack 0
  1707  0015F2                     _RtccWriteDate:
  1708                           	opt stack 27
  1709                           
  1710                           ;incstack = 0
  1711  0015F2  0E00               	movlw	0
  1712  0015F4  6E06               	movwf	RtccWriteDate@wasAlrm,c
  1713  0015F6  EE20 F002          	lfsr	2,2
  1714  0015FA  5001               	movf	RtccWriteDate@pDt,w,c
  1715  0015FC  26D9               	addwf	fsr2l,f,c
  1716  0015FE  5002               	movf	RtccWriteDate@pDt+1,w,c
  1717  001600  22DA               	addwfc	fsr2h,f,c
  1718  001602  0E13               	movlw	19
  1719  001604  60DF               	cpfslt	indf2,c
  1720  001606  0012               	return	
  1721  001608  EE20 F002          	lfsr	2,2
  1722  00160C  5001               	movf	RtccWriteDate@pDt,w,c
  1723  00160E  26D9               	addwf	fsr2l,f,c
  1724  001610  5002               	movf	RtccWriteDate@pDt+1,w,c
  1725  001612  22DA               	addwfc	fsr2h,f,c
  1726  001614  50DF               	movf	indf2,w,c
  1727  001616  B4D8               	btfsc	status,2,c
  1728  001618  0012               	return	
  1729  00161A  EE20 F001          	lfsr	2,1
  1730  00161E  5001               	movf	RtccWriteDate@pDt,w,c
  1731  001620  26D9               	addwf	fsr2l,f,c
  1732  001622  5002               	movf	RtccWriteDate@pDt+1,w,c
  1733  001624  22DA               	addwfc	fsr2h,f,c
  1734  001626  0E32               	movlw	50
  1735  001628  60DF               	cpfslt	indf2,c
  1736  00162A  0012               	return	
  1737  00162C  EE20 F001          	lfsr	2,1
  1738  001630  5001               	movf	RtccWriteDate@pDt,w,c
  1739  001632  26D9               	addwf	fsr2l,f,c
  1740  001634  5002               	movf	RtccWriteDate@pDt+1,w,c
  1741  001636  22DA               	addwfc	fsr2h,f,c
  1742  001638  50DF               	movf	indf2,w,c
  1743  00163A  B4D8               	btfsc	status,2,c
  1744  00163C  0012               	return	
  1745  00163E  EE20 F003          	lfsr	2,3
  1746  001642  5001               	movf	RtccWriteDate@pDt,w,c
  1747  001644  26D9               	addwf	fsr2l,f,c
  1748  001646  5002               	movf	RtccWriteDate@pDt+1,w,c
  1749  001648  22DA               	addwfc	fsr2h,f,c
  1750  00164A  0E99               	movlw	153
  1751  00164C  64DF               	cpfsgt	indf2,c
  1752  00164E  D002               	goto	l2480
  1753  001650  0012               	return	
  1754                           
  1755                           ;	Return value of _RtccWriteDate is never used
  1756  001652  0012               	return	
  1757  001654                     l2480:
  1758  001654  EE20 F003          	lfsr	2,3
  1759  001658  5001               	movf	RtccWriteDate@pDt,w,c
  1760  00165A  26D9               	addwf	fsr2l,f,c
  1761  00165C  5002               	movf	RtccWriteDate@pDt+1,w,c
  1762  00165E  22DA               	addwfc	fsr2h,f,c
  1763  001660  50DF               	movf	indf2,w,c
  1764  001662  6E07               	movwf	RtccWriteDate@tempYear,c
  1765  001664  EE20 F001          	lfsr	2,1
  1766  001668  5001               	movf	RtccWriteDate@pDt,w,c
  1767  00166A  26D9               	addwf	fsr2l,f,c
  1768  00166C  5002               	movf	RtccWriteDate@pDt+1,w,c
  1769  00166E  22DA               	addwfc	fsr2h,f,c
  1770  001670  50DF               	movf	indf2,w,c
  1771  001672  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  1772  001674  EE20 F002          	lfsr	2,2
  1773  001678  5001               	movf	RtccWriteDate@pDt,w,c
  1774  00167A  26D9               	addwf	fsr2l,f,c
  1775  00167C  5002               	movf	RtccWriteDate@pDt+1,w,c
  1776  00167E  22DA               	addwfc	fsr2h,f,c
  1777  001680  50DF               	movf	indf2,w,c
  1778  001682  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  1779  001684  5003               	movf	RtccWriteDate@di,w,c
  1780  001686  B4D8               	btfsc	status,2,c
  1781  001688  D002               	goto	l2486
  1782  00168A  9CF2               	bcf	intcon,6,c	;volatile
  1783  00168C  D000               	goto	l2486
  1784  00168E                     l2486:
  1785  00168E  0E00               	movlw	0
  1786  001690  BB3F               	btfsc	63,5,b	;volatile
  1787  001692  0E01               	movlw	1
  1788  001694  6E09               	movwf	RtccWriteDate@wasWrEn,c
  1789  001696  5009               	movf	RtccWriteDate@wasWrEn,w,c
  1790  001698  A4D8               	btfss	status,2,c
  1791  00169A  D003               	goto	l2490
  1792  00169C  EC23  F012         	call	_RtccWrOn	;wreg free
  1793  0016A0  D000               	goto	l2490
  1794  0016A2                     l2490:
  1795  0016A2  0E00               	movlw	0
  1796  0016A4  BF3F               	btfsc	63,7,b	;volatile
  1797  0016A6  0E01               	movlw	1
  1798  0016A8  6E05               	movwf	RtccWriteDate@wasOn,c
  1799  0016AA  5005               	movf	RtccWriteDate@wasOn,w,c
  1800  0016AC  B4D8               	btfsc	status,2,c
  1801  0016AE  D007               	goto	l2496
  1802  0016B0  0E00               	movlw	0
  1803  0016B2  BE91               	btfsc	3985,7,c	;volatile
  1804  0016B4  0E01               	movlw	1
  1805  0016B6  6E06               	movwf	RtccWriteDate@wasAlrm,c
  1806  0016B8  010F               	movlb	15	; () banked
  1807  0016BA  9F3F               	bcf	63,7,b	;volatile
  1808  0016BC  D000               	goto	l2496
  1809  0016BE                     l2496:
  1810  0016BE  0EFC               	movlw	252
  1811  0016C0  010F               	movlb	15	; () banked
  1812  0016C2  173F               	andwf	63,f,b	;volatile
  1813  0016C4  010F               	movlb	15	; () banked
  1814  0016C6  813F               	bsf	63,0,b	;volatile
  1815                           
  1816                           ; BSR set to: 15
  1817  0016C8  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  1818                           
  1819                           ; BSR set to: 15
  1820  0016CC  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  1821                           
  1822                           ; BSR set to: 15
  1823  0016D0  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  1824  0016D4  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  1825  0016D8  50DF               	movf	indf2,w,c
  1826  0016DA  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  1827                           
  1828                           ; BSR set to: 15
  1829  0016DC  0EFC               	movlw	252
  1830  0016DE  010F               	movlb	15	; () banked
  1831  0016E0  173F               	andwf	63,f,b	;volatile
  1832                           
  1833                           ; BSR set to: 15
  1834  0016E2  0E03               	movlw	3
  1835  0016E4  010F               	movlb	15	; () banked
  1836  0016E6  133F               	iorwf	63,f,b	;volatile
  1837                           
  1838                           ; BSR set to: 15
  1839  0016E8  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  1840                           
  1841                           ; BSR set to: 15
  1842  0016EC  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  1843                           
  1844                           ; BSR set to: 15
  1845  0016F0  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  1846                           
  1847                           ; BSR set to: 15
  1848  0016F4  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  1849                           
  1850                           ; BSR set to: 15
  1851  0016F8  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  1852                           
  1853                           ; BSR set to: 15
  1854  0016FC  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  1855                           
  1856                           ; BSR set to: 15
  1857  001700  5005               	movf	RtccWriteDate@wasOn,w,c
  1858  001702  B4D8               	btfsc	status,2,c
  1859  001704  D00D               	goto	l2532
  1860                           
  1861                           ; BSR set to: 15
  1862  001706  010F               	movlb	15	; () banked
  1863  001708  8F3F               	bsf	63,7,b	;volatile
  1864                           
  1865                           ; BSR set to: 15
  1866  00170A  5006               	movf	RtccWriteDate@wasAlrm,w,c
  1867  00170C  B4D8               	btfsc	status,2,c
  1868  00170E  D002               	goto	l2528
  1869                           
  1870                           ; BSR set to: 15
  1871  001710  8E91               	bsf	3985,7,c	;volatile
  1872  001712  D000               	goto	l2528
  1873  001714                     l2528:
  1874                           
  1875                           ; BSR set to: 15
  1876  001714  5009               	movf	RtccWriteDate@wasWrEn,w,c
  1877  001716  B4D8               	btfsc	status,2,c
  1878  001718  D009               	goto	l2536
  1879                           
  1880                           ; BSR set to: 15
  1881  00171A  EC23  F012         	call	_RtccWrOn	;wreg free
  1882  00171E  D006               	goto	l2536
  1883  001720                     l2532:
  1884  001720  5009               	movf	RtccWriteDate@wasWrEn,w,c
  1885  001722  A4D8               	btfss	status,2,c
  1886  001724  D003               	goto	l2536
  1887  001726  010F               	movlb	15	; () banked
  1888  001728  9B3F               	bcf	63,5,b	;volatile
  1889                           
  1890                           ; BSR set to: 15
  1891  00172A  D000               	goto	l2536
  1892  00172C                     l2536:
  1893  00172C  5003               	movf	RtccWriteDate@di,w,c
  1894  00172E  B4D8               	btfsc	status,2,c
  1895  001730  0012               	return	
  1896  001732  9CF2               	bcf	intcon,6,c	;volatile
  1897  001734  0012               	return	
  1898                           
  1899                           ;	Return value of _RtccWriteDate is never used
  1900  001736  0012               	return		;funcret
  1901  001738                     __end_of_RtccWriteDate:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           prodl	equ	0xFF3
  1908                           intcon	equ	0xFF2
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           postdec1	equ	0xFE5
  1912                           fsr1l	equ	0xFE1
  1913                           indf2	equ	0xFDF
  1914                           fsr2h	equ	0xFDA
  1915                           fsr2l	equ	0xFD9
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _RtccWrOn *****************
  1919 ;; Defined at:
  1920 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  data            2    0        unsigned int 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, status,2
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_Write_RTC
  1944 ;;		_RtccWriteDate
  1945 ;;		_RtccWriteTime
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text6
  1950  002446                     __ptext6:
  1951                           	opt stack 0
  1952  002446                     _RtccWrOn:
  1953                           	opt stack 27
  1954                           
  1955                           ;incstack = 0
  1956  002446  9CF2               	bcf	intcon,6,c	;volatile
  1957  002448  0E55               	movlw	85
  1958  00244A  6EA7               	movwf	4007,c	;volatile
  1959  00244C  0EAA               	movlw	170
  1960  00244E  6EA7               	movwf	4007,c	;volatile
  1961  002450  010F               	movlb	15	; () banked
  1962  002452  8B3F               	bsf	63,5,b	;volatile
  1963                           
  1964                           ; BSR set to: 15
  1965  002454  8CF2               	bsf	intcon,6,c	;volatile
  1966                           
  1967                           ; BSR set to: 15
  1968  002456  0012               	return		;funcret
  1969  002458                     __end_of_RtccWrOn:
  1970                           	opt stack 0
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           prodl	equ	0xFF3
  1976                           intcon	equ	0xFF2
  1977                           postinc0	equ	0xFEE
  1978                           wreg	equ	0xFE8
  1979                           postdec1	equ	0xFE5
  1980                           fsr1l	equ	0xFE1
  1981                           indf2	equ	0xFDF
  1982                           fsr2h	equ	0xFDA
  1983                           fsr2l	equ	0xFD9
  1984                           status	equ	0xFD8
  1985                           
  1986 ;; *************** function _keyboard_control *****************
  1987 ;; Defined at:
  1988 ;;		line 331 in file "main.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;		None               void
  1995 ;; Registers used:
  1996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2006 ;;Total ram usage:        1 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    9
  2009 ;; This function calls:
  2010 ;;		_button_A
  2011 ;;		_button_B
  2012 ;;		_button_C
  2013 ;;		_button_D
  2014 ;;		_button_asterisk
  2015 ;;		_button_hash
  2016 ;;		_button_number
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text7
  2023  001354                     __ptext7:
  2024                           	opt stack 0
  2025  001354                     _keyboard_control:
  2026                           	opt stack 21
  2027                           
  2028                           ;main.c: 333: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2029                           
  2030                           ; BSR set to: 15
  2031                           ;incstack = 0
  2032  001354  8089               	bsf	3977,0,c	;volatile
  2033  001356  9289               	bcf	3977,1,c	;volatile
  2034  001358  9489               	bcf	3977,2,c	;volatile
  2035  00135A  9689               	bcf	3977,3,c	;volatile
  2036                           
  2037                           ;main.c: 334: {
  2038                           ;main.c: 335: if (PORTAbits.RA5==1){key=1;button_number();while(PORTAbits.RA5==1){};}
  2039  00135C  AA80               	btfss	3968,5,c	;volatile
  2040  00135E  D007               	goto	l252
  2041  001360  0E01               	movlw	1
  2042  001362  6E3F               	movwf	_key,c
  2043  001364  ECB1  F00E         	call	_button_number	;wreg free
  2044  001368  D000               	goto	l253
  2045  00136A                     l253:
  2046  00136A  BA80               	btfsc	3968,5,c	;volatile
  2047  00136C  D7FE               	goto	l253
  2048  00136E                     l252:
  2049                           
  2050                           ;main.c: 336: if (PORTAbits.RA7==1){key=2;button_number();while(PORTAbits.RA7==1){};}
  2051  00136E  AE80               	btfss	3968,7,c	;volatile
  2052  001370  D007               	goto	l256
  2053  001372  0E02               	movlw	2
  2054  001374  6E3F               	movwf	_key,c
  2055  001376  ECB1  F00E         	call	_button_number	;wreg free
  2056  00137A  D000               	goto	l257
  2057  00137C                     l257:
  2058  00137C  BE80               	btfsc	3968,7,c	;volatile
  2059  00137E  D7FE               	goto	l257
  2060  001380                     l256:
  2061                           
  2062                           ;main.c: 337: if (PORTAbits.RA6==1){key=3;button_number();while(PORTAbits.RA6==1){};}
  2063  001380  AC80               	btfss	3968,6,c	;volatile
  2064  001382  D007               	goto	l260
  2065  001384  0E03               	movlw	3
  2066  001386  6E3F               	movwf	_key,c
  2067  001388  ECB1  F00E         	call	_button_number	;wreg free
  2068  00138C  D000               	goto	l261
  2069  00138E                     l261:
  2070  00138E  BC80               	btfsc	3968,6,c	;volatile
  2071  001390  D7FE               	goto	l261
  2072  001392                     l260:
  2073                           
  2074                           ;main.c: 338: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  2075  001392  A482               	btfss	3970,2,c	;volatile
  2076  001394  D007               	goto	l264
  2077  001396  0E0B               	movlw	11
  2078  001398  6E3F               	movwf	_key,c
  2079  00139A  EC44  F011         	call	_button_A	;wreg free
  2080  00139E  D000               	goto	l265
  2081  0013A0                     l265:
  2082  0013A0  B482               	btfsc	3970,2,c	;volatile
  2083  0013A2  D7FE               	goto	l265
  2084  0013A4                     l264:
  2085                           
  2086                           ;main.c: 339: }
  2087                           ;main.c: 341: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  2088  0013A4  9089               	bcf	3977,0,c	;volatile
  2089  0013A6  8289               	bsf	3977,1,c	;volatile
  2090  0013A8  9489               	bcf	3977,2,c	;volatile
  2091  0013AA  9689               	bcf	3977,3,c	;volatile
  2092                           
  2093                           ;main.c: 342: {
  2094                           ;main.c: 343: if (PORTAbits.RA5==1){key=4;button_number();while(PORTAbits.RA5==1){};}
  2095  0013AC  AA80               	btfss	3968,5,c	;volatile
  2096  0013AE  D007               	goto	l268
  2097  0013B0  0E04               	movlw	4
  2098  0013B2  6E3F               	movwf	_key,c
  2099  0013B4  ECB1  F00E         	call	_button_number	;wreg free
  2100  0013B8  D000               	goto	l269
  2101  0013BA                     l269:
  2102  0013BA  BA80               	btfsc	3968,5,c	;volatile
  2103  0013BC  D7FE               	goto	l269
  2104  0013BE                     l268:
  2105                           
  2106                           ;main.c: 344: if (PORTAbits.RA7==1){key=5;button_number();while(PORTAbits.RA7==1){};}
  2107  0013BE  AE80               	btfss	3968,7,c	;volatile
  2108  0013C0  D007               	goto	l272
  2109  0013C2  0E05               	movlw	5
  2110  0013C4  6E3F               	movwf	_key,c
  2111  0013C6  ECB1  F00E         	call	_button_number	;wreg free
  2112  0013CA  D000               	goto	l273
  2113  0013CC                     l273:
  2114  0013CC  BE80               	btfsc	3968,7,c	;volatile
  2115  0013CE  D7FE               	goto	l273
  2116  0013D0                     l272:
  2117                           
  2118                           ;main.c: 345: if (PORTAbits.RA6==1){key=6;button_number();while(PORTAbits.RA6==1){};}
  2119  0013D0  AC80               	btfss	3968,6,c	;volatile
  2120  0013D2  D007               	goto	l276
  2121  0013D4  0E06               	movlw	6
  2122  0013D6  6E3F               	movwf	_key,c
  2123  0013D8  ECB1  F00E         	call	_button_number	;wreg free
  2124  0013DC  D000               	goto	l277
  2125  0013DE                     l277:
  2126  0013DE  BC80               	btfsc	3968,6,c	;volatile
  2127  0013E0  D7FE               	goto	l277
  2128  0013E2                     l276:
  2129                           
  2130                           ;main.c: 346: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2131  0013E2  A482               	btfss	3970,2,c	;volatile
  2132  0013E4  D007               	goto	l280
  2133  0013E6  0E0C               	movlw	12
  2134  0013E8  6E3F               	movwf	_key,c
  2135  0013EA  EC3B  F010         	call	_button_B	;wreg free
  2136  0013EE  D000               	goto	l281
  2137  0013F0                     l281:
  2138  0013F0  B482               	btfsc	3970,2,c	;volatile
  2139  0013F2  D7FE               	goto	l281
  2140  0013F4                     l280:
  2141                           
  2142                           ;main.c: 347: }
  2143                           ;main.c: 349: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2144  0013F4  9089               	bcf	3977,0,c	;volatile
  2145  0013F6  9289               	bcf	3977,1,c	;volatile
  2146  0013F8  8489               	bsf	3977,2,c	;volatile
  2147  0013FA  9689               	bcf	3977,3,c	;volatile
  2148                           
  2149                           ;main.c: 350: {
  2150                           ;main.c: 351: if (PORTAbits.RA5==1){key=7;button_number();while(PORTAbits.RA5==1){};}
  2151  0013FC  AA80               	btfss	3968,5,c	;volatile
  2152  0013FE  D007               	goto	l284
  2153  001400  0E07               	movlw	7
  2154  001402  6E3F               	movwf	_key,c
  2155  001404  ECB1  F00E         	call	_button_number	;wreg free
  2156  001408  D000               	goto	l285
  2157  00140A                     l285:
  2158  00140A  BA80               	btfsc	3968,5,c	;volatile
  2159  00140C  D7FE               	goto	l285
  2160  00140E                     l284:
  2161                           
  2162                           ;main.c: 352: if (PORTAbits.RA7==1){key=8;button_number();while(PORTAbits.RA7==1){};}
  2163  00140E  AE80               	btfss	3968,7,c	;volatile
  2164  001410  D007               	goto	l288
  2165  001412  0E08               	movlw	8
  2166  001414  6E3F               	movwf	_key,c
  2167  001416  ECB1  F00E         	call	_button_number	;wreg free
  2168  00141A  D000               	goto	l289
  2169  00141C                     l289:
  2170  00141C  BE80               	btfsc	3968,7,c	;volatile
  2171  00141E  D7FE               	goto	l289
  2172  001420                     l288:
  2173                           
  2174                           ;main.c: 353: if (PORTAbits.RA6==1){key=9;button_number();while(PORTAbits.RA6==1){};}
  2175  001420  AC80               	btfss	3968,6,c	;volatile
  2176  001422  D007               	goto	l292
  2177  001424  0E09               	movlw	9
  2178  001426  6E3F               	movwf	_key,c
  2179  001428  ECB1  F00E         	call	_button_number	;wreg free
  2180  00142C  D000               	goto	l293
  2181  00142E                     l293:
  2182  00142E  BC80               	btfsc	3968,6,c	;volatile
  2183  001430  D7FE               	goto	l293
  2184  001432                     l292:
  2185                           
  2186                           ;main.c: 354: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2187  001432  A482               	btfss	3970,2,c	;volatile
  2188  001434  D007               	goto	l296
  2189  001436  0E0D               	movlw	13
  2190  001438  6E3F               	movwf	_key,c
  2191  00143A  EC0B  F012         	call	_button_C	;wreg free
  2192  00143E  D000               	goto	l297
  2193  001440                     l297:
  2194  001440  B482               	btfsc	3970,2,c	;volatile
  2195  001442  D7FE               	goto	l297
  2196  001444                     l296:
  2197                           
  2198                           ;main.c: 355: }
  2199                           ;main.c: 357: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2200  001444  9089               	bcf	3977,0,c	;volatile
  2201  001446  9289               	bcf	3977,1,c	;volatile
  2202  001448  9489               	bcf	3977,2,c	;volatile
  2203  00144A  8689               	bsf	3977,3,c	;volatile
  2204                           
  2205                           ;main.c: 358: {
  2206                           ;main.c: 359: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2207  00144C  AA80               	btfss	3968,5,c	;volatile
  2208  00144E  D007               	goto	l300
  2209  001450  0E0E               	movlw	14
  2210  001452  6E3F               	movwf	_key,c
  2211  001454  EC46  F012         	call	_button_asterisk	;wreg free
  2212  001458  D000               	goto	l301
  2213  00145A                     l301:
  2214  00145A  BA80               	btfsc	3968,5,c	;volatile
  2215  00145C  D7FE               	goto	l301
  2216  00145E                     l300:
  2217                           
  2218                           ;main.c: 360: if (PORTAbits.RA7==1){key=0;button_number();while(PORTAbits.RA7==1){};}
  2219  00145E  AE80               	btfss	3968,7,c	;volatile
  2220  001460  D007               	goto	l304
  2221  001462  0E00               	movlw	0
  2222  001464  6E3F               	movwf	_key,c
  2223  001466  ECB1  F00E         	call	_button_number	;wreg free
  2224  00146A  D000               	goto	l305
  2225  00146C                     l305:
  2226  00146C  BE80               	btfsc	3968,7,c	;volatile
  2227  00146E  D7FE               	goto	l305
  2228  001470                     l304:
  2229                           
  2230                           ;main.c: 361: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2231  001470  AC80               	btfss	3968,6,c	;volatile
  2232  001472  D007               	goto	l308
  2233  001474  0E0F               	movlw	15
  2234  001476  6E3F               	movwf	_key,c
  2235  001478  EC3E  F012         	call	_button_hash	;wreg free
  2236  00147C  D000               	goto	l309
  2237  00147E                     l309:
  2238  00147E  BC80               	btfsc	3968,6,c	;volatile
  2239  001480  D7FE               	goto	l309
  2240  001482                     l308:
  2241                           
  2242                           ;main.c: 362: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2243  001482  A482               	btfss	3970,2,c	;volatile
  2244  001484  D009               	goto	l3108
  2245  001486  0E10               	movlw	16
  2246  001488  6E3F               	movwf	_key,c
  2247  00148A  EC59  F012         	call	_button_D	;wreg free
  2248  00148E  D000               	goto	l313
  2249  001490                     l313:
  2250  001490  A482               	btfss	3970,2,c	;volatile
  2251  001492  D002               	goto	l3108
  2252  001494  D7FD               	goto	l313
  2253  001496  D000               	goto	l3108
  2254  001498                     l3108:
  2255                           
  2256                           ;main.c: 363: }
  2257                           ;main.c: 365: _delay((unsigned long)((98)*(8000000/4000.0)));
  2258  001498  0EFF               	movlw	255
  2259  00149A  6E24               	movwf	??_keyboard_control& (0+255),c
  2260  00149C  0E8A               	movlw	138
  2261  00149E                     u2337:
  2262  00149E  2EE8               	decfsz	wreg,f,c
  2263  0014A0  D7FE               	goto	u2337
  2264  0014A2  2E24               	decfsz	??_keyboard_control& (0+255),f,c
  2265  0014A4  D7FC               	goto	u2337
  2266  0014A6  D000               	nop2	
  2267  0014A8  0012               	return		;funcret
  2268  0014AA                     __end_of_keyboard_control:
  2269                           	opt stack 0
  2270                           tblptru	equ	0xFF8
  2271                           tblptrh	equ	0xFF7
  2272                           tblptrl	equ	0xFF6
  2273                           tablat	equ	0xFF5
  2274                           prodl	equ	0xFF3
  2275                           intcon	equ	0xFF2
  2276                           postinc0	equ	0xFEE
  2277                           wreg	equ	0xFE8
  2278                           postdec1	equ	0xFE5
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           fsr2h	equ	0xFDA
  2282                           fsr2l	equ	0xFD9
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function _button_number *****************
  2286 ;; Defined at:
  2287 ;;		line 311 in file "main.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;Total ram usage:        0 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    5
  2308 ;; This function calls:
  2309 ;;		_lcd_putrs
  2310 ;;		_sprintf
  2311 ;;		_strcat
  2312 ;; This function is called by:
  2313 ;;		_keyboard_control
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text8
  2318  001D62                     __ptext8:
  2319                           	opt stack 0
  2320  001D62                     _button_number:
  2321                           	opt stack 24
  2322                           
  2323                           ;main.c: 313: if(activity == 1){
  2324                           
  2325                           ;incstack = 0
  2326  001D62  0427               	decf	_activity,w,c
  2327  001D64  1028               	iorwf	_activity+1,w,c
  2328  001D66  A4D8               	btfss	status,2,c
  2329  001D68  D01E               	goto	l2960
  2330                           
  2331                           ;main.c: 315: lcd_putrs("*");
  2332  001D6A  0E92               	movlw	low STR_35
  2333  001D6C  6E09               	movwf	lcd_putrs@ptr,c
  2334  001D6E  0E0F               	movlw	high STR_35
  2335  001D70  6E0A               	movwf	lcd_putrs@ptr+1,c
  2336  001D72  EC11  F010         	call	_lcd_putrs	;wreg free
  2337                           
  2338                           ;main.c: 316: sprintf(buffer1, "%01u", key);
  2339  001D76  0E7C               	movlw	low _buffer1
  2340  001D78  6E0D               	movwf	sprintf@sp,c
  2341  001D7A  0E00               	movlw	high _buffer1
  2342  001D7C  6E0E               	movwf	sprintf@sp+1,c
  2343  001D7E  0E7D               	movlw	low STR_37
  2344  001D80  6E0F               	movwf	sprintf@f,c
  2345  001D82  0E0F               	movlw	high STR_37
  2346  001D84  6E10               	movwf	sprintf@f+1,c
  2347  001D86  C03F  F011         	movff	_key,?_sprintf+4
  2348  001D8A  6A12               	clrf	?_sprintf+5,c
  2349  001D8C  ECCC  F007         	call	_sprintf	;wreg free
  2350                           
  2351                           ;main.c: 317: strcat(pin_input, buffer1);
  2352  001D90  0E95               	movlw	low _pin_input
  2353  001D92  6E01               	movwf	strcat@to,c
  2354  001D94  0E00               	movlw	high _pin_input
  2355  001D96  6E02               	movwf	strcat@to+1,c
  2356  001D98  0E7C               	movlw	low _buffer1
  2357  001D9A  6E03               	movwf	strcat@from,c
  2358  001D9C  0E00               	movlw	high _buffer1
  2359  001D9E  6E04               	movwf	strcat@from+1,c
  2360  001DA0  ECFE  F010         	call	_strcat	;wreg free
  2361                           
  2362                           ;main.c: 322: } else {
  2363  001DA4  0012               	return	
  2364  001DA6                     l2960:
  2365                           
  2366                           ;main.c: 324: sprintf(buffer1,"%01u",key);
  2367  001DA6  0E7C               	movlw	low _buffer1
  2368  001DA8  6E0D               	movwf	sprintf@sp,c
  2369  001DAA  0E00               	movlw	high _buffer1
  2370  001DAC  6E0E               	movwf	sprintf@sp+1,c
  2371  001DAE  0E7D               	movlw	low STR_37
  2372  001DB0  6E0F               	movwf	sprintf@f,c
  2373  001DB2  0E0F               	movlw	high STR_37
  2374  001DB4  6E10               	movwf	sprintf@f+1,c
  2375  001DB6  C03F  F011         	movff	_key,?_sprintf+4
  2376  001DBA  6A12               	clrf	?_sprintf+5,c
  2377  001DBC  ECCC  F007         	call	_sprintf	;wreg free
  2378                           
  2379                           ;main.c: 325: lcd_putrs(buffer1);
  2380  001DC0  0E7C               	movlw	low _buffer1
  2381  001DC2  6E09               	movwf	lcd_putrs@ptr,c
  2382  001DC4  0E00               	movlw	high _buffer1
  2383  001DC6  6E0A               	movwf	lcd_putrs@ptr+1,c
  2384  001DC8  EC11  F010         	call	_lcd_putrs	;wreg free
  2385  001DCC  0012               	return	
  2386  001DCE  0012               	return		;funcret
  2387  001DD0                     __end_of_button_number:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           prodl	equ	0xFF3
  2394                           intcon	equ	0xFF2
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           postdec1	equ	0xFE5
  2398                           fsr1l	equ	0xFE1
  2399                           indf2	equ	0xFDF
  2400                           fsr2h	equ	0xFDA
  2401                           fsr2l	equ	0xFD9
  2402                           status	equ	0xFD8
  2403                           
  2404 ;; *************** function _strcat *****************
  2405 ;; Defined at:
  2406 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  to              2    0[COMRAM] PTR unsigned char 
  2409 ;;		 -> pin_input(5), 
  2410 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2411 ;;		 -> buffer1(20), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  cp              2    4[COMRAM] PTR unsigned char 
  2414 ;;		 -> pin_input(5), 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  2    0[COMRAM] PTR unsigned char 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2427 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2428 ;;Total ram usage:        6 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_button_number
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text9
  2438  0021FC                     __ptext9:
  2439                           	opt stack 0
  2440  0021FC                     _strcat:
  2441                           	opt stack 28
  2442                           
  2443                           ;incstack = 0
  2444  0021FC  C001  F005         	movff	strcat@to,strcat@cp
  2445  002200  C002  F006         	movff	strcat@to+1,strcat@cp+1
  2446  002204  D003               	goto	l2744
  2447  002206                     l2742:
  2448  002206  4A05               	infsnz	strcat@cp,f,c
  2449  002208  2A06               	incf	strcat@cp+1,f,c
  2450  00220A  D000               	goto	l2744
  2451  00220C                     l2744:
  2452  00220C  C005  FFD9         	movff	strcat@cp,fsr2l
  2453  002210  C006  FFDA         	movff	strcat@cp+1,fsr2h
  2454  002214  50DF               	movf	indf2,w,c
  2455  002216  B4D8               	btfsc	status,2,c
  2456  002218  D007               	goto	l2748
  2457  00221A  D7F5               	goto	l2742
  2458  00221C  D005               	goto	l2748
  2459  00221E                     l2746:
  2460  00221E  4A05               	infsnz	strcat@cp,f,c
  2461  002220  2A06               	incf	strcat@cp+1,f,c
  2462  002222  4A03               	infsnz	strcat@from,f,c
  2463  002224  2A04               	incf	strcat@from+1,f,c
  2464  002226  D000               	goto	l2748
  2465  002228                     l2748:
  2466  002228  C003  FFD9         	movff	strcat@from,fsr2l
  2467  00222C  C004  FFDA         	movff	strcat@from+1,fsr2h
  2468  002230  C005  FFE1         	movff	strcat@cp,fsr1l
  2469  002234  C006  FFE2         	movff	strcat@cp+1,fsr1h
  2470  002238  CFDF FFE7          	movff	indf2,indf1
  2471  00223C  50E7               	movf	indf1,w,c
  2472  00223E  A4D8               	btfss	status,2,c
  2473  002240  D7EE               	goto	l2746
  2474                           
  2475                           ;	Return value of _strcat is never used
  2476  002242  0012               	return		;funcret
  2477  002244                     __end_of_strcat:
  2478                           	opt stack 0
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           prodl	equ	0xFF3
  2484                           intcon	equ	0xFF2
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           indf1	equ	0xFE7
  2488                           postdec1	equ	0xFE5
  2489                           fsr1h	equ	0xFE2
  2490                           fsr1l	equ	0xFE1
  2491                           indf2	equ	0xFDF
  2492                           fsr2h	equ	0xFDA
  2493                           fsr2l	equ	0xFD9
  2494                           status	equ	0xFD8
  2495                           
  2496 ;; *************** function _button_hash *****************
  2497 ;; Defined at:
  2498 ;;		line 303 in file "main.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;		None               void
  2505 ;; Registers used:
  2506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    8
  2519 ;; This function calls:
  2520 ;;		_pin_input_validator
  2521 ;; This function is called by:
  2522 ;;		_keyboard_control
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text10
  2527  00247C                     __ptext10:
  2528                           	opt stack 0
  2529  00247C                     _button_hash:
  2530                           	opt stack 21
  2531                           
  2532                           ;main.c: 305: if(activity == 1){
  2533                           
  2534                           ;incstack = 0
  2535  00247C  0427               	decf	_activity,w,c
  2536  00247E  1028               	iorwf	_activity+1,w,c
  2537  002480  A4D8               	btfss	status,2,c
  2538  002482  0012               	return	
  2539                           
  2540                           ;main.c: 306: pin_input_validator();
  2541  002484  EC62  F011         	call	_pin_input_validator	;wreg free
  2542  002488  0012               	return	
  2543  00248A  0012               	return		;funcret
  2544  00248C                     __end_of_button_hash:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           prodl	equ	0xFF3
  2551                           intcon	equ	0xFF2
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           indf1	equ	0xFE7
  2555                           postdec1	equ	0xFE5
  2556                           fsr1h	equ	0xFE2
  2557                           fsr1l	equ	0xFE1
  2558                           indf2	equ	0xFDF
  2559                           fsr2h	equ	0xFDA
  2560                           fsr2l	equ	0xFD9
  2561                           status	equ	0xFD8
  2562                           
  2563 ;; *************** function _pin_input_validator *****************
  2564 ;; Defined at:
  2565 ;;		line 224 in file "main.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  comparision     2   16[COMRAM] int 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;		None               void
  2572 ;; Registers used:
  2573 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2583 ;;Total ram usage:        2 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    7
  2586 ;; This function calls:
  2587 ;;		_activity_menu
  2588 ;;		_activity_pin
  2589 ;;		_strcmp
  2590 ;; This function is called by:
  2591 ;;		_button_hash
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text11
  2596  0022C4                     __ptext11:
  2597                           	opt stack 0
  2598  0022C4                     _pin_input_validator:
  2599                           	opt stack 21
  2600                           
  2601                           ;main.c: 226: int comparision = strcmp(pin, pin_input);
  2602                           
  2603                           ;incstack = 0
  2604  0022C4  0E90               	movlw	low _pin
  2605  0022C6  6E01               	movwf	strcmp@s1,c
  2606  0022C8  0E00               	movlw	high _pin
  2607  0022CA  6E02               	movwf	strcmp@s1+1,c
  2608  0022CC  0E95               	movlw	low _pin_input
  2609  0022CE  6E03               	movwf	strcmp@s2,c
  2610  0022D0  0E00               	movlw	high _pin_input
  2611  0022D2  6E04               	movwf	strcmp@s2+1,c
  2612  0022D4  EC64  F010         	call	_strcmp	;wreg free
  2613  0022D8  C001  F011         	movff	?_strcmp,pin_input_validator@comparision
  2614  0022DC  C002  F012         	movff	?_strcmp+1,pin_input_validator@comparision+1
  2615                           
  2616                           ;main.c: 228: if( comparision == 0 ){
  2617  0022E0  5011               	movf	pin_input_validator@comparision,w,c
  2618  0022E2  1012               	iorwf	pin_input_validator@comparision+1,w,c
  2619  0022E4  A4D8               	btfss	status,2,c
  2620  0022E6  D003               	goto	l2738
  2621                           
  2622                           ;main.c: 229: activity_menu();
  2623  0022E8  ECFD  F00D         	call	_activity_menu	;wreg free
  2624                           
  2625                           ;main.c: 230: }
  2626  0022EC  0012               	return	
  2627  0022EE                     l2738:
  2628                           
  2629                           ;main.c: 231: else{
  2630                           ;main.c: 232: activity_pin();
  2631  0022EE  EC8B  F010         	call	_activity_pin	;wreg free
  2632  0022F2  0012               	return	
  2633  0022F4  0012               	return		;funcret
  2634  0022F6                     __end_of_pin_input_validator:
  2635                           	opt stack 0
  2636                           tblptru	equ	0xFF8
  2637                           tblptrh	equ	0xFF7
  2638                           tblptrl	equ	0xFF6
  2639                           tablat	equ	0xFF5
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           indf1	equ	0xFE7
  2645                           postdec1	equ	0xFE5
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           fsr2h	equ	0xFDA
  2650                           fsr2l	equ	0xFD9
  2651                           status	equ	0xFD8
  2652                           
  2653 ;; *************** function _strcmp *****************
  2654 ;; Defined at:
  2655 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  2658 ;;		 -> pin(5), 
  2659 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  2660 ;;		 -> pin_input(5), 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  r               1    5[COMRAM] char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2    0[COMRAM] int 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2676 ;;Total ram usage:        6 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_pin_input_validator
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text12
  2686  0020C8                     __ptext12:
  2687                           	opt stack 0
  2688  0020C8                     _strcmp:
  2689                           	opt stack 27
  2690                           
  2691                           ;incstack = 0
  2692  0020C8  D005               	goto	l2340
  2693  0020CA                     l2338:
  2694  0020CA  4A01               	infsnz	strcmp@s1,f,c
  2695  0020CC  2A02               	incf	strcmp@s1+1,f,c
  2696  0020CE  4A03               	infsnz	strcmp@s2,f,c
  2697  0020D0  2A04               	incf	strcmp@s2+1,f,c
  2698  0020D2  D000               	goto	l2340
  2699  0020D4                     l2340:
  2700  0020D4  C001  FFD9         	movff	strcmp@s1,fsr2l
  2701  0020D8  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  2702  0020DC  50DF               	movf	indf2,w,c
  2703  0020DE  6E05               	movwf	??_strcmp& (0+255),c
  2704  0020E0  C003  FFD9         	movff	strcmp@s2,fsr2l
  2705  0020E4  C004  FFDA         	movff	strcmp@s2+1,fsr2h
  2706  0020E8  50DF               	movf	indf2,w,c
  2707  0020EA  0800               	sublw	0
  2708  0020EC  2405               	addwf	??_strcmp,w,c
  2709  0020EE  6E06               	movwf	strcmp@r,c
  2710  0020F0  5006               	movf	strcmp@r,w,c
  2711  0020F2  A4D8               	btfss	status,2,c
  2712  0020F4  D009               	goto	l2344
  2713  0020F6  C001  FFD9         	movff	strcmp@s1,fsr2l
  2714  0020FA  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  2715  0020FE  50DF               	movf	indf2,w,c
  2716  002100  B4D8               	btfsc	status,2,c
  2717  002102  D002               	goto	l2344
  2718  002104  D7E2               	goto	l2338
  2719  002106  D000               	goto	l2344
  2720  002108                     l2344:
  2721  002108  5006               	movf	strcmp@r,w,c
  2722  00210A  6E01               	movwf	?_strcmp,c
  2723  00210C  6A02               	clrf	?_strcmp+1,c
  2724  00210E  BE01               	btfsc	?_strcmp,7,c
  2725  002110  0602               	decf	?_strcmp+1,f,c
  2726  002112  0012               	return	
  2727  002114  0012               	return		;funcret
  2728  002116                     __end_of_strcmp:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           indf1	equ	0xFE7
  2739                           postdec1	equ	0xFE5
  2740                           fsr1h	equ	0xFE2
  2741                           fsr1l	equ	0xFE1
  2742                           indf2	equ	0xFDF
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8
  2746                           
  2747 ;; *************** function _button_asterisk *****************
  2748 ;; Defined at:
  2749 ;;		line 299 in file "main.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;		None               void
  2756 ;; Registers used:
  2757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2767 ;;Total ram usage:        0 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    5
  2770 ;; This function calls:
  2771 ;;		_lcd_putrs
  2772 ;; This function is called by:
  2773 ;;		_keyboard_control
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text13
  2778  00248C                     __ptext13:
  2779                           	opt stack 0
  2780  00248C                     _button_asterisk:
  2781                           	opt stack 24
  2782                           
  2783                           ;main.c: 300: lcd_putrs("*");
  2784                           
  2785                           ;incstack = 0
  2786  00248C  0E92               	movlw	low STR_35
  2787  00248E  6E09               	movwf	lcd_putrs@ptr,c
  2788  002490  0E0F               	movlw	high STR_35
  2789  002492  6E0A               	movwf	lcd_putrs@ptr+1,c
  2790  002494  EC11  F010         	call	_lcd_putrs	;wreg free
  2791  002498  0012               	return		;funcret
  2792  00249A                     __end_of_button_asterisk:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodl	equ	0xFF3
  2799                           intcon	equ	0xFF2
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           indf1	equ	0xFE7
  2803                           postdec1	equ	0xFE5
  2804                           fsr1h	equ	0xFE2
  2805                           fsr1l	equ	0xFE1
  2806                           indf2	equ	0xFDF
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _button_D *****************
  2812 ;; Defined at:
  2813 ;;		line 293 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    7
  2834 ;; This function calls:
  2835 ;;		_activity_home
  2836 ;; This function is called by:
  2837 ;;		_keyboard_control
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text14
  2842  0024B2                     __ptext14:
  2843                           	opt stack 0
  2844  0024B2                     _button_D:
  2845                           	opt stack 22
  2846                           
  2847                           ;main.c: 295: activity_home();
  2848                           
  2849                           ;incstack = 0
  2850  0024B2  ECAD  F011         	call	_activity_home	;wreg free
  2851  0024B6  0012               	return		;funcret
  2852  0024B8                     __end_of_button_D:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           prodl	equ	0xFF3
  2859                           intcon	equ	0xFF2
  2860                           postinc0	equ	0xFEE
  2861                           wreg	equ	0xFE8
  2862                           indf1	equ	0xFE7
  2863                           postdec1	equ	0xFE5
  2864                           fsr1h	equ	0xFE2
  2865                           fsr1l	equ	0xFE1
  2866                           indf2	equ	0xFDF
  2867                           fsr2h	equ	0xFDA
  2868                           fsr2l	equ	0xFD9
  2869                           status	equ	0xFD8
  2870                           
  2871 ;; *************** function _activity_home *****************
  2872 ;; Defined at:
  2873 ;;		line 100 in file "main.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;		None               void
  2880 ;; Registers used:
  2881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    6
  2894 ;; This function calls:
  2895 ;;		_lcd_init
  2896 ;;		_lcd_write
  2897 ;; This function is called by:
  2898 ;;		_button_D
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text15
  2904  00235A                     __ptext15:
  2905                           	opt stack 0
  2906  00235A                     _activity_home:
  2907                           	opt stack 22
  2908                           
  2909                           ;main.c: 102: activity = 0;
  2910                           
  2911                           ;incstack = 0
  2912  00235A  0E00               	movlw	0
  2913  00235C  6E28               	movwf	_activity+1,c
  2914  00235E  0E00               	movlw	0
  2915  002360  6E27               	movwf	_activity,c
  2916                           
  2917                           ;main.c: 103: lcd_init();
  2918  002362  ECBD  F00D         	call	_lcd_init	;wreg free
  2919                           
  2920                           ;main.c: 104: lcd_write(1,1,"X28");
  2921  002366  0E00               	movlw	0
  2922  002368  6E0C               	movwf	lcd_write@column+1,c
  2923  00236A  0E01               	movlw	1
  2924  00236C  6E0B               	movwf	lcd_write@column,c
  2925  00236E  0E00               	movlw	0
  2926  002370  6E0E               	movwf	lcd_write@row+1,c
  2927  002372  0E01               	movlw	1
  2928  002374  6E0D               	movwf	lcd_write@row,c
  2929  002376  0E82               	movlw	low STR_4
  2930  002378  6E0F               	movwf	lcd_write@string,c
  2931  00237A  0E0F               	movlw	high STR_4
  2932  00237C  6E10               	movwf	lcd_write@string+1,c
  2933  00237E  EC17  F012         	call	_lcd_write	;wreg free
  2934  002382  0012               	return		;funcret
  2935  002384                     __end_of_activity_home:
  2936                           	opt stack 0
  2937                           tblptru	equ	0xFF8
  2938                           tblptrh	equ	0xFF7
  2939                           tblptrl	equ	0xFF6
  2940                           tablat	equ	0xFF5
  2941                           prodl	equ	0xFF3
  2942                           intcon	equ	0xFF2
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           indf1	equ	0xFE7
  2946                           postdec1	equ	0xFE5
  2947                           fsr1h	equ	0xFE2
  2948                           fsr1l	equ	0xFE1
  2949                           indf2	equ	0xFDF
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _button_C *****************
  2955 ;; Defined at:
  2956 ;;		line 285 in file "main.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    7
  2977 ;; This function calls:
  2978 ;;		_activity_menu
  2979 ;; This function is called by:
  2980 ;;		_keyboard_control
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text16
  2985  002416                     __ptext16:
  2986                           	opt stack 0
  2987  002416                     _button_C:
  2988                           	opt stack 22
  2989                           
  2990                           ;main.c: 287: if(activity != 0 && activity != 1){
  2991                           
  2992                           ;incstack = 0
  2993  002416  5027               	movf	_activity,w,c
  2994  002418  1028               	iorwf	_activity+1,w,c
  2995  00241A  B4D8               	btfsc	status,2,c
  2996  00241C  0012               	return	
  2997  00241E  0427               	decf	_activity,w,c
  2998  002420  1028               	iorwf	_activity+1,w,c
  2999  002422  B4D8               	btfsc	status,2,c
  3000  002424  0012               	return	
  3001                           
  3002                           ;main.c: 288: activity_menu();
  3003  002426  ECFD  F00D         	call	_activity_menu	;wreg free
  3004  00242A  0012               	return	
  3005  00242C  0012               	return		;funcret
  3006  00242E                     __end_of_button_C:
  3007                           	opt stack 0
  3008                           tblptru	equ	0xFF8
  3009                           tblptrh	equ	0xFF7
  3010                           tblptrl	equ	0xFF6
  3011                           tablat	equ	0xFF5
  3012                           prodl	equ	0xFF3
  3013                           intcon	equ	0xFF2
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           indf1	equ	0xFE7
  3017                           postdec1	equ	0xFE5
  3018                           fsr1h	equ	0xFE2
  3019                           fsr1l	equ	0xFE1
  3020                           indf2	equ	0xFDF
  3021                           fsr2h	equ	0xFDA
  3022                           fsr2l	equ	0xFD9
  3023                           status	equ	0xFD8
  3024                           
  3025 ;; *************** function _activity_menu *****************
  3026 ;; Defined at:
  3027 ;;		line 118 in file "main.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;		None               void
  3034 ;; Registers used:
  3035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    6
  3048 ;; This function calls:
  3049 ;;		_lcd_init
  3050 ;;		_lcd_write
  3051 ;; This function is called by:
  3052 ;;		_pin_input_validator
  3053 ;;		_button_C
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text17
  3058  001BFA                     __ptext17:
  3059                           	opt stack 0
  3060  001BFA                     _activity_menu:
  3061                           	opt stack 21
  3062                           
  3063                           ;main.c: 120: activity = 2;
  3064                           
  3065                           ;incstack = 0
  3066  001BFA  0E00               	movlw	0
  3067  001BFC  6E28               	movwf	_activity+1,c
  3068  001BFE  0E02               	movlw	2
  3069  001C00  6E27               	movwf	_activity,c
  3070                           
  3071                           ;main.c: 121: lcd_init();
  3072  001C02  ECBD  F00D         	call	_lcd_init	;wreg free
  3073                           
  3074                           ;main.c: 122: lcd_write(2,1,"Activar");
  3075  001C06  0E00               	movlw	0
  3076  001C08  6E0C               	movwf	lcd_write@column+1,c
  3077  001C0A  0E02               	movlw	2
  3078  001C0C  6E0B               	movwf	lcd_write@column,c
  3079  001C0E  0E00               	movlw	0
  3080  001C10  6E0E               	movwf	lcd_write@row+1,c
  3081  001C12  0E01               	movlw	1
  3082  001C14  6E0D               	movwf	lcd_write@row,c
  3083  001C16  0E4D               	movlw	low STR_7
  3084  001C18  6E0F               	movwf	lcd_write@string,c
  3085  001C1A  0E0F               	movlw	high STR_7
  3086  001C1C  6E10               	movwf	lcd_write@string+1,c
  3087  001C1E  EC17  F012         	call	_lcd_write	;wreg free
  3088                           
  3089                           ;main.c: 123: lcd_write(2,2,"Reloj");
  3090  001C22  0E00               	movlw	0
  3091  001C24  6E0C               	movwf	lcd_write@column+1,c
  3092  001C26  0E02               	movlw	2
  3093  001C28  6E0B               	movwf	lcd_write@column,c
  3094  001C2A  0E00               	movlw	0
  3095  001C2C  6E0E               	movwf	lcd_write@row+1,c
  3096  001C2E  0E02               	movlw	2
  3097  001C30  6E0D               	movwf	lcd_write@row,c
  3098  001C32  0E62               	movlw	low STR_8
  3099  001C34  6E0F               	movwf	lcd_write@string,c
  3100  001C36  0E0F               	movlw	high STR_8
  3101  001C38  6E10               	movwf	lcd_write@string+1,c
  3102  001C3A  EC17  F012         	call	_lcd_write	;wreg free
  3103                           
  3104                           ;main.c: 124: lcd_write(10,1,"Pin");
  3105  001C3E  0E00               	movlw	0
  3106  001C40  6E0C               	movwf	lcd_write@column+1,c
  3107  001C42  0E0A               	movlw	10
  3108  001C44  6E0B               	movwf	lcd_write@column,c
  3109  001C46  0E00               	movlw	0
  3110  001C48  6E0E               	movwf	lcd_write@row+1,c
  3111  001C4A  0E01               	movlw	1
  3112  001C4C  6E0D               	movwf	lcd_write@row,c
  3113  001C4E  0E86               	movlw	low STR_9
  3114  001C50  6E0F               	movwf	lcd_write@string,c
  3115  001C52  0E0F               	movlw	high STR_9
  3116  001C54  6E10               	movwf	lcd_write@string+1,c
  3117  001C56  EC17  F012         	call	_lcd_write	;wreg free
  3118                           
  3119                           ;main.c: 125: lcd_write(10,2,"Alarma");
  3120  001C5A  0E00               	movlw	0
  3121  001C5C  6E0C               	movwf	lcd_write@column+1,c
  3122  001C5E  0E0A               	movlw	10
  3123  001C60  6E0B               	movwf	lcd_write@column,c
  3124  001C62  0E00               	movlw	0
  3125  001C64  6E0E               	movwf	lcd_write@row+1,c
  3126  001C66  0E02               	movlw	2
  3127  001C68  6E0D               	movwf	lcd_write@row,c
  3128  001C6A  0E55               	movlw	low STR_10
  3129  001C6C  6E0F               	movwf	lcd_write@string,c
  3130  001C6E  0E0F               	movlw	high STR_10
  3131  001C70  6E10               	movwf	lcd_write@string+1,c
  3132  001C72  EC17  F012         	call	_lcd_write	;wreg free
  3133  001C76  0012               	return		;funcret
  3134  001C78                     __end_of_activity_menu:
  3135                           	opt stack 0
  3136                           tblptru	equ	0xFF8
  3137                           tblptrh	equ	0xFF7
  3138                           tblptrl	equ	0xFF6
  3139                           tablat	equ	0xFF5
  3140                           prodl	equ	0xFF3
  3141                           intcon	equ	0xFF2
  3142                           postinc0	equ	0xFEE
  3143                           wreg	equ	0xFE8
  3144                           indf1	equ	0xFE7
  3145                           postdec1	equ	0xFE5
  3146                           fsr1h	equ	0xFE2
  3147                           fsr1l	equ	0xFE1
  3148                           indf2	equ	0xFDF
  3149                           fsr2h	equ	0xFDA
  3150                           fsr2l	equ	0xFD9
  3151                           status	equ	0xFD8
  3152                           
  3153 ;; *************** function _button_B *****************
  3154 ;; Defined at:
  3155 ;;		line 258 in file "main.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;		None               void
  3162 ;; Registers used:
  3163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    7
  3176 ;; This function calls:
  3177 ;;		_activity_submenu_activation
  3178 ;;		_activity_submenu_alarm
  3179 ;;		_activity_submenu_clock
  3180 ;;		_activity_submenu_pin
  3181 ;; This function is called by:
  3182 ;;		_keyboard_control
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text18
  3187  002076                     __ptext18:
  3188                           	opt stack 0
  3189  002076                     _button_B:
  3190                           	opt stack 22
  3191                           
  3192                           ;main.c: 260: if(activity == 2){
  3193                           
  3194                           ;incstack = 0
  3195  002076  0E02               	movlw	2
  3196  002078  1827               	xorwf	_activity,w,c
  3197  00207A  1028               	iorwf	_activity+1,w,c
  3198  00207C  A4D8               	btfss	status,2,c
  3199  00207E  0012               	return	
  3200                           
  3201                           ;main.c: 262: switch(menu_selected){
  3202  002080  D00C               	goto	l2932
  3203  002082                     l2922:
  3204                           
  3205                           ;main.c: 265: activity_submenu_activation();
  3206  002082  ECB2  F00F         	call	_activity_submenu_activation	;wreg free
  3207                           
  3208                           ;main.c: 266: break;
  3209  002086  0012               	return	
  3210  002088                     l2924:
  3211                           
  3212                           ;main.c: 269: activity_submenu_clock();
  3213  002088  EC50  F00F         	call	_activity_submenu_clock	;wreg free
  3214                           
  3215                           ;main.c: 270: break;
  3216  00208C  0012               	return	
  3217  00208E                     l2926:
  3218                           
  3219                           ;main.c: 273: activity_submenu_pin();
  3220  00208E  EC1F  F00F         	call	_activity_submenu_pin	;wreg free
  3221                           
  3222                           ;main.c: 274: break;
  3223  002092  0012               	return	
  3224  002094                     l2928:
  3225                           
  3226                           ;main.c: 277: activity_submenu_alarm();
  3227  002094  EC81  F00F         	call	_activity_submenu_alarm	;wreg free
  3228                           
  3229                           ;main.c: 279: }
  3230                           
  3231                           ;main.c: 278: break;
  3232  002098  0012               	return	
  3233  00209A                     l2932:
  3234  00209A  C033  F011         	movff	_menu_selected,??_button_B
  3235  00209E  C034  F012         	movff	_menu_selected+1,??_button_B+1
  3236                           
  3237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3238                           ; Switch size 1, requested type "space"
  3239                           ; Number of cases is 1, Range of values is 0 to 0
  3240                           ; switch strategies available:
  3241                           ; Name         Instructions Cycles
  3242                           ; simple_byte            4     3 (average)
  3243                           ;	Chosen strategy is simple_byte
  3244  0020A2  5012               	movf	??_button_B+1,w,c
  3245  0020A4  0A00               	xorlw	0	; case 0
  3246  0020A6  A4D8               	btfss	status,2,c
  3247  0020A8  0012               	return	
  3248                           
  3249                           ; Switch size 1, requested type "space"
  3250                           ; Number of cases is 4, Range of values is 1 to 4
  3251                           ; switch strategies available:
  3252                           ; Name         Instructions Cycles
  3253                           ; simple_byte           13     7 (average)
  3254                           ;	Chosen strategy is simple_byte
  3255  0020AA  5011               	movf	??_button_B,w,c
  3256  0020AC  0A01               	xorlw	1	; case 1
  3257  0020AE  B4D8               	btfsc	status,2,c
  3258  0020B0  D7E8               	goto	l2922
  3259  0020B2  0A03               	xorlw	3	; case 2
  3260  0020B4  B4D8               	btfsc	status,2,c
  3261  0020B6  D7E8               	goto	l2924
  3262  0020B8  0A01               	xorlw	1	; case 3
  3263  0020BA  B4D8               	btfsc	status,2,c
  3264  0020BC  D7E8               	goto	l2926
  3265  0020BE  0A07               	xorlw	7	; case 4
  3266  0020C0  B4D8               	btfsc	status,2,c
  3267  0020C2  D7E8               	goto	l2928
  3268  0020C4  0012               	return	
  3269  0020C6  0012               	return		;funcret
  3270  0020C8                     __end_of_button_B:
  3271                           	opt stack 0
  3272                           tblptru	equ	0xFF8
  3273                           tblptrh	equ	0xFF7
  3274                           tblptrl	equ	0xFF6
  3275                           tablat	equ	0xFF5
  3276                           prodl	equ	0xFF3
  3277                           intcon	equ	0xFF2
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           indf1	equ	0xFE7
  3281                           postdec1	equ	0xFE5
  3282                           fsr1h	equ	0xFE2
  3283                           fsr1l	equ	0xFE1
  3284                           indf2	equ	0xFDF
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _activity_submenu_pin *****************
  3290 ;; Defined at:
  3291 ;;		line 204 in file "main.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    6
  3312 ;; This function calls:
  3313 ;;		_lcd_init
  3314 ;;		_lcd_write
  3315 ;; This function is called by:
  3316 ;;		_button_B
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text19
  3321  001E3E                     __ptext19:
  3322                           	opt stack 0
  3323  001E3E                     _activity_submenu_pin:
  3324                           	opt stack 22
  3325                           
  3326                           ;main.c: 206: activity = 5;
  3327                           
  3328                           ;incstack = 0
  3329  001E3E  0E00               	movlw	0
  3330  001E40  6E28               	movwf	_activity+1,c
  3331  001E42  0E05               	movlw	5
  3332  001E44  6E27               	movwf	_activity,c
  3333                           
  3334                           ;main.c: 207: lcd_init();
  3335  001E46  ECBD  F00D         	call	_lcd_init	;wreg free
  3336                           
  3337                           ;main.c: 208: lcd_write(1,1,"Pin");
  3338  001E4A  0E00               	movlw	0
  3339  001E4C  6E0C               	movwf	lcd_write@column+1,c
  3340  001E4E  0E01               	movlw	1
  3341  001E50  6E0B               	movwf	lcd_write@column,c
  3342  001E52  0E00               	movlw	0
  3343  001E54  6E0E               	movwf	lcd_write@row+1,c
  3344  001E56  0E01               	movlw	1
  3345  001E58  6E0D               	movwf	lcd_write@row,c
  3346  001E5A  0E86               	movlw	low STR_9
  3347  001E5C  6E0F               	movwf	lcd_write@string,c
  3348  001E5E  0E0F               	movlw	high STR_9
  3349  001E60  6E10               	movwf	lcd_write@string+1,c
  3350  001E62  EC17  F012         	call	_lcd_write	;wreg free
  3351                           
  3352                           ;main.c: 209: lcd_write(10,1,"Cambiar");
  3353  001E66  0E00               	movlw	0
  3354  001E68  6E0C               	movwf	lcd_write@column+1,c
  3355  001E6A  0E0A               	movlw	10
  3356  001E6C  6E0B               	movwf	lcd_write@column,c
  3357  001E6E  0E00               	movlw	0
  3358  001E70  6E0E               	movwf	lcd_write@row+1,c
  3359  001E72  0E01               	movlw	1
  3360  001E74  6E0D               	movwf	lcd_write@row,c
  3361  001E76  0E45               	movlw	low STR_30
  3362  001E78  6E0F               	movwf	lcd_write@string,c
  3363  001E7A  0E0F               	movlw	high STR_30
  3364  001E7C  6E10               	movwf	lcd_write@string+1,c
  3365  001E7E  EC17  F012         	call	_lcd_write	;wreg free
  3366                           
  3367                           ;main.c: 210: lcd_write(10,2,"Reset");
  3368  001E82  0E00               	movlw	0
  3369  001E84  6E0C               	movwf	lcd_write@column+1,c
  3370  001E86  0E0A               	movlw	10
  3371  001E88  6E0B               	movwf	lcd_write@column,c
  3372  001E8A  0E00               	movlw	0
  3373  001E8C  6E0E               	movwf	lcd_write@row+1,c
  3374  001E8E  0E02               	movlw	2
  3375  001E90  6E0D               	movwf	lcd_write@row,c
  3376  001E92  0E68               	movlw	low STR_31
  3377  001E94  6E0F               	movwf	lcd_write@string,c
  3378  001E96  0E0F               	movlw	high STR_31
  3379  001E98  6E10               	movwf	lcd_write@string+1,c
  3380  001E9A  EC17  F012         	call	_lcd_write	;wreg free
  3381  001E9E  0012               	return		;funcret
  3382  001EA0                     __end_of_activity_submenu_pin:
  3383                           	opt stack 0
  3384                           tblptru	equ	0xFF8
  3385                           tblptrh	equ	0xFF7
  3386                           tblptrl	equ	0xFF6
  3387                           tablat	equ	0xFF5
  3388                           prodl	equ	0xFF3
  3389                           intcon	equ	0xFF2
  3390                           postinc0	equ	0xFEE
  3391                           wreg	equ	0xFE8
  3392                           indf1	equ	0xFE7
  3393                           postdec1	equ	0xFE5
  3394                           fsr1h	equ	0xFE2
  3395                           fsr1l	equ	0xFE1
  3396                           indf2	equ	0xFDF
  3397                           fsr2h	equ	0xFDA
  3398                           fsr2l	equ	0xFD9
  3399                           status	equ	0xFD8
  3400                           
  3401 ;; *************** function _activity_submenu_clock *****************
  3402 ;; Defined at:
  3403 ;;		line 194 in file "main.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;		None               void
  3410 ;; Registers used:
  3411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    6
  3424 ;; This function calls:
  3425 ;;		_lcd_init
  3426 ;;		_lcd_write
  3427 ;; This function is called by:
  3428 ;;		_button_B
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text20
  3433  001EA0                     __ptext20:
  3434                           	opt stack 0
  3435  001EA0                     _activity_submenu_clock:
  3436                           	opt stack 22
  3437                           
  3438                           ;main.c: 196: activity = 3;
  3439                           
  3440                           ;incstack = 0
  3441  001EA0  0E00               	movlw	0
  3442  001EA2  6E28               	movwf	_activity+1,c
  3443  001EA4  0E03               	movlw	3
  3444  001EA6  6E27               	movwf	_activity,c
  3445                           
  3446                           ;main.c: 197: lcd_init();
  3447  001EA8  ECBD  F00D         	call	_lcd_init	;wreg free
  3448                           
  3449                           ;main.c: 198: lcd_write(1,1,"Reloj");
  3450  001EAC  0E00               	movlw	0
  3451  001EAE  6E0C               	movwf	lcd_write@column+1,c
  3452  001EB0  0E01               	movlw	1
  3453  001EB2  6E0B               	movwf	lcd_write@column,c
  3454  001EB4  0E00               	movlw	0
  3455  001EB6  6E0E               	movwf	lcd_write@row+1,c
  3456  001EB8  0E01               	movlw	1
  3457  001EBA  6E0D               	movwf	lcd_write@row,c
  3458  001EBC  0E62               	movlw	low STR_8
  3459  001EBE  6E0F               	movwf	lcd_write@string,c
  3460  001EC0  0E0F               	movlw	high STR_8
  3461  001EC2  6E10               	movwf	lcd_write@string+1,c
  3462  001EC4  EC17  F012         	call	_lcd_write	;wreg free
  3463                           
  3464                           ;main.c: 199: lcd_write(10,1,"Fecha");
  3465  001EC8  0E00               	movlw	0
  3466  001ECA  6E0C               	movwf	lcd_write@column+1,c
  3467  001ECC  0E0A               	movlw	10
  3468  001ECE  6E0B               	movwf	lcd_write@column,c
  3469  001ED0  0E00               	movlw	0
  3470  001ED2  6E0E               	movwf	lcd_write@row+1,c
  3471  001ED4  0E01               	movlw	1
  3472  001ED6  6E0D               	movwf	lcd_write@row,c
  3473  001ED8  0E5C               	movlw	low STR_27
  3474  001EDA  6E0F               	movwf	lcd_write@string,c
  3475  001EDC  0E0F               	movlw	high STR_27
  3476  001EDE  6E10               	movwf	lcd_write@string+1,c
  3477  001EE0  EC17  F012         	call	_lcd_write	;wreg free
  3478                           
  3479                           ;main.c: 200: lcd_write(10,2,"Hora");
  3480  001EE4  0E00               	movlw	0
  3481  001EE6  6E0C               	movwf	lcd_write@column+1,c
  3482  001EE8  0E0A               	movlw	10
  3483  001EEA  6E0B               	movwf	lcd_write@column,c
  3484  001EEC  0E00               	movlw	0
  3485  001EEE  6E0E               	movwf	lcd_write@row+1,c
  3486  001EF0  0E02               	movlw	2
  3487  001EF2  6E0D               	movwf	lcd_write@row,c
  3488  001EF4  0E73               	movlw	low STR_28
  3489  001EF6  6E0F               	movwf	lcd_write@string,c
  3490  001EF8  0E0F               	movlw	high STR_28
  3491  001EFA  6E10               	movwf	lcd_write@string+1,c
  3492  001EFC  EC17  F012         	call	_lcd_write	;wreg free
  3493  001F00  0012               	return		;funcret
  3494  001F02                     __end_of_activity_submenu_clock:
  3495                           	opt stack 0
  3496                           tblptru	equ	0xFF8
  3497                           tblptrh	equ	0xFF7
  3498                           tblptrl	equ	0xFF6
  3499                           tablat	equ	0xFF5
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           indf1	equ	0xFE7
  3505                           postdec1	equ	0xFE5
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           indf2	equ	0xFDF
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function _activity_submenu_alarm *****************
  3514 ;; Defined at:
  3515 ;;		line 214 in file "main.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;		None               void
  3522 ;; Registers used:
  3523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    6
  3536 ;; This function calls:
  3537 ;;		_lcd_init
  3538 ;;		_lcd_write
  3539 ;; This function is called by:
  3540 ;;		_button_B
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text21
  3545  001F02                     __ptext21:
  3546                           	opt stack 0
  3547  001F02                     _activity_submenu_alarm:
  3548                           	opt stack 22
  3549                           
  3550                           ;main.c: 216: activity = 6;
  3551                           
  3552                           ;incstack = 0
  3553  001F02  0E00               	movlw	0
  3554  001F04  6E28               	movwf	_activity+1,c
  3555  001F06  0E06               	movlw	6
  3556  001F08  6E27               	movwf	_activity,c
  3557                           
  3558                           ;main.c: 217: lcd_init();
  3559  001F0A  ECBD  F00D         	call	_lcd_init	;wreg free
  3560                           
  3561                           ;main.c: 218: lcd_write(1,1,"Alarma");
  3562  001F0E  0E00               	movlw	0
  3563  001F10  6E0C               	movwf	lcd_write@column+1,c
  3564  001F12  0E01               	movlw	1
  3565  001F14  6E0B               	movwf	lcd_write@column,c
  3566  001F16  0E00               	movlw	0
  3567  001F18  6E0E               	movwf	lcd_write@row+1,c
  3568  001F1A  0E01               	movlw	1
  3569  001F1C  6E0D               	movwf	lcd_write@row,c
  3570  001F1E  0E55               	movlw	low STR_10
  3571  001F20  6E0F               	movwf	lcd_write@string,c
  3572  001F22  0E0F               	movlw	high STR_10
  3573  001F24  6E10               	movwf	lcd_write@string+1,c
  3574  001F26  EC17  F012         	call	_lcd_write	;wreg free
  3575                           
  3576                           ;main.c: 219: lcd_write(10,1,"Volumen");
  3577  001F2A  0E00               	movlw	0
  3578  001F2C  6E0C               	movwf	lcd_write@column+1,c
  3579  001F2E  0E0A               	movlw	10
  3580  001F30  6E0B               	movwf	lcd_write@column,c
  3581  001F32  0E00               	movlw	0
  3582  001F34  6E0E               	movwf	lcd_write@row+1,c
  3583  001F36  0E01               	movlw	1
  3584  001F38  6E0D               	movwf	lcd_write@row,c
  3585  001F3A  0E3D               	movlw	low STR_33
  3586  001F3C  6E0F               	movwf	lcd_write@string,c
  3587  001F3E  0E0F               	movlw	high STR_33
  3588  001F40  6E10               	movwf	lcd_write@string+1,c
  3589  001F42  EC17  F012         	call	_lcd_write	;wreg free
  3590                           
  3591                           ;main.c: 220: lcd_write(10,2,"Tono");
  3592  001F46  0E00               	movlw	0
  3593  001F48  6E0C               	movwf	lcd_write@column+1,c
  3594  001F4A  0E0A               	movlw	10
  3595  001F4C  6E0B               	movwf	lcd_write@column,c
  3596  001F4E  0E00               	movlw	0
  3597  001F50  6E0E               	movwf	lcd_write@row+1,c
  3598  001F52  0E02               	movlw	2
  3599  001F54  6E0D               	movwf	lcd_write@row,c
  3600  001F56  0E78               	movlw	low STR_34
  3601  001F58  6E0F               	movwf	lcd_write@string,c
  3602  001F5A  0E0F               	movlw	high STR_34
  3603  001F5C  6E10               	movwf	lcd_write@string+1,c
  3604  001F5E  EC17  F012         	call	_lcd_write	;wreg free
  3605  001F62  0012               	return		;funcret
  3606  001F64                     __end_of_activity_submenu_alarm:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           indf1	equ	0xFE7
  3617                           postdec1	equ	0xFE5
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           indf2	equ	0xFDF
  3621                           fsr2h	equ	0xFDA
  3622                           fsr2l	equ	0xFD9
  3623                           status	equ	0xFD8
  3624                           
  3625 ;; *************** function _activity_submenu_activation *****************
  3626 ;; Defined at:
  3627 ;;		line 184 in file "main.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;		None               void
  3634 ;; Registers used:
  3635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    6
  3648 ;; This function calls:
  3649 ;;		_lcd_init
  3650 ;;		_lcd_write
  3651 ;; This function is called by:
  3652 ;;		_button_B
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text22
  3657  001F64                     __ptext22:
  3658                           	opt stack 0
  3659  001F64                     _activity_submenu_activation:
  3660                           	opt stack 22
  3661                           
  3662                           ;main.c: 186: activity = 4;
  3663                           
  3664                           ;incstack = 0
  3665  001F64  0E00               	movlw	0
  3666  001F66  6E28               	movwf	_activity+1,c
  3667  001F68  0E04               	movlw	4
  3668  001F6A  6E27               	movwf	_activity,c
  3669                           
  3670                           ;main.c: 187: lcd_init();
  3671  001F6C  ECBD  F00D         	call	_lcd_init	;wreg free
  3672                           
  3673                           ;main.c: 188: lcd_write(1,1,"Activar");
  3674  001F70  0E00               	movlw	0
  3675  001F72  6E0C               	movwf	lcd_write@column+1,c
  3676  001F74  0E01               	movlw	1
  3677  001F76  6E0B               	movwf	lcd_write@column,c
  3678  001F78  0E00               	movlw	0
  3679  001F7A  6E0E               	movwf	lcd_write@row+1,c
  3680  001F7C  0E01               	movlw	1
  3681  001F7E  6E0D               	movwf	lcd_write@row,c
  3682  001F80  0E4D               	movlw	low STR_7
  3683  001F82  6E0F               	movwf	lcd_write@string,c
  3684  001F84  0E0F               	movlw	high STR_7
  3685  001F86  6E10               	movwf	lcd_write@string+1,c
  3686  001F88  EC17  F012         	call	_lcd_write	;wreg free
  3687                           
  3688                           ;main.c: 189: lcd_write(10,1,"SI");
  3689  001F8C  0E00               	movlw	0
  3690  001F8E  6E0C               	movwf	lcd_write@column+1,c
  3691  001F90  0E0A               	movlw	10
  3692  001F92  6E0B               	movwf	lcd_write@column,c
  3693  001F94  0E00               	movlw	0
  3694  001F96  6E0E               	movwf	lcd_write@row+1,c
  3695  001F98  0E01               	movlw	1
  3696  001F9A  6E0D               	movwf	lcd_write@row,c
  3697  001F9C  0E8A               	movlw	low STR_24
  3698  001F9E  6E0F               	movwf	lcd_write@string,c
  3699  001FA0  0E0F               	movlw	high STR_24
  3700  001FA2  6E10               	movwf	lcd_write@string+1,c
  3701  001FA4  EC17  F012         	call	_lcd_write	;wreg free
  3702                           
  3703                           ;main.c: 190: lcd_write(10,2,"NO");
  3704  001FA8  0E00               	movlw	0
  3705  001FAA  6E0C               	movwf	lcd_write@column+1,c
  3706  001FAC  0E0A               	movlw	10
  3707  001FAE  6E0B               	movwf	lcd_write@column,c
  3708  001FB0  0E00               	movlw	0
  3709  001FB2  6E0E               	movwf	lcd_write@row+1,c
  3710  001FB4  0E02               	movlw	2
  3711  001FB6  6E0D               	movwf	lcd_write@row,c
  3712  001FB8  0E8D               	movlw	low STR_25
  3713  001FBA  6E0F               	movwf	lcd_write@string,c
  3714  001FBC  0E0F               	movlw	high STR_25
  3715  001FBE  6E10               	movwf	lcd_write@string+1,c
  3716  001FC0  EC17  F012         	call	_lcd_write	;wreg free
  3717  001FC4  0012               	return		;funcret
  3718  001FC6                     __end_of_activity_submenu_activation:
  3719                           	opt stack 0
  3720                           tblptru	equ	0xFF8
  3721                           tblptrh	equ	0xFF7
  3722                           tblptrl	equ	0xFF6
  3723                           tablat	equ	0xFF5
  3724                           prodl	equ	0xFF3
  3725                           intcon	equ	0xFF2
  3726                           postinc0	equ	0xFEE
  3727                           wreg	equ	0xFE8
  3728                           indf1	equ	0xFE7
  3729                           postdec1	equ	0xFE5
  3730                           fsr1h	equ	0xFE2
  3731                           fsr1l	equ	0xFE1
  3732                           indf2	equ	0xFDF
  3733                           fsr2h	equ	0xFDA
  3734                           fsr2l	equ	0xFD9
  3735                           status	equ	0xFD8
  3736                           
  3737 ;; *************** function _button_A *****************
  3738 ;; Defined at:
  3739 ;;		line 236 in file "main.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;		None               void
  3746 ;; Registers used:
  3747 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;Total ram usage:        2 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    7
  3760 ;; This function calls:
  3761 ;;		_action_menu_selector
  3762 ;;		_action_submenu_selector
  3763 ;;		_activity_pin
  3764 ;; This function is called by:
  3765 ;;		_keyboard_control
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text23
  3770  002288                     __ptext23:
  3771                           	opt stack 0
  3772  002288                     _button_A:
  3773                           	opt stack 22
  3774                           
  3775                           ;main.c: 238: switch(activity){
  3776                           
  3777                           ;incstack = 0
  3778  002288  D009               	goto	l2912
  3779  00228A                     l2904:
  3780                           
  3781                           ;main.c: 241: activity_pin();
  3782  00228A  EC8B  F010         	call	_activity_pin	;wreg free
  3783                           
  3784                           ;main.c: 245: break;
  3785                           
  3786                           ;main.c: 244: case 1:
  3787                           
  3788                           ;main.c: 242: break;
  3789  00228E  0012               	return	
  3790  002290                     l2906:
  3791                           
  3792                           ;main.c: 248: action_menu_selector();
  3793  002290  ECFE  F008         	call	_action_menu_selector	;wreg free
  3794                           
  3795                           ;main.c: 249: break;
  3796  002294  0012               	return	
  3797  002296                     l2908:
  3798                           
  3799                           ;main.c: 252: action_submenu_selector();
  3800  002296  EC8E  F00C         	call	_action_submenu_selector	;wreg free
  3801                           
  3802                           ;main.c: 254: }
  3803                           
  3804                           ;main.c: 253: break;
  3805  00229A  0012               	return	
  3806  00229C                     l2912:
  3807  00229C  C027  F013         	movff	_activity,??_button_A
  3808  0022A0  C028  F014         	movff	_activity+1,??_button_A+1
  3809                           
  3810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3811                           ; Switch size 1, requested type "space"
  3812                           ; Number of cases is 1, Range of values is 0 to 0
  3813                           ; switch strategies available:
  3814                           ; Name         Instructions Cycles
  3815                           ; simple_byte            4     3 (average)
  3816                           ;	Chosen strategy is simple_byte
  3817  0022A4  5014               	movf	??_button_A+1,w,c
  3818  0022A6  0A00               	xorlw	0	; case 0
  3819  0022A8  A4D8               	btfss	status,2,c
  3820  0022AA  D7F5               	goto	l2908
  3821                           
  3822                           ; Switch size 1, requested type "space"
  3823                           ; Number of cases is 3, Range of values is 0 to 2
  3824                           ; switch strategies available:
  3825                           ; Name         Instructions Cycles
  3826                           ; simple_byte           10     6 (average)
  3827                           ;	Chosen strategy is simple_byte
  3828  0022AC  5013               	movf	??_button_A,w,c
  3829  0022AE  0A00               	xorlw	0	; case 0
  3830  0022B0  B4D8               	btfsc	status,2,c
  3831  0022B2  D7EB               	goto	l2904
  3832  0022B4  0A01               	xorlw	1	; case 1
  3833  0022B6  B4D8               	btfsc	status,2,c
  3834  0022B8  0012               	return	
  3835  0022BA  0A03               	xorlw	3	; case 2
  3836  0022BC  B4D8               	btfsc	status,2,c
  3837  0022BE  D7E8               	goto	l2906
  3838  0022C0  D7EA               	goto	l2908
  3839  0022C2  0012               	return		;funcret
  3840  0022C4                     __end_of_button_A:
  3841                           	opt stack 0
  3842                           tblptru	equ	0xFF8
  3843                           tblptrh	equ	0xFF7
  3844                           tblptrl	equ	0xFF6
  3845                           tablat	equ	0xFF5
  3846                           prodl	equ	0xFF3
  3847                           intcon	equ	0xFF2
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           indf1	equ	0xFE7
  3851                           postdec1	equ	0xFE5
  3852                           fsr1h	equ	0xFE2
  3853                           fsr1l	equ	0xFE1
  3854                           indf2	equ	0xFDF
  3855                           fsr2h	equ	0xFDA
  3856                           fsr2l	equ	0xFD9
  3857                           status	equ	0xFD8
  3858                           
  3859 ;; *************** function _activity_pin *****************
  3860 ;; Defined at:
  3861 ;;		line 108 in file "main.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;		None               void
  3868 ;; Registers used:
  3869 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;Total ram usage:        0 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    6
  3882 ;; This function calls:
  3883 ;;		_lcd_comand
  3884 ;;		_lcd_gotoxy
  3885 ;;		_lcd_init
  3886 ;;		_lcd_write
  3887 ;;		_strcpy
  3888 ;; This function is called by:
  3889 ;;		_pin_input_validator
  3890 ;;		_button_A
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text24
  3895  002116                     __ptext24:
  3896                           	opt stack 0
  3897  002116                     _activity_pin:
  3898                           	opt stack 21
  3899                           
  3900                           ;main.c: 110: activity = 1;
  3901                           
  3902                           ;incstack = 0
  3903  002116  0E00               	movlw	0
  3904  002118  6E28               	movwf	_activity+1,c
  3905  00211A  0E01               	movlw	1
  3906  00211C  6E27               	movwf	_activity,c
  3907                           
  3908                           ;main.c: 111: strcpy(pin_input, "");
  3909  00211E  0E95               	movlw	low _pin_input
  3910  002120  6E01               	movwf	strcpy@to,c
  3911  002122  0E00               	movlw	high _pin_input
  3912  002124  6E02               	movwf	strcpy@to+1,c
  3913  002126  0E91               	movlw	low (STR_12+1)
  3914  002128  6E03               	movwf	strcpy@from,c
  3915  00212A  0E0F               	movlw	high (STR_12+1)
  3916  00212C  6E04               	movwf	strcpy@from+1,c
  3917  00212E  EC7B  F011         	call	_strcpy	;wreg free
  3918                           
  3919                           ;main.c: 112: lcd_init();
  3920  002132  ECBD  F00D         	call	_lcd_init	;wreg free
  3921                           
  3922                           ;main.c: 113: lcd_write(1,1,"Ingrese su PIN:");
  3923  002136  0E00               	movlw	0
  3924  002138  6E0C               	movwf	lcd_write@column+1,c
  3925  00213A  0E01               	movlw	1
  3926  00213C  6E0B               	movwf	lcd_write@column,c
  3927  00213E  0E00               	movlw	0
  3928  002140  6E0E               	movwf	lcd_write@row+1,c
  3929  002142  0E01               	movlw	1
  3930  002144  6E0D               	movwf	lcd_write@row,c
  3931  002146  0E0F               	movlw	low STR_6
  3932  002148  6E0F               	movwf	lcd_write@string,c
  3933  00214A  0E0F               	movlw	high STR_6
  3934  00214C  6E10               	movwf	lcd_write@string+1,c
  3935  00214E  EC17  F012         	call	_lcd_write	;wreg free
  3936                           
  3937                           ;main.c: 114: lcd_gotoxy(1,2);
  3938  002152  0E02               	movlw	2
  3939  002154  6E05               	movwf	lcd_gotoxy@y,c
  3940  002156  0E01               	movlw	1
  3941  002158  ECE8  F011         	call	_lcd_gotoxy
  3942                           
  3943                           ;main.c: 115: lcd_comand(0b00001111);
  3944  00215C  0E0F               	movlw	15
  3945  00215E  EC4D  F012         	call	_lcd_comand
  3946  002162  0012               	return		;funcret
  3947  002164                     __end_of_activity_pin:
  3948                           	opt stack 0
  3949                           tblptru	equ	0xFF8
  3950                           tblptrh	equ	0xFF7
  3951                           tblptrl	equ	0xFF6
  3952                           tablat	equ	0xFF5
  3953                           prodl	equ	0xFF3
  3954                           intcon	equ	0xFF2
  3955                           postinc0	equ	0xFEE
  3956                           wreg	equ	0xFE8
  3957                           indf1	equ	0xFE7
  3958                           postdec1	equ	0xFE5
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           indf2	equ	0xFDF
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8
  3965                           
  3966 ;; *************** function _strcpy *****************
  3967 ;; Defined at:
  3968 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  to              2    0[COMRAM] PTR unsigned char 
  3971 ;;		 -> pin_input(5), pin(5), 
  3972 ;;  from            2    2[COMRAM] PTR const unsigned char 
  3973 ;;		 -> STR_5(1), STR_1(5), 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  cp              2    4[COMRAM] PTR unsigned char 
  3976 ;;		 -> pin_input(5), pin(5), 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  2    0[COMRAM] PTR unsigned char 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;Total ram usage:        6 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_setup
  3996 ;;		_activity_pin
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text25
  4001  0022F6                     __ptext25:
  4002                           	opt stack 0
  4003  0022F6                     _strcpy:
  4004                           	opt stack 29
  4005                           
  4006                           ;incstack = 0
  4007  0022F6  C001  F005         	movff	strcpy@to,strcpy@cp
  4008  0022FA  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  4009  0022FE  D005               	goto	l2302
  4010  002300                     l2300:
  4011  002300  4A05               	infsnz	strcpy@cp,f,c
  4012  002302  2A06               	incf	strcpy@cp+1,f,c
  4013  002304  4A03               	infsnz	strcpy@from,f,c
  4014  002306  2A04               	incf	strcpy@from+1,f,c
  4015  002308  D000               	goto	l2302
  4016  00230A                     l2302:
  4017  00230A  C003  FFF6         	movff	strcpy@from,tblptrl
  4018  00230E  C004  FFF7         	movff	strcpy@from+1,tblptrh
  4019  002312                     	if	0	;tblptru may be non-zero
  4020  002312                     	endif
  4021  002312                     	if	0	;tblptru may be non-zero
  4022  002312                     	endif
  4023  002312  C005  FFD9         	movff	strcpy@cp,fsr2l
  4024  002316  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  4025  00231A  0008               	tblrd		*
  4026  00231C  CFF5 FFDF          	movff	tablat,indf2
  4027  002320  50DF               	movf	indf2,w,c
  4028  002322  A4D8               	btfss	status,2,c
  4029  002324  D7ED               	goto	l2300
  4030                           
  4031                           ;	Return value of _strcpy is never used
  4032  002326  0012               	return		;funcret
  4033  002328                     __end_of_strcpy:
  4034                           	opt stack 0
  4035                           tblptru	equ	0xFF8
  4036                           tblptrh	equ	0xFF7
  4037                           tblptrl	equ	0xFF6
  4038                           tablat	equ	0xFF5
  4039                           prodl	equ	0xFF3
  4040                           intcon	equ	0xFF2
  4041                           postinc0	equ	0xFEE
  4042                           wreg	equ	0xFE8
  4043                           indf1	equ	0xFE7
  4044                           postdec1	equ	0xFE5
  4045                           fsr1h	equ	0xFE2
  4046                           fsr1l	equ	0xFE1
  4047                           indf2	equ	0xFDF
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _lcd_init *****************
  4053 ;; Defined at:
  4054 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  i               1    4[COMRAM] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;		None               void
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4072 ;;Total ram usage:        1 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    2
  4075 ;; This function calls:
  4076 ;;		_Delay1KTCYx
  4077 ;;		_lcd_send_byte
  4078 ;;		_lcd_send_nibble
  4079 ;; This function is called by:
  4080 ;;		_setup
  4081 ;;		_activity_home
  4082 ;;		_activity_pin
  4083 ;;		_activity_menu
  4084 ;;		_activity_submenu_activation
  4085 ;;		_activity_submenu_clock
  4086 ;;		_activity_submenu_pin
  4087 ;;		_activity_submenu_alarm
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text26
  4092  001B7A                     __ptext26:
  4093                           	opt stack 0
  4094  001B7A                     _lcd_init:
  4095                           	opt stack 27
  4096                           
  4097                           ;unmc_lcd_216.c: 120: int8 i;
  4098                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  4099                           
  4100                           ;incstack = 0
  4101  001B7A  9693               	bcf	3987,3,c	;volatile
  4102                           
  4103                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  4104  001B7C  9493               	bcf	3987,2,c	;volatile
  4105                           
  4106                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  4107  001B7E  968A               	bcf	3978,3,c	;volatile
  4108                           
  4109                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  4110  001B80  948A               	bcf	3978,2,c	;volatile
  4111                           
  4112                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  4113  001B82  9893               	bcf	3987,4,c	;volatile
  4114                           
  4115                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  4116  001B84  9A93               	bcf	3987,5,c	;volatile
  4117                           
  4118                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  4119  001B86  9C93               	bcf	3987,6,c	;volatile
  4120                           
  4121                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  4122  001B88  9E93               	bcf	3987,7,c	;volatile
  4123                           
  4124                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  4125  001B8A  0E0A               	movlw	10
  4126  001B8C  EC2C  F012         	call	_Delay1KTCYx
  4127                           
  4128                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  4129  001B90  0E0A               	movlw	10
  4130  001B92  EC2C  F012         	call	_Delay1KTCYx
  4131                           
  4132                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  4133  001B96  0E0A               	movlw	10
  4134  001B98  EC2C  F012         	call	_Delay1KTCYx
  4135                           
  4136                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  4137  001B9C  0E00               	movlw	0
  4138  001B9E  6E05               	movwf	lcd_init@i,c
  4139  001BA0                     l2270:
  4140  001BA0  0E02               	movlw	2
  4141  001BA2  6405               	cpfsgt	lcd_init@i,c
  4142  001BA4  D001               	goto	l2274
  4143  001BA6  D008               	goto	l2280
  4144  001BA8                     l2274:
  4145                           
  4146                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  4147  001BA8  0E03               	movlw	3
  4148  001BAA  EC3C  F00E         	call	_lcd_send_nibble
  4149                           
  4150                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  4151  001BAE  0E0A               	movlw	10
  4152  001BB0  EC2C  F012         	call	_Delay1KTCYx
  4153  001BB4  2A05               	incf	lcd_init@i,f,c
  4154  001BB6  D7F4               	goto	l2270
  4155  001BB8                     l2280:
  4156                           
  4157                           ;unmc_lcd_216.c: 146: }
  4158                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  4159  001BB8  0E02               	movlw	2
  4160  001BBA  EC3C  F00E         	call	_lcd_send_nibble
  4161                           
  4162                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  4163  001BBE  0E00               	movlw	0
  4164  001BC0  6E05               	movwf	lcd_init@i,c
  4165  001BC2  0E03               	movlw	3
  4166  001BC4  6405               	cpfsgt	lcd_init@i,c
  4167  001BC6  D002               	goto	l2288
  4168  001BC8  0012               	return	
  4169  001BCA  0012               	return	
  4170  001BCC                     l2288:
  4171                           
  4172                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  4173  001BCC  5005               	movf	lcd_init@i,w,c
  4174  001BCE  0D01               	mullw	1
  4175  001BD0  0E0B               	movlw	low _LCD_INIT_STRING
  4176  001BD2  24F3               	addwf	prodl,w,c
  4177  001BD4  6EF6               	movwf	tblptrl,c
  4178  001BD6  0E0F               	movlw	high _LCD_INIT_STRING
  4179  001BD8  20F4               	addwfc	prodh,w,c
  4180  001BDA  6EF7               	movwf	tblptrh,c
  4181  001BDC                     	if	0	;There are less than 3 active tblptr bytes
  4182  001BDC                     	endif
  4183  001BDC  0008               	tblrd		*
  4184  001BDE  CFF5 F003          	movff	tablat,lcd_send_byte@n
  4185  001BE2  0E00               	movlw	0
  4186  001BE4  EC94  F011         	call	_lcd_send_byte
  4187                           
  4188                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  4189  001BE8  0E0A               	movlw	10
  4190  001BEA  EC2C  F012         	call	_Delay1KTCYx
  4191  001BEE  2A05               	incf	lcd_init@i,f,c
  4192  001BF0  0E03               	movlw	3
  4193  001BF2  6405               	cpfsgt	lcd_init@i,c
  4194  001BF4  D7EB               	goto	l2288
  4195  001BF6  0012               	return	
  4196  001BF8  0012               	return		;funcret
  4197  001BFA                     __end_of_lcd_init:
  4198                           	opt stack 0
  4199                           tblptru	equ	0xFF8
  4200                           tblptrh	equ	0xFF7
  4201                           tblptrl	equ	0xFF6
  4202                           tablat	equ	0xFF5
  4203                           prodh	equ	0xFF4
  4204                           prodl	equ	0xFF3
  4205                           intcon	equ	0xFF2
  4206                           postinc0	equ	0xFEE
  4207                           wreg	equ	0xFE8
  4208                           indf1	equ	0xFE7
  4209                           postdec1	equ	0xFE5
  4210                           fsr1h	equ	0xFE2
  4211                           fsr1l	equ	0xFE1
  4212                           indf2	equ	0xFDF
  4213                           fsr2h	equ	0xFDA
  4214                           fsr2l	equ	0xFD9
  4215                           status	equ	0xFD8
  4216                           
  4217 ;; *************** function _Delay1KTCYx *****************
  4218 ;; Defined at:
  4219 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  unit            1    wreg     unsigned char 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  unit            1    0[COMRAM] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;		None               void
  4226 ;; Registers used:
  4227 ;;		wreg
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4237 ;;Total ram usage:        1 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_lcd_init
  4243 ;;		_DelayPORXLCD
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text27
  4248  002458                     __ptext27:
  4249                           	opt stack 0
  4250  002458                     _Delay1KTCYx:
  4251                           	opt stack 28
  4252                           
  4253                           ;incstack = 0
  4254                           ;Delay1KTCYx@unit stored from wreg
  4255  002458  6E01               	movwf	Delay1KTCYx@unit,c
  4256  00245A  0EFA               	movlw	250
  4257  00245C                     u2347:
  4258  00245C  F000               	nop	
  4259  00245E  2EE8               	decfsz	wreg,f,c
  4260  002460  D7FD               	goto	u2347
  4261  002462  2E01               	decfsz	Delay1KTCYx@unit,f,c
  4262  002464  D7FA               	goto	l2248
  4263  002466  0012               	return	
  4264  002468  0012               	return		;funcret
  4265  00246A                     __end_of_Delay1KTCYx:
  4266                           	opt stack 0
  4267                           tblptru	equ	0xFF8
  4268                           tblptrh	equ	0xFF7
  4269                           tblptrl	equ	0xFF6
  4270                           tablat	equ	0xFF5
  4271                           prodh	equ	0xFF4
  4272                           prodl	equ	0xFF3
  4273                           intcon	equ	0xFF2
  4274                           postinc0	equ	0xFEE
  4275                           wreg	equ	0xFE8
  4276                           indf1	equ	0xFE7
  4277                           postdec1	equ	0xFE5
  4278                           fsr1h	equ	0xFE2
  4279                           fsr1l	equ	0xFE1
  4280                           indf2	equ	0xFDF
  4281                           fsr2h	equ	0xFDA
  4282                           fsr2l	equ	0xFD9
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function _lcd_comand *****************
  4286 ;; Defined at:
  4287 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  d               1    wreg     unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  d               1    4[COMRAM] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;		None               void
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4305 ;;Total ram usage:        1 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    2
  4308 ;; This function calls:
  4309 ;;		_lcd_send_byte
  4310 ;; This function is called by:
  4311 ;;		_setup
  4312 ;;		_activity_pin
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text28
  4317  00249A                     __ptext28:
  4318                           	opt stack 0
  4319  00249A                     _lcd_comand:
  4320                           	opt stack 27
  4321                           
  4322                           ;incstack = 0
  4323                           ;lcd_comand@d stored from wreg
  4324  00249A  6E05               	movwf	lcd_comand@d,c
  4325                           
  4326                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  4327  00249C  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  4328  0024A0  0E00               	movlw	0
  4329  0024A2  EC94  F011         	call	_lcd_send_byte
  4330  0024A6  0012               	return		;funcret
  4331  0024A8                     __end_of_lcd_comand:
  4332                           	opt stack 0
  4333                           tblptru	equ	0xFF8
  4334                           tblptrh	equ	0xFF7
  4335                           tblptrl	equ	0xFF6
  4336                           tablat	equ	0xFF5
  4337                           prodh	equ	0xFF4
  4338                           prodl	equ	0xFF3
  4339                           intcon	equ	0xFF2
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           indf1	equ	0xFE7
  4343                           postdec1	equ	0xFE5
  4344                           fsr1h	equ	0xFE2
  4345                           fsr1l	equ	0xFE1
  4346                           indf2	equ	0xFDF
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function _action_submenu_selector *****************
  4352 ;; Defined at:
  4353 ;;		line 165 in file "main.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;		None               void
  4360 ;; Registers used:
  4361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4371 ;;Total ram usage:        2 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    6
  4374 ;; This function calls:
  4375 ;;		_lcd_write
  4376 ;; This function is called by:
  4377 ;;		_button_A
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text29
  4382  00191C                     __ptext29:
  4383                           	opt stack 0
  4384  00191C                     _action_submenu_selector:
  4385                           	opt stack 22
  4386                           
  4387                           ;main.c: 167: switch(submenu_selector){
  4388                           
  4389                           ;incstack = 0
  4390  00191C  D042               	goto	l2686
  4391  00191E                     l2672:
  4392                           
  4393                           ;main.c: 170: lcd_write(9,1,">");
  4394  00191E  0E00               	movlw	0
  4395  001920  6E0C               	movwf	lcd_write@column+1,c
  4396  001922  0E09               	movlw	9
  4397  001924  6E0B               	movwf	lcd_write@column,c
  4398  001926  0E00               	movlw	0
  4399  001928  6E0E               	movwf	lcd_write@row+1,c
  4400  00192A  0E01               	movlw	1
  4401  00192C  6E0D               	movwf	lcd_write@row,c
  4402  00192E  0E94               	movlw	low STR_11
  4403  001930  6E0F               	movwf	lcd_write@string,c
  4404  001932  0E0F               	movlw	high STR_11
  4405  001934  6E10               	movwf	lcd_write@string+1,c
  4406  001936  EC17  F012         	call	_lcd_write	;wreg free
  4407                           
  4408                           ;main.c: 171: submenu_selector = 2;
  4409  00193A  0E00               	movlw	0
  4410  00193C  6E3E               	movwf	_submenu_selector+1,c
  4411  00193E  0E02               	movlw	2
  4412  001940  6E3D               	movwf	_submenu_selector,c
  4413                           
  4414                           ;main.c: 172: lcd_write(9,2," ");
  4415  001942  0E00               	movlw	0
  4416  001944  6E0C               	movwf	lcd_write@column+1,c
  4417  001946  0E09               	movlw	9
  4418  001948  6E0B               	movwf	lcd_write@column,c
  4419  00194A  0E00               	movlw	0
  4420  00194C  6E0E               	movwf	lcd_write@row+1,c
  4421  00194E  0E02               	movlw	2
  4422  001950  6E0D               	movwf	lcd_write@row,c
  4423  001952  0E90               	movlw	low STR_12
  4424  001954  6E0F               	movwf	lcd_write@string,c
  4425  001956  0E0F               	movlw	high STR_12
  4426  001958  6E10               	movwf	lcd_write@string+1,c
  4427  00195A  EC17  F012         	call	_lcd_write	;wreg free
  4428                           
  4429                           ;main.c: 173: break;
  4430  00195E  0012               	return	
  4431  001960                     l2678:
  4432                           
  4433                           ;main.c: 176: lcd_write(9,2,">");
  4434  001960  0E00               	movlw	0
  4435  001962  6E0C               	movwf	lcd_write@column+1,c
  4436  001964  0E09               	movlw	9
  4437  001966  6E0B               	movwf	lcd_write@column,c
  4438  001968  0E00               	movlw	0
  4439  00196A  6E0E               	movwf	lcd_write@row+1,c
  4440  00196C  0E02               	movlw	2
  4441  00196E  6E0D               	movwf	lcd_write@row,c
  4442  001970  0E94               	movlw	low STR_11
  4443  001972  6E0F               	movwf	lcd_write@string,c
  4444  001974  0E0F               	movlw	high STR_11
  4445  001976  6E10               	movwf	lcd_write@string+1,c
  4446  001978  EC17  F012         	call	_lcd_write	;wreg free
  4447                           
  4448                           ;main.c: 177: submenu_selector = 1;
  4449  00197C  0E00               	movlw	0
  4450  00197E  6E3E               	movwf	_submenu_selector+1,c
  4451  001980  0E01               	movlw	1
  4452  001982  6E3D               	movwf	_submenu_selector,c
  4453                           
  4454                           ;main.c: 178: lcd_write(9,1," ");
  4455  001984  0E00               	movlw	0
  4456  001986  6E0C               	movwf	lcd_write@column+1,c
  4457  001988  0E09               	movlw	9
  4458  00198A  6E0B               	movwf	lcd_write@column,c
  4459  00198C  0E00               	movlw	0
  4460  00198E  6E0E               	movwf	lcd_write@row+1,c
  4461  001990  0E01               	movlw	1
  4462  001992  6E0D               	movwf	lcd_write@row,c
  4463  001994  0E90               	movlw	low STR_12
  4464  001996  6E0F               	movwf	lcd_write@string,c
  4465  001998  0E0F               	movlw	high STR_12
  4466  00199A  6E10               	movwf	lcd_write@string+1,c
  4467  00199C  EC17  F012         	call	_lcd_write	;wreg free
  4468                           
  4469                           ;main.c: 180: }
  4470                           
  4471                           ;main.c: 179: break;
  4472  0019A0  0012               	return	
  4473  0019A2                     l2686:
  4474  0019A2  C03D  F011         	movff	_submenu_selector,??_action_submenu_selector
  4475  0019A6  C03E  F012         	movff	_submenu_selector+1,??_action_submenu_selector+1
  4476                           
  4477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4478                           ; Switch size 1, requested type "space"
  4479                           ; Number of cases is 1, Range of values is 0 to 0
  4480                           ; switch strategies available:
  4481                           ; Name         Instructions Cycles
  4482                           ; simple_byte            4     3 (average)
  4483                           ;	Chosen strategy is simple_byte
  4484  0019AA  5012               	movf	??_action_submenu_selector+1,w,c
  4485  0019AC  0A00               	xorlw	0	; case 0
  4486  0019AE  A4D8               	btfss	status,2,c
  4487  0019B0  0012               	return	
  4488                           
  4489                           ; Switch size 1, requested type "space"
  4490                           ; Number of cases is 2, Range of values is 1 to 2
  4491                           ; switch strategies available:
  4492                           ; Name         Instructions Cycles
  4493                           ; simple_byte            7     4 (average)
  4494                           ;	Chosen strategy is simple_byte
  4495  0019B2  5011               	movf	??_action_submenu_selector,w,c
  4496  0019B4  0A01               	xorlw	1	; case 1
  4497  0019B6  B4D8               	btfsc	status,2,c
  4498  0019B8  D7B2               	goto	l2672
  4499  0019BA  0A03               	xorlw	3	; case 2
  4500  0019BC  A4D8               	btfss	status,2,c
  4501  0019BE  0012               	return	
  4502  0019C0  D7CF               	goto	l2678
  4503  0019C2  0012               	return		;funcret
  4504  0019C4                     __end_of_action_submenu_selector:
  4505                           	opt stack 0
  4506                           tblptru	equ	0xFF8
  4507                           tblptrh	equ	0xFF7
  4508                           tblptrl	equ	0xFF6
  4509                           tablat	equ	0xFF5
  4510                           prodh	equ	0xFF4
  4511                           prodl	equ	0xFF3
  4512                           intcon	equ	0xFF2
  4513                           postinc0	equ	0xFEE
  4514                           wreg	equ	0xFE8
  4515                           indf1	equ	0xFE7
  4516                           postdec1	equ	0xFE5
  4517                           fsr1h	equ	0xFE2
  4518                           fsr1l	equ	0xFE1
  4519                           indf2	equ	0xFDF
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function _action_menu_selector *****************
  4525 ;; Defined at:
  4526 ;;		line 129 in file "main.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;		None               void
  4533 ;; Registers used:
  4534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;Total ram usage:        2 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    6
  4547 ;; This function calls:
  4548 ;;		_lcd_write
  4549 ;; This function is called by:
  4550 ;;		_button_A
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text30
  4555  0011FC                     __ptext30:
  4556                           	opt stack 0
  4557  0011FC                     _action_menu_selector:
  4558                           	opt stack 22
  4559                           
  4560                           ;main.c: 131: switch(menu_selector){
  4561                           
  4562                           ;incstack = 0
  4563  0011FC  D094               	goto	l2664
  4564  0011FE                     l2638:
  4565                           
  4566                           ;main.c: 134: lcd_write(1,1,">");
  4567  0011FE  0E00               	movlw	0
  4568  001200  6E0C               	movwf	lcd_write@column+1,c
  4569  001202  0E01               	movlw	1
  4570  001204  6E0B               	movwf	lcd_write@column,c
  4571  001206  0E00               	movlw	0
  4572  001208  6E0E               	movwf	lcd_write@row+1,c
  4573  00120A  0E01               	movlw	1
  4574  00120C  6E0D               	movwf	lcd_write@row,c
  4575  00120E  0E94               	movlw	low STR_11
  4576  001210  6E0F               	movwf	lcd_write@string,c
  4577  001212  0E0F               	movlw	high STR_11
  4578  001214  6E10               	movwf	lcd_write@string+1,c
  4579  001216  EC17  F012         	call	_lcd_write	;wreg free
  4580                           
  4581                           ;main.c: 135: menu_selector = 2;
  4582  00121A  0E00               	movlw	0
  4583  00121C  6E36               	movwf	_menu_selector+1,c
  4584  00121E  0E02               	movlw	2
  4585  001220  6E35               	movwf	_menu_selector,c
  4586                           
  4587                           ;main.c: 136: menu_selected = 1;
  4588  001222  0E00               	movlw	0
  4589  001224  6E34               	movwf	_menu_selected+1,c
  4590  001226  0E01               	movlw	1
  4591  001228  6E33               	movwf	_menu_selected,c
  4592                           
  4593                           ;main.c: 137: lcd_write(9,2," ");
  4594  00122A  0E00               	movlw	0
  4595  00122C  6E0C               	movwf	lcd_write@column+1,c
  4596  00122E  0E09               	movlw	9
  4597  001230  6E0B               	movwf	lcd_write@column,c
  4598  001232  0E00               	movlw	0
  4599  001234  6E0E               	movwf	lcd_write@row+1,c
  4600  001236  0E02               	movlw	2
  4601  001238  6E0D               	movwf	lcd_write@row,c
  4602  00123A  0E90               	movlw	low STR_12
  4603  00123C  6E0F               	movwf	lcd_write@string,c
  4604  00123E  0E0F               	movlw	high STR_12
  4605  001240  6E10               	movwf	lcd_write@string+1,c
  4606  001242  EC17  F012         	call	_lcd_write	;wreg free
  4607                           
  4608                           ;main.c: 138: break;
  4609  001246  0012               	return	
  4610  001248                     l2644:
  4611                           
  4612                           ;main.c: 141: lcd_write(1,2,">");
  4613  001248  0E00               	movlw	0
  4614  00124A  6E0C               	movwf	lcd_write@column+1,c
  4615  00124C  0E01               	movlw	1
  4616  00124E  6E0B               	movwf	lcd_write@column,c
  4617  001250  0E00               	movlw	0
  4618  001252  6E0E               	movwf	lcd_write@row+1,c
  4619  001254  0E02               	movlw	2
  4620  001256  6E0D               	movwf	lcd_write@row,c
  4621  001258  0E94               	movlw	low STR_11
  4622  00125A  6E0F               	movwf	lcd_write@string,c
  4623  00125C  0E0F               	movlw	high STR_11
  4624  00125E  6E10               	movwf	lcd_write@string+1,c
  4625  001260  EC17  F012         	call	_lcd_write	;wreg free
  4626                           
  4627                           ;main.c: 142: menu_selector = 3;
  4628  001264  0E00               	movlw	0
  4629  001266  6E36               	movwf	_menu_selector+1,c
  4630  001268  0E03               	movlw	3
  4631  00126A  6E35               	movwf	_menu_selector,c
  4632                           
  4633                           ;main.c: 143: menu_selected = 2;
  4634  00126C  0E00               	movlw	0
  4635  00126E  6E34               	movwf	_menu_selected+1,c
  4636  001270  0E02               	movlw	2
  4637  001272  6E33               	movwf	_menu_selected,c
  4638                           
  4639                           ;main.c: 144: lcd_write(1,1," ");
  4640  001274  0E00               	movlw	0
  4641  001276  6E0C               	movwf	lcd_write@column+1,c
  4642  001278  0E01               	movlw	1
  4643  00127A  6E0B               	movwf	lcd_write@column,c
  4644  00127C  0E00               	movlw	0
  4645  00127E  6E0E               	movwf	lcd_write@row+1,c
  4646  001280  0E01               	movlw	1
  4647  001282  6E0D               	movwf	lcd_write@row,c
  4648  001284  0E90               	movlw	low STR_12
  4649  001286  6E0F               	movwf	lcd_write@string,c
  4650  001288  0E0F               	movlw	high STR_12
  4651  00128A  6E10               	movwf	lcd_write@string+1,c
  4652  00128C  EC17  F012         	call	_lcd_write	;wreg free
  4653                           
  4654                           ;main.c: 145: break;
  4655  001290  0012               	return	
  4656  001292                     l2650:
  4657                           
  4658                           ;main.c: 148: lcd_write(9,1,">");
  4659  001292  0E00               	movlw	0
  4660  001294  6E0C               	movwf	lcd_write@column+1,c
  4661  001296  0E09               	movlw	9
  4662  001298  6E0B               	movwf	lcd_write@column,c
  4663  00129A  0E00               	movlw	0
  4664  00129C  6E0E               	movwf	lcd_write@row+1,c
  4665  00129E  0E01               	movlw	1
  4666  0012A0  6E0D               	movwf	lcd_write@row,c
  4667  0012A2  0E94               	movlw	low STR_11
  4668  0012A4  6E0F               	movwf	lcd_write@string,c
  4669  0012A6  0E0F               	movlw	high STR_11
  4670  0012A8  6E10               	movwf	lcd_write@string+1,c
  4671  0012AA  EC17  F012         	call	_lcd_write	;wreg free
  4672                           
  4673                           ;main.c: 149: menu_selector = 4;
  4674  0012AE  0E00               	movlw	0
  4675  0012B0  6E36               	movwf	_menu_selector+1,c
  4676  0012B2  0E04               	movlw	4
  4677  0012B4  6E35               	movwf	_menu_selector,c
  4678                           
  4679                           ;main.c: 150: menu_selected = 3;
  4680  0012B6  0E00               	movlw	0
  4681  0012B8  6E34               	movwf	_menu_selected+1,c
  4682  0012BA  0E03               	movlw	3
  4683  0012BC  6E33               	movwf	_menu_selected,c
  4684                           
  4685                           ;main.c: 151: lcd_write(1,2," ");
  4686  0012BE  0E00               	movlw	0
  4687  0012C0  6E0C               	movwf	lcd_write@column+1,c
  4688  0012C2  0E01               	movlw	1
  4689  0012C4  6E0B               	movwf	lcd_write@column,c
  4690  0012C6  0E00               	movlw	0
  4691  0012C8  6E0E               	movwf	lcd_write@row+1,c
  4692  0012CA  0E02               	movlw	2
  4693  0012CC  6E0D               	movwf	lcd_write@row,c
  4694  0012CE  0E90               	movlw	low STR_12
  4695  0012D0  6E0F               	movwf	lcd_write@string,c
  4696  0012D2  0E0F               	movlw	high STR_12
  4697  0012D4  6E10               	movwf	lcd_write@string+1,c
  4698  0012D6  EC17  F012         	call	_lcd_write	;wreg free
  4699                           
  4700                           ;main.c: 152: break;
  4701  0012DA  0012               	return	
  4702  0012DC                     l2656:
  4703                           
  4704                           ;main.c: 155: lcd_write(9,2,">");
  4705  0012DC  0E00               	movlw	0
  4706  0012DE  6E0C               	movwf	lcd_write@column+1,c
  4707  0012E0  0E09               	movlw	9
  4708  0012E2  6E0B               	movwf	lcd_write@column,c
  4709  0012E4  0E00               	movlw	0
  4710  0012E6  6E0E               	movwf	lcd_write@row+1,c
  4711  0012E8  0E02               	movlw	2
  4712  0012EA  6E0D               	movwf	lcd_write@row,c
  4713  0012EC  0E94               	movlw	low STR_11
  4714  0012EE  6E0F               	movwf	lcd_write@string,c
  4715  0012F0  0E0F               	movlw	high STR_11
  4716  0012F2  6E10               	movwf	lcd_write@string+1,c
  4717  0012F4  EC17  F012         	call	_lcd_write	;wreg free
  4718                           
  4719                           ;main.c: 156: menu_selector = 1;
  4720  0012F8  0E00               	movlw	0
  4721  0012FA  6E36               	movwf	_menu_selector+1,c
  4722  0012FC  0E01               	movlw	1
  4723  0012FE  6E35               	movwf	_menu_selector,c
  4724                           
  4725                           ;main.c: 157: menu_selected = 4;
  4726  001300  0E00               	movlw	0
  4727  001302  6E34               	movwf	_menu_selected+1,c
  4728  001304  0E04               	movlw	4
  4729  001306  6E33               	movwf	_menu_selected,c
  4730                           
  4731                           ;main.c: 158: lcd_write(9,1," ");
  4732  001308  0E00               	movlw	0
  4733  00130A  6E0C               	movwf	lcd_write@column+1,c
  4734  00130C  0E09               	movlw	9
  4735  00130E  6E0B               	movwf	lcd_write@column,c
  4736  001310  0E00               	movlw	0
  4737  001312  6E0E               	movwf	lcd_write@row+1,c
  4738  001314  0E01               	movlw	1
  4739  001316  6E0D               	movwf	lcd_write@row,c
  4740  001318  0E90               	movlw	low STR_12
  4741  00131A  6E0F               	movwf	lcd_write@string,c
  4742  00131C  0E0F               	movlw	high STR_12
  4743  00131E  6E10               	movwf	lcd_write@string+1,c
  4744  001320  EC17  F012         	call	_lcd_write	;wreg free
  4745                           
  4746                           ;main.c: 161: }
  4747                           
  4748                           ;main.c: 159: break;
  4749  001324  0012               	return	
  4750  001326                     l2664:
  4751  001326  C035  F011         	movff	_menu_selector,??_action_menu_selector
  4752  00132A  C036  F012         	movff	_menu_selector+1,??_action_menu_selector+1
  4753                           
  4754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4755                           ; Switch size 1, requested type "space"
  4756                           ; Number of cases is 1, Range of values is 0 to 0
  4757                           ; switch strategies available:
  4758                           ; Name         Instructions Cycles
  4759                           ; simple_byte            4     3 (average)
  4760                           ;	Chosen strategy is simple_byte
  4761  00132E  5012               	movf	??_action_menu_selector+1,w,c
  4762  001330  0A00               	xorlw	0	; case 0
  4763  001332  A4D8               	btfss	status,2,c
  4764  001334  0012               	return	
  4765                           
  4766                           ; Switch size 1, requested type "space"
  4767                           ; Number of cases is 4, Range of values is 1 to 4
  4768                           ; switch strategies available:
  4769                           ; Name         Instructions Cycles
  4770                           ; simple_byte           13     7 (average)
  4771                           ;	Chosen strategy is simple_byte
  4772  001336  5011               	movf	??_action_menu_selector,w,c
  4773  001338  0A01               	xorlw	1	; case 1
  4774  00133A  B4D8               	btfsc	status,2,c
  4775  00133C  D760               	goto	l2638
  4776  00133E  0A03               	xorlw	3	; case 2
  4777  001340  B4D8               	btfsc	status,2,c
  4778  001342  D782               	goto	l2644
  4779  001344  0A01               	xorlw	1	; case 3
  4780  001346  B4D8               	btfsc	status,2,c
  4781  001348  D7A4               	goto	l2650
  4782  00134A  0A07               	xorlw	7	; case 4
  4783  00134C  A4D8               	btfss	status,2,c
  4784  00134E  0012               	return	
  4785  001350  D7C5               	goto	l2656
  4786  001352  0012               	return		;funcret
  4787  001354                     __end_of_action_menu_selector:
  4788                           	opt stack 0
  4789                           tblptru	equ	0xFF8
  4790                           tblptrh	equ	0xFF7
  4791                           tblptrl	equ	0xFF6
  4792                           tablat	equ	0xFF5
  4793                           prodh	equ	0xFF4
  4794                           prodl	equ	0xFF3
  4795                           intcon	equ	0xFF2
  4796                           postinc0	equ	0xFEE
  4797                           wreg	equ	0xFE8
  4798                           indf1	equ	0xFE7
  4799                           postdec1	equ	0xFE5
  4800                           fsr1h	equ	0xFE2
  4801                           fsr1l	equ	0xFE1
  4802                           indf2	equ	0xFDF
  4803                           fsr2h	equ	0xFDA
  4804                           fsr2l	equ	0xFD9
  4805                           status	equ	0xFD8
  4806                           
  4807 ;; *************** function _home_clock_refresh *****************
  4808 ;; Defined at:
  4809 ;;		line 91 in file "main.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;		None               void
  4816 ;; Registers used:
  4817 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;Total ram usage:        0 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    6
  4830 ;; This function calls:
  4831 ;;		_lcd_write
  4832 ;;		_sprintf
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text31
  4839  001A5A                     __ptext31:
  4840                           	opt stack 0
  4841  001A5A                     _home_clock_refresh:
  4842                           	opt stack 24
  4843                           
  4844                           ;main.c: 93: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  4845                           
  4846                           ;incstack = 0
  4847  001A5A  0E7C               	movlw	low _buffer1
  4848  001A5C  6E0D               	movwf	sprintf@sp,c
  4849  001A5E  0E00               	movlw	high _buffer1
  4850  001A60  6E0E               	movwf	sprintf@sp+1,c
  4851  001A62  0E1F               	movlw	low STR_2
  4852  001A64  6E0F               	movwf	sprintf@f,c
  4853  001A66  0E0F               	movlw	high STR_2
  4854  001A68  6E10               	movwf	sprintf@f+1,c
  4855  001A6A  C057  F011         	movff	_dia,?_sprintf+4
  4856  001A6E  C058  F012         	movff	_dia+1,?_sprintf+5
  4857  001A72  C05D  F013         	movff	_mes,?_sprintf+6
  4858  001A76  C05E  F014         	movff	_mes+1,?_sprintf+7
  4859  001A7A  C055  F015         	movff	_anio,?_sprintf+8
  4860  001A7E  C056  F016         	movff	_anio+1,?_sprintf+9
  4861  001A82  ECCC  F007         	call	_sprintf	;wreg free
  4862                           
  4863                           ;main.c: 94: lcd_write(9,1,buffer1);
  4864  001A86  0E00               	movlw	0
  4865  001A88  6E0C               	movwf	lcd_write@column+1,c
  4866  001A8A  0E09               	movlw	9
  4867  001A8C  6E0B               	movwf	lcd_write@column,c
  4868  001A8E  0E00               	movlw	0
  4869  001A90  6E0E               	movwf	lcd_write@row+1,c
  4870  001A92  0E01               	movlw	1
  4871  001A94  6E0D               	movwf	lcd_write@row,c
  4872  001A96  0E7C               	movlw	low _buffer1
  4873  001A98  6E0F               	movwf	lcd_write@string,c
  4874  001A9A  0E00               	movlw	high _buffer1
  4875  001A9C  6E10               	movwf	lcd_write@string+1,c
  4876  001A9E  EC17  F012         	call	_lcd_write	;wreg free
  4877                           
  4878                           ;main.c: 95: sprintf(buffer1,"%02u:%02u:%02u",hora,minuto,segundo);
  4879  001AA2  0E7C               	movlw	low _buffer1
  4880  001AA4  6E0D               	movwf	sprintf@sp,c
  4881  001AA6  0E00               	movlw	high _buffer1
  4882  001AA8  6E0E               	movwf	sprintf@sp+1,c
  4883  001AAA  0E2E               	movlw	low STR_3
  4884  001AAC  6E0F               	movwf	sprintf@f,c
  4885  001AAE  0E0F               	movlw	high STR_3
  4886  001AB0  6E10               	movwf	sprintf@f+1,c
  4887  001AB2  C05B  F011         	movff	_hora,?_sprintf+4
  4888  001AB6  C05C  F012         	movff	_hora+1,?_sprintf+5
  4889  001ABA  C037  F013         	movff	_minuto,?_sprintf+6
  4890  001ABE  C038  F014         	movff	_minuto+1,?_sprintf+7
  4891  001AC2  C039  F015         	movff	_segundo,?_sprintf+8
  4892  001AC6  C03A  F016         	movff	_segundo+1,?_sprintf+9
  4893  001ACA  ECCC  F007         	call	_sprintf	;wreg free
  4894                           
  4895                           ;main.c: 96: lcd_write(9,2,buffer1);
  4896  001ACE  0E00               	movlw	0
  4897  001AD0  6E0C               	movwf	lcd_write@column+1,c
  4898  001AD2  0E09               	movlw	9
  4899  001AD4  6E0B               	movwf	lcd_write@column,c
  4900  001AD6  0E00               	movlw	0
  4901  001AD8  6E0E               	movwf	lcd_write@row+1,c
  4902  001ADA  0E02               	movlw	2
  4903  001ADC  6E0D               	movwf	lcd_write@row,c
  4904  001ADE  0E7C               	movlw	low _buffer1
  4905  001AE0  6E0F               	movwf	lcd_write@string,c
  4906  001AE2  0E00               	movlw	high _buffer1
  4907  001AE4  6E10               	movwf	lcd_write@string+1,c
  4908  001AE6  EC17  F012         	call	_lcd_write	;wreg free
  4909  001AEA  0012               	return		;funcret
  4910  001AEC                     __end_of_home_clock_refresh:
  4911                           	opt stack 0
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           postinc0	equ	0xFEE
  4920                           wreg	equ	0xFE8
  4921                           indf1	equ	0xFE7
  4922                           postdec1	equ	0xFE5
  4923                           fsr1h	equ	0xFE2
  4924                           fsr1l	equ	0xFE1
  4925                           indf2	equ	0xFDF
  4926                           fsr2h	equ	0xFDA
  4927                           fsr2l	equ	0xFD9
  4928                           status	equ	0xFD8
  4929                           
  4930 ;; *************** function _sprintf *****************
  4931 ;; Defined at:
  4932 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  sp              2   12[COMRAM] PTR unsigned char 
  4935 ;;		 -> buffer1(20), 
  4936 ;;  f               2   14[COMRAM] PTR const unsigned char 
  4937 ;;		 -> STR_38(5), STR_37(5), STR_3(15), STR_2(15), 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  tmpval          4    0        struct .
  4940 ;;  cp              3    0        PTR const unsigned char 
  4941 ;;  width           2   32[COMRAM] int 
  4942 ;;  val             2   29[COMRAM] unsigned int 
  4943 ;;  ap              2   26[COMRAM] PTR void [1]
  4944 ;;		 -> ?_sprintf(2), 
  4945 ;;  len             2    0        unsigned int 
  4946 ;;  c               1   34[COMRAM] char 
  4947 ;;  prec            1   31[COMRAM] char 
  4948 ;;  flag            1   28[COMRAM] unsigned char 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  2   12[COMRAM] int 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4958 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4959 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4961 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;Total ram usage:       23 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    1
  4965 ;; This function calls:
  4966 ;;		___lwdiv
  4967 ;;		___lwmod
  4968 ;;		___wmul
  4969 ;;		_isdigit
  4970 ;; This function is called by:
  4971 ;;		_home_clock_refresh
  4972 ;;		_button_number
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text32
  4977  000F98                     __ptext32:
  4978                           	opt stack 0
  4979  000F98                     _sprintf:
  4980                           	opt stack 27
  4981                           
  4982                           ;doprnt.c: 494: va_list ap;
  4983                           ;doprnt.c: 499: signed char c;
  4984                           ;doprnt.c: 501: int width;
  4985                           ;doprnt.c: 506: signed char prec;
  4986                           ;doprnt.c: 508: unsigned char flag;
  4987                           ;doprnt.c: 523: union {
  4988                           ;doprnt.c: 524: unsigned long vd;
  4989                           ;doprnt.c: 525: double integ;
  4990                           ;doprnt.c: 526: } tmpval;
  4991                           ;doprnt.c: 528: unsigned int val;
  4992                           ;doprnt.c: 529: unsigned len;
  4993                           ;doprnt.c: 530: const char * cp;
  4994                           ;doprnt.c: 533: *ap = __va_start();
  4995                           
  4996                           ;incstack = 0
  4997  000F98  0E11               	movlw	low (?_sprintf+4)
  4998  000F9A  6E1B               	movwf	sprintf@ap,c
  4999  000F9C  0E00               	movlw	high (?_sprintf+4)
  5000  000F9E  6E1C               	movwf	sprintf@ap+1,c
  5001                           
  5002                           ;doprnt.c: 536: while(c = *f++) {
  5003  000FA0  D117               	goto	l2624
  5004  000FA2                     l2542:
  5005                           
  5006                           ;doprnt.c: 538: if(c != '%')
  5007  000FA2  0E25               	movlw	37
  5008  000FA4  1823               	xorwf	sprintf@c,w,c
  5009  000FA6  B4D8               	btfsc	status,2,c
  5010  000FA8  D009               	goto	l2548
  5011                           
  5012                           ;doprnt.c: 540: {
  5013                           ;doprnt.c: 541: ((*sp++ = (c)));
  5014  000FAA  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5015  000FAE  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5016  000FB2  C023  FFDF         	movff	sprintf@c,indf2
  5017  000FB6  4A0D               	infsnz	sprintf@sp,f,c
  5018  000FB8  2A0E               	incf	sprintf@sp+1,f,c
  5019                           
  5020                           ;doprnt.c: 542: continue;
  5021  000FBA  D10A               	goto	l2624
  5022  000FBC                     l2548:
  5023                           
  5024                           ;doprnt.c: 543: }
  5025                           ;doprnt.c: 546: width = 0;
  5026  000FBC  0E00               	movlw	0
  5027  000FBE  6E22               	movwf	sprintf@width+1,c
  5028  000FC0  0E00               	movlw	0
  5029  000FC2  6E21               	movwf	sprintf@width,c
  5030                           
  5031                           ;doprnt.c: 548: flag = 0;
  5032  000FC4  0E00               	movlw	0
  5033  000FC6  6E1D               	movwf	sprintf@flag,c
  5034                           
  5035                           ;doprnt.c: 551: switch(*f) {
  5036                           
  5037                           ;doprnt.c: 550: for(;;) {
  5038  000FC8  D005               	goto	l2554
  5039  000FCA                     l2550:
  5040                           
  5041                           ;doprnt.c: 580: flag |= 0x04;
  5042  000FCA  841D               	bsf	sprintf@flag,2,c
  5043                           
  5044                           ;doprnt.c: 581: f++;
  5045  000FCC  4A0F               	infsnz	sprintf@f,f,c
  5046  000FCE  2A10               	incf	sprintf@f+1,f,c
  5047                           
  5048                           ;doprnt.c: 582: continue;
  5049  000FD0  D001               	goto	l2554
  5050                           
  5051                           ;doprnt.c: 584: }
  5052  000FD2  D00B               	goto	l2556
  5053  000FD4                     l2554:
  5054  000FD4  C00F  FFF6         	movff	sprintf@f,tblptrl
  5055  000FD8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5056  000FDC                     	if	0	;tblptru may be non-zero
  5057  000FDC                     	endif
  5058  000FDC                     	if	0	;tblptru may be non-zero
  5059  000FDC                     	endif
  5060  000FDC  0008               	tblrd		*
  5061  000FDE  50F5               	movf	tablat,w,c
  5062                           
  5063                           ; Switch size 1, requested type "space"
  5064                           ; Number of cases is 1, Range of values is 48 to 48
  5065                           ; switch strategies available:
  5066                           ; Name         Instructions Cycles
  5067                           ; simple_byte            4     3 (average)
  5068                           ;	Chosen strategy is simple_byte
  5069  000FE0  0A30               	xorlw	48	; case 48
  5070  000FE2  B4D8               	btfsc	status,2,c
  5071  000FE4  D7F2               	goto	l2550
  5072                           
  5073                           ;doprnt.c: 585: break;
  5074  000FE6  D001               	goto	l2556
  5075                           
  5076                           ;doprnt.c: 586: }
  5077  000FE8  D7F5               	goto	l2554
  5078  000FEA                     l2556:
  5079                           
  5080                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5081  000FEA  C00F  FFF6         	movff	sprintf@f,tblptrl
  5082  000FEE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5083  000FF2                     	if	0	;tblptru may be non-zero
  5084  000FF2                     	endif
  5085  000FF2                     	if	0	;tblptru may be non-zero
  5086  000FF2                     	endif
  5087  000FF2  0008               	tblrd		*
  5088  000FF4  50F5               	movf	tablat,w,c
  5089  000FF6  ECFA  F011         	call	_isdigit
  5090  000FFA  A0D8               	btfss	status,0,c
  5091  000FFC  D03A               	goto	l2572
  5092                           
  5093                           ;doprnt.c: 598: width = 0;
  5094  000FFE  0E00               	movlw	0
  5095  001000  6E22               	movwf	sprintf@width+1,c
  5096  001002  0E00               	movlw	0
  5097  001004  6E21               	movwf	sprintf@width,c
  5098  001006  D000               	goto	l2560
  5099  001008                     l2560:
  5100                           
  5101                           ;doprnt.c: 600: width *= 10;
  5102  001008  C021  F001         	movff	sprintf@width,___wmul@multiplier
  5103  00100C  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  5104  001010  0E00               	movlw	0
  5105  001012  6E04               	movwf	___wmul@multiplicand+1,c
  5106  001014  0E0A               	movlw	10
  5107  001016  6E03               	movwf	___wmul@multiplicand,c
  5108  001018  ECC2  F011         	call	___wmul	;wreg free
  5109  00101C  C001  F021         	movff	?___wmul,sprintf@width
  5110  001020  C002  F022         	movff	?___wmul+1,sprintf@width+1
  5111                           
  5112                           ;doprnt.c: 601: width += *f++ - '0';
  5113  001024  0ED0               	movlw	208
  5114  001026  6E17               	movwf	??_sprintf& (0+255),c
  5115  001028  0EFF               	movlw	255
  5116  00102A  6E18               	movwf	(??_sprintf+1)& (0+255),c
  5117  00102C  C00F  FFF6         	movff	sprintf@f,tblptrl
  5118  001030  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5119  001034                     	if	0	;tblptru may be non-zero
  5120  001034                     	endif
  5121  001034                     	if	0	;tblptru may be non-zero
  5122  001034                     	endif
  5123  001034  0008               	tblrd		*
  5124  001036  50F5               	movf	tablat,w,c
  5125  001038  6E19               	movwf	(??_sprintf+2)& (0+255),c
  5126  00103A  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  5127  00103C  5017               	movf	??_sprintf,w,c
  5128  00103E  2619               	addwf	??_sprintf+2,f,c
  5129  001040  5018               	movf	??_sprintf+1,w,c
  5130  001042  221A               	addwfc	??_sprintf+3,f,c
  5131  001044  5019               	movf	??_sprintf+2,w,c
  5132  001046  2621               	addwf	sprintf@width,f,c
  5133  001048  501A               	movf	??_sprintf+3,w,c
  5134  00104A  2222               	addwfc	sprintf@width+1,f,c
  5135  00104C  4A0F               	infsnz	sprintf@f,f,c
  5136  00104E  2A10               	incf	sprintf@f+1,f,c
  5137                           
  5138                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5139  001050  C00F  FFF6         	movff	sprintf@f,tblptrl
  5140  001054  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5141  001058                     	if	0	;tblptru may be non-zero
  5142  001058                     	endif
  5143  001058                     	if	0	;tblptru may be non-zero
  5144  001058                     	endif
  5145  001058  0008               	tblrd		*
  5146  00105A  50F5               	movf	tablat,w,c
  5147  00105C  ECFA  F011         	call	_isdigit
  5148  001060  A0D8               	btfss	status,0,c
  5149  001062  D007               	goto	l2572
  5150  001064  D7D1               	goto	l2560
  5151                           
  5152                           ;doprnt.c: 608: }
  5153                           ;doprnt.c: 635: switch(c = *f++) {
  5154  001066  D005               	goto	l2572
  5155                           
  5156                           ;doprnt.c: 638: goto alldone;
  5157                           
  5158                           ;doprnt.c: 637: case 0:
  5159  001068  D0C1               	goto	l2626
  5160                           
  5161                           ;doprnt.c: 813: continue;
  5162                           
  5163                           ;doprnt.c: 802: default:
  5164  00106A  D0B2               	goto	l2624
  5165  00106C                     l2568:
  5166                           
  5167                           ;doprnt.c: 818: flag |= 0xC0;
  5168  00106C  0EC0               	movlw	192
  5169  00106E  121D               	iorwf	sprintf@flag,f,c
  5170                           
  5171                           ;doprnt.c: 822: }
  5172                           
  5173                           ;doprnt.c: 819: break;
  5174  001070  D011               	goto	l2574
  5175  001072                     l2572:
  5176  001072  C00F  FFF6         	movff	sprintf@f,tblptrl
  5177  001076  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5178  00107A  4A0F               	infsnz	sprintf@f,f,c
  5179  00107C  2A10               	incf	sprintf@f+1,f,c
  5180  00107E                     	if	0	;tblptru may be non-zero
  5181  00107E                     	endif
  5182  00107E                     	if	0	;tblptru may be non-zero
  5183  00107E                     	endif
  5184  00107E  0008               	tblrd		*
  5185  001080  CFF5 F023          	movff	tablat,sprintf@c
  5186  001084  5023               	movf	sprintf@c,w,c
  5187                           
  5188                           ; Switch size 1, requested type "space"
  5189                           ; Number of cases is 2, Range of values is 0 to 117
  5190                           ; switch strategies available:
  5191                           ; Name         Instructions Cycles
  5192                           ; simple_byte            7     4 (average)
  5193                           ;	Chosen strategy is simple_byte
  5194  001086  0A00               	xorlw	0	; case 0
  5195  001088  B4D8               	btfsc	status,2,c
  5196  00108A  D0B0               	goto	l2626
  5197  00108C  0A75               	xorlw	117	; case 117
  5198  00108E  B4D8               	btfsc	status,2,c
  5199  001090  D7ED               	goto	l2568
  5200  001092  D09E               	goto	l2624
  5201  001094                     l2574:
  5202                           
  5203                           ;doprnt.c: 1273: {
  5204                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5205  001094  C01B  FFD9         	movff	sprintf@ap,fsr2l
  5206  001098  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  5207  00109C  CFDE F01E          	movff	postinc2,sprintf@val
  5208  0010A0  CFDD F01F          	movff	postdec2,sprintf@val+1
  5209  0010A4  0E02               	movlw	2
  5210  0010A6  261B               	addwf	sprintf@ap,f,c
  5211  0010A8  0E00               	movlw	0
  5212  0010AA  221C               	addwfc	sprintf@ap+1,f,c
  5213                           
  5214                           ;doprnt.c: 1287: }
  5215                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5216  0010AC  0E01               	movlw	1
  5217  0010AE  6E23               	movwf	sprintf@c,c
  5218  0010B0                     l2580:
  5219  0010B0  0E05               	movlw	5
  5220  0010B2  1823               	xorwf	sprintf@c,w,c
  5221  0010B4  B4D8               	btfsc	status,2,c
  5222  0010B6  D016               	goto	l2592
  5223  0010B8  D001               	goto	l2584
  5224  0010BA  D014               	goto	l2592
  5225  0010BC                     l2584:
  5226                           
  5227                           ;doprnt.c: 1306: if(val < dpowers[c])
  5228  0010BC  5023               	movf	sprintf@c,w,c
  5229  0010BE  0D02               	mullw	2
  5230  0010C0  0E01               	movlw	low _dpowers
  5231  0010C2  24F3               	addwf	prodl,w,c
  5232  0010C4  6EF6               	movwf	tblptrl,c
  5233  0010C6  0E0F               	movlw	high _dpowers
  5234  0010C8  20F4               	addwfc	prodh,w,c
  5235  0010CA  6EF7               	movwf	tblptrh,c
  5236  0010CC                     	if	0	;There are less than 3 active tblptr bytes
  5237  0010CC                     	endif
  5238  0010CC  0009               	tblrd		*+
  5239  0010CE  50F5               	movf	tablat,w,c
  5240  0010D0  5C1E               	subwf	sprintf@val,w,c
  5241  0010D2  0009               	tblrd		*+
  5242  0010D4  50F5               	movf	tablat,w,c
  5243  0010D6  581F               	subwfb	sprintf@val+1,w,c
  5244  0010D8  A0D8               	btfss	status,0,c
  5245  0010DA  D004               	goto	l2592
  5246  0010DC  D001               	goto	l2588
  5247                           
  5248                           ;doprnt.c: 1307: break;
  5249  0010DE  D002               	goto	l2592
  5250  0010E0                     l2588:
  5251  0010E0  2A23               	incf	sprintf@c,f,c
  5252  0010E2  D7E6               	goto	l2580
  5253  0010E4                     l2592:
  5254                           
  5255                           ;doprnt.c: 1381: if(width > c)
  5256  0010E4  0E80               	movlw	128
  5257  0010E6  BE23               	btfsc	sprintf@c,7,c
  5258  0010E8  0E7F               	movlw	127
  5259  0010EA  6E17               	movwf	??_sprintf& (0+255),c
  5260  0010EC  5021               	movf	sprintf@width,w,c
  5261  0010EE  5C23               	subwf	sprintf@c,w,c
  5262  0010F0  5022               	movf	sprintf@width+1,w,c
  5263  0010F2  0A80               	xorlw	128
  5264  0010F4  5817               	subwfb	??_sprintf& (0+255),w,c
  5265  0010F6  B0D8               	btfsc	status,0,c
  5266  0010F8  D007               	goto	l2596
  5267                           
  5268                           ;doprnt.c: 1382: width -= c;
  5269  0010FA  5023               	movf	sprintf@c,w,c
  5270  0010FC  5E21               	subwf	sprintf@width,f,c
  5271  0010FE  0E00               	movlw	0
  5272  001100  BE23               	btfsc	sprintf@c,7,c
  5273  001102  0EFF               	movlw	255
  5274  001104  5A22               	subwfb	sprintf@width+1,f,c
  5275  001106  D005               	goto	l2598
  5276  001108                     l2596:
  5277                           
  5278                           ;doprnt.c: 1383: else
  5279                           ;doprnt.c: 1384: width = 0;
  5280  001108  0E00               	movlw	0
  5281  00110A  6E22               	movwf	sprintf@width+1,c
  5282  00110C  0E00               	movlw	0
  5283  00110E  6E21               	movwf	sprintf@width,c
  5284  001110  D000               	goto	l2598
  5285  001112                     l2598:
  5286                           
  5287                           ;doprnt.c: 1387: if(flag & 0x04) {
  5288  001112  A41D               	btfss	sprintf@flag,2,c
  5289  001114  D015               	goto	l2608
  5290                           
  5291                           ;doprnt.c: 1415: if(width)
  5292  001116  5021               	movf	sprintf@width,w,c
  5293  001118  1022               	iorwf	sprintf@width+1,w,c
  5294  00111A  B4D8               	btfsc	status,2,c
  5295  00111C  D026               	goto	l420
  5296  00111E                     l2602:
  5297                           
  5298                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5299  00111E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5300  001122  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5301  001126  0E30               	movlw	48
  5302  001128  6EDF               	movwf	indf2,c
  5303  00112A  4A0D               	infsnz	sprintf@sp,f,c
  5304  00112C  2A0E               	incf	sprintf@sp+1,f,c
  5305                           
  5306                           ;doprnt.c: 1418: while(--width);
  5307  00112E  0621               	decf	sprintf@width,f,c
  5308  001130  A0D8               	btfss	status,0,c
  5309  001132  0622               	decf	sprintf@width+1,f,c
  5310  001134  5021               	movf	sprintf@width,w,c
  5311  001136  1022               	iorwf	sprintf@width+1,w,c
  5312  001138  B4D8               	btfsc	status,2,c
  5313  00113A  D017               	goto	l420
  5314  00113C  D7F0               	goto	l2602
  5315                           
  5316                           ;doprnt.c: 1420: } else
  5317  00113E  D015               	goto	l420
  5318  001140                     l2608:
  5319                           
  5320                           ;doprnt.c: 1422: {
  5321                           ;doprnt.c: 1424: if(width
  5322                           ;doprnt.c: 1428: )
  5323  001140  5021               	movf	sprintf@width,w,c
  5324  001142  1022               	iorwf	sprintf@width+1,w,c
  5325  001144  B4D8               	btfsc	status,2,c
  5326  001146  D011               	goto	l420
  5327  001148                     l2610:
  5328                           
  5329                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5330  001148  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5331  00114C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5332  001150  0E20               	movlw	32
  5333  001152  6EDF               	movwf	indf2,c
  5334  001154  4A0D               	infsnz	sprintf@sp,f,c
  5335  001156  2A0E               	incf	sprintf@sp+1,f,c
  5336                           
  5337                           ;doprnt.c: 1431: while(--width);
  5338  001158  0621               	decf	sprintf@width,f,c
  5339  00115A  A0D8               	btfss	status,0,c
  5340  00115C  0622               	decf	sprintf@width+1,f,c
  5341  00115E  5021               	movf	sprintf@width,w,c
  5342  001160  1022               	iorwf	sprintf@width+1,w,c
  5343  001162  B4D8               	btfsc	status,2,c
  5344  001164  D002               	goto	l420
  5345  001166  D7F0               	goto	l2610
  5346  001168  D000               	goto	l420
  5347  00116A                     l420:
  5348                           
  5349                           ;doprnt.c: 1469: }
  5350                           ;doprnt.c: 1472: prec = c;
  5351  00116A  C023  F020         	movff	sprintf@c,sprintf@prec
  5352                           
  5353                           ;doprnt.c: 1474: while(prec--) {
  5354  00116E  D02A               	goto	l2622
  5355  001170                     l2616:
  5356                           
  5357                           ;doprnt.c: 1478: {
  5358                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5359  001170  5020               	movf	sprintf@prec,w,c
  5360  001172  0D02               	mullw	2
  5361  001174  0E01               	movlw	low _dpowers
  5362  001176  24F3               	addwf	prodl,w,c
  5363  001178  6EF6               	movwf	tblptrl,c
  5364  00117A  0E0F               	movlw	high _dpowers
  5365  00117C  20F4               	addwfc	prodh,w,c
  5366  00117E  6EF7               	movwf	tblptrh,c
  5367  001180                     	if	0	;There are less than 3 active tblptr bytes
  5368  001180                     	endif
  5369  001180  0009               	tblrd		*+
  5370  001182  CFF5 F003          	movff	tablat,___lwdiv@divisor
  5371  001186  000A               	tblrd		*-
  5372  001188  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  5373  00118C  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  5374  001190  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  5375  001194  ECE3  F00F         	call	___lwdiv	;wreg free
  5376  001198  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  5377  00119C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  5378  0011A0  0E00               	movlw	0
  5379  0011A2  6E0B               	movwf	___lwmod@divisor+1,c
  5380  0011A4  0E0A               	movlw	10
  5381  0011A6  6E0A               	movwf	___lwmod@divisor,c
  5382  0011A8  ECB2  F010         	call	___lwmod	;wreg free
  5383  0011AC  5008               	movf	?___lwmod,w,c
  5384  0011AE  0F30               	addlw	48
  5385  0011B0  6E23               	movwf	sprintf@c,c
  5386                           
  5387                           ;doprnt.c: 1523: }
  5388                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5389  0011B2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5390  0011B6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5391  0011BA  C023  FFDF         	movff	sprintf@c,indf2
  5392  0011BE  4A0D               	infsnz	sprintf@sp,f,c
  5393  0011C0  2A0E               	incf	sprintf@sp+1,f,c
  5394  0011C2  D000               	goto	l2622
  5395  0011C4                     l2622:
  5396  0011C4  0620               	decf	sprintf@prec,f,c
  5397  0011C6  2820               	incf	sprintf@prec,w,c
  5398  0011C8  B4D8               	btfsc	status,2,c
  5399  0011CA  D002               	goto	l2624
  5400  0011CC  D7D1               	goto	l2616
  5401  0011CE  D000               	goto	l2624
  5402  0011D0                     l2624:
  5403  0011D0  C00F  FFF6         	movff	sprintf@f,tblptrl
  5404  0011D4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5405  0011D8  4A0F               	infsnz	sprintf@f,f,c
  5406  0011DA  2A10               	incf	sprintf@f+1,f,c
  5407  0011DC                     	if	0	;tblptru may be non-zero
  5408  0011DC                     	endif
  5409  0011DC                     	if	0	;tblptru may be non-zero
  5410  0011DC                     	endif
  5411  0011DC  0008               	tblrd		*
  5412  0011DE  CFF5 F023          	movff	tablat,sprintf@c
  5413  0011E2  5023               	movf	sprintf@c,w,c
  5414  0011E4  B4D8               	btfsc	status,2,c
  5415  0011E6  D002               	goto	l2626
  5416  0011E8  D6DC               	goto	l2542
  5417  0011EA  D000               	goto	l2626
  5418  0011EC                     l2626:
  5419                           
  5420                           ;doprnt.c: 1538: *sp = 0;
  5421  0011EC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5422  0011F0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5423  0011F4  0E00               	movlw	0
  5424  0011F6  6EDF               	movwf	indf2,c
  5425  0011F8  0012               	return	
  5426                           
  5427                           ;doprnt.c: 1540: return 0;
  5428                           ;	Return value of _sprintf is never used
  5429  0011FA  0012               	return		;funcret
  5430  0011FC                     __end_of_sprintf:
  5431                           	opt stack 0
  5432                           tblptru	equ	0xFF8
  5433                           tblptrh	equ	0xFF7
  5434                           tblptrl	equ	0xFF6
  5435                           tablat	equ	0xFF5
  5436                           prodh	equ	0xFF4
  5437                           prodl	equ	0xFF3
  5438                           intcon	equ	0xFF2
  5439                           postinc0	equ	0xFEE
  5440                           wreg	equ	0xFE8
  5441                           indf1	equ	0xFE7
  5442                           postdec1	equ	0xFE5
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           indf2	equ	0xFDF
  5446                           postinc2	equ	0xFDE
  5447                           postdec2	equ	0xFDD
  5448                           fsr2h	equ	0xFDA
  5449                           fsr2l	equ	0xFD9
  5450                           status	equ	0xFD8
  5451                           
  5452 ;; *************** function _isdigit *****************
  5453 ;; Defined at:
  5454 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  c               1    wreg     unsigned char 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  c               1    2[COMRAM] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;		None               void
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;Total ram usage:        3 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_sprintf
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text33
  5482  0023F4                     __ptext33:
  5483                           	opt stack 0
  5484  0023F4                     _isdigit:
  5485                           	opt stack 27
  5486                           
  5487                           ;incstack = 0
  5488                           ;isdigit@c stored from wreg
  5489  0023F4  6E03               	movwf	isdigit@c,c
  5490  0023F6  0E00               	movlw	0
  5491  0023F8  6E02               	movwf	_isdigit$2128,c
  5492  0023FA  0E3A               	movlw	58
  5493  0023FC  6003               	cpfslt	isdigit@c,c
  5494  0023FE  D006               	goto	l2356
  5495  002400  0E2F               	movlw	47
  5496  002402  6403               	cpfsgt	isdigit@c,c
  5497  002404  D003               	goto	l2356
  5498  002406  0E01               	movlw	1
  5499  002408  6E02               	movwf	_isdigit$2128,c
  5500  00240A  D000               	goto	l2356
  5501  00240C                     l2356:
  5502  00240C  C002  F001         	movff	_isdigit$2128,??_isdigit
  5503  002410  3001               	rrcf	??_isdigit,w,c
  5504  002412  0012               	return	
  5505  002414  0012               	return		;funcret
  5506  002416                     __end_of_isdigit:
  5507                           	opt stack 0
  5508                           tblptru	equ	0xFF8
  5509                           tblptrh	equ	0xFF7
  5510                           tblptrl	equ	0xFF6
  5511                           tablat	equ	0xFF5
  5512                           prodh	equ	0xFF4
  5513                           prodl	equ	0xFF3
  5514                           intcon	equ	0xFF2
  5515                           postinc0	equ	0xFEE
  5516                           wreg	equ	0xFE8
  5517                           indf1	equ	0xFE7
  5518                           postdec1	equ	0xFE5
  5519                           fsr1h	equ	0xFE2
  5520                           fsr1l	equ	0xFE1
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           fsr2h	equ	0xFDA
  5525                           fsr2l	equ	0xFD9
  5526                           status	equ	0xFD8
  5527                           
  5528 ;; *************** function ___wmul *****************
  5529 ;; Defined at:
  5530 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  multiplier      2    0[COMRAM] unsigned int 
  5533 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  product         2    4[COMRAM] unsigned int 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  2    0[COMRAM] unsigned int 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, prodl, prodh
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5548 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5549 ;;Total ram usage:        6 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; This function calls:
  5552 ;;		Nothing
  5553 ;; This function is called by:
  5554 ;;		_sprintf
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text34
  5559  002384                     __ptext34:
  5560                           	opt stack 0
  5561  002384                     ___wmul:
  5562                           	opt stack 27
  5563                           
  5564                           ;incstack = 0
  5565  002384  5001               	movf	___wmul@multiplier,w,c
  5566  002386  0203               	mulwf	___wmul@multiplicand,c
  5567  002388  CFF3 F005          	movff	prodl,___wmul@product
  5568  00238C  CFF4 F006          	movff	prodh,___wmul@product+1
  5569  002390  5001               	movf	___wmul@multiplier,w,c
  5570  002392  0204               	mulwf	___wmul@multiplicand+1,c
  5571  002394  50F3               	movf	prodl,w,c
  5572  002396  2606               	addwf	___wmul@product+1,f,c
  5573  002398  5002               	movf	___wmul@multiplier+1,w,c
  5574  00239A  0203               	mulwf	___wmul@multiplicand,c
  5575  00239C  50F3               	movf	prodl,w,c
  5576  00239E  2606               	addwf	___wmul@product+1,f,c
  5577  0023A0  C005  F001         	movff	___wmul@product,?___wmul
  5578  0023A4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5579  0023A8  0012               	return	
  5580  0023AA  0012               	return		;funcret
  5581  0023AC                     __end_of___wmul:
  5582                           	opt stack 0
  5583                           tblptru	equ	0xFF8
  5584                           tblptrh	equ	0xFF7
  5585                           tblptrl	equ	0xFF6
  5586                           tablat	equ	0xFF5
  5587                           prodh	equ	0xFF4
  5588                           prodl	equ	0xFF3
  5589                           intcon	equ	0xFF2
  5590                           postinc0	equ	0xFEE
  5591                           wreg	equ	0xFE8
  5592                           indf1	equ	0xFE7
  5593                           postdec1	equ	0xFE5
  5594                           fsr1h	equ	0xFE2
  5595                           fsr1l	equ	0xFE1
  5596                           indf2	equ	0xFDF
  5597                           postinc2	equ	0xFDE
  5598                           postdec2	equ	0xFDD
  5599                           fsr2h	equ	0xFDA
  5600                           fsr2l	equ	0xFD9
  5601                           status	equ	0xFD8
  5602                           
  5603 ;; *************** function ___lwmod *****************
  5604 ;; Defined at:
  5605 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  dividend        2    7[COMRAM] unsigned int 
  5608 ;;  divisor         2    9[COMRAM] unsigned int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  counter         1   11[COMRAM] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  2    7[COMRAM] unsigned int 
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5624 ;;Total ram usage:        5 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_sprintf
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text35
  5634  002164                     __ptext35:
  5635                           	opt stack 0
  5636  002164                     ___lwmod:
  5637                           	opt stack 27
  5638                           
  5639                           ;incstack = 0
  5640  002164  500A               	movf	___lwmod@divisor,w,c
  5641  002166  100B               	iorwf	___lwmod@divisor+1,w,c
  5642  002168  B4D8               	btfsc	status,2,c
  5643  00216A  D01D               	goto	l1074
  5644  00216C  0E01               	movlw	1
  5645  00216E  6E0C               	movwf	___lwmod@counter,c
  5646  002170  D005               	goto	l2394
  5647  002172                     l2392:
  5648  002172  90D8               	bcf	status,0,c
  5649  002174  360A               	rlcf	___lwmod@divisor,f,c
  5650  002176  360B               	rlcf	___lwmod@divisor+1,f,c
  5651  002178  2A0C               	incf	___lwmod@counter,f,c
  5652  00217A  D000               	goto	l2394
  5653  00217C                     l2394:
  5654  00217C  BE0B               	btfsc	___lwmod@divisor+1,7,c
  5655  00217E  D002               	goto	l2396
  5656  002180  D7F8               	goto	l2392
  5657  002182  D000               	goto	l2396
  5658  002184                     l2396:
  5659  002184  500A               	movf	___lwmod@divisor,w,c
  5660  002186  5C08               	subwf	___lwmod@dividend,w,c
  5661  002188  500B               	movf	___lwmod@divisor+1,w,c
  5662  00218A  5809               	subwfb	___lwmod@dividend+1,w,c
  5663  00218C  A0D8               	btfss	status,0,c
  5664  00218E  D005               	goto	l2400
  5665  002190  500A               	movf	___lwmod@divisor,w,c
  5666  002192  5E08               	subwf	___lwmod@dividend,f,c
  5667  002194  500B               	movf	___lwmod@divisor+1,w,c
  5668  002196  5A09               	subwfb	___lwmod@dividend+1,f,c
  5669  002198  D000               	goto	l2400
  5670  00219A                     l2400:
  5671  00219A  90D8               	bcf	status,0,c
  5672  00219C  320B               	rrcf	___lwmod@divisor+1,f,c
  5673  00219E  320A               	rrcf	___lwmod@divisor,f,c
  5674  0021A0  2E0C               	decfsz	___lwmod@counter,f,c
  5675  0021A2  D7F0               	goto	l2396
  5676  0021A4  D000               	goto	l1074
  5677  0021A6                     l1074:
  5678  0021A6  C008  F008         	movff	___lwmod@dividend,?___lwmod
  5679  0021AA  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  5680  0021AE  0012               	return		;funcret
  5681  0021B0                     __end_of___lwmod:
  5682                           	opt stack 0
  5683                           tblptru	equ	0xFF8
  5684                           tblptrh	equ	0xFF7
  5685                           tblptrl	equ	0xFF6
  5686                           tablat	equ	0xFF5
  5687                           prodh	equ	0xFF4
  5688                           prodl	equ	0xFF3
  5689                           intcon	equ	0xFF2
  5690                           postinc0	equ	0xFEE
  5691                           wreg	equ	0xFE8
  5692                           indf1	equ	0xFE7
  5693                           postdec1	equ	0xFE5
  5694                           fsr1h	equ	0xFE2
  5695                           fsr1l	equ	0xFE1
  5696                           indf2	equ	0xFDF
  5697                           postinc2	equ	0xFDE
  5698                           postdec2	equ	0xFDD
  5699                           fsr2h	equ	0xFDA
  5700                           fsr2l	equ	0xFD9
  5701                           status	equ	0xFD8
  5702                           
  5703 ;; *************** function ___lwdiv *****************
  5704 ;; Defined at:
  5705 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  dividend        2    0[COMRAM] unsigned int 
  5708 ;;  divisor         2    2[COMRAM] unsigned int 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  quotient        2    4[COMRAM] unsigned int 
  5711 ;;  counter         1    6[COMRAM] unsigned char 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  2    0[COMRAM] unsigned int 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;Total ram usage:        7 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_sprintf
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text36
  5735  001FC6                     __ptext36:
  5736                           	opt stack 0
  5737  001FC6                     ___lwdiv:
  5738                           	opt stack 27
  5739                           
  5740                           ;incstack = 0
  5741  001FC6  0E00               	movlw	0
  5742  001FC8  6E06               	movwf	___lwdiv@quotient+1,c
  5743  001FCA  0E00               	movlw	0
  5744  001FCC  6E05               	movwf	___lwdiv@quotient,c
  5745  001FCE  5003               	movf	___lwdiv@divisor,w,c
  5746  001FD0  1004               	iorwf	___lwdiv@divisor+1,w,c
  5747  001FD2  B4D8               	btfsc	status,2,c
  5748  001FD4  D021               	goto	l1064
  5749  001FD6  0E01               	movlw	1
  5750  001FD8  6E07               	movwf	___lwdiv@counter,c
  5751  001FDA  D005               	goto	l2374
  5752  001FDC                     l2372:
  5753  001FDC  90D8               	bcf	status,0,c
  5754  001FDE  3603               	rlcf	___lwdiv@divisor,f,c
  5755  001FE0  3604               	rlcf	___lwdiv@divisor+1,f,c
  5756  001FE2  2A07               	incf	___lwdiv@counter,f,c
  5757  001FE4  D000               	goto	l2374
  5758  001FE6                     l2374:
  5759  001FE6  BE04               	btfsc	___lwdiv@divisor+1,7,c
  5760  001FE8  D002               	goto	l2376
  5761  001FEA  D7F8               	goto	l2372
  5762  001FEC  D000               	goto	l2376
  5763  001FEE                     l2376:
  5764  001FEE  90D8               	bcf	status,0,c
  5765  001FF0  3605               	rlcf	___lwdiv@quotient,f,c
  5766  001FF2  3606               	rlcf	___lwdiv@quotient+1,f,c
  5767  001FF4  5003               	movf	___lwdiv@divisor,w,c
  5768  001FF6  5C01               	subwf	___lwdiv@dividend,w,c
  5769  001FF8  5004               	movf	___lwdiv@divisor+1,w,c
  5770  001FFA  5802               	subwfb	___lwdiv@dividend+1,w,c
  5771  001FFC  A0D8               	btfss	status,0,c
  5772  001FFE  D006               	goto	l2384
  5773  002000  5003               	movf	___lwdiv@divisor,w,c
  5774  002002  5E01               	subwf	___lwdiv@dividend,f,c
  5775  002004  5004               	movf	___lwdiv@divisor+1,w,c
  5776  002006  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5777  002008  8005               	bsf	___lwdiv@quotient,0,c
  5778  00200A  D000               	goto	l2384
  5779  00200C                     l2384:
  5780  00200C  90D8               	bcf	status,0,c
  5781  00200E  3204               	rrcf	___lwdiv@divisor+1,f,c
  5782  002010  3203               	rrcf	___lwdiv@divisor,f,c
  5783  002012  2E07               	decfsz	___lwdiv@counter,f,c
  5784  002014  D7EC               	goto	l2376
  5785  002016  D000               	goto	l1064
  5786  002018                     l1064:
  5787  002018  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5788  00201C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5789  002020  0012               	return		;funcret
  5790  002022                     __end_of___lwdiv:
  5791                           	opt stack 0
  5792                           tblptru	equ	0xFF8
  5793                           tblptrh	equ	0xFF7
  5794                           tblptrl	equ	0xFF6
  5795                           tablat	equ	0xFF5
  5796                           prodh	equ	0xFF4
  5797                           prodl	equ	0xFF3
  5798                           intcon	equ	0xFF2
  5799                           postinc0	equ	0xFEE
  5800                           wreg	equ	0xFE8
  5801                           indf1	equ	0xFE7
  5802                           postdec1	equ	0xFE5
  5803                           fsr1h	equ	0xFE2
  5804                           fsr1l	equ	0xFE1
  5805                           indf2	equ	0xFDF
  5806                           postinc2	equ	0xFDE
  5807                           postdec2	equ	0xFDD
  5808                           fsr2h	equ	0xFDA
  5809                           fsr2l	equ	0xFD9
  5810                           status	equ	0xFD8
  5811                           
  5812 ;; *************** function _lcd_write *****************
  5813 ;; Defined at:
  5814 ;;		line 50 in file "main.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  column          2   10[COMRAM] int 
  5817 ;;  row             2   12[COMRAM] int 
  5818 ;;  string          2   14[COMRAM] PTR unsigned char 
  5819 ;;		 -> STR_34(5), STR_33(8), STR_32(7), STR_31(6), 
  5820 ;;		 -> STR_30(8), STR_29(4), STR_28(5), STR_27(6), 
  5821 ;;		 -> STR_26(6), STR_25(3), STR_24(3), STR_23(8), 
  5822 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  5823 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  5824 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  5825 ;;		 -> STR_10(7), STR_9(4), STR_8(6), STR_7(8), 
  5826 ;;		 -> STR_6(16), STR_4(4), buffer1(20), 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5838 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;Total ram usage:        6 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    5
  5845 ;; This function calls:
  5846 ;;		_lcd_gotoxy
  5847 ;;		_lcd_putrs
  5848 ;; This function is called by:
  5849 ;;		_home_clock_refresh
  5850 ;;		_activity_home
  5851 ;;		_activity_pin
  5852 ;;		_activity_menu
  5853 ;;		_action_menu_selector
  5854 ;;		_action_submenu_selector
  5855 ;;		_activity_submenu_activation
  5856 ;;		_activity_submenu_clock
  5857 ;;		_activity_submenu_pin
  5858 ;;		_activity_submenu_alarm
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text37
  5863  00242E                     __ptext37:
  5864                           	opt stack 0
  5865  00242E                     _lcd_write:
  5866                           	opt stack 21
  5867                           
  5868                           ;main.c: 51: lcd_gotoxy(column, row);
  5869                           
  5870                           ;incstack = 0
  5871  00242E  C00D  F005         	movff	lcd_write@row,lcd_gotoxy@y
  5872  002432  500B               	movf	lcd_write@column,w,c
  5873  002434  ECE8  F011         	call	_lcd_gotoxy
  5874                           
  5875                           ;main.c: 52: lcd_putrs(string);
  5876  002438  C00F  F009         	movff	lcd_write@string,lcd_putrs@ptr
  5877  00243C  C010  F00A         	movff	lcd_write@string+1,lcd_putrs@ptr+1
  5878  002440  EC11  F010         	call	_lcd_putrs	;wreg free
  5879  002444  0012               	return		;funcret
  5880  002446                     __end_of_lcd_write:
  5881                           	opt stack 0
  5882                           tblptru	equ	0xFF8
  5883                           tblptrh	equ	0xFF7
  5884                           tblptrl	equ	0xFF6
  5885                           tablat	equ	0xFF5
  5886                           prodh	equ	0xFF4
  5887                           prodl	equ	0xFF3
  5888                           intcon	equ	0xFF2
  5889                           postinc0	equ	0xFEE
  5890                           wreg	equ	0xFE8
  5891                           indf1	equ	0xFE7
  5892                           postdec1	equ	0xFE5
  5893                           fsr1h	equ	0xFE2
  5894                           fsr1l	equ	0xFE1
  5895                           indf2	equ	0xFDF
  5896                           postinc2	equ	0xFDE
  5897                           postdec2	equ	0xFDD
  5898                           fsr2h	equ	0xFDA
  5899                           fsr2l	equ	0xFD9
  5900                           status	equ	0xFD8
  5901                           
  5902 ;; *************** function _lcd_putrs *****************
  5903 ;; Defined at:
  5904 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  5907 ;;		 -> STR_36(2), STR_35(2), STR_34(5), STR_33(8), 
  5908 ;;		 -> STR_32(7), STR_31(6), STR_30(8), STR_29(4), 
  5909 ;;		 -> STR_28(5), STR_27(6), STR_26(6), STR_25(3), 
  5910 ;;		 -> STR_24(3), STR_23(8), STR_22(2), STR_21(2), 
  5911 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
  5912 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  5913 ;;		 -> STR_12(2), STR_11(2), STR_10(7), STR_9(4), 
  5914 ;;		 -> STR_8(6), STR_7(8), STR_6(16), STR_4(4), 
  5915 ;;		 -> buffer1(20), 
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;		None               void
  5920 ;; Registers used:
  5921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5931 ;;Total ram usage:        2 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    4
  5934 ;; This function calls:
  5935 ;;		_lcd_putc
  5936 ;; This function is called by:
  5937 ;;		_lcd_write
  5938 ;;		_button_asterisk
  5939 ;;		_button_number
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text38
  5944  002022                     __ptext38:
  5945                           	opt stack 0
  5946  002022                     _lcd_putrs:
  5947                           	opt stack 24
  5948                           
  5949                           ;unmc_lcd_216.c: 223: while(*ptr){
  5950                           
  5951                           ;incstack = 0
  5952  002022  D015               	goto	l2258
  5953  002024                     l2254:
  5954                           
  5955                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  5956  002024  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5957  002028  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5958  00202C  6AF8               	clrf	tblptru,c
  5959  00202E  0E0E               	movlw	(high __ramtop+-1)
  5960  002030  64F7               	cpfsgt	tblptrh,c
  5961  002032  D003               	bra	u1277
  5962  002034  0008               	tblrd		*
  5963  002036  50F5               	movf	tablat,w,c
  5964  002038  D005               	bra	u1270
  5965  00203A                     u1277:
  5966  00203A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5967  00203E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5968  002042  50EF               	movf	indf0,w,c
  5969  002044                     u1270:
  5970  002044  ECD8  F010         	call	_lcd_putc
  5971  002048  4A09               	infsnz	lcd_putrs@ptr,f,c
  5972  00204A  2A0A               	incf	lcd_putrs@ptr+1,f,c
  5973  00204C  D000               	goto	l2258
  5974  00204E                     l2258:
  5975  00204E  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5976  002052  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5977  002056  6AF8               	clrf	tblptru,c
  5978  002058  0E0E               	movlw	(high __ramtop+-1)
  5979  00205A  64F7               	cpfsgt	tblptrh,c
  5980  00205C  D003               	bra	u1287
  5981  00205E  0008               	tblrd		*
  5982  002060  50F5               	movf	tablat,w,c
  5983  002062  D005               	bra	u1280
  5984  002064                     u1287:
  5985  002064  CFF6 FFE9          	movff	tblptrl,fsr0l
  5986  002068  CFF7 FFEA          	movff	tblptrh,fsr0h
  5987  00206C  50EF               	movf	indf0,w,c
  5988  00206E                     u1280:
  5989  00206E  0900               	iorlw	0
  5990  002070  A4D8               	btfss	status,2,c
  5991  002072  D7D8               	goto	l2254
  5992  002074  0012               	return		;funcret
  5993  002076                     __end_of_lcd_putrs:
  5994                           	opt stack 0
  5995                           tblptru	equ	0xFF8
  5996                           tblptrh	equ	0xFF7
  5997                           tblptrl	equ	0xFF6
  5998                           tablat	equ	0xFF5
  5999                           prodh	equ	0xFF4
  6000                           prodl	equ	0xFF3
  6001                           intcon	equ	0xFF2
  6002                           indf0	equ	0xFEF
  6003                           postinc0	equ	0xFEE
  6004                           fsr0h	equ	0xFEA
  6005                           fsr0l	equ	0xFE9
  6006                           wreg	equ	0xFE8
  6007                           indf1	equ	0xFE7
  6008                           postdec1	equ	0xFE5
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           indf2	equ	0xFDF
  6012                           postinc2	equ	0xFDE
  6013                           postdec2	equ	0xFDD
  6014                           fsr2h	equ	0xFDA
  6015                           fsr2l	equ	0xFD9
  6016                           status	equ	0xFD8
  6017                           
  6018 ;; *************** function _lcd_putc *****************
  6019 ;; Defined at:
  6020 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  c               1    wreg     unsigned char 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  c               1    7[COMRAM] unsigned char 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;		None               void
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6038 ;;Total ram usage:        1 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; Hardware stack levels required when called:    3
  6041 ;; This function calls:
  6042 ;;		_lcd_gotoxy
  6043 ;;		_lcd_send_byte
  6044 ;; This function is called by:
  6045 ;;		_lcd_putrs
  6046 ;;		_lcd_puts
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text39
  6051  0021B0                     __ptext39:
  6052                           	opt stack 0
  6053  0021B0                     _lcd_putc:
  6054                           	opt stack 24
  6055                           
  6056                           ;incstack = 0
  6057                           ;lcd_putc@c stored from wreg
  6058  0021B0  6E08               	movwf	lcd_putc@c,c
  6059                           
  6060                           ;unmc_lcd_216.c: 173: switch(c){
  6061  0021B2  D018               	goto	l2246
  6062  0021B4                     l2236:
  6063                           
  6064                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  6065  0021B4  0E01               	movlw	1
  6066  0021B6  6E03               	movwf	lcd_send_byte@n,c
  6067  0021B8  0E00               	movlw	0
  6068  0021BA  EC94  F011         	call	_lcd_send_byte
  6069                           
  6070                           ;unmc_lcd_216.c: 176: break;
  6071  0021BE  0012               	return	
  6072  0021C0                     l2238:
  6073                           
  6074                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  6075  0021C0  0E02               	movlw	2
  6076  0021C2  6E05               	movwf	lcd_gotoxy@y,c
  6077  0021C4  0E01               	movlw	1
  6078  0021C6  ECE8  F011         	call	_lcd_gotoxy
  6079                           
  6080                           ;unmc_lcd_216.c: 179: break;
  6081  0021CA  0012               	return	
  6082  0021CC                     l2240:
  6083                           
  6084                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  6085  0021CC  0E10               	movlw	16
  6086  0021CE  6E03               	movwf	lcd_send_byte@n,c
  6087  0021D0  0E00               	movlw	0
  6088  0021D2  EC94  F011         	call	_lcd_send_byte
  6089                           
  6090                           ;unmc_lcd_216.c: 182: break;
  6091  0021D6  0012               	return	
  6092  0021D8                     l2242:
  6093                           
  6094                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  6095  0021D8  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  6096  0021DC  0E01               	movlw	1
  6097  0021DE  EC94  F011         	call	_lcd_send_byte
  6098                           
  6099                           ;unmc_lcd_216.c: 186: }
  6100                           
  6101                           ;unmc_lcd_216.c: 185: break;
  6102  0021E2  0012               	return	
  6103  0021E4                     l2246:
  6104  0021E4  5008               	movf	lcd_putc@c,w,c
  6105                           
  6106                           ; Switch size 1, requested type "space"
  6107                           ; Number of cases is 3, Range of values is 8 to 12
  6108                           ; switch strategies available:
  6109                           ; Name         Instructions Cycles
  6110                           ; simple_byte           10     6 (average)
  6111                           ;	Chosen strategy is simple_byte
  6112  0021E6  0A08               	xorlw	8	; case 8
  6113  0021E8  B4D8               	btfsc	status,2,c
  6114  0021EA  D7F0               	goto	l2240
  6115  0021EC  0A02               	xorlw	2	; case 10
  6116  0021EE  B4D8               	btfsc	status,2,c
  6117  0021F0  D7E7               	goto	l2238
  6118  0021F2  0A06               	xorlw	6	; case 12
  6119  0021F4  B4D8               	btfsc	status,2,c
  6120  0021F6  D7DE               	goto	l2236
  6121  0021F8  D7EF               	goto	l2242
  6122  0021FA  0012               	return		;funcret
  6123  0021FC                     __end_of_lcd_putc:
  6124                           	opt stack 0
  6125                           tblptru	equ	0xFF8
  6126                           tblptrh	equ	0xFF7
  6127                           tblptrl	equ	0xFF6
  6128                           tablat	equ	0xFF5
  6129                           prodh	equ	0xFF4
  6130                           prodl	equ	0xFF3
  6131                           intcon	equ	0xFF2
  6132                           indf0	equ	0xFEF
  6133                           postinc0	equ	0xFEE
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           indf1	equ	0xFE7
  6138                           postdec1	equ	0xFE5
  6139                           fsr1h	equ	0xFE2
  6140                           fsr1l	equ	0xFE1
  6141                           indf2	equ	0xFDF
  6142                           postinc2	equ	0xFDE
  6143                           postdec2	equ	0xFDD
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function _lcd_gotoxy *****************
  6149 ;; Defined at:
  6150 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  x               1    wreg     unsigned char 
  6153 ;;  y               1    4[COMRAM] unsigned char 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  x               1    5[COMRAM] unsigned char 
  6156 ;;  address         1    6[COMRAM] unsigned char 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;		None               void
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6166 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6170 ;;Total ram usage:        3 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    2
  6173 ;; This function calls:
  6174 ;;		_lcd_send_byte
  6175 ;; This function is called by:
  6176 ;;		_lcd_write
  6177 ;;		_activity_pin
  6178 ;;		_lcd_putc
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text40
  6183  0023D0                     __ptext40:
  6184                           	opt stack 0
  6185  0023D0                     _lcd_gotoxy:
  6186                           	opt stack 24
  6187                           
  6188                           ;incstack = 0
  6189                           ;lcd_gotoxy@x stored from wreg
  6190  0023D0  6E06               	movwf	lcd_gotoxy@x,c
  6191                           
  6192                           ;unmc_lcd_216.c: 159: int8 address;
  6193                           ;unmc_lcd_216.c: 161: if(y != 1)
  6194  0023D2  0405               	decf	lcd_gotoxy@y,w,c
  6195  0023D4  B4D8               	btfsc	status,2,c
  6196  0023D6  D002               	goto	l2228
  6197                           
  6198                           ;unmc_lcd_216.c: 162: address = 0x40;
  6199  0023D8  0E40               	movlw	64
  6200  0023DA  D001               	goto	L1
  6201  0023DC                     l2228:
  6202                           
  6203                           ;unmc_lcd_216.c: 163: else
  6204                           ;unmc_lcd_216.c: 164: address=0;
  6205  0023DC  0E00               	movlw	0
  6206  0023DE                     L1:
  6207  0023DE  6E07               	movwf	lcd_gotoxy@address,c
  6208  0023E0  D000               	goto	l2230
  6209  0023E2                     l2230:
  6210                           
  6211                           ;unmc_lcd_216.c: 166: address += x-1;
  6212  0023E2  0406               	decf	lcd_gotoxy@x,w,c
  6213  0023E4  2607               	addwf	lcd_gotoxy@address,f,c
  6214                           
  6215                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  6216  0023E6  5007               	movf	lcd_gotoxy@address,w,c
  6217  0023E8  0980               	iorlw	128
  6218  0023EA  6E03               	movwf	lcd_send_byte@n,c
  6219  0023EC  0E00               	movlw	0
  6220  0023EE  EC94  F011         	call	_lcd_send_byte
  6221  0023F2  0012               	return		;funcret
  6222  0023F4                     __end_of_lcd_gotoxy:
  6223                           	opt stack 0
  6224                           tblptru	equ	0xFF8
  6225                           tblptrh	equ	0xFF7
  6226                           tblptrl	equ	0xFF6
  6227                           tablat	equ	0xFF5
  6228                           prodh	equ	0xFF4
  6229                           prodl	equ	0xFF3
  6230                           intcon	equ	0xFF2
  6231                           indf0	equ	0xFEF
  6232                           postinc0	equ	0xFEE
  6233                           fsr0h	equ	0xFEA
  6234                           fsr0l	equ	0xFE9
  6235                           wreg	equ	0xFE8
  6236                           indf1	equ	0xFE7
  6237                           postdec1	equ	0xFE5
  6238                           fsr1h	equ	0xFE2
  6239                           fsr1l	equ	0xFE1
  6240                           indf2	equ	0xFDF
  6241                           postinc2	equ	0xFDE
  6242                           postdec2	equ	0xFDD
  6243                           fsr2h	equ	0xFDA
  6244                           fsr2l	equ	0xFD9
  6245                           status	equ	0xFD8
  6246                           
  6247 ;; *************** function _lcd_send_byte *****************
  6248 ;; Defined at:
  6249 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  address         1    wreg     unsigned char 
  6252 ;;  n               1    2[COMRAM] unsigned char 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  address         1    3[COMRAM] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;		None               void
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6264 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6268 ;;Total ram usage:        2 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    1
  6271 ;; This function calls:
  6272 ;;		_Delay100TCYx
  6273 ;;		_lcd_send_nibble
  6274 ;; This function is called by:
  6275 ;;		_lcd_init
  6276 ;;		_lcd_gotoxy
  6277 ;;		_lcd_putc
  6278 ;;		_lcd_comand
  6279 ;;		_lcd_setcursor_vb
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text41
  6284  002328                     __ptext41:
  6285                           	opt stack 0
  6286  002328                     _lcd_send_byte:
  6287                           	opt stack 27
  6288                           
  6289                           ;incstack = 0
  6290                           ;lcd_send_byte@address stored from wreg
  6291  002328  6E04               	movwf	lcd_send_byte@address,c
  6292                           
  6293                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  6294  00232A  968A               	bcf	3978,3,c	;volatile
  6295                           
  6296                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  6297  00232C  0E02               	movlw	2
  6298  00232E  EC35  F012         	call	_Delay100TCYx
  6299                           
  6300                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  6301  002332  9893               	bcf	3987,4,c	;volatile
  6302                           
  6303                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  6304  002334  9A93               	bcf	3987,5,c	;volatile
  6305                           
  6306                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  6307  002336  9C93               	bcf	3987,6,c	;volatile
  6308                           
  6309                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  6310  002338  9E93               	bcf	3987,7,c	;volatile
  6311                           
  6312                           ;unmc_lcd_216.c: 101: if(address)
  6313  00233A  5004               	movf	lcd_send_byte@address,w,c
  6314  00233C  B4D8               	btfsc	status,2,c
  6315  00233E  D002               	goto	l341
  6316                           
  6317                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  6318  002340  868A               	bsf	3978,3,c	;volatile
  6319  002342  D001               	goto	l342
  6320  002344                     l341:
  6321                           
  6322                           ;unmc_lcd_216.c: 103: else
  6323                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  6324  002344  968A               	bcf	3978,3,c	;volatile
  6325  002346                     l342:
  6326                           
  6327                           ;unmc_lcd_216.c: 106: __nop();
  6328  002346  F000               	nop	
  6329                           
  6330                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  6331  002348  3803               	swapf	lcd_send_byte@n,w,c
  6332  00234A  0B0F               	andlw	15
  6333  00234C  EC3C  F00E         	call	_lcd_send_nibble
  6334                           
  6335                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  6336  002350  5003               	movf	lcd_send_byte@n,w,c
  6337  002352  0B0F               	andlw	15
  6338  002354  EC3C  F00E         	call	_lcd_send_nibble
  6339  002358  0012               	return		;funcret
  6340  00235A                     __end_of_lcd_send_byte:
  6341                           	opt stack 0
  6342                           tblptru	equ	0xFF8
  6343                           tblptrh	equ	0xFF7
  6344                           tblptrl	equ	0xFF6
  6345                           tablat	equ	0xFF5
  6346                           prodh	equ	0xFF4
  6347                           prodl	equ	0xFF3
  6348                           intcon	equ	0xFF2
  6349                           indf0	equ	0xFEF
  6350                           postinc0	equ	0xFEE
  6351                           fsr0h	equ	0xFEA
  6352                           fsr0l	equ	0xFE9
  6353                           wreg	equ	0xFE8
  6354                           indf1	equ	0xFE7
  6355                           postdec1	equ	0xFE5
  6356                           fsr1h	equ	0xFE2
  6357                           fsr1l	equ	0xFE1
  6358                           indf2	equ	0xFDF
  6359                           postinc2	equ	0xFDE
  6360                           postdec2	equ	0xFDD
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8
  6364                           
  6365 ;; *************** function _lcd_send_nibble *****************
  6366 ;; Defined at:
  6367 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  nibble          1    wreg     unsigned char 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  nibble          1    1[COMRAM] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;		None               void
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6385 ;;Total ram usage:        2 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_lcd_send_byte
  6391 ;;		_lcd_init
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text42
  6396  001C78                     __ptext42:
  6397                           	opt stack 0
  6398  001C78                     _lcd_send_nibble:
  6399                           	opt stack 28
  6400                           
  6401                           ;incstack = 0
  6402                           ;lcd_send_nibble@nibble stored from wreg
  6403  001C78  6E02               	movwf	lcd_send_nibble@nibble,c
  6404                           
  6405                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  6406  001C7A  A002               	btfss	lcd_send_nibble@nibble,0,c
  6407  001C7C  D003               	goto	u1170
  6408  001C7E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6409  001C80  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6410  001C82  D001               	goto	u1188
  6411  001C84                     u1170:
  6412  001C84  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6413  001C86                     u1188:
  6414  001C86  3A01               	swapf	??_lcd_send_nibble,f,c
  6415  001C88  508A               	movf	3978,w,c	;volatile
  6416  001C8A  1801               	xorwf	??_lcd_send_nibble,w,c
  6417  001C8C  0BEF               	andlw	-17
  6418  001C8E  1801               	xorwf	??_lcd_send_nibble,w,c
  6419  001C90  6E8A               	movwf	3978,c	;volatile
  6420                           
  6421                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  6422  001C92  A202               	btfss	lcd_send_nibble@nibble,1,c
  6423  001C94  D003               	goto	u1190
  6424  001C96  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6425  001C98  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6426  001C9A  D001               	goto	u1208
  6427  001C9C                     u1190:
  6428  001C9C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6429  001C9E                     u1208:
  6430  001C9E  3A01               	swapf	??_lcd_send_nibble,f,c
  6431  001CA0  4601               	rlncf	??_lcd_send_nibble,f,c
  6432  001CA2  508A               	movf	3978,w,c	;volatile
  6433  001CA4  1801               	xorwf	??_lcd_send_nibble,w,c
  6434  001CA6  0BDF               	andlw	-33
  6435  001CA8  1801               	xorwf	??_lcd_send_nibble,w,c
  6436  001CAA  6E8A               	movwf	3978,c	;volatile
  6437                           
  6438                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  6439  001CAC  A402               	btfss	lcd_send_nibble@nibble,2,c
  6440  001CAE  D003               	goto	u1210
  6441  001CB0  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6442  001CB2  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6443  001CB4  D001               	goto	u1228
  6444  001CB6                     u1210:
  6445  001CB6  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6446  001CB8                     u1228:
  6447  001CB8  3A01               	swapf	??_lcd_send_nibble,f,c
  6448  001CBA  4601               	rlncf	??_lcd_send_nibble,f,c
  6449  001CBC  4601               	rlncf	??_lcd_send_nibble,f,c
  6450  001CBE  508A               	movf	3978,w,c	;volatile
  6451  001CC0  1801               	xorwf	??_lcd_send_nibble,w,c
  6452  001CC2  0BBF               	andlw	-65
  6453  001CC4  1801               	xorwf	??_lcd_send_nibble,w,c
  6454  001CC6  6E8A               	movwf	3978,c	;volatile
  6455                           
  6456                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  6457  001CC8  A602               	btfss	lcd_send_nibble@nibble,3,c
  6458  001CCA  D003               	goto	u1230
  6459  001CCC  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6460  001CCE  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6461  001CD0  D001               	goto	u1248
  6462  001CD2                     u1230:
  6463  001CD2  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6464  001CD4                     u1248:
  6465  001CD4  3201               	rrcf	??_lcd_send_nibble,f,c
  6466  001CD6  3201               	rrcf	??_lcd_send_nibble,f,c
  6467  001CD8  508A               	movf	3978,w,c	;volatile
  6468  001CDA  1801               	xorwf	??_lcd_send_nibble,w,c
  6469  001CDC  0B7F               	andlw	-129
  6470  001CDE  1801               	xorwf	??_lcd_send_nibble,w,c
  6471  001CE0  6E8A               	movwf	3978,c	;volatile
  6472                           
  6473                           ;unmc_lcd_216.c: 32: __nop();
  6474  001CE2  F000               	nop	
  6475                           
  6476                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  6477  001CE4  848A               	bsf	3978,2,c	;volatile
  6478                           
  6479                           ;unmc_lcd_216.c: 34: __nop();__nop();
  6480  001CE6  F000               	nop	
  6481  001CE8  F000               	nop	
  6482                           
  6483                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  6484  001CEA  948A               	bcf	3978,2,c	;volatile
  6485  001CEC  0012               	return		;funcret
  6486  001CEE                     __end_of_lcd_send_nibble:
  6487                           	opt stack 0
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           prodh	equ	0xFF4
  6493                           prodl	equ	0xFF3
  6494                           intcon	equ	0xFF2
  6495                           indf0	equ	0xFEF
  6496                           postinc0	equ	0xFEE
  6497                           fsr0h	equ	0xFEA
  6498                           fsr0l	equ	0xFE9
  6499                           wreg	equ	0xFE8
  6500                           indf1	equ	0xFE7
  6501                           postdec1	equ	0xFE5
  6502                           fsr1h	equ	0xFE2
  6503                           fsr1l	equ	0xFE1
  6504                           indf2	equ	0xFDF
  6505                           postinc2	equ	0xFDE
  6506                           postdec2	equ	0xFDD
  6507                           fsr2h	equ	0xFDA
  6508                           fsr2l	equ	0xFD9
  6509                           status	equ	0xFD8
  6510                           
  6511 ;; *************** function _Delay100TCYx *****************
  6512 ;; Defined at:
  6513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  unit            1    wreg     unsigned char 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  unit            1    0[COMRAM] unsigned char 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;		None               void
  6520 ;; Registers used:
  6521 ;;		wreg
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;Total ram usage:        1 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_lcd_send_byte
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text43
  6541  00246A                     __ptext43:
  6542                           	opt stack 0
  6543  00246A                     _Delay100TCYx:
  6544                           	opt stack 27
  6545                           
  6546                           ;incstack = 0
  6547                           ;Delay100TCYx@unit stored from wreg
  6548  00246A  6E01               	movwf	Delay100TCYx@unit,c
  6549  00246C  0E21               	movlw	33
  6550  00246E                     u2357:
  6551  00246E  2EE8               	decfsz	wreg,f,c
  6552  002470  D7FE               	goto	u2357
  6553  002472  F000               	nop	
  6554  002474  2E01               	decfsz	Delay100TCYx@unit,f,c
  6555  002476  D7FA               	goto	l2202
  6556  002478  0012               	return	
  6557  00247A  0012               	return		;funcret
  6558  00247C                     __end_of_Delay100TCYx:
  6559                           	opt stack 0
  6560                           tblptru	equ	0xFF8
  6561                           tblptrh	equ	0xFF7
  6562                           tblptrl	equ	0xFF6
  6563                           tablat	equ	0xFF5
  6564                           prodh	equ	0xFF4
  6565                           prodl	equ	0xFF3
  6566                           intcon	equ	0xFF2
  6567                           indf0	equ	0xFEF
  6568                           postinc0	equ	0xFEE
  6569                           fsr0h	equ	0xFEA
  6570                           fsr0l	equ	0xFE9
  6571                           wreg	equ	0xFE8
  6572                           indf1	equ	0xFE7
  6573                           postdec1	equ	0xFE5
  6574                           fsr1h	equ	0xFE2
  6575                           fsr1l	equ	0xFE1
  6576                           indf2	equ	0xFDF
  6577                           postinc2	equ	0xFDE
  6578                           postdec2	equ	0xFDD
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583 ;; *************** function _Read_RTC *****************
  6584 ;; Defined at:
  6585 ;;		line 111 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;		None               void
  6592 ;; Registers used:
  6593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    1
  6606 ;; This function calls:
  6607 ;;		_RtccReadDate
  6608 ;;		_RtccReadTime
  6609 ;; This function is called by:
  6610 ;;		_main
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text44
  6615  001844                     __ptext44:
  6616                           	opt stack 0
  6617  001844                     _Read_RTC:
  6618                           	opt stack 29
  6619                           
  6620                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  6621                           
  6622                           ;incstack = 0
  6623  001844  0E44               	movlw	low _RtccTime
  6624  001846  6E01               	movwf	RtccReadTime@pTm,c
  6625  001848  0E00               	movlw	high _RtccTime
  6626  00184A  6E02               	movwf	RtccReadTime@pTm+1,c
  6627  00184C  ECE8  F00E         	call	_RtccReadTime	;wreg free
  6628                           
  6629                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  6630  001850  5045               	movf	_RtccTime+1,w,c
  6631  001852  0B0F               	andlw	15
  6632  001854  6E54               	movwf	_segundo_u,c
  6633                           
  6634                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  6635  001856  3845               	swapf	_RtccTime+1,w,c
  6636  001858  0B0F               	andlw	15
  6637  00185A  0B0F               	andlw	15
  6638  00185C  6E53               	movwf	_segundo_d,c
  6639                           
  6640                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  6641  00185E  5046               	movf	_RtccTime+2,w,c
  6642  001860  0B0F               	andlw	15
  6643  001862  6E52               	movwf	_minuto_u,c
  6644                           
  6645                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  6646  001864  3846               	swapf	_RtccTime+2,w,c
  6647  001866  0B0F               	andlw	15
  6648  001868  0B0F               	andlw	15
  6649  00186A  6E51               	movwf	_minuto_d,c
  6650                           
  6651                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  6652  00186C  5047               	movf	_RtccTime+3,w,c
  6653  00186E  0B0F               	andlw	15
  6654  001870  6E4E               	movwf	_hora_u,c
  6655                           
  6656                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  6657  001872  3847               	swapf	_RtccTime+3,w,c
  6658  001874  0B0F               	andlw	15
  6659  001876  0B0F               	andlw	15
  6660  001878  6E4D               	movwf	_hora_d,c
  6661                           
  6662                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  6663  00187A  0E40               	movlw	low _RtccDate
  6664  00187C  6E01               	movwf	RtccReadDate@pDt,c
  6665  00187E  0E00               	movlw	high _RtccDate
  6666  001880  6E02               	movwf	RtccReadDate@pDt+1,c
  6667  001882  EC76  F00D         	call	_RtccReadDate	;wreg free
  6668                           
  6669                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  6670  001886  5041               	movf	_RtccDate+1,w,c
  6671  001888  0B0F               	andlw	15
  6672  00188A  6E4C               	movwf	_fecha_u,c
  6673                           
  6674                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  6675  00188C  3841               	swapf	_RtccDate+1,w,c
  6676  00188E  0B0F               	andlw	15
  6677  001890  0B0F               	andlw	15
  6678  001892  6E4B               	movwf	_fecha_d,c
  6679                           
  6680                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  6681  001894  5042               	movf	_RtccDate+2,w,c
  6682  001896  0B0F               	andlw	15
  6683  001898  6E50               	movwf	_mes_u,c
  6684                           
  6685                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  6686  00189A  3842               	swapf	_RtccDate+2,w,c
  6687  00189C  0B0F               	andlw	15
  6688  00189E  0B0F               	andlw	15
  6689  0018A0  6E4F               	movwf	_mes_d,c
  6690                           
  6691                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  6692  0018A2  C040  F04A         	movff	_RtccDate,_dia_semana
  6693                           
  6694                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  6695  0018A6  5043               	movf	_RtccDate+3,w,c
  6696  0018A8  0B0F               	andlw	15
  6697  0018AA  6E49               	movwf	_anio_u,c
  6698                           
  6699                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  6700  0018AC  3843               	swapf	_RtccDate+3,w,c
  6701  0018AE  0B0F               	andlw	15
  6702  0018B0  0B0F               	andlw	15
  6703  0018B2  6E48               	movwf	_anio_d,c
  6704                           
  6705                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  6706  0018B4  5053               	movf	_segundo_d,w,c
  6707  0018B6  0D0A               	mullw	10
  6708  0018B8  5054               	movf	_segundo_u,w,c
  6709  0018BA  24F3               	addwf	prodl,w,c
  6710  0018BC  6E39               	movwf	_segundo,c
  6711  0018BE  0E00               	movlw	0
  6712  0018C0  20F4               	addwfc	prodh,w,c
  6713  0018C2  6E3A               	movwf	_segundo+1,c
  6714                           
  6715                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  6716  0018C4  5051               	movf	_minuto_d,w,c
  6717  0018C6  0D0A               	mullw	10
  6718  0018C8  5052               	movf	_minuto_u,w,c
  6719  0018CA  24F3               	addwf	prodl,w,c
  6720  0018CC  6E37               	movwf	_minuto,c
  6721  0018CE  0E00               	movlw	0
  6722  0018D0  20F4               	addwfc	prodh,w,c
  6723  0018D2  6E38               	movwf	_minuto+1,c
  6724                           
  6725                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  6726  0018D4  504D               	movf	_hora_d,w,c
  6727  0018D6  0D0A               	mullw	10
  6728  0018D8  504E               	movf	_hora_u,w,c
  6729  0018DA  24F3               	addwf	prodl,w,c
  6730  0018DC  6E5B               	movwf	_hora,c
  6731  0018DE  0E00               	movlw	0
  6732  0018E0  20F4               	addwfc	prodh,w,c
  6733  0018E2  6E5C               	movwf	_hora+1,c
  6734                           
  6735                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  6736  0018E4  504B               	movf	_fecha_d,w,c
  6737  0018E6  0D0A               	mullw	10
  6738  0018E8  504C               	movf	_fecha_u,w,c
  6739  0018EA  24F3               	addwf	prodl,w,c
  6740  0018EC  6E57               	movwf	_dia,c
  6741  0018EE  0E00               	movlw	0
  6742  0018F0  20F4               	addwfc	prodh,w,c
  6743  0018F2  6E58               	movwf	_dia+1,c
  6744                           
  6745                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  6746  0018F4  C04A  F059         	movff	_dia_semana,_diasem
  6747  0018F8  6A5A               	clrf	_diasem+1,c
  6748                           
  6749                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  6750  0018FA  504F               	movf	_mes_d,w,c
  6751  0018FC  0D0A               	mullw	10
  6752  0018FE  5050               	movf	_mes_u,w,c
  6753  001900  24F3               	addwf	prodl,w,c
  6754  001902  6E5D               	movwf	_mes,c
  6755  001904  0E00               	movlw	0
  6756  001906  20F4               	addwfc	prodh,w,c
  6757  001908  6E5E               	movwf	_mes+1,c
  6758                           
  6759                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  6760  00190A  5048               	movf	_anio_d,w,c
  6761  00190C  0D0A               	mullw	10
  6762  00190E  5049               	movf	_anio_u,w,c
  6763  001910  24F3               	addwf	prodl,w,c
  6764  001912  6E55               	movwf	_anio,c
  6765  001914  0E00               	movlw	0
  6766  001916  20F4               	addwfc	prodh,w,c
  6767  001918  6E56               	movwf	_anio+1,c
  6768  00191A  0012               	return		;funcret
  6769  00191C                     __end_of_Read_RTC:
  6770                           	opt stack 0
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           intcon	equ	0xFF2
  6778                           indf0	equ	0xFEF
  6779                           postinc0	equ	0xFEE
  6780                           fsr0h	equ	0xFEA
  6781                           fsr0l	equ	0xFE9
  6782                           wreg	equ	0xFE8
  6783                           indf1	equ	0xFE7
  6784                           postdec1	equ	0xFE5
  6785                           fsr1h	equ	0xFE2
  6786                           fsr1l	equ	0xFE1
  6787                           indf2	equ	0xFDF
  6788                           postinc2	equ	0xFDE
  6789                           postdec2	equ	0xFDD
  6790                           fsr2h	equ	0xFDA
  6791                           fsr2l	equ	0xFD9
  6792                           status	equ	0xFD8
  6793                           
  6794 ;; *************** function _RtccReadTime *****************
  6795 ;; Defined at:
  6796 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  pTm             2    0[COMRAM] PTR struct .
  6799 ;;		 -> RtccTime(4), 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;  rTD0            8   10[COMRAM] struct .
  6802 ;;  rTD1            8    2[COMRAM] struct .
  6803 ;; Return value:  Size  Location     Type
  6804 ;;		None               void
  6805 ;; Registers used:
  6806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6813 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;Total ram usage:       18 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_Read_RTC
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text45
  6826  001DD0                     __ptext45:
  6827                           	opt stack 0
  6828  001DD0                     _RtccReadTime:
  6829                           	opt stack 29
  6830  001DD0  0EFC               	movlw	252
  6831  001DD2  010F               	movlb	15	; () banked
  6832  001DD4  173F               	andwf	63,f,b	;volatile
  6833                           
  6834                           ; BSR set to: 15
  6835  001DD6  010F               	movlb	15	; () banked
  6836  001DD8  813F               	bsf	63,0,b	;volatile
  6837                           
  6838                           ; BSR set to: 15
  6839  001DDA  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  6840                           
  6841                           ; BSR set to: 15
  6842  001DDE  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  6843                           
  6844                           ; BSR set to: 15
  6845  001DE2  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  6846                           
  6847                           ; BSR set to: 15
  6848  001DE6  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  6849                           
  6850                           ; BSR set to: 15
  6851  001DEA  0EFC               	movlw	252
  6852  001DEC  010F               	movlb	15	; () banked
  6853  001DEE  173F               	andwf	63,f,b	;volatile
  6854  001DF0  010F               	movlb	15	; () banked
  6855  001DF2  813F               	bsf	63,0,b	;volatile
  6856                           
  6857                           ; BSR set to: 15
  6858  001DF4  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  6859                           
  6860                           ; BSR set to: 15
  6861  001DF8  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  6862                           
  6863                           ; BSR set to: 15
  6864  001DFC  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  6865                           
  6866                           ; BSR set to: 15
  6867  001E00  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  6868                           
  6869                           ; BSR set to: 15
  6870  001E04  5009               	movf	RtccReadTime@rTD1+6,w,c
  6871  001E06  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  6872  001E08  A4D8               	btfss	status,2,c
  6873  001E0A  D7E2               	goto	l2844
  6874                           
  6875                           ; BSR set to: 15
  6876                           
  6877                           ; BSR set to: 15
  6878  001E0C  EE20 F003          	lfsr	2,3
  6879  001E10  5001               	movf	RtccReadTime@pTm,w,c
  6880  001E12  26D9               	addwf	fsr2l,f,c
  6881  001E14  5002               	movf	RtccReadTime@pTm+1,w,c
  6882  001E16  22DA               	addwfc	fsr2h,f,c
  6883  001E18  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  6884  001E1C  EE20 F002          	lfsr	2,2
  6885  001E20  5001               	movf	RtccReadTime@pTm,w,c
  6886  001E22  26D9               	addwf	fsr2l,f,c
  6887  001E24  5002               	movf	RtccReadTime@pTm+1,w,c
  6888  001E26  22DA               	addwfc	fsr2h,f,c
  6889  001E28  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  6890  001E2C  EE20 F001          	lfsr	2,1
  6891  001E30  5001               	movf	RtccReadTime@pTm,w,c
  6892  001E32  26D9               	addwf	fsr2l,f,c
  6893  001E34  5002               	movf	RtccReadTime@pTm+1,w,c
  6894  001E36  22DA               	addwfc	fsr2h,f,c
  6895  001E38  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  6896                           
  6897                           ; BSR set to: 15
  6898  001E3C  0012               	return		;funcret
  6899  001E3E                     __end_of_RtccReadTime:
  6900                           	opt stack 0
  6901                           tblptru	equ	0xFF8
  6902                           tblptrh	equ	0xFF7
  6903                           tblptrl	equ	0xFF6
  6904                           tablat	equ	0xFF5
  6905                           prodh	equ	0xFF4
  6906                           prodl	equ	0xFF3
  6907                           intcon	equ	0xFF2
  6908                           indf0	equ	0xFEF
  6909                           postinc0	equ	0xFEE
  6910                           fsr0h	equ	0xFEA
  6911                           fsr0l	equ	0xFE9
  6912                           wreg	equ	0xFE8
  6913                           indf1	equ	0xFE7
  6914                           postdec1	equ	0xFE5
  6915                           fsr1h	equ	0xFE2
  6916                           fsr1l	equ	0xFE1
  6917                           indf2	equ	0xFDF
  6918                           postinc2	equ	0xFDE
  6919                           postdec2	equ	0xFDD
  6920                           fsr2h	equ	0xFDA
  6921                           fsr2l	equ	0xFD9
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function _RtccReadDate *****************
  6925 ;; Defined at:
  6926 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  pDt             2    0[COMRAM] PTR struct .
  6929 ;;		 -> RtccDate(4), 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  rTD0            8   10[COMRAM] struct .
  6932 ;;  rTD1            8    2[COMRAM] struct .
  6933 ;; Return value:  Size  Location     Type
  6934 ;;		None               void
  6935 ;; Registers used:
  6936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6945 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6946 ;;Total ram usage:       18 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_Read_RTC
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text46
  6956  001AEC                     __ptext46:
  6957                           	opt stack 0
  6958  001AEC                     _RtccReadDate:
  6959                           	opt stack 29
  6960  001AEC  0EFC               	movlw	252
  6961  001AEE  010F               	movlb	15	; () banked
  6962  001AF0  173F               	andwf	63,f,b	;volatile
  6963  001AF2  0E03               	movlw	3
  6964  001AF4  010F               	movlb	15	; () banked
  6965  001AF6  133F               	iorwf	63,f,b	;volatile
  6966                           
  6967                           ; BSR set to: 15
  6968  001AF8  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  6969                           
  6970                           ; BSR set to: 15
  6971  001AFC  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  6972                           
  6973                           ; BSR set to: 15
  6974  001B00  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  6975                           
  6976                           ; BSR set to: 15
  6977  001B04  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  6978                           
  6979                           ; BSR set to: 15
  6980  001B08  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  6981                           
  6982                           ; BSR set to: 15
  6983  001B0C  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  6984  001B10  0EFC               	movlw	252
  6985  001B12  010F               	movlb	15	; () banked
  6986  001B14  173F               	andwf	63,f,b	;volatile
  6987  001B16  0E03               	movlw	3
  6988  001B18  010F               	movlb	15	; () banked
  6989  001B1A  133F               	iorwf	63,f,b	;volatile
  6990                           
  6991                           ; BSR set to: 15
  6992  001B1C  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  6993                           
  6994                           ; BSR set to: 15
  6995  001B20  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  6996                           
  6997                           ; BSR set to: 15
  6998  001B24  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  6999                           
  7000                           ; BSR set to: 15
  7001  001B28  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  7002                           
  7003                           ; BSR set to: 15
  7004  001B2C  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  7005                           
  7006                           ; BSR set to: 15
  7007  001B30  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  7008  001B34  5005               	movf	RtccReadDate@rTD1+2,w,c
  7009  001B36  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  7010  001B38  A4D8               	btfss	status,2,c
  7011  001B3A  D7D8               	goto	l2870
  7012                           
  7013                           ; BSR set to: 15
  7014                           
  7015                           ; BSR set to: 15
  7016  001B3C  EE20 F001          	lfsr	2,1
  7017  001B40  5001               	movf	RtccReadDate@pDt,w,c
  7018  001B42  26D9               	addwf	fsr2l,f,c
  7019  001B44  5002               	movf	RtccReadDate@pDt+1,w,c
  7020  001B46  22DA               	addwfc	fsr2h,f,c
  7021  001B48  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  7022  001B4C  EE20 F002          	lfsr	2,2
  7023  001B50  5001               	movf	RtccReadDate@pDt,w,c
  7024  001B52  26D9               	addwf	fsr2l,f,c
  7025  001B54  5002               	movf	RtccReadDate@pDt+1,w,c
  7026  001B56  22DA               	addwfc	fsr2h,f,c
  7027  001B58  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  7028                           
  7029                           ; BSR set to: 15
  7030  001B5C  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  7031  001B60  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  7032  001B64  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  7033                           
  7034                           ; BSR set to: 15
  7035  001B68  EE20 F003          	lfsr	2,3
  7036  001B6C  5001               	movf	RtccReadDate@pDt,w,c
  7037  001B6E  26D9               	addwf	fsr2l,f,c
  7038  001B70  5002               	movf	RtccReadDate@pDt+1,w,c
  7039  001B72  22DA               	addwfc	fsr2h,f,c
  7040  001B74  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  7041                           
  7042                           ; BSR set to: 15
  7043  001B78  0012               	return		;funcret
  7044  001B7A                     __end_of_RtccReadDate:
  7045                           	opt stack 0
  7046                           tblptru	equ	0xFF8
  7047                           tblptrh	equ	0xFF7
  7048                           tblptrl	equ	0xFF6
  7049                           tablat	equ	0xFF5
  7050                           prodh	equ	0xFF4
  7051                           prodl	equ	0xFF3
  7052                           intcon	equ	0xFF2
  7053                           indf0	equ	0xFEF
  7054                           postinc0	equ	0xFEE
  7055                           fsr0h	equ	0xFEA
  7056                           fsr0l	equ	0xFE9
  7057                           wreg	equ	0xFE8
  7058                           indf1	equ	0xFE7
  7059                           postdec1	equ	0xFE5
  7060                           fsr1h	equ	0xFE2
  7061                           fsr1l	equ	0xFE1
  7062                           indf2	equ	0xFDF
  7063                           postinc2	equ	0xFDE
  7064                           postdec2	equ	0xFDD
  7065                           fsr2h	equ	0xFDA
  7066                           fsr2l	equ	0xFD9
  7067                           status	equ	0xFD8
  7068                           tblptru	equ	0xFF8
  7069                           tblptrh	equ	0xFF7
  7070                           tblptrl	equ	0xFF6
  7071                           tablat	equ	0xFF5
  7072                           prodh	equ	0xFF4
  7073                           prodl	equ	0xFF3
  7074                           intcon	equ	0xFF2
  7075                           indf0	equ	0xFEF
  7076                           postinc0	equ	0xFEE
  7077                           fsr0h	equ	0xFEA
  7078                           fsr0l	equ	0xFE9
  7079                           wreg	equ	0xFE8
  7080                           indf1	equ	0xFE7
  7081                           postdec1	equ	0xFE5
  7082                           fsr1h	equ	0xFE2
  7083                           fsr1l	equ	0xFE1
  7084                           indf2	equ	0xFDF
  7085                           postinc2	equ	0xFDE
  7086                           postdec2	equ	0xFDD
  7087                           fsr2h	equ	0xFDA
  7088                           fsr2l	equ	0xFD9
  7089                           status	equ	0xFD8
  7090                           
  7091                           	psect	rparam
  7092  0000                     tblptru	equ	0xFF8
  7093                           tblptrh	equ	0xFF7
  7094                           tblptrl	equ	0xFF6
  7095                           tablat	equ	0xFF5
  7096                           prodh	equ	0xFF4
  7097                           prodl	equ	0xFF3
  7098                           intcon	equ	0xFF2
  7099                           indf0	equ	0xFEF
  7100                           postinc0	equ	0xFEE
  7101                           fsr0h	equ	0xFEA
  7102                           fsr0l	equ	0xFE9
  7103                           wreg	equ	0xFE8
  7104                           indf1	equ	0xFE7
  7105                           postdec1	equ	0xFE5
  7106                           fsr1h	equ	0xFE2
  7107                           fsr1l	equ	0xFE1
  7108                           indf2	equ	0xFDF
  7109                           postinc2	equ	0xFDE
  7110                           postdec2	equ	0xFDD
  7111                           fsr2h	equ	0xFDA
  7112                           fsr2l	equ	0xFD9
  7113                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    14
    Data        10
    BSS         93
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      95
    BANK0           160      0      58
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[1]), STR_1(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> pin(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_38(CODE[5]), STR_37(CODE[5]), STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[5]), STR_33(CODE[8]), 
		 -> STR_32(CODE[7]), STR_31(CODE[6]), STR_30(CODE[8]), STR_29(CODE[4]), 
		 -> STR_28(CODE[5]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[8]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[7]), STR_9(CODE[4]), 
		 -> STR_8(CODE[6]), STR_7(CODE[8]), STR_6(CODE[16]), STR_4(CODE[4]), 
		 -> buffer1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> pin_input(BANK0[5]), pin(BANK0[5]), 

    lcd_write@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_34(CODE[5]), STR_33(CODE[8]), STR_32(CODE[7]), STR_31(CODE[6]), 
		 -> STR_30(CODE[8]), STR_29(CODE[4]), STR_28(CODE[5]), STR_27(CODE[6]), 
		 -> STR_26(CODE[6]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[8]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[7]), STR_9(CODE[4]), STR_8(CODE[6]), STR_7(CODE[8]), 
		 -> STR_6(CODE[16]), STR_4(CODE[4]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _Write_RTC->_RtccWriteDate
    _button_number->_sprintf
    _button_hash->_pin_input_validator
    _button_asterisk->_lcd_putrs
    _activity_home->_lcd_write
    _activity_menu->_lcd_write
    _activity_submenu_pin->_lcd_write
    _activity_submenu_clock->_lcd_write
    _activity_submenu_alarm->_lcd_write
    _activity_submenu_activation->_lcd_write
    _button_A->_action_menu_selector
    _button_A->_action_submenu_selector
    _activity_pin->_lcd_write
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _action_submenu_selector->_lcd_write
    _action_menu_selector->_lcd_write
    _home_clock_refresh->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_write->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  142131
                           _Read_RTC
                      _activity_home
                 _home_clock_refresh
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4102
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0  116143
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                      _button_number
 ---------------------------------------------------------------------------------
 (2) _button_number                                        0     0      0    4252
                          _lcd_putrs
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     226
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0   21698
                _pin_input_validator
 ---------------------------------------------------------------------------------
 (3) _pin_input_validator                                  2     2      0   21698
                                             16 COMRAM     2     2      0
                      _activity_menu
                       _activity_pin
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0    1854
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0    9797
                      _activity_home
 ---------------------------------------------------------------------------------
 (3) _activity_home                                        0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0    9797
                      _activity_menu
 ---------------------------------------------------------------------------------
 (4) _activity_menu                                        0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0   39188
                                             16 COMRAM     2     2      0
        _activity_submenu_activation
             _activity_submenu_alarm
             _activity_submenu_clock
               _activity_submenu_pin
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_pin                                 0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_clock                               0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_alarm                               0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _activity_submenu_activation                          0     0      0    9797
                           _lcd_init
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _button_A                                             2     2      0   29557
                                             18 COMRAM     2     2      0
               _action_menu_selector
            _action_submenu_selector
                       _activity_pin
 ---------------------------------------------------------------------------------
 (4) _activity_pin                                         0     0      0   11659
                         _lcd_comand
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_write
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     331
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _action_submenu_selector                              2     2      0    8949
                                             16 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _action_menu_selector                                 2     2      0    8949
                                             16 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _home_clock_refresh                                   0     0      0   11121
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2172
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _lcd_write                                            6     0      6    8949
                                             10 COMRAM     6     0      6
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    1854
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1553
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1     885
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _activity_home
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _home_clock_refresh
     _lcd_write
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _keyboard_control
     _button_A
       _action_menu_selector
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _action_submenu_selector
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_pin
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _strcpy
     _button_B
       _activity_submenu_activation
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_alarm
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_clock
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
       _activity_submenu_pin
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_C
       _activity_menu
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_D
       _activity_home
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_write
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
     _button_asterisk
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _button_hash
       _pin_input_validator
         _activity_menu
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _activity_pin
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_init
             _Delay1KTCYx
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
             _lcd_send_nibble
           _lcd_write
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _strcpy
         _strcmp
     _button_number
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3A       5       36.3%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      99       6        0.0%
DATA                 0      0      99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 13 20:38:17 2016

              ??_action_menu_selector 0011                                     _a 0025  
                                   _b 0029                                     _c 002B  
                                   _i 002D                                     _j 002F  
                                   _k 0031                        ?_lcd_send_byte 0003  
                        ___awdiv@sign 0006                   ___wmul@multiplicand 0003  
                         lcd_comand@d 0005                          __CFG_CP0$OFF 000000  
                     lcd_write@column 000B                                   l300 145E  
                                 l301 145A                                   l304 1470  
                                 l313 1490                                   l305 146C  
                                 l420 116A                                   l308 1482  
                                 l260 1392                                   l252 136E  
                                 l341 2344                                   l309 147E  
                                 l261 138E                                   l253 136A  
                                 l342 2346                                   l280 13F4  
                                 l272 13D0                                   l264 13A4  
                                 l256 1380                                   l281 13F0  
                                 l273 13CC                                   l265 13A0  
                                 l257 137C                                   l292 1432  
                                 l284 140E                                   l276 13E2  
                                 l268 13BE                                   l293 142E  
                                 l285 140A                                   l277 13DE  
                                 l269 13BA                                   l296 1444  
                                 l288 1420                                   l297 1440  
                                 l289 141C                                   _dia 0057  
                                 _key 003F                                   _mes 005D  
                                 _pin 0090                       lcd_write@string 000F  
                                 wreg 000FE8                       RtccReadDate@pDt 0001  
                         lcd_gotoxy@x 0006                           lcd_gotoxy@y 0005  
                   ??_button_asterisk 000B                                  l1064 2018  
                                l2202 246C                                  l1074 21A6  
                                l2300 2300                                  l2230 23E2  
                                l2302 230A                                  l2240 21CC  
                                l2400 219A                                  l2242 21D8  
                                l2228 23DC                                  l2236 21B4  
                                l2340 20D4                                  l3108 1498  
                                l2412 1776                                  l3116 23B6  
                                l2238 21C0                                  l2246 21E4  
                                l2254 2024                                  l2270 1BA0  
                                l2422 17B4                                  l2248 245A  
                                l2280 1BB8                                  l2344 2108  
                                l2258 204E                                  l2610 1148  
                                l2602 111E                                  l2274 1BA8  
                                l2338 20CA                                  l2418 17A0  
                                l2372 1FDC                                  l2356 240C  
                                l2532 1720                                  l2460 182C  
                                l2428 17D0                                  l2374 1FE6  
                                l2622 11C4                                  l2550 0FCA  
                                l2542 0FA2                                  l2384 200C  
                                l2376 1FEE                                  l2392 2172  
                                l2616 1170                                  l2608 1140  
                                l2560 1008                                  l2624 11D0  
                                l2288 1BCC                                  l2536 172C  
                                l2528 1714                                  l2480 1654  
                                l2464 1838                                  l2456 1820  
                                l2394 217C                                  l2626 11EC  
                                l2554 0FD4                                  l2650 1292  
                                l2490 16A2                                  l2396 2184  
                                l2580 10B0                                  l2572 1072  
                                l2556 0FEA                                  l2548 0FBC  
                                l2644 1248                                  l2574 1094  
                                l2638 11FE                                  l2742 2206  
                                l2486 168E                                  l2592 10E4  
                                l2584 10BC                                  l2568 106C  
                                l2656 12DC                                  l2664 1326  
                                l2672 191E                                  l2904 228A  
                                l2912 229C                                  l2744 220C  
                                l2496 16BE                                  l2906 2290  
                                l2922 2082                                  l2738 22EE  
                                l2746 221E                                  l2770 1A02  
                                l2844 1DD0                                  l2596 1108  
                                l2588 10E0                                  l2908 2296  
                                l2924 2088                                  l2932 209A  
                                l2748 2228                                  l2772 1A0C  
                                l2764 19EC                                  l2870 1AEC  
                                l2598 1112                                  l2678 1960  
                                l2686 19A2                                  l2926 208E  
                                l2790 1A4E                                  l2782 1A32  
                                l2774 1A14                                  l2758 19DA  
                                l2928 2094                                  l2960 1DA6  
                                l2786 1A3E                                  STR_1 0F6E  
                                STR_2 0F1F                                  STR_3 0F2E  
                                STR_4 0F82                                  STR_5 0F91  
                                STR_6 0F0F                                  STR_7 0F4D  
                                STR_8 0F62                                  STR_9 0F86  
                                u1210 1CB6                                  u1230 1CD2  
                                u1208 1C9E                                  u1170 1C84  
                                u1228 1CB8                                  u1190 1C9C  
                                u1270 2044                                  u1248 1CD4  
                                u1280 206E                                  u1188 1C86  
                                u1277 203A                                  u1287 2064  
                                u2337 149E                                  u2347 245C  
                                u2357 246E                      ?_lcd_send_nibble 0001  
                                _anio 0055                                  _flag 02F8  
                                _main 23AC                                  _hora 005B  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                indf0 000FEF                                  fsr0l 000FE9  
                                fsr2h 000FDA                                  indf1 000FE7  
                                fsr1l 000FE1                                  indf2 000FDF  
                                fsr2l 000FD9                         __CFG_T1DIG$ON 000000  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0000                         __CFG_IESO$OFF 000000  
                    RtccReadDate@rTD0 000B                      RtccReadDate@rTD1 0003  
                __end_of_activity_pin 2164                          ___param_bank 000010  
     __size_of_activity_submenu_alarm 0062       __size_of_activity_submenu_clock 0062  
                     RtccReadTime@pTm 0001                           _Delay1KTCYx 2458  
                       __CFG_PLLDIV$1 000000                                 ?_main 0001  
                     __end_of___awdiv 1A5A                                 STR_10 0F55  
                               STR_11 0F94                                 STR_20 0F90  
                               STR_12 0F90                                 STR_21 0F94  
                               STR_13 0F94                                 STR_22 0F90  
                               STR_14 0F90                                 STR_30 0F45  
                               STR_15 0F94                                 STR_23 0F4D  
                               STR_31 0F68                                 STR_16 0F90  
                               STR_32 0F55                                 STR_24 0F8A  
                               STR_17 0F94                                 STR_25 0F8D  
                               STR_33 0F3D                                 STR_18 0F90  
                               STR_26 0F62                                 STR_34 0F78  
                               STR_19 0F94                                 STR_35 0F92  
                               STR_27 0F5C                                 STR_36 0F92  
                               STR_28 0F73                                 STR_29 0F86  
                               STR_37 0F7D                                 STR_38 0F7D  
               __size_of_Delay100TCYx 0012                       ___awdiv@divisor 0003  
                     __end_of___lwdiv 2022                       __end_of___lwmod 21B0  
                     ___awdiv@counter 0005                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                        ?_button_hash 0001                        __CFG_FCMEN$OFF 000000  
                     __end_of_dpowers 0F0B                                 _mes_d 004F  
                               _mes_u 0050                       __end_of_isdigit 2416  
                               _setup 1CEE                                 _state 003B  
                      __pbitbssCOMRAM 02F8                                 tablat 000FF5  
                        lcd_putrs@ptr 0009                                 status 000FD8  
                     __end_of_sprintf 11FC                 __end_of_activity_home 2384  
               __end_of_activity_menu 1C78                          lcd_write@row 000D  
             __CFG_DSWDTOSC$INTOSCREF 000000                       __initialization 2244  
                        _Delay100TCYx 246A                          __end_of_main 23D0  
                     ??_lcd_send_byte 0004                      RtccReadTime@rTD0 000B  
                    RtccReadTime@rTD1 0003                      __end_of_Read_RTC 191C  
             _action_submenu_selector 191C                                ??_main 0025  
                       __activetblptr 000002                      __end_of_RtccWrOn 2458  
              _activity_submenu_alarm 1F02                _activity_submenu_clock 1EA0  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _EECON2 000FA7                                _ANCON0 000F48  
                              _ANCON1 000F49                      ___awdiv@dividend 0001  
                              ?_setup 0001                        __CFG_WDTEN$OFF 000000  
        __size_of_pin_input_validator 0032                      RtccWriteDate@pDt 0001  
                              _RTCCFG 000F3F                        __CFG_WPCFG$OFF 000000  
                      __CFG_WPDIS$OFF 000000                        __CFG_XINST$OFF 000000  
                    __end_of_lcd_init 1BFA            __end_of_home_clock_refresh 1AEC  
                    __end_of_lcd_putc 21FC                                ___wmul 2384  
                           ??___awdiv 0005                        __CFG_STVREN$ON 000000  
                              _diasem 0059                                _anio_d 0048  
                              _anio_u 0049                             ??___lwdiv 0005  
                           ??___lwmod 000C                                _hora_d 004D  
                              _hora_u 004E                      __end_of_button_A 22C4  
                    __end_of_button_B 20C8                      __end_of_button_C 242E  
                    __end_of_button_D 24B8                                clear_0 224A  
                              clear_1 2258                      ___awdiv@quotient 0007  
                              _minuto 0037                 __end_of_RtccWriteDate 1738  
                              _strcat 21FC                                _strcmp 20C8  
               __end_of_RtccWriteTime 1844                                _strcpy 22F6  
                    RtccWriteTime@pTm 0001                          __pdataCOMRAM 0055  
                           ??_isdigit 0001                __size_of_button_number 006E  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                           ??_sprintf 0017                 __size_of_activity_pin 004E  
                          __accesstop 0060               __end_of__initialization 227E  
                  __size_of_Write_RTC 0148                         ___rparam_used 000001  
           ??_action_submenu_selector 0011             __size_of_keyboard_control 0156  
                      __pcstackCOMRAM 0001                         __end_of_setup 1D62  
                     __CFG_DSWDTPS$G2 000000                       _button_asterisk 248C  
                     __CFG_OSC$INTOSC 000000                          _activity_pin 2116  
                   lcd_gotoxy@address 0007                  __size_of_button_hash 0010  
                  __size_of_lcd_putrs 0054                    __size_of_lcd_write 0018  
                        sprintf@width 0021                               ??_setup 000E  
                          __pbssBANK0 0060                             ?_Read_RTC 0001  
                          _dia_semana 004A             RtccWriteTime@tempHourWDay 000A  
                          __pnvCOMRAM 0048         __size_of_activity_submenu_pin 0062  
                       _button_number 1D62                             ?_RtccWrOn 0001  
                      lcd_send_byte@n 0003                               ?___wmul 0001  
                       ?_RtccReadDate 0001                         ?_RtccReadTime 0001  
       __size_of_action_menu_selector 0158                          ?_Delay1KTCYx 0001  
                             ?_strcat 0001                               ?_strcmp 0001  
                             ?_strcpy 0001                     __end_of_Write_RTC 15F2  
                          _lcd_comand 249A       __end_of_action_submenu_selector 19C4  
                          _lcd_gotoxy 23D0                               _RTCVALH 000F99  
                             _RTCVALL 000F98                             ?_lcd_init 0001  
                           ?_lcd_putc 0001                         _menu_selected 0033  
                       _menu_selector 0035                            ??_Read_RTC 0013  
                           ?_button_A 0001                             ?_button_B 0001  
                           ?_button_C 0001                             ?_button_D 0001  
                      ?_button_number 0001                               __Hparam 0000  
                             __Lparam 0000              __size_of_lcd_send_nibble 0076  
             __end_of_button_asterisk 249A                            ??_RtccWrOn 0001  
                      ??_RtccReadDate 0003                        ??_RtccReadTime 0003  
                             ___awdiv 19C4                     __end_of_lcd_putrs 2076  
                   __end_of_lcd_write 2446                       __size_of___wmul 0028  
                             ___lwdiv 1FC6                               ___lwmod 2164  
                        __psmallconst 0F00                           _RtccTimeVal 0078  
                             __pcinit 2244                               _fecha_d 004B  
                             _fecha_u 004C                               __ramtop 0F00  
                 _pin_input_validator 22C4                               __ptext0 23AC  
                             __ptext1 1CEE                               __ptext2 14AA  
                             __ptext3 19C4                               __ptext4 1738  
                             __ptext5 15F2                               __ptext6 2446  
                             __ptext7 1354                               __ptext8 1D62  
                             __ptext9 21FC          ?_activity_submenu_activation 0001  
                             _buffer1 007C               ?_activity_submenu_alarm 0001  
                     __size_of_strcat 0048                       __size_of_strcmp 004E  
                     __size_of_strcpy 0032               ?_activity_submenu_clock 0001  
                           _T1CONbits 000FCD                               _dpowers 0F01  
                             _isdigit 23F4                               _segundo 0039  
                             _sprintf 0F98                            ??_lcd_init 0005  
                          ??_lcd_putc 0008                  end_of_initialization 227E  
                ?_pin_input_validator 0001                  lcd_send_byte@address 0004  
                          ??_button_A 0013                         __Lmediumconst 0000  
                          ??_button_B 0011                            ??_button_C 0011  
                          ??_button_D 0011                      _keyboard_control 1354  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc2 000FDE  
               __end_of_lcd_send_byte 235A                               strcmp@r 0006  
      __end_of_activity_submenu_alarm 1F64        __end_of_activity_submenu_clock 1F02  
                           _PORTAbits 000F80                             _PORTCbits 000F82  
                    __CFG_DSBOREN$OFF 000000                           ?_lcd_comand 0001  
                  _home_clock_refresh 1A5A                      __CFG_CPUDIV$OSC1 000000  
                           _TRISBbits 000F93                __size_of_activity_home 002A  
              __size_of_activity_menu 007E                           ?_lcd_gotoxy 0005  
                     _LCD_INIT_STRING 0F0B                   ?_home_clock_refresh 0001  
               ??_pin_input_validator 0011                       ??_button_number 0024  
                    __CFG_IOL1WAY$OFF 000000             RtccWriteDate@tempDayMonth 000A  
                 __CFG_MSSP7B_EN$MSK7 000000                      ?_button_asterisk 0001  
                    Delay100TCYx@unit 0001                  ??_home_clock_refresh 0024  
                      __end_of___wmul 23AC                         __pidataCOMRAM 24A8  
           RtccWriteDate@tempHourWDay 000C                     ??_lcd_send_nibble 0001  
                __size_of_Delay1KTCYx 0012                      __CFG_DSWDTEN$OFF 000000  
                      __end_of_strcat 2244                        __end_of_strcmp 2116  
                      __end_of_strcpy 2328                   start_initialization 2244  
                __end_of_RtccReadDate 1B7A                  __end_of_RtccReadTime 1E3E  
                RtccWriteTime@wasAlrm 0006                  RtccWriteTime@wasWrEn 0007  
__size_of_activity_submenu_activation 0062                __size_of_RtccWriteDate 0146  
                     RtccWriteDate@di 0003                __size_of_RtccWriteTime 010C  
                   __size_of_Read_RTC 00D8                         _activity_home 235A  
                       _activity_menu 1BFA                   __size_of_lcd_comand 000E  
                 __size_of_lcd_gotoxy 0024                              ??___wmul 0005  
                   __size_of_RtccWrOn 0012                       RtccWriteTime@di 0003  
                    __CFG_LPT1OSC$OFF 000000                              ??_strcat 0005  
                            ??_strcmp 0005                              ??_strcpy 0005  
        __end_of_activity_submenu_pin 1EA0                           _ALRMCFGbits 000F91  
             __end_of_LCD_INIT_STRING 0F0F                         ??_button_hash 0013  
                         __pbssCOMRAM 0025                             _Write_RTC 14AA  
                        _isdigit$2128 0002          __end_of_action_menu_selector 1354  
                     Delay1KTCYx@unit 0001                     __size_of_lcd_init 0080  
                         sprintf@flag 001D                     __size_of_lcd_putc 004C  
                         sprintf@prec 0020              ?_action_submenu_selector 0001  
                      ?_activity_home 0001                        ?_activity_menu 0001  
                   __size_of_button_A 003C                     __size_of_button_B 0052  
                   __size_of_button_C 0018                     __size_of_button_D 0006  
                    ___lwdiv@dividend 0001                         ?_Delay100TCYx 0001  
                            ?___awdiv 0001                              ?___lwdiv 0001  
                            ?___lwmod 0008               RtccWriteTime@tempMinSec 0008  
                           _lcd_putrs 2022                             _lcd_write 242E  
                    _submenu_selector 003D                         _RtccWriteDate 15F2  
                         __smallconst 0F00                         _RtccWriteTime 1738  
                            ?_isdigit 0001                  __CFG_RTCOSC$T1OSCREF 000000  
            __end_of_keyboard_control 14AA                            ?_Write_RTC 0001  
                    ___lwdiv@quotient 0005                              ?_sprintf 000D  
                      __size_of_setup 0074                   __end_of_button_hash 248C  
                    _RtccAlrmTimeDate 0060                        ___wmul@product 0005  
                            _LATAbits 000F89                              _LATBbits 000F8A  
                           _pin_input 0095                              _PIE3bits 000FA3  
                           _segundo_d 0053                        ??_Delay100TCYx 0001  
                           _segundo_u 0054                      __CFG_WDTPS$32768 000000  
                  RtccWriteDate@wasOn 0005                    _Rtcc_read_TimeDate 0070  
                      ?_RtccWriteDate 0001                            ?_lcd_putrs 0009  
                          ?_lcd_write 000B                     ___wmul@multiplier 0001  
                      ?_RtccWriteTime 0001                             lcd_init@i 0005  
               __size_of_RtccReadDate 008E                          ??_lcd_comand 0005  
                           lcd_putc@c 0008                 __size_of_RtccReadTime 006E  
                        ??_lcd_gotoxy 0006                             copy_data0 2272  
                            _Read_RTC 1844                       ??_activity_home 0011  
                     ??_activity_menu 0011                  _activity_submenu_pin 1E3E  
                     _lcd_send_nibble 1C78                              __Hrparam 0000  
                            _RtccDate 0040                              __Lrparam 0000  
                            _RtccTime 0044                              _RtccWrOn 2446  
                  __end_of_lcd_comand 24A8                    __end_of_lcd_gotoxy 23F4  
                        _RtccReadDate 1AEC                      __size_of___awdiv 0096  
                        _RtccReadTime 1DD0                  _action_menu_selector 11FC  
                    __size_of___lwdiv 005C                      __size_of___lwmod 004C  
                        _RtccTimeDate 0068                            sprintf@val 001E  
                          strcat@from 0003                           _button_hash 247C  
                       ?_activity_pin 0001                              _activity 0027  
         __end_of_pin_input_validator 22F6                      __size_of_isdigit 0022  
                     ___lwdiv@divisor 0003                           ??_Write_RTC 000E  
                     ___lwdiv@counter 0007                              __ptext10 247C  
                            __ptext11 22C4                              __ptext20 1EA0  
                            __ptext12 20C8                              __ptext21 1F02  
                            __ptext13 248C                              __ptext30 11FC  
                            __ptext22 1F64                              __ptext14 24B2  
                            __ptext31 1A5A                              __ptext23 2288  
                            __ptext15 235A                              __ptext40 23D0  
                            __ptext32 0F98                              __ptext24 2116  
                            __ptext16 2416                              __ptext41 2328  
                            __ptext33 23F4                              __ptext25 22F6  
                            __ptext17 1BFA                              __ptext42 1C78  
                            __ptext34 2384                              __ptext26 1B7A  
                            __ptext18 2076                              __ptext43 246A  
                            __ptext35 2164                              __ptext27 2458  
                            __ptext19 1E3E                              __ptext44 1844  
                            __ptext36 1FC6                              __ptext28 249A  
                            __ptext45 1DD0                              __ptext37 242E  
                            __ptext29 191C                              __ptext46 1AEC  
                            __ptext38 2022                              __ptext39 21B0  
                            _lcd_init 1B7A                              _lcd_putc 21B0  
                    __size_of_sprintf 0264                            strcpy@from 0003  
              __size_of_lcd_send_byte 0032                              _button_A 2288  
                            _button_B 2076                              _button_C 2416  
                            _button_D 24B2                         __size_of_main 0024  
               __end_of_button_number 1DD0                 ?_activity_submenu_pin 0001  
                            _minuto_d 0051                              _minuto_u 0052  
               ?_action_menu_selector 0001                         ??_Delay1KTCYx 0001  
                     ??_RtccWriteDate 0004           __size_of_home_clock_refresh 0092  
                     ??_RtccWriteTime 0004   __end_of_activity_submenu_activation 1FC6  
         _activity_submenu_activation 1F64                           ??_lcd_putrs 000B  
                         ??_lcd_write 0011              __size_of_button_asterisk 000E  
                      ??_activity_pin 0011                           _OSCTUNEbits 000F9B  
                          _INTCONbits 000FF2                    RtccWriteTime@wasOn 0005  
                __end_of_Delay100TCYx 247C         ??_activity_submenu_activation 0011  
                            isdigit@c 0003                             sprintf@ap 001B  
             __end_of_lcd_send_nibble 1CEE                             sprintf@sp 000D  
                    ___lwmod@dividend 0008                            _OSCCONbits 000FD3  
            ??_activity_submenu_alarm 0011              ??_activity_submenu_clock 0011  
               RtccWriteDate@tempYear 0007                         _lcd_send_byte 2328  
    __size_of_action_submenu_selector 00A8                            _RTCCFGbits 000F3F  
                            sprintf@c 0023                              sprintf@f 000F  
                            strcat@cp 0005                              strcat@to 0001  
                            strcmp@s1 0001                              strcmp@s2 0003  
                     ___lwmod@divisor 000A                              strcpy@cp 0005  
                            strcpy@to 0001                   __end_of_Delay1KTCYx 246A  
                     ___lwmod@counter 000C        pin_input_validator@comparision 0011  
                RtccWriteDate@wasAlrm 0006                  RtccWriteDate@wasWrEn 0009  
                   ?_keyboard_control 0001                    ??_keyboard_control 0024  
              ??_activity_submenu_pin 0011                 lcd_send_nibble@nibble 0002  
