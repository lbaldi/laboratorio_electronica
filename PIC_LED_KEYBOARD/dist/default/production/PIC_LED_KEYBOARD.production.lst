

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 06 11:44:29 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  00214E                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _anio
    54  00214E  0010               	dw	16
    55                           
    56                           ;initializer for _dia
    57  002150  0006               	dw	6
    58                           
    59                           ;initializer for _diasem
    60  002152  0002               	dw	2
    61                           
    62                           ;initializer for _hora
    63  002154  0012               	dw	18
    64                           
    65                           ;initializer for _mes
    66  002156  0009               	dw	9
    67                           
    68                           	psect	smallconst
    69  000F00                     __psmallconst:
    70                           	opt stack 0
    71  000F00  00                 	db	0
    72  000F01                     _dpowers:
    73                           	opt stack 0
    74  000F01  0001               	dw	1
    75  000F03  000A               	dw	10
    76  000F05  0064               	dw	100
    77  000F07  03E8               	dw	1000
    78  000F09  2710               	dw	10000
    79  000F0B                     __end_of_dpowers:
    80                           	opt stack 0
    81  000F0B                     _LCD_INIT_STRING:
    82                           	opt stack 0
    83  000F0B  28                 	db	40
    84  000F0C  0C                 	db	12
    85  000F0D  01                 	db	1
    86  000F0E  06                 	db	6
    87  000F0F                     __end_of_LCD_INIT_STRING:
    88                           	opt stack 0
    89  000F0F                     STR_2:
    90  000F0F  25                 	db	37
    91  000F10  30                 	db	48	;'0'
    92  000F11  32                 	db	50	;'2'
    93  000F12  75                 	db	117	;'u'
    94  000F13  2F                 	db	47
    95  000F14  25                 	db	37
    96  000F15  30                 	db	48	;'0'
    97  000F16  32                 	db	50	;'2'
    98  000F17  75                 	db	117	;'u'
    99  000F18  2F                 	db	47
   100  000F19  25                 	db	37
   101  000F1A  30                 	db	48	;'0'
   102  000F1B  32                 	db	50	;'2'
   103  000F1C  75                 	db	117	;'u'
   104  000F1D  00                 	db	0
   105  000F1E                     STR_3:
   106  000F1E  25                 	db	37
   107  000F1F  30                 	db	48	;'0'
   108  000F20  32                 	db	50	;'2'
   109  000F21  75                 	db	117	;'u'
   110  000F22  3A                 	db	58	;':'
   111  000F23  25                 	db	37
   112  000F24  30                 	db	48	;'0'
   113  000F25  32                 	db	50	;'2'
   114  000F26  75                 	db	117	;'u'
   115  000F27  00                 	db	0
   116  000F28                     STR_24:
   117  000F28  4F                 	db	79	;'O'
   118  000F29  70                 	db	112	;'p'
   119  000F2A  74                 	db	116	;'t'
   120  000F2B  69                 	db	105	;'i'
   121  000F2C  6F                 	db	111	;'o'
   122  000F2D  6E                 	db	110	;'n'
   123  000F2E  31                 	db	49	;'1'
   124  000F2F  00                 	db	0
   125  000F30                     STR_25:
   126  000F30  4F                 	db	79	;'O'
   127  000F31  70                 	db	112	;'p'
   128  000F32  74                 	db	116	;'t'
   129  000F33  69                 	db	105	;'i'
   130  000F34  6F                 	db	111	;'o'
   131  000F35  6E                 	db	110	;'n'
   132  000F36  32                 	db	50	;'2'
   133  000F37  00                 	db	0
   134  000F38                     STR_1:
   135  000F38  20                 	db	32
   136  000F39  55                 	db	85	;'U'
   137  000F3A  4E                 	db	78	;'N'
   138  000F3B  49                 	db	73	;'I'
   139  000F3C  4D                 	db	77	;'M'
   140  000F3D  49                 	db	73	;'I'
   141  000F3E  43                 	db	67	;'C'
   142  000F3F  00                 	db	0
   143  000F40                     STR_23:
   144  000F40  4D                 	db	77	;'M'
   145  000F41  65                 	db	101	;'e'
   146  000F42  6E                 	db	110	;'n'
   147  000F43  75                 	db	117	;'u'
   148  000F44  20                 	db	32
   149  000F45  32                 	db	50	;'2'
   150  000F46  00                 	db	0
   151  000F47                     STR_26:
   152  000F47  4D                 	db	77	;'M'
   153  000F48  65                 	db	101	;'e'
   154  000F49  6E                 	db	110	;'n'
   155  000F4A  75                 	db	117	;'u'
   156  000F4B  20                 	db	32
   157  000F4C  33                 	db	51	;'3'
   158  000F4D  00                 	db	0
   159  000F4E                     STR_29:
   160  000F4E  4D                 	db	77	;'M'
   161  000F4F  65                 	db	101	;'e'
   162  000F50  6E                 	db	110	;'n'
   163  000F51  75                 	db	117	;'u'
   164  000F52  20                 	db	32
   165  000F53  34                 	db	52	;'4'
   166  000F54  00                 	db	0
   167  000F55                     STR_4:
   168  000F55  4D                 	db	77	;'M'
   169  000F56  65                 	db	101	;'e'
   170  000F57  6E                 	db	110	;'n'
   171  000F58  75                 	db	117	;'u'
   172  000F59  31                 	db	49	;'1'
   173  000F5A  00                 	db	0
   174  000F5B                     STR_5:
   175  000F5B  4D                 	db	77	;'M'
   176  000F5C  65                 	db	101	;'e'
   177  000F5D  6E                 	db	110	;'n'
   178  000F5E  75                 	db	117	;'u'
   179  000F5F  32                 	db	50	;'2'
   180  000F60  00                 	db	0
   181  000F61                     STR_6:
   182  000F61  4D                 	db	77	;'M'
   183  000F62  65                 	db	101	;'e'
   184  000F63  6E                 	db	110	;'n'
   185  000F64  75                 	db	117	;'u'
   186  000F65  33                 	db	51	;'3'
   187  000F66  00                 	db	0
   188  000F67                     STR_7:
   189  000F67  4D                 	db	77	;'M'
   190  000F68  65                 	db	101	;'e'
   191  000F69  6E                 	db	110	;'n'
   192  000F6A  75                 	db	117	;'u'
   193  000F6B  34                 	db	52	;'4'
   194  000F6C  00                 	db	0
   195  000F6D                     STR_20:
   196  000F6D  43                 	db	67	;'C'
   197  000F6E  6C                 	db	108	;'l'
   198  000F6F  6F                 	db	111	;'o'
   199  000F70  63                 	db	99	;'c'
   200  000F71  6B                 	db	107	;'k'
   201  000F72  00                 	db	0
   202  000F73                     STR_22:
   203  000F73  54                 	db	84	;'T'
   204  000F74  69                 	db	105	;'i'
   205  000F75  6D                 	db	109	;'m'
   206  000F76  65                 	db	101	;'e'
   207  000F77  00                 	db	0
   208  000F78                     STR_21:
   209  000F78  44                 	db	68	;'D'
   210  000F79  61                 	db	97	;'a'
   211  000F7A  74                 	db	116	;'t'
   212  000F7B  65                 	db	101	;'e'
   213  000F7C  00                 	db	0
   214  000F7D                     STR_34:
   215  000F7D  25                 	db	37
   216  000F7E  30                 	db	48	;'0'
   217  000F7F  31                 	db	49	;'1'
   218  000F80  75                 	db	117	;'u'
   219  000F81  00                 	db	0
   220  000F82                     STR_9:
   221  000F82  20                 	db	32
   222  000F83  00                 	db	0
   223  000F84                     STR_33:
   224  000F84  23                 	db	35
   225  000F85  00                 	db	0
   226  000F86                     STR_32:
   227  000F86  2A                 	db	42
   228  000F87  00                 	db	0
   229  000F88                     STR_8:
   230  000F88  3E                 	db	62	;'>'
   231  000F89  00                 	db	0
   232  0000                     
   233                           ; #config settings
   234  000F8A  00                 	db	0	; dummy byte at the end
   235  0000                     
   236                           	psect	nvCOMRAM
   237  000048                     __pnvCOMRAM:
   238                           	opt stack 0
   239  000048                     _anio_d:
   240                           	opt stack 0
   241  000048                     	ds	1
   242  000049                     _anio_u:
   243                           	opt stack 0
   244  000049                     	ds	1
   245  00004A                     _dia_semana:
   246                           	opt stack 0
   247  00004A                     	ds	1
   248  00004B                     _fecha_d:
   249                           	opt stack 0
   250  00004B                     	ds	1
   251  00004C                     _fecha_u:
   252                           	opt stack 0
   253  00004C                     	ds	1
   254  00004D                     _hora_d:
   255                           	opt stack 0
   256  00004D                     	ds	1
   257  00004E                     _hora_u:
   258                           	opt stack 0
   259  00004E                     	ds	1
   260  00004F                     _mes_d:
   261                           	opt stack 0
   262  00004F                     	ds	1
   263  000050                     _mes_u:
   264                           	opt stack 0
   265  000050                     	ds	1
   266  000051                     _minuto_d:
   267                           	opt stack 0
   268  000051                     	ds	1
   269  000052                     _minuto_u:
   270                           	opt stack 0
   271  000052                     	ds	1
   272  000053                     _segundo_d:
   273                           	opt stack 0
   274  000053                     	ds	1
   275  000054                     _segundo_u:
   276                           	opt stack 0
   277  000054                     	ds	1
   278  0000                     _ANCON0	set	3912
   279  0000                     _ANCON1	set	3913
   280  0000                     _RTCCFG	set	3903
   281  0000                     _RTCCFGbits	set	3903
   282  0000                     _ADCON0	set	4034
   283  0000                     _ADCON1	set	4033
   284  0000                     _ALRMCFGbits	set	3985
   285  0000                     _EECON2	set	4007
   286  0000                     _INTCONbits	set	4082
   287  0000                     _LATAbits	set	3977
   288  0000                     _LATBbits	set	3978
   289  0000                     _OSCCONbits	set	4051
   290  0000                     _OSCTUNEbits	set	3995
   291  0000                     _PIE3bits	set	4003
   292  0000                     _PORTAbits	set	3968
   293  0000                     _PORTCbits	set	3970
   294  0000                     _RTCVALH	set	3993
   295  0000                     _RTCVALL	set	3992
   296  0000                     _T1CONbits	set	4045
   297  0000                     _TRISA	set	3986
   298  0000                     _TRISB	set	3987
   299  0000                     _TRISBbits	set	3987
   300  0000                     _TRISC	set	3988
   301                           
   302                           	psect	cinit
   303  001F9E                     __pcinit:
   304                           	opt stack 0
   305  001F9E                     start_initialization:
   306                           	opt stack 0
   307  001F9E                     __initialization:
   308                           	opt stack 0
   309                           
   310                           ; Clear objects allocated to BANK0 (48 bytes)
   311  001F9E  EE00  F060         	lfsr	0,__pbssBANK0
   312  001FA2  0E30               	movlw	48
   313  001FA4                     clear_0:
   314  001FA4  6AEE               	clrf	postinc0,c
   315  001FA6  06E8               	decf	wreg,f,c
   316  001FA8  E1FD               	bnz	clear_0
   317                           
   318                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   319  001FAA  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   320                           
   321                           ; Clear objects allocated to COMRAM (35 bytes)
   322  001FAC  EE00  F025         	lfsr	0,__pbssCOMRAM
   323  001FB0  0E23               	movlw	35
   324  001FB2                     clear_1:
   325  001FB2  6AEE               	clrf	postinc0,c
   326  001FB4  06E8               	decf	wreg,f,c
   327  001FB6  E1FD               	bnz	clear_1
   328                           
   329                           ; Initialize objects allocated to COMRAM (10 bytes)
   330                           ; load TBLPTR registers with __pidataCOMRAM
   331  001FB8  0E4E               	movlw	low __pidataCOMRAM
   332  001FBA  6EF6               	movwf	tblptrl,c
   333  001FBC  0E21               	movlw	high __pidataCOMRAM
   334  001FBE  6EF7               	movwf	tblptrh,c
   335  001FC0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   336  001FC2  6EF8               	movwf	tblptru,c
   337  001FC4  EE00  F055         	lfsr	0,__pdataCOMRAM
   338  001FC8  EE10 F00A          	lfsr	1,10
   339  001FCC                     copy_data0:
   340  001FCC  0009               	tblrd		*+
   341  001FCE  CFF5 FFEE          	movff	tablat,postinc0
   342  001FD2  50E5               	movf	postdec1,w,c
   343  001FD4  50E1               	movf	fsr1l,w,c
   344  001FD6  E1FA               	bnz	copy_data0
   345  001FD8                     end_of_initialization:
   346                           	opt stack 0
   347  001FD8                     __end_of__initialization:
   348                           	opt stack 0
   349  001FD8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   350  001FDA  6EF8               	movwf	tblptru,c
   351  001FDC  0100               	movlb	0
   352  001FDE  EF66  F010         	goto	_main	;jump to C main() function
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	bitbssCOMRAM
   363  0002F8                     __pbitbssCOMRAM:
   364                           	opt stack 0
   365  0002F8                     _flag:
   366                           	opt stack 0
   367  0002F8                     	ds	1
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           postdec1	equ	0xFE5
   375                           fsr1l	equ	0xFE1
   376                           
   377                           	psect	bssCOMRAM
   378  000025                     __pbssCOMRAM:
   379                           	opt stack 0
   380  000025                     _a:
   381                           	opt stack 0
   382  000025                     	ds	2
   383  000027                     _b:
   384                           	opt stack 0
   385  000027                     	ds	2
   386  000029                     _c:
   387                           	opt stack 0
   388  000029                     	ds	2
   389  00002B                     _i:
   390                           	opt stack 0
   391  00002B                     	ds	2
   392  00002D                     _j:
   393                           	opt stack 0
   394  00002D                     	ds	2
   395  00002F                     _k:
   396                           	opt stack 0
   397  00002F                     	ds	2
   398  000031                     _menu:
   399                           	opt stack 0
   400  000031                     	ds	2
   401  000033                     _minuto:
   402                           	opt stack 0
   403  000033                     	ds	2
   404  000035                     _segundo:
   405                           	opt stack 0
   406  000035                     	ds	2
   407  000037                     _select:
   408                           	opt stack 0
   409  000037                     	ds	2
   410  000039                     _select_op:
   411                           	opt stack 0
   412  000039                     	ds	2
   413  00003B                     _selection:
   414                           	opt stack 0
   415  00003B                     	ds	2
   416  00003D                     _submenu:
   417                           	opt stack 0
   418  00003D                     	ds	2
   419  00003F                     _key:
   420                           	opt stack 0
   421  00003F                     	ds	1
   422  000040                     _RtccDate:
   423                           	opt stack 0
   424  000040                     	ds	4
   425  000044                     _RtccTime:
   426                           	opt stack 0
   427  000044                     	ds	4
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	dataCOMRAM
   438  000055                     __pdataCOMRAM:
   439                           	opt stack 0
   440  000055                     _anio:
   441                           	opt stack 0
   442  000055                     	ds	2
   443  000057                     _dia:
   444                           	opt stack 0
   445  000057                     	ds	2
   446  000059                     _diasem:
   447                           	opt stack 0
   448  000059                     	ds	2
   449  00005B                     _hora:
   450                           	opt stack 0
   451  00005B                     	ds	2
   452  00005D                     _mes:
   453                           	opt stack 0
   454  00005D                     	ds	2
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           postdec1	equ	0xFE5
   462                           fsr1l	equ	0xFE1
   463                           
   464                           	psect	bssBANK0
   465  000060                     __pbssBANK0:
   466                           	opt stack 0
   467  000060                     _RtccAlrmTimeDate:
   468                           	opt stack 0
   469  000060                     	ds	8
   470  000068                     _RtccTimeDate:
   471                           	opt stack 0
   472  000068                     	ds	8
   473  000070                     _Rtcc_read_TimeDate:
   474                           	opt stack 0
   475  000070                     	ds	8
   476  000078                     _RtccTimeVal:
   477                           	opt stack 0
   478  000078                     	ds	4
   479  00007C                     _buffer1:
   480                           	opt stack 0
   481  00007C                     	ds	20
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491                           	psect	cstackCOMRAM
   492  000001                     __pcstackCOMRAM:
   493                           	opt stack 0
   494  000001                     ??_isdigit:
   495  000001                     ??_lcd_send_nibble:
   496  000001                     ?___wmul:
   497                           	opt stack 0
   498  000001                     ?___awdiv:
   499                           	opt stack 0
   500  000001                     ?___lwdiv:
   501                           	opt stack 0
   502  000001                     Delay100TCYx@unit:
   503                           	opt stack 0
   504  000001                     Delay1KTCYx@unit:
   505                           	opt stack 0
   506  000001                     RtccWriteDate@pDt:
   507                           	opt stack 0
   508  000001                     RtccWriteTime@pTm:
   509                           	opt stack 0
   510  000001                     ___wmul@multiplier:
   511                           	opt stack 0
   512  000001                     ___awdiv@dividend:
   513                           	opt stack 0
   514  000001                     ___lwdiv@dividend:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x0
   518  000001                     	ds	1
   519  000002                     lcd_send_nibble@nibble:
   520                           	opt stack 0
   521  000002                     _isdigit$2090:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x1
   525  000002                     	ds	1
   526  000003                     lcd_send_byte@n:
   527                           	opt stack 0
   528  000003                     RtccWriteDate@di:
   529                           	opt stack 0
   530  000003                     RtccWriteTime@di:
   531                           	opt stack 0
   532  000003                     isdigit@c:
   533                           	opt stack 0
   534  000003                     ___wmul@multiplicand:
   535                           	opt stack 0
   536  000003                     ___awdiv@divisor:
   537                           	opt stack 0
   538  000003                     ___lwdiv@divisor:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x2
   542  000003                     	ds	1
   543  000004                     lcd_send_byte@address:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x3
   547  000004                     	ds	1
   548  000005                     lcd_init@i:
   549                           	opt stack 0
   550  000005                     lcd_gotoxy@y:
   551                           	opt stack 0
   552  000005                     lcd_comand@d:
   553                           	opt stack 0
   554  000005                     RtccWriteDate@wasOn:
   555                           	opt stack 0
   556  000005                     RtccWriteTime@wasOn:
   557                           	opt stack 0
   558  000005                     ___awdiv@counter:
   559                           	opt stack 0
   560  000005                     ___wmul@product:
   561                           	opt stack 0
   562  000005                     ___lwdiv@quotient:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x4
   566  000005                     	ds	1
   567  000006                     lcd_gotoxy@x:
   568                           	opt stack 0
   569  000006                     RtccWriteDate@wasAlrm:
   570                           	opt stack 0
   571  000006                     RtccWriteTime@wasAlrm:
   572                           	opt stack 0
   573  000006                     ___awdiv@sign:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x5
   577  000006                     	ds	1
   578  000007                     lcd_gotoxy@address:
   579                           	opt stack 0
   580  000007                     RtccWriteTime@wasWrEn:
   581                           	opt stack 0
   582  000007                     ___lwdiv@counter:
   583                           	opt stack 0
   584  000007                     RtccWriteDate@tempYear:
   585                           	opt stack 0
   586  000007                     ___awdiv@quotient:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x6
   590  000007                     	ds	1
   591  000008                     ?___lwmod:
   592                           	opt stack 0
   593  000008                     lcd_putc@c:
   594                           	opt stack 0
   595  000008                     RtccWriteTime@tempMinSec:
   596                           	opt stack 0
   597  000008                     ___lwmod@dividend:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x7
   601  000008                     	ds	1
   602  000009                     RtccWriteDate@wasWrEn:
   603                           	opt stack 0
   604  000009                     lcd_putrs@ptr:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x8
   608  000009                     	ds	1
   609  00000A                     RtccWriteDate@tempDayMonth:
   610                           	opt stack 0
   611  00000A                     RtccWriteTime@tempHourWDay:
   612                           	opt stack 0
   613  00000A                     ___lwmod@divisor:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x9
   617  00000A                     	ds	1
   618  00000B                     ??_menu_iterator:
   619  00000B                     ??_menu_submenu_iterator:
   620  00000B                     ??_button_B:
   621  00000B                     
   622                           ; 0 bytes @ 0xA
   623  00000B                     	ds	1
   624  00000C                     ___lwmod@counter:
   625                           	opt stack 0
   626  00000C                     RtccWriteDate@tempHourWDay:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0xB
   630  00000C                     	ds	1
   631  00000D                     ?_sprintf:
   632                           	opt stack 0
   633  00000D                     sprintf@sp:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0xC
   637  00000D                     	ds	1
   638  00000E                     
   639                           ; 0 bytes @ 0xD
   640  00000E                     	ds	1
   641  00000F                     sprintf@f:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0xE
   645  00000F                     	ds	8
   646  000017                     ??_sprintf:
   647                           
   648                           ; 0 bytes @ 0x16
   649  000017                     	ds	4
   650  00001B                     sprintf@ap:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x1A
   654  00001B                     	ds	2
   655  00001D                     sprintf@flag:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x1C
   659  00001D                     	ds	1
   660  00001E                     sprintf@val:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x1D
   664  00001E                     	ds	2
   665  000020                     sprintf@prec:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x1F
   669  000020                     	ds	1
   670  000021                     sprintf@width:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x20
   674  000021                     	ds	2
   675  000023                     sprintf@c:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x22
   679  000023                     	ds	1
   680  000024                     ??_keyboard_control:
   681                           
   682                           ; 0 bytes @ 0x23
   683  000024                     	ds	1
   684  000025                     tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           postdec1	equ	0xFE5
   691                           fsr1l	equ	0xFE1
   692                           
   693                           ; 0 bytes @ 0x24
   694 ;;
   695 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   696 ;;
   697 ;; *************** function _main *****************
   698 ;; Defined at:
   699 ;;		line 282 in file "main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  2  272[None  ] int 
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels required when called:    8
   719 ;; This function calls:
   720 ;;		_home
   721 ;;		_keyboard_control
   722 ;;		_setup
   723 ;; This function is called by:
   724 ;;		Startup code after reset
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text0
   729  0020CC                     __ptext0:
   730                           	opt stack 0
   731  0020CC                     _main:
   732                           	opt stack 23
   733                           
   734                           ;main.c: 283: setup();
   735                           
   736                           ;incstack = 0
   737  0020CC  ECC4  F00E         	call	_setup	;wreg free
   738                           
   739                           ;main.c: 284: home();
   740  0020D0  EC66  F00D         	call	_home	;wreg free
   741  0020D4  D000               	goto	l2862
   742  0020D6                     l2862:
   743  0020D6  ECC6  F007         	call	_keyboard_control	;wreg free
   744  0020DA  D7FD               	goto	l2862
   745                           
   746                           ;main.c: 286: return 0;
   747                           ;	Return value of _main is never used
   748  0020DC  EF00  F000         	goto	start
   749  0020E0                     __end_of_main:
   750                           	opt stack 0
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           postinc0	equ	0xFEE
   756                           wreg	equ	0xFE8
   757                           postdec1	equ	0xFE5
   758                           fsr1l	equ	0xFE1
   759                           
   760 ;; *************** function _setup *****************
   761 ;; Defined at:
   762 ;;		line 36 in file "main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;		None               void
   769 ;; Registers used:
   770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    3
   783 ;; This function calls:
   784 ;;		_Write_RTC
   785 ;;		_lcd_comand
   786 ;;		_lcd_init
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text1
   793  001D88                     __ptext1:
   794                           	opt stack 0
   795  001D88                     _setup:
   796                           	opt stack 27
   797                           
   798                           ;main.c: 38: OSCTUNEbits.INTSRC=1;
   799                           
   800                           ;incstack = 0
   801  001D88  8E9B               	bsf	3995,7,c	;volatile
   802                           
   803                           ;main.c: 39: OSCTUNEbits.PLLEN=0;
   804  001D8A  9C9B               	bcf	3995,6,c	;volatile
   805                           
   806                           ;main.c: 40: OSCCONbits.IRCF0=1;
   807  001D8C  88D3               	bsf	4051,4,c	;volatile
   808                           
   809                           ;main.c: 41: OSCCONbits.IRCF1=1;
   810  001D8E  8AD3               	bsf	4051,5,c	;volatile
   811                           
   812                           ;main.c: 42: OSCCONbits.IRCF2=1;
   813  001D90  8CD3               	bsf	4051,6,c	;volatile
   814                           
   815                           ;main.c: 43: OSCCONbits.SCS0=0;
   816  001D92  90D3               	bcf	4051,0,c	;volatile
   817                           
   818                           ;main.c: 44: OSCCONbits.SCS1=0;
   819  001D94  92D3               	bcf	4051,1,c	;volatile
   820                           
   821                           ;main.c: 45: TRISA = 0b11110000;
   822  001D96  0EF0               	movlw	240
   823  001D98  6E92               	movwf	3986,c	;volatile
   824                           
   825                           ;main.c: 46: TRISB = 0;
   826  001D9A  0E00               	movlw	0
   827  001D9C  6E93               	movwf	3987,c	;volatile
   828                           
   829                           ;main.c: 47: TRISC = 0b00000111;
   830  001D9E  0E07               	movlw	7
   831  001DA0  6E94               	movwf	3988,c	;volatile
   832                           
   833                           ;main.c: 51: ANCON0=0b11111111;
   834  001DA2  010F               	movlb	15	; () banked
   835  001DA4  6948               	setf	72,b	;volatile
   836                           
   837                           ; BSR set to: 15
   838                           ;main.c: 53: ANCON1=0b11111111;
   839  001DA6  010F               	movlb	15	; () banked
   840  001DA8  6949               	setf	73,b	;volatile
   841                           
   842                           ;main.c: 54: ADCON0=0b00101101;
   843  001DAA  0E2D               	movlw	45
   844  001DAC  6EC2               	movwf	4034,c	;volatile
   845                           
   846                           ;main.c: 55: ADCON1=0b00010000;
   847  001DAE  0E10               	movlw	16
   848  001DB0  6EC1               	movwf	4033,c	;volatile
   849                           
   850                           ; BSR set to: 15
   851                           ;main.c: 56: RTCCFGbits.RTCEN=1;
   852  001DB2  010F               	movlb	15	; () banked
   853  001DB4  8F3F               	bsf	63,7,b	;volatile
   854                           
   855                           ; BSR set to: 15
   856                           ;main.c: 57: RTCCFGbits.RTCWREN=1;
   857  001DB6  010F               	movlb	15	; () banked
   858  001DB8  8B3F               	bsf	63,5,b	;volatile
   859                           
   860                           ; BSR set to: 15
   861                           ;main.c: 58: T1CONbits.T1OSCEN=1;
   862  001DBA  86CD               	bsf	4045,3,c	;volatile
   863                           
   864                           ; BSR set to: 15
   865                           ;main.c: 59: Write_RTC();
   866  001DBC  EC05  F00B         	call	_Write_RTC	;wreg free
   867                           
   868                           ;main.c: 60: lcd_init();
   869  001DC0  EC49  F00E         	call	_lcd_init	;wreg free
   870                           
   871                           ;main.c: 61: lcd_comand(0b00001100);
   872  001DC4  0E0C               	movlw	12
   873  001DC6  EC99  F010         	call	_lcd_comand
   874                           
   875                           ;main.c: 62: LATBbits.LATB1 = 1;;
   876  001DCA  828A               	bsf	3978,1,c	;volatile
   877                           
   878                           ;main.c: 63: LATBbits.LATB0 = 1;;
   879  001DCC  808A               	bsf	3978,0,c	;volatile
   880                           
   881                           ;main.c: 66: select = 1;
   882  001DCE  0E00               	movlw	0
   883  001DD0  6E38               	movwf	_select+1,c
   884  001DD2  0E01               	movlw	1
   885  001DD4  6E37               	movwf	_select,c
   886                           
   887                           ;main.c: 67: selection = 1;
   888  001DD6  0E00               	movlw	0
   889  001DD8  6E3C               	movwf	_selection+1,c
   890  001DDA  0E01               	movlw	1
   891  001DDC  6E3B               	movwf	_selection,c
   892                           
   893                           ;main.c: 68: menu = 0;
   894  001DDE  0E00               	movlw	0
   895  001DE0  6E32               	movwf	_menu+1,c
   896  001DE2  0E00               	movlw	0
   897  001DE4  6E31               	movwf	_menu,c
   898                           
   899                           ;main.c: 69: submenu = 0;
   900  001DE6  0E00               	movlw	0
   901  001DE8  6E3E               	movwf	_submenu+1,c
   902  001DEA  0E00               	movlw	0
   903  001DEC  6E3D               	movwf	_submenu,c
   904                           
   905                           ;main.c: 70: select_op = 1;
   906  001DEE  0E00               	movlw	0
   907  001DF0  6E3A               	movwf	_select_op+1,c
   908  001DF2  0E01               	movlw	1
   909  001DF4  6E39               	movwf	_select_op,c
   910  001DF6  0012               	return		;funcret
   911  001DF8                     __end_of_setup:
   912                           	opt stack 0
   913                           tblptru	equ	0xFF8
   914                           tblptrh	equ	0xFF7
   915                           tblptrl	equ	0xFF6
   916                           tablat	equ	0xFF5
   917                           postinc0	equ	0xFEE
   918                           wreg	equ	0xFE8
   919                           postdec1	equ	0xFE5
   920                           fsr1l	equ	0xFE1
   921                           
   922 ;; *************** function _Write_RTC *****************
   923 ;; Defined at:
   924 ;;		line 74 in file "Unimic/unmc_01/headers\unmc_rtcc_01.h"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;		None               void
   931 ;; Registers used:
   932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    2
   945 ;; This function calls:
   946 ;;		_RtccWrOn
   947 ;;		_RtccWriteDate
   948 ;;		_RtccWriteTime
   949 ;;		___awdiv
   950 ;; This function is called by:
   951 ;;		_setup
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text2
   956  00160A                     __ptext2:
   957                           	opt stack 0
   958  00160A                     _Write_RTC:
   959                           	opt stack 27
   960                           
   961                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
   962                           
   963                           ;incstack = 0
   964  00160A  EC70  F010         	call	_RtccWrOn	;wreg free
   965                           
   966                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
   967  00160E  80A3               	bsf	4003,0,c	;volatile
   968                           
   969                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
   970  001610  C035  F001         	movff	_segundo,___awdiv@dividend
   971  001614  C036  F002         	movff	_segundo+1,___awdiv@dividend+1
   972  001618  0E00               	movlw	0
   973  00161A  6E04               	movwf	___awdiv@divisor+1,c
   974  00161C  0E0A               	movlw	10
   975  00161E  6E03               	movwf	___awdiv@divisor,c
   976  001620  ECB6  F00D         	call	___awdiv	;wreg free
   977  001624  5001               	movf	?___awdiv,w,c
   978  001626  6E53               	movwf	_segundo_d,c
   979                           
   980                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
   981  001628  5053               	movf	_segundo_d,w,c
   982  00162A  0D0A               	mullw	10
   983  00162C  50F3               	movf	prodl,w,c
   984  00162E  0800               	sublw	0
   985  001630  2435               	addwf	_segundo,w,c
   986  001632  6E54               	movwf	_segundo_u,c
   987                           
   988                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
   989  001634  5053               	movf	_segundo_d,w,c
   990  001636  0D10               	mullw	16
   991  001638  50F3               	movf	prodl,w,c
   992  00163A  2454               	addwf	_segundo_u,w,c
   993  00163C  6E45               	movwf	_RtccTime+1,c
   994                           
   995                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
   996  00163E  C033  F001         	movff	_minuto,___awdiv@dividend
   997  001642  C034  F002         	movff	_minuto+1,___awdiv@dividend+1
   998  001646  0E00               	movlw	0
   999  001648  6E04               	movwf	___awdiv@divisor+1,c
  1000  00164A  0E0A               	movlw	10
  1001  00164C  6E03               	movwf	___awdiv@divisor,c
  1002  00164E  ECB6  F00D         	call	___awdiv	;wreg free
  1003  001652  5001               	movf	?___awdiv,w,c
  1004  001654  6E51               	movwf	_minuto_d,c
  1005                           
  1006                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  1007  001656  5051               	movf	_minuto_d,w,c
  1008  001658  0D0A               	mullw	10
  1009  00165A  50F3               	movf	prodl,w,c
  1010  00165C  0800               	sublw	0
  1011  00165E  2433               	addwf	_minuto,w,c
  1012  001660  6E52               	movwf	_minuto_u,c
  1013                           
  1014                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  1015  001662  5051               	movf	_minuto_d,w,c
  1016  001664  0D10               	mullw	16
  1017  001666  50F3               	movf	prodl,w,c
  1018  001668  2452               	addwf	_minuto_u,w,c
  1019  00166A  6E46               	movwf	_RtccTime+2,c
  1020                           
  1021                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  1022  00166C  C05B  F001         	movff	_hora,___awdiv@dividend
  1023  001670  C05C  F002         	movff	_hora+1,___awdiv@dividend+1
  1024  001674  0E00               	movlw	0
  1025  001676  6E04               	movwf	___awdiv@divisor+1,c
  1026  001678  0E0A               	movlw	10
  1027  00167A  6E03               	movwf	___awdiv@divisor,c
  1028  00167C  ECB6  F00D         	call	___awdiv	;wreg free
  1029  001680  5001               	movf	?___awdiv,w,c
  1030  001682  6E4D               	movwf	_hora_d,c
  1031                           
  1032                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  1033  001684  504D               	movf	_hora_d,w,c
  1034  001686  0D0A               	mullw	10
  1035  001688  50F3               	movf	prodl,w,c
  1036  00168A  0800               	sublw	0
  1037  00168C  245B               	addwf	_hora,w,c
  1038  00168E  6E4E               	movwf	_hora_u,c
  1039                           
  1040                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  1041  001690  504D               	movf	_hora_d,w,c
  1042  001692  0D10               	mullw	16
  1043  001694  50F3               	movf	prodl,w,c
  1044  001696  244E               	addwf	_hora_u,w,c
  1045  001698  6E47               	movwf	_RtccTime+3,c
  1046                           
  1047                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  1048  00169A  C055  F001         	movff	_anio,___awdiv@dividend
  1049  00169E  C056  F002         	movff	_anio+1,___awdiv@dividend+1
  1050  0016A2  0E00               	movlw	0
  1051  0016A4  6E04               	movwf	___awdiv@divisor+1,c
  1052  0016A6  0E0A               	movlw	10
  1053  0016A8  6E03               	movwf	___awdiv@divisor,c
  1054  0016AA  ECB6  F00D         	call	___awdiv	;wreg free
  1055  0016AE  5001               	movf	?___awdiv,w,c
  1056  0016B0  6E48               	movwf	_anio_d,c
  1057                           
  1058                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  1059  0016B2  5048               	movf	_anio_d,w,c
  1060  0016B4  0D0A               	mullw	10
  1061  0016B6  50F3               	movf	prodl,w,c
  1062  0016B8  0800               	sublw	0
  1063  0016BA  2455               	addwf	_anio,w,c
  1064  0016BC  6E49               	movwf	_anio_u,c
  1065                           
  1066                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  1067  0016BE  5048               	movf	_anio_d,w,c
  1068  0016C0  0D10               	mullw	16
  1069  0016C2  50F3               	movf	prodl,w,c
  1070  0016C4  2449               	addwf	_anio_u,w,c
  1071  0016C6  6E43               	movwf	_RtccDate+3,c
  1072                           
  1073                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  1074  0016C8  C05D  F001         	movff	_mes,___awdiv@dividend
  1075  0016CC  C05E  F002         	movff	_mes+1,___awdiv@dividend+1
  1076  0016D0  0E00               	movlw	0
  1077  0016D2  6E04               	movwf	___awdiv@divisor+1,c
  1078  0016D4  0E0A               	movlw	10
  1079  0016D6  6E03               	movwf	___awdiv@divisor,c
  1080  0016D8  ECB6  F00D         	call	___awdiv	;wreg free
  1081  0016DC  5001               	movf	?___awdiv,w,c
  1082  0016DE  6E4F               	movwf	_mes_d,c
  1083                           
  1084                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  1085  0016E0  504F               	movf	_mes_d,w,c
  1086  0016E2  0D0A               	mullw	10
  1087  0016E4  50F3               	movf	prodl,w,c
  1088  0016E6  0800               	sublw	0
  1089  0016E8  245D               	addwf	_mes,w,c
  1090  0016EA  6E50               	movwf	_mes_u,c
  1091                           
  1092                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  1093  0016EC  504F               	movf	_mes_d,w,c
  1094  0016EE  0D10               	mullw	16
  1095  0016F0  50F3               	movf	prodl,w,c
  1096  0016F2  2450               	addwf	_mes_u,w,c
  1097  0016F4  6E42               	movwf	_RtccDate+2,c
  1098                           
  1099                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  1100  0016F6  C057  F001         	movff	_dia,___awdiv@dividend
  1101  0016FA  C058  F002         	movff	_dia+1,___awdiv@dividend+1
  1102  0016FE  0E00               	movlw	0
  1103  001700  6E04               	movwf	___awdiv@divisor+1,c
  1104  001702  0E0A               	movlw	10
  1105  001704  6E03               	movwf	___awdiv@divisor,c
  1106  001706  ECB6  F00D         	call	___awdiv	;wreg free
  1107  00170A  5001               	movf	?___awdiv,w,c
  1108  00170C  6E4B               	movwf	_fecha_d,c
  1109                           
  1110                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  1111  00170E  504B               	movf	_fecha_d,w,c
  1112  001710  0D0A               	mullw	10
  1113  001712  50F3               	movf	prodl,w,c
  1114  001714  0800               	sublw	0
  1115  001716  2457               	addwf	_dia,w,c
  1116  001718  6E4C               	movwf	_fecha_u,c
  1117                           
  1118                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  1119  00171A  504B               	movf	_fecha_d,w,c
  1120  00171C  0D10               	mullw	16
  1121  00171E  50F3               	movf	prodl,w,c
  1122  001720  244C               	addwf	_fecha_u,w,c
  1123  001722  6E41               	movwf	_RtccDate+1,c
  1124                           
  1125                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  1126  001724  C059  F04A         	movff	_diasem,_dia_semana
  1127                           
  1128                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  1129  001728  C059  F040         	movff	_diasem,_RtccDate
  1130                           
  1131                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  1132  00172C  0E44               	movlw	low _RtccTime
  1133  00172E  6E01               	movwf	RtccWriteTime@pTm,c
  1134  001730  0E00               	movlw	high _RtccTime
  1135  001732  6E02               	movwf	RtccWriteTime@pTm+1,c
  1136  001734  0E01               	movlw	1
  1137  001736  6E03               	movwf	RtccWriteTime@di,c
  1138  001738  ECE0  F00C         	call	_RtccWriteTime	;wreg free
  1139                           
  1140                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  1141  00173C  0E40               	movlw	low _RtccDate
  1142  00173E  6E01               	movwf	RtccWriteDate@pDt,c
  1143  001740  0E00               	movlw	high _RtccDate
  1144  001742  6E02               	movwf	RtccWriteDate@pDt+1,c
  1145  001744  0E01               	movlw	1
  1146  001746  6E03               	movwf	RtccWriteDate@di,c
  1147  001748  ECA9  F00B         	call	_RtccWriteDate	;wreg free
  1148                           
  1149                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  1150  00174C  010F               	movlb	15	; () banked
  1151  00174E  8F3F               	bsf	63,7,b	;volatile
  1152                           
  1153                           ; BSR set to: 15
  1154  001750  0012               	return		;funcret
  1155  001752                     __end_of_Write_RTC:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           prodl	equ	0xFF3
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1l	equ	0xFE1
  1166                           
  1167 ;; *************** function ___awdiv *****************
  1168 ;; Defined at:
  1169 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  dividend        2    0[COMRAM] int 
  1172 ;;  divisor         2    2[COMRAM] int 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  quotient        2    6[COMRAM] int 
  1175 ;;  sign            1    5[COMRAM] unsigned char 
  1176 ;;  counter         1    4[COMRAM] unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2    0[COMRAM] int 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1187 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1189 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1190 ;;Total ram usage:        8 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_Write_RTC
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text3
  1200  001B6C                     __ptext3:
  1201                           	opt stack 0
  1202  001B6C                     ___awdiv:
  1203                           	opt stack 28
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;incstack = 0
  1207  001B6C  0E00               	movlw	0
  1208  001B6E  6E06               	movwf	___awdiv@sign,c
  1209  001B70  AE04               	btfss	___awdiv@divisor+1,7,c
  1210  001B72  D007               	goto	l2546
  1211  001B74  6C03               	negf	___awdiv@divisor,c
  1212  001B76  1E04               	comf	___awdiv@divisor+1,f,c
  1213  001B78  B0D8               	btfsc	status,0,c
  1214  001B7A  2A04               	incf	___awdiv@divisor+1,f,c
  1215  001B7C  0E01               	movlw	1
  1216  001B7E  6E06               	movwf	___awdiv@sign,c
  1217  001B80  D000               	goto	l2546
  1218  001B82                     l2546:
  1219  001B82  AE02               	btfss	___awdiv@dividend+1,7,c
  1220  001B84  D007               	goto	l2552
  1221  001B86  6C01               	negf	___awdiv@dividend,c
  1222  001B88  1E02               	comf	___awdiv@dividend+1,f,c
  1223  001B8A  B0D8               	btfsc	status,0,c
  1224  001B8C  2A02               	incf	___awdiv@dividend+1,f,c
  1225  001B8E  0E01               	movlw	1
  1226  001B90  1A06               	xorwf	___awdiv@sign,f,c
  1227  001B92  D000               	goto	l2552
  1228  001B94                     l2552:
  1229  001B94  0E00               	movlw	0
  1230  001B96  6E08               	movwf	___awdiv@quotient+1,c
  1231  001B98  0E00               	movlw	0
  1232  001B9A  6E07               	movwf	___awdiv@quotient,c
  1233  001B9C  5003               	movf	___awdiv@divisor,w,c
  1234  001B9E  1004               	iorwf	___awdiv@divisor+1,w,c
  1235  001BA0  B4D8               	btfsc	status,2,c
  1236  001BA2  D021               	goto	l2574
  1237  001BA4  0E01               	movlw	1
  1238  001BA6  6E05               	movwf	___awdiv@counter,c
  1239  001BA8  D005               	goto	l2560
  1240  001BAA                     l2558:
  1241  001BAA  90D8               	bcf	status,0,c
  1242  001BAC  3603               	rlcf	___awdiv@divisor,f,c
  1243  001BAE  3604               	rlcf	___awdiv@divisor+1,f,c
  1244  001BB0  2A05               	incf	___awdiv@counter,f,c
  1245  001BB2  D000               	goto	l2560
  1246  001BB4                     l2560:
  1247  001BB4  BE04               	btfsc	___awdiv@divisor+1,7,c
  1248  001BB6  D002               	goto	l2562
  1249  001BB8  D7F8               	goto	l2558
  1250  001BBA  D000               	goto	l2562
  1251  001BBC                     l2562:
  1252  001BBC  90D8               	bcf	status,0,c
  1253  001BBE  3607               	rlcf	___awdiv@quotient,f,c
  1254  001BC0  3608               	rlcf	___awdiv@quotient+1,f,c
  1255  001BC2  5003               	movf	___awdiv@divisor,w,c
  1256  001BC4  5C01               	subwf	___awdiv@dividend,w,c
  1257  001BC6  5004               	movf	___awdiv@divisor+1,w,c
  1258  001BC8  5802               	subwfb	___awdiv@dividend+1,w,c
  1259  001BCA  A0D8               	btfss	status,0,c
  1260  001BCC  D006               	goto	l2570
  1261  001BCE  5003               	movf	___awdiv@divisor,w,c
  1262  001BD0  5E01               	subwf	___awdiv@dividend,f,c
  1263  001BD2  5004               	movf	___awdiv@divisor+1,w,c
  1264  001BD4  5A02               	subwfb	___awdiv@dividend+1,f,c
  1265  001BD6  8007               	bsf	___awdiv@quotient,0,c
  1266  001BD8  D000               	goto	l2570
  1267  001BDA                     l2570:
  1268  001BDA  90D8               	bcf	status,0,c
  1269  001BDC  3204               	rrcf	___awdiv@divisor+1,f,c
  1270  001BDE  3203               	rrcf	___awdiv@divisor,f,c
  1271  001BE0  2E05               	decfsz	___awdiv@counter,f,c
  1272  001BE2  D7EC               	goto	l2562
  1273  001BE4  D000               	goto	l2574
  1274  001BE6                     l2574:
  1275  001BE6  5006               	movf	___awdiv@sign,w,c
  1276  001BE8  B4D8               	btfsc	status,2,c
  1277  001BEA  D005               	goto	l2578
  1278  001BEC  6C07               	negf	___awdiv@quotient,c
  1279  001BEE  1E08               	comf	___awdiv@quotient+1,f,c
  1280  001BF0  B0D8               	btfsc	status,0,c
  1281  001BF2  2A08               	incf	___awdiv@quotient+1,f,c
  1282  001BF4  D000               	goto	l2578
  1283  001BF6                     l2578:
  1284  001BF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1285  001BFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1286  001BFE  0012               	return	
  1287  001C00  0012               	return		;funcret
  1288  001C02                     __end_of___awdiv:
  1289                           	opt stack 0
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           prodl	equ	0xFF3
  1295                           postinc0	equ	0xFEE
  1296                           wreg	equ	0xFE8
  1297                           postdec1	equ	0xFE5
  1298                           fsr1l	equ	0xFE1
  1299                           status	equ	0xFD8
  1300                           
  1301 ;; *************** function _RtccWriteTime *****************
  1302 ;; Defined at:
  1303 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  pTm             2    0[COMRAM] PTR const struct .
  1306 ;;		 -> RtccTime(4), 
  1307 ;;  di              1    2[COMRAM] enum E7121
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  tempHourWDay    2    9[COMRAM] struct .
  1310 ;;  tempMinSec      2    7[COMRAM] struct .
  1311 ;;  wasWrEn         1    6[COMRAM] enum E7121
  1312 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1313 ;;  wasOn           1    4[COMRAM] enum E7121
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      enum E7337
  1316 ;; Registers used:
  1317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1323 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1324 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;Total ram usage:       11 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    1
  1330 ;; This function calls:
  1331 ;;		_RtccWrOn
  1332 ;; This function is called by:
  1333 ;;		_Write_RTC
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text4
  1338  0019C0                     __ptext4:
  1339                           	opt stack 0
  1340  0019C0                     _RtccWriteTime:
  1341                           	opt stack 27
  1342                           
  1343                           ;incstack = 0
  1344  0019C0  0E00               	movlw	0
  1345  0019C2  6E06               	movwf	RtccWriteTime@wasAlrm,c
  1346  0019C4  EE20 F002          	lfsr	2,2
  1347  0019C8  5001               	movf	RtccWriteTime@pTm,w,c
  1348  0019CA  26D9               	addwf	fsr2l,f,c
  1349  0019CC  5002               	movf	RtccWriteTime@pTm+1,w,c
  1350  0019CE  22DA               	addwfc	fsr2h,f,c
  1351  0019D0  0E5A               	movlw	90
  1352  0019D2  60DF               	cpfslt	indf2,c
  1353  0019D4  0012               	return	
  1354  0019D6  EE20 F001          	lfsr	2,1
  1355  0019DA  5001               	movf	RtccWriteTime@pTm,w,c
  1356  0019DC  26D9               	addwf	fsr2l,f,c
  1357  0019DE  5002               	movf	RtccWriteTime@pTm+1,w,c
  1358  0019E0  22DA               	addwfc	fsr2h,f,c
  1359  0019E2  0E5A               	movlw	90
  1360  0019E4  60DF               	cpfslt	indf2,c
  1361  0019E6  0012               	return	
  1362  0019E8  EE20 F003          	lfsr	2,3
  1363  0019EC  5001               	movf	RtccWriteTime@pTm,w,c
  1364  0019EE  26D9               	addwf	fsr2l,f,c
  1365  0019F0  5002               	movf	RtccWriteTime@pTm+1,w,c
  1366  0019F2  22DA               	addwfc	fsr2h,f,c
  1367  0019F4  0E24               	movlw	36
  1368  0019F6  64DF               	cpfsgt	indf2,c
  1369  0019F8  D002               	goto	l2298
  1370  0019FA  0012               	return	
  1371                           
  1372                           ;	Return value of _RtccWriteTime is never used
  1373  0019FC  0012               	return	
  1374  0019FE                     l2298:
  1375  0019FE  EE20 F002          	lfsr	2,2
  1376  001A02  5001               	movf	RtccWriteTime@pTm,w,c
  1377  001A04  26D9               	addwf	fsr2l,f,c
  1378  001A06  5002               	movf	RtccWriteTime@pTm+1,w,c
  1379  001A08  22DA               	addwfc	fsr2h,f,c
  1380  001A0A  50DF               	movf	indf2,w,c
  1381  001A0C  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  1382  001A0E  EE20 F001          	lfsr	2,1
  1383  001A12  5001               	movf	RtccWriteTime@pTm,w,c
  1384  001A14  26D9               	addwf	fsr2l,f,c
  1385  001A16  5002               	movf	RtccWriteTime@pTm+1,w,c
  1386  001A18  22DA               	addwfc	fsr2h,f,c
  1387  001A1A  50DF               	movf	indf2,w,c
  1388  001A1C  6E08               	movwf	RtccWriteTime@tempMinSec,c
  1389  001A1E  5003               	movf	RtccWriteTime@di,w,c
  1390  001A20  B4D8               	btfsc	status,2,c
  1391  001A22  D002               	goto	l2304
  1392  001A24  9CF2               	bcf	intcon,6,c	;volatile
  1393  001A26  D000               	goto	l2304
  1394  001A28                     l2304:
  1395  001A28  0E00               	movlw	0
  1396  001A2A  BB3F               	btfsc	63,5,b	;volatile
  1397  001A2C  0E01               	movlw	1
  1398  001A2E  6E07               	movwf	RtccWriteTime@wasWrEn,c
  1399  001A30  5007               	movf	RtccWriteTime@wasWrEn,w,c
  1400  001A32  A4D8               	btfss	status,2,c
  1401  001A34  D003               	goto	l2308
  1402  001A36  EC70  F010         	call	_RtccWrOn	;wreg free
  1403  001A3A  D000               	goto	l2308
  1404  001A3C                     l2308:
  1405  001A3C  0E00               	movlw	0
  1406  001A3E  BF3F               	btfsc	63,7,b	;volatile
  1407  001A40  0E01               	movlw	1
  1408  001A42  6E05               	movwf	RtccWriteTime@wasOn,c
  1409  001A44  5005               	movf	RtccWriteTime@wasOn,w,c
  1410  001A46  B4D8               	btfsc	status,2,c
  1411  001A48  D007               	goto	l2314
  1412  001A4A  0E00               	movlw	0
  1413  001A4C  BE91               	btfsc	3985,7,c	;volatile
  1414  001A4E  0E01               	movlw	1
  1415  001A50  6E06               	movwf	RtccWriteTime@wasAlrm,c
  1416  001A52  010F               	movlb	15	; () banked
  1417  001A54  9F3F               	bcf	63,7,b	;volatile
  1418  001A56  D000               	goto	l2314
  1419  001A58                     l2314:
  1420  001A58  0EFC               	movlw	252
  1421  001A5A  010F               	movlb	15	; () banked
  1422  001A5C  173F               	andwf	63,f,b	;volatile
  1423  001A5E  010F               	movlb	15	; () banked
  1424  001A60  813F               	bsf	63,0,b	;volatile
  1425                           
  1426                           ; BSR set to: 15
  1427  001A62  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  1428                           
  1429                           ; BSR set to: 15
  1430  001A66  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  1431                           
  1432                           ; BSR set to: 15
  1433  001A6A  EE20 F003          	lfsr	2,3
  1434  001A6E  5001               	movf	RtccWriteTime@pTm,w,c
  1435  001A70  26D9               	addwf	fsr2l,f,c
  1436  001A72  5002               	movf	RtccWriteTime@pTm+1,w,c
  1437  001A74  22DA               	addwfc	fsr2h,f,c
  1438  001A76  50DF               	movf	indf2,w,c
  1439  001A78  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  1440                           
  1441                           ; BSR set to: 15
  1442  001A7A  0EFC               	movlw	252
  1443  001A7C  010F               	movlb	15	; () banked
  1444  001A7E  173F               	andwf	63,f,b	;volatile
  1445                           
  1446                           ; BSR set to: 15
  1447  001A80  010F               	movlb	15	; () banked
  1448  001A82  813F               	bsf	63,0,b	;volatile
  1449                           
  1450                           ; BSR set to: 15
  1451  001A84  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  1452                           
  1453                           ; BSR set to: 15
  1454  001A88  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  1455                           
  1456                           ; BSR set to: 15
  1457  001A8C  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  1458                           
  1459                           ; BSR set to: 15
  1460  001A90  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  1461                           
  1462                           ; BSR set to: 15
  1463  001A94  5005               	movf	RtccWriteTime@wasOn,w,c
  1464  001A96  B4D8               	btfsc	status,2,c
  1465  001A98  D00D               	goto	l2346
  1466                           
  1467                           ; BSR set to: 15
  1468  001A9A  010F               	movlb	15	; () banked
  1469  001A9C  8F3F               	bsf	63,7,b	;volatile
  1470                           
  1471                           ; BSR set to: 15
  1472  001A9E  5006               	movf	RtccWriteTime@wasAlrm,w,c
  1473  001AA0  B4D8               	btfsc	status,2,c
  1474  001AA2  D002               	goto	l2342
  1475                           
  1476                           ; BSR set to: 15
  1477  001AA4  8E91               	bsf	3985,7,c	;volatile
  1478  001AA6  D000               	goto	l2342
  1479  001AA8                     l2342:
  1480                           
  1481                           ; BSR set to: 15
  1482  001AA8  5007               	movf	RtccWriteTime@wasWrEn,w,c
  1483  001AAA  B4D8               	btfsc	status,2,c
  1484  001AAC  D009               	goto	l2350
  1485                           
  1486                           ; BSR set to: 15
  1487  001AAE  EC70  F010         	call	_RtccWrOn	;wreg free
  1488  001AB2  D006               	goto	l2350
  1489  001AB4                     l2346:
  1490  001AB4  5007               	movf	RtccWriteTime@wasWrEn,w,c
  1491  001AB6  A4D8               	btfss	status,2,c
  1492  001AB8  D003               	goto	l2350
  1493  001ABA  010F               	movlb	15	; () banked
  1494  001ABC  9B3F               	bcf	63,5,b	;volatile
  1495                           
  1496                           ; BSR set to: 15
  1497  001ABE  D000               	goto	l2350
  1498  001AC0                     l2350:
  1499  001AC0  5003               	movf	RtccWriteTime@di,w,c
  1500  001AC2  B4D8               	btfsc	status,2,c
  1501  001AC4  0012               	return	
  1502  001AC6  8CF2               	bsf	intcon,6,c	;volatile
  1503  001AC8  0012               	return	
  1504                           
  1505                           ;	Return value of _RtccWriteTime is never used
  1506  001ACA  0012               	return		;funcret
  1507  001ACC                     __end_of_RtccWriteTime:
  1508                           	opt stack 0
  1509                           tblptru	equ	0xFF8
  1510                           tblptrh	equ	0xFF7
  1511                           tblptrl	equ	0xFF6
  1512                           tablat	equ	0xFF5
  1513                           prodl	equ	0xFF3
  1514                           intcon	equ	0xFF2
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1l	equ	0xFE1
  1519                           indf2	equ	0xFDF
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _RtccWriteDate *****************
  1525 ;; Defined at:
  1526 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  pDt             2    0[COMRAM] PTR const struct .
  1529 ;;		 -> RtccDate(4), 
  1530 ;;  di              1    2[COMRAM] enum E7121
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  tempHourWDay    2   11[COMRAM] struct .
  1533 ;;  tempDayMonth    2    9[COMRAM] struct .
  1534 ;;  tempYear        2    6[COMRAM] struct .
  1535 ;;  wasWrEn         1    8[COMRAM] enum E7121
  1536 ;;  wasAlrm         1    5[COMRAM] enum E7121
  1537 ;;  wasOn           1    4[COMRAM] enum E7121
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      enum E7337
  1540 ;; Registers used:
  1541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1547 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1551 ;;Total ram usage:       13 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		_RtccWrOn
  1556 ;; This function is called by:
  1557 ;;		_Write_RTC
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text5
  1562  001752                     __ptext5:
  1563                           	opt stack 0
  1564  001752                     _RtccWriteDate:
  1565                           	opt stack 27
  1566                           
  1567                           ;incstack = 0
  1568  001752  0E00               	movlw	0
  1569  001754  6E06               	movwf	RtccWriteDate@wasAlrm,c
  1570  001756  EE20 F002          	lfsr	2,2
  1571  00175A  5001               	movf	RtccWriteDate@pDt,w,c
  1572  00175C  26D9               	addwf	fsr2l,f,c
  1573  00175E  5002               	movf	RtccWriteDate@pDt+1,w,c
  1574  001760  22DA               	addwfc	fsr2h,f,c
  1575  001762  0E13               	movlw	19
  1576  001764  60DF               	cpfslt	indf2,c
  1577  001766  0012               	return	
  1578  001768  EE20 F002          	lfsr	2,2
  1579  00176C  5001               	movf	RtccWriteDate@pDt,w,c
  1580  00176E  26D9               	addwf	fsr2l,f,c
  1581  001770  5002               	movf	RtccWriteDate@pDt+1,w,c
  1582  001772  22DA               	addwfc	fsr2h,f,c
  1583  001774  50DF               	movf	indf2,w,c
  1584  001776  B4D8               	btfsc	status,2,c
  1585  001778  0012               	return	
  1586  00177A  EE20 F001          	lfsr	2,1
  1587  00177E  5001               	movf	RtccWriteDate@pDt,w,c
  1588  001780  26D9               	addwf	fsr2l,f,c
  1589  001782  5002               	movf	RtccWriteDate@pDt+1,w,c
  1590  001784  22DA               	addwfc	fsr2h,f,c
  1591  001786  0E32               	movlw	50
  1592  001788  60DF               	cpfslt	indf2,c
  1593  00178A  0012               	return	
  1594  00178C  EE20 F001          	lfsr	2,1
  1595  001790  5001               	movf	RtccWriteDate@pDt,w,c
  1596  001792  26D9               	addwf	fsr2l,f,c
  1597  001794  5002               	movf	RtccWriteDate@pDt+1,w,c
  1598  001796  22DA               	addwfc	fsr2h,f,c
  1599  001798  50DF               	movf	indf2,w,c
  1600  00179A  B4D8               	btfsc	status,2,c
  1601  00179C  0012               	return	
  1602  00179E  EE20 F003          	lfsr	2,3
  1603  0017A2  5001               	movf	RtccWriteDate@pDt,w,c
  1604  0017A4  26D9               	addwf	fsr2l,f,c
  1605  0017A6  5002               	movf	RtccWriteDate@pDt+1,w,c
  1606  0017A8  22DA               	addwfc	fsr2h,f,c
  1607  0017AA  0E99               	movlw	153
  1608  0017AC  64DF               	cpfsgt	indf2,c
  1609  0017AE  D002               	goto	l2366
  1610  0017B0  0012               	return	
  1611                           
  1612                           ;	Return value of _RtccWriteDate is never used
  1613  0017B2  0012               	return	
  1614  0017B4                     l2366:
  1615  0017B4  EE20 F003          	lfsr	2,3
  1616  0017B8  5001               	movf	RtccWriteDate@pDt,w,c
  1617  0017BA  26D9               	addwf	fsr2l,f,c
  1618  0017BC  5002               	movf	RtccWriteDate@pDt+1,w,c
  1619  0017BE  22DA               	addwfc	fsr2h,f,c
  1620  0017C0  50DF               	movf	indf2,w,c
  1621  0017C2  6E07               	movwf	RtccWriteDate@tempYear,c
  1622  0017C4  EE20 F001          	lfsr	2,1
  1623  0017C8  5001               	movf	RtccWriteDate@pDt,w,c
  1624  0017CA  26D9               	addwf	fsr2l,f,c
  1625  0017CC  5002               	movf	RtccWriteDate@pDt+1,w,c
  1626  0017CE  22DA               	addwfc	fsr2h,f,c
  1627  0017D0  50DF               	movf	indf2,w,c
  1628  0017D2  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  1629  0017D4  EE20 F002          	lfsr	2,2
  1630  0017D8  5001               	movf	RtccWriteDate@pDt,w,c
  1631  0017DA  26D9               	addwf	fsr2l,f,c
  1632  0017DC  5002               	movf	RtccWriteDate@pDt+1,w,c
  1633  0017DE  22DA               	addwfc	fsr2h,f,c
  1634  0017E0  50DF               	movf	indf2,w,c
  1635  0017E2  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  1636  0017E4  5003               	movf	RtccWriteDate@di,w,c
  1637  0017E6  B4D8               	btfsc	status,2,c
  1638  0017E8  D002               	goto	l2372
  1639  0017EA  9CF2               	bcf	intcon,6,c	;volatile
  1640  0017EC  D000               	goto	l2372
  1641  0017EE                     l2372:
  1642  0017EE  0E00               	movlw	0
  1643  0017F0  BB3F               	btfsc	63,5,b	;volatile
  1644  0017F2  0E01               	movlw	1
  1645  0017F4  6E09               	movwf	RtccWriteDate@wasWrEn,c
  1646  0017F6  5009               	movf	RtccWriteDate@wasWrEn,w,c
  1647  0017F8  A4D8               	btfss	status,2,c
  1648  0017FA  D003               	goto	l2376
  1649  0017FC  EC70  F010         	call	_RtccWrOn	;wreg free
  1650  001800  D000               	goto	l2376
  1651  001802                     l2376:
  1652  001802  0E00               	movlw	0
  1653  001804  BF3F               	btfsc	63,7,b	;volatile
  1654  001806  0E01               	movlw	1
  1655  001808  6E05               	movwf	RtccWriteDate@wasOn,c
  1656  00180A  5005               	movf	RtccWriteDate@wasOn,w,c
  1657  00180C  B4D8               	btfsc	status,2,c
  1658  00180E  D007               	goto	l2382
  1659  001810  0E00               	movlw	0
  1660  001812  BE91               	btfsc	3985,7,c	;volatile
  1661  001814  0E01               	movlw	1
  1662  001816  6E06               	movwf	RtccWriteDate@wasAlrm,c
  1663  001818  010F               	movlb	15	; () banked
  1664  00181A  9F3F               	bcf	63,7,b	;volatile
  1665  00181C  D000               	goto	l2382
  1666  00181E                     l2382:
  1667  00181E  0EFC               	movlw	252
  1668  001820  010F               	movlb	15	; () banked
  1669  001822  173F               	andwf	63,f,b	;volatile
  1670  001824  010F               	movlb	15	; () banked
  1671  001826  813F               	bsf	63,0,b	;volatile
  1672                           
  1673                           ; BSR set to: 15
  1674  001828  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  1675                           
  1676                           ; BSR set to: 15
  1677  00182C  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  1678                           
  1679                           ; BSR set to: 15
  1680  001830  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  1681  001834  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  1682  001838  50DF               	movf	indf2,w,c
  1683  00183A  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  1684                           
  1685                           ; BSR set to: 15
  1686  00183C  0EFC               	movlw	252
  1687  00183E  010F               	movlb	15	; () banked
  1688  001840  173F               	andwf	63,f,b	;volatile
  1689                           
  1690                           ; BSR set to: 15
  1691  001842  0E03               	movlw	3
  1692  001844  010F               	movlb	15	; () banked
  1693  001846  133F               	iorwf	63,f,b	;volatile
  1694                           
  1695                           ; BSR set to: 15
  1696  001848  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  1697                           
  1698                           ; BSR set to: 15
  1699  00184C  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  1700                           
  1701                           ; BSR set to: 15
  1702  001850  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  1703                           
  1704                           ; BSR set to: 15
  1705  001854  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  1706                           
  1707                           ; BSR set to: 15
  1708  001858  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  1709                           
  1710                           ; BSR set to: 15
  1711  00185C  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  1712                           
  1713                           ; BSR set to: 15
  1714  001860  5005               	movf	RtccWriteDate@wasOn,w,c
  1715  001862  B4D8               	btfsc	status,2,c
  1716  001864  D00D               	goto	l2418
  1717                           
  1718                           ; BSR set to: 15
  1719  001866  010F               	movlb	15	; () banked
  1720  001868  8F3F               	bsf	63,7,b	;volatile
  1721                           
  1722                           ; BSR set to: 15
  1723  00186A  5006               	movf	RtccWriteDate@wasAlrm,w,c
  1724  00186C  B4D8               	btfsc	status,2,c
  1725  00186E  D002               	goto	l2414
  1726                           
  1727                           ; BSR set to: 15
  1728  001870  8E91               	bsf	3985,7,c	;volatile
  1729  001872  D000               	goto	l2414
  1730  001874                     l2414:
  1731                           
  1732                           ; BSR set to: 15
  1733  001874  5009               	movf	RtccWriteDate@wasWrEn,w,c
  1734  001876  B4D8               	btfsc	status,2,c
  1735  001878  D009               	goto	l2422
  1736                           
  1737                           ; BSR set to: 15
  1738  00187A  EC70  F010         	call	_RtccWrOn	;wreg free
  1739  00187E  D006               	goto	l2422
  1740  001880                     l2418:
  1741  001880  5009               	movf	RtccWriteDate@wasWrEn,w,c
  1742  001882  A4D8               	btfss	status,2,c
  1743  001884  D003               	goto	l2422
  1744  001886  010F               	movlb	15	; () banked
  1745  001888  9B3F               	bcf	63,5,b	;volatile
  1746                           
  1747                           ; BSR set to: 15
  1748  00188A  D000               	goto	l2422
  1749  00188C                     l2422:
  1750  00188C  5003               	movf	RtccWriteDate@di,w,c
  1751  00188E  B4D8               	btfsc	status,2,c
  1752  001890  0012               	return	
  1753  001892  9CF2               	bcf	intcon,6,c	;volatile
  1754  001894  0012               	return	
  1755                           
  1756                           ;	Return value of _RtccWriteDate is never used
  1757  001896  0012               	return		;funcret
  1758  001898                     __end_of_RtccWriteDate:
  1759                           	opt stack 0
  1760                           tblptru	equ	0xFF8
  1761                           tblptrh	equ	0xFF7
  1762                           tblptrl	equ	0xFF6
  1763                           tablat	equ	0xFF5
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           postinc0	equ	0xFEE
  1767                           wreg	equ	0xFE8
  1768                           postdec1	equ	0xFE5
  1769                           fsr1l	equ	0xFE1
  1770                           indf2	equ	0xFDF
  1771                           fsr2h	equ	0xFDA
  1772                           fsr2l	equ	0xFD9
  1773                           status	equ	0xFD8
  1774                           
  1775 ;; *************** function _RtccWrOn *****************
  1776 ;; Defined at:
  1777 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  data            2    0        unsigned int 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;		None               void
  1784 ;; Registers used:
  1785 ;;		wreg, status,2
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_Write_RTC
  1801 ;;		_RtccWriteDate
  1802 ;;		_RtccWriteTime
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text6
  1807  0020E0                     __ptext6:
  1808                           	opt stack 0
  1809  0020E0                     _RtccWrOn:
  1810                           	opt stack 27
  1811                           
  1812                           ;incstack = 0
  1813  0020E0  9CF2               	bcf	intcon,6,c	;volatile
  1814  0020E2  0E55               	movlw	85
  1815  0020E4  6EA7               	movwf	4007,c	;volatile
  1816  0020E6  0EAA               	movlw	170
  1817  0020E8  6EA7               	movwf	4007,c	;volatile
  1818  0020EA  010F               	movlb	15	; () banked
  1819  0020EC  8B3F               	bsf	63,5,b	;volatile
  1820                           
  1821                           ; BSR set to: 15
  1822  0020EE  8CF2               	bsf	intcon,6,c	;volatile
  1823                           
  1824                           ; BSR set to: 15
  1825  0020F0  0012               	return		;funcret
  1826  0020F2                     __end_of_RtccWrOn:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           prodl	equ	0xFF3
  1833                           intcon	equ	0xFF2
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           postdec1	equ	0xFE5
  1837                           fsr1l	equ	0xFE1
  1838                           indf2	equ	0xFDF
  1839                           fsr2h	equ	0xFDA
  1840                           fsr2l	equ	0xFD9
  1841                           status	equ	0xFD8
  1842                           
  1843 ;; *************** function _keyboard_control *****************
  1844 ;; Defined at:
  1845 ;;		line 244 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;		None               void
  1852 ;; Registers used:
  1853 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;Total ram usage:        1 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    7
  1866 ;; This function calls:
  1867 ;;		_button_A
  1868 ;;		_button_B
  1869 ;;		_button_C
  1870 ;;		_button_D
  1871 ;;		_button_asterisk
  1872 ;;		_button_hash
  1873 ;;		_lcd_putrs
  1874 ;;		_sprintf
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text7
  1881  000F8C                     __ptext7:
  1882                           	opt stack 0
  1883  000F8C                     _keyboard_control:
  1884                           	opt stack 23
  1885                           
  1886                           ;main.c: 246: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1887                           
  1888                           ; BSR set to: 15
  1889                           ;incstack = 0
  1890  000F8C  8089               	bsf	3977,0,c	;volatile
  1891  000F8E  9289               	bcf	3977,1,c	;volatile
  1892  000F90  9489               	bcf	3977,2,c	;volatile
  1893  000F92  9689               	bcf	3977,3,c	;volatile
  1894                           
  1895                           ;main.c: 247: {
  1896                           ;main.c: 248: if (PORTAbits.RA5==1){key=1;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA5==1){};}
  1897  000F94  AA80               	btfss	3968,5,c	;volatile
  1898  000F96  D018               	goto	l206
  1899  000F98  0E01               	movlw	1
  1900  000F9A  6E3F               	movwf	_key,c
  1901  000F9C  0E7C               	movlw	low _buffer1
  1902  000F9E  6E0D               	movwf	sprintf@sp,c
  1903  000FA0  0E00               	movlw	high _buffer1
  1904  000FA2  6E0E               	movwf	sprintf@sp+1,c
  1905  000FA4  0E7D               	movlw	low STR_34
  1906  000FA6  6E0F               	movwf	sprintf@f,c
  1907  000FA8  0E0F               	movlw	high STR_34
  1908  000FAA  6E10               	movwf	sprintf@f+1,c
  1909  000FAC  C03F  F011         	movff	_key,?_sprintf+4
  1910  000FB0  6A12               	clrf	?_sprintf+5,c
  1911  000FB2  EC1B  F009         	call	_sprintf	;wreg free
  1912  000FB6  0E7C               	movlw	low _buffer1
  1913  000FB8  6E09               	movwf	lcd_putrs@ptr,c
  1914  000FBA  0E00               	movlw	high _buffer1
  1915  000FBC  6E0A               	movwf	lcd_putrs@ptr+1,c
  1916  000FBE  EC59  F00F         	call	_lcd_putrs	;wreg free
  1917  000FC2  D000               	goto	l207
  1918  000FC4                     l207:
  1919  000FC4  BA80               	btfsc	3968,5,c	;volatile
  1920  000FC6  D7FE               	goto	l207
  1921  000FC8                     l206:
  1922                           
  1923                           ;main.c: 249: if (PORTAbits.RA7==1){key=2;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA7==1){};}
  1924  000FC8  AE80               	btfss	3968,7,c	;volatile
  1925  000FCA  D018               	goto	l210
  1926  000FCC  0E02               	movlw	2
  1927  000FCE  6E3F               	movwf	_key,c
  1928  000FD0  0E7C               	movlw	low _buffer1
  1929  000FD2  6E0D               	movwf	sprintf@sp,c
  1930  000FD4  0E00               	movlw	high _buffer1
  1931  000FD6  6E0E               	movwf	sprintf@sp+1,c
  1932  000FD8  0E7D               	movlw	low STR_34
  1933  000FDA  6E0F               	movwf	sprintf@f,c
  1934  000FDC  0E0F               	movlw	high STR_34
  1935  000FDE  6E10               	movwf	sprintf@f+1,c
  1936  000FE0  C03F  F011         	movff	_key,?_sprintf+4
  1937  000FE4  6A12               	clrf	?_sprintf+5,c
  1938  000FE6  EC1B  F009         	call	_sprintf	;wreg free
  1939  000FEA  0E7C               	movlw	low _buffer1
  1940  000FEC  6E09               	movwf	lcd_putrs@ptr,c
  1941  000FEE  0E00               	movlw	high _buffer1
  1942  000FF0  6E0A               	movwf	lcd_putrs@ptr+1,c
  1943  000FF2  EC59  F00F         	call	_lcd_putrs	;wreg free
  1944  000FF6  D000               	goto	l211
  1945  000FF8                     l211:
  1946  000FF8  BE80               	btfsc	3968,7,c	;volatile
  1947  000FFA  D7FE               	goto	l211
  1948  000FFC                     l210:
  1949                           
  1950                           ;main.c: 250: if (PORTAbits.RA6==1){key=3;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA6==1){};}
  1951  000FFC  AC80               	btfss	3968,6,c	;volatile
  1952  000FFE  D018               	goto	l214
  1953  001000  0E03               	movlw	3
  1954  001002  6E3F               	movwf	_key,c
  1955  001004  0E7C               	movlw	low _buffer1
  1956  001006  6E0D               	movwf	sprintf@sp,c
  1957  001008  0E00               	movlw	high _buffer1
  1958  00100A  6E0E               	movwf	sprintf@sp+1,c
  1959  00100C  0E7D               	movlw	low STR_34
  1960  00100E  6E0F               	movwf	sprintf@f,c
  1961  001010  0E0F               	movlw	high STR_34
  1962  001012  6E10               	movwf	sprintf@f+1,c
  1963  001014  C03F  F011         	movff	_key,?_sprintf+4
  1964  001018  6A12               	clrf	?_sprintf+5,c
  1965  00101A  EC1B  F009         	call	_sprintf	;wreg free
  1966  00101E  0E7C               	movlw	low _buffer1
  1967  001020  6E09               	movwf	lcd_putrs@ptr,c
  1968  001022  0E00               	movlw	high _buffer1
  1969  001024  6E0A               	movwf	lcd_putrs@ptr+1,c
  1970  001026  EC59  F00F         	call	_lcd_putrs	;wreg free
  1971  00102A  D000               	goto	l215
  1972  00102C                     l215:
  1973  00102C  BC80               	btfsc	3968,6,c	;volatile
  1974  00102E  D7FE               	goto	l215
  1975  001030                     l214:
  1976                           
  1977                           ;main.c: 251: if (PORTCbits.RC2==1){key=11;button_A();while(PORTCbits.RC2==1){};}
  1978  001030  A482               	btfss	3970,2,c	;volatile
  1979  001032  D007               	goto	l218
  1980  001034  0E0B               	movlw	11
  1981  001036  6E3F               	movwf	_key,c
  1982  001038  ECF1  F00F         	call	_button_A	;wreg free
  1983  00103C  D000               	goto	l219
  1984  00103E                     l219:
  1985  00103E  B482               	btfsc	3970,2,c	;volatile
  1986  001040  D7FE               	goto	l219
  1987  001042                     l218:
  1988                           
  1989                           ;main.c: 252: }
  1990                           ;main.c: 254: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1991  001042  9089               	bcf	3977,0,c	;volatile
  1992  001044  8289               	bsf	3977,1,c	;volatile
  1993  001046  9489               	bcf	3977,2,c	;volatile
  1994  001048  9689               	bcf	3977,3,c	;volatile
  1995                           
  1996                           ;main.c: 255: {
  1997                           ;main.c: 256: if (PORTAbits.RA5==1){key=4;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA5==1){};}
  1998  00104A  AA80               	btfss	3968,5,c	;volatile
  1999  00104C  D018               	goto	l222
  2000  00104E  0E04               	movlw	4
  2001  001050  6E3F               	movwf	_key,c
  2002  001052  0E7C               	movlw	low _buffer1
  2003  001054  6E0D               	movwf	sprintf@sp,c
  2004  001056  0E00               	movlw	high _buffer1
  2005  001058  6E0E               	movwf	sprintf@sp+1,c
  2006  00105A  0E7D               	movlw	low STR_34
  2007  00105C  6E0F               	movwf	sprintf@f,c
  2008  00105E  0E0F               	movlw	high STR_34
  2009  001060  6E10               	movwf	sprintf@f+1,c
  2010  001062  C03F  F011         	movff	_key,?_sprintf+4
  2011  001066  6A12               	clrf	?_sprintf+5,c
  2012  001068  EC1B  F009         	call	_sprintf	;wreg free
  2013  00106C  0E7C               	movlw	low _buffer1
  2014  00106E  6E09               	movwf	lcd_putrs@ptr,c
  2015  001070  0E00               	movlw	high _buffer1
  2016  001072  6E0A               	movwf	lcd_putrs@ptr+1,c
  2017  001074  EC59  F00F         	call	_lcd_putrs	;wreg free
  2018  001078  D000               	goto	l223
  2019  00107A                     l223:
  2020  00107A  BA80               	btfsc	3968,5,c	;volatile
  2021  00107C  D7FE               	goto	l223
  2022  00107E                     l222:
  2023                           
  2024                           ;main.c: 257: if (PORTAbits.RA7==1){key=5;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA7==1){};}
  2025  00107E  AE80               	btfss	3968,7,c	;volatile
  2026  001080  D018               	goto	l226
  2027  001082  0E05               	movlw	5
  2028  001084  6E3F               	movwf	_key,c
  2029  001086  0E7C               	movlw	low _buffer1
  2030  001088  6E0D               	movwf	sprintf@sp,c
  2031  00108A  0E00               	movlw	high _buffer1
  2032  00108C  6E0E               	movwf	sprintf@sp+1,c
  2033  00108E  0E7D               	movlw	low STR_34
  2034  001090  6E0F               	movwf	sprintf@f,c
  2035  001092  0E0F               	movlw	high STR_34
  2036  001094  6E10               	movwf	sprintf@f+1,c
  2037  001096  C03F  F011         	movff	_key,?_sprintf+4
  2038  00109A  6A12               	clrf	?_sprintf+5,c
  2039  00109C  EC1B  F009         	call	_sprintf	;wreg free
  2040  0010A0  0E7C               	movlw	low _buffer1
  2041  0010A2  6E09               	movwf	lcd_putrs@ptr,c
  2042  0010A4  0E00               	movlw	high _buffer1
  2043  0010A6  6E0A               	movwf	lcd_putrs@ptr+1,c
  2044  0010A8  EC59  F00F         	call	_lcd_putrs	;wreg free
  2045  0010AC  D000               	goto	l227
  2046  0010AE                     l227:
  2047  0010AE  BE80               	btfsc	3968,7,c	;volatile
  2048  0010B0  D7FE               	goto	l227
  2049  0010B2                     l226:
  2050                           
  2051                           ;main.c: 258: if (PORTAbits.RA6==1){key=6;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA6==1){};}
  2052  0010B2  AC80               	btfss	3968,6,c	;volatile
  2053  0010B4  D018               	goto	l230
  2054  0010B6  0E06               	movlw	6
  2055  0010B8  6E3F               	movwf	_key,c
  2056  0010BA  0E7C               	movlw	low _buffer1
  2057  0010BC  6E0D               	movwf	sprintf@sp,c
  2058  0010BE  0E00               	movlw	high _buffer1
  2059  0010C0  6E0E               	movwf	sprintf@sp+1,c
  2060  0010C2  0E7D               	movlw	low STR_34
  2061  0010C4  6E0F               	movwf	sprintf@f,c
  2062  0010C6  0E0F               	movlw	high STR_34
  2063  0010C8  6E10               	movwf	sprintf@f+1,c
  2064  0010CA  C03F  F011         	movff	_key,?_sprintf+4
  2065  0010CE  6A12               	clrf	?_sprintf+5,c
  2066  0010D0  EC1B  F009         	call	_sprintf	;wreg free
  2067  0010D4  0E7C               	movlw	low _buffer1
  2068  0010D6  6E09               	movwf	lcd_putrs@ptr,c
  2069  0010D8  0E00               	movlw	high _buffer1
  2070  0010DA  6E0A               	movwf	lcd_putrs@ptr+1,c
  2071  0010DC  EC59  F00F         	call	_lcd_putrs	;wreg free
  2072  0010E0  D000               	goto	l231
  2073  0010E2                     l231:
  2074  0010E2  BC80               	btfsc	3968,6,c	;volatile
  2075  0010E4  D7FE               	goto	l231
  2076  0010E6                     l230:
  2077                           
  2078                           ;main.c: 259: if (PORTCbits.RC2==1){key=12;button_B();while(PORTCbits.RC2==1){};}
  2079  0010E6  A482               	btfss	3970,2,c	;volatile
  2080  0010E8  D007               	goto	l234
  2081  0010EA  0E0C               	movlw	12
  2082  0010EC  6E3F               	movwf	_key,c
  2083  0010EE  EC4D  F00A         	call	_button_B	;wreg free
  2084  0010F2  D000               	goto	l235
  2085  0010F4                     l235:
  2086  0010F4  B482               	btfsc	3970,2,c	;volatile
  2087  0010F6  D7FE               	goto	l235
  2088  0010F8                     l234:
  2089                           
  2090                           ;main.c: 260: }
  2091                           ;main.c: 262: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  2092  0010F8  9089               	bcf	3977,0,c	;volatile
  2093  0010FA  9289               	bcf	3977,1,c	;volatile
  2094  0010FC  8489               	bsf	3977,2,c	;volatile
  2095  0010FE  9689               	bcf	3977,3,c	;volatile
  2096                           
  2097                           ;main.c: 263: {
  2098                           ;main.c: 264: if (PORTAbits.RA5==1){key=7;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA5==1){};}
  2099  001100  AA80               	btfss	3968,5,c	;volatile
  2100  001102  D018               	goto	l238
  2101  001104  0E07               	movlw	7
  2102  001106  6E3F               	movwf	_key,c
  2103  001108  0E7C               	movlw	low _buffer1
  2104  00110A  6E0D               	movwf	sprintf@sp,c
  2105  00110C  0E00               	movlw	high _buffer1
  2106  00110E  6E0E               	movwf	sprintf@sp+1,c
  2107  001110  0E7D               	movlw	low STR_34
  2108  001112  6E0F               	movwf	sprintf@f,c
  2109  001114  0E0F               	movlw	high STR_34
  2110  001116  6E10               	movwf	sprintf@f+1,c
  2111  001118  C03F  F011         	movff	_key,?_sprintf+4
  2112  00111C  6A12               	clrf	?_sprintf+5,c
  2113  00111E  EC1B  F009         	call	_sprintf	;wreg free
  2114  001122  0E7C               	movlw	low _buffer1
  2115  001124  6E09               	movwf	lcd_putrs@ptr,c
  2116  001126  0E00               	movlw	high _buffer1
  2117  001128  6E0A               	movwf	lcd_putrs@ptr+1,c
  2118  00112A  EC59  F00F         	call	_lcd_putrs	;wreg free
  2119  00112E  D000               	goto	l239
  2120  001130                     l239:
  2121  001130  BA80               	btfsc	3968,5,c	;volatile
  2122  001132  D7FE               	goto	l239
  2123  001134                     l238:
  2124                           
  2125                           ;main.c: 265: if (PORTAbits.RA7==1){key=8;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA7==1){};}
  2126  001134  AE80               	btfss	3968,7,c	;volatile
  2127  001136  D018               	goto	l242
  2128  001138  0E08               	movlw	8
  2129  00113A  6E3F               	movwf	_key,c
  2130  00113C  0E7C               	movlw	low _buffer1
  2131  00113E  6E0D               	movwf	sprintf@sp,c
  2132  001140  0E00               	movlw	high _buffer1
  2133  001142  6E0E               	movwf	sprintf@sp+1,c
  2134  001144  0E7D               	movlw	low STR_34
  2135  001146  6E0F               	movwf	sprintf@f,c
  2136  001148  0E0F               	movlw	high STR_34
  2137  00114A  6E10               	movwf	sprintf@f+1,c
  2138  00114C  C03F  F011         	movff	_key,?_sprintf+4
  2139  001150  6A12               	clrf	?_sprintf+5,c
  2140  001152  EC1B  F009         	call	_sprintf	;wreg free
  2141  001156  0E7C               	movlw	low _buffer1
  2142  001158  6E09               	movwf	lcd_putrs@ptr,c
  2143  00115A  0E00               	movlw	high _buffer1
  2144  00115C  6E0A               	movwf	lcd_putrs@ptr+1,c
  2145  00115E  EC59  F00F         	call	_lcd_putrs	;wreg free
  2146  001162  D000               	goto	l243
  2147  001164                     l243:
  2148  001164  BE80               	btfsc	3968,7,c	;volatile
  2149  001166  D7FE               	goto	l243
  2150  001168                     l242:
  2151                           
  2152                           ;main.c: 266: if (PORTAbits.RA6==1){key=9;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA6==1){};}
  2153  001168  AC80               	btfss	3968,6,c	;volatile
  2154  00116A  D018               	goto	l246
  2155  00116C  0E09               	movlw	9
  2156  00116E  6E3F               	movwf	_key,c
  2157  001170  0E7C               	movlw	low _buffer1
  2158  001172  6E0D               	movwf	sprintf@sp,c
  2159  001174  0E00               	movlw	high _buffer1
  2160  001176  6E0E               	movwf	sprintf@sp+1,c
  2161  001178  0E7D               	movlw	low STR_34
  2162  00117A  6E0F               	movwf	sprintf@f,c
  2163  00117C  0E0F               	movlw	high STR_34
  2164  00117E  6E10               	movwf	sprintf@f+1,c
  2165  001180  C03F  F011         	movff	_key,?_sprintf+4
  2166  001184  6A12               	clrf	?_sprintf+5,c
  2167  001186  EC1B  F009         	call	_sprintf	;wreg free
  2168  00118A  0E7C               	movlw	low _buffer1
  2169  00118C  6E09               	movwf	lcd_putrs@ptr,c
  2170  00118E  0E00               	movlw	high _buffer1
  2171  001190  6E0A               	movwf	lcd_putrs@ptr+1,c
  2172  001192  EC59  F00F         	call	_lcd_putrs	;wreg free
  2173  001196  D000               	goto	l247
  2174  001198                     l247:
  2175  001198  BC80               	btfsc	3968,6,c	;volatile
  2176  00119A  D7FE               	goto	l247
  2177  00119C                     l246:
  2178                           
  2179                           ;main.c: 267: if (PORTCbits.RC2==1){key=13;button_C();while(PORTCbits.RC2==1){};}
  2180  00119C  A482               	btfss	3970,2,c	;volatile
  2181  00119E  D007               	goto	l250
  2182  0011A0  0E0D               	movlw	13
  2183  0011A2  6E3F               	movwf	_key,c
  2184  0011A4  ECA0  F010         	call	_button_C	;wreg free
  2185  0011A8  D000               	goto	l251
  2186  0011AA                     l251:
  2187  0011AA  B482               	btfsc	3970,2,c	;volatile
  2188  0011AC  D7FE               	goto	l251
  2189  0011AE                     l250:
  2190                           
  2191                           ;main.c: 268: }
  2192                           ;main.c: 270: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  2193  0011AE  9089               	bcf	3977,0,c	;volatile
  2194  0011B0  9289               	bcf	3977,1,c	;volatile
  2195  0011B2  9489               	bcf	3977,2,c	;volatile
  2196  0011B4  8689               	bsf	3977,3,c	;volatile
  2197                           
  2198                           ;main.c: 271: {
  2199                           ;main.c: 272: if (PORTAbits.RA5==1){key=14;button_asterisk();while(PORTAbits.RA5==1){};}
  2200  0011B6  AA80               	btfss	3968,5,c	;volatile
  2201  0011B8  D007               	goto	l254
  2202  0011BA  0E0E               	movlw	14
  2203  0011BC  6E3F               	movwf	_key,c
  2204  0011BE  EC92  F010         	call	_button_asterisk	;wreg free
  2205  0011C2  D000               	goto	l255
  2206  0011C4                     l255:
  2207  0011C4  BA80               	btfsc	3968,5,c	;volatile
  2208  0011C6  D7FE               	goto	l255
  2209  0011C8                     l254:
  2210                           
  2211                           ;main.c: 273: if (PORTAbits.RA7==1){key=0;sprintf(buffer1,"%01u",key);lcd_putrs(buffer1)
      +                          ;while(PORTAbits.RA7==1){};}
  2212  0011C8  AE80               	btfss	3968,7,c	;volatile
  2213  0011CA  D018               	goto	l258
  2214  0011CC  0E00               	movlw	0
  2215  0011CE  6E3F               	movwf	_key,c
  2216  0011D0  0E7C               	movlw	low _buffer1
  2217  0011D2  6E0D               	movwf	sprintf@sp,c
  2218  0011D4  0E00               	movlw	high _buffer1
  2219  0011D6  6E0E               	movwf	sprintf@sp+1,c
  2220  0011D8  0E7D               	movlw	low STR_34
  2221  0011DA  6E0F               	movwf	sprintf@f,c
  2222  0011DC  0E0F               	movlw	high STR_34
  2223  0011DE  6E10               	movwf	sprintf@f+1,c
  2224  0011E0  C03F  F011         	movff	_key,?_sprintf+4
  2225  0011E4  6A12               	clrf	?_sprintf+5,c
  2226  0011E6  EC1B  F009         	call	_sprintf	;wreg free
  2227  0011EA  0E7C               	movlw	low _buffer1
  2228  0011EC  6E09               	movwf	lcd_putrs@ptr,c
  2229  0011EE  0E00               	movlw	high _buffer1
  2230  0011F0  6E0A               	movwf	lcd_putrs@ptr+1,c
  2231  0011F2  EC59  F00F         	call	_lcd_putrs	;wreg free
  2232  0011F6  D000               	goto	l259
  2233  0011F8                     l259:
  2234  0011F8  BE80               	btfsc	3968,7,c	;volatile
  2235  0011FA  D7FE               	goto	l259
  2236  0011FC                     l258:
  2237                           
  2238                           ;main.c: 274: if (PORTAbits.RA6==1){key=15;button_hash();while(PORTAbits.RA6==1){};}
  2239  0011FC  AC80               	btfss	3968,6,c	;volatile
  2240  0011FE  D007               	goto	l262
  2241  001200  0E0F               	movlw	15
  2242  001202  6E3F               	movwf	_key,c
  2243  001204  EC8B  F010         	call	_button_hash	;wreg free
  2244  001208  D000               	goto	l263
  2245  00120A                     l263:
  2246  00120A  BC80               	btfsc	3968,6,c	;volatile
  2247  00120C  D7FE               	goto	l263
  2248  00120E                     l262:
  2249                           
  2250                           ;main.c: 275: if (PORTCbits.RC2==1){key=16;button_D();while(PORTCbits.RC2==1){};}
  2251  00120E  A482               	btfss	3970,2,c	;volatile
  2252  001210  D009               	goto	l2854
  2253  001212  0E10               	movlw	16
  2254  001214  6E3F               	movwf	_key,c
  2255  001216  EC5B  F010         	call	_button_D	;wreg free
  2256  00121A  D000               	goto	l267
  2257  00121C                     l267:
  2258  00121C  A482               	btfss	3970,2,c	;volatile
  2259  00121E  D002               	goto	l2854
  2260  001220  D7FD               	goto	l267
  2261  001222  D000               	goto	l2854
  2262  001224                     l2854:
  2263                           
  2264                           ;main.c: 276: }
  2265                           ;main.c: 278: _delay((unsigned long)((98)*(8000000/4000.0)));
  2266  001224  0EFF               	movlw	255
  2267  001226  6E24               	movwf	??_keyboard_control& (0+255),c
  2268  001228  0E8A               	movlw	138
  2269  00122A                     u2117:
  2270  00122A  2EE8               	decfsz	wreg,f,c
  2271  00122C  D7FE               	goto	u2117
  2272  00122E  2E24               	decfsz	??_keyboard_control& (0+255),f,c
  2273  001230  D7FC               	goto	u2117
  2274  001232  D000               	nop2	
  2275  001234  0012               	return		;funcret
  2276  001236                     __end_of_keyboard_control:
  2277                           	opt stack 0
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           prodl	equ	0xFF3
  2283                           intcon	equ	0xFF2
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           postdec1	equ	0xFE5
  2287                           fsr1l	equ	0xFE1
  2288                           indf2	equ	0xFDF
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8
  2292                           
  2293 ;; *************** function _button_hash *****************
  2294 ;; Defined at:
  2295 ;;		line 240 in file "main.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;		None               void
  2302 ;; Registers used:
  2303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    5
  2316 ;; This function calls:
  2317 ;;		_lcd_putrs
  2318 ;; This function is called by:
  2319 ;;		_keyboard_control
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text8
  2324  002116                     __ptext8:
  2325                           	opt stack 0
  2326  002116                     _button_hash:
  2327                           	opt stack 24
  2328                           
  2329                           ;main.c: 241: lcd_putrs("#");
  2330                           
  2331                           ;incstack = 0
  2332  002116  0E84               	movlw	low STR_33
  2333  002118  6E09               	movwf	lcd_putrs@ptr,c
  2334  00211A  0E0F               	movlw	high STR_33
  2335  00211C  6E0A               	movwf	lcd_putrs@ptr+1,c
  2336  00211E  EC59  F00F         	call	_lcd_putrs	;wreg free
  2337  002122  0012               	return		;funcret
  2338  002124                     __end_of_button_hash:
  2339                           	opt stack 0
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           prodl	equ	0xFF3
  2345                           intcon	equ	0xFF2
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           postdec1	equ	0xFE5
  2349                           fsr1l	equ	0xFE1
  2350                           indf2	equ	0xFDF
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _button_asterisk *****************
  2356 ;; Defined at:
  2357 ;;		line 236 in file "main.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;		None               void
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    5
  2378 ;; This function calls:
  2379 ;;		_lcd_putrs
  2380 ;; This function is called by:
  2381 ;;		_keyboard_control
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text9
  2386  002124                     __ptext9:
  2387                           	opt stack 0
  2388  002124                     _button_asterisk:
  2389                           	opt stack 24
  2390                           
  2391                           ;main.c: 237: lcd_putrs("*");
  2392                           
  2393                           ;incstack = 0
  2394  002124  0E86               	movlw	low STR_32
  2395  002126  6E09               	movwf	lcd_putrs@ptr,c
  2396  002128  0E0F               	movlw	high STR_32
  2397  00212A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2398  00212C  EC59  F00F         	call	_lcd_putrs	;wreg free
  2399  002130  0012               	return		;funcret
  2400  002132                     __end_of_button_asterisk:
  2401                           	opt stack 0
  2402                           tblptru	equ	0xFF8
  2403                           tblptrh	equ	0xFF7
  2404                           tblptrl	equ	0xFF6
  2405                           tablat	equ	0xFF5
  2406                           prodl	equ	0xFF3
  2407                           intcon	equ	0xFF2
  2408                           postinc0	equ	0xFEE
  2409                           wreg	equ	0xFE8
  2410                           postdec1	equ	0xFE5
  2411                           fsr1l	equ	0xFE1
  2412                           indf2	equ	0xFDF
  2413                           fsr2h	equ	0xFDA
  2414                           fsr2l	equ	0xFD9
  2415                           status	equ	0xFD8
  2416                           
  2417 ;; *************** function _button_D *****************
  2418 ;; Defined at:
  2419 ;;		line 230 in file "main.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;		None               void
  2426 ;; Registers used:
  2427 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    6
  2440 ;; This function calls:
  2441 ;;		_home
  2442 ;; This function is called by:
  2443 ;;		_keyboard_control
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text10
  2448  0020B6                     __ptext10:
  2449                           	opt stack 0
  2450  0020B6                     _button_D:
  2451                           	opt stack 23
  2452                           
  2453                           ;main.c: 231: home();
  2454                           
  2455                           ;incstack = 0
  2456  0020B6  EC66  F00D         	call	_home	;wreg free
  2457                           
  2458                           ;main.c: 232: menu = 0;
  2459  0020BA  0E00               	movlw	0
  2460  0020BC  6E32               	movwf	_menu+1,c
  2461  0020BE  0E00               	movlw	0
  2462  0020C0  6E31               	movwf	_menu,c
  2463                           
  2464                           ;main.c: 233: submenu = 0;
  2465  0020C2  0E00               	movlw	0
  2466  0020C4  6E3E               	movwf	_submenu+1,c
  2467  0020C6  0E00               	movlw	0
  2468  0020C8  6E3D               	movwf	_submenu,c
  2469  0020CA  0012               	return		;funcret
  2470  0020CC                     __end_of_button_D:
  2471                           	opt stack 0
  2472                           tblptru	equ	0xFF8
  2473                           tblptrh	equ	0xFF7
  2474                           tblptrl	equ	0xFF6
  2475                           tablat	equ	0xFF5
  2476                           prodl	equ	0xFF3
  2477                           intcon	equ	0xFF2
  2478                           postinc0	equ	0xFEE
  2479                           wreg	equ	0xFE8
  2480                           postdec1	equ	0xFE5
  2481                           fsr1l	equ	0xFE1
  2482                           indf2	equ	0xFDF
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _home *****************
  2488 ;; Defined at:
  2489 ;;		line 74 in file "main.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;		None               void
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    5
  2510 ;; This function calls:
  2511 ;;		_lcd_comand
  2512 ;;		_lcd_gotoxy
  2513 ;;		_lcd_putrs
  2514 ;;		_sprintf
  2515 ;; This function is called by:
  2516 ;;		_button_D
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text11
  2522  001ACC                     __ptext11:
  2523                           	opt stack 0
  2524  001ACC                     _home:
  2525                           	opt stack 23
  2526                           
  2527                           ;main.c: 75: lcd_comand(0b00000001);
  2528                           
  2529                           ;incstack = 0
  2530  001ACC  0E01               	movlw	1
  2531  001ACE  EC99  F010         	call	_lcd_comand
  2532                           
  2533                           ;main.c: 76: lcd_comand(0b00001100);
  2534  001AD2  0E0C               	movlw	12
  2535  001AD4  EC99  F010         	call	_lcd_comand
  2536                           
  2537                           ;main.c: 77: lcd_gotoxy(1,1);
  2538  001AD8  0E01               	movlw	1
  2539  001ADA  6E05               	movwf	lcd_gotoxy@y,c
  2540  001ADC  0E01               	movlw	1
  2541  001ADE  EC38  F010         	call	_lcd_gotoxy
  2542                           
  2543                           ;main.c: 78: lcd_putrs(" UNIMIC");
  2544  001AE2  0E38               	movlw	low STR_1
  2545  001AE4  6E09               	movwf	lcd_putrs@ptr,c
  2546  001AE6  0E0F               	movlw	high STR_1
  2547  001AE8  6E0A               	movwf	lcd_putrs@ptr+1,c
  2548  001AEA  EC59  F00F         	call	_lcd_putrs	;wreg free
  2549                           
  2550                           ;main.c: 79: sprintf(buffer1,"%02u/%02u/%02u",dia,mes,anio);
  2551  001AEE  0E7C               	movlw	low _buffer1
  2552  001AF0  6E0D               	movwf	sprintf@sp,c
  2553  001AF2  0E00               	movlw	high _buffer1
  2554  001AF4  6E0E               	movwf	sprintf@sp+1,c
  2555  001AF6  0E0F               	movlw	low STR_2
  2556  001AF8  6E0F               	movwf	sprintf@f,c
  2557  001AFA  0E0F               	movlw	high STR_2
  2558  001AFC  6E10               	movwf	sprintf@f+1,c
  2559  001AFE  C057  F011         	movff	_dia,?_sprintf+4
  2560  001B02  C058  F012         	movff	_dia+1,?_sprintf+5
  2561  001B06  C05D  F013         	movff	_mes,?_sprintf+6
  2562  001B0A  C05E  F014         	movff	_mes+1,?_sprintf+7
  2563  001B0E  C055  F015         	movff	_anio,?_sprintf+8
  2564  001B12  C056  F016         	movff	_anio+1,?_sprintf+9
  2565  001B16  EC1B  F009         	call	_sprintf	;wreg free
  2566                           
  2567                           ;main.c: 80: lcd_gotoxy(1,2);
  2568  001B1A  0E02               	movlw	2
  2569  001B1C  6E05               	movwf	lcd_gotoxy@y,c
  2570  001B1E  0E01               	movlw	1
  2571  001B20  EC38  F010         	call	_lcd_gotoxy
  2572                           
  2573                           ;main.c: 81: lcd_putrs(buffer1);
  2574  001B24  0E7C               	movlw	low _buffer1
  2575  001B26  6E09               	movwf	lcd_putrs@ptr,c
  2576  001B28  0E00               	movlw	high _buffer1
  2577  001B2A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2578  001B2C  EC59  F00F         	call	_lcd_putrs	;wreg free
  2579                           
  2580                           ;main.c: 82: sprintf(buffer1,"%02u:%02u",hora,minuto);
  2581  001B30  0E7C               	movlw	low _buffer1
  2582  001B32  6E0D               	movwf	sprintf@sp,c
  2583  001B34  0E00               	movlw	high _buffer1
  2584  001B36  6E0E               	movwf	sprintf@sp+1,c
  2585  001B38  0E1E               	movlw	low STR_3
  2586  001B3A  6E0F               	movwf	sprintf@f,c
  2587  001B3C  0E0F               	movlw	high STR_3
  2588  001B3E  6E10               	movwf	sprintf@f+1,c
  2589  001B40  C05B  F011         	movff	_hora,?_sprintf+4
  2590  001B44  C05C  F012         	movff	_hora+1,?_sprintf+5
  2591  001B48  C033  F013         	movff	_minuto,?_sprintf+6
  2592  001B4C  C034  F014         	movff	_minuto+1,?_sprintf+7
  2593  001B50  EC1B  F009         	call	_sprintf	;wreg free
  2594                           
  2595                           ;main.c: 83: lcd_gotoxy(12,2);
  2596  001B54  0E02               	movlw	2
  2597  001B56  6E05               	movwf	lcd_gotoxy@y,c
  2598  001B58  0E0C               	movlw	12
  2599  001B5A  EC38  F010         	call	_lcd_gotoxy
  2600                           
  2601                           ;main.c: 84: lcd_putrs(buffer1);
  2602  001B5E  0E7C               	movlw	low _buffer1
  2603  001B60  6E09               	movwf	lcd_putrs@ptr,c
  2604  001B62  0E00               	movlw	high _buffer1
  2605  001B64  6E0A               	movwf	lcd_putrs@ptr+1,c
  2606  001B66  EC59  F00F         	call	_lcd_putrs	;wreg free
  2607  001B6A  0012               	return		;funcret
  2608  001B6C                     __end_of_home:
  2609                           	opt stack 0
  2610                           tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           prodl	equ	0xFF3
  2615                           intcon	equ	0xFF2
  2616                           postinc0	equ	0xFEE
  2617                           wreg	equ	0xFE8
  2618                           postdec1	equ	0xFE5
  2619                           fsr1l	equ	0xFE1
  2620                           indf2	equ	0xFDF
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _sprintf *****************
  2626 ;; Defined at:
  2627 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  sp              2   12[COMRAM] PTR unsigned char 
  2630 ;;		 -> buffer1(20), 
  2631 ;;  f               2   14[COMRAM] PTR const unsigned char 
  2632 ;;		 -> STR_43(5), STR_42(5), STR_41(5), STR_40(5), 
  2633 ;;		 -> STR_39(5), STR_38(5), STR_37(5), STR_36(5), 
  2634 ;;		 -> STR_35(5), STR_34(5), STR_3(10), STR_2(15), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  tmpval          4    0        struct .
  2637 ;;  cp              3    0        PTR const unsigned char 
  2638 ;;  width           2   32[COMRAM] int 
  2639 ;;  val             2   29[COMRAM] unsigned int 
  2640 ;;  ap              2   26[COMRAM] PTR void [1]
  2641 ;;		 -> ?_sprintf(2), 
  2642 ;;  len             2    0        unsigned int 
  2643 ;;  c               1   34[COMRAM] char 
  2644 ;;  prec            1   31[COMRAM] char 
  2645 ;;  flag            1   28[COMRAM] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  2   12[COMRAM] int 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2655 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2657 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;Total ram usage:       23 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    1
  2662 ;; This function calls:
  2663 ;;		___lwdiv
  2664 ;;		___lwmod
  2665 ;;		___wmul
  2666 ;;		_isdigit
  2667 ;; This function is called by:
  2668 ;;		_home
  2669 ;;		_keyboard_control
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text12
  2674  001236                     __ptext12:
  2675                           	opt stack 0
  2676  001236                     _sprintf:
  2677                           	opt stack 28
  2678                           
  2679                           ;doprnt.c: 494: va_list ap;
  2680                           ;doprnt.c: 499: signed char c;
  2681                           ;doprnt.c: 501: int width;
  2682                           ;doprnt.c: 506: signed char prec;
  2683                           ;doprnt.c: 508: unsigned char flag;
  2684                           ;doprnt.c: 523: union {
  2685                           ;doprnt.c: 524: unsigned long vd;
  2686                           ;doprnt.c: 525: double integ;
  2687                           ;doprnt.c: 526: } tmpval;
  2688                           ;doprnt.c: 528: unsigned int val;
  2689                           ;doprnt.c: 529: unsigned len;
  2690                           ;doprnt.c: 530: const char * cp;
  2691                           ;doprnt.c: 533: *ap = __va_start();
  2692                           
  2693                           ;incstack = 0
  2694  001236  0E11               	movlw	low (?_sprintf+4)
  2695  001238  6E1B               	movwf	sprintf@ap,c
  2696  00123A  0E00               	movlw	high (?_sprintf+4)
  2697  00123C  6E1C               	movwf	sprintf@ap+1,c
  2698                           
  2699                           ;doprnt.c: 536: while(c = *f++) {
  2700  00123E  D117               	goto	l2284
  2701  001240                     l2202:
  2702                           
  2703                           ;doprnt.c: 538: if(c != '%')
  2704  001240  0E25               	movlw	37
  2705  001242  1823               	xorwf	sprintf@c,w,c
  2706  001244  B4D8               	btfsc	status,2,c
  2707  001246  D009               	goto	l2208
  2708                           
  2709                           ;doprnt.c: 540: {
  2710                           ;doprnt.c: 541: ((*sp++ = (c)));
  2711  001248  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2712  00124C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2713  001250  C023  FFDF         	movff	sprintf@c,indf2
  2714  001254  4A0D               	infsnz	sprintf@sp,f,c
  2715  001256  2A0E               	incf	sprintf@sp+1,f,c
  2716                           
  2717                           ;doprnt.c: 542: continue;
  2718  001258  D10A               	goto	l2284
  2719  00125A                     l2208:
  2720                           
  2721                           ;doprnt.c: 543: }
  2722                           ;doprnt.c: 546: width = 0;
  2723  00125A  0E00               	movlw	0
  2724  00125C  6E22               	movwf	sprintf@width+1,c
  2725  00125E  0E00               	movlw	0
  2726  001260  6E21               	movwf	sprintf@width,c
  2727                           
  2728                           ;doprnt.c: 548: flag = 0;
  2729  001262  0E00               	movlw	0
  2730  001264  6E1D               	movwf	sprintf@flag,c
  2731                           
  2732                           ;doprnt.c: 551: switch(*f) {
  2733                           
  2734                           ;doprnt.c: 550: for(;;) {
  2735  001266  D005               	goto	l2214
  2736  001268                     l2210:
  2737                           
  2738                           ;doprnt.c: 580: flag |= 0x04;
  2739  001268  841D               	bsf	sprintf@flag,2,c
  2740                           
  2741                           ;doprnt.c: 581: f++;
  2742  00126A  4A0F               	infsnz	sprintf@f,f,c
  2743  00126C  2A10               	incf	sprintf@f+1,f,c
  2744                           
  2745                           ;doprnt.c: 582: continue;
  2746  00126E  D001               	goto	l2214
  2747                           
  2748                           ;doprnt.c: 584: }
  2749  001270  D00B               	goto	l2216
  2750  001272                     l2214:
  2751  001272  C00F  FFF6         	movff	sprintf@f,tblptrl
  2752  001276  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2753  00127A                     	if	0	;tblptru may be non-zero
  2754  00127A                     	endif
  2755  00127A                     	if	0	;tblptru may be non-zero
  2756  00127A                     	endif
  2757  00127A  0008               	tblrd		*
  2758  00127C  50F5               	movf	tablat,w,c
  2759                           
  2760                           ; Switch size 1, requested type "space"
  2761                           ; Number of cases is 1, Range of values is 48 to 48
  2762                           ; switch strategies available:
  2763                           ; Name         Instructions Cycles
  2764                           ; simple_byte            4     3 (average)
  2765                           ;	Chosen strategy is simple_byte
  2766  00127E  0A30               	xorlw	48	; case 48
  2767  001280  B4D8               	btfsc	status,2,c
  2768  001282  D7F2               	goto	l2210
  2769                           
  2770                           ;doprnt.c: 585: break;
  2771  001284  D001               	goto	l2216
  2772                           
  2773                           ;doprnt.c: 586: }
  2774  001286  D7F5               	goto	l2214
  2775  001288                     l2216:
  2776                           
  2777                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2778  001288  C00F  FFF6         	movff	sprintf@f,tblptrl
  2779  00128C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2780  001290                     	if	0	;tblptru may be non-zero
  2781  001290                     	endif
  2782  001290                     	if	0	;tblptru may be non-zero
  2783  001290                     	endif
  2784  001290  0008               	tblrd		*
  2785  001292  50F5               	movf	tablat,w,c
  2786  001294  EC4A  F010         	call	_isdigit
  2787  001298  A0D8               	btfss	status,0,c
  2788  00129A  D03A               	goto	l2232
  2789                           
  2790                           ;doprnt.c: 598: width = 0;
  2791  00129C  0E00               	movlw	0
  2792  00129E  6E22               	movwf	sprintf@width+1,c
  2793  0012A0  0E00               	movlw	0
  2794  0012A2  6E21               	movwf	sprintf@width,c
  2795  0012A4  D000               	goto	l2220
  2796  0012A6                     l2220:
  2797                           
  2798                           ;doprnt.c: 600: width *= 10;
  2799  0012A6  C021  F001         	movff	sprintf@width,___wmul@multiplier
  2800  0012AA  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  2801  0012AE  0E00               	movlw	0
  2802  0012B0  6E04               	movwf	___wmul@multiplicand+1,c
  2803  0012B2  0E0A               	movlw	10
  2804  0012B4  6E03               	movwf	___wmul@multiplicand,c
  2805  0012B6  EC24  F010         	call	___wmul	;wreg free
  2806  0012BA  C001  F021         	movff	?___wmul,sprintf@width
  2807  0012BE  C002  F022         	movff	?___wmul+1,sprintf@width+1
  2808                           
  2809                           ;doprnt.c: 601: width += *f++ - '0';
  2810  0012C2  0ED0               	movlw	208
  2811  0012C4  6E17               	movwf	??_sprintf& (0+255),c
  2812  0012C6  0EFF               	movlw	255
  2813  0012C8  6E18               	movwf	(??_sprintf+1)& (0+255),c
  2814  0012CA  C00F  FFF6         	movff	sprintf@f,tblptrl
  2815  0012CE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2816  0012D2                     	if	0	;tblptru may be non-zero
  2817  0012D2                     	endif
  2818  0012D2                     	if	0	;tblptru may be non-zero
  2819  0012D2                     	endif
  2820  0012D2  0008               	tblrd		*
  2821  0012D4  50F5               	movf	tablat,w,c
  2822  0012D6  6E19               	movwf	(??_sprintf+2)& (0+255),c
  2823  0012D8  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  2824  0012DA  5017               	movf	??_sprintf,w,c
  2825  0012DC  2619               	addwf	??_sprintf+2,f,c
  2826  0012DE  5018               	movf	??_sprintf+1,w,c
  2827  0012E0  221A               	addwfc	??_sprintf+3,f,c
  2828  0012E2  5019               	movf	??_sprintf+2,w,c
  2829  0012E4  2621               	addwf	sprintf@width,f,c
  2830  0012E6  501A               	movf	??_sprintf+3,w,c
  2831  0012E8  2222               	addwfc	sprintf@width+1,f,c
  2832  0012EA  4A0F               	infsnz	sprintf@f,f,c
  2833  0012EC  2A10               	incf	sprintf@f+1,f,c
  2834                           
  2835                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2836  0012EE  C00F  FFF6         	movff	sprintf@f,tblptrl
  2837  0012F2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2838  0012F6                     	if	0	;tblptru may be non-zero
  2839  0012F6                     	endif
  2840  0012F6                     	if	0	;tblptru may be non-zero
  2841  0012F6                     	endif
  2842  0012F6  0008               	tblrd		*
  2843  0012F8  50F5               	movf	tablat,w,c
  2844  0012FA  EC4A  F010         	call	_isdigit
  2845  0012FE  A0D8               	btfss	status,0,c
  2846  001300  D007               	goto	l2232
  2847  001302  D7D1               	goto	l2220
  2848                           
  2849                           ;doprnt.c: 608: }
  2850                           ;doprnt.c: 635: switch(c = *f++) {
  2851  001304  D005               	goto	l2232
  2852                           
  2853                           ;doprnt.c: 638: goto alldone;
  2854                           
  2855                           ;doprnt.c: 637: case 0:
  2856  001306  D0C1               	goto	l2286
  2857                           
  2858                           ;doprnt.c: 813: continue;
  2859                           
  2860                           ;doprnt.c: 802: default:
  2861  001308  D0B2               	goto	l2284
  2862  00130A                     l2228:
  2863                           
  2864                           ;doprnt.c: 818: flag |= 0xC0;
  2865  00130A  0EC0               	movlw	192
  2866  00130C  121D               	iorwf	sprintf@flag,f,c
  2867                           
  2868                           ;doprnt.c: 822: }
  2869                           
  2870                           ;doprnt.c: 819: break;
  2871  00130E  D011               	goto	l2234
  2872  001310                     l2232:
  2873  001310  C00F  FFF6         	movff	sprintf@f,tblptrl
  2874  001314  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2875  001318  4A0F               	infsnz	sprintf@f,f,c
  2876  00131A  2A10               	incf	sprintf@f+1,f,c
  2877  00131C                     	if	0	;tblptru may be non-zero
  2878  00131C                     	endif
  2879  00131C                     	if	0	;tblptru may be non-zero
  2880  00131C                     	endif
  2881  00131C  0008               	tblrd		*
  2882  00131E  CFF5 F023          	movff	tablat,sprintf@c
  2883  001322  5023               	movf	sprintf@c,w,c
  2884                           
  2885                           ; Switch size 1, requested type "space"
  2886                           ; Number of cases is 2, Range of values is 0 to 117
  2887                           ; switch strategies available:
  2888                           ; Name         Instructions Cycles
  2889                           ; simple_byte            7     4 (average)
  2890                           ;	Chosen strategy is simple_byte
  2891  001324  0A00               	xorlw	0	; case 0
  2892  001326  B4D8               	btfsc	status,2,c
  2893  001328  D0B0               	goto	l2286
  2894  00132A  0A75               	xorlw	117	; case 117
  2895  00132C  B4D8               	btfsc	status,2,c
  2896  00132E  D7ED               	goto	l2228
  2897  001330  D09E               	goto	l2284
  2898  001332                     l2234:
  2899                           
  2900                           ;doprnt.c: 1273: {
  2901                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2902  001332  C01B  FFD9         	movff	sprintf@ap,fsr2l
  2903  001336  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  2904  00133A  CFDE F01E          	movff	postinc2,sprintf@val
  2905  00133E  CFDD F01F          	movff	postdec2,sprintf@val+1
  2906  001342  0E02               	movlw	2
  2907  001344  261B               	addwf	sprintf@ap,f,c
  2908  001346  0E00               	movlw	0
  2909  001348  221C               	addwfc	sprintf@ap+1,f,c
  2910                           
  2911                           ;doprnt.c: 1287: }
  2912                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2913  00134A  0E01               	movlw	1
  2914  00134C  6E23               	movwf	sprintf@c,c
  2915  00134E                     l2240:
  2916  00134E  0E05               	movlw	5
  2917  001350  1823               	xorwf	sprintf@c,w,c
  2918  001352  B4D8               	btfsc	status,2,c
  2919  001354  D016               	goto	l2252
  2920  001356  D001               	goto	l2244
  2921  001358  D014               	goto	l2252
  2922  00135A                     l2244:
  2923                           
  2924                           ;doprnt.c: 1306: if(val < dpowers[c])
  2925  00135A  5023               	movf	sprintf@c,w,c
  2926  00135C  0D02               	mullw	2
  2927  00135E  0E01               	movlw	low _dpowers
  2928  001360  24F3               	addwf	prodl,w,c
  2929  001362  6EF6               	movwf	tblptrl,c
  2930  001364  0E0F               	movlw	high _dpowers
  2931  001366  20F4               	addwfc	prodh,w,c
  2932  001368  6EF7               	movwf	tblptrh,c
  2933  00136A                     	if	0	;There are less than 3 active tblptr bytes
  2934  00136A                     	endif
  2935  00136A  0009               	tblrd		*+
  2936  00136C  50F5               	movf	tablat,w,c
  2937  00136E  5C1E               	subwf	sprintf@val,w,c
  2938  001370  0009               	tblrd		*+
  2939  001372  50F5               	movf	tablat,w,c
  2940  001374  581F               	subwfb	sprintf@val+1,w,c
  2941  001376  A0D8               	btfss	status,0,c
  2942  001378  D004               	goto	l2252
  2943  00137A  D001               	goto	l2248
  2944                           
  2945                           ;doprnt.c: 1307: break;
  2946  00137C  D002               	goto	l2252
  2947  00137E                     l2248:
  2948  00137E  2A23               	incf	sprintf@c,f,c
  2949  001380  D7E6               	goto	l2240
  2950  001382                     l2252:
  2951                           
  2952                           ;doprnt.c: 1381: if(width > c)
  2953  001382  0E80               	movlw	128
  2954  001384  BE23               	btfsc	sprintf@c,7,c
  2955  001386  0E7F               	movlw	127
  2956  001388  6E17               	movwf	??_sprintf& (0+255),c
  2957  00138A  5021               	movf	sprintf@width,w,c
  2958  00138C  5C23               	subwf	sprintf@c,w,c
  2959  00138E  5022               	movf	sprintf@width+1,w,c
  2960  001390  0A80               	xorlw	128
  2961  001392  5817               	subwfb	??_sprintf& (0+255),w,c
  2962  001394  B0D8               	btfsc	status,0,c
  2963  001396  D007               	goto	l2256
  2964                           
  2965                           ;doprnt.c: 1382: width -= c;
  2966  001398  5023               	movf	sprintf@c,w,c
  2967  00139A  5E21               	subwf	sprintf@width,f,c
  2968  00139C  0E00               	movlw	0
  2969  00139E  BE23               	btfsc	sprintf@c,7,c
  2970  0013A0  0EFF               	movlw	255
  2971  0013A2  5A22               	subwfb	sprintf@width+1,f,c
  2972  0013A4  D005               	goto	l2258
  2973  0013A6                     l2256:
  2974                           
  2975                           ;doprnt.c: 1383: else
  2976                           ;doprnt.c: 1384: width = 0;
  2977  0013A6  0E00               	movlw	0
  2978  0013A8  6E22               	movwf	sprintf@width+1,c
  2979  0013AA  0E00               	movlw	0
  2980  0013AC  6E21               	movwf	sprintf@width,c
  2981  0013AE  D000               	goto	l2258
  2982  0013B0                     l2258:
  2983                           
  2984                           ;doprnt.c: 1387: if(flag & 0x04) {
  2985  0013B0  A41D               	btfss	sprintf@flag,2,c
  2986  0013B2  D015               	goto	l2268
  2987                           
  2988                           ;doprnt.c: 1415: if(width)
  2989  0013B4  5021               	movf	sprintf@width,w,c
  2990  0013B6  1022               	iorwf	sprintf@width+1,w,c
  2991  0013B8  B4D8               	btfsc	status,2,c
  2992  0013BA  D026               	goto	l373
  2993  0013BC                     l2262:
  2994                           
  2995                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  2996  0013BC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2997  0013C0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2998  0013C4  0E30               	movlw	48
  2999  0013C6  6EDF               	movwf	indf2,c
  3000  0013C8  4A0D               	infsnz	sprintf@sp,f,c
  3001  0013CA  2A0E               	incf	sprintf@sp+1,f,c
  3002                           
  3003                           ;doprnt.c: 1418: while(--width);
  3004  0013CC  0621               	decf	sprintf@width,f,c
  3005  0013CE  A0D8               	btfss	status,0,c
  3006  0013D0  0622               	decf	sprintf@width+1,f,c
  3007  0013D2  5021               	movf	sprintf@width,w,c
  3008  0013D4  1022               	iorwf	sprintf@width+1,w,c
  3009  0013D6  B4D8               	btfsc	status,2,c
  3010  0013D8  D017               	goto	l373
  3011  0013DA  D7F0               	goto	l2262
  3012                           
  3013                           ;doprnt.c: 1420: } else
  3014  0013DC  D015               	goto	l373
  3015  0013DE                     l2268:
  3016                           
  3017                           ;doprnt.c: 1422: {
  3018                           ;doprnt.c: 1424: if(width
  3019                           ;doprnt.c: 1428: )
  3020  0013DE  5021               	movf	sprintf@width,w,c
  3021  0013E0  1022               	iorwf	sprintf@width+1,w,c
  3022  0013E2  B4D8               	btfsc	status,2,c
  3023  0013E4  D011               	goto	l373
  3024  0013E6                     l2270:
  3025                           
  3026                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3027  0013E6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3028  0013EA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3029  0013EE  0E20               	movlw	32
  3030  0013F0  6EDF               	movwf	indf2,c
  3031  0013F2  4A0D               	infsnz	sprintf@sp,f,c
  3032  0013F4  2A0E               	incf	sprintf@sp+1,f,c
  3033                           
  3034                           ;doprnt.c: 1431: while(--width);
  3035  0013F6  0621               	decf	sprintf@width,f,c
  3036  0013F8  A0D8               	btfss	status,0,c
  3037  0013FA  0622               	decf	sprintf@width+1,f,c
  3038  0013FC  5021               	movf	sprintf@width,w,c
  3039  0013FE  1022               	iorwf	sprintf@width+1,w,c
  3040  001400  B4D8               	btfsc	status,2,c
  3041  001402  D002               	goto	l373
  3042  001404  D7F0               	goto	l2270
  3043  001406  D000               	goto	l373
  3044  001408                     l373:
  3045                           
  3046                           ;doprnt.c: 1469: }
  3047                           ;doprnt.c: 1472: prec = c;
  3048  001408  C023  F020         	movff	sprintf@c,sprintf@prec
  3049                           
  3050                           ;doprnt.c: 1474: while(prec--) {
  3051  00140C  D02A               	goto	l2282
  3052  00140E                     l2276:
  3053                           
  3054                           ;doprnt.c: 1478: {
  3055                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3056  00140E  5020               	movf	sprintf@prec,w,c
  3057  001410  0D02               	mullw	2
  3058  001412  0E01               	movlw	low _dpowers
  3059  001414  24F3               	addwf	prodl,w,c
  3060  001416  6EF6               	movwf	tblptrl,c
  3061  001418  0E0F               	movlw	high _dpowers
  3062  00141A  20F4               	addwfc	prodh,w,c
  3063  00141C  6EF7               	movwf	tblptrh,c
  3064  00141E                     	if	0	;There are less than 3 active tblptr bytes
  3065  00141E                     	endif
  3066  00141E  0009               	tblrd		*+
  3067  001420  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3068  001424  000A               	tblrd		*-
  3069  001426  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3070  00142A  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  3071  00142E  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3072  001432  EC2B  F00F         	call	___lwdiv	;wreg free
  3073  001436  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3074  00143A  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3075  00143E  0E00               	movlw	0
  3076  001440  6E0B               	movwf	___lwmod@divisor+1,c
  3077  001442  0E0A               	movlw	10
  3078  001444  6E0A               	movwf	___lwmod@divisor,c
  3079  001446  EC83  F00F         	call	___lwmod	;wreg free
  3080  00144A  5008               	movf	?___lwmod,w,c
  3081  00144C  0F30               	addlw	48
  3082  00144E  6E23               	movwf	sprintf@c,c
  3083                           
  3084                           ;doprnt.c: 1523: }
  3085                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3086  001450  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3087  001454  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3088  001458  C023  FFDF         	movff	sprintf@c,indf2
  3089  00145C  4A0D               	infsnz	sprintf@sp,f,c
  3090  00145E  2A0E               	incf	sprintf@sp+1,f,c
  3091  001460  D000               	goto	l2282
  3092  001462                     l2282:
  3093  001462  0620               	decf	sprintf@prec,f,c
  3094  001464  2820               	incf	sprintf@prec,w,c
  3095  001466  B4D8               	btfsc	status,2,c
  3096  001468  D002               	goto	l2284
  3097  00146A  D7D1               	goto	l2276
  3098  00146C  D000               	goto	l2284
  3099  00146E                     l2284:
  3100  00146E  C00F  FFF6         	movff	sprintf@f,tblptrl
  3101  001472  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3102  001476  4A0F               	infsnz	sprintf@f,f,c
  3103  001478  2A10               	incf	sprintf@f+1,f,c
  3104  00147A                     	if	0	;tblptru may be non-zero
  3105  00147A                     	endif
  3106  00147A                     	if	0	;tblptru may be non-zero
  3107  00147A                     	endif
  3108  00147A  0008               	tblrd		*
  3109  00147C  CFF5 F023          	movff	tablat,sprintf@c
  3110  001480  5023               	movf	sprintf@c,w,c
  3111  001482  B4D8               	btfsc	status,2,c
  3112  001484  D002               	goto	l2286
  3113  001486  D6DC               	goto	l2202
  3114  001488  D000               	goto	l2286
  3115  00148A                     l2286:
  3116                           
  3117                           ;doprnt.c: 1538: *sp = 0;
  3118  00148A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3119  00148E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3120  001492  0E00               	movlw	0
  3121  001494  6EDF               	movwf	indf2,c
  3122  001496  0012               	return	
  3123                           
  3124                           ;doprnt.c: 1540: return 0;
  3125                           ;	Return value of _sprintf is never used
  3126  001498  0012               	return		;funcret
  3127  00149A                     __end_of_sprintf:
  3128                           	opt stack 0
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           prodh	equ	0xFF4
  3134                           prodl	equ	0xFF3
  3135                           intcon	equ	0xFF2
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           postdec1	equ	0xFE5
  3139                           fsr1l	equ	0xFE1
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _isdigit *****************
  3148 ;; Defined at:
  3149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  c               1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  c               1    2[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;		None               void
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3167 ;;Total ram usage:        3 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_sprintf
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text13
  3177  002094                     __ptext13:
  3178                           	opt stack 0
  3179  002094                     _isdigit:
  3180                           	opt stack 28
  3181                           
  3182                           ;incstack = 0
  3183                           ;isdigit@c stored from wreg
  3184  002094  6E03               	movwf	isdigit@c,c
  3185  002096  0E00               	movlw	0
  3186  002098  6E02               	movwf	_isdigit$2090,c
  3187  00209A  0E3A               	movlw	58
  3188  00209C  6003               	cpfslt	isdigit@c,c
  3189  00209E  D006               	goto	l2110
  3190  0020A0  0E2F               	movlw	47
  3191  0020A2  6403               	cpfsgt	isdigit@c,c
  3192  0020A4  D003               	goto	l2110
  3193  0020A6  0E01               	movlw	1
  3194  0020A8  6E02               	movwf	_isdigit$2090,c
  3195  0020AA  D000               	goto	l2110
  3196  0020AC                     l2110:
  3197  0020AC  C002  F001         	movff	_isdigit$2090,??_isdigit
  3198  0020B0  3001               	rrcf	??_isdigit,w,c
  3199  0020B2  0012               	return	
  3200  0020B4  0012               	return		;funcret
  3201  0020B6                     __end_of_isdigit:
  3202                           	opt stack 0
  3203                           tblptru	equ	0xFF8
  3204                           tblptrh	equ	0xFF7
  3205                           tblptrl	equ	0xFF6
  3206                           tablat	equ	0xFF5
  3207                           prodh	equ	0xFF4
  3208                           prodl	equ	0xFF3
  3209                           intcon	equ	0xFF2
  3210                           postinc0	equ	0xFEE
  3211                           wreg	equ	0xFE8
  3212                           postdec1	equ	0xFE5
  3213                           fsr1l	equ	0xFE1
  3214                           indf2	equ	0xFDF
  3215                           postinc2	equ	0xFDE
  3216                           postdec2	equ	0xFDD
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8
  3220                           
  3221 ;; *************** function ___wmul *****************
  3222 ;; Defined at:
  3223 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  multiplier      2    0[COMRAM] unsigned int 
  3226 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  product         2    4[COMRAM] unsigned int 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  2    0[COMRAM] unsigned int 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0, prodl, prodh
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3242 ;;Total ram usage:        6 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_sprintf
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text14
  3252  002048                     __ptext14:
  3253                           	opt stack 0
  3254  002048                     ___wmul:
  3255                           	opt stack 28
  3256                           
  3257                           ;incstack = 0
  3258  002048  5001               	movf	___wmul@multiplier,w,c
  3259  00204A  0203               	mulwf	___wmul@multiplicand,c
  3260  00204C  CFF3 F005          	movff	prodl,___wmul@product
  3261  002050  CFF4 F006          	movff	prodh,___wmul@product+1
  3262  002054  5001               	movf	___wmul@multiplier,w,c
  3263  002056  0204               	mulwf	___wmul@multiplicand+1,c
  3264  002058  50F3               	movf	prodl,w,c
  3265  00205A  2606               	addwf	___wmul@product+1,f,c
  3266  00205C  5002               	movf	___wmul@multiplier+1,w,c
  3267  00205E  0203               	mulwf	___wmul@multiplicand,c
  3268  002060  50F3               	movf	prodl,w,c
  3269  002062  2606               	addwf	___wmul@product+1,f,c
  3270  002064  C005  F001         	movff	___wmul@product,?___wmul
  3271  002068  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3272  00206C  0012               	return	
  3273  00206E  0012               	return		;funcret
  3274  002070                     __end_of___wmul:
  3275                           	opt stack 0
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           prodh	equ	0xFF4
  3281                           prodl	equ	0xFF3
  3282                           intcon	equ	0xFF2
  3283                           postinc0	equ	0xFEE
  3284                           wreg	equ	0xFE8
  3285                           postdec1	equ	0xFE5
  3286                           fsr1l	equ	0xFE1
  3287                           indf2	equ	0xFDF
  3288                           postinc2	equ	0xFDE
  3289                           postdec2	equ	0xFDD
  3290                           fsr2h	equ	0xFDA
  3291                           fsr2l	equ	0xFD9
  3292                           status	equ	0xFD8
  3293                           
  3294 ;; *************** function ___lwmod *****************
  3295 ;; Defined at:
  3296 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  dividend        2    7[COMRAM] unsigned int 
  3299 ;;  divisor         2    9[COMRAM] unsigned int 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  counter         1   11[COMRAM] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  2    7[COMRAM] unsigned int 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3314 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3315 ;;Total ram usage:        5 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_sprintf
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text15
  3325  001F06                     __ptext15:
  3326                           	opt stack 0
  3327  001F06                     ___lwmod:
  3328                           	opt stack 28
  3329                           
  3330                           ;incstack = 0
  3331  001F06  500A               	movf	___lwmod@divisor,w,c
  3332  001F08  100B               	iorwf	___lwmod@divisor+1,w,c
  3333  001F0A  B4D8               	btfsc	status,2,c
  3334  001F0C  D01D               	goto	l1027
  3335  001F0E  0E01               	movlw	1
  3336  001F10  6E0C               	movwf	___lwmod@counter,c
  3337  001F12  D005               	goto	l2148
  3338  001F14                     l2146:
  3339  001F14  90D8               	bcf	status,0,c
  3340  001F16  360A               	rlcf	___lwmod@divisor,f,c
  3341  001F18  360B               	rlcf	___lwmod@divisor+1,f,c
  3342  001F1A  2A0C               	incf	___lwmod@counter,f,c
  3343  001F1C  D000               	goto	l2148
  3344  001F1E                     l2148:
  3345  001F1E  BE0B               	btfsc	___lwmod@divisor+1,7,c
  3346  001F20  D002               	goto	l2150
  3347  001F22  D7F8               	goto	l2146
  3348  001F24  D000               	goto	l2150
  3349  001F26                     l2150:
  3350  001F26  500A               	movf	___lwmod@divisor,w,c
  3351  001F28  5C08               	subwf	___lwmod@dividend,w,c
  3352  001F2A  500B               	movf	___lwmod@divisor+1,w,c
  3353  001F2C  5809               	subwfb	___lwmod@dividend+1,w,c
  3354  001F2E  A0D8               	btfss	status,0,c
  3355  001F30  D005               	goto	l2154
  3356  001F32  500A               	movf	___lwmod@divisor,w,c
  3357  001F34  5E08               	subwf	___lwmod@dividend,f,c
  3358  001F36  500B               	movf	___lwmod@divisor+1,w,c
  3359  001F38  5A09               	subwfb	___lwmod@dividend+1,f,c
  3360  001F3A  D000               	goto	l2154
  3361  001F3C                     l2154:
  3362  001F3C  90D8               	bcf	status,0,c
  3363  001F3E  320B               	rrcf	___lwmod@divisor+1,f,c
  3364  001F40  320A               	rrcf	___lwmod@divisor,f,c
  3365  001F42  2E0C               	decfsz	___lwmod@counter,f,c
  3366  001F44  D7F0               	goto	l2150
  3367  001F46  D000               	goto	l1027
  3368  001F48                     l1027:
  3369  001F48  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3370  001F4C  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3371  001F50  0012               	return		;funcret
  3372  001F52                     __end_of___lwmod:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           intcon	equ	0xFF2
  3381                           postinc0	equ	0xFEE
  3382                           wreg	equ	0xFE8
  3383                           postdec1	equ	0xFE5
  3384                           fsr1l	equ	0xFE1
  3385                           indf2	equ	0xFDF
  3386                           postinc2	equ	0xFDE
  3387                           postdec2	equ	0xFDD
  3388                           fsr2h	equ	0xFDA
  3389                           fsr2l	equ	0xFD9
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function ___lwdiv *****************
  3393 ;; Defined at:
  3394 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  dividend        2    0[COMRAM] unsigned int 
  3397 ;;  divisor         2    2[COMRAM] unsigned int 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  quotient        2    4[COMRAM] unsigned int 
  3400 ;;  counter         1    6[COMRAM] unsigned char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  2    0[COMRAM] unsigned int 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;Total ram usage:        7 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_sprintf
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text16
  3424  001E56                     __ptext16:
  3425                           	opt stack 0
  3426  001E56                     ___lwdiv:
  3427                           	opt stack 28
  3428                           
  3429                           ;incstack = 0
  3430  001E56  0E00               	movlw	0
  3431  001E58  6E06               	movwf	___lwdiv@quotient+1,c
  3432  001E5A  0E00               	movlw	0
  3433  001E5C  6E05               	movwf	___lwdiv@quotient,c
  3434  001E5E  5003               	movf	___lwdiv@divisor,w,c
  3435  001E60  1004               	iorwf	___lwdiv@divisor+1,w,c
  3436  001E62  B4D8               	btfsc	status,2,c
  3437  001E64  D021               	goto	l1017
  3438  001E66  0E01               	movlw	1
  3439  001E68  6E07               	movwf	___lwdiv@counter,c
  3440  001E6A  D005               	goto	l2128
  3441  001E6C                     l2126:
  3442  001E6C  90D8               	bcf	status,0,c
  3443  001E6E  3603               	rlcf	___lwdiv@divisor,f,c
  3444  001E70  3604               	rlcf	___lwdiv@divisor+1,f,c
  3445  001E72  2A07               	incf	___lwdiv@counter,f,c
  3446  001E74  D000               	goto	l2128
  3447  001E76                     l2128:
  3448  001E76  BE04               	btfsc	___lwdiv@divisor+1,7,c
  3449  001E78  D002               	goto	l2130
  3450  001E7A  D7F8               	goto	l2126
  3451  001E7C  D000               	goto	l2130
  3452  001E7E                     l2130:
  3453  001E7E  90D8               	bcf	status,0,c
  3454  001E80  3605               	rlcf	___lwdiv@quotient,f,c
  3455  001E82  3606               	rlcf	___lwdiv@quotient+1,f,c
  3456  001E84  5003               	movf	___lwdiv@divisor,w,c
  3457  001E86  5C01               	subwf	___lwdiv@dividend,w,c
  3458  001E88  5004               	movf	___lwdiv@divisor+1,w,c
  3459  001E8A  5802               	subwfb	___lwdiv@dividend+1,w,c
  3460  001E8C  A0D8               	btfss	status,0,c
  3461  001E8E  D006               	goto	l2138
  3462  001E90  5003               	movf	___lwdiv@divisor,w,c
  3463  001E92  5E01               	subwf	___lwdiv@dividend,f,c
  3464  001E94  5004               	movf	___lwdiv@divisor+1,w,c
  3465  001E96  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3466  001E98  8005               	bsf	___lwdiv@quotient,0,c
  3467  001E9A  D000               	goto	l2138
  3468  001E9C                     l2138:
  3469  001E9C  90D8               	bcf	status,0,c
  3470  001E9E  3204               	rrcf	___lwdiv@divisor+1,f,c
  3471  001EA0  3203               	rrcf	___lwdiv@divisor,f,c
  3472  001EA2  2E07               	decfsz	___lwdiv@counter,f,c
  3473  001EA4  D7EC               	goto	l2130
  3474  001EA6  D000               	goto	l1017
  3475  001EA8                     l1017:
  3476  001EA8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3477  001EAC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3478  001EB0  0012               	return		;funcret
  3479  001EB2                     __end_of___lwdiv:
  3480                           	opt stack 0
  3481                           tblptru	equ	0xFF8
  3482                           tblptrh	equ	0xFF7
  3483                           tblptrl	equ	0xFF6
  3484                           tablat	equ	0xFF5
  3485                           prodh	equ	0xFF4
  3486                           prodl	equ	0xFF3
  3487                           intcon	equ	0xFF2
  3488                           postinc0	equ	0xFEE
  3489                           wreg	equ	0xFE8
  3490                           postdec1	equ	0xFE5
  3491                           fsr1l	equ	0xFE1
  3492                           indf2	equ	0xFDF
  3493                           postinc2	equ	0xFDE
  3494                           postdec2	equ	0xFDD
  3495                           fsr2h	equ	0xFDA
  3496                           fsr2l	equ	0xFD9
  3497                           status	equ	0xFD8
  3498                           
  3499 ;; *************** function _lcd_comand *****************
  3500 ;; Defined at:
  3501 ;;		line 189 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  d               1    wreg     unsigned char 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  d               1    4[COMRAM] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;		None               void
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3518 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3519 ;;Total ram usage:        1 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    2
  3522 ;; This function calls:
  3523 ;;		_lcd_send_byte
  3524 ;; This function is called by:
  3525 ;;		_setup
  3526 ;;		_home
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text17
  3531  002132                     __ptext17:
  3532                           	opt stack 0
  3533  002132                     _lcd_comand:
  3534                           	opt stack 27
  3535                           
  3536                           ;incstack = 0
  3537                           ;lcd_comand@d stored from wreg
  3538  002132  6E05               	movwf	lcd_comand@d,c
  3539                           
  3540                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  3541  002134  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  3542  002138  0E00               	movlw	0
  3543  00213A  EC0B  F010         	call	_lcd_send_byte
  3544  00213E  0012               	return		;funcret
  3545  002140                     __end_of_lcd_comand:
  3546                           	opt stack 0
  3547                           tblptru	equ	0xFF8
  3548                           tblptrh	equ	0xFF7
  3549                           tblptrl	equ	0xFF6
  3550                           tablat	equ	0xFF5
  3551                           prodh	equ	0xFF4
  3552                           prodl	equ	0xFF3
  3553                           intcon	equ	0xFF2
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postdec1	equ	0xFE5
  3557                           fsr1l	equ	0xFE1
  3558                           indf2	equ	0xFDF
  3559                           postinc2	equ	0xFDE
  3560                           postdec2	equ	0xFDD
  3561                           fsr2h	equ	0xFDA
  3562                           fsr2l	equ	0xFD9
  3563                           status	equ	0xFD8
  3564                           
  3565 ;; *************** function _button_C *****************
  3566 ;; Defined at:
  3567 ;;		line 225 in file "main.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    6
  3588 ;; This function calls:
  3589 ;;		_menu_home
  3590 ;; This function is called by:
  3591 ;;		_keyboard_control
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text18
  3596  002140                     __ptext18:
  3597                           	opt stack 0
  3598  002140                     _button_C:
  3599                           	opt stack 23
  3600                           
  3601                           ;main.c: 226: menu_home();
  3602                           
  3603                           ;incstack = 0
  3604  002140  ECFC  F00E         	call	_menu_home	;wreg free
  3605                           
  3606                           ;main.c: 227: submenu = 0;
  3607  002144  0E00               	movlw	0
  3608  002146  6E3E               	movwf	_submenu+1,c
  3609  002148  0E00               	movlw	0
  3610  00214A  6E3D               	movwf	_submenu,c
  3611  00214C  0012               	return		;funcret
  3612  00214E                     __end_of_button_C:
  3613                           	opt stack 0
  3614                           tblptru	equ	0xFF8
  3615                           tblptrh	equ	0xFF7
  3616                           tblptrl	equ	0xFF6
  3617                           tablat	equ	0xFF5
  3618                           prodh	equ	0xFF4
  3619                           prodl	equ	0xFF3
  3620                           intcon	equ	0xFF2
  3621                           postinc0	equ	0xFEE
  3622                           wreg	equ	0xFE8
  3623                           postdec1	equ	0xFE5
  3624                           fsr1l	equ	0xFE1
  3625                           indf2	equ	0xFDF
  3626                           postinc2	equ	0xFDE
  3627                           postdec2	equ	0xFDD
  3628                           fsr2h	equ	0xFDA
  3629                           fsr2l	equ	0xFD9
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function _button_B *****************
  3633 ;; Defined at:
  3634 ;;		line 177 in file "main.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;		None               void
  3641 ;; Registers used:
  3642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;Total ram usage:        2 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    5
  3655 ;; This function calls:
  3656 ;;		_lcd_gotoxy
  3657 ;;		_lcd_init
  3658 ;;		_lcd_putrs
  3659 ;; This function is called by:
  3660 ;;		_keyboard_control
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text19
  3665  00149A                     __ptext19:
  3666                           	opt stack 0
  3667  00149A                     _button_B:
  3668                           	opt stack 24
  3669                           
  3670                           ;main.c: 179: switch(select)
  3671                           
  3672                           ;incstack = 0
  3673  00149A  D0A0               	goto	l2714
  3674  00149C                     l2648:
  3675                           
  3676                           ;main.c: 182: lcd_init();
  3677  00149C  EC49  F00E         	call	_lcd_init	;wreg free
  3678                           
  3679                           ;main.c: 183: lcd_gotoxy(1,1);
  3680  0014A0  0E01               	movlw	1
  3681  0014A2  6E05               	movwf	lcd_gotoxy@y,c
  3682  0014A4  0E01               	movlw	1
  3683  0014A6  EC38  F010         	call	_lcd_gotoxy
  3684                           
  3685                           ;main.c: 184: lcd_putrs("Clock");
  3686  0014AA  0E6D               	movlw	low STR_20
  3687  0014AC  6E09               	movwf	lcd_putrs@ptr,c
  3688  0014AE  0E0F               	movlw	high STR_20
  3689  0014B0  6E0A               	movwf	lcd_putrs@ptr+1,c
  3690  0014B2  EC59  F00F         	call	_lcd_putrs	;wreg free
  3691                           
  3692                           ;main.c: 185: lcd_gotoxy(10,1);
  3693  0014B6  0E01               	movlw	1
  3694  0014B8  6E05               	movwf	lcd_gotoxy@y,c
  3695  0014BA  0E0A               	movlw	10
  3696  0014BC  EC38  F010         	call	_lcd_gotoxy
  3697                           
  3698                           ;main.c: 186: lcd_putrs("Date");
  3699  0014C0  0E78               	movlw	low STR_21
  3700  0014C2  6E09               	movwf	lcd_putrs@ptr,c
  3701  0014C4  0E0F               	movlw	high STR_21
  3702  0014C6  6E0A               	movwf	lcd_putrs@ptr+1,c
  3703  0014C8  EC59  F00F         	call	_lcd_putrs	;wreg free
  3704                           
  3705                           ;main.c: 187: lcd_gotoxy(10,2);
  3706  0014CC  0E02               	movlw	2
  3707  0014CE  6E05               	movwf	lcd_gotoxy@y,c
  3708  0014D0  0E0A               	movlw	10
  3709  0014D2  EC38  F010         	call	_lcd_gotoxy
  3710                           
  3711                           ;main.c: 188: lcd_putrs("Time");
  3712  0014D6  0E73               	movlw	low STR_22
  3713  0014D8  6E09               	movwf	lcd_putrs@ptr,c
  3714  0014DA  0E0F               	movlw	high STR_22
  3715  0014DC  6E0A               	movwf	lcd_putrs@ptr+1,c
  3716  0014DE  EC59  F00F         	call	_lcd_putrs	;wreg free
  3717                           
  3718                           ;main.c: 189: submenu = 1;
  3719  0014E2  0E00               	movlw	0
  3720  0014E4  6E3E               	movwf	_submenu+1,c
  3721  0014E6  0E01               	movlw	1
  3722  0014E8  6E3D               	movwf	_submenu,c
  3723                           
  3724                           ;main.c: 190: break;
  3725  0014EA  0012               	return	
  3726  0014EC                     l2664:
  3727                           
  3728                           ;main.c: 192: lcd_init();
  3729  0014EC  EC49  F00E         	call	_lcd_init	;wreg free
  3730                           
  3731                           ;main.c: 193: lcd_gotoxy(1,1);
  3732  0014F0  0E01               	movlw	1
  3733  0014F2  6E05               	movwf	lcd_gotoxy@y,c
  3734  0014F4  0E01               	movlw	1
  3735  0014F6  EC38  F010         	call	_lcd_gotoxy
  3736                           
  3737                           ;main.c: 194: lcd_putrs("Menu 2");
  3738  0014FA  0E40               	movlw	low STR_23
  3739  0014FC  6E09               	movwf	lcd_putrs@ptr,c
  3740  0014FE  0E0F               	movlw	high STR_23
  3741  001500  6E0A               	movwf	lcd_putrs@ptr+1,c
  3742  001502  EC59  F00F         	call	_lcd_putrs	;wreg free
  3743                           
  3744                           ;main.c: 195: lcd_gotoxy(10,1);
  3745  001506  0E01               	movlw	1
  3746  001508  6E05               	movwf	lcd_gotoxy@y,c
  3747  00150A  0E0A               	movlw	10
  3748  00150C  EC38  F010         	call	_lcd_gotoxy
  3749                           
  3750                           ;main.c: 196: lcd_putrs("Option1");
  3751  001510  0E28               	movlw	low STR_24
  3752  001512  6E09               	movwf	lcd_putrs@ptr,c
  3753  001514  0E0F               	movlw	high STR_24
  3754  001516  6E0A               	movwf	lcd_putrs@ptr+1,c
  3755  001518  EC59  F00F         	call	_lcd_putrs	;wreg free
  3756                           
  3757                           ;main.c: 197: lcd_gotoxy(10,2);
  3758  00151C  0E02               	movlw	2
  3759  00151E  6E05               	movwf	lcd_gotoxy@y,c
  3760  001520  0E0A               	movlw	10
  3761  001522  EC38  F010         	call	_lcd_gotoxy
  3762                           
  3763                           ;main.c: 198: lcd_putrs("Option2");
  3764  001526  0E30               	movlw	low STR_25
  3765  001528  6E09               	movwf	lcd_putrs@ptr,c
  3766  00152A  0E0F               	movlw	high STR_25
  3767  00152C  6E0A               	movwf	lcd_putrs@ptr+1,c
  3768  00152E  EC59  F00F         	call	_lcd_putrs	;wreg free
  3769                           
  3770                           ;main.c: 199: submenu = 1;
  3771  001532  0E00               	movlw	0
  3772  001534  6E3E               	movwf	_submenu+1,c
  3773  001536  0E01               	movlw	1
  3774  001538  6E3D               	movwf	_submenu,c
  3775                           
  3776                           ;main.c: 200: break;
  3777  00153A  0012               	return	
  3778  00153C                     l2680:
  3779                           
  3780                           ;main.c: 202: lcd_init();
  3781  00153C  EC49  F00E         	call	_lcd_init	;wreg free
  3782                           
  3783                           ;main.c: 203: lcd_gotoxy(1,1);
  3784  001540  0E01               	movlw	1
  3785  001542  6E05               	movwf	lcd_gotoxy@y,c
  3786  001544  0E01               	movlw	1
  3787  001546  EC38  F010         	call	_lcd_gotoxy
  3788                           
  3789                           ;main.c: 204: lcd_putrs("Menu 3");
  3790  00154A  0E47               	movlw	low STR_26
  3791  00154C  6E09               	movwf	lcd_putrs@ptr,c
  3792  00154E  0E0F               	movlw	high STR_26
  3793  001550  6E0A               	movwf	lcd_putrs@ptr+1,c
  3794  001552  EC59  F00F         	call	_lcd_putrs	;wreg free
  3795                           
  3796                           ;main.c: 205: lcd_gotoxy(10,1);
  3797  001556  0E01               	movlw	1
  3798  001558  6E05               	movwf	lcd_gotoxy@y,c
  3799  00155A  0E0A               	movlw	10
  3800  00155C  EC38  F010         	call	_lcd_gotoxy
  3801                           
  3802                           ;main.c: 206: lcd_putrs("Option1");
  3803  001560  0E28               	movlw	low STR_24
  3804  001562  6E09               	movwf	lcd_putrs@ptr,c
  3805  001564  0E0F               	movlw	high STR_24
  3806  001566  6E0A               	movwf	lcd_putrs@ptr+1,c
  3807  001568  EC59  F00F         	call	_lcd_putrs	;wreg free
  3808                           
  3809                           ;main.c: 207: lcd_gotoxy(10,2);
  3810  00156C  0E02               	movlw	2
  3811  00156E  6E05               	movwf	lcd_gotoxy@y,c
  3812  001570  0E0A               	movlw	10
  3813  001572  EC38  F010         	call	_lcd_gotoxy
  3814                           
  3815                           ;main.c: 208: lcd_putrs("Option2");
  3816  001576  0E30               	movlw	low STR_25
  3817  001578  6E09               	movwf	lcd_putrs@ptr,c
  3818  00157A  0E0F               	movlw	high STR_25
  3819  00157C  6E0A               	movwf	lcd_putrs@ptr+1,c
  3820  00157E  EC59  F00F         	call	_lcd_putrs	;wreg free
  3821                           
  3822                           ;main.c: 209: submenu = 1;
  3823  001582  0E00               	movlw	0
  3824  001584  6E3E               	movwf	_submenu+1,c
  3825  001586  0E01               	movlw	1
  3826  001588  6E3D               	movwf	_submenu,c
  3827                           
  3828                           ;main.c: 210: break;
  3829  00158A  0012               	return	
  3830  00158C                     l2696:
  3831                           
  3832                           ;main.c: 212: lcd_init();
  3833  00158C  EC49  F00E         	call	_lcd_init	;wreg free
  3834                           
  3835                           ;main.c: 213: lcd_gotoxy(1,1);
  3836  001590  0E01               	movlw	1
  3837  001592  6E05               	movwf	lcd_gotoxy@y,c
  3838  001594  0E01               	movlw	1
  3839  001596  EC38  F010         	call	_lcd_gotoxy
  3840                           
  3841                           ;main.c: 214: lcd_putrs("Menu 4");
  3842  00159A  0E4E               	movlw	low STR_29
  3843  00159C  6E09               	movwf	lcd_putrs@ptr,c
  3844  00159E  0E0F               	movlw	high STR_29
  3845  0015A0  6E0A               	movwf	lcd_putrs@ptr+1,c
  3846  0015A2  EC59  F00F         	call	_lcd_putrs	;wreg free
  3847                           
  3848                           ;main.c: 215: lcd_gotoxy(10,1);
  3849  0015A6  0E01               	movlw	1
  3850  0015A8  6E05               	movwf	lcd_gotoxy@y,c
  3851  0015AA  0E0A               	movlw	10
  3852  0015AC  EC38  F010         	call	_lcd_gotoxy
  3853                           
  3854                           ;main.c: 216: lcd_putrs("Option1");
  3855  0015B0  0E28               	movlw	low STR_24
  3856  0015B2  6E09               	movwf	lcd_putrs@ptr,c
  3857  0015B4  0E0F               	movlw	high STR_24
  3858  0015B6  6E0A               	movwf	lcd_putrs@ptr+1,c
  3859  0015B8  EC59  F00F         	call	_lcd_putrs	;wreg free
  3860                           
  3861                           ;main.c: 217: lcd_gotoxy(10,2);
  3862  0015BC  0E02               	movlw	2
  3863  0015BE  6E05               	movwf	lcd_gotoxy@y,c
  3864  0015C0  0E0A               	movlw	10
  3865  0015C2  EC38  F010         	call	_lcd_gotoxy
  3866                           
  3867                           ;main.c: 218: lcd_putrs("Option2");
  3868  0015C6  0E30               	movlw	low STR_25
  3869  0015C8  6E09               	movwf	lcd_putrs@ptr,c
  3870  0015CA  0E0F               	movlw	high STR_25
  3871  0015CC  6E0A               	movwf	lcd_putrs@ptr+1,c
  3872  0015CE  EC59  F00F         	call	_lcd_putrs	;wreg free
  3873                           
  3874                           ;main.c: 219: submenu = 1;
  3875  0015D2  0E00               	movlw	0
  3876  0015D4  6E3E               	movwf	_submenu+1,c
  3877  0015D6  0E01               	movlw	1
  3878  0015D8  6E3D               	movwf	_submenu,c
  3879                           
  3880                           ;main.c: 221: }
  3881                           
  3882                           ;main.c: 220: break;
  3883  0015DA  0012               	return	
  3884  0015DC                     l2714:
  3885  0015DC  C037  F00B         	movff	_select,??_button_B
  3886  0015E0  C038  F00C         	movff	_select+1,??_button_B+1
  3887                           
  3888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3889                           ; Switch size 1, requested type "space"
  3890                           ; Number of cases is 1, Range of values is 0 to 0
  3891                           ; switch strategies available:
  3892                           ; Name         Instructions Cycles
  3893                           ; simple_byte            4     3 (average)
  3894                           ;	Chosen strategy is simple_byte
  3895  0015E4  500C               	movf	??_button_B+1,w,c
  3896  0015E6  0A00               	xorlw	0	; case 0
  3897  0015E8  A4D8               	btfss	status,2,c
  3898  0015EA  0012               	return	
  3899                           
  3900                           ; Switch size 1, requested type "space"
  3901                           ; Number of cases is 4, Range of values is 1 to 4
  3902                           ; switch strategies available:
  3903                           ; Name         Instructions Cycles
  3904                           ; simple_byte           13     7 (average)
  3905                           ;	Chosen strategy is simple_byte
  3906  0015EC  500B               	movf	??_button_B,w,c
  3907  0015EE  0A01               	xorlw	1	; case 1
  3908  0015F0  B4D8               	btfsc	status,2,c
  3909  0015F2  D754               	goto	l2648
  3910  0015F4  0A03               	xorlw	3	; case 2
  3911  0015F6  B4D8               	btfsc	status,2,c
  3912  0015F8  D779               	goto	l2664
  3913  0015FA  0A01               	xorlw	1	; case 3
  3914  0015FC  B4D8               	btfsc	status,2,c
  3915  0015FE  D79E               	goto	l2680
  3916  001600  0A07               	xorlw	7	; case 4
  3917  001602  A4D8               	btfss	status,2,c
  3918  001604  0012               	return	
  3919  001606  D7C2               	goto	l2696
  3920  001608  0012               	return		;funcret
  3921  00160A                     __end_of_button_B:
  3922                           	opt stack 0
  3923                           tblptru	equ	0xFF8
  3924                           tblptrh	equ	0xFF7
  3925                           tblptrl	equ	0xFF6
  3926                           tablat	equ	0xFF5
  3927                           prodh	equ	0xFF4
  3928                           prodl	equ	0xFF3
  3929                           intcon	equ	0xFF2
  3930                           postinc0	equ	0xFEE
  3931                           wreg	equ	0xFE8
  3932                           postdec1	equ	0xFE5
  3933                           fsr1l	equ	0xFE1
  3934                           indf2	equ	0xFDF
  3935                           postinc2	equ	0xFDE
  3936                           postdec2	equ	0xFDD
  3937                           fsr2h	equ	0xFDA
  3938                           fsr2l	equ	0xFD9
  3939                           status	equ	0xFD8
  3940                           
  3941 ;; *************** function _button_A *****************
  3942 ;; Defined at:
  3943 ;;		line 160 in file "main.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;		None               void
  3950 ;; Registers used:
  3951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    6
  3964 ;; This function calls:
  3965 ;;		_menu_home
  3966 ;;		_menu_iterator
  3967 ;;		_menu_submenu_iterator
  3968 ;; This function is called by:
  3969 ;;		_keyboard_control
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text20
  3974  001FE2                     __ptext20:
  3975                           	opt stack 0
  3976  001FE2                     _button_A:
  3977                           	opt stack 23
  3978                           
  3979                           ;main.c: 162: if(menu == 0){
  3980                           
  3981                           ;incstack = 0
  3982  001FE2  5031               	movf	_menu,w,c
  3983  001FE4  1032               	iorwf	_menu+1,w,c
  3984  001FE6  A4D8               	btfss	status,2,c
  3985  001FE8  D007               	goto	l2638
  3986                           
  3987                           ;main.c: 163: menu_home();
  3988  001FEA  ECFC  F00E         	call	_menu_home	;wreg free
  3989                           
  3990                           ;main.c: 164: menu = 1;
  3991  001FEE  0E00               	movlw	0
  3992  001FF0  6E32               	movwf	_menu+1,c
  3993  001FF2  0E01               	movlw	1
  3994  001FF4  6E31               	movwf	_menu,c
  3995                           
  3996                           ;main.c: 165: } else {
  3997  001FF6  0012               	return	
  3998  001FF8                     l2638:
  3999                           
  4000                           ;main.c: 167: if (submenu == 0){
  4001  001FF8  503D               	movf	_submenu,w,c
  4002  001FFA  103E               	iorwf	_submenu+1,w,c
  4003  001FFC  A4D8               	btfss	status,2,c
  4004  001FFE  D003               	goto	l2642
  4005                           
  4006                           ;main.c: 168: menu_iterator();
  4007  002000  EC4C  F00C         	call	_menu_iterator	;wreg free
  4008  002004  D000               	goto	l2642
  4009  002006                     l2642:
  4010                           
  4011                           ;main.c: 169: }
  4012                           ;main.c: 171: if (submenu == 1){
  4013  002006  043D               	decf	_submenu,w,c
  4014  002008  103E               	iorwf	_submenu+1,w,c
  4015  00200A  A4D8               	btfss	status,2,c
  4016  00200C  0012               	return	
  4017                           
  4018                           ;main.c: 172: menu_submenu_iterator();
  4019  00200E  EC01  F00E         	call	_menu_submenu_iterator	;wreg free
  4020  002012  0012               	return	
  4021  002014  0012               	return		;funcret
  4022  002016                     __end_of_button_A:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           intcon	equ	0xFF2
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           postdec1	equ	0xFE5
  4034                           fsr1l	equ	0xFE1
  4035                           indf2	equ	0xFDF
  4036                           postinc2	equ	0xFDE
  4037                           postdec2	equ	0xFDD
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function _menu_submenu_iterator *****************
  4043 ;; Defined at:
  4044 ;;		line 139 in file "main.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;		None               void
  4051 ;; Registers used:
  4052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4062 ;;Total ram usage:        2 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    5
  4065 ;; This function calls:
  4066 ;;		_lcd_gotoxy
  4067 ;;		_lcd_putrs
  4068 ;; This function is called by:
  4069 ;;		_button_A
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text21
  4074  001C02                     __ptext21:
  4075                           	opt stack 0
  4076  001C02                     _menu_submenu_iterator:
  4077                           	opt stack 23
  4078                           
  4079                           ;main.c: 141: switch(select_op){
  4080                           
  4081                           ;incstack = 0
  4082  001C02  D036               	goto	l2532
  4083  001C04                     l2510:
  4084                           
  4085                           ;main.c: 143: lcd_gotoxy(9,1);
  4086  001C04  0E01               	movlw	1
  4087  001C06  6E05               	movwf	lcd_gotoxy@y,c
  4088  001C08  0E09               	movlw	9
  4089  001C0A  EC38  F010         	call	_lcd_gotoxy
  4090                           
  4091                           ;main.c: 144: lcd_putrs(">");
  4092  001C0E  0E88               	movlw	low STR_8
  4093  001C10  6E09               	movwf	lcd_putrs@ptr,c
  4094  001C12  0E0F               	movlw	high STR_8
  4095  001C14  6E0A               	movwf	lcd_putrs@ptr+1,c
  4096  001C16  EC59  F00F         	call	_lcd_putrs	;wreg free
  4097                           
  4098                           ;main.c: 145: select_op = 2;
  4099  001C1A  0E00               	movlw	0
  4100  001C1C  6E3A               	movwf	_select_op+1,c
  4101  001C1E  0E02               	movlw	2
  4102  001C20  6E39               	movwf	_select_op,c
  4103                           
  4104                           ;main.c: 146: lcd_gotoxy(9,2);
  4105  001C22  0E02               	movlw	2
  4106  001C24  6E05               	movwf	lcd_gotoxy@y,c
  4107  001C26  0E09               	movlw	9
  4108  001C28  EC38  F010         	call	_lcd_gotoxy
  4109                           
  4110                           ;main.c: 147: lcd_putrs(" ");
  4111  001C2C  0E82               	movlw	low STR_9
  4112  001C2E  6E09               	movwf	lcd_putrs@ptr,c
  4113  001C30  0E0F               	movlw	high STR_9
  4114  001C32  6E0A               	movwf	lcd_putrs@ptr+1,c
  4115  001C34  EC59  F00F         	call	_lcd_putrs	;wreg free
  4116                           
  4117                           ;main.c: 148: break;
  4118  001C38  0012               	return	
  4119  001C3A                     l2520:
  4120                           
  4121                           ;main.c: 150: lcd_gotoxy(9,2);
  4122  001C3A  0E02               	movlw	2
  4123  001C3C  6E05               	movwf	lcd_gotoxy@y,c
  4124  001C3E  0E09               	movlw	9
  4125  001C40  EC38  F010         	call	_lcd_gotoxy
  4126                           
  4127                           ;main.c: 151: lcd_putrs(">");
  4128  001C44  0E88               	movlw	low STR_8
  4129  001C46  6E09               	movwf	lcd_putrs@ptr,c
  4130  001C48  0E0F               	movlw	high STR_8
  4131  001C4A  6E0A               	movwf	lcd_putrs@ptr+1,c
  4132  001C4C  EC59  F00F         	call	_lcd_putrs	;wreg free
  4133                           
  4134                           ;main.c: 152: select_op = 1;
  4135  001C50  0E00               	movlw	0
  4136  001C52  6E3A               	movwf	_select_op+1,c
  4137  001C54  0E01               	movlw	1
  4138  001C56  6E39               	movwf	_select_op,c
  4139                           
  4140                           ;main.c: 153: lcd_gotoxy(9,1);
  4141  001C58  0E01               	movlw	1
  4142  001C5A  6E05               	movwf	lcd_gotoxy@y,c
  4143  001C5C  0E09               	movlw	9
  4144  001C5E  EC38  F010         	call	_lcd_gotoxy
  4145                           
  4146                           ;main.c: 154: lcd_putrs(" ");
  4147  001C62  0E82               	movlw	low STR_9
  4148  001C64  6E09               	movwf	lcd_putrs@ptr,c
  4149  001C66  0E0F               	movlw	high STR_9
  4150  001C68  6E0A               	movwf	lcd_putrs@ptr+1,c
  4151  001C6A  EC59  F00F         	call	_lcd_putrs	;wreg free
  4152                           
  4153                           ;main.c: 156: }
  4154                           
  4155                           ;main.c: 155: break;
  4156  001C6E  0012               	return	
  4157  001C70                     l2532:
  4158  001C70  C039  F00B         	movff	_select_op,??_menu_submenu_iterator
  4159  001C74  C03A  F00C         	movff	_select_op+1,??_menu_submenu_iterator+1
  4160                           
  4161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4162                           ; Switch size 1, requested type "space"
  4163                           ; Number of cases is 1, Range of values is 0 to 0
  4164                           ; switch strategies available:
  4165                           ; Name         Instructions Cycles
  4166                           ; simple_byte            4     3 (average)
  4167                           ;	Chosen strategy is simple_byte
  4168  001C78  500C               	movf	??_menu_submenu_iterator+1,w,c
  4169  001C7A  0A00               	xorlw	0	; case 0
  4170  001C7C  A4D8               	btfss	status,2,c
  4171  001C7E  0012               	return	
  4172                           
  4173                           ; Switch size 1, requested type "space"
  4174                           ; Number of cases is 2, Range of values is 1 to 2
  4175                           ; switch strategies available:
  4176                           ; Name         Instructions Cycles
  4177                           ; simple_byte            7     4 (average)
  4178                           ;	Chosen strategy is simple_byte
  4179  001C80  500B               	movf	??_menu_submenu_iterator,w,c
  4180  001C82  0A01               	xorlw	1	; case 1
  4181  001C84  B4D8               	btfsc	status,2,c
  4182  001C86  D7BE               	goto	l2510
  4183  001C88  0A03               	xorlw	3	; case 2
  4184  001C8A  A4D8               	btfss	status,2,c
  4185  001C8C  0012               	return	
  4186  001C8E  D7D5               	goto	l2520
  4187  001C90  0012               	return		;funcret
  4188  001C92                     __end_of_menu_submenu_iterator:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           intcon	equ	0xFF2
  4197                           postinc0	equ	0xFEE
  4198                           wreg	equ	0xFE8
  4199                           postdec1	equ	0xFE5
  4200                           fsr1l	equ	0xFE1
  4201                           indf2	equ	0xFDF
  4202                           postinc2	equ	0xFDE
  4203                           postdec2	equ	0xFDD
  4204                           fsr2h	equ	0xFDA
  4205                           fsr2l	equ	0xFD9
  4206                           status	equ	0xFD8
  4207                           
  4208 ;; *************** function _menu_iterator *****************
  4209 ;; Defined at:
  4210 ;;		line 100 in file "main.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;		None               void
  4217 ;; Registers used:
  4218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;Total ram usage:        2 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    5
  4231 ;; This function calls:
  4232 ;;		_lcd_gotoxy
  4233 ;;		_lcd_putrs
  4234 ;; This function is called by:
  4235 ;;		_button_A
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text22
  4240  001898                     __ptext22:
  4241                           	opt stack 0
  4242  001898                     _menu_iterator:
  4243                           	opt stack 23
  4244                           
  4245                           ;main.c: 102: switch(selection){
  4246                           
  4247                           ;incstack = 0
  4248  001898  D07C               	goto	l2502
  4249  00189A                     l2460:
  4250                           
  4251                           ;main.c: 104: lcd_gotoxy(1,1);
  4252  00189A  0E01               	movlw	1
  4253  00189C  6E05               	movwf	lcd_gotoxy@y,c
  4254  00189E  0E01               	movlw	1
  4255  0018A0  EC38  F010         	call	_lcd_gotoxy
  4256                           
  4257                           ;main.c: 105: lcd_putrs(">");
  4258  0018A4  0E88               	movlw	low STR_8
  4259  0018A6  6E09               	movwf	lcd_putrs@ptr,c
  4260  0018A8  0E0F               	movlw	high STR_8
  4261  0018AA  6E0A               	movwf	lcd_putrs@ptr+1,c
  4262  0018AC  EC59  F00F         	call	_lcd_putrs	;wreg free
  4263                           
  4264                           ;main.c: 106: selection = 2;
  4265  0018B0  0E00               	movlw	0
  4266  0018B2  6E3C               	movwf	_selection+1,c
  4267  0018B4  0E02               	movlw	2
  4268  0018B6  6E3B               	movwf	_selection,c
  4269                           
  4270                           ;main.c: 107: select = 1;
  4271  0018B8  0E00               	movlw	0
  4272  0018BA  6E38               	movwf	_select+1,c
  4273  0018BC  0E01               	movlw	1
  4274  0018BE  6E37               	movwf	_select,c
  4275                           
  4276                           ;main.c: 108: lcd_gotoxy(9,2);
  4277  0018C0  0E02               	movlw	2
  4278  0018C2  6E05               	movwf	lcd_gotoxy@y,c
  4279  0018C4  0E09               	movlw	9
  4280  0018C6  EC38  F010         	call	_lcd_gotoxy
  4281                           
  4282                           ;main.c: 109: lcd_putrs(" ");
  4283  0018CA  0E82               	movlw	low STR_9
  4284  0018CC  6E09               	movwf	lcd_putrs@ptr,c
  4285  0018CE  0E0F               	movlw	high STR_9
  4286  0018D0  6E0A               	movwf	lcd_putrs@ptr+1,c
  4287  0018D2  EC59  F00F         	call	_lcd_putrs	;wreg free
  4288                           
  4289                           ;main.c: 110: break;
  4290  0018D6  0012               	return	
  4291  0018D8                     l2470:
  4292                           
  4293                           ;main.c: 112: lcd_gotoxy(1,2);
  4294  0018D8  0E02               	movlw	2
  4295  0018DA  6E05               	movwf	lcd_gotoxy@y,c
  4296  0018DC  0E01               	movlw	1
  4297  0018DE  EC38  F010         	call	_lcd_gotoxy
  4298                           
  4299                           ;main.c: 113: lcd_putrs(">");
  4300  0018E2  0E88               	movlw	low STR_8
  4301  0018E4  6E09               	movwf	lcd_putrs@ptr,c
  4302  0018E6  0E0F               	movlw	high STR_8
  4303  0018E8  6E0A               	movwf	lcd_putrs@ptr+1,c
  4304  0018EA  EC59  F00F         	call	_lcd_putrs	;wreg free
  4305                           
  4306                           ;main.c: 114: selection = 3;
  4307  0018EE  0E00               	movlw	0
  4308  0018F0  6E3C               	movwf	_selection+1,c
  4309  0018F2  0E03               	movlw	3
  4310  0018F4  6E3B               	movwf	_selection,c
  4311                           
  4312                           ;main.c: 115: select = 2;
  4313  0018F6  0E00               	movlw	0
  4314  0018F8  6E38               	movwf	_select+1,c
  4315  0018FA  0E02               	movlw	2
  4316  0018FC  6E37               	movwf	_select,c
  4317                           
  4318                           ;main.c: 116: lcd_gotoxy(1,1);
  4319  0018FE  0E01               	movlw	1
  4320  001900  6E05               	movwf	lcd_gotoxy@y,c
  4321  001902  0E01               	movlw	1
  4322  001904  EC38  F010         	call	_lcd_gotoxy
  4323                           
  4324                           ;main.c: 117: lcd_putrs(" ");
  4325  001908  0E82               	movlw	low STR_9
  4326  00190A  6E09               	movwf	lcd_putrs@ptr,c
  4327  00190C  0E0F               	movlw	high STR_9
  4328  00190E  6E0A               	movwf	lcd_putrs@ptr+1,c
  4329  001910  EC59  F00F         	call	_lcd_putrs	;wreg free
  4330                           
  4331                           ;main.c: 118: break;
  4332  001914  0012               	return	
  4333  001916                     l2480:
  4334                           
  4335                           ;main.c: 120: lcd_gotoxy(9,1);
  4336  001916  0E01               	movlw	1
  4337  001918  6E05               	movwf	lcd_gotoxy@y,c
  4338  00191A  0E09               	movlw	9
  4339  00191C  EC38  F010         	call	_lcd_gotoxy
  4340                           
  4341                           ;main.c: 121: lcd_putrs(">");
  4342  001920  0E88               	movlw	low STR_8
  4343  001922  6E09               	movwf	lcd_putrs@ptr,c
  4344  001924  0E0F               	movlw	high STR_8
  4345  001926  6E0A               	movwf	lcd_putrs@ptr+1,c
  4346  001928  EC59  F00F         	call	_lcd_putrs	;wreg free
  4347                           
  4348                           ;main.c: 122: selection = 4;
  4349  00192C  0E00               	movlw	0
  4350  00192E  6E3C               	movwf	_selection+1,c
  4351  001930  0E04               	movlw	4
  4352  001932  6E3B               	movwf	_selection,c
  4353                           
  4354                           ;main.c: 123: select = 3;
  4355  001934  0E00               	movlw	0
  4356  001936  6E38               	movwf	_select+1,c
  4357  001938  0E03               	movlw	3
  4358  00193A  6E37               	movwf	_select,c
  4359                           
  4360                           ;main.c: 124: lcd_gotoxy(1,2);
  4361  00193C  0E02               	movlw	2
  4362  00193E  6E05               	movwf	lcd_gotoxy@y,c
  4363  001940  0E01               	movlw	1
  4364  001942  EC38  F010         	call	_lcd_gotoxy
  4365                           
  4366                           ;main.c: 125: lcd_putrs(" ");
  4367  001946  0E82               	movlw	low STR_9
  4368  001948  6E09               	movwf	lcd_putrs@ptr,c
  4369  00194A  0E0F               	movlw	high STR_9
  4370  00194C  6E0A               	movwf	lcd_putrs@ptr+1,c
  4371  00194E  EC59  F00F         	call	_lcd_putrs	;wreg free
  4372                           
  4373                           ;main.c: 126: break;
  4374  001952  0012               	return	
  4375  001954                     l2490:
  4376                           
  4377                           ;main.c: 128: lcd_gotoxy(9,2);
  4378  001954  0E02               	movlw	2
  4379  001956  6E05               	movwf	lcd_gotoxy@y,c
  4380  001958  0E09               	movlw	9
  4381  00195A  EC38  F010         	call	_lcd_gotoxy
  4382                           
  4383                           ;main.c: 129: lcd_putrs(">");
  4384  00195E  0E88               	movlw	low STR_8
  4385  001960  6E09               	movwf	lcd_putrs@ptr,c
  4386  001962  0E0F               	movlw	high STR_8
  4387  001964  6E0A               	movwf	lcd_putrs@ptr+1,c
  4388  001966  EC59  F00F         	call	_lcd_putrs	;wreg free
  4389                           
  4390                           ;main.c: 130: selection = 1;
  4391  00196A  0E00               	movlw	0
  4392  00196C  6E3C               	movwf	_selection+1,c
  4393  00196E  0E01               	movlw	1
  4394  001970  6E3B               	movwf	_selection,c
  4395                           
  4396                           ;main.c: 131: select = 4;
  4397  001972  0E00               	movlw	0
  4398  001974  6E38               	movwf	_select+1,c
  4399  001976  0E04               	movlw	4
  4400  001978  6E37               	movwf	_select,c
  4401                           
  4402                           ;main.c: 132: lcd_gotoxy(9,1);
  4403  00197A  0E01               	movlw	1
  4404  00197C  6E05               	movwf	lcd_gotoxy@y,c
  4405  00197E  0E09               	movlw	9
  4406  001980  EC38  F010         	call	_lcd_gotoxy
  4407                           
  4408                           ;main.c: 133: lcd_putrs(" ");
  4409  001984  0E82               	movlw	low STR_9
  4410  001986  6E09               	movwf	lcd_putrs@ptr,c
  4411  001988  0E0F               	movlw	high STR_9
  4412  00198A  6E0A               	movwf	lcd_putrs@ptr+1,c
  4413  00198C  EC59  F00F         	call	_lcd_putrs	;wreg free
  4414                           
  4415                           ;main.c: 135: }
  4416                           
  4417                           ;main.c: 134: break;
  4418  001990  0012               	return	
  4419  001992                     l2502:
  4420  001992  C03B  F00B         	movff	_selection,??_menu_iterator
  4421  001996  C03C  F00C         	movff	_selection+1,??_menu_iterator+1
  4422                           
  4423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4424                           ; Switch size 1, requested type "space"
  4425                           ; Number of cases is 1, Range of values is 0 to 0
  4426                           ; switch strategies available:
  4427                           ; Name         Instructions Cycles
  4428                           ; simple_byte            4     3 (average)
  4429                           ;	Chosen strategy is simple_byte
  4430  00199A  500C               	movf	??_menu_iterator+1,w,c
  4431  00199C  0A00               	xorlw	0	; case 0
  4432  00199E  A4D8               	btfss	status,2,c
  4433  0019A0  0012               	return	
  4434                           
  4435                           ; Switch size 1, requested type "space"
  4436                           ; Number of cases is 4, Range of values is 1 to 4
  4437                           ; switch strategies available:
  4438                           ; Name         Instructions Cycles
  4439                           ; simple_byte           13     7 (average)
  4440                           ;	Chosen strategy is simple_byte
  4441  0019A2  500B               	movf	??_menu_iterator,w,c
  4442  0019A4  0A01               	xorlw	1	; case 1
  4443  0019A6  B4D8               	btfsc	status,2,c
  4444  0019A8  D778               	goto	l2460
  4445  0019AA  0A03               	xorlw	3	; case 2
  4446  0019AC  B4D8               	btfsc	status,2,c
  4447  0019AE  D794               	goto	l2470
  4448  0019B0  0A01               	xorlw	1	; case 3
  4449  0019B2  B4D8               	btfsc	status,2,c
  4450  0019B4  D7B0               	goto	l2480
  4451  0019B6  0A07               	xorlw	7	; case 4
  4452  0019B8  A4D8               	btfss	status,2,c
  4453  0019BA  0012               	return	
  4454  0019BC  D7CB               	goto	l2490
  4455  0019BE  0012               	return		;funcret
  4456  0019C0                     __end_of_menu_iterator:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           intcon	equ	0xFF2
  4465                           postinc0	equ	0xFEE
  4466                           wreg	equ	0xFE8
  4467                           postdec1	equ	0xFE5
  4468                           fsr1l	equ	0xFE1
  4469                           indf2	equ	0xFDF
  4470                           postinc2	equ	0xFDE
  4471                           postdec2	equ	0xFDD
  4472                           fsr2h	equ	0xFDA
  4473                           fsr2l	equ	0xFD9
  4474                           status	equ	0xFD8
  4475                           
  4476 ;; *************** function _menu_home *****************
  4477 ;; Defined at:
  4478 ;;		line 87 in file "main.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;		None               void
  4485 ;; Registers used:
  4486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    5
  4499 ;; This function calls:
  4500 ;;		_lcd_gotoxy
  4501 ;;		_lcd_init
  4502 ;;		_lcd_putrs
  4503 ;; This function is called by:
  4504 ;;		_button_A
  4505 ;;		_button_C
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text23
  4510  001DF8                     __ptext23:
  4511                           	opt stack 0
  4512  001DF8                     _menu_home:
  4513                           	opt stack 23
  4514                           
  4515                           ;main.c: 89: lcd_init();
  4516                           
  4517                           ;incstack = 0
  4518  001DF8  EC49  F00E         	call	_lcd_init	;wreg free
  4519                           
  4520                           ;main.c: 90: lcd_gotoxy(2,1);
  4521  001DFC  0E01               	movlw	1
  4522  001DFE  6E05               	movwf	lcd_gotoxy@y,c
  4523  001E00  0E02               	movlw	2
  4524  001E02  EC38  F010         	call	_lcd_gotoxy
  4525                           
  4526                           ;main.c: 91: lcd_putrs("Menu1");
  4527  001E06  0E55               	movlw	low STR_4
  4528  001E08  6E09               	movwf	lcd_putrs@ptr,c
  4529  001E0A  0E0F               	movlw	high STR_4
  4530  001E0C  6E0A               	movwf	lcd_putrs@ptr+1,c
  4531  001E0E  EC59  F00F         	call	_lcd_putrs	;wreg free
  4532                           
  4533                           ;main.c: 92: lcd_gotoxy(2,2);
  4534  001E12  0E02               	movlw	2
  4535  001E14  6E05               	movwf	lcd_gotoxy@y,c
  4536  001E16  0E02               	movlw	2
  4537  001E18  EC38  F010         	call	_lcd_gotoxy
  4538                           
  4539                           ;main.c: 93: lcd_putrs("Menu2");
  4540  001E1C  0E5B               	movlw	low STR_5
  4541  001E1E  6E09               	movwf	lcd_putrs@ptr,c
  4542  001E20  0E0F               	movlw	high STR_5
  4543  001E22  6E0A               	movwf	lcd_putrs@ptr+1,c
  4544  001E24  EC59  F00F         	call	_lcd_putrs	;wreg free
  4545                           
  4546                           ;main.c: 94: lcd_gotoxy(10,1);
  4547  001E28  0E01               	movlw	1
  4548  001E2A  6E05               	movwf	lcd_gotoxy@y,c
  4549  001E2C  0E0A               	movlw	10
  4550  001E2E  EC38  F010         	call	_lcd_gotoxy
  4551                           
  4552                           ;main.c: 95: lcd_putrs("Menu3");
  4553  001E32  0E61               	movlw	low STR_6
  4554  001E34  6E09               	movwf	lcd_putrs@ptr,c
  4555  001E36  0E0F               	movlw	high STR_6
  4556  001E38  6E0A               	movwf	lcd_putrs@ptr+1,c
  4557  001E3A  EC59  F00F         	call	_lcd_putrs	;wreg free
  4558                           
  4559                           ;main.c: 96: lcd_gotoxy(10,2);
  4560  001E3E  0E02               	movlw	2
  4561  001E40  6E05               	movwf	lcd_gotoxy@y,c
  4562  001E42  0E0A               	movlw	10
  4563  001E44  EC38  F010         	call	_lcd_gotoxy
  4564                           
  4565                           ;main.c: 97: lcd_putrs("Menu4");
  4566  001E48  0E67               	movlw	low STR_7
  4567  001E4A  6E09               	movwf	lcd_putrs@ptr,c
  4568  001E4C  0E0F               	movlw	high STR_7
  4569  001E4E  6E0A               	movwf	lcd_putrs@ptr+1,c
  4570  001E50  EC59  F00F         	call	_lcd_putrs	;wreg free
  4571  001E54  0012               	return		;funcret
  4572  001E56                     __end_of_menu_home:
  4573                           	opt stack 0
  4574                           tblptru	equ	0xFF8
  4575                           tblptrh	equ	0xFF7
  4576                           tblptrl	equ	0xFF6
  4577                           tablat	equ	0xFF5
  4578                           prodh	equ	0xFF4
  4579                           prodl	equ	0xFF3
  4580                           intcon	equ	0xFF2
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           postdec1	equ	0xFE5
  4584                           fsr1l	equ	0xFE1
  4585                           indf2	equ	0xFDF
  4586                           postinc2	equ	0xFDE
  4587                           postdec2	equ	0xFDD
  4588                           fsr2h	equ	0xFDA
  4589                           fsr2l	equ	0xFD9
  4590                           status	equ	0xFD8
  4591                           
  4592 ;; *************** function _lcd_putrs *****************
  4593 ;; Defined at:
  4594 ;;		line 221 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  4597 ;;		 -> STR_33(2), STR_32(2), STR_31(8), STR_30(8), 
  4598 ;;		 -> STR_29(7), STR_28(8), STR_27(8), STR_26(7), 
  4599 ;;		 -> STR_25(8), STR_24(8), STR_23(7), STR_22(5), 
  4600 ;;		 -> STR_21(5), STR_20(6), STR_19(2), STR_18(2), 
  4601 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  4602 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  4603 ;;		 -> STR_9(2), STR_8(2), STR_7(6), STR_6(6), 
  4604 ;;		 -> STR_5(6), STR_4(6), buffer1(20), STR_1(8), 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;		None               void
  4609 ;; Registers used:
  4610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;Total ram usage:        2 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    4
  4623 ;; This function calls:
  4624 ;;		_lcd_putc
  4625 ;; This function is called by:
  4626 ;;		_home
  4627 ;;		_menu_home
  4628 ;;		_menu_iterator
  4629 ;;		_menu_submenu_iterator
  4630 ;;		_button_B
  4631 ;;		_button_asterisk
  4632 ;;		_button_hash
  4633 ;;		_keyboard_control
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text24
  4638  001EB2                     __ptext24:
  4639                           	opt stack 0
  4640  001EB2                     _lcd_putrs:
  4641                           	opt stack 25
  4642                           
  4643                           ;unmc_lcd_216.c: 223: while(*ptr){
  4644                           
  4645                           ;incstack = 0
  4646  001EB2  D015               	goto	l2198
  4647  001EB4                     l2194:
  4648                           
  4649                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  4650  001EB4  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4651  001EB8  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4652  001EBC  6AF8               	clrf	tblptru,c
  4653  001EBE  0E0E               	movlw	(high __ramtop+-1)
  4654  001EC0  64F7               	cpfsgt	tblptrh,c
  4655  001EC2  D003               	bra	u1287
  4656  001EC4  0008               	tblrd		*
  4657  001EC6  50F5               	movf	tablat,w,c
  4658  001EC8  D005               	bra	u1280
  4659  001ECA                     u1287:
  4660  001ECA  CFF6 FFE9          	movff	tblptrl,fsr0l
  4661  001ECE  CFF7 FFEA          	movff	tblptrh,fsr0h
  4662  001ED2  50EF               	movf	indf0,w,c
  4663  001ED4                     u1280:
  4664  001ED4  ECA9  F00F         	call	_lcd_putc
  4665  001ED8  4A09               	infsnz	lcd_putrs@ptr,f,c
  4666  001EDA  2A0A               	incf	lcd_putrs@ptr+1,f,c
  4667  001EDC  D000               	goto	l2198
  4668  001EDE                     l2198:
  4669  001EDE  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4670  001EE2  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4671  001EE6  6AF8               	clrf	tblptru,c
  4672  001EE8  0E0E               	movlw	(high __ramtop+-1)
  4673  001EEA  64F7               	cpfsgt	tblptrh,c
  4674  001EEC  D003               	bra	u1297
  4675  001EEE  0008               	tblrd		*
  4676  001EF0  50F5               	movf	tablat,w,c
  4677  001EF2  D005               	bra	u1290
  4678  001EF4                     u1297:
  4679  001EF4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4680  001EF8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4681  001EFC  50EF               	movf	indf0,w,c
  4682  001EFE                     u1290:
  4683  001EFE  0900               	iorlw	0
  4684  001F00  A4D8               	btfss	status,2,c
  4685  001F02  D7D8               	goto	l2194
  4686  001F04  0012               	return		;funcret
  4687  001F06                     __end_of_lcd_putrs:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           prodh	equ	0xFF4
  4694                           prodl	equ	0xFF3
  4695                           intcon	equ	0xFF2
  4696                           indf0	equ	0xFEF
  4697                           postinc0	equ	0xFEE
  4698                           fsr0h	equ	0xFEA
  4699                           fsr0l	equ	0xFE9
  4700                           wreg	equ	0xFE8
  4701                           postdec1	equ	0xFE5
  4702                           fsr1l	equ	0xFE1
  4703                           indf2	equ	0xFDF
  4704                           postinc2	equ	0xFDE
  4705                           postdec2	equ	0xFDD
  4706                           fsr2h	equ	0xFDA
  4707                           fsr2l	equ	0xFD9
  4708                           status	equ	0xFD8
  4709                           
  4710 ;; *************** function _lcd_putc *****************
  4711 ;; Defined at:
  4712 ;;		line 172 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  c               1    wreg     unsigned char 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  c               1    7[COMRAM] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;		None               void
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;Total ram usage:        1 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    3
  4733 ;; This function calls:
  4734 ;;		_lcd_gotoxy
  4735 ;;		_lcd_send_byte
  4736 ;; This function is called by:
  4737 ;;		_lcd_putrs
  4738 ;;		_lcd_puts
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text25
  4743  001F52                     __ptext25:
  4744                           	opt stack 0
  4745  001F52                     _lcd_putc:
  4746                           	opt stack 25
  4747                           
  4748                           ;incstack = 0
  4749                           ;lcd_putc@c stored from wreg
  4750  001F52  6E08               	movwf	lcd_putc@c,c
  4751                           
  4752                           ;unmc_lcd_216.c: 173: switch(c){
  4753  001F54  D018               	goto	l2100
  4754  001F56                     l2090:
  4755                           
  4756                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  4757  001F56  0E01               	movlw	1
  4758  001F58  6E03               	movwf	lcd_send_byte@n,c
  4759  001F5A  0E00               	movlw	0
  4760  001F5C  EC0B  F010         	call	_lcd_send_byte
  4761                           
  4762                           ;unmc_lcd_216.c: 176: break;
  4763  001F60  0012               	return	
  4764  001F62                     l2092:
  4765                           
  4766                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  4767  001F62  0E02               	movlw	2
  4768  001F64  6E05               	movwf	lcd_gotoxy@y,c
  4769  001F66  0E01               	movlw	1
  4770  001F68  EC38  F010         	call	_lcd_gotoxy
  4771                           
  4772                           ;unmc_lcd_216.c: 179: break;
  4773  001F6C  0012               	return	
  4774  001F6E                     l2094:
  4775                           
  4776                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  4777  001F6E  0E10               	movlw	16
  4778  001F70  6E03               	movwf	lcd_send_byte@n,c
  4779  001F72  0E00               	movlw	0
  4780  001F74  EC0B  F010         	call	_lcd_send_byte
  4781                           
  4782                           ;unmc_lcd_216.c: 182: break;
  4783  001F78  0012               	return	
  4784  001F7A                     l2096:
  4785                           
  4786                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  4787  001F7A  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  4788  001F7E  0E01               	movlw	1
  4789  001F80  EC0B  F010         	call	_lcd_send_byte
  4790                           
  4791                           ;unmc_lcd_216.c: 186: }
  4792                           
  4793                           ;unmc_lcd_216.c: 185: break;
  4794  001F84  0012               	return	
  4795  001F86                     l2100:
  4796  001F86  5008               	movf	lcd_putc@c,w,c
  4797                           
  4798                           ; Switch size 1, requested type "space"
  4799                           ; Number of cases is 3, Range of values is 8 to 12
  4800                           ; switch strategies available:
  4801                           ; Name         Instructions Cycles
  4802                           ; simple_byte           10     6 (average)
  4803                           ;	Chosen strategy is simple_byte
  4804  001F88  0A08               	xorlw	8	; case 8
  4805  001F8A  B4D8               	btfsc	status,2,c
  4806  001F8C  D7F0               	goto	l2094
  4807  001F8E  0A02               	xorlw	2	; case 10
  4808  001F90  B4D8               	btfsc	status,2,c
  4809  001F92  D7E7               	goto	l2092
  4810  001F94  0A06               	xorlw	6	; case 12
  4811  001F96  B4D8               	btfsc	status,2,c
  4812  001F98  D7DE               	goto	l2090
  4813  001F9A  D7EF               	goto	l2096
  4814  001F9C  0012               	return		;funcret
  4815  001F9E                     __end_of_lcd_putc:
  4816                           	opt stack 0
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           intcon	equ	0xFF2
  4824                           indf0	equ	0xFEF
  4825                           postinc0	equ	0xFEE
  4826                           fsr0h	equ	0xFEA
  4827                           fsr0l	equ	0xFE9
  4828                           wreg	equ	0xFE8
  4829                           postdec1	equ	0xFE5
  4830                           fsr1l	equ	0xFE1
  4831                           indf2	equ	0xFDF
  4832                           postinc2	equ	0xFDE
  4833                           postdec2	equ	0xFDD
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _lcd_gotoxy *****************
  4839 ;; Defined at:
  4840 ;;		line 158 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  x               1    wreg     unsigned char 
  4843 ;;  y               1    4[COMRAM] unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  x               1    5[COMRAM] unsigned char 
  4846 ;;  address         1    6[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;		None               void
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4856 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;Total ram usage:        3 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    2
  4863 ;; This function calls:
  4864 ;;		_lcd_send_byte
  4865 ;; This function is called by:
  4866 ;;		_home
  4867 ;;		_menu_home
  4868 ;;		_menu_iterator
  4869 ;;		_menu_submenu_iterator
  4870 ;;		_button_B
  4871 ;;		_lcd_putc
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text26
  4876  002070                     __ptext26:
  4877                           	opt stack 0
  4878  002070                     _lcd_gotoxy:
  4879                           	opt stack 25
  4880                           
  4881                           ;incstack = 0
  4882                           ;lcd_gotoxy@x stored from wreg
  4883  002070  6E06               	movwf	lcd_gotoxy@x,c
  4884                           
  4885                           ;unmc_lcd_216.c: 159: int8 address;
  4886                           ;unmc_lcd_216.c: 161: if(y != 1)
  4887  002072  0405               	decf	lcd_gotoxy@y,w,c
  4888  002074  B4D8               	btfsc	status,2,c
  4889  002076  D002               	goto	l2078
  4890                           
  4891                           ;unmc_lcd_216.c: 162: address = 0x40;
  4892  002078  0E40               	movlw	64
  4893  00207A  D001               	goto	L1
  4894  00207C                     l2078:
  4895                           
  4896                           ;unmc_lcd_216.c: 163: else
  4897                           ;unmc_lcd_216.c: 164: address=0;
  4898  00207C  0E00               	movlw	0
  4899  00207E                     L1:
  4900  00207E  6E07               	movwf	lcd_gotoxy@address,c
  4901  002080  D000               	goto	l2080
  4902  002082                     l2080:
  4903                           
  4904                           ;unmc_lcd_216.c: 166: address += x-1;
  4905  002082  0406               	decf	lcd_gotoxy@x,w,c
  4906  002084  2607               	addwf	lcd_gotoxy@address,f,c
  4907                           
  4908                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  4909  002086  5007               	movf	lcd_gotoxy@address,w,c
  4910  002088  0980               	iorlw	128
  4911  00208A  6E03               	movwf	lcd_send_byte@n,c
  4912  00208C  0E00               	movlw	0
  4913  00208E  EC0B  F010         	call	_lcd_send_byte
  4914  002092  0012               	return		;funcret
  4915  002094                     __end_of_lcd_gotoxy:
  4916                           	opt stack 0
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           intcon	equ	0xFF2
  4924                           indf0	equ	0xFEF
  4925                           postinc0	equ	0xFEE
  4926                           fsr0h	equ	0xFEA
  4927                           fsr0l	equ	0xFE9
  4928                           wreg	equ	0xFE8
  4929                           postdec1	equ	0xFE5
  4930                           fsr1l	equ	0xFE1
  4931                           indf2	equ	0xFDF
  4932                           postinc2	equ	0xFDE
  4933                           postdec2	equ	0xFDD
  4934                           fsr2h	equ	0xFDA
  4935                           fsr2l	equ	0xFD9
  4936                           status	equ	0xFD8
  4937                           
  4938 ;; *************** function _lcd_init *****************
  4939 ;; Defined at:
  4940 ;;		line 119 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  i               1    4[COMRAM] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;		None               void
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4958 ;;Total ram usage:        1 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    2
  4961 ;; This function calls:
  4962 ;;		_Delay1KTCYx
  4963 ;;		_lcd_send_byte
  4964 ;;		_lcd_send_nibble
  4965 ;; This function is called by:
  4966 ;;		_setup
  4967 ;;		_menu_home
  4968 ;;		_button_B
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text27
  4973  001C92                     __ptext27:
  4974                           	opt stack 0
  4975  001C92                     _lcd_init:
  4976                           	opt stack 27
  4977                           
  4978                           ;unmc_lcd_216.c: 120: int8 i;
  4979                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  4980                           
  4981                           ;incstack = 0
  4982  001C92  9693               	bcf	3987,3,c	;volatile
  4983                           
  4984                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  4985  001C94  9493               	bcf	3987,2,c	;volatile
  4986                           
  4987                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  4988  001C96  968A               	bcf	3978,3,c	;volatile
  4989                           
  4990                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  4991  001C98  948A               	bcf	3978,2,c	;volatile
  4992                           
  4993                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  4994  001C9A  9893               	bcf	3987,4,c	;volatile
  4995                           
  4996                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  4997  001C9C  9A93               	bcf	3987,5,c	;volatile
  4998                           
  4999                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  5000  001C9E  9C93               	bcf	3987,6,c	;volatile
  5001                           
  5002                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  5003  001CA0  9E93               	bcf	3987,7,c	;volatile
  5004                           
  5005                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  5006  001CA2  0E0A               	movlw	10
  5007  001CA4  EC82  F010         	call	_Delay1KTCYx
  5008                           
  5009                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  5010  001CA8  0E0A               	movlw	10
  5011  001CAA  EC82  F010         	call	_Delay1KTCYx
  5012                           
  5013                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  5014  001CAE  0E0A               	movlw	10
  5015  001CB0  EC82  F010         	call	_Delay1KTCYx
  5016                           
  5017                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  5018  001CB4  0E00               	movlw	0
  5019  001CB6  6E05               	movwf	lcd_init@i,c
  5020  001CB8                     l2164:
  5021  001CB8  0E02               	movlw	2
  5022  001CBA  6405               	cpfsgt	lcd_init@i,c
  5023  001CBC  D001               	goto	l2168
  5024  001CBE  D008               	goto	l2174
  5025  001CC0                     l2168:
  5026                           
  5027                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  5028  001CC0  0E03               	movlw	3
  5029  001CC2  EC89  F00E         	call	_lcd_send_nibble
  5030                           
  5031                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  5032  001CC6  0E0A               	movlw	10
  5033  001CC8  EC82  F010         	call	_Delay1KTCYx
  5034  001CCC  2A05               	incf	lcd_init@i,f,c
  5035  001CCE  D7F4               	goto	l2164
  5036  001CD0                     l2174:
  5037                           
  5038                           ;unmc_lcd_216.c: 146: }
  5039                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  5040  001CD0  0E02               	movlw	2
  5041  001CD2  EC89  F00E         	call	_lcd_send_nibble
  5042                           
  5043                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  5044  001CD6  0E00               	movlw	0
  5045  001CD8  6E05               	movwf	lcd_init@i,c
  5046  001CDA  0E03               	movlw	3
  5047  001CDC  6405               	cpfsgt	lcd_init@i,c
  5048  001CDE  D002               	goto	l2182
  5049  001CE0  0012               	return	
  5050  001CE2  0012               	return	
  5051  001CE4                     l2182:
  5052                           
  5053                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  5054  001CE4  5005               	movf	lcd_init@i,w,c
  5055  001CE6  0D01               	mullw	1
  5056  001CE8  0E0B               	movlw	low _LCD_INIT_STRING
  5057  001CEA  24F3               	addwf	prodl,w,c
  5058  001CEC  6EF6               	movwf	tblptrl,c
  5059  001CEE  0E0F               	movlw	high _LCD_INIT_STRING
  5060  001CF0  20F4               	addwfc	prodh,w,c
  5061  001CF2  6EF7               	movwf	tblptrh,c
  5062  001CF4                     	if	0	;There are less than 3 active tblptr bytes
  5063  001CF4                     	endif
  5064  001CF4  0008               	tblrd		*
  5065  001CF6  CFF5 F003          	movff	tablat,lcd_send_byte@n
  5066  001CFA  0E00               	movlw	0
  5067  001CFC  EC0B  F010         	call	_lcd_send_byte
  5068                           
  5069                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  5070  001D00  0E0A               	movlw	10
  5071  001D02  EC82  F010         	call	_Delay1KTCYx
  5072  001D06  2A05               	incf	lcd_init@i,f,c
  5073  001D08  0E03               	movlw	3
  5074  001D0A  6405               	cpfsgt	lcd_init@i,c
  5075  001D0C  D7EB               	goto	l2182
  5076  001D0E  0012               	return	
  5077  001D10  0012               	return		;funcret
  5078  001D12                     __end_of_lcd_init:
  5079                           	opt stack 0
  5080                           tblptru	equ	0xFF8
  5081                           tblptrh	equ	0xFF7
  5082                           tblptrl	equ	0xFF6
  5083                           tablat	equ	0xFF5
  5084                           prodh	equ	0xFF4
  5085                           prodl	equ	0xFF3
  5086                           intcon	equ	0xFF2
  5087                           indf0	equ	0xFEF
  5088                           postinc0	equ	0xFEE
  5089                           fsr0h	equ	0xFEA
  5090                           fsr0l	equ	0xFE9
  5091                           wreg	equ	0xFE8
  5092                           postdec1	equ	0xFE5
  5093                           fsr1l	equ	0xFE1
  5094                           indf2	equ	0xFDF
  5095                           postinc2	equ	0xFDE
  5096                           postdec2	equ	0xFDD
  5097                           fsr2h	equ	0xFDA
  5098                           fsr2l	equ	0xFD9
  5099                           status	equ	0xFD8
  5100                           
  5101 ;; *************** function _lcd_send_byte *****************
  5102 ;; Defined at:
  5103 ;;		line 86 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  address         1    wreg     unsigned char 
  5106 ;;  n               1    2[COMRAM] unsigned char 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  address         1    3[COMRAM] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;		None               void
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5118 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5122 ;;Total ram usage:        2 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    1
  5125 ;; This function calls:
  5126 ;;		_Delay100TCYx
  5127 ;;		_lcd_send_nibble
  5128 ;; This function is called by:
  5129 ;;		_lcd_init
  5130 ;;		_lcd_gotoxy
  5131 ;;		_lcd_putc
  5132 ;;		_lcd_comand
  5133 ;;		_lcd_setcursor_vb
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text28
  5138  002016                     __ptext28:
  5139                           	opt stack 0
  5140  002016                     _lcd_send_byte:
  5141                           	opt stack 27
  5142                           
  5143                           ;incstack = 0
  5144                           ;lcd_send_byte@address stored from wreg
  5145  002016  6E04               	movwf	lcd_send_byte@address,c
  5146                           
  5147                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  5148  002018  968A               	bcf	3978,3,c	;volatile
  5149                           
  5150                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  5151  00201A  0E02               	movlw	2
  5152  00201C  EC79  F010         	call	_Delay100TCYx
  5153                           
  5154                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  5155  002020  9893               	bcf	3987,4,c	;volatile
  5156                           
  5157                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  5158  002022  9A93               	bcf	3987,5,c	;volatile
  5159                           
  5160                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  5161  002024  9C93               	bcf	3987,6,c	;volatile
  5162                           
  5163                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  5164  002026  9E93               	bcf	3987,7,c	;volatile
  5165                           
  5166                           ;unmc_lcd_216.c: 101: if(address)
  5167  002028  5004               	movf	lcd_send_byte@address,w,c
  5168  00202A  B4D8               	btfsc	status,2,c
  5169  00202C  D002               	goto	l294
  5170                           
  5171                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  5172  00202E  868A               	bsf	3978,3,c	;volatile
  5173  002030  D001               	goto	l295
  5174  002032                     l294:
  5175                           
  5176                           ;unmc_lcd_216.c: 103: else
  5177                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  5178  002032  968A               	bcf	3978,3,c	;volatile
  5179  002034                     l295:
  5180                           
  5181                           ;unmc_lcd_216.c: 106: __nop();
  5182  002034  F000               	nop	
  5183                           
  5184                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  5185  002036  3803               	swapf	lcd_send_byte@n,w,c
  5186  002038  0B0F               	andlw	15
  5187  00203A  EC89  F00E         	call	_lcd_send_nibble
  5188                           
  5189                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  5190  00203E  5003               	movf	lcd_send_byte@n,w,c
  5191  002040  0B0F               	andlw	15
  5192  002042  EC89  F00E         	call	_lcd_send_nibble
  5193  002046  0012               	return		;funcret
  5194  002048                     __end_of_lcd_send_byte:
  5195                           	opt stack 0
  5196                           tblptru	equ	0xFF8
  5197                           tblptrh	equ	0xFF7
  5198                           tblptrl	equ	0xFF6
  5199                           tablat	equ	0xFF5
  5200                           prodh	equ	0xFF4
  5201                           prodl	equ	0xFF3
  5202                           intcon	equ	0xFF2
  5203                           indf0	equ	0xFEF
  5204                           postinc0	equ	0xFEE
  5205                           fsr0h	equ	0xFEA
  5206                           fsr0l	equ	0xFE9
  5207                           wreg	equ	0xFE8
  5208                           postdec1	equ	0xFE5
  5209                           fsr1l	equ	0xFE1
  5210                           indf2	equ	0xFDF
  5211                           postinc2	equ	0xFDE
  5212                           postdec2	equ	0xFDD
  5213                           fsr2h	equ	0xFDA
  5214                           fsr2l	equ	0xFD9
  5215                           status	equ	0xFD8
  5216                           
  5217 ;; *************** function _lcd_send_nibble *****************
  5218 ;; Defined at:
  5219 ;;		line 25 in file "Unimic/unmc_01/sources/unmc_lcd_216.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  nibble          1    wreg     unsigned char 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  nibble          1    1[COMRAM] unsigned char 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;		None               void
  5226 ;; Registers used:
  5227 ;;		wreg, status,2, status,0
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5237 ;;Total ram usage:        2 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_lcd_send_byte
  5243 ;;		_lcd_init
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text29
  5248  001D12                     __ptext29:
  5249                           	opt stack 0
  5250  001D12                     _lcd_send_nibble:
  5251                           	opt stack 28
  5252                           
  5253                           ;incstack = 0
  5254                           ;lcd_send_nibble@nibble stored from wreg
  5255  001D12  6E02               	movwf	lcd_send_nibble@nibble,c
  5256                           
  5257                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  5258  001D14  A002               	btfss	lcd_send_nibble@nibble,0,c
  5259  001D16  D003               	goto	u1060
  5260  001D18  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5261  001D1A  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5262  001D1C  D001               	goto	u1078
  5263  001D1E                     u1060:
  5264  001D1E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5265  001D20                     u1078:
  5266  001D20  3A01               	swapf	??_lcd_send_nibble,f,c
  5267  001D22  508A               	movf	3978,w,c	;volatile
  5268  001D24  1801               	xorwf	??_lcd_send_nibble,w,c
  5269  001D26  0BEF               	andlw	-17
  5270  001D28  1801               	xorwf	??_lcd_send_nibble,w,c
  5271  001D2A  6E8A               	movwf	3978,c	;volatile
  5272                           
  5273                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  5274  001D2C  A202               	btfss	lcd_send_nibble@nibble,1,c
  5275  001D2E  D003               	goto	u1080
  5276  001D30  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5277  001D32  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5278  001D34  D001               	goto	u1098
  5279  001D36                     u1080:
  5280  001D36  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5281  001D38                     u1098:
  5282  001D38  3A01               	swapf	??_lcd_send_nibble,f,c
  5283  001D3A  4601               	rlncf	??_lcd_send_nibble,f,c
  5284  001D3C  508A               	movf	3978,w,c	;volatile
  5285  001D3E  1801               	xorwf	??_lcd_send_nibble,w,c
  5286  001D40  0BDF               	andlw	-33
  5287  001D42  1801               	xorwf	??_lcd_send_nibble,w,c
  5288  001D44  6E8A               	movwf	3978,c	;volatile
  5289                           
  5290                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  5291  001D46  A402               	btfss	lcd_send_nibble@nibble,2,c
  5292  001D48  D003               	goto	u1100
  5293  001D4A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5294  001D4C  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5295  001D4E  D001               	goto	u1118
  5296  001D50                     u1100:
  5297  001D50  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5298  001D52                     u1118:
  5299  001D52  3A01               	swapf	??_lcd_send_nibble,f,c
  5300  001D54  4601               	rlncf	??_lcd_send_nibble,f,c
  5301  001D56  4601               	rlncf	??_lcd_send_nibble,f,c
  5302  001D58  508A               	movf	3978,w,c	;volatile
  5303  001D5A  1801               	xorwf	??_lcd_send_nibble,w,c
  5304  001D5C  0BBF               	andlw	-65
  5305  001D5E  1801               	xorwf	??_lcd_send_nibble,w,c
  5306  001D60  6E8A               	movwf	3978,c	;volatile
  5307                           
  5308                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  5309  001D62  A602               	btfss	lcd_send_nibble@nibble,3,c
  5310  001D64  D003               	goto	u1120
  5311  001D66  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5312  001D68  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5313  001D6A  D001               	goto	u1138
  5314  001D6C                     u1120:
  5315  001D6C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5316  001D6E                     u1138:
  5317  001D6E  3201               	rrcf	??_lcd_send_nibble,f,c
  5318  001D70  3201               	rrcf	??_lcd_send_nibble,f,c
  5319  001D72  508A               	movf	3978,w,c	;volatile
  5320  001D74  1801               	xorwf	??_lcd_send_nibble,w,c
  5321  001D76  0B7F               	andlw	-129
  5322  001D78  1801               	xorwf	??_lcd_send_nibble,w,c
  5323  001D7A  6E8A               	movwf	3978,c	;volatile
  5324                           
  5325                           ;unmc_lcd_216.c: 32: __nop();
  5326  001D7C  F000               	nop	
  5327                           
  5328                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  5329  001D7E  848A               	bsf	3978,2,c	;volatile
  5330                           
  5331                           ;unmc_lcd_216.c: 34: __nop();__nop();
  5332  001D80  F000               	nop	
  5333  001D82  F000               	nop	
  5334                           
  5335                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  5336  001D84  948A               	bcf	3978,2,c	;volatile
  5337  001D86  0012               	return		;funcret
  5338  001D88                     __end_of_lcd_send_nibble:
  5339                           	opt stack 0
  5340                           tblptru	equ	0xFF8
  5341                           tblptrh	equ	0xFF7
  5342                           tblptrl	equ	0xFF6
  5343                           tablat	equ	0xFF5
  5344                           prodh	equ	0xFF4
  5345                           prodl	equ	0xFF3
  5346                           intcon	equ	0xFF2
  5347                           indf0	equ	0xFEF
  5348                           postinc0	equ	0xFEE
  5349                           fsr0h	equ	0xFEA
  5350                           fsr0l	equ	0xFE9
  5351                           wreg	equ	0xFE8
  5352                           postdec1	equ	0xFE5
  5353                           fsr1l	equ	0xFE1
  5354                           indf2	equ	0xFDF
  5355                           postinc2	equ	0xFDE
  5356                           postdec2	equ	0xFDD
  5357                           fsr2h	equ	0xFDA
  5358                           fsr2l	equ	0xFD9
  5359                           status	equ	0xFD8
  5360                           
  5361 ;; *************** function _Delay100TCYx *****************
  5362 ;; Defined at:
  5363 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  unit            1    wreg     unsigned char 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  unit            1    0[COMRAM] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;		None               void
  5370 ;; Registers used:
  5371 ;;		wreg
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;Total ram usage:        1 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_lcd_send_byte
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text30
  5391  0020F2                     __ptext30:
  5392                           	opt stack 0
  5393  0020F2                     _Delay100TCYx:
  5394                           	opt stack 27
  5395                           
  5396                           ;incstack = 0
  5397                           ;Delay100TCYx@unit stored from wreg
  5398  0020F2  6E01               	movwf	Delay100TCYx@unit,c
  5399  0020F4  0E21               	movlw	33
  5400  0020F6                     u2127:
  5401  0020F6  2EE8               	decfsz	wreg,f,c
  5402  0020F8  D7FE               	goto	u2127
  5403  0020FA  F000               	nop	
  5404  0020FC  2E01               	decfsz	Delay100TCYx@unit,f,c
  5405  0020FE  D7FA               	goto	l2052
  5406  002100  0012               	return	
  5407  002102  0012               	return		;funcret
  5408  002104                     __end_of_Delay100TCYx:
  5409                           	opt stack 0
  5410                           tblptru	equ	0xFF8
  5411                           tblptrh	equ	0xFF7
  5412                           tblptrl	equ	0xFF6
  5413                           tablat	equ	0xFF5
  5414                           prodh	equ	0xFF4
  5415                           prodl	equ	0xFF3
  5416                           intcon	equ	0xFF2
  5417                           indf0	equ	0xFEF
  5418                           postinc0	equ	0xFEE
  5419                           fsr0h	equ	0xFEA
  5420                           fsr0l	equ	0xFE9
  5421                           wreg	equ	0xFE8
  5422                           postdec1	equ	0xFE5
  5423                           fsr1l	equ	0xFE1
  5424                           indf2	equ	0xFDF
  5425                           postinc2	equ	0xFDE
  5426                           postdec2	equ	0xFDD
  5427                           fsr2h	equ	0xFDA
  5428                           fsr2l	equ	0xFD9
  5429                           status	equ	0xFD8
  5430                           
  5431 ;; *************** function _Delay1KTCYx *****************
  5432 ;; Defined at:
  5433 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  unit            1    wreg     unsigned char 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  unit            1    0[COMRAM] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;		None               void
  5440 ;; Registers used:
  5441 ;;		wreg
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;Total ram usage:        1 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_lcd_init
  5457 ;;		_DelayPORXLCD
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text31
  5462  002104                     __ptext31:
  5463                           	opt stack 0
  5464  002104                     _Delay1KTCYx:
  5465                           	opt stack 28
  5466                           
  5467                           ;incstack = 0
  5468                           ;Delay1KTCYx@unit stored from wreg
  5469  002104  6E01               	movwf	Delay1KTCYx@unit,c
  5470  002106  0EFA               	movlw	250
  5471  002108                     u2137:
  5472  002108  F000               	nop	
  5473  00210A  2EE8               	decfsz	wreg,f,c
  5474  00210C  D7FD               	goto	u2137
  5475  00210E  2E01               	decfsz	Delay1KTCYx@unit,f,c
  5476  002110  D7FA               	goto	l2084
  5477  002112  0012               	return	
  5478  002114  0012               	return		;funcret
  5479  002116                     __end_of_Delay1KTCYx:
  5480                           	opt stack 0
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           prodh	equ	0xFF4
  5486                           prodl	equ	0xFF3
  5487                           intcon	equ	0xFF2
  5488                           indf0	equ	0xFEF
  5489                           postinc0	equ	0xFEE
  5490                           fsr0h	equ	0xFEA
  5491                           fsr0l	equ	0xFE9
  5492                           wreg	equ	0xFE8
  5493                           postdec1	equ	0xFE5
  5494                           fsr1l	equ	0xFE1
  5495                           indf2	equ	0xFDF
  5496                           postinc2	equ	0xFDE
  5497                           postdec2	equ	0xFDD
  5498                           fsr2h	equ	0xFDA
  5499                           fsr2l	equ	0xFD9
  5500                           status	equ	0xFD8
  5501                           tblptru	equ	0xFF8
  5502                           tblptrh	equ	0xFF7
  5503                           tblptrl	equ	0xFF6
  5504                           tablat	equ	0xFF5
  5505                           prodh	equ	0xFF4
  5506                           prodl	equ	0xFF3
  5507                           intcon	equ	0xFF2
  5508                           indf0	equ	0xFEF
  5509                           postinc0	equ	0xFEE
  5510                           fsr0h	equ	0xFEA
  5511                           fsr0l	equ	0xFE9
  5512                           wreg	equ	0xFE8
  5513                           postdec1	equ	0xFE5
  5514                           fsr1l	equ	0xFE1
  5515                           indf2	equ	0xFDF
  5516                           postinc2	equ	0xFDE
  5517                           postdec2	equ	0xFDD
  5518                           fsr2h	equ	0xFDA
  5519                           fsr2l	equ	0xFD9
  5520                           status	equ	0xFD8
  5521                           
  5522                           	psect	rparam
  5523  0000                     tblptru	equ	0xFF8
  5524                           tblptrh	equ	0xFF7
  5525                           tblptrl	equ	0xFF6
  5526                           tablat	equ	0xFF5
  5527                           prodh	equ	0xFF4
  5528                           prodl	equ	0xFF3
  5529                           intcon	equ	0xFF2
  5530                           indf0	equ	0xFEF
  5531                           postinc0	equ	0xFEE
  5532                           fsr0h	equ	0xFEA
  5533                           fsr0l	equ	0xFE9
  5534                           wreg	equ	0xFE8
  5535                           postdec1	equ	0xFE5
  5536                           fsr1l	equ	0xFE1
  5537                           indf2	equ	0xFDF
  5538                           postinc2	equ	0xFDE
  5539                           postdec2	equ	0xFDD
  5540                           fsr2h	equ	0xFDA
  5541                           fsr2l	equ	0xFD9
  5542                           status	equ	0xFD8


Data Sizes:
    Strings     123
    Constant    14
    Data        10
    BSS         83
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      95
    BANK0           160      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[5]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), STR_36(CODE[5]), 
		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_3(CODE[10]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), STR_30(CODE[8]), 
		 -> STR_29(CODE[7]), STR_28(CODE[8]), STR_27(CODE[8]), STR_26(CODE[7]), 
		 -> STR_25(CODE[8]), STR_24(CODE[8]), STR_23(CODE[7]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), buffer1(BANK0[20]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_keyboard_control
    _Write_RTC->_RtccWriteDate
    _keyboard_control->_sprintf
    _button_hash->_lcd_putrs
    _button_asterisk->_lcd_putrs
    _home->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_comand->_lcd_send_byte
    _button_B->_lcd_putrs
    _button_A->_menu_iterator
    _button_A->_menu_submenu_iterator
    _menu_submenu_iterator->_lcd_putrs
    _menu_iterator->_lcd_putrs
    _menu_home->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   98442
                               _home
                   _keyboard_control
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3771
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_control                                     1     1      0   81882
                                             35 COMRAM     1     1      0
                           _button_A
                           _button_B
                           _button_C
                           _button_D
                    _button_asterisk
                        _button_hash
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _button_hash                                          0     0      0    6206
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _button_asterisk                                      0     0      0    6206
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _button_D                                             0     0      0   12789
                               _home
 ---------------------------------------------------------------------------------
 (3) _home                                                 0     0      0   12789
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    22     10    3196
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _button_C                                             0     0      0    9795
                          _menu_home
 ---------------------------------------------------------------------------------
 (2) _button_B                                             2     2      0    9795
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _button_A                                             0     0      0   27689
                          _menu_home
                      _menu_iterator
              _menu_submenu_iterator
 ---------------------------------------------------------------------------------
 (3) _menu_submenu_iterator                                2     2      0    8947
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _menu_iterator                                        2     2      0    8947
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _menu_home                                            0     0      0    9795
                         _lcd_gotoxy
                           _lcd_init
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    6206
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    3409
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1    2741
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _home
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _keyboard_control
     _button_A
       _menu_home
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _menu_iterator
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _menu_submenu_iterator
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _button_B
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_init
         _Delay1KTCYx
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
         _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _button_C
       _menu_home
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_init
           _Delay1KTCYx
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
           _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
     _button_D
       _home
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _button_asterisk
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _button_hash
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      30       5       30.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8F       6        0.0%
DATA                 0      0      8F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 06 11:44:29 2016

                             _a 0025                               _b 0027                               _c 0029  
                             _i 002B                               _j 002D                               _k 002F  
                ?_lcd_send_byte 0003                    ___awdiv@sign 0006             ___wmul@multiplicand 0003  
                   lcd_comand@d 0005                    __CFG_CP0$OFF 000000                             l210 0FFC  
                           l211 0FF8                             l230 10E6                             l222 107E  
                           l214 1030                             l206 0FC8                             l231 10E2  
                           l223 107A                             l215 102C                             l207 0FC4  
                           l250 11AE                             l242 1168                             l234 10F8  
                           l226 10B2                             l218 1042                             l251 11AA  
                           l243 1164                             l235 10F4                             l227 10AE  
                           l219 103E                             l262 120E                             l254 11C8  
                           l246 119C                             l238 1134                             l263 120A  
                           l255 11C4                             l247 1198                             l239 1130  
                           l258 11FC                             l267 121C                             l259 11F8  
                           l373 1408                             l294 2032                             l295 2034  
                           _dia 0057                             _key 003F                             _mes 005D  
                           wreg 000FE8                     lcd_gotoxy@x 0006                     lcd_gotoxy@y 0005  
             ??_button_asterisk 000B                            l1017 1EA8                            l1027 1F48  
                          l2100 1F86                            l2110 20AC                            l2130 1E7E  
                          l2210 1268                            l2202 1240                            l2052 20F4  
                          l2220 12A6                            l2126 1E6C                            l2150 1F26  
                          l2214 1272                            l2080 2082                            l2128 1E76  
                          l2240 134E                            l2232 1310                            l2216 1288  
                          l2208 125A                            l2304 1A28                            l2090 1F56  
                          l2138 1E9C                            l2154 1F3C                            l2146 1F14  
                          l2234 1332                            l2314 1A58                            l2084 2106  
                          l2164 1CB8                            l2092 1F62                            l2148 1F1E  
                          l2252 1382                            l2244 135A                            l2228 130A  
                          l2308 1A3C                            l2182 1CE4                            l2174 1CD0  
                          l2078 207C                            l2094 1F6E                            l2502 1992  
                          l2510 1C04                            l2270 13E6                            l2262 13BC  
                          l2422 188C                            l2414 1874                            l2350 1AC0  
                          l2342 1AA8                            l2168 1CC0                            l2096 1F7A  
                          l2520 1C3A                            l2256 13A6                            l2248 137E  
                          l2194 1EB4                            l2282 1462                            l2258 13B0  
                          l2418 1880                            l2346 1AB4                            l2460 189A  
                          l2532 1C70                            l2276 140E                            l2268 13DE  
                          l2284 146E                            l2372 17EE                            l2198 1EDE  
                          l2470 18D8                            l2286 148A                            l2382 181E  
                          l2366 17B4                            l2480 1916                            l2376 1802  
                          l2560 1BB4                            l2552 1B94                            l2490 1954  
                          l2642 2006                            l2714 15DC                            l2298 19FE  
                          l2570 1BDA                            l2562 1BBC                            l2546 1B82  
                          l2638 1FF8                            l2558 1BAA                            l2574 1BE6  
                          l2680 153C                            l2664 14EC                            l2648 149C  
                          l2578 1BF6                            l2854 1224                            l2862 20D6  
                          l2696 158C                            STR_1 0F38                            STR_2 0F0F  
                          STR_3 0F1E                            STR_4 0F55                            STR_5 0F5B  
                          STR_6 0F61                            STR_7 0F67                            STR_8 0F88  
                          STR_9 0F82                            u1100 1D50                            u1120 1D6C  
                          u1060 1D1E                            u1118 1D52                            u1080 1D36  
                          u1138 1D6E                            u2117 122A                            u1078 1D20  
                          u2127 20F6                            u1280 1ED4                            u2137 2108  
                          u1098 1D38                            u1290 1EFE                            u1287 1ECA  
                          u1297 1EF4                ?_lcd_send_nibble 0001           _menu_submenu_iterator 1C02  
                          _anio 0055                            _flag 02F8                            _main 20CC  
                          _home 1ACC                            _hora 005B                            _menu 0031  
                          fsr0h 000FEA                            indf0 000FEF                            fsr0l 000FE9  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                   __CFG_T1DIG$ON 000000                            prodh 000FF4  
                          prodl 000FF3                            start 0000                   __CFG_IESO$OFF 000000  
                  ___param_bank 000010                     _Delay1KTCYx 2104                   __CFG_PLLDIV$1 000000  
                         ?_main 0001                           ?_home 0001                 __end_of___awdiv 1C02  
                         STR_10 0F88                           STR_11 0F82                           STR_12 0F88  
                         STR_20 0F6D                           STR_13 0F82                           STR_21 0F78  
                         STR_30 0F28                           STR_14 0F88                           STR_22 0F73  
                         STR_15 0F82                           STR_31 0F30                           STR_23 0F40  
                         STR_16 0F88                           STR_40 0F7D                           STR_32 0F86  
                         STR_24 0F28                           STR_17 0F82                           STR_41 0F7D  
                         STR_33 0F84                           STR_25 0F30                           STR_18 0F88  
                         STR_42 0F7D                           STR_34 0F7D                           STR_26 0F47  
                         STR_19 0F82                           STR_27 0F28                           STR_43 0F7D  
                         STR_35 0F7D                           STR_28 0F30                           STR_36 0F7D  
                         STR_37 0F7D                           STR_29 0F4E                           STR_38 0F7D  
                         STR_39 0F7D           __size_of_Delay100TCYx 0012                 ___awdiv@divisor 0003  
               __end_of___lwdiv 1EB2                 __end_of___lwmod 1F52                 ___awdiv@counter 0005  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                  ?_button_hash 0001                  __CFG_FCMEN$OFF 000000                 __end_of_dpowers 0F0B  
                         _mes_d 004F                           _mes_u 0050                 __end_of_isdigit 20B6  
                         _setup 1D88                  __pbitbssCOMRAM 02F8                           tablat 000FF5  
                  lcd_putrs@ptr 0009                           status 000FD8                 __end_of_sprintf 149A  
       __CFG_DSWDTOSC$INTOSCREF 000000                 __initialization 1F9E                    _Delay100TCYx 20F2  
                  __end_of_main 20E0                 ??_lcd_send_byte 0004                    __end_of_home 1B6C  
                        ??_main 0025                          ??_home 0024                   __activetblptr 000002  
              __end_of_RtccWrOn 20F2                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _EECON2 000FA7                          _ANCON0 000F48                          _ANCON1 000F49  
              ___awdiv@dividend 0001                          ?_setup 0001          ?_menu_submenu_iterator 0001  
                __CFG_WDTEN$OFF 000000                RtccWriteDate@pDt 0001                          _RTCCFG 000F3F  
                __CFG_WPCFG$OFF 000000                  __CFG_WPDIS$OFF 000000                  __CFG_XINST$OFF 000000  
              __end_of_lcd_init 1D12                __end_of_lcd_putc 1F9E                          ___wmul 2048  
                     ??___awdiv 0005                  __CFG_STVREN$ON 000000                          _diasem 0059  
                        _anio_d 0048                          _anio_u 0049                       ??___lwdiv 0005  
                     ??___lwmod 000C                          _hora_d 004D                          _hora_u 004E  
              __end_of_button_A 2016                __end_of_button_B 160A                __end_of_button_C 214E  
              __end_of_button_D 20CC                          clear_0 1FA4                          clear_1 1FB2  
              ___awdiv@quotient 0007                          _minuto 0033                          _select 0037  
         __end_of_RtccWriteDate 1898           __end_of_RtccWriteTime 1ACC                RtccWriteTime@pTm 0001  
                  __pdataCOMRAM 0055                       ??_isdigit 0001                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                     ??_sprintf 0017                      __accesstop 0060         __end_of__initialization 1FD8  
            __size_of_Write_RTC 0148                   ___rparam_used 000001       __size_of_keyboard_control 02AA  
                __pcstackCOMRAM 0001          __size_of_menu_iterator 0128                   __end_of_setup 1DF8  
               __CFG_DSWDTPS$G2 000000                 _button_asterisk 2124                 __CFG_OSC$INTOSC 000000  
             lcd_gotoxy@address 0007            __size_of_button_hash 000E              __size_of_lcd_putrs 0054  
                  sprintf@width 0021                         ??_setup 000E                      __pbssBANK0 0060  
                    _dia_semana 004A       RtccWriteTime@tempHourWDay 000A                      __pnvCOMRAM 0048  
            __size_of_menu_home 005E                       ?_RtccWrOn 0001                  lcd_send_byte@n 0003  
                       ?___wmul 0001                    ?_Delay1KTCYx 0001               __end_of_Write_RTC 1752  
                    _lcd_comand 2132                      _lcd_gotoxy 2070                         _RTCVALH 000F99  
                       _RTCVALL 000F98                       ?_lcd_init 0001                   _menu_iterator 1898  
                     ?_lcd_putc 0001                       ?_button_A 0001                       ?_button_B 0001  
                     ?_button_C 0001                       ?_button_D 0001                         __Hparam 0000  
                       __Lparam 0000        __size_of_lcd_send_nibble 0076         __end_of_button_asterisk 2132  
                    ??_RtccWrOn 0001                         ___awdiv 1B6C               __end_of_lcd_putrs 1F06  
               __size_of___wmul 0028                         ___lwdiv 1E56                         ___lwmod 1F06  
                  __psmallconst 0F00                     _RtccTimeVal 0078                         __pcinit 1F9E  
                       _fecha_d 004B                         _fecha_u 004C                         __ramtop 0F00  
                       __ptext0 20CC                         __ptext1 1D88                         __ptext2 160A  
                       __ptext3 1B6C                         __ptext4 19C0                         __ptext5 1752  
                       __ptext6 20E0                         __ptext7 0F8C                         __ptext8 2116  
                       __ptext9 2124                         _buffer1 007C                       _T1CONbits 000FCD  
                       _dpowers 0F01                         _isdigit 2094               __end_of_menu_home 1E56  
       ??_menu_submenu_iterator 000B                         _segundo 0035                  ?_menu_iterator 0001  
                       _submenu 003D                         _sprintf 1236                      ??_lcd_init 0005  
                    ??_lcd_putc 0008            end_of_initialization 1FD8            lcd_send_byte@address 0004  
                    ??_button_A 000D                   __Lmediumconst 0000                      ??_button_B 000B  
                    ??_button_C 000B                      ??_button_D 0024                _keyboard_control 0F8C  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE           __end_of_lcd_send_byte 2048                       _PORTAbits 000F80  
                     _PORTCbits 000F82                __CFG_DSBOREN$OFF 000000                     ?_lcd_comand 0001  
              __CFG_CPUDIV$OSC1 000000                       _TRISBbits 000F93                     ?_lcd_gotoxy 0005  
               _LCD_INIT_STRING 0F0B                __CFG_IOL1WAY$OFF 000000       RtccWriteDate@tempDayMonth 000A  
           __CFG_MSSP7B_EN$MSK7 000000                ?_button_asterisk 0001                Delay100TCYx@unit 0001  
                __end_of___wmul 2070                   __pidataCOMRAM 214E       RtccWriteDate@tempHourWDay 000C  
             ??_lcd_send_nibble 0001            __size_of_Delay1KTCYx 0012                __CFG_DSWDTEN$OFF 000000  
           start_initialization 1F9E                 ??_menu_iterator 000B            RtccWriteTime@wasAlrm 0006  
          RtccWriteTime@wasWrEn 0007          __size_of_RtccWriteDate 0146                 RtccWriteDate@di 0003  
        __size_of_RtccWriteTime 010C             __size_of_lcd_comand 000E             __size_of_lcd_gotoxy 0024  
                      ??___wmul 0005               __size_of_RtccWrOn 0012                 RtccWriteTime@di 0003  
              __CFG_LPT1OSC$OFF 000000                     _ALRMCFGbits 000F91         __end_of_LCD_INIT_STRING 0F0F  
                 ??_button_hash 000B                     __pbssCOMRAM 0025                       _Write_RTC 160A  
                  _isdigit$2090 0002                 Delay1KTCYx@unit 0001               __size_of_lcd_init 0080  
                   sprintf@flag 001D               __size_of_lcd_putc 004C                     sprintf@prec 0020  
             __size_of_button_A 0034               __size_of_button_B 0170               __size_of_button_C 000E  
             __size_of_button_D 0016                ___lwdiv@dividend 0001                   ?_Delay100TCYx 0001  
                      ?___awdiv 0001                        ?___lwdiv 0001                        ?___lwmod 0008  
       RtccWriteTime@tempMinSec 0008                       _lcd_putrs 1EB2                   _RtccWriteDate 1752  
                   __smallconst 0F00                   _RtccWriteTime 19C0                        ?_isdigit 0001  
          __CFG_RTCOSC$T1OSCREF 000000        __end_of_keyboard_control 1236                      ?_Write_RTC 0001  
__size_of_menu_submenu_iterator 0090                ___lwdiv@quotient 0005   __end_of_menu_submenu_iterator 1C92  
                      ?_sprintf 000D                  __size_of_setup 0070                       _menu_home 1DF8  
           __end_of_button_hash 2124                _RtccAlrmTimeDate 0060                  ___wmul@product 0005  
                      _LATAbits 000F89                        _LATBbits 000F8A                        _PIE3bits 000FA3  
                     _select_op 0039                       _selection 003B                       _segundo_d 0053  
                ??_Delay100TCYx 0001                       _segundo_u 0054                __CFG_WDTPS$32768 000000  
            RtccWriteDate@wasOn 0005              _Rtcc_read_TimeDate 0070                  ?_RtccWriteDate 0001  
                    ?_lcd_putrs 0009               ___wmul@multiplier 0001                  ?_RtccWriteTime 0001  
                     lcd_init@i 0005                    ??_lcd_comand 0005                       lcd_putc@c 0008  
                  ??_lcd_gotoxy 0006                       copy_data0 1FCC                      ?_menu_home 0001  
               _lcd_send_nibble 1D12                        __Hrparam 0000                        _RtccDate 0040  
                      __Lrparam 0000                        _RtccTime 0044                        _RtccWrOn 20E0  
            __end_of_lcd_comand 2140              __end_of_lcd_gotoxy 2094                __size_of___awdiv 0096  
              __size_of___lwdiv 005C                __size_of___lwmod 004C                    _RtccTimeDate 0068  
                    sprintf@val 001E                     _button_hash 2116                __size_of_isdigit 0022  
               ___lwdiv@divisor 0003                     ??_Write_RTC 000E                 ___lwdiv@counter 0007  
                      __ptext10 20B6                        __ptext11 1ACC                        __ptext20 1FE2  
                      __ptext12 1236                        __ptext21 1C02                        __ptext13 2094  
                      __ptext30 20F2                        __ptext22 1898                        __ptext14 2048  
                      __ptext31 2104                        __ptext23 1DF8                        __ptext15 1F06  
                      __ptext24 1EB2                        __ptext16 1E56                        __ptext25 1F52  
                      __ptext17 2132                        __ptext26 2070                        __ptext18 2140  
                      __ptext27 1C92                        __ptext19 149A                        __ptext28 2016  
                      __ptext29 1D12                        _lcd_init 1C92                        _lcd_putc 1F52  
              __size_of_sprintf 0264          __size_of_lcd_send_byte 0032                        _button_A 1FE2  
                      _button_B 149A                        _button_C 2140                        _button_D 20B6  
                 __size_of_main 0014                   __size_of_home 00A0                        _minuto_d 0051  
                      _minuto_u 0052                   ??_Delay1KTCYx 0001                 ??_RtccWriteDate 0004  
               ??_RtccWriteTime 0004                     ??_lcd_putrs 000B        __size_of_button_asterisk 000E  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2              RtccWriteTime@wasOn 0005  
          __end_of_Delay100TCYx 2104                        isdigit@c 0003           __end_of_menu_iterator 19C0  
                   ??_menu_home 000B                       sprintf@ap 001B         __end_of_lcd_send_nibble 1D88  
                     sprintf@sp 000D                ___lwmod@dividend 0008                      _OSCCONbits 000FD3  
         RtccWriteDate@tempYear 0007                   _lcd_send_byte 2016                      _RTCCFGbits 000F3F  
                      sprintf@c 0023                        sprintf@f 000F                 ___lwmod@divisor 000A  
           __end_of_Delay1KTCYx 2116                 ___lwmod@counter 000C            RtccWriteDate@wasAlrm 0006  
          RtccWriteDate@wasWrEn 0009               ?_keyboard_control 0001              ??_keyboard_control 0024  
         lcd_send_nibble@nibble 0002  
