

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Aug 16 18:36:55 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  001C96                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _anio
    47  001C96  000F               	dw	15
    48                           
    49                           ;initializer for _dia
    50  001C98  0008               	dw	8
    51                           
    52                           ;initializer for _diasem
    53  001C9A  0003               	dw	3
    54                           
    55                           ;initializer for _hora
    56  001C9C  0012               	dw	18
    57                           
    58                           ;initializer for _mes
    59  001C9E  0009               	dw	9
    60                           
    61                           ;initializer for _minuto
    62  001CA0  001E               	dw	30
    63                           
    64                           	psect	smallconst
    65  000F00                     __psmallconst:
    66                           	opt stack 0
    67  000F00  00                 	db	0
    68  000F01                     _dpowers:
    69                           	opt stack 0
    70  000F01  0001               	dw	1
    71  000F03  000A               	dw	10
    72  000F05  0064               	dw	100
    73  000F07  03E8               	dw	1000
    74  000F09  2710               	dw	10000
    75  000F0B                     __end_of_dpowers:
    76                           	opt stack 0
    77  000F0B                     _LCD_INIT_STRING:
    78                           	opt stack 0
    79  000F0B  28                 	db	40
    80  000F0C  0C                 	db	12
    81  000F0D  01                 	db	1
    82  000F0E  06                 	db	6
    83  000F0F                     __end_of_LCD_INIT_STRING:
    84                           	opt stack 0
    85  000F0F                     STR_2:
    86                           
    87                           ; BSR set to: 15
    88  000F0F  25                 	db	37
    89  000F10  30                 	db	48	;'0'
    90  000F11  32                 	db	50	;'2'
    91  000F12  75                 	db	117	;'u'
    92  000F13  2F                 	db	47
    93  000F14  25                 	db	37
    94  000F15  30                 	db	48	;'0'
    95  000F16  32                 	db	50	;'2'
    96  000F17  75                 	db	117	;'u'
    97  000F18  2F                 	db	47
    98  000F19  25                 	db	37
    99  000F1A  30                 	db	48	;'0'
   100  000F1B  32                 	db	50	;'2'
   101  000F1C  75                 	db	117	;'u'
   102  000F1D  00                 	db	0
   103  000F1E                     STR_3:
   104                           
   105                           ; BSR set to: 15
   106  000F1E  25                 	db	37
   107  000F1F  30                 	db	48	;'0'
   108  000F20  32                 	db	50	;'2'
   109  000F21  75                 	db	117	;'u'
   110  000F22  3A                 	db	58	;':'
   111  000F23  25                 	db	37
   112  000F24  30                 	db	48	;'0'
   113  000F25  32                 	db	50	;'2'
   114  000F26  75                 	db	117	;'u'
   115  000F27  3A                 	db	58	;':'
   116  000F28  25                 	db	37
   117  000F29  30                 	db	48	;'0'
   118  000F2A  32                 	db	50	;'2'
   119  000F2B  75                 	db	117	;'u'
   120  000F2C  00                 	db	0
   121  000F2D                     STR_5:
   122                           
   123                           ; BSR set to: 15
   124  000F2D  20                 	db	32
   125  000F2E  20                 	db	32
   126  000F2F  20                 	db	32
   127  000F30  20                 	db	32
   128  000F31  20                 	db	32
   129  000F32  20                 	db	32
   130  000F33  00                 	db	0
   131  000F34                     STR_1:
   132                           
   133                           ; BSR set to: 15
   134  000F34  55                 	db	85	;'U'
   135  000F35  4E                 	db	78	;'N'
   136  000F36  49                 	db	73	;'I'
   137  000F37  4D                 	db	77	;'M'
   138  000F38  49                 	db	73	;'I'
   139  000F39  43                 	db	67	;'C'
   140  000F3A  00                 	db	0
   141  0000                     
   142                           ; #config settings
   143  000F3B  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           	psect	nvCOMRAM
   146  00003F                     __pnvCOMRAM:
   147                           	opt stack 0
   148  00003F                     _anio_d:
   149                           	opt stack 0
   150  00003F                     	ds	1
   151  000040                     _anio_u:
   152                           	opt stack 0
   153  000040                     	ds	1
   154  000041                     _dia_semana:
   155                           	opt stack 0
   156  000041                     	ds	1
   157  000042                     _fecha_d:
   158                           	opt stack 0
   159  000042                     	ds	1
   160  000043                     _fecha_u:
   161                           	opt stack 0
   162  000043                     	ds	1
   163  000044                     _hora_d:
   164                           	opt stack 0
   165  000044                     	ds	1
   166  000045                     _hora_u:
   167                           	opt stack 0
   168  000045                     	ds	1
   169  000046                     _mes_d:
   170                           	opt stack 0
   171  000046                     	ds	1
   172  000047                     _mes_u:
   173                           	opt stack 0
   174  000047                     	ds	1
   175  000048                     _minuto_d:
   176                           	opt stack 0
   177  000048                     	ds	1
   178  000049                     _minuto_u:
   179                           	opt stack 0
   180  000049                     	ds	1
   181  00004A                     _segundo_d:
   182                           	opt stack 0
   183  00004A                     	ds	1
   184  00004B                     _segundo_u:
   185                           	opt stack 0
   186  00004B                     	ds	1
   187  0000                     _ANCON0	set	3912
   188  0000                     _RTCCFG	set	3903
   189  0000                     _RTCCFGbits	set	3903
   190  0000                     _ADCON0	set	4034
   191  0000                     _ADCON1	set	4033
   192  0000                     _ALRMCFGbits	set	3985
   193  0000                     _EECON2	set	4007
   194  0000                     _INTCONbits	set	4082
   195  0000                     _LATBbits	set	3978
   196  0000                     _OSCCONbits	set	4051
   197  0000                     _OSCTUNEbits	set	3995
   198  0000                     _PIE3bits	set	4003
   199  0000                     _PORTAbits	set	3968
   200  0000                     _RTCVALH	set	3993
   201  0000                     _RTCVALL	set	3992
   202  0000                     _T1CONbits	set	4045
   203  0000                     _TRISA	set	3986
   204  0000                     _TRISB	set	3987
   205  0000                     _TRISBbits	set	3987
   206  0000                     _TRISC	set	3988
   207                           
   208                           	psect	cinit
   209  001B34                     __pcinit:
   210                           	opt stack 0
   211  001B34                     start_initialization:
   212                           	opt stack 0
   213  001B34                     __initialization:
   214                           	opt stack 0
   215                           
   216                           ; Clear objects allocated to BANK0 (44 bytes)
   217  001B34  EE00  F060         	lfsr	0,__pbssBANK0
   218  001B38  0E2C               	movlw	44
   219  001B3A                     clear_0:
   220  001B3A  6AEE               	clrf	postinc0,c
   221  001B3C  06E8               	decf	wreg,f,c
   222  001B3E  E1FD               	bnz	clear_0
   223                           
   224                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   225  001B40  6A58               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   226                           
   227                           ; Clear objects allocated to COMRAM (26 bytes)
   228  001B42  EE00  F025         	lfsr	0,__pbssCOMRAM
   229  001B46  0E1A               	movlw	26
   230  001B48                     clear_1:
   231  001B48  6AEE               	clrf	postinc0,c
   232  001B4A  06E8               	decf	wreg,f,c
   233  001B4C  E1FD               	bnz	clear_1
   234                           
   235                           ; Initialize objects allocated to COMRAM (12 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  001B4E  0E96               	movlw	low __pidataCOMRAM
   238  001B50  6EF6               	movwf	tblptrl,c
   239  001B52  0E1C               	movlw	high __pidataCOMRAM
   240  001B54  6EF7               	movwf	tblptrh,c
   241  001B56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  001B58  6EF8               	movwf	tblptru,c
   243  001B5A  EE00  F04C         	lfsr	0,__pdataCOMRAM
   244  001B5E  EE10 F00C          	lfsr	1,12
   245  001B62                     copy_data0:
   246  001B62  0009               	tblrd		*+
   247  001B64  CFF5 FFEE          	movff	tablat,postinc0
   248  001B68  50E5               	movf	postdec1,w,c
   249  001B6A  50E1               	movf	fsr1l,w,c
   250  001B6C  E1FA               	bnz	copy_data0
   251  001B6E                     end_of_initialization:
   252                           	opt stack 0
   253  001B6E                     __end_of__initialization:
   254                           	opt stack 0
   255  001B6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  001B70  6EF8               	movwf	tblptru,c
   257  001B72  0100               	movlb	0
   258  001B74  EFBC  F00D         	goto	_main	;jump to C main() function
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           postdec1	equ	0xFE5
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	bitbssCOMRAM
   269  0002C0                     __pbitbssCOMRAM:
   270                           	opt stack 0
   271  0002C0                     _flag:
   272                           	opt stack 0
   273  0002C0                     	ds	1
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           postdec1	equ	0xFE5
   281                           fsr1l	equ	0xFE1
   282                           
   283                           	psect	bssCOMRAM
   284  000025                     __pbssCOMRAM:
   285                           	opt stack 0
   286  000025                     _RtccTimeVal:
   287                           	opt stack 0
   288  000025                     	ds	4
   289  000029                     _a:
   290                           	opt stack 0
   291  000029                     	ds	2
   292  00002B                     _b:
   293                           	opt stack 0
   294  00002B                     	ds	2
   295  00002D                     _c:
   296                           	opt stack 0
   297  00002D                     	ds	2
   298  00002F                     _i:
   299                           	opt stack 0
   300  00002F                     	ds	2
   301  000031                     _j:
   302                           	opt stack 0
   303  000031                     	ds	2
   304  000033                     _k:
   305                           	opt stack 0
   306  000033                     	ds	2
   307  000035                     _segundo:
   308                           	opt stack 0
   309  000035                     	ds	2
   310  000037                     _RtccDate:
   311                           	opt stack 0
   312  000037                     	ds	4
   313  00003B                     _RtccTime:
   314                           	opt stack 0
   315  00003B                     	ds	4
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	dataCOMRAM
   326  00004C                     __pdataCOMRAM:
   327                           	opt stack 0
   328  00004C                     _anio:
   329                           	opt stack 0
   330  00004C                     	ds	2
   331  00004E                     _dia:
   332                           	opt stack 0
   333  00004E                     	ds	2
   334  000050                     _diasem:
   335                           	opt stack 0
   336  000050                     	ds	2
   337  000052                     _hora:
   338                           	opt stack 0
   339  000052                     	ds	2
   340  000054                     _mes:
   341                           	opt stack 0
   342  000054                     	ds	2
   343  000056                     _minuto:
   344                           	opt stack 0
   345  000056                     	ds	2
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	bssBANK0
   356  000060                     __pbssBANK0:
   357                           	opt stack 0
   358  000060                     _RtccAlrmTimeDate:
   359                           	opt stack 0
   360  000060                     	ds	8
   361  000068                     _RtccTimeDate:
   362                           	opt stack 0
   363  000068                     	ds	8
   364  000070                     _Rtcc_read_TimeDate:
   365                           	opt stack 0
   366  000070                     	ds	8
   367  000078                     _buffer2:
   368                           	opt stack 0
   369  000078                     	ds	20
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           postdec1	equ	0xFE5
   377                           fsr1l	equ	0xFE1
   378                           
   379                           	psect	cstackCOMRAM
   380  000001                     __pcstackCOMRAM:
   381                           	opt stack 0
   382  000001                     ??_isdigit:
   383  000001                     ??_lcd_send_nibble:
   384  000001                     ?___wmul:
   385                           	opt stack 0
   386  000001                     ?___awdiv:
   387                           	opt stack 0
   388  000001                     ?___lwdiv:
   389                           	opt stack 0
   390  000001                     Delay100TCYx@unit:
   391                           	opt stack 0
   392  000001                     Delay1KTCYx@unit:
   393                           	opt stack 0
   394  000001                     RtccReadDate@pDt:
   395                           	opt stack 0
   396  000001                     RtccReadTime@pTm:
   397                           	opt stack 0
   398  000001                     RtccWriteDate@pDt:
   399                           	opt stack 0
   400  000001                     RtccWriteTime@pTm:
   401                           	opt stack 0
   402  000001                     ___wmul@multiplier:
   403                           	opt stack 0
   404  000001                     ___awdiv@dividend:
   405                           	opt stack 0
   406  000001                     ___lwdiv@dividend:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x0
   410  000001                     	ds	1
   411  000002                     lcd_send_nibble@nibble:
   412                           	opt stack 0
   413  000002                     _isdigit$1814:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x1
   417  000002                     	ds	1
   418  000003                     lcd_send_byte@n:
   419                           	opt stack 0
   420  000003                     RtccWriteDate@di:
   421                           	opt stack 0
   422  000003                     RtccWriteTime@di:
   423                           	opt stack 0
   424  000003                     isdigit@c:
   425                           	opt stack 0
   426  000003                     ___wmul@multiplicand:
   427                           	opt stack 0
   428  000003                     ___awdiv@divisor:
   429                           	opt stack 0
   430  000003                     ___lwdiv@divisor:
   431                           	opt stack 0
   432  000003                     RtccReadDate@rTD1:
   433                           	opt stack 0
   434  000003                     RtccReadTime@rTD1:
   435                           	opt stack 0
   436                           
   437                           ; 8 bytes @ 0x2
   438  000003                     	ds	1
   439  000004                     lcd_send_byte@address:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x3
   443  000004                     	ds	1
   444  000005                     lcd_init@i:
   445                           	opt stack 0
   446  000005                     lcd_gotoxy@y:
   447                           	opt stack 0
   448  000005                     lcd_comand@d:
   449                           	opt stack 0
   450  000005                     RtccWriteDate@wasOn:
   451                           	opt stack 0
   452  000005                     RtccWriteTime@wasOn:
   453                           	opt stack 0
   454  000005                     ___awdiv@counter:
   455                           	opt stack 0
   456  000005                     ___wmul@product:
   457                           	opt stack 0
   458  000005                     ___lwdiv@quotient:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x4
   462  000005                     	ds	1
   463  000006                     lcd_gotoxy@x:
   464                           	opt stack 0
   465  000006                     RtccWriteDate@wasAlrm:
   466                           	opt stack 0
   467  000006                     RtccWriteTime@wasAlrm:
   468                           	opt stack 0
   469  000006                     ___awdiv@sign:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x5
   473  000006                     	ds	1
   474  000007                     lcd_gotoxy@address:
   475                           	opt stack 0
   476  000007                     RtccWriteTime@wasWrEn:
   477                           	opt stack 0
   478  000007                     ___lwdiv@counter:
   479                           	opt stack 0
   480  000007                     RtccWriteDate@tempYear:
   481                           	opt stack 0
   482  000007                     ___awdiv@quotient:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x6
   486  000007                     	ds	1
   487  000008                     ?___lwmod:
   488                           	opt stack 0
   489  000008                     lcd_putc@c:
   490                           	opt stack 0
   491  000008                     RtccWriteTime@tempMinSec:
   492                           	opt stack 0
   493  000008                     ___lwmod@dividend:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x7
   497  000008                     	ds	1
   498  000009                     RtccWriteDate@wasWrEn:
   499                           	opt stack 0
   500  000009                     lcd_putrs@ptr:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x8
   504  000009                     	ds	1
   505  00000A                     RtccWriteDate@tempDayMonth:
   506                           	opt stack 0
   507  00000A                     RtccWriteTime@tempHourWDay:
   508                           	opt stack 0
   509  00000A                     ___lwmod@divisor:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x9
   513  00000A                     	ds	1
   514  00000B                     RtccReadDate@rTD0:
   515                           	opt stack 0
   516  00000B                     RtccReadTime@rTD0:
   517                           	opt stack 0
   518                           
   519                           ; 8 bytes @ 0xA
   520  00000B                     	ds	1
   521  00000C                     ___lwmod@counter:
   522                           	opt stack 0
   523  00000C                     RtccWriteDate@tempHourWDay:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xB
   527  00000C                     	ds	1
   528  00000D                     ?_sprintf:
   529                           	opt stack 0
   530  00000D                     sprintf@sp:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0xC
   534  00000D                     	ds	1
   535  00000E                     
   536                           ; 0 bytes @ 0xD
   537  00000E                     	ds	1
   538  00000F                     sprintf@f:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0xE
   542  00000F                     	ds	4
   543  000013                     
   544                           ; 0 bytes @ 0x12
   545  000013                     	ds	4
   546  000017                     ??_sprintf:
   547                           
   548                           ; 0 bytes @ 0x16
   549  000017                     	ds	4
   550  00001B                     sprintf@ap:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x1A
   554  00001B                     	ds	2
   555  00001D                     sprintf@flag:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x1C
   559  00001D                     	ds	1
   560  00001E                     sprintf@val:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x1D
   564  00001E                     	ds	2
   565  000020                     sprintf@prec:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x1F
   569  000020                     	ds	1
   570  000021                     sprintf@width:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x20
   574  000021                     	ds	2
   575  000023                     sprintf@c:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x22
   579  000023                     	ds	1
   580  000024                     ??_main:
   581                           
   582                           ; 0 bytes @ 0x23
   583  000024                     	ds	1
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           postdec1	equ	0xFE5
   591                           fsr1l	equ	0xFE1
   592                           
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   595 ;;
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 101 in file "main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  2  143[None  ] int 
   605 ;; Registers used:
   606 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   616 ;;Total ram usage:        1 bytes
   617 ;; Hardware stack levels required when called:    6
   618 ;; This function calls:
   619 ;;		_Read_RTC
   620 ;;		_Setup
   621 ;;		_caratula
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text0
   628  001B78                     __ptext0:
   629                           	opt stack 0
   630  001B78                     _main:
   631                           	opt stack 25
   632                           
   633                           ;main.c: 103: Setup();
   634                           
   635                           ; BSR set to: 15
   636                           ;incstack = 0
   637  001B78  EC76  F00D         	call	_Setup	;wreg free
   638  001B7C  D000               	goto	l2271
   639  001B7E                     l2271:
   640                           
   641                           ;main.c: 105: {
   642                           ;main.c: 106: Read_RTC();
   643  001B7E  EC22  F00B         	call	_Read_RTC	;wreg free
   644                           
   645                           ;main.c: 107: caratula();
   646  001B82  EC9D  F00A         	call	_caratula	;wreg free
   647                           
   648                           ;main.c: 109: if(PORTAbits.RA1 == 0)
   649  001B86  B280               	btfsc	3968,1,c	;volatile
   650  001B88  D002               	goto	l145
   651                           
   652                           ;main.c: 110: {
   653                           ;main.c: 111: LATBbits.LATB1 = !LATBbits.LATB1;;
   654  001B8A  728A               	btg	3978,1,c	;volatile
   655                           
   656                           ;main.c: 112: }
   657  001B8C  D001               	goto	l146
   658  001B8E                     l145:
   659                           
   660                           ;main.c: 113: else LATBbits.LATB1 = 0;;
   661  001B8E  928A               	bcf	3978,1,c	;volatile
   662  001B90                     l146:
   663                           
   664                           ;main.c: 115: if(PORTAbits.RA0 == 0)
   665  001B90  B080               	btfsc	3968,0,c	;volatile
   666  001B92  D002               	goto	l147
   667                           
   668                           ;main.c: 116: {
   669                           ;main.c: 117: LATBbits.LATB0 = 1;;
   670  001B94  808A               	bsf	3978,0,c	;volatile
   671                           
   672                           ;main.c: 118: }
   673  001B96  D002               	goto	l2281
   674  001B98                     l147:
   675                           
   676                           ;main.c: 119: else LATBbits.LATB0 = 0;;
   677  001B98  908A               	bcf	3978,0,c	;volatile
   678  001B9A  D000               	goto	l2281
   679  001B9C                     l2281:
   680                           
   681                           ;main.c: 121: _delay((unsigned long)((98)*(8000000/4000.0)));
   682  001B9C  0EFF               	movlw	255
   683  001B9E  6E24               	movwf	??_main& (0+255),c
   684  001BA0  0E8A               	movlw	138
   685  001BA2                     u1557:
   686  001BA2  2EE8               	decfsz	wreg,f,c
   687  001BA4  D7FE               	goto	u1557
   688  001BA6  2E24               	decfsz	??_main& (0+255),f,c
   689  001BA8  D7FC               	goto	u1557
   690  001BAA  D000               	nop2	
   691  001BAC  D7E8               	goto	l2271
   692                           
   693                           ;main.c: 123: }
   694                           ;main.c: 124: return 0;
   695                           ;	Return value of _main is never used
   696  001BAE  EF00  F000         	goto	start
   697  001BB2                     __end_of_main:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           postdec1	equ	0xFE5
   706                           fsr1l	equ	0xFE1
   707                           
   708 ;; *************** function _caratula *****************
   709 ;; Defined at:
   710 ;;		line 36 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;		None               void
   717 ;; Registers used:
   718 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; Hardware stack levels required when called:    5
   731 ;; This function calls:
   732 ;;		_lcd_comand
   733 ;;		_lcd_gotoxy
   734 ;;		_lcd_putrs
   735 ;;		_sprintf
   736 ;; This function is called by:
   737 ;;		_main
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text1
   742  00153A                     __ptext1:
   743                           	opt stack 0
   744  00153A                     _caratula:
   745                           	opt stack 25
   746                           
   747                           ;main.c: 38: lcd_comand(0b00001100);
   748                           
   749                           ;incstack = 0
   750  00153A  0E0C               	movlw	12
   751  00153C  EC44  F00E         	call	_lcd_comand
   752                           
   753                           ;main.c: 39: lcd_gotoxy(1,1);
   754  001540  0E01               	movlw	1
   755  001542  6E05               	movwf	lcd_gotoxy@y,c
   756  001544  0E01               	movlw	1
   757  001546  EC06  F00E         	call	_lcd_gotoxy
   758                           
   759                           ;main.c: 40: lcd_putrs("UNIMIC");
   760  00154A  0E34               	movlw	low STR_1
   761  00154C  6E09               	movwf	lcd_putrs@ptr,c
   762  00154E  0E0F               	movlw	high STR_1
   763  001550  6E0A               	movwf	lcd_putrs@ptr+1,c
   764  001552  EC00  F00D         	call	_lcd_putrs	;wreg free
   765                           
   766                           ;main.c: 41: sprintf(buffer2,"%02u/%02u/%02u",dia,mes,anio);
   767  001556  0E78               	movlw	low _buffer2
   768  001558  6E0D               	movwf	sprintf@sp,c
   769  00155A  0E00               	movlw	high _buffer2
   770  00155C  6E0E               	movwf	sprintf@sp+1,c
   771  00155E  0E0F               	movlw	low STR_2
   772  001560  6E0F               	movwf	sprintf@f,c
   773  001562  0E0F               	movlw	high STR_2
   774  001564  6E10               	movwf	sprintf@f+1,c
   775  001566  C04E  F011         	movff	_dia,?_sprintf+4
   776  00156A  C04F  F012         	movff	_dia+1,?_sprintf+5
   777  00156E  C054  F013         	movff	_mes,?_sprintf+6
   778  001572  C055  F014         	movff	_mes+1,?_sprintf+7
   779  001576  C04C  F015         	movff	_anio,?_sprintf+8
   780  00157A  C04D  F016         	movff	_anio+1,?_sprintf+9
   781  00157E  EC9E  F007         	call	_sprintf	;wreg free
   782                           
   783                           ;main.c: 42: lcd_gotoxy(9,1);
   784  001582  0E01               	movlw	1
   785  001584  6E05               	movwf	lcd_gotoxy@y,c
   786  001586  0E09               	movlw	9
   787  001588  EC06  F00E         	call	_lcd_gotoxy
   788                           
   789                           ;main.c: 43: lcd_putrs(buffer2);
   790  00158C  0E78               	movlw	low _buffer2
   791  00158E  6E09               	movwf	lcd_putrs@ptr,c
   792  001590  0E00               	movlw	high _buffer2
   793  001592  6E0A               	movwf	lcd_putrs@ptr+1,c
   794  001594  EC00  F00D         	call	_lcd_putrs	;wreg free
   795                           
   796                           ;main.c: 44: sprintf(buffer2,"%02u:%02u:%02u",hora,minuto,segundo);
   797  001598  0E78               	movlw	low _buffer2
   798  00159A  6E0D               	movwf	sprintf@sp,c
   799  00159C  0E00               	movlw	high _buffer2
   800  00159E  6E0E               	movwf	sprintf@sp+1,c
   801  0015A0  0E1E               	movlw	low STR_3
   802  0015A2  6E0F               	movwf	sprintf@f,c
   803  0015A4  0E0F               	movlw	high STR_3
   804  0015A6  6E10               	movwf	sprintf@f+1,c
   805  0015A8  C052  F011         	movff	_hora,?_sprintf+4
   806  0015AC  C053  F012         	movff	_hora+1,?_sprintf+5
   807  0015B0  C056  F013         	movff	_minuto,?_sprintf+6
   808  0015B4  C057  F014         	movff	_minuto+1,?_sprintf+7
   809  0015B8  C035  F015         	movff	_segundo,?_sprintf+8
   810  0015BC  C036  F016         	movff	_segundo+1,?_sprintf+9
   811  0015C0  EC9E  F007         	call	_sprintf	;wreg free
   812                           
   813                           ;main.c: 45: lcd_gotoxy(1,2);
   814  0015C4  0E02               	movlw	2
   815  0015C6  6E05               	movwf	lcd_gotoxy@y,c
   816  0015C8  0E01               	movlw	1
   817  0015CA  EC06  F00E         	call	_lcd_gotoxy
   818                           
   819                           ;main.c: 47: b=b++;
   820  0015CE  0E78               	movlw	low _buffer2
   821  0015D0  6E09               	movwf	lcd_putrs@ptr,c
   822  0015D2  0E00               	movlw	high _buffer2
   823  0015D4  6E0A               	movwf	lcd_putrs@ptr+1,c
   824  0015D6  EC00  F00D         	call	_lcd_putrs	;wreg free
   825  0015DA  4A2B               	infsnz	_b,f,c
   826  0015DC  2A2C               	incf	_b+1,f,c
   827                           
   828                           ;main.c: 48: if(b<7)
   829  0015DE  BE2C               	btfsc	_b+1,7,c
   830  0015E0  D006               	goto	l2233
   831  0015E2  502C               	movf	_b+1,w,c
   832  0015E4  E110               	bnz	l2237
   833  0015E6  0E07               	movlw	7
   834  0015E8  5C2B               	subwf	_b,w,c
   835  0015EA  B0D8               	btfsc	status,0,c
   836  0015EC  D00C               	goto	l2237
   837  0015EE                     l2233:
   838                           
   839                           ;main.c: 49: {
   840                           ;main.c: 50: lcd_gotoxy(1,1);
   841  0015EE  0E01               	movlw	1
   842  0015F0  6E05               	movwf	lcd_gotoxy@y,c
   843  0015F2  0E01               	movlw	1
   844  0015F4  EC06  F00E         	call	_lcd_gotoxy
   845                           
   846                           ;main.c: 51: lcd_putrs("UNIMIC");
   847  0015F8  0E34               	movlw	low STR_1
   848  0015FA  6E09               	movwf	lcd_putrs@ptr,c
   849  0015FC  0E0F               	movlw	high STR_1
   850  0015FE  6E0A               	movwf	lcd_putrs@ptr+1,c
   851  001600  EC00  F00D         	call	_lcd_putrs	;wreg free
   852  001604  D000               	goto	l2237
   853  001606                     l2237:
   854                           
   855                           ;main.c: 52: }
   856                           ;main.c: 53: if(b>6)
   857  001606  BE2C               	btfsc	_b+1,7,c
   858  001608  0012               	return	
   859  00160A  502C               	movf	_b+1,w,c
   860  00160C  E104               	bnz	u1500
   861  00160E  0E07               	movlw	7
   862  001610  5C2B               	subwf	_b,w,c
   863  001612  A0D8               	btfss	status,0,c
   864  001614  0012               	return	
   865  001616                     u1500:
   866                           
   867                           ;main.c: 54: {
   868                           ;main.c: 55: if(b==11){b=0;}
   869  001616  0E0B               	movlw	11
   870  001618  182B               	xorwf	_b,w,c
   871  00161A  102C               	iorwf	_b+1,w,c
   872  00161C  A4D8               	btfss	status,2,c
   873  00161E  D005               	goto	l2243
   874  001620  0E00               	movlw	0
   875  001622  6E2C               	movwf	_b+1,c
   876  001624  0E00               	movlw	0
   877  001626  6E2B               	movwf	_b,c
   878  001628  D000               	goto	l2243
   879  00162A                     l2243:
   880                           
   881                           ;main.c: 56: lcd_gotoxy(1,1);
   882  00162A  0E01               	movlw	1
   883  00162C  6E05               	movwf	lcd_gotoxy@y,c
   884  00162E  0E01               	movlw	1
   885  001630  EC06  F00E         	call	_lcd_gotoxy
   886                           
   887                           ;main.c: 57: lcd_putrs("      ");
   888  001634  0E2D               	movlw	low STR_5
   889  001636  6E09               	movwf	lcd_putrs@ptr,c
   890  001638  0E0F               	movlw	high STR_5
   891  00163A  6E0A               	movwf	lcd_putrs@ptr+1,c
   892  00163C  EC00  F00D         	call	_lcd_putrs	;wreg free
   893  001640  0012               	return	
   894  001642  0012               	return		;funcret
   895  001644                     __end_of_caratula:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           postinc0	equ	0xFEE
   902                           wreg	equ	0xFE8
   903                           postdec1	equ	0xFE5
   904                           fsr1l	equ	0xFE1
   905                           status	equ	0xFD8
   906                           
   907 ;; *************** function _sprintf *****************
   908 ;; Defined at:
   909 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  sp              2   12[COMRAM] PTR unsigned char 
   912 ;;		 -> buffer2(20), 
   913 ;;  f               2   14[COMRAM] PTR const unsigned char 
   914 ;;		 -> STR_3(15), STR_2(15), 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  tmpval          4    0        struct .
   917 ;;  cp              3    0        PTR const unsigned char 
   918 ;;  width           2   32[COMRAM] int 
   919 ;;  val             2   29[COMRAM] unsigned int 
   920 ;;  ap              2   26[COMRAM] PTR void [1]
   921 ;;		 -> ?_sprintf(2), 
   922 ;;  len             2    0        unsigned int 
   923 ;;  c               1   34[COMRAM] char 
   924 ;;  prec            1   31[COMRAM] char 
   925 ;;  flag            1   28[COMRAM] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  2   12[COMRAM] int 
   928 ;; Registers used:
   929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   935 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;Total ram usage:       23 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    1
   942 ;; This function calls:
   943 ;;		___lwdiv
   944 ;;		___lwmod
   945 ;;		___wmul
   946 ;;		_isdigit
   947 ;; This function is called by:
   948 ;;		_caratula
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text2
   953  000F3C                     __ptext2:
   954                           	opt stack 0
   955  000F3C                     _sprintf:
   956                           	opt stack 28
   957                           
   958                           ;doprnt.c: 494: va_list ap;
   959                           ;doprnt.c: 499: signed char c;
   960                           ;doprnt.c: 501: int width;
   961                           ;doprnt.c: 506: signed char prec;
   962                           ;doprnt.c: 508: unsigned char flag;
   963                           ;doprnt.c: 523: union {
   964                           ;doprnt.c: 524: unsigned long vd;
   965                           ;doprnt.c: 525: double integ;
   966                           ;doprnt.c: 526: } tmpval;
   967                           ;doprnt.c: 528: unsigned int val;
   968                           ;doprnt.c: 529: unsigned len;
   969                           ;doprnt.c: 530: const char * cp;
   970                           ;doprnt.c: 533: *ap = __va_start();
   971                           
   972                           ;incstack = 0
   973  000F3C  0E11               	movlw	low (?_sprintf+4)
   974  000F3E  6E1B               	movwf	sprintf@ap,c
   975  000F40  0E00               	movlw	high (?_sprintf+4)
   976  000F42  6E1C               	movwf	sprintf@ap+1,c
   977                           
   978                           ;doprnt.c: 536: while(c = *f++) {
   979  000F44  D117               	goto	l2135
   980  000F46                     l2053:
   981                           
   982                           ;doprnt.c: 538: if(c != '%')
   983  000F46  0E25               	movlw	37
   984  000F48  1823               	xorwf	sprintf@c,w,c
   985  000F4A  B4D8               	btfsc	status,2,c
   986  000F4C  D009               	goto	l2059
   987                           
   988                           ;doprnt.c: 540: {
   989                           ;doprnt.c: 541: ((*sp++ = (c)));
   990  000F4E  C00D  FFD9         	movff	sprintf@sp,fsr2l
   991  000F52  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   992  000F56  C023  FFDF         	movff	sprintf@c,indf2
   993  000F5A  4A0D               	infsnz	sprintf@sp,f,c
   994  000F5C  2A0E               	incf	sprintf@sp+1,f,c
   995                           
   996                           ;doprnt.c: 542: continue;
   997  000F5E  D10A               	goto	l2135
   998  000F60                     l2059:
   999                           
  1000                           ;doprnt.c: 543: }
  1001                           ;doprnt.c: 546: width = 0;
  1002  000F60  0E00               	movlw	0
  1003  000F62  6E22               	movwf	sprintf@width+1,c
  1004  000F64  0E00               	movlw	0
  1005  000F66  6E21               	movwf	sprintf@width,c
  1006                           
  1007                           ;doprnt.c: 548: flag = 0;
  1008  000F68  0E00               	movlw	0
  1009  000F6A  6E1D               	movwf	sprintf@flag,c
  1010                           
  1011                           ;doprnt.c: 551: switch(*f) {
  1012                           
  1013                           ;doprnt.c: 550: for(;;) {
  1014  000F6C  D005               	goto	l2065
  1015  000F6E                     l2061:
  1016                           
  1017                           ;doprnt.c: 580: flag |= 0x04;
  1018  000F6E  841D               	bsf	sprintf@flag,2,c
  1019                           
  1020                           ;doprnt.c: 581: f++;
  1021  000F70  4A0F               	infsnz	sprintf@f,f,c
  1022  000F72  2A10               	incf	sprintf@f+1,f,c
  1023                           
  1024                           ;doprnt.c: 582: continue;
  1025  000F74  D001               	goto	l2065
  1026                           
  1027                           ;doprnt.c: 584: }
  1028  000F76  D00B               	goto	l2067
  1029  000F78                     l2065:
  1030  000F78  C00F  FFF6         	movff	sprintf@f,tblptrl
  1031  000F7C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1032  000F80                     	if	0	;tblptru may be non-zero
  1033  000F80                     	endif
  1034  000F80                     	if	0	;tblptru may be non-zero
  1035  000F80                     	endif
  1036  000F80  0008               	tblrd		*
  1037  000F82  50F5               	movf	tablat,w,c
  1038                           
  1039                           ; Switch size 1, requested type "space"
  1040                           ; Number of cases is 1, Range of values is 48 to 48
  1041                           ; switch strategies available:
  1042                           ; Name         Instructions Cycles
  1043                           ; simple_byte            4     3 (average)
  1044                           ;	Chosen strategy is simple_byte
  1045  000F84  0A30               	xorlw	48	; case 48
  1046  000F86  B4D8               	btfsc	status,2,c
  1047  000F88  D7F2               	goto	l2061
  1048                           
  1049                           ;doprnt.c: 585: break;
  1050  000F8A  D001               	goto	l2067
  1051                           
  1052                           ;doprnt.c: 586: }
  1053  000F8C  D7F5               	goto	l2065
  1054  000F8E                     l2067:
  1055                           
  1056                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1057  000F8E  C00F  FFF6         	movff	sprintf@f,tblptrl
  1058  000F92  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1059  000F96                     	if	0	;tblptru may be non-zero
  1060  000F96                     	endif
  1061  000F96                     	if	0	;tblptru may be non-zero
  1062  000F96                     	endif
  1063  000F96  0008               	tblrd		*
  1064  000F98  50F5               	movf	tablat,w,c
  1065  000F9A  EC18  F00E         	call	_isdigit
  1066  000F9E  A0D8               	btfss	status,0,c
  1067  000FA0  D03A               	goto	l2083
  1068                           
  1069                           ;doprnt.c: 598: width = 0;
  1070  000FA2  0E00               	movlw	0
  1071  000FA4  6E22               	movwf	sprintf@width+1,c
  1072  000FA6  0E00               	movlw	0
  1073  000FA8  6E21               	movwf	sprintf@width,c
  1074  000FAA  D000               	goto	l2071
  1075  000FAC                     l2071:
  1076                           
  1077                           ;doprnt.c: 600: width *= 10;
  1078  000FAC  C021  F001         	movff	sprintf@width,___wmul@multiplier
  1079  000FB0  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1080  000FB4  0E00               	movlw	0
  1081  000FB6  6E04               	movwf	___wmul@multiplicand+1,c
  1082  000FB8  0E0A               	movlw	10
  1083  000FBA  6E03               	movwf	___wmul@multiplicand,c
  1084  000FBC  ECF2  F00D         	call	___wmul	;wreg free
  1085  000FC0  C001  F021         	movff	?___wmul,sprintf@width
  1086  000FC4  C002  F022         	movff	?___wmul+1,sprintf@width+1
  1087                           
  1088                           ;doprnt.c: 601: width += *f++ - '0';
  1089  000FC8  0ED0               	movlw	208
  1090  000FCA  6E17               	movwf	??_sprintf& (0+255),c
  1091  000FCC  0EFF               	movlw	255
  1092  000FCE  6E18               	movwf	(??_sprintf+1)& (0+255),c
  1093  000FD0  C00F  FFF6         	movff	sprintf@f,tblptrl
  1094  000FD4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1095  000FD8                     	if	0	;tblptru may be non-zero
  1096  000FD8                     	endif
  1097  000FD8                     	if	0	;tblptru may be non-zero
  1098  000FD8                     	endif
  1099  000FD8  0008               	tblrd		*
  1100  000FDA  50F5               	movf	tablat,w,c
  1101  000FDC  6E19               	movwf	(??_sprintf+2)& (0+255),c
  1102  000FDE  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  1103  000FE0  5017               	movf	??_sprintf,w,c
  1104  000FE2  2619               	addwf	??_sprintf+2,f,c
  1105  000FE4  5018               	movf	??_sprintf+1,w,c
  1106  000FE6  221A               	addwfc	??_sprintf+3,f,c
  1107  000FE8  5019               	movf	??_sprintf+2,w,c
  1108  000FEA  2621               	addwf	sprintf@width,f,c
  1109  000FEC  501A               	movf	??_sprintf+3,w,c
  1110  000FEE  2222               	addwfc	sprintf@width+1,f,c
  1111  000FF0  4A0F               	infsnz	sprintf@f,f,c
  1112  000FF2  2A10               	incf	sprintf@f+1,f,c
  1113                           
  1114                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1115  000FF4  C00F  FFF6         	movff	sprintf@f,tblptrl
  1116  000FF8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1117  000FFC                     	if	0	;tblptru may be non-zero
  1118  000FFC                     	endif
  1119  000FFC                     	if	0	;tblptru may be non-zero
  1120  000FFC                     	endif
  1121  000FFC  0008               	tblrd		*
  1122  000FFE  50F5               	movf	tablat,w,c
  1123  001000  EC18  F00E         	call	_isdigit
  1124  001004  A0D8               	btfss	status,0,c
  1125  001006  D007               	goto	l2083
  1126  001008  D7D1               	goto	l2071
  1127                           
  1128                           ;doprnt.c: 608: }
  1129                           ;doprnt.c: 635: switch(c = *f++) {
  1130  00100A  D005               	goto	l2083
  1131                           
  1132                           ;doprnt.c: 638: goto alldone;
  1133                           
  1134                           ;doprnt.c: 637: case 0:
  1135  00100C  D0C1               	goto	l2137
  1136                           
  1137                           ;doprnt.c: 813: continue;
  1138                           
  1139                           ;doprnt.c: 802: default:
  1140  00100E  D0B2               	goto	l2135
  1141  001010                     l2079:
  1142                           
  1143                           ;doprnt.c: 818: flag |= 0xC0;
  1144  001010  0EC0               	movlw	192
  1145  001012  121D               	iorwf	sprintf@flag,f,c
  1146                           
  1147                           ;doprnt.c: 822: }
  1148                           
  1149                           ;doprnt.c: 819: break;
  1150  001014  D011               	goto	l2085
  1151  001016                     l2083:
  1152  001016  C00F  FFF6         	movff	sprintf@f,tblptrl
  1153  00101A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1154  00101E  4A0F               	infsnz	sprintf@f,f,c
  1155  001020  2A10               	incf	sprintf@f+1,f,c
  1156  001022                     	if	0	;tblptru may be non-zero
  1157  001022                     	endif
  1158  001022                     	if	0	;tblptru may be non-zero
  1159  001022                     	endif
  1160  001022  0008               	tblrd		*
  1161  001024  CFF5 F023          	movff	tablat,sprintf@c
  1162  001028  5023               	movf	sprintf@c,w,c
  1163                           
  1164                           ; Switch size 1, requested type "space"
  1165                           ; Number of cases is 2, Range of values is 0 to 117
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte            7     4 (average)
  1169                           ;	Chosen strategy is simple_byte
  1170  00102A  0A00               	xorlw	0	; case 0
  1171  00102C  B4D8               	btfsc	status,2,c
  1172  00102E  D0B0               	goto	l2137
  1173  001030  0A75               	xorlw	117	; case 117
  1174  001032  B4D8               	btfsc	status,2,c
  1175  001034  D7ED               	goto	l2079
  1176  001036  D09E               	goto	l2135
  1177  001038                     l2085:
  1178                           
  1179                           ;doprnt.c: 1273: {
  1180                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1181  001038  C01B  FFD9         	movff	sprintf@ap,fsr2l
  1182  00103C  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  1183  001040  CFDE F01E          	movff	postinc2,sprintf@val
  1184  001044  CFDD F01F          	movff	postdec2,sprintf@val+1
  1185  001048  0E02               	movlw	2
  1186  00104A  261B               	addwf	sprintf@ap,f,c
  1187  00104C  0E00               	movlw	0
  1188  00104E  221C               	addwfc	sprintf@ap+1,f,c
  1189                           
  1190                           ;doprnt.c: 1287: }
  1191                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1192  001050  0E01               	movlw	1
  1193  001052  6E23               	movwf	sprintf@c,c
  1194  001054                     l2091:
  1195  001054  0E05               	movlw	5
  1196  001056  1823               	xorwf	sprintf@c,w,c
  1197  001058  B4D8               	btfsc	status,2,c
  1198  00105A  D016               	goto	l2103
  1199  00105C  D001               	goto	l2095
  1200  00105E  D014               	goto	l2103
  1201  001060                     l2095:
  1202                           
  1203                           ;doprnt.c: 1306: if(val < dpowers[c])
  1204  001060  5023               	movf	sprintf@c,w,c
  1205  001062  0D02               	mullw	2
  1206  001064  0E01               	movlw	low _dpowers
  1207  001066  24F3               	addwf	prodl,w,c
  1208  001068  6EF6               	movwf	tblptrl,c
  1209  00106A  0E0F               	movlw	high _dpowers
  1210  00106C  20F4               	addwfc	prodh,w,c
  1211  00106E  6EF7               	movwf	tblptrh,c
  1212  001070                     	if	0	;There are less than 3 active tblptr bytes
  1213  001070                     	endif
  1214  001070  0009               	tblrd		*+
  1215  001072  50F5               	movf	tablat,w,c
  1216  001074  5C1E               	subwf	sprintf@val,w,c
  1217  001076  0009               	tblrd		*+
  1218  001078  50F5               	movf	tablat,w,c
  1219  00107A  581F               	subwfb	sprintf@val+1,w,c
  1220  00107C  A0D8               	btfss	status,0,c
  1221  00107E  D004               	goto	l2103
  1222  001080  D001               	goto	l2099
  1223                           
  1224                           ;doprnt.c: 1307: break;
  1225  001082  D002               	goto	l2103
  1226  001084                     l2099:
  1227  001084  2A23               	incf	sprintf@c,f,c
  1228  001086  D7E6               	goto	l2091
  1229  001088                     l2103:
  1230                           
  1231                           ;doprnt.c: 1381: if(width > c)
  1232  001088  0E80               	movlw	128
  1233  00108A  BE23               	btfsc	sprintf@c,7,c
  1234  00108C  0E7F               	movlw	127
  1235  00108E  6E17               	movwf	??_sprintf& (0+255),c
  1236  001090  5021               	movf	sprintf@width,w,c
  1237  001092  5C23               	subwf	sprintf@c,w,c
  1238  001094  5022               	movf	sprintf@width+1,w,c
  1239  001096  0A80               	xorlw	128
  1240  001098  5817               	subwfb	??_sprintf& (0+255),w,c
  1241  00109A  B0D8               	btfsc	status,0,c
  1242  00109C  D007               	goto	l2107
  1243                           
  1244                           ;doprnt.c: 1382: width -= c;
  1245  00109E  5023               	movf	sprintf@c,w,c
  1246  0010A0  5E21               	subwf	sprintf@width,f,c
  1247  0010A2  0E00               	movlw	0
  1248  0010A4  BE23               	btfsc	sprintf@c,7,c
  1249  0010A6  0EFF               	movlw	255
  1250  0010A8  5A22               	subwfb	sprintf@width+1,f,c
  1251  0010AA  D005               	goto	l2109
  1252  0010AC                     l2107:
  1253                           
  1254                           ;doprnt.c: 1383: else
  1255                           ;doprnt.c: 1384: width = 0;
  1256  0010AC  0E00               	movlw	0
  1257  0010AE  6E22               	movwf	sprintf@width+1,c
  1258  0010B0  0E00               	movlw	0
  1259  0010B2  6E21               	movwf	sprintf@width,c
  1260  0010B4  D000               	goto	l2109
  1261  0010B6                     l2109:
  1262                           
  1263                           ;doprnt.c: 1387: if(flag & 0x04) {
  1264  0010B6  A41D               	btfss	sprintf@flag,2,c
  1265  0010B8  D015               	goto	l2119
  1266                           
  1267                           ;doprnt.c: 1415: if(width)
  1268  0010BA  5021               	movf	sprintf@width,w,c
  1269  0010BC  1022               	iorwf	sprintf@width+1,w,c
  1270  0010BE  B4D8               	btfsc	status,2,c
  1271  0010C0  D026               	goto	l248
  1272  0010C2                     l2113:
  1273                           
  1274                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1275  0010C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1276  0010C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1277  0010CA  0E30               	movlw	48
  1278  0010CC  6EDF               	movwf	indf2,c
  1279  0010CE  4A0D               	infsnz	sprintf@sp,f,c
  1280  0010D0  2A0E               	incf	sprintf@sp+1,f,c
  1281                           
  1282                           ;doprnt.c: 1418: while(--width);
  1283  0010D2  0621               	decf	sprintf@width,f,c
  1284  0010D4  A0D8               	btfss	status,0,c
  1285  0010D6  0622               	decf	sprintf@width+1,f,c
  1286  0010D8  5021               	movf	sprintf@width,w,c
  1287  0010DA  1022               	iorwf	sprintf@width+1,w,c
  1288  0010DC  B4D8               	btfsc	status,2,c
  1289  0010DE  D017               	goto	l248
  1290  0010E0  D7F0               	goto	l2113
  1291                           
  1292                           ;doprnt.c: 1420: } else
  1293  0010E2  D015               	goto	l248
  1294  0010E4                     l2119:
  1295                           
  1296                           ;doprnt.c: 1422: {
  1297                           ;doprnt.c: 1424: if(width
  1298                           ;doprnt.c: 1428: )
  1299  0010E4  5021               	movf	sprintf@width,w,c
  1300  0010E6  1022               	iorwf	sprintf@width+1,w,c
  1301  0010E8  B4D8               	btfsc	status,2,c
  1302  0010EA  D011               	goto	l248
  1303  0010EC                     l2121:
  1304                           
  1305                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1306  0010EC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1307  0010F0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1308  0010F4  0E20               	movlw	32
  1309  0010F6  6EDF               	movwf	indf2,c
  1310  0010F8  4A0D               	infsnz	sprintf@sp,f,c
  1311  0010FA  2A0E               	incf	sprintf@sp+1,f,c
  1312                           
  1313                           ;doprnt.c: 1431: while(--width);
  1314  0010FC  0621               	decf	sprintf@width,f,c
  1315  0010FE  A0D8               	btfss	status,0,c
  1316  001100  0622               	decf	sprintf@width+1,f,c
  1317  001102  5021               	movf	sprintf@width,w,c
  1318  001104  1022               	iorwf	sprintf@width+1,w,c
  1319  001106  B4D8               	btfsc	status,2,c
  1320  001108  D002               	goto	l248
  1321  00110A  D7F0               	goto	l2121
  1322  00110C  D000               	goto	l248
  1323  00110E                     l248:
  1324                           
  1325                           ;doprnt.c: 1469: }
  1326                           ;doprnt.c: 1472: prec = c;
  1327  00110E  C023  F020         	movff	sprintf@c,sprintf@prec
  1328                           
  1329                           ;doprnt.c: 1474: while(prec--) {
  1330  001112  D02A               	goto	l2133
  1331  001114                     l2127:
  1332                           
  1333                           ;doprnt.c: 1478: {
  1334                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1335  001114  5020               	movf	sprintf@prec,w,c
  1336  001116  0D02               	mullw	2
  1337  001118  0E01               	movlw	low _dpowers
  1338  00111A  24F3               	addwf	prodl,w,c
  1339  00111C  6EF6               	movwf	tblptrl,c
  1340  00111E  0E0F               	movlw	high _dpowers
  1341  001120  20F4               	addwfc	prodh,w,c
  1342  001122  6EF7               	movwf	tblptrh,c
  1343  001124                     	if	0	;There are less than 3 active tblptr bytes
  1344  001124                     	endif
  1345  001124  0009               	tblrd		*+
  1346  001126  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1347  00112A  000A               	tblrd		*-
  1348  00112C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1349  001130  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  1350  001134  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1351  001138  ECD2  F00C         	call	___lwdiv	;wreg free
  1352  00113C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1353  001140  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1354  001144  0E00               	movlw	0
  1355  001146  6E0B               	movwf	___lwmod@divisor+1,c
  1356  001148  0E0A               	movlw	10
  1357  00114A  6E0A               	movwf	___lwmod@divisor,c
  1358  00114C  EC2A  F00D         	call	___lwmod	;wreg free
  1359  001150  5008               	movf	?___lwmod,w,c
  1360  001152  0F30               	addlw	48
  1361  001154  6E23               	movwf	sprintf@c,c
  1362                           
  1363                           ;doprnt.c: 1523: }
  1364                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1365  001156  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1366  00115A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1367  00115E  C023  FFDF         	movff	sprintf@c,indf2
  1368  001162  4A0D               	infsnz	sprintf@sp,f,c
  1369  001164  2A0E               	incf	sprintf@sp+1,f,c
  1370  001166  D000               	goto	l2133
  1371  001168                     l2133:
  1372  001168  0620               	decf	sprintf@prec,f,c
  1373  00116A  2820               	incf	sprintf@prec,w,c
  1374  00116C  B4D8               	btfsc	status,2,c
  1375  00116E  D002               	goto	l2135
  1376  001170  D7D1               	goto	l2127
  1377  001172  D000               	goto	l2135
  1378  001174                     l2135:
  1379  001174  C00F  FFF6         	movff	sprintf@f,tblptrl
  1380  001178  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1381  00117C  4A0F               	infsnz	sprintf@f,f,c
  1382  00117E  2A10               	incf	sprintf@f+1,f,c
  1383  001180                     	if	0	;tblptru may be non-zero
  1384  001180                     	endif
  1385  001180                     	if	0	;tblptru may be non-zero
  1386  001180                     	endif
  1387  001180  0008               	tblrd		*
  1388  001182  CFF5 F023          	movff	tablat,sprintf@c
  1389  001186  5023               	movf	sprintf@c,w,c
  1390  001188  B4D8               	btfsc	status,2,c
  1391  00118A  D002               	goto	l2137
  1392  00118C  D6DC               	goto	l2053
  1393  00118E  D000               	goto	l2137
  1394  001190                     l2137:
  1395                           
  1396                           ;doprnt.c: 1538: *sp = 0;
  1397  001190  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1398  001194  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1399  001198  0E00               	movlw	0
  1400  00119A  6EDF               	movwf	indf2,c
  1401  00119C  0012               	return	
  1402                           
  1403                           ;doprnt.c: 1540: return 0;
  1404                           ;	Return value of _sprintf is never used
  1405  00119E  0012               	return		;funcret
  1406  0011A0                     __end_of_sprintf:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           prodh	equ	0xFF4
  1413                           prodl	equ	0xFF3
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           fsr1l	equ	0xFE1
  1418                           indf2	equ	0xFDF
  1419                           postinc2	equ	0xFDE
  1420                           postdec2	equ	0xFDD
  1421                           fsr2h	equ	0xFDA
  1422                           fsr2l	equ	0xFD9
  1423                           status	equ	0xFD8
  1424                           
  1425 ;; *************** function _isdigit *****************
  1426 ;; Defined at:
  1427 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  c               1    wreg     unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  c               1    2[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;		None               void
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1444 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1445 ;;Total ram usage:        3 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_sprintf
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text3
  1455  001C30                     __ptext3:
  1456                           	opt stack 0
  1457  001C30                     _isdigit:
  1458                           	opt stack 28
  1459                           
  1460                           ;incstack = 0
  1461                           ;isdigit@c stored from wreg
  1462  001C30  6E03               	movwf	isdigit@c,c
  1463  001C32  0E00               	movlw	0
  1464  001C34  6E02               	movwf	_isdigit$1814,c
  1465  001C36  0E3A               	movlw	58
  1466  001C38  6003               	cpfslt	isdigit@c,c
  1467  001C3A  D006               	goto	l1841
  1468  001C3C  0E2F               	movlw	47
  1469  001C3E  6403               	cpfsgt	isdigit@c,c
  1470  001C40  D003               	goto	l1841
  1471  001C42  0E01               	movlw	1
  1472  001C44  6E02               	movwf	_isdigit$1814,c
  1473  001C46  D000               	goto	l1841
  1474  001C48                     l1841:
  1475  001C48  C002  F001         	movff	_isdigit$1814,??_isdigit
  1476  001C4C  3001               	rrcf	??_isdigit,w,c
  1477  001C4E  0012               	return	
  1478  001C50  0012               	return		;funcret
  1479  001C52                     __end_of_isdigit:
  1480                           	opt stack 0
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           postdec1	equ	0xFE5
  1490                           fsr1l	equ	0xFE1
  1491                           indf2	equ	0xFDF
  1492                           postinc2	equ	0xFDE
  1493                           postdec2	equ	0xFDD
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8
  1497                           
  1498 ;; *************** function ___wmul *****************
  1499 ;; Defined at:
  1500 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  multiplier      2    0[COMRAM] unsigned int 
  1503 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  product         2    4[COMRAM] unsigned int 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  2    0[COMRAM] unsigned int 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, prodl, prodh
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1518 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1519 ;;Total ram usage:        6 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_sprintf
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text4
  1529  001BE4                     __ptext4:
  1530                           	opt stack 0
  1531  001BE4                     ___wmul:
  1532                           	opt stack 28
  1533                           
  1534                           ;incstack = 0
  1535  001BE4  5001               	movf	___wmul@multiplier,w,c
  1536  001BE6  0203               	mulwf	___wmul@multiplicand,c
  1537  001BE8  CFF3 F005          	movff	prodl,___wmul@product
  1538  001BEC  CFF4 F006          	movff	prodh,___wmul@product+1
  1539  001BF0  5001               	movf	___wmul@multiplier,w,c
  1540  001BF2  0204               	mulwf	___wmul@multiplicand+1,c
  1541  001BF4  50F3               	movf	prodl,w,c
  1542  001BF6  2606               	addwf	___wmul@product+1,f,c
  1543  001BF8  5002               	movf	___wmul@multiplier+1,w,c
  1544  001BFA  0203               	mulwf	___wmul@multiplicand,c
  1545  001BFC  50F3               	movf	prodl,w,c
  1546  001BFE  2606               	addwf	___wmul@product+1,f,c
  1547  001C00  C005  F001         	movff	___wmul@product,?___wmul
  1548  001C04  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1549  001C08  0012               	return	
  1550  001C0A  0012               	return		;funcret
  1551  001C0C                     __end_of___wmul:
  1552                           	opt stack 0
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           indf2	equ	0xFDF
  1564                           postinc2	equ	0xFDE
  1565                           postdec2	equ	0xFDD
  1566                           fsr2h	equ	0xFDA
  1567                           fsr2l	equ	0xFD9
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function ___lwmod *****************
  1571 ;; Defined at:
  1572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  dividend        2    7[COMRAM] unsigned int 
  1575 ;;  divisor         2    9[COMRAM] unsigned int 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  counter         1   11[COMRAM] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  2    7[COMRAM] unsigned int 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;Total ram usage:        5 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_sprintf
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text5
  1601  001A54                     __ptext5:
  1602                           	opt stack 0
  1603  001A54                     ___lwmod:
  1604                           	opt stack 28
  1605                           
  1606                           ;incstack = 0
  1607  001A54  500A               	movf	___lwmod@divisor,w,c
  1608  001A56  100B               	iorwf	___lwmod@divisor+1,w,c
  1609  001A58  B4D8               	btfsc	status,2,c
  1610  001A5A  D01D               	goto	l902
  1611  001A5C  0E01               	movlw	1
  1612  001A5E  6E0C               	movwf	___lwmod@counter,c
  1613  001A60  D005               	goto	l1923
  1614  001A62                     l1921:
  1615  001A62  90D8               	bcf	status,0,c
  1616  001A64  360A               	rlcf	___lwmod@divisor,f,c
  1617  001A66  360B               	rlcf	___lwmod@divisor+1,f,c
  1618  001A68  2A0C               	incf	___lwmod@counter,f,c
  1619  001A6A  D000               	goto	l1923
  1620  001A6C                     l1923:
  1621  001A6C  BE0B               	btfsc	___lwmod@divisor+1,7,c
  1622  001A6E  D002               	goto	l1925
  1623  001A70  D7F8               	goto	l1921
  1624  001A72  D000               	goto	l1925
  1625  001A74                     l1925:
  1626  001A74  500A               	movf	___lwmod@divisor,w,c
  1627  001A76  5C08               	subwf	___lwmod@dividend,w,c
  1628  001A78  500B               	movf	___lwmod@divisor+1,w,c
  1629  001A7A  5809               	subwfb	___lwmod@dividend+1,w,c
  1630  001A7C  A0D8               	btfss	status,0,c
  1631  001A7E  D005               	goto	l1929
  1632  001A80  500A               	movf	___lwmod@divisor,w,c
  1633  001A82  5E08               	subwf	___lwmod@dividend,f,c
  1634  001A84  500B               	movf	___lwmod@divisor+1,w,c
  1635  001A86  5A09               	subwfb	___lwmod@dividend+1,f,c
  1636  001A88  D000               	goto	l1929
  1637  001A8A                     l1929:
  1638  001A8A  90D8               	bcf	status,0,c
  1639  001A8C  320B               	rrcf	___lwmod@divisor+1,f,c
  1640  001A8E  320A               	rrcf	___lwmod@divisor,f,c
  1641  001A90  2E0C               	decfsz	___lwmod@counter,f,c
  1642  001A92  D7F0               	goto	l1925
  1643  001A94  D000               	goto	l902
  1644  001A96                     l902:
  1645  001A96  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1646  001A9A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1647  001A9E  0012               	return		;funcret
  1648  001AA0                     __end_of___lwmod:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           prodh	equ	0xFF4
  1655                           prodl	equ	0xFF3
  1656                           postinc0	equ	0xFEE
  1657                           wreg	equ	0xFE8
  1658                           postdec1	equ	0xFE5
  1659                           fsr1l	equ	0xFE1
  1660                           indf2	equ	0xFDF
  1661                           postinc2	equ	0xFDE
  1662                           postdec2	equ	0xFDD
  1663                           fsr2h	equ	0xFDA
  1664                           fsr2l	equ	0xFD9
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function ___lwdiv *****************
  1668 ;; Defined at:
  1669 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  dividend        2    0[COMRAM] unsigned int 
  1672 ;;  divisor         2    2[COMRAM] unsigned int 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  quotient        2    4[COMRAM] unsigned int 
  1675 ;;  counter         1    6[COMRAM] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  2    0[COMRAM] unsigned int 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1686 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1688 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1689 ;;Total ram usage:        7 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_sprintf
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text6
  1699  0019A4                     __ptext6:
  1700                           	opt stack 0
  1701  0019A4                     ___lwdiv:
  1702                           	opt stack 28
  1703                           
  1704                           ;incstack = 0
  1705  0019A4  0E00               	movlw	0
  1706  0019A6  6E06               	movwf	___lwdiv@quotient+1,c
  1707  0019A8  0E00               	movlw	0
  1708  0019AA  6E05               	movwf	___lwdiv@quotient,c
  1709  0019AC  5003               	movf	___lwdiv@divisor,w,c
  1710  0019AE  1004               	iorwf	___lwdiv@divisor+1,w,c
  1711  0019B0  B4D8               	btfsc	status,2,c
  1712  0019B2  D021               	goto	l892
  1713  0019B4  0E01               	movlw	1
  1714  0019B6  6E07               	movwf	___lwdiv@counter,c
  1715  0019B8  D005               	goto	l1903
  1716  0019BA                     l1901:
  1717  0019BA  90D8               	bcf	status,0,c
  1718  0019BC  3603               	rlcf	___lwdiv@divisor,f,c
  1719  0019BE  3604               	rlcf	___lwdiv@divisor+1,f,c
  1720  0019C0  2A07               	incf	___lwdiv@counter,f,c
  1721  0019C2  D000               	goto	l1903
  1722  0019C4                     l1903:
  1723  0019C4  BE04               	btfsc	___lwdiv@divisor+1,7,c
  1724  0019C6  D002               	goto	l1905
  1725  0019C8  D7F8               	goto	l1901
  1726  0019CA  D000               	goto	l1905
  1727  0019CC                     l1905:
  1728  0019CC  90D8               	bcf	status,0,c
  1729  0019CE  3605               	rlcf	___lwdiv@quotient,f,c
  1730  0019D0  3606               	rlcf	___lwdiv@quotient+1,f,c
  1731  0019D2  5003               	movf	___lwdiv@divisor,w,c
  1732  0019D4  5C01               	subwf	___lwdiv@dividend,w,c
  1733  0019D6  5004               	movf	___lwdiv@divisor+1,w,c
  1734  0019D8  5802               	subwfb	___lwdiv@dividend+1,w,c
  1735  0019DA  A0D8               	btfss	status,0,c
  1736  0019DC  D006               	goto	l1913
  1737  0019DE  5003               	movf	___lwdiv@divisor,w,c
  1738  0019E0  5E01               	subwf	___lwdiv@dividend,f,c
  1739  0019E2  5004               	movf	___lwdiv@divisor+1,w,c
  1740  0019E4  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1741  0019E6  8005               	bsf	___lwdiv@quotient,0,c
  1742  0019E8  D000               	goto	l1913
  1743  0019EA                     l1913:
  1744  0019EA  90D8               	bcf	status,0,c
  1745  0019EC  3204               	rrcf	___lwdiv@divisor+1,f,c
  1746  0019EE  3203               	rrcf	___lwdiv@divisor,f,c
  1747  0019F0  2E07               	decfsz	___lwdiv@counter,f,c
  1748  0019F2  D7EC               	goto	l1905
  1749  0019F4  D000               	goto	l892
  1750  0019F6                     l892:
  1751  0019F6  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1752  0019FA  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1753  0019FE  0012               	return		;funcret
  1754  001A00                     __end_of___lwdiv:
  1755                           	opt stack 0
  1756                           tblptru	equ	0xFF8
  1757                           tblptrh	equ	0xFF7
  1758                           tblptrl	equ	0xFF6
  1759                           tablat	equ	0xFF5
  1760                           prodh	equ	0xFF4
  1761                           prodl	equ	0xFF3
  1762                           postinc0	equ	0xFEE
  1763                           wreg	equ	0xFE8
  1764                           postdec1	equ	0xFE5
  1765                           fsr1l	equ	0xFE1
  1766                           indf2	equ	0xFDF
  1767                           postinc2	equ	0xFDE
  1768                           postdec2	equ	0xFDD
  1769                           fsr2h	equ	0xFDA
  1770                           fsr2l	equ	0xFD9
  1771                           status	equ	0xFD8
  1772                           
  1773 ;; *************** function _lcd_putrs *****************
  1774 ;; Defined at:
  1775 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  1778 ;;		 -> STR_5(7), STR_4(7), buffer2(20), STR_1(7), 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;		None               void
  1783 ;; Registers used:
  1784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    4
  1797 ;; This function calls:
  1798 ;;		_lcd_putc
  1799 ;; This function is called by:
  1800 ;;		_caratula
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text7
  1805  001A00                     __ptext7:
  1806                           	opt stack 0
  1807  001A00                     _lcd_putrs:
  1808                           	opt stack 25
  1809                           
  1810                           ;unmc_lcd_216.c: 223: while(*ptr){
  1811                           
  1812                           ;incstack = 0
  1813  001A00  D015               	goto	l2049
  1814  001A02                     l2045:
  1815                           
  1816                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  1817  001A02  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  1818  001A06  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  1819  001A0A  6AF8               	clrf	tblptru,c
  1820  001A0C  0E0E               	movlw	(high __ramtop+-1)
  1821  001A0E  64F7               	cpfsgt	tblptrh,c
  1822  001A10  D003               	bra	u1287
  1823  001A12  0008               	tblrd		*
  1824  001A14  50F5               	movf	tablat,w,c
  1825  001A16  D005               	bra	u1280
  1826  001A18                     u1287:
  1827  001A18  CFF6 FFE9          	movff	tblptrl,fsr0l
  1828  001A1C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1829  001A20  50EF               	movf	indf0,w,c
  1830  001A22                     u1280:
  1831  001A22  EC50  F00D         	call	_lcd_putc
  1832  001A26  4A09               	infsnz	lcd_putrs@ptr,f,c
  1833  001A28  2A0A               	incf	lcd_putrs@ptr+1,f,c
  1834  001A2A  D000               	goto	l2049
  1835  001A2C                     l2049:
  1836  001A2C  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  1837  001A30  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  1838  001A34  6AF8               	clrf	tblptru,c
  1839  001A36  0E0E               	movlw	(high __ramtop+-1)
  1840  001A38  64F7               	cpfsgt	tblptrh,c
  1841  001A3A  D003               	bra	u1297
  1842  001A3C  0008               	tblrd		*
  1843  001A3E  50F5               	movf	tablat,w,c
  1844  001A40  D005               	bra	u1290
  1845  001A42                     u1297:
  1846  001A42  CFF6 FFE9          	movff	tblptrl,fsr0l
  1847  001A46  CFF7 FFEA          	movff	tblptrh,fsr0h
  1848  001A4A  50EF               	movf	indf0,w,c
  1849  001A4C                     u1290:
  1850  001A4C  0900               	iorlw	0
  1851  001A4E  A4D8               	btfss	status,2,c
  1852  001A50  D7D8               	goto	l2045
  1853  001A52  0012               	return		;funcret
  1854  001A54                     __end_of_lcd_putrs:
  1855                           	opt stack 0
  1856                           tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           prodh	equ	0xFF4
  1861                           prodl	equ	0xFF3
  1862                           indf0	equ	0xFEF
  1863                           postinc0	equ	0xFEE
  1864                           fsr0h	equ	0xFEA
  1865                           fsr0l	equ	0xFE9
  1866                           wreg	equ	0xFE8
  1867                           postdec1	equ	0xFE5
  1868                           fsr1l	equ	0xFE1
  1869                           indf2	equ	0xFDF
  1870                           postinc2	equ	0xFDE
  1871                           postdec2	equ	0xFDD
  1872                           fsr2h	equ	0xFDA
  1873                           fsr2l	equ	0xFD9
  1874                           status	equ	0xFD8
  1875                           
  1876 ;; *************** function _lcd_putc *****************
  1877 ;; Defined at:
  1878 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  c               1    wreg     unsigned char 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  c               1    7[COMRAM] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;		None               void
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;Total ram usage:        1 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    3
  1899 ;; This function calls:
  1900 ;;		_lcd_gotoxy
  1901 ;;		_lcd_send_byte
  1902 ;; This function is called by:
  1903 ;;		_lcd_putrs
  1904 ;;		_lcd_puts
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text8
  1909  001AA0                     __ptext8:
  1910                           	opt stack 0
  1911  001AA0                     _lcd_putc:
  1912                           	opt stack 25
  1913                           
  1914                           ;incstack = 0
  1915                           ;lcd_putc@c stored from wreg
  1916  001AA0  6E08               	movwf	lcd_putc@c,c
  1917                           
  1918                           ;unmc_lcd_216.c: 173: switch(c){
  1919  001AA2  D018               	goto	l1831
  1920  001AA4                     l1821:
  1921                           
  1922                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  1923  001AA4  0E01               	movlw	1
  1924  001AA6  6E03               	movwf	lcd_send_byte@n,c
  1925  001AA8  0E00               	movlw	0
  1926  001AAA  ECD9  F00D         	call	_lcd_send_byte
  1927                           
  1928                           ;unmc_lcd_216.c: 176: break;
  1929  001AAE  0012               	return	
  1930  001AB0                     l1823:
  1931                           
  1932                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  1933  001AB0  0E02               	movlw	2
  1934  001AB2  6E05               	movwf	lcd_gotoxy@y,c
  1935  001AB4  0E01               	movlw	1
  1936  001AB6  EC06  F00E         	call	_lcd_gotoxy
  1937                           
  1938                           ;unmc_lcd_216.c: 179: break;
  1939  001ABA  0012               	return	
  1940  001ABC                     l1825:
  1941                           
  1942                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  1943  001ABC  0E10               	movlw	16
  1944  001ABE  6E03               	movwf	lcd_send_byte@n,c
  1945  001AC0  0E00               	movlw	0
  1946  001AC2  ECD9  F00D         	call	_lcd_send_byte
  1947                           
  1948                           ;unmc_lcd_216.c: 182: break;
  1949  001AC6  0012               	return	
  1950  001AC8                     l1827:
  1951                           
  1952                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  1953  001AC8  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  1954  001ACC  0E01               	movlw	1
  1955  001ACE  ECD9  F00D         	call	_lcd_send_byte
  1956                           
  1957                           ;unmc_lcd_216.c: 186: }
  1958                           
  1959                           ;unmc_lcd_216.c: 185: break;
  1960  001AD2  0012               	return	
  1961  001AD4                     l1831:
  1962  001AD4  5008               	movf	lcd_putc@c,w,c
  1963                           
  1964                           ; Switch size 1, requested type "space"
  1965                           ; Number of cases is 3, Range of values is 8 to 12
  1966                           ; switch strategies available:
  1967                           ; Name         Instructions Cycles
  1968                           ; simple_byte           10     6 (average)
  1969                           ;	Chosen strategy is simple_byte
  1970  001AD6  0A08               	xorlw	8	; case 8
  1971  001AD8  B4D8               	btfsc	status,2,c
  1972  001ADA  D7F0               	goto	l1825
  1973  001ADC  0A02               	xorlw	2	; case 10
  1974  001ADE  B4D8               	btfsc	status,2,c
  1975  001AE0  D7E7               	goto	l1823
  1976  001AE2  0A06               	xorlw	6	; case 12
  1977  001AE4  B4D8               	btfsc	status,2,c
  1978  001AE6  D7DE               	goto	l1821
  1979  001AE8  D7EF               	goto	l1827
  1980  001AEA  0012               	return		;funcret
  1981  001AEC                     __end_of_lcd_putc:
  1982                           	opt stack 0
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           prodh	equ	0xFF4
  1988                           prodl	equ	0xFF3
  1989                           indf0	equ	0xFEF
  1990                           postinc0	equ	0xFEE
  1991                           fsr0h	equ	0xFEA
  1992                           fsr0l	equ	0xFE9
  1993                           wreg	equ	0xFE8
  1994                           postdec1	equ	0xFE5
  1995                           fsr1l	equ	0xFE1
  1996                           indf2	equ	0xFDF
  1997                           postinc2	equ	0xFDE
  1998                           postdec2	equ	0xFDD
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _lcd_gotoxy *****************
  2004 ;; Defined at:
  2005 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  x               1    wreg     unsigned char 
  2008 ;;  y               1    4[COMRAM] unsigned char 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  x               1    5[COMRAM] unsigned char 
  2011 ;;  address         1    6[COMRAM] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;		None               void
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2024 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;Total ram usage:        3 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    2
  2028 ;; This function calls:
  2029 ;;		_lcd_send_byte
  2030 ;; This function is called by:
  2031 ;;		_caratula
  2032 ;;		_lcd_putc
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text9
  2037  001C0C                     __ptext9:
  2038                           	opt stack 0
  2039  001C0C                     _lcd_gotoxy:
  2040                           	opt stack 25
  2041                           
  2042                           ;incstack = 0
  2043                           ;lcd_gotoxy@x stored from wreg
  2044  001C0C  6E06               	movwf	lcd_gotoxy@x,c
  2045                           
  2046                           ;unmc_lcd_216.c: 159: int8 address;
  2047                           ;unmc_lcd_216.c: 161: if(y != 1)
  2048  001C0E  0405               	decf	lcd_gotoxy@y,w,c
  2049  001C10  B4D8               	btfsc	status,2,c
  2050  001C12  D002               	goto	l1677
  2051                           
  2052                           ;unmc_lcd_216.c: 162: address = 0x40;
  2053  001C14  0E40               	movlw	64
  2054  001C16  D001               	goto	L1
  2055  001C18                     l1677:
  2056                           
  2057                           ;unmc_lcd_216.c: 163: else
  2058                           ;unmc_lcd_216.c: 164: address=0;
  2059  001C18  0E00               	movlw	0
  2060  001C1A                     L1:
  2061  001C1A  6E07               	movwf	lcd_gotoxy@address,c
  2062  001C1C  D000               	goto	l1679
  2063  001C1E                     l1679:
  2064                           
  2065                           ;unmc_lcd_216.c: 166: address += x-1;
  2066  001C1E  0406               	decf	lcd_gotoxy@x,w,c
  2067  001C20  2607               	addwf	lcd_gotoxy@address,f,c
  2068                           
  2069                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2070  001C22  5007               	movf	lcd_gotoxy@address,w,c
  2071  001C24  0980               	iorlw	128
  2072  001C26  6E03               	movwf	lcd_send_byte@n,c
  2073  001C28  0E00               	movlw	0
  2074  001C2A  ECD9  F00D         	call	_lcd_send_byte
  2075  001C2E  0012               	return		;funcret
  2076  001C30                     __end_of_lcd_gotoxy:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           prodh	equ	0xFF4
  2083                           prodl	equ	0xFF3
  2084                           indf0	equ	0xFEF
  2085                           postinc0	equ	0xFEE
  2086                           fsr0h	equ	0xFEA
  2087                           fsr0l	equ	0xFE9
  2088                           wreg	equ	0xFE8
  2089                           postdec1	equ	0xFE5
  2090                           fsr1l	equ	0xFE1
  2091                           indf2	equ	0xFDF
  2092                           postinc2	equ	0xFDE
  2093                           postdec2	equ	0xFDD
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8
  2097                           
  2098 ;; *************** function _Setup *****************
  2099 ;; Defined at:
  2100 ;;		line 67 in file "main.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    3
  2121 ;; This function calls:
  2122 ;;		_Write_RTC
  2123 ;;		_lcd_comand
  2124 ;;		_lcd_init
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text10
  2131  001AEC                     __ptext10:
  2132                           	opt stack 0
  2133  001AEC                     _Setup:
  2134                           	opt stack 27
  2135                           
  2136                           ;main.c: 69: OSCTUNEbits.INTSRC=1;
  2137                           
  2138                           ;incstack = 0
  2139  001AEC  8E9B               	bsf	3995,7,c	;volatile
  2140                           
  2141                           ;main.c: 70: OSCTUNEbits.PLLEN=0;
  2142  001AEE  9C9B               	bcf	3995,6,c	;volatile
  2143                           
  2144                           ;main.c: 71: OSCCONbits.IRCF0=1;
  2145  001AF0  88D3               	bsf	4051,4,c	;volatile
  2146                           
  2147                           ;main.c: 72: OSCCONbits.IRCF1=1;
  2148  001AF2  8AD3               	bsf	4051,5,c	;volatile
  2149                           
  2150                           ;main.c: 73: OSCCONbits.IRCF2=1;
  2151  001AF4  8CD3               	bsf	4051,6,c	;volatile
  2152                           
  2153                           ;main.c: 74: OSCCONbits.SCS0=0;
  2154  001AF6  90D3               	bcf	4051,0,c	;volatile
  2155                           
  2156                           ;main.c: 75: OSCCONbits.SCS1=0;
  2157  001AF8  92D3               	bcf	4051,1,c	;volatile
  2158                           
  2159                           ;main.c: 76: TRISA = 0b11111111;
  2160  001AFA  6892               	setf	3986,c	;volatile
  2161                           
  2162                           ;main.c: 77: TRISB = 0;
  2163  001AFC  0E00               	movlw	0
  2164  001AFE  6E93               	movwf	3987,c	;volatile
  2165                           
  2166                           ;main.c: 78: TRISC = 0b00000111;
  2167  001B00  0E07               	movlw	7
  2168  001B02  6E94               	movwf	3988,c	;volatile
  2169                           
  2170                           ;main.c: 82: ANCON0=0b11111111;
  2171  001B04  010F               	movlb	15	; () banked
  2172  001B06  6948               	setf	72,b	;volatile
  2173                           
  2174                           ;main.c: 83: ANCON0=0b10010111;
  2175  001B08  0E97               	movlw	151
  2176  001B0A  010F               	movlb	15	; () banked
  2177  001B0C  6F48               	movwf	72,b	;volatile
  2178                           
  2179                           ;main.c: 84: ADCON0=0b00101101;
  2180  001B0E  0E2D               	movlw	45
  2181  001B10  6EC2               	movwf	4034,c	;volatile
  2182                           
  2183                           ;main.c: 85: ADCON1=0b00010000;
  2184  001B12  0E10               	movlw	16
  2185  001B14  6EC1               	movwf	4033,c	;volatile
  2186                           
  2187                           ; BSR set to: 15
  2188                           ;main.c: 86: RTCCFGbits.RTCEN=1;
  2189  001B16  010F               	movlb	15	; () banked
  2190  001B18  8F3F               	bsf	63,7,b	;volatile
  2191                           
  2192                           ; BSR set to: 15
  2193                           ;main.c: 87: RTCCFGbits.RTCWREN=1;
  2194  001B1A  010F               	movlb	15	; () banked
  2195  001B1C  8B3F               	bsf	63,5,b	;volatile
  2196                           
  2197                           ; BSR set to: 15
  2198                           ;main.c: 88: T1CONbits.T1OSCEN=1;
  2199  001B1E  86CD               	bsf	4045,3,c	;volatile
  2200                           
  2201                           ; BSR set to: 15
  2202                           ;main.c: 89: Write_RTC();
  2203  001B20  ECD0  F008         	call	_Write_RTC	;wreg free
  2204                           
  2205                           ;main.c: 90: lcd_init();
  2206  001B24  EC20  F00C         	call	_lcd_init	;wreg free
  2207                           
  2208                           ;main.c: 91: lcd_comand(0b00001100);
  2209  001B28  0E0C               	movlw	12
  2210  001B2A  EC44  F00E         	call	_lcd_comand
  2211                           
  2212                           ;main.c: 92: LATBbits.LATB1 = 0;;
  2213  001B2E  928A               	bcf	3978,1,c	;volatile
  2214                           
  2215                           ;main.c: 93: LATBbits.LATB0 = 0;;
  2216  001B30  908A               	bcf	3978,0,c	;volatile
  2217  001B32  0012               	return		;funcret
  2218  001B34                     __end_of_Setup:
  2219                           	opt stack 0
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           prodh	equ	0xFF4
  2225                           prodl	equ	0xFF3
  2226                           indf0	equ	0xFEF
  2227                           postinc0	equ	0xFEE
  2228                           fsr0h	equ	0xFEA
  2229                           fsr0l	equ	0xFE9
  2230                           wreg	equ	0xFE8
  2231                           postdec1	equ	0xFE5
  2232                           fsr1l	equ	0xFE1
  2233                           indf2	equ	0xFDF
  2234                           postinc2	equ	0xFDE
  2235                           postdec2	equ	0xFDD
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _lcd_init *****************
  2241 ;; Defined at:
  2242 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  i               1    4[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;		None               void
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2260 ;;Total ram usage:        1 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    2
  2263 ;; This function calls:
  2264 ;;		_Delay1KTCYx
  2265 ;;		_lcd_send_byte
  2266 ;;		_lcd_send_nibble
  2267 ;; This function is called by:
  2268 ;;		_Setup
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text11
  2273  001840                     __ptext11:
  2274                           	opt stack 0
  2275  001840                     _lcd_init:
  2276                           	opt stack 27
  2277                           
  2278                           ;unmc_lcd_216.c: 120: int8 i;
  2279                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2280                           
  2281                           ;incstack = 0
  2282  001840  9693               	bcf	3987,3,c	;volatile
  2283                           
  2284                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2285  001842  9493               	bcf	3987,2,c	;volatile
  2286                           
  2287                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2288  001844  968A               	bcf	3978,3,c	;volatile
  2289                           
  2290                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2291  001846  948A               	bcf	3978,2,c	;volatile
  2292                           
  2293                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2294  001848  9893               	bcf	3987,4,c	;volatile
  2295                           
  2296                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2297  00184A  9A93               	bcf	3987,5,c	;volatile
  2298                           
  2299                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2300  00184C  9C93               	bcf	3987,6,c	;volatile
  2301                           
  2302                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2303  00184E  9E93               	bcf	3987,7,c	;volatile
  2304                           
  2305                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2306  001850  0E0A               	movlw	10
  2307  001852  EC29  F00E         	call	_Delay1KTCYx
  2308                           
  2309                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2310  001856  0E0A               	movlw	10
  2311  001858  EC29  F00E         	call	_Delay1KTCYx
  2312                           
  2313                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2314  00185C  0E0A               	movlw	10
  2315  00185E  EC29  F00E         	call	_Delay1KTCYx
  2316                           
  2317                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2318  001862  0E00               	movlw	0
  2319  001864  6E05               	movwf	lcd_init@i,c
  2320  001866                     l2147:
  2321  001866  0E02               	movlw	2
  2322  001868  6405               	cpfsgt	lcd_init@i,c
  2323  00186A  D001               	goto	l2151
  2324  00186C  D008               	goto	l2157
  2325  00186E                     l2151:
  2326                           
  2327                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2328  00186E  0E03               	movlw	3
  2329  001870  EC60  F00C         	call	_lcd_send_nibble
  2330                           
  2331                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2332  001874  0E0A               	movlw	10
  2333  001876  EC29  F00E         	call	_Delay1KTCYx
  2334  00187A  2A05               	incf	lcd_init@i,f,c
  2335  00187C  D7F4               	goto	l2147
  2336  00187E                     l2157:
  2337                           
  2338                           ;unmc_lcd_216.c: 146: }
  2339                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2340  00187E  0E02               	movlw	2
  2341  001880  EC60  F00C         	call	_lcd_send_nibble
  2342                           
  2343                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2344  001884  0E00               	movlw	0
  2345  001886  6E05               	movwf	lcd_init@i,c
  2346  001888  0E03               	movlw	3
  2347  00188A  6405               	cpfsgt	lcd_init@i,c
  2348  00188C  D002               	goto	l2165
  2349  00188E  0012               	return	
  2350  001890  0012               	return	
  2351  001892                     l2165:
  2352                           
  2353                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2354  001892  5005               	movf	lcd_init@i,w,c
  2355  001894  0D01               	mullw	1
  2356  001896  0E0B               	movlw	low _LCD_INIT_STRING
  2357  001898  24F3               	addwf	prodl,w,c
  2358  00189A  6EF6               	movwf	tblptrl,c
  2359  00189C  0E0F               	movlw	high _LCD_INIT_STRING
  2360  00189E  20F4               	addwfc	prodh,w,c
  2361  0018A0  6EF7               	movwf	tblptrh,c
  2362  0018A2                     	if	0	;There are less than 3 active tblptr bytes
  2363  0018A2                     	endif
  2364  0018A2  0008               	tblrd		*
  2365  0018A4  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2366  0018A8  0E00               	movlw	0
  2367  0018AA  ECD9  F00D         	call	_lcd_send_byte
  2368                           
  2369                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2370  0018AE  0E0A               	movlw	10
  2371  0018B0  EC29  F00E         	call	_Delay1KTCYx
  2372  0018B4  2A05               	incf	lcd_init@i,f,c
  2373  0018B6  0E03               	movlw	3
  2374  0018B8  6405               	cpfsgt	lcd_init@i,c
  2375  0018BA  D7EB               	goto	l2165
  2376  0018BC  0012               	return	
  2377  0018BE  0012               	return		;funcret
  2378  0018C0                     __end_of_lcd_init:
  2379                           	opt stack 0
  2380                           tblptru	equ	0xFF8
  2381                           tblptrh	equ	0xFF7
  2382                           tblptrl	equ	0xFF6
  2383                           tablat	equ	0xFF5
  2384                           prodh	equ	0xFF4
  2385                           prodl	equ	0xFF3
  2386                           indf0	equ	0xFEF
  2387                           postinc0	equ	0xFEE
  2388                           fsr0h	equ	0xFEA
  2389                           fsr0l	equ	0xFE9
  2390                           wreg	equ	0xFE8
  2391                           postdec1	equ	0xFE5
  2392                           fsr1l	equ	0xFE1
  2393                           indf2	equ	0xFDF
  2394                           postinc2	equ	0xFDE
  2395                           postdec2	equ	0xFDD
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function _Delay1KTCYx *****************
  2401 ;; Defined at:
  2402 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  unit            1    wreg     unsigned char 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  unit            1    0[COMRAM] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;		None               void
  2409 ;; Registers used:
  2410 ;;		wreg
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2420 ;;Total ram usage:        1 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_lcd_init
  2426 ;;		_DelayPORXLCD
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text12
  2431  001C52                     __ptext12:
  2432                           	opt stack 0
  2433  001C52                     _Delay1KTCYx:
  2434                           	opt stack 28
  2435                           
  2436                           ;incstack = 0
  2437                           ;Delay1KTCYx@unit stored from wreg
  2438  001C52  6E01               	movwf	Delay1KTCYx@unit,c
  2439  001C54  0EFA               	movlw	250
  2440  001C56                     u1567:
  2441  001C56  F000               	nop	
  2442  001C58  2EE8               	decfsz	wreg,f,c
  2443  001C5A  D7FD               	goto	u1567
  2444  001C5C  2E01               	decfsz	Delay1KTCYx@unit,f,c
  2445  001C5E  D7FA               	goto	l1021
  2446  001C60  0012               	return	
  2447  001C62  0012               	return		;funcret
  2448  001C64                     __end_of_Delay1KTCYx:
  2449                           	opt stack 0
  2450                           tblptru	equ	0xFF8
  2451                           tblptrh	equ	0xFF7
  2452                           tblptrl	equ	0xFF6
  2453                           tablat	equ	0xFF5
  2454                           prodh	equ	0xFF4
  2455                           prodl	equ	0xFF3
  2456                           indf0	equ	0xFEF
  2457                           postinc0	equ	0xFEE
  2458                           fsr0h	equ	0xFEA
  2459                           fsr0l	equ	0xFE9
  2460                           wreg	equ	0xFE8
  2461                           postdec1	equ	0xFE5
  2462                           fsr1l	equ	0xFE1
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _lcd_comand *****************
  2471 ;; Defined at:
  2472 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  d               1    wreg     unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  d               1    4[COMRAM] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;		None               void
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2489 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;Total ram usage:        1 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    2
  2493 ;; This function calls:
  2494 ;;		_lcd_send_byte
  2495 ;; This function is called by:
  2496 ;;		_caratula
  2497 ;;		_Setup
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text13
  2502  001C88                     __ptext13:
  2503                           	opt stack 0
  2504  001C88                     _lcd_comand:
  2505                           	opt stack 27
  2506                           
  2507                           ;incstack = 0
  2508                           ;lcd_comand@d stored from wreg
  2509  001C88  6E05               	movwf	lcd_comand@d,c
  2510                           
  2511                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2512  001C8A  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  2513  001C8E  0E00               	movlw	0
  2514  001C90  ECD9  F00D         	call	_lcd_send_byte
  2515  001C94  0012               	return		;funcret
  2516  001C96                     __end_of_lcd_comand:
  2517                           	opt stack 0
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           prodh	equ	0xFF4
  2523                           prodl	equ	0xFF3
  2524                           indf0	equ	0xFEF
  2525                           postinc0	equ	0xFEE
  2526                           fsr0h	equ	0xFEA
  2527                           fsr0l	equ	0xFE9
  2528                           wreg	equ	0xFE8
  2529                           postdec1	equ	0xFE5
  2530                           fsr1l	equ	0xFE1
  2531                           indf2	equ	0xFDF
  2532                           postinc2	equ	0xFDE
  2533                           postdec2	equ	0xFDD
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _lcd_send_byte *****************
  2539 ;; Defined at:
  2540 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  address         1    wreg     unsigned char 
  2543 ;;  n               1    2[COMRAM] unsigned char 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  address         1    3[COMRAM] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;		None               void
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2555 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2559 ;;Total ram usage:        2 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    1
  2562 ;; This function calls:
  2563 ;;		_Delay100TCYx
  2564 ;;		_lcd_send_nibble
  2565 ;; This function is called by:
  2566 ;;		_lcd_init
  2567 ;;		_lcd_gotoxy
  2568 ;;		_lcd_putc
  2569 ;;		_lcd_comand
  2570 ;;		_lcd_setcursor_vb
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text14
  2575  001BB2                     __ptext14:
  2576                           	opt stack 0
  2577  001BB2                     _lcd_send_byte:
  2578                           	opt stack 26
  2579                           
  2580                           ;incstack = 0
  2581                           ;lcd_send_byte@address stored from wreg
  2582  001BB2  6E04               	movwf	lcd_send_byte@address,c
  2583                           
  2584                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2585  001BB4  968A               	bcf	3978,3,c	;volatile
  2586                           
  2587                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2588  001BB6  0E02               	movlw	2
  2589  001BB8  EC32  F00E         	call	_Delay100TCYx
  2590                           
  2591                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2592  001BBC  9893               	bcf	3987,4,c	;volatile
  2593                           
  2594                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  2595  001BBE  9A93               	bcf	3987,5,c	;volatile
  2596                           
  2597                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  2598  001BC0  9C93               	bcf	3987,6,c	;volatile
  2599                           
  2600                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  2601  001BC2  9E93               	bcf	3987,7,c	;volatile
  2602                           
  2603                           ;unmc_lcd_216.c: 101: if(address)
  2604  001BC4  5004               	movf	lcd_send_byte@address,w,c
  2605  001BC6  B4D8               	btfsc	status,2,c
  2606  001BC8  D002               	goto	l169
  2607                           
  2608                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  2609  001BCA  868A               	bsf	3978,3,c	;volatile
  2610  001BCC  D001               	goto	l170
  2611  001BCE                     l169:
  2612                           
  2613                           ;unmc_lcd_216.c: 103: else
  2614                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  2615  001BCE  968A               	bcf	3978,3,c	;volatile
  2616  001BD0                     l170:
  2617                           
  2618                           ;unmc_lcd_216.c: 106: __nop();
  2619  001BD0  F000               	nop	
  2620                           
  2621                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  2622  001BD2  3803               	swapf	lcd_send_byte@n,w,c
  2623  001BD4  0B0F               	andlw	15
  2624  001BD6  EC60  F00C         	call	_lcd_send_nibble
  2625                           
  2626                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  2627  001BDA  5003               	movf	lcd_send_byte@n,w,c
  2628  001BDC  0B0F               	andlw	15
  2629  001BDE  EC60  F00C         	call	_lcd_send_nibble
  2630  001BE2  0012               	return		;funcret
  2631  001BE4                     __end_of_lcd_send_byte:
  2632                           	opt stack 0
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           prodh	equ	0xFF4
  2638                           prodl	equ	0xFF3
  2639                           indf0	equ	0xFEF
  2640                           postinc0	equ	0xFEE
  2641                           fsr0h	equ	0xFEA
  2642                           fsr0l	equ	0xFE9
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           fsr1l	equ	0xFE1
  2646                           indf2	equ	0xFDF
  2647                           postinc2	equ	0xFDE
  2648                           postdec2	equ	0xFDD
  2649                           fsr2h	equ	0xFDA
  2650                           fsr2l	equ	0xFD9
  2651                           status	equ	0xFD8
  2652                           
  2653 ;; *************** function _lcd_send_nibble *****************
  2654 ;; Defined at:
  2655 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  nibble          1    wreg     unsigned char 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  nibble          1    1[COMRAM] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;		None               void
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2673 ;;Total ram usage:        2 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_lcd_send_byte
  2679 ;;		_lcd_init
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text15
  2684  0018C0                     __ptext15:
  2685                           	opt stack 0
  2686  0018C0                     _lcd_send_nibble:
  2687                           	opt stack 26
  2688                           
  2689                           ;incstack = 0
  2690                           ;lcd_send_nibble@nibble stored from wreg
  2691  0018C0  6E02               	movwf	lcd_send_nibble@nibble,c
  2692                           
  2693                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  2694  0018C2  A002               	btfss	lcd_send_nibble@nibble,0,c
  2695  0018C4  D003               	goto	u780
  2696  0018C6  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2697  0018C8  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2698  0018CA  D001               	goto	u798
  2699  0018CC                     u780:
  2700  0018CC  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2701  0018CE                     u798:
  2702  0018CE  3A01               	swapf	??_lcd_send_nibble,f,c
  2703  0018D0  508A               	movf	3978,w,c	;volatile
  2704  0018D2  1801               	xorwf	??_lcd_send_nibble,w,c
  2705  0018D4  0BEF               	andlw	-17
  2706  0018D6  1801               	xorwf	??_lcd_send_nibble,w,c
  2707  0018D8  6E8A               	movwf	3978,c	;volatile
  2708                           
  2709                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  2710  0018DA  A202               	btfss	lcd_send_nibble@nibble,1,c
  2711  0018DC  D003               	goto	u800
  2712  0018DE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2713  0018E0  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2714  0018E2  D001               	goto	u818
  2715  0018E4                     u800:
  2716  0018E4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2717  0018E6                     u818:
  2718  0018E6  3A01               	swapf	??_lcd_send_nibble,f,c
  2719  0018E8  4601               	rlncf	??_lcd_send_nibble,f,c
  2720  0018EA  508A               	movf	3978,w,c	;volatile
  2721  0018EC  1801               	xorwf	??_lcd_send_nibble,w,c
  2722  0018EE  0BDF               	andlw	-33
  2723  0018F0  1801               	xorwf	??_lcd_send_nibble,w,c
  2724  0018F2  6E8A               	movwf	3978,c	;volatile
  2725                           
  2726                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  2727  0018F4  A402               	btfss	lcd_send_nibble@nibble,2,c
  2728  0018F6  D003               	goto	u820
  2729  0018F8  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2730  0018FA  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2731  0018FC  D001               	goto	u838
  2732  0018FE                     u820:
  2733  0018FE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2734  001900                     u838:
  2735  001900  3A01               	swapf	??_lcd_send_nibble,f,c
  2736  001902  4601               	rlncf	??_lcd_send_nibble,f,c
  2737  001904  4601               	rlncf	??_lcd_send_nibble,f,c
  2738  001906  508A               	movf	3978,w,c	;volatile
  2739  001908  1801               	xorwf	??_lcd_send_nibble,w,c
  2740  00190A  0BBF               	andlw	-65
  2741  00190C  1801               	xorwf	??_lcd_send_nibble,w,c
  2742  00190E  6E8A               	movwf	3978,c	;volatile
  2743                           
  2744                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  2745  001910  A602               	btfss	lcd_send_nibble@nibble,3,c
  2746  001912  D003               	goto	u840
  2747  001914  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2748  001916  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2749  001918  D001               	goto	u858
  2750  00191A                     u840:
  2751  00191A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2752  00191C                     u858:
  2753  00191C  3201               	rrcf	??_lcd_send_nibble,f,c
  2754  00191E  3201               	rrcf	??_lcd_send_nibble,f,c
  2755  001920  508A               	movf	3978,w,c	;volatile
  2756  001922  1801               	xorwf	??_lcd_send_nibble,w,c
  2757  001924  0B7F               	andlw	-129
  2758  001926  1801               	xorwf	??_lcd_send_nibble,w,c
  2759  001928  6E8A               	movwf	3978,c	;volatile
  2760                           
  2761                           ;unmc_lcd_216.c: 32: __nop();
  2762  00192A  F000               	nop	
  2763                           
  2764                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  2765  00192C  848A               	bsf	3978,2,c	;volatile
  2766                           
  2767                           ;unmc_lcd_216.c: 34: __nop();__nop();
  2768  00192E  F000               	nop	
  2769  001930  F000               	nop	
  2770                           
  2771                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  2772  001932  948A               	bcf	3978,2,c	;volatile
  2773  001934  0012               	return		;funcret
  2774  001936                     __end_of_lcd_send_nibble:
  2775                           	opt stack 0
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           prodh	equ	0xFF4
  2781                           prodl	equ	0xFF3
  2782                           indf0	equ	0xFEF
  2783                           postinc0	equ	0xFEE
  2784                           fsr0h	equ	0xFEA
  2785                           fsr0l	equ	0xFE9
  2786                           wreg	equ	0xFE8
  2787                           postdec1	equ	0xFE5
  2788                           fsr1l	equ	0xFE1
  2789                           indf2	equ	0xFDF
  2790                           postinc2	equ	0xFDE
  2791                           postdec2	equ	0xFDD
  2792                           fsr2h	equ	0xFDA
  2793                           fsr2l	equ	0xFD9
  2794                           status	equ	0xFD8
  2795                           
  2796 ;; *************** function _Delay100TCYx *****************
  2797 ;; Defined at:
  2798 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  unit            1    wreg     unsigned char 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  unit            1    0[COMRAM] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;		None               void
  2805 ;; Registers used:
  2806 ;;		wreg
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2816 ;;Total ram usage:        1 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_lcd_send_byte
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text16
  2826  001C64                     __ptext16:
  2827                           	opt stack 0
  2828  001C64                     _Delay100TCYx:
  2829                           	opt stack 26
  2830                           
  2831                           ;incstack = 0
  2832                           ;Delay100TCYx@unit stored from wreg
  2833  001C64  6E01               	movwf	Delay100TCYx@unit,c
  2834  001C66  0E21               	movlw	33
  2835  001C68                     u1577:
  2836  001C68  2EE8               	decfsz	wreg,f,c
  2837  001C6A  D7FE               	goto	u1577
  2838  001C6C  F000               	nop	
  2839  001C6E  2E01               	decfsz	Delay100TCYx@unit,f,c
  2840  001C70  D7FA               	goto	l1651
  2841  001C72  0012               	return	
  2842  001C74  0012               	return		;funcret
  2843  001C76                     __end_of_Delay100TCYx:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           indf0	equ	0xFEF
  2852                           postinc0	equ	0xFEE
  2853                           fsr0h	equ	0xFEA
  2854                           fsr0l	equ	0xFE9
  2855                           wreg	equ	0xFE8
  2856                           postdec1	equ	0xFE5
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           postinc2	equ	0xFDE
  2860                           postdec2	equ	0xFDD
  2861                           fsr2h	equ	0xFDA
  2862                           fsr2l	equ	0xFD9
  2863                           status	equ	0xFD8
  2864                           
  2865 ;; *************** function _Write_RTC *****************
  2866 ;; Defined at:
  2867 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;		None               void
  2874 ;; Registers used:
  2875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    2
  2888 ;; This function calls:
  2889 ;;		_RtccWrOn
  2890 ;;		_RtccWriteDate
  2891 ;;		_RtccWriteTime
  2892 ;;		___awdiv
  2893 ;; This function is called by:
  2894 ;;		_Setup
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text17
  2899  0011A0                     __ptext17:
  2900                           	opt stack 0
  2901  0011A0                     _Write_RTC:
  2902                           	opt stack 27
  2903                           
  2904                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2905                           
  2906                           ;incstack = 0
  2907  0011A0  EC3B  F00E         	call	_RtccWrOn	;wreg free
  2908                           
  2909                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2910  0011A4  80A3               	bsf	4003,0,c	;volatile
  2911                           
  2912                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2913  0011A6  C035  F001         	movff	_segundo,___awdiv@dividend
  2914  0011AA  C036  F002         	movff	_segundo+1,___awdiv@dividend+1
  2915  0011AE  0E00               	movlw	0
  2916  0011B0  6E04               	movwf	___awdiv@divisor+1,c
  2917  0011B2  0E0A               	movlw	10
  2918  0011B4  6E03               	movwf	___awdiv@divisor,c
  2919  0011B6  EC8E  F00B         	call	___awdiv	;wreg free
  2920  0011BA  5001               	movf	?___awdiv,w,c
  2921  0011BC  6E4A               	movwf	_segundo_d,c
  2922                           
  2923                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2924  0011BE  504A               	movf	_segundo_d,w,c
  2925  0011C0  0D0A               	mullw	10
  2926  0011C2  50F3               	movf	prodl,w,c
  2927  0011C4  0800               	sublw	0
  2928  0011C6  2435               	addwf	_segundo,w,c
  2929  0011C8  6E4B               	movwf	_segundo_u,c
  2930                           
  2931                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2932  0011CA  504A               	movf	_segundo_d,w,c
  2933  0011CC  0D10               	mullw	16
  2934  0011CE  50F3               	movf	prodl,w,c
  2935  0011D0  244B               	addwf	_segundo_u,w,c
  2936  0011D2  6E3C               	movwf	_RtccTime+1,c
  2937                           
  2938                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2939  0011D4  C056  F001         	movff	_minuto,___awdiv@dividend
  2940  0011D8  C057  F002         	movff	_minuto+1,___awdiv@dividend+1
  2941  0011DC  0E00               	movlw	0
  2942  0011DE  6E04               	movwf	___awdiv@divisor+1,c
  2943  0011E0  0E0A               	movlw	10
  2944  0011E2  6E03               	movwf	___awdiv@divisor,c
  2945  0011E4  EC8E  F00B         	call	___awdiv	;wreg free
  2946  0011E8  5001               	movf	?___awdiv,w,c
  2947  0011EA  6E48               	movwf	_minuto_d,c
  2948                           
  2949                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2950  0011EC  5048               	movf	_minuto_d,w,c
  2951  0011EE  0D0A               	mullw	10
  2952  0011F0  50F3               	movf	prodl,w,c
  2953  0011F2  0800               	sublw	0
  2954  0011F4  2456               	addwf	_minuto,w,c
  2955  0011F6  6E49               	movwf	_minuto_u,c
  2956                           
  2957                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2958  0011F8  5048               	movf	_minuto_d,w,c
  2959  0011FA  0D10               	mullw	16
  2960  0011FC  50F3               	movf	prodl,w,c
  2961  0011FE  2449               	addwf	_minuto_u,w,c
  2962  001200  6E3D               	movwf	_RtccTime+2,c
  2963                           
  2964                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2965  001202  C052  F001         	movff	_hora,___awdiv@dividend
  2966  001206  C053  F002         	movff	_hora+1,___awdiv@dividend+1
  2967  00120A  0E00               	movlw	0
  2968  00120C  6E04               	movwf	___awdiv@divisor+1,c
  2969  00120E  0E0A               	movlw	10
  2970  001210  6E03               	movwf	___awdiv@divisor,c
  2971  001212  EC8E  F00B         	call	___awdiv	;wreg free
  2972  001216  5001               	movf	?___awdiv,w,c
  2973  001218  6E44               	movwf	_hora_d,c
  2974                           
  2975                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2976  00121A  5044               	movf	_hora_d,w,c
  2977  00121C  0D0A               	mullw	10
  2978  00121E  50F3               	movf	prodl,w,c
  2979  001220  0800               	sublw	0
  2980  001222  2452               	addwf	_hora,w,c
  2981  001224  6E45               	movwf	_hora_u,c
  2982                           
  2983                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2984  001226  5044               	movf	_hora_d,w,c
  2985  001228  0D10               	mullw	16
  2986  00122A  50F3               	movf	prodl,w,c
  2987  00122C  2445               	addwf	_hora_u,w,c
  2988  00122E  6E3E               	movwf	_RtccTime+3,c
  2989                           
  2990                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2991  001230  C04C  F001         	movff	_anio,___awdiv@dividend
  2992  001234  C04D  F002         	movff	_anio+1,___awdiv@dividend+1
  2993  001238  0E00               	movlw	0
  2994  00123A  6E04               	movwf	___awdiv@divisor+1,c
  2995  00123C  0E0A               	movlw	10
  2996  00123E  6E03               	movwf	___awdiv@divisor,c
  2997  001240  EC8E  F00B         	call	___awdiv	;wreg free
  2998  001244  5001               	movf	?___awdiv,w,c
  2999  001246  6E3F               	movwf	_anio_d,c
  3000                           
  3001                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  3002  001248  503F               	movf	_anio_d,w,c
  3003  00124A  0D0A               	mullw	10
  3004  00124C  50F3               	movf	prodl,w,c
  3005  00124E  0800               	sublw	0
  3006  001250  244C               	addwf	_anio,w,c
  3007  001252  6E40               	movwf	_anio_u,c
  3008                           
  3009                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  3010  001254  503F               	movf	_anio_d,w,c
  3011  001256  0D10               	mullw	16
  3012  001258  50F3               	movf	prodl,w,c
  3013  00125A  2440               	addwf	_anio_u,w,c
  3014  00125C  6E3A               	movwf	_RtccDate+3,c
  3015                           
  3016                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  3017  00125E  C054  F001         	movff	_mes,___awdiv@dividend
  3018  001262  C055  F002         	movff	_mes+1,___awdiv@dividend+1
  3019  001266  0E00               	movlw	0
  3020  001268  6E04               	movwf	___awdiv@divisor+1,c
  3021  00126A  0E0A               	movlw	10
  3022  00126C  6E03               	movwf	___awdiv@divisor,c
  3023  00126E  EC8E  F00B         	call	___awdiv	;wreg free
  3024  001272  5001               	movf	?___awdiv,w,c
  3025  001274  6E46               	movwf	_mes_d,c
  3026                           
  3027                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3028  001276  5046               	movf	_mes_d,w,c
  3029  001278  0D0A               	mullw	10
  3030  00127A  50F3               	movf	prodl,w,c
  3031  00127C  0800               	sublw	0
  3032  00127E  2454               	addwf	_mes,w,c
  3033  001280  6E47               	movwf	_mes_u,c
  3034                           
  3035                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3036  001282  5046               	movf	_mes_d,w,c
  3037  001284  0D10               	mullw	16
  3038  001286  50F3               	movf	prodl,w,c
  3039  001288  2447               	addwf	_mes_u,w,c
  3040  00128A  6E39               	movwf	_RtccDate+2,c
  3041                           
  3042                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3043  00128C  C04E  F001         	movff	_dia,___awdiv@dividend
  3044  001290  C04F  F002         	movff	_dia+1,___awdiv@dividend+1
  3045  001294  0E00               	movlw	0
  3046  001296  6E04               	movwf	___awdiv@divisor+1,c
  3047  001298  0E0A               	movlw	10
  3048  00129A  6E03               	movwf	___awdiv@divisor,c
  3049  00129C  EC8E  F00B         	call	___awdiv	;wreg free
  3050  0012A0  5001               	movf	?___awdiv,w,c
  3051  0012A2  6E42               	movwf	_fecha_d,c
  3052                           
  3053                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3054  0012A4  5042               	movf	_fecha_d,w,c
  3055  0012A6  0D0A               	mullw	10
  3056  0012A8  50F3               	movf	prodl,w,c
  3057  0012AA  0800               	sublw	0
  3058  0012AC  244E               	addwf	_dia,w,c
  3059  0012AE  6E43               	movwf	_fecha_u,c
  3060                           
  3061                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3062  0012B0  5042               	movf	_fecha_d,w,c
  3063  0012B2  0D10               	mullw	16
  3064  0012B4  50F3               	movf	prodl,w,c
  3065  0012B6  2443               	addwf	_fecha_u,w,c
  3066  0012B8  6E38               	movwf	_RtccDate+1,c
  3067                           
  3068                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3069  0012BA  C050  F041         	movff	_diasem,_dia_semana
  3070                           
  3071                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3072  0012BE  C050  F037         	movff	_diasem,_RtccDate
  3073                           
  3074                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3075  0012C2  0E3B               	movlw	low _RtccTime
  3076  0012C4  6E01               	movwf	RtccWriteTime@pTm,c
  3077  0012C6  0E00               	movlw	high _RtccTime
  3078  0012C8  6E02               	movwf	RtccWriteTime@pTm+1,c
  3079  0012CA  0E01               	movlw	1
  3080  0012CC  6E03               	movwf	RtccWriteTime@di,c
  3081  0012CE  EC17  F00A         	call	_RtccWriteTime	;wreg free
  3082                           
  3083                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3084  0012D2  0E37               	movlw	low _RtccDate
  3085  0012D4  6E01               	movwf	RtccWriteDate@pDt,c
  3086  0012D6  0E00               	movlw	high _RtccDate
  3087  0012D8  6E02               	movwf	RtccWriteDate@pDt+1,c
  3088  0012DA  0E01               	movlw	1
  3089  0012DC  6E03               	movwf	RtccWriteDate@di,c
  3090  0012DE  EC74  F009         	call	_RtccWriteDate	;wreg free
  3091                           
  3092                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3093  0012E2  010F               	movlb	15	; () banked
  3094  0012E4  8F3F               	bsf	63,7,b	;volatile
  3095                           
  3096                           ; BSR set to: 15
  3097  0012E6  0012               	return		;funcret
  3098  0012E8                     __end_of_Write_RTC:
  3099                           	opt stack 0
  3100                           tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           prodh	equ	0xFF4
  3105                           prodl	equ	0xFF3
  3106                           indf0	equ	0xFEF
  3107                           postinc0	equ	0xFEE
  3108                           fsr0h	equ	0xFEA
  3109                           fsr0l	equ	0xFE9
  3110                           wreg	equ	0xFE8
  3111                           postdec1	equ	0xFE5
  3112                           fsr1l	equ	0xFE1
  3113                           indf2	equ	0xFDF
  3114                           postinc2	equ	0xFDE
  3115                           postdec2	equ	0xFDD
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function ___awdiv *****************
  3121 ;; Defined at:
  3122 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  dividend        2    0[COMRAM] int 
  3125 ;;  divisor         2    2[COMRAM] int 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  quotient        2    6[COMRAM] int 
  3128 ;;  sign            1    5[COMRAM] unsigned char 
  3129 ;;  counter         1    4[COMRAM] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2    0[COMRAM] int 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3142 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3143 ;;Total ram usage:        8 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_Write_RTC
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text18
  3153  00171C                     __ptext18:
  3154                           	opt stack 0
  3155  00171C                     ___awdiv:
  3156                           	opt stack 28
  3157                           
  3158                           ; BSR set to: 15
  3159                           ;incstack = 0
  3160  00171C  0E00               	movlw	0
  3161  00171E  6E06               	movwf	___awdiv@sign,c
  3162  001720  AE04               	btfss	___awdiv@divisor+1,7,c
  3163  001722  D007               	goto	l1859
  3164  001724  6C03               	negf	___awdiv@divisor,c
  3165  001726  1E04               	comf	___awdiv@divisor+1,f,c
  3166  001728  B0D8               	btfsc	status,0,c
  3167  00172A  2A04               	incf	___awdiv@divisor+1,f,c
  3168  00172C  0E01               	movlw	1
  3169  00172E  6E06               	movwf	___awdiv@sign,c
  3170  001730  D000               	goto	l1859
  3171  001732                     l1859:
  3172  001732  AE02               	btfss	___awdiv@dividend+1,7,c
  3173  001734  D007               	goto	l1865
  3174  001736  6C01               	negf	___awdiv@dividend,c
  3175  001738  1E02               	comf	___awdiv@dividend+1,f,c
  3176  00173A  B0D8               	btfsc	status,0,c
  3177  00173C  2A02               	incf	___awdiv@dividend+1,f,c
  3178  00173E  0E01               	movlw	1
  3179  001740  1A06               	xorwf	___awdiv@sign,f,c
  3180  001742  D000               	goto	l1865
  3181  001744                     l1865:
  3182  001744  0E00               	movlw	0
  3183  001746  6E08               	movwf	___awdiv@quotient+1,c
  3184  001748  0E00               	movlw	0
  3185  00174A  6E07               	movwf	___awdiv@quotient,c
  3186  00174C  5003               	movf	___awdiv@divisor,w,c
  3187  00174E  1004               	iorwf	___awdiv@divisor+1,w,c
  3188  001750  B4D8               	btfsc	status,2,c
  3189  001752  D021               	goto	l1887
  3190  001754  0E01               	movlw	1
  3191  001756  6E05               	movwf	___awdiv@counter,c
  3192  001758  D005               	goto	l1873
  3193  00175A                     l1871:
  3194  00175A  90D8               	bcf	status,0,c
  3195  00175C  3603               	rlcf	___awdiv@divisor,f,c
  3196  00175E  3604               	rlcf	___awdiv@divisor+1,f,c
  3197  001760  2A05               	incf	___awdiv@counter,f,c
  3198  001762  D000               	goto	l1873
  3199  001764                     l1873:
  3200  001764  BE04               	btfsc	___awdiv@divisor+1,7,c
  3201  001766  D002               	goto	l1875
  3202  001768  D7F8               	goto	l1871
  3203  00176A  D000               	goto	l1875
  3204  00176C                     l1875:
  3205  00176C  90D8               	bcf	status,0,c
  3206  00176E  3607               	rlcf	___awdiv@quotient,f,c
  3207  001770  3608               	rlcf	___awdiv@quotient+1,f,c
  3208  001772  5003               	movf	___awdiv@divisor,w,c
  3209  001774  5C01               	subwf	___awdiv@dividend,w,c
  3210  001776  5004               	movf	___awdiv@divisor+1,w,c
  3211  001778  5802               	subwfb	___awdiv@dividend+1,w,c
  3212  00177A  A0D8               	btfss	status,0,c
  3213  00177C  D006               	goto	l1883
  3214  00177E  5003               	movf	___awdiv@divisor,w,c
  3215  001780  5E01               	subwf	___awdiv@dividend,f,c
  3216  001782  5004               	movf	___awdiv@divisor+1,w,c
  3217  001784  5A02               	subwfb	___awdiv@dividend+1,f,c
  3218  001786  8007               	bsf	___awdiv@quotient,0,c
  3219  001788  D000               	goto	l1883
  3220  00178A                     l1883:
  3221  00178A  90D8               	bcf	status,0,c
  3222  00178C  3204               	rrcf	___awdiv@divisor+1,f,c
  3223  00178E  3203               	rrcf	___awdiv@divisor,f,c
  3224  001790  2E05               	decfsz	___awdiv@counter,f,c
  3225  001792  D7EC               	goto	l1875
  3226  001794  D000               	goto	l1887
  3227  001796                     l1887:
  3228  001796  5006               	movf	___awdiv@sign,w,c
  3229  001798  B4D8               	btfsc	status,2,c
  3230  00179A  D005               	goto	l1891
  3231  00179C  6C07               	negf	___awdiv@quotient,c
  3232  00179E  1E08               	comf	___awdiv@quotient+1,f,c
  3233  0017A0  B0D8               	btfsc	status,0,c
  3234  0017A2  2A08               	incf	___awdiv@quotient+1,f,c
  3235  0017A4  D000               	goto	l1891
  3236  0017A6                     l1891:
  3237  0017A6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3238  0017AA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3239  0017AE  0012               	return	
  3240  0017B0  0012               	return		;funcret
  3241  0017B2                     __end_of___awdiv:
  3242                           	opt stack 0
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           indf0	equ	0xFEF
  3250                           postinc0	equ	0xFEE
  3251                           fsr0h	equ	0xFEA
  3252                           fsr0l	equ	0xFE9
  3253                           wreg	equ	0xFE8
  3254                           postdec1	equ	0xFE5
  3255                           fsr1l	equ	0xFE1
  3256                           indf2	equ	0xFDF
  3257                           postinc2	equ	0xFDE
  3258                           postdec2	equ	0xFDD
  3259                           fsr2h	equ	0xFDA
  3260                           fsr2l	equ	0xFD9
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function _RtccWriteTime *****************
  3264 ;; Defined at:
  3265 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  pTm             2    0[COMRAM] PTR const struct .
  3268 ;;		 -> RtccTime(4), 
  3269 ;;  di              1    2[COMRAM] enum E7121
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  tempHourWDay    2    9[COMRAM] struct .
  3272 ;;  tempMinSec      2    7[COMRAM] struct .
  3273 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3274 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3275 ;;  wasOn           1    4[COMRAM] enum E7121
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      enum E7337
  3278 ;; Registers used:
  3279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3285 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3286 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3288 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3289 ;;Total ram usage:       11 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    1
  3292 ;; This function calls:
  3293 ;;		_RtccWrOn
  3294 ;; This function is called by:
  3295 ;;		_Write_RTC
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text19
  3300  00142E                     __ptext19:
  3301                           	opt stack 0
  3302  00142E                     _RtccWriteTime:
  3303                           	opt stack 27
  3304                           
  3305                           ;incstack = 0
  3306  00142E  0E00               	movlw	0
  3307  001430  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3308  001432  EE20 F002          	lfsr	2,2
  3309  001436  5001               	movf	RtccWriteTime@pTm,w,c
  3310  001438  26D9               	addwf	fsr2l,f,c
  3311  00143A  5002               	movf	RtccWriteTime@pTm+1,w,c
  3312  00143C  22DA               	addwfc	fsr2h,f,c
  3313  00143E  0E5A               	movlw	90
  3314  001440  60DF               	cpfslt	indf2,c
  3315  001442  0012               	return	
  3316  001444  EE20 F001          	lfsr	2,1
  3317  001448  5001               	movf	RtccWriteTime@pTm,w,c
  3318  00144A  26D9               	addwf	fsr2l,f,c
  3319  00144C  5002               	movf	RtccWriteTime@pTm+1,w,c
  3320  00144E  22DA               	addwfc	fsr2h,f,c
  3321  001450  0E5A               	movlw	90
  3322  001452  60DF               	cpfslt	indf2,c
  3323  001454  0012               	return	
  3324  001456  EE20 F003          	lfsr	2,3
  3325  00145A  5001               	movf	RtccWriteTime@pTm,w,c
  3326  00145C  26D9               	addwf	fsr2l,f,c
  3327  00145E  5002               	movf	RtccWriteTime@pTm+1,w,c
  3328  001460  22DA               	addwfc	fsr2h,f,c
  3329  001462  0E24               	movlw	36
  3330  001464  64DF               	cpfsgt	indf2,c
  3331  001466  D002               	goto	l1691
  3332  001468  0012               	return	
  3333                           
  3334                           ;	Return value of _RtccWriteTime is never used
  3335  00146A  0012               	return	
  3336  00146C                     l1691:
  3337  00146C  EE20 F002          	lfsr	2,2
  3338  001470  5001               	movf	RtccWriteTime@pTm,w,c
  3339  001472  26D9               	addwf	fsr2l,f,c
  3340  001474  5002               	movf	RtccWriteTime@pTm+1,w,c
  3341  001476  22DA               	addwfc	fsr2h,f,c
  3342  001478  50DF               	movf	indf2,w,c
  3343  00147A  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3344  00147C  EE20 F001          	lfsr	2,1
  3345  001480  5001               	movf	RtccWriteTime@pTm,w,c
  3346  001482  26D9               	addwf	fsr2l,f,c
  3347  001484  5002               	movf	RtccWriteTime@pTm+1,w,c
  3348  001486  22DA               	addwfc	fsr2h,f,c
  3349  001488  50DF               	movf	indf2,w,c
  3350  00148A  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3351  00148C  5003               	movf	RtccWriteTime@di,w,c
  3352  00148E  B4D8               	btfsc	status,2,c
  3353  001490  D002               	goto	l1697
  3354  001492  9CF2               	bcf	intcon,6,c	;volatile
  3355  001494  D000               	goto	l1697
  3356  001496                     l1697:
  3357  001496  0E00               	movlw	0
  3358  001498  BB3F               	btfsc	63,5,b	;volatile
  3359  00149A  0E01               	movlw	1
  3360  00149C  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3361  00149E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3362  0014A0  A4D8               	btfss	status,2,c
  3363  0014A2  D003               	goto	l1701
  3364  0014A4  EC3B  F00E         	call	_RtccWrOn	;wreg free
  3365  0014A8  D000               	goto	l1701
  3366  0014AA                     l1701:
  3367  0014AA  0E00               	movlw	0
  3368  0014AC  BF3F               	btfsc	63,7,b	;volatile
  3369  0014AE  0E01               	movlw	1
  3370  0014B0  6E05               	movwf	RtccWriteTime@wasOn,c
  3371  0014B2  5005               	movf	RtccWriteTime@wasOn,w,c
  3372  0014B4  B4D8               	btfsc	status,2,c
  3373  0014B6  D007               	goto	l1707
  3374  0014B8  0E00               	movlw	0
  3375  0014BA  BE91               	btfsc	3985,7,c	;volatile
  3376  0014BC  0E01               	movlw	1
  3377  0014BE  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3378  0014C0  010F               	movlb	15	; () banked
  3379  0014C2  9F3F               	bcf	63,7,b	;volatile
  3380  0014C4  D000               	goto	l1707
  3381  0014C6                     l1707:
  3382  0014C6  0EFC               	movlw	252
  3383  0014C8  010F               	movlb	15	; () banked
  3384  0014CA  173F               	andwf	63,f,b	;volatile
  3385  0014CC  010F               	movlb	15	; () banked
  3386  0014CE  813F               	bsf	63,0,b	;volatile
  3387                           
  3388                           ; BSR set to: 15
  3389  0014D0  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3390                           
  3391                           ; BSR set to: 15
  3392  0014D4  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3393                           
  3394                           ; BSR set to: 15
  3395  0014D8  EE20 F003          	lfsr	2,3
  3396  0014DC  5001               	movf	RtccWriteTime@pTm,w,c
  3397  0014DE  26D9               	addwf	fsr2l,f,c
  3398  0014E0  5002               	movf	RtccWriteTime@pTm+1,w,c
  3399  0014E2  22DA               	addwfc	fsr2h,f,c
  3400  0014E4  50DF               	movf	indf2,w,c
  3401  0014E6  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3402                           
  3403                           ; BSR set to: 15
  3404  0014E8  0EFC               	movlw	252
  3405  0014EA  010F               	movlb	15	; () banked
  3406  0014EC  173F               	andwf	63,f,b	;volatile
  3407                           
  3408                           ; BSR set to: 15
  3409  0014EE  010F               	movlb	15	; () banked
  3410  0014F0  813F               	bsf	63,0,b	;volatile
  3411                           
  3412                           ; BSR set to: 15
  3413  0014F2  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3414                           
  3415                           ; BSR set to: 15
  3416  0014F6  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3417                           
  3418                           ; BSR set to: 15
  3419  0014FA  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3420                           
  3421                           ; BSR set to: 15
  3422  0014FE  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3423                           
  3424                           ; BSR set to: 15
  3425  001502  5005               	movf	RtccWriteTime@wasOn,w,c
  3426  001504  B4D8               	btfsc	status,2,c
  3427  001506  D00D               	goto	l1739
  3428                           
  3429                           ; BSR set to: 15
  3430  001508  010F               	movlb	15	; () banked
  3431  00150A  8F3F               	bsf	63,7,b	;volatile
  3432                           
  3433                           ; BSR set to: 15
  3434  00150C  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3435  00150E  B4D8               	btfsc	status,2,c
  3436  001510  D002               	goto	l1735
  3437                           
  3438                           ; BSR set to: 15
  3439  001512  8E91               	bsf	3985,7,c	;volatile
  3440  001514  D000               	goto	l1735
  3441  001516                     l1735:
  3442                           
  3443                           ; BSR set to: 15
  3444  001516  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3445  001518  B4D8               	btfsc	status,2,c
  3446  00151A  D009               	goto	l1743
  3447                           
  3448                           ; BSR set to: 15
  3449  00151C  EC3B  F00E         	call	_RtccWrOn	;wreg free
  3450  001520  D006               	goto	l1743
  3451  001522                     l1739:
  3452  001522  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3453  001524  A4D8               	btfss	status,2,c
  3454  001526  D003               	goto	l1743
  3455  001528  010F               	movlb	15	; () banked
  3456  00152A  9B3F               	bcf	63,5,b	;volatile
  3457                           
  3458                           ; BSR set to: 15
  3459  00152C  D000               	goto	l1743
  3460  00152E                     l1743:
  3461  00152E  5003               	movf	RtccWriteTime@di,w,c
  3462  001530  B4D8               	btfsc	status,2,c
  3463  001532  0012               	return	
  3464  001534  8CF2               	bsf	intcon,6,c	;volatile
  3465  001536  0012               	return	
  3466                           
  3467                           ;	Return value of _RtccWriteTime is never used
  3468  001538  0012               	return		;funcret
  3469  00153A                     __end_of_RtccWriteTime:
  3470                           	opt stack 0
  3471                           tblptru	equ	0xFF8
  3472                           tblptrh	equ	0xFF7
  3473                           tblptrl	equ	0xFF6
  3474                           tablat	equ	0xFF5
  3475                           prodh	equ	0xFF4
  3476                           prodl	equ	0xFF3
  3477                           intcon	equ	0xFF2
  3478                           indf0	equ	0xFEF
  3479                           postinc0	equ	0xFEE
  3480                           fsr0h	equ	0xFEA
  3481                           fsr0l	equ	0xFE9
  3482                           wreg	equ	0xFE8
  3483                           postdec1	equ	0xFE5
  3484                           fsr1l	equ	0xFE1
  3485                           indf2	equ	0xFDF
  3486                           postinc2	equ	0xFDE
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function _RtccWriteDate *****************
  3493 ;; Defined at:
  3494 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  pDt             2    0[COMRAM] PTR const struct .
  3497 ;;		 -> RtccDate(4), 
  3498 ;;  di              1    2[COMRAM] enum E7121
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  tempHourWDay    2   11[COMRAM] struct .
  3501 ;;  tempDayMonth    2    9[COMRAM] struct .
  3502 ;;  tempYear        2    6[COMRAM] struct .
  3503 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3504 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3505 ;;  wasOn           1    4[COMRAM] enum E7121
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      enum E7337
  3508 ;; Registers used:
  3509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3515 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3516 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3517 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3518 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3519 ;;Total ram usage:       13 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    1
  3522 ;; This function calls:
  3523 ;;		_RtccWrOn
  3524 ;; This function is called by:
  3525 ;;		_Write_RTC
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text20
  3530  0012E8                     __ptext20:
  3531                           	opt stack 0
  3532  0012E8                     _RtccWriteDate:
  3533                           	opt stack 27
  3534                           
  3535                           ;incstack = 0
  3536  0012E8  0E00               	movlw	0
  3537  0012EA  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3538  0012EC  EE20 F002          	lfsr	2,2
  3539  0012F0  5001               	movf	RtccWriteDate@pDt,w,c
  3540  0012F2  26D9               	addwf	fsr2l,f,c
  3541  0012F4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3542  0012F6  22DA               	addwfc	fsr2h,f,c
  3543  0012F8  0E13               	movlw	19
  3544  0012FA  60DF               	cpfslt	indf2,c
  3545  0012FC  0012               	return	
  3546  0012FE  EE20 F002          	lfsr	2,2
  3547  001302  5001               	movf	RtccWriteDate@pDt,w,c
  3548  001304  26D9               	addwf	fsr2l,f,c
  3549  001306  5002               	movf	RtccWriteDate@pDt+1,w,c
  3550  001308  22DA               	addwfc	fsr2h,f,c
  3551  00130A  50DF               	movf	indf2,w,c
  3552  00130C  B4D8               	btfsc	status,2,c
  3553  00130E  0012               	return	
  3554  001310  EE20 F001          	lfsr	2,1
  3555  001314  5001               	movf	RtccWriteDate@pDt,w,c
  3556  001316  26D9               	addwf	fsr2l,f,c
  3557  001318  5002               	movf	RtccWriteDate@pDt+1,w,c
  3558  00131A  22DA               	addwfc	fsr2h,f,c
  3559  00131C  0E32               	movlw	50
  3560  00131E  60DF               	cpfslt	indf2,c
  3561  001320  0012               	return	
  3562  001322  EE20 F001          	lfsr	2,1
  3563  001326  5001               	movf	RtccWriteDate@pDt,w,c
  3564  001328  26D9               	addwf	fsr2l,f,c
  3565  00132A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3566  00132C  22DA               	addwfc	fsr2h,f,c
  3567  00132E  50DF               	movf	indf2,w,c
  3568  001330  B4D8               	btfsc	status,2,c
  3569  001332  0012               	return	
  3570  001334  EE20 F003          	lfsr	2,3
  3571  001338  5001               	movf	RtccWriteDate@pDt,w,c
  3572  00133A  26D9               	addwf	fsr2l,f,c
  3573  00133C  5002               	movf	RtccWriteDate@pDt+1,w,c
  3574  00133E  22DA               	addwfc	fsr2h,f,c
  3575  001340  0E99               	movlw	153
  3576  001342  64DF               	cpfsgt	indf2,c
  3577  001344  D002               	goto	l1759
  3578  001346  0012               	return	
  3579                           
  3580                           ;	Return value of _RtccWriteDate is never used
  3581  001348  0012               	return	
  3582  00134A                     l1759:
  3583  00134A  EE20 F003          	lfsr	2,3
  3584  00134E  5001               	movf	RtccWriteDate@pDt,w,c
  3585  001350  26D9               	addwf	fsr2l,f,c
  3586  001352  5002               	movf	RtccWriteDate@pDt+1,w,c
  3587  001354  22DA               	addwfc	fsr2h,f,c
  3588  001356  50DF               	movf	indf2,w,c
  3589  001358  6E07               	movwf	RtccWriteDate@tempYear,c
  3590  00135A  EE20 F001          	lfsr	2,1
  3591  00135E  5001               	movf	RtccWriteDate@pDt,w,c
  3592  001360  26D9               	addwf	fsr2l,f,c
  3593  001362  5002               	movf	RtccWriteDate@pDt+1,w,c
  3594  001364  22DA               	addwfc	fsr2h,f,c
  3595  001366  50DF               	movf	indf2,w,c
  3596  001368  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  3597  00136A  EE20 F002          	lfsr	2,2
  3598  00136E  5001               	movf	RtccWriteDate@pDt,w,c
  3599  001370  26D9               	addwf	fsr2l,f,c
  3600  001372  5002               	movf	RtccWriteDate@pDt+1,w,c
  3601  001374  22DA               	addwfc	fsr2h,f,c
  3602  001376  50DF               	movf	indf2,w,c
  3603  001378  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3604  00137A  5003               	movf	RtccWriteDate@di,w,c
  3605  00137C  B4D8               	btfsc	status,2,c
  3606  00137E  D002               	goto	l1765
  3607  001380  9CF2               	bcf	intcon,6,c	;volatile
  3608  001382  D000               	goto	l1765
  3609  001384                     l1765:
  3610  001384  0E00               	movlw	0
  3611  001386  BB3F               	btfsc	63,5,b	;volatile
  3612  001388  0E01               	movlw	1
  3613  00138A  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3614  00138C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3615  00138E  A4D8               	btfss	status,2,c
  3616  001390  D003               	goto	l1769
  3617  001392  EC3B  F00E         	call	_RtccWrOn	;wreg free
  3618  001396  D000               	goto	l1769
  3619  001398                     l1769:
  3620  001398  0E00               	movlw	0
  3621  00139A  BF3F               	btfsc	63,7,b	;volatile
  3622  00139C  0E01               	movlw	1
  3623  00139E  6E05               	movwf	RtccWriteDate@wasOn,c
  3624  0013A0  5005               	movf	RtccWriteDate@wasOn,w,c
  3625  0013A2  B4D8               	btfsc	status,2,c
  3626  0013A4  D007               	goto	l1775
  3627  0013A6  0E00               	movlw	0
  3628  0013A8  BE91               	btfsc	3985,7,c	;volatile
  3629  0013AA  0E01               	movlw	1
  3630  0013AC  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3631  0013AE  010F               	movlb	15	; () banked
  3632  0013B0  9F3F               	bcf	63,7,b	;volatile
  3633  0013B2  D000               	goto	l1775
  3634  0013B4                     l1775:
  3635  0013B4  0EFC               	movlw	252
  3636  0013B6  010F               	movlb	15	; () banked
  3637  0013B8  173F               	andwf	63,f,b	;volatile
  3638  0013BA  010F               	movlb	15	; () banked
  3639  0013BC  813F               	bsf	63,0,b	;volatile
  3640                           
  3641                           ; BSR set to: 15
  3642  0013BE  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3643                           
  3644                           ; BSR set to: 15
  3645  0013C2  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3646                           
  3647                           ; BSR set to: 15
  3648  0013C6  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3649  0013CA  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3650  0013CE  50DF               	movf	indf2,w,c
  3651  0013D0  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  3652                           
  3653                           ; BSR set to: 15
  3654  0013D2  0EFC               	movlw	252
  3655  0013D4  010F               	movlb	15	; () banked
  3656  0013D6  173F               	andwf	63,f,b	;volatile
  3657                           
  3658                           ; BSR set to: 15
  3659  0013D8  0E03               	movlw	3
  3660  0013DA  010F               	movlb	15	; () banked
  3661  0013DC  133F               	iorwf	63,f,b	;volatile
  3662                           
  3663                           ; BSR set to: 15
  3664  0013DE  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3665                           
  3666                           ; BSR set to: 15
  3667  0013E2  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3668                           
  3669                           ; BSR set to: 15
  3670  0013E6  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3671                           
  3672                           ; BSR set to: 15
  3673  0013EA  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3674                           
  3675                           ; BSR set to: 15
  3676  0013EE  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3677                           
  3678                           ; BSR set to: 15
  3679  0013F2  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3680                           
  3681                           ; BSR set to: 15
  3682  0013F6  5005               	movf	RtccWriteDate@wasOn,w,c
  3683  0013F8  B4D8               	btfsc	status,2,c
  3684  0013FA  D00D               	goto	l1811
  3685                           
  3686                           ; BSR set to: 15
  3687  0013FC  010F               	movlb	15	; () banked
  3688  0013FE  8F3F               	bsf	63,7,b	;volatile
  3689                           
  3690                           ; BSR set to: 15
  3691  001400  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3692  001402  B4D8               	btfsc	status,2,c
  3693  001404  D002               	goto	l1807
  3694                           
  3695                           ; BSR set to: 15
  3696  001406  8E91               	bsf	3985,7,c	;volatile
  3697  001408  D000               	goto	l1807
  3698  00140A                     l1807:
  3699                           
  3700                           ; BSR set to: 15
  3701  00140A  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3702  00140C  B4D8               	btfsc	status,2,c
  3703  00140E  D009               	goto	l1815
  3704                           
  3705                           ; BSR set to: 15
  3706  001410  EC3B  F00E         	call	_RtccWrOn	;wreg free
  3707  001414  D006               	goto	l1815
  3708  001416                     l1811:
  3709  001416  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3710  001418  A4D8               	btfss	status,2,c
  3711  00141A  D003               	goto	l1815
  3712  00141C  010F               	movlb	15	; () banked
  3713  00141E  9B3F               	bcf	63,5,b	;volatile
  3714                           
  3715                           ; BSR set to: 15
  3716  001420  D000               	goto	l1815
  3717  001422                     l1815:
  3718  001422  5003               	movf	RtccWriteDate@di,w,c
  3719  001424  B4D8               	btfsc	status,2,c
  3720  001426  0012               	return	
  3721  001428  9CF2               	bcf	intcon,6,c	;volatile
  3722  00142A  0012               	return	
  3723                           
  3724                           ;	Return value of _RtccWriteDate is never used
  3725  00142C  0012               	return		;funcret
  3726  00142E                     __end_of_RtccWriteDate:
  3727                           	opt stack 0
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           indf0	equ	0xFEF
  3736                           postinc0	equ	0xFEE
  3737                           fsr0h	equ	0xFEA
  3738                           fsr0l	equ	0xFE9
  3739                           wreg	equ	0xFE8
  3740                           postdec1	equ	0xFE5
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           postinc2	equ	0xFDE
  3744                           postdec2	equ	0xFDD
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function _RtccWrOn *****************
  3750 ;; Defined at:
  3751 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  data            2    0        unsigned int 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		wreg, status,2
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_Write_RTC
  3775 ;;		_RtccWriteDate
  3776 ;;		_RtccWriteTime
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text21
  3781  001C76                     __ptext21:
  3782                           	opt stack 0
  3783  001C76                     _RtccWrOn:
  3784                           	opt stack 27
  3785                           
  3786                           ;incstack = 0
  3787  001C76  9CF2               	bcf	intcon,6,c	;volatile
  3788  001C78  0E55               	movlw	85
  3789  001C7A  6EA7               	movwf	4007,c	;volatile
  3790  001C7C  0EAA               	movlw	170
  3791  001C7E  6EA7               	movwf	4007,c	;volatile
  3792  001C80  010F               	movlb	15	; () banked
  3793  001C82  8B3F               	bsf	63,5,b	;volatile
  3794                           
  3795                           ; BSR set to: 15
  3796  001C84  8CF2               	bsf	intcon,6,c	;volatile
  3797                           
  3798                           ; BSR set to: 15
  3799  001C86  0012               	return		;funcret
  3800  001C88                     __end_of_RtccWrOn:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           prodh	equ	0xFF4
  3807                           prodl	equ	0xFF3
  3808                           intcon	equ	0xFF2
  3809                           indf0	equ	0xFEF
  3810                           postinc0	equ	0xFEE
  3811                           fsr0h	equ	0xFEA
  3812                           fsr0l	equ	0xFE9
  3813                           wreg	equ	0xFE8
  3814                           postdec1	equ	0xFE5
  3815                           fsr1l	equ	0xFE1
  3816                           indf2	equ	0xFDF
  3817                           postinc2	equ	0xFDE
  3818                           postdec2	equ	0xFDD
  3819                           fsr2h	equ	0xFDA
  3820                           fsr2l	equ	0xFD9
  3821                           status	equ	0xFD8
  3822                           
  3823 ;; *************** function _Read_RTC *****************
  3824 ;; Defined at:
  3825 ;;		line 111 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;		None               void
  3832 ;; Registers used:
  3833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    1
  3846 ;; This function calls:
  3847 ;;		_RtccReadDate
  3848 ;;		_RtccReadTime
  3849 ;; This function is called by:
  3850 ;;		_main
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text22
  3855  001644                     __ptext22:
  3856                           	opt stack 0
  3857  001644                     _Read_RTC:
  3858                           	opt stack 29
  3859                           
  3860                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  3861                           
  3862                           ; BSR set to: 15
  3863                           ;incstack = 0
  3864  001644  0E3B               	movlw	low _RtccTime
  3865  001646  6E01               	movwf	RtccReadTime@pTm,c
  3866  001648  0E00               	movlw	high _RtccTime
  3867  00164A  6E02               	movwf	RtccReadTime@pTm+1,c
  3868  00164C  EC9B  F00C         	call	_RtccReadTime	;wreg free
  3869                           
  3870                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  3871  001650  503C               	movf	_RtccTime+1,w,c
  3872  001652  0B0F               	andlw	15
  3873  001654  6E4B               	movwf	_segundo_u,c
  3874                           
  3875                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  3876  001656  383C               	swapf	_RtccTime+1,w,c
  3877  001658  0B0F               	andlw	15
  3878  00165A  0B0F               	andlw	15
  3879  00165C  6E4A               	movwf	_segundo_d,c
  3880                           
  3881                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  3882  00165E  503D               	movf	_RtccTime+2,w,c
  3883  001660  0B0F               	andlw	15
  3884  001662  6E49               	movwf	_minuto_u,c
  3885                           
  3886                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  3887  001664  383D               	swapf	_RtccTime+2,w,c
  3888  001666  0B0F               	andlw	15
  3889  001668  0B0F               	andlw	15
  3890  00166A  6E48               	movwf	_minuto_d,c
  3891                           
  3892                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  3893  00166C  503E               	movf	_RtccTime+3,w,c
  3894  00166E  0B0F               	andlw	15
  3895  001670  6E45               	movwf	_hora_u,c
  3896                           
  3897                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  3898  001672  383E               	swapf	_RtccTime+3,w,c
  3899  001674  0B0F               	andlw	15
  3900  001676  0B0F               	andlw	15
  3901  001678  6E44               	movwf	_hora_d,c
  3902                           
  3903                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  3904  00167A  0E37               	movlw	low _RtccDate
  3905  00167C  6E01               	movwf	RtccReadDate@pDt,c
  3906  00167E  0E00               	movlw	high _RtccDate
  3907  001680  6E02               	movwf	RtccReadDate@pDt+1,c
  3908  001682  ECD9  F00B         	call	_RtccReadDate	;wreg free
  3909                           
  3910                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  3911  001686  5038               	movf	_RtccDate+1,w,c
  3912  001688  0B0F               	andlw	15
  3913  00168A  6E43               	movwf	_fecha_u,c
  3914                           
  3915                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  3916  00168C  3838               	swapf	_RtccDate+1,w,c
  3917  00168E  0B0F               	andlw	15
  3918  001690  0B0F               	andlw	15
  3919  001692  6E42               	movwf	_fecha_d,c
  3920                           
  3921                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  3922  001694  5039               	movf	_RtccDate+2,w,c
  3923  001696  0B0F               	andlw	15
  3924  001698  6E47               	movwf	_mes_u,c
  3925                           
  3926                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  3927  00169A  3839               	swapf	_RtccDate+2,w,c
  3928  00169C  0B0F               	andlw	15
  3929  00169E  0B0F               	andlw	15
  3930  0016A0  6E46               	movwf	_mes_d,c
  3931                           
  3932                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  3933  0016A2  C037  F041         	movff	_RtccDate,_dia_semana
  3934                           
  3935                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  3936  0016A6  503A               	movf	_RtccDate+3,w,c
  3937  0016A8  0B0F               	andlw	15
  3938  0016AA  6E40               	movwf	_anio_u,c
  3939                           
  3940                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  3941  0016AC  383A               	swapf	_RtccDate+3,w,c
  3942  0016AE  0B0F               	andlw	15
  3943  0016B0  0B0F               	andlw	15
  3944  0016B2  6E3F               	movwf	_anio_d,c
  3945                           
  3946                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  3947  0016B4  504A               	movf	_segundo_d,w,c
  3948  0016B6  0D0A               	mullw	10
  3949  0016B8  504B               	movf	_segundo_u,w,c
  3950  0016BA  24F3               	addwf	prodl,w,c
  3951  0016BC  6E35               	movwf	_segundo,c
  3952  0016BE  0E00               	movlw	0
  3953  0016C0  20F4               	addwfc	prodh,w,c
  3954  0016C2  6E36               	movwf	_segundo+1,c
  3955                           
  3956                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  3957  0016C4  5048               	movf	_minuto_d,w,c
  3958  0016C6  0D0A               	mullw	10
  3959  0016C8  5049               	movf	_minuto_u,w,c
  3960  0016CA  24F3               	addwf	prodl,w,c
  3961  0016CC  6E56               	movwf	_minuto,c
  3962  0016CE  0E00               	movlw	0
  3963  0016D0  20F4               	addwfc	prodh,w,c
  3964  0016D2  6E57               	movwf	_minuto+1,c
  3965                           
  3966                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  3967  0016D4  5044               	movf	_hora_d,w,c
  3968  0016D6  0D0A               	mullw	10
  3969  0016D8  5045               	movf	_hora_u,w,c
  3970  0016DA  24F3               	addwf	prodl,w,c
  3971  0016DC  6E52               	movwf	_hora,c
  3972  0016DE  0E00               	movlw	0
  3973  0016E0  20F4               	addwfc	prodh,w,c
  3974  0016E2  6E53               	movwf	_hora+1,c
  3975                           
  3976                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  3977  0016E4  5042               	movf	_fecha_d,w,c
  3978  0016E6  0D0A               	mullw	10
  3979  0016E8  5043               	movf	_fecha_u,w,c
  3980  0016EA  24F3               	addwf	prodl,w,c
  3981  0016EC  6E4E               	movwf	_dia,c
  3982  0016EE  0E00               	movlw	0
  3983  0016F0  20F4               	addwfc	prodh,w,c
  3984  0016F2  6E4F               	movwf	_dia+1,c
  3985                           
  3986                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  3987  0016F4  C041  F050         	movff	_dia_semana,_diasem
  3988  0016F8  6A51               	clrf	_diasem+1,c
  3989                           
  3990                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  3991  0016FA  5046               	movf	_mes_d,w,c
  3992  0016FC  0D0A               	mullw	10
  3993  0016FE  5047               	movf	_mes_u,w,c
  3994  001700  24F3               	addwf	prodl,w,c
  3995  001702  6E54               	movwf	_mes,c
  3996  001704  0E00               	movlw	0
  3997  001706  20F4               	addwfc	prodh,w,c
  3998  001708  6E55               	movwf	_mes+1,c
  3999                           
  4000                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  4001  00170A  503F               	movf	_anio_d,w,c
  4002  00170C  0D0A               	mullw	10
  4003  00170E  5040               	movf	_anio_u,w,c
  4004  001710  24F3               	addwf	prodl,w,c
  4005  001712  6E4C               	movwf	_anio,c
  4006  001714  0E00               	movlw	0
  4007  001716  20F4               	addwfc	prodh,w,c
  4008  001718  6E4D               	movwf	_anio+1,c
  4009  00171A  0012               	return		;funcret
  4010  00171C                     __end_of_Read_RTC:
  4011                           	opt stack 0
  4012                           tblptru	equ	0xFF8
  4013                           tblptrh	equ	0xFF7
  4014                           tblptrl	equ	0xFF6
  4015                           tablat	equ	0xFF5
  4016                           prodh	equ	0xFF4
  4017                           prodl	equ	0xFF3
  4018                           intcon	equ	0xFF2
  4019                           indf0	equ	0xFEF
  4020                           postinc0	equ	0xFEE
  4021                           fsr0h	equ	0xFEA
  4022                           fsr0l	equ	0xFE9
  4023                           wreg	equ	0xFE8
  4024                           postdec1	equ	0xFE5
  4025                           fsr1l	equ	0xFE1
  4026                           indf2	equ	0xFDF
  4027                           postinc2	equ	0xFDE
  4028                           postdec2	equ	0xFDD
  4029                           fsr2h	equ	0xFDA
  4030                           fsr2l	equ	0xFD9
  4031                           status	equ	0xFD8
  4032                           
  4033 ;; *************** function _RtccReadTime *****************
  4034 ;; Defined at:
  4035 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  pTm             2    0[COMRAM] PTR struct .
  4038 ;;		 -> RtccTime(4), 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  rTD0            8   10[COMRAM] struct .
  4041 ;;  rTD1            8    2[COMRAM] struct .
  4042 ;; Return value:  Size  Location     Type
  4043 ;;		None               void
  4044 ;; Registers used:
  4045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4052 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4054 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4055 ;;Total ram usage:       18 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_Read_RTC
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text23
  4065  001936                     __ptext23:
  4066                           	opt stack 0
  4067  001936                     _RtccReadTime:
  4068                           	opt stack 29
  4069  001936  0EFC               	movlw	252
  4070  001938  010F               	movlb	15	; () banked
  4071  00193A  173F               	andwf	63,f,b	;volatile
  4072                           
  4073                           ; BSR set to: 15
  4074  00193C  010F               	movlb	15	; () banked
  4075  00193E  813F               	bsf	63,0,b	;volatile
  4076                           
  4077                           ; BSR set to: 15
  4078  001940  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  4079                           
  4080                           ; BSR set to: 15
  4081  001944  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  4082                           
  4083                           ; BSR set to: 15
  4084  001948  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  4085                           
  4086                           ; BSR set to: 15
  4087  00194C  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  4088                           
  4089                           ; BSR set to: 15
  4090  001950  0EFC               	movlw	252
  4091  001952  010F               	movlb	15	; () banked
  4092  001954  173F               	andwf	63,f,b	;volatile
  4093  001956  010F               	movlb	15	; () banked
  4094  001958  813F               	bsf	63,0,b	;volatile
  4095                           
  4096                           ; BSR set to: 15
  4097  00195A  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  4098                           
  4099                           ; BSR set to: 15
  4100  00195E  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  4101                           
  4102                           ; BSR set to: 15
  4103  001962  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  4104                           
  4105                           ; BSR set to: 15
  4106  001966  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  4107                           
  4108                           ; BSR set to: 15
  4109  00196A  5009               	movf	RtccReadTime@rTD1+6,w,c
  4110  00196C  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  4111  00196E  A4D8               	btfss	status,2,c
  4112  001970  D7E2               	goto	l1983
  4113                           
  4114                           ; BSR set to: 15
  4115                           
  4116                           ; BSR set to: 15
  4117  001972  EE20 F003          	lfsr	2,3
  4118  001976  5001               	movf	RtccReadTime@pTm,w,c
  4119  001978  26D9               	addwf	fsr2l,f,c
  4120  00197A  5002               	movf	RtccReadTime@pTm+1,w,c
  4121  00197C  22DA               	addwfc	fsr2h,f,c
  4122  00197E  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  4123  001982  EE20 F002          	lfsr	2,2
  4124  001986  5001               	movf	RtccReadTime@pTm,w,c
  4125  001988  26D9               	addwf	fsr2l,f,c
  4126  00198A  5002               	movf	RtccReadTime@pTm+1,w,c
  4127  00198C  22DA               	addwfc	fsr2h,f,c
  4128  00198E  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  4129  001992  EE20 F001          	lfsr	2,1
  4130  001996  5001               	movf	RtccReadTime@pTm,w,c
  4131  001998  26D9               	addwf	fsr2l,f,c
  4132  00199A  5002               	movf	RtccReadTime@pTm+1,w,c
  4133  00199C  22DA               	addwfc	fsr2h,f,c
  4134  00199E  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  4135                           
  4136                           ; BSR set to: 15
  4137  0019A2  0012               	return		;funcret
  4138  0019A4                     __end_of_RtccReadTime:
  4139                           	opt stack 0
  4140                           tblptru	equ	0xFF8
  4141                           tblptrh	equ	0xFF7
  4142                           tblptrl	equ	0xFF6
  4143                           tablat	equ	0xFF5
  4144                           prodh	equ	0xFF4
  4145                           prodl	equ	0xFF3
  4146                           intcon	equ	0xFF2
  4147                           indf0	equ	0xFEF
  4148                           postinc0	equ	0xFEE
  4149                           fsr0h	equ	0xFEA
  4150                           fsr0l	equ	0xFE9
  4151                           wreg	equ	0xFE8
  4152                           postdec1	equ	0xFE5
  4153                           fsr1l	equ	0xFE1
  4154                           indf2	equ	0xFDF
  4155                           postinc2	equ	0xFDE
  4156                           postdec2	equ	0xFDD
  4157                           fsr2h	equ	0xFDA
  4158                           fsr2l	equ	0xFD9
  4159                           status	equ	0xFD8
  4160                           
  4161 ;; *************** function _RtccReadDate *****************
  4162 ;; Defined at:
  4163 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  pDt             2    0[COMRAM] PTR struct .
  4166 ;;		 -> RtccDate(4), 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  rTD0            8   10[COMRAM] struct .
  4169 ;;  rTD1            8    2[COMRAM] struct .
  4170 ;; Return value:  Size  Location     Type
  4171 ;;		None               void
  4172 ;; Registers used:
  4173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4183 ;;Total ram usage:       18 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_Read_RTC
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text24
  4193  0017B2                     __ptext24:
  4194                           	opt stack 0
  4195  0017B2                     _RtccReadDate:
  4196                           	opt stack 29
  4197  0017B2  0EFC               	movlw	252
  4198  0017B4  010F               	movlb	15	; () banked
  4199  0017B6  173F               	andwf	63,f,b	;volatile
  4200  0017B8  0E03               	movlw	3
  4201  0017BA  010F               	movlb	15	; () banked
  4202  0017BC  133F               	iorwf	63,f,b	;volatile
  4203                           
  4204                           ; BSR set to: 15
  4205  0017BE  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  4206                           
  4207                           ; BSR set to: 15
  4208  0017C2  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  4209                           
  4210                           ; BSR set to: 15
  4211  0017C6  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  4212                           
  4213                           ; BSR set to: 15
  4214  0017CA  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  4215                           
  4216                           ; BSR set to: 15
  4217  0017CE  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  4218                           
  4219                           ; BSR set to: 15
  4220  0017D2  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  4221  0017D6  0EFC               	movlw	252
  4222  0017D8  010F               	movlb	15	; () banked
  4223  0017DA  173F               	andwf	63,f,b	;volatile
  4224  0017DC  0E03               	movlw	3
  4225  0017DE  010F               	movlb	15	; () banked
  4226  0017E0  133F               	iorwf	63,f,b	;volatile
  4227                           
  4228                           ; BSR set to: 15
  4229  0017E2  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  4230                           
  4231                           ; BSR set to: 15
  4232  0017E6  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  4233                           
  4234                           ; BSR set to: 15
  4235  0017EA  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  4236                           
  4237                           ; BSR set to: 15
  4238  0017EE  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  4239                           
  4240                           ; BSR set to: 15
  4241  0017F2  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  4242                           
  4243                           ; BSR set to: 15
  4244  0017F6  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  4245  0017FA  5005               	movf	RtccReadDate@rTD1+2,w,c
  4246  0017FC  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  4247  0017FE  A4D8               	btfss	status,2,c
  4248  001800  D7D8               	goto	l2009
  4249                           
  4250                           ; BSR set to: 15
  4251                           
  4252                           ; BSR set to: 15
  4253  001802  EE20 F001          	lfsr	2,1
  4254  001806  5001               	movf	RtccReadDate@pDt,w,c
  4255  001808  26D9               	addwf	fsr2l,f,c
  4256  00180A  5002               	movf	RtccReadDate@pDt+1,w,c
  4257  00180C  22DA               	addwfc	fsr2h,f,c
  4258  00180E  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  4259  001812  EE20 F002          	lfsr	2,2
  4260  001816  5001               	movf	RtccReadDate@pDt,w,c
  4261  001818  26D9               	addwf	fsr2l,f,c
  4262  00181A  5002               	movf	RtccReadDate@pDt+1,w,c
  4263  00181C  22DA               	addwfc	fsr2h,f,c
  4264  00181E  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  4265                           
  4266                           ; BSR set to: 15
  4267  001822  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  4268  001826  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  4269  00182A  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  4270                           
  4271                           ; BSR set to: 15
  4272  00182E  EE20 F003          	lfsr	2,3
  4273  001832  5001               	movf	RtccReadDate@pDt,w,c
  4274  001834  26D9               	addwf	fsr2l,f,c
  4275  001836  5002               	movf	RtccReadDate@pDt+1,w,c
  4276  001838  22DA               	addwfc	fsr2h,f,c
  4277  00183A  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  4278                           
  4279                           ; BSR set to: 15
  4280  00183E  0012               	return		;funcret
  4281  001840                     __end_of_RtccReadDate:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           prodh	equ	0xFF4
  4288                           prodl	equ	0xFF3
  4289                           intcon	equ	0xFF2
  4290                           indf0	equ	0xFEF
  4291                           postinc0	equ	0xFEE
  4292                           fsr0h	equ	0xFEA
  4293                           fsr0l	equ	0xFE9
  4294                           wreg	equ	0xFE8
  4295                           postdec1	equ	0xFE5
  4296                           fsr1l	equ	0xFE1
  4297                           indf2	equ	0xFDF
  4298                           postinc2	equ	0xFDE
  4299                           postdec2	equ	0xFDD
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           tblptru	equ	0xFF8
  4304                           tblptrh	equ	0xFF7
  4305                           tblptrl	equ	0xFF6
  4306                           tablat	equ	0xFF5
  4307                           prodh	equ	0xFF4
  4308                           prodl	equ	0xFF3
  4309                           intcon	equ	0xFF2
  4310                           indf0	equ	0xFEF
  4311                           postinc0	equ	0xFEE
  4312                           fsr0h	equ	0xFEA
  4313                           fsr0l	equ	0xFE9
  4314                           wreg	equ	0xFE8
  4315                           postdec1	equ	0xFE5
  4316                           fsr1l	equ	0xFE1
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           postdec2	equ	0xFDD
  4320                           fsr2h	equ	0xFDA
  4321                           fsr2l	equ	0xFD9
  4322                           status	equ	0xFD8
  4323                           
  4324                           	psect	rparam
  4325  0000                     tblptru	equ	0xFF8
  4326                           tblptrh	equ	0xFF7
  4327                           tblptrl	equ	0xFF6
  4328                           tablat	equ	0xFF5
  4329                           prodh	equ	0xFF4
  4330                           prodl	equ	0xFF3
  4331                           intcon	equ	0xFF2
  4332                           indf0	equ	0xFEF
  4333                           postinc0	equ	0xFEE
  4334                           fsr0h	equ	0xFEA
  4335                           fsr0l	equ	0xFE9
  4336                           wreg	equ	0xFE8
  4337                           postdec1	equ	0xFE5
  4338                           fsr1l	equ	0xFE1
  4339                           indf2	equ	0xFDF
  4340                           postinc2	equ	0xFDE
  4341                           postdec2	equ	0xFDD
  4342                           fsr2h	equ	0xFDA
  4343                           fsr2l	equ	0xFD9
  4344                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    14
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      88
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[7]), STR_4(CODE[7]), buffer2(BANK0[20]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _caratula->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10481
                                             35 COMRAM     1     1      0
                           _Read_RTC
                              _Setup
                           _caratula
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0    5749
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    22     10    1916
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    2110
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    1745
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1    1077
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      58       1       92.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      84       6        0.0%
DATA                 0      0      84       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Aug 16 18:36:55 2016

                        _a 0029                          _b 002B                          _c 002D  
                        _i 002F                          _j 0031                          _k 0033  
           ?_lcd_send_byte 0003               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
              lcd_comand@d 0005               __CFG_CP0$OFF 000000                        l145 1B8E  
                      l170 1BD0                        l146 1B90                        l147 1B98  
                      l248 110E                        l169 1BCE                        l902 1A96  
                      l892 19F6                        u800 18E4                        u820 18FE  
                      u840 191A                        u818 18E6                        u780 18CC  
                      u838 1900                        u858 191C                        u798 18CE  
                      _dia 004E                        _mes 0054                        wreg 000FE8  
          RtccReadDate@pDt 0001                lcd_gotoxy@x 0006                lcd_gotoxy@y 0005  
                     l1021 1C54                       l2103 1088                       l2009 17B2  
                     l2121 10EC                       l2113 10C2                       l2107 10AC  
                     l2045 1A02                       l2133 1168                       l2109 10B6  
                     l2061 0F6E                       l2053 0F46                       l2151 186E  
                     l2127 1114                       l2119 10E4                       l2071 0FAC  
                     l2135 1174                       l2049 1A2C                       l2137 1190  
                     l2065 0F78                       l2233 15EE                       l2147 1866  
                     l2091 1054                       l2083 1016                       l2067 0F8E  
                     l2059 0F60                       l2243 162A                       l1701 14AA  
                     l2165 1892                       l2157 187E                       l2085 1038  
                     l2237 1606                       l2095 1060                       l2079 1010  
                     l2271 1B7E                       l2281 1B9C                       l1811 1416  
                     l1707 14C6                       l1651 1C66                       l2099 1084  
                     l1821 1AA4                       l1901 19BA                       l1815 1422  
                     l1807 140A                       l1743 152E                       l1735 1516  
                     l1823 1AB0                       l1831 1AD4                       l1903 19C4  
                     l1825 1ABC                       l1913 19EA                       l1905 19CC  
                     l1921 1A62                       l1841 1C48                       l1739 1522  
                     l1691 146C                       l1827 1AC8                       l1923 1A6C  
                     l1765 1384                       l1677 1C18                       l1925 1A74  
                     l1775 13B4                       l1759 134A                       l1871 175A  
                     l1679 1C1E                       l1769 1398                       l1697 1496  
                     l1873 1764                       l1865 1744                       l1929 1A8A  
                     l1891 17A6                       l1883 178A                       l1875 176C  
                     l1859 1732                       l1983 1936                       l1887 1796  
                     STR_1 0F34                       STR_2 0F0F                       STR_3 0F1E  
                     STR_4 0F34                       STR_5 0F2D                       u1500 1616  
                     u1280 1A22                       u1290 1A4C                       u1287 1A18  
                     u1297 1A42                       u1557 1BA2                       u1567 1C56  
                     u1577 1C68           ?_lcd_send_nibble 0001                       _anio 004C  
                     _flag 02C0                       _main 1B78                       _hora 0052  
                     fsr0h 000FEA                       indf0 000FEF                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9              __CFG_T1DIG$ON 000000                       prodh 000FF4  
                     prodl 000FF3                       start 0000              __CFG_IESO$OFF 000000  
         RtccReadDate@rTD0 000B           RtccReadDate@rTD1 0003               ___param_bank 000010  
          RtccReadTime@pTm 0001                _Delay1KTCYx 1C52              __CFG_PLLDIV$1 000000  
                    ?_main 0001            __end_of___awdiv 17B2      __size_of_Delay100TCYx 0012  
          ___awdiv@divisor 0003            __end_of___lwdiv 1A00            __end_of___lwmod 1AA0  
          ___awdiv@counter 0005                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94             __CFG_FCMEN$OFF 000000                      _Setup 1AEC  
          __end_of_dpowers 0F0B                      _mes_d 0046                      _mes_u 0047  
          __end_of_isdigit 1C52             __pbitbssCOMRAM 02C0                      tablat 000FF5  
             lcd_putrs@ptr 0009                      status 000FD8            __end_of_sprintf 11A0  
  __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1B34               _Delay100TCYx 1C64  
             __end_of_main 1BB2            ??_lcd_send_byte 0004           RtccReadTime@rTD0 000B  
         RtccReadTime@rTD1 0003           __end_of_Read_RTC 171C                     ??_main 0024  
            __activetblptr 000002           __end_of_RtccWrOn 1C88                     ?_Setup 0001  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _EECON2 000FA7  
                   _ANCON0 000F48           ___awdiv@dividend 0001             __CFG_WDTEN$OFF 000000  
         RtccWriteDate@pDt 0001                     _RTCCFG 000F3F             __CFG_WPCFG$OFF 000000  
         __end_of_caratula 1644             __CFG_WPDIS$OFF 000000             __CFG_XINST$OFF 000000  
         __end_of_lcd_init 18C0           __end_of_lcd_putc 1AEC                     ___wmul 1BE4  
                ??___awdiv 0005             __CFG_STVREN$ON 000000                     _diasem 0050  
                   _anio_d 003F                     _anio_u 0040                  ??___lwdiv 0005  
                ??___lwmod 000C                     _hora_d 0044                     _hora_u 0045  
                   clear_0 1B3A                     clear_1 1B48           ___awdiv@quotient 0007  
                   _minuto 0056      __end_of_RtccWriteDate 142E      __end_of_RtccWriteTime 153A  
         RtccWriteTime@pTm 0001               __pdataCOMRAM 004C                  ??_isdigit 0001  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_sprintf 0017                 __accesstop 0060  
  __end_of__initialization 1B6E         __size_of_Write_RTC 0148              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_Setup 1B34            __CFG_DSWDTPS$G2 000000  
          __CFG_OSC$INTOSC 000000                    ??_Setup 000E          lcd_gotoxy@address 0007  
       __size_of_lcd_putrs 0054               sprintf@width 0021                 __pbssBANK0 0060  
                ?_Read_RTC 0001                 _dia_semana 0041  RtccWriteTime@tempHourWDay 000A  
               __pnvCOMRAM 003F                  ?_RtccWrOn 0001             lcd_send_byte@n 0003  
                  ?___wmul 0001              ?_RtccReadDate 0001              ?_RtccReadTime 0001  
             ?_Delay1KTCYx 0001          __end_of_Write_RTC 12E8                 _lcd_comand 1C88  
                ?_caratula 0001                 _lcd_gotoxy 1C0C                    _RTCVALH 000F99  
                  _RTCVALL 000F98                  ?_lcd_init 0001                  ?_lcd_putc 0001  
               ??_Read_RTC 0013                    __Hparam 0000                    __Lparam 0000  
 __size_of_lcd_send_nibble 0076                 ??_RtccWrOn 0001             ??_RtccReadDate 0003  
           ??_RtccReadTime 0003                    ___awdiv 171C          __end_of_lcd_putrs 1A54  
          __size_of___wmul 0028                    ___lwdiv 19A4                    ___lwmod 1A54  
             __psmallconst 0F00                _RtccTimeVal 0025                    __pcinit 1B34  
                  _fecha_d 0042                    _fecha_u 0043                    __ramtop 0F00  
                  __ptext0 1B78                    __ptext1 153A                    __ptext2 0F3C  
                  __ptext3 1C30                    __ptext4 1BE4                    __ptext5 1A54  
                  __ptext6 19A4                    __ptext7 1A00                    __ptext8 1AA0  
                  __ptext9 1C0C                    _buffer2 0078                  _T1CONbits 000FCD  
                  _dpowers 0F01                    _isdigit 1C30                 ??_caratula 0024  
                  _segundo 0035                    _sprintf 0F3C                 ??_lcd_init 0005  
               ??_lcd_putc 0008       end_of_initialization 1B6E       lcd_send_byte@address 0004  
            __Lmediumconst 0000                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE      __end_of_lcd_send_byte 1BE4  
                _PORTAbits 000F80           __CFG_DSBOREN$OFF 000000                ?_lcd_comand 0001  
         __CFG_CPUDIV$OSC1 000000                  _TRISBbits 000F93                ?_lcd_gotoxy 0005  
          _LCD_INIT_STRING 0F0B           __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 000A  
      __CFG_MSSP7B_EN$MSK7 000000           Delay100TCYx@unit 0001             __end_of___wmul 1C0C  
            __pidataCOMRAM 1C96  RtccWriteDate@tempHourWDay 000C          ??_lcd_send_nibble 0001  
     __size_of_Delay1KTCYx 0012           __CFG_DSWDTEN$OFF 000000        start_initialization 1B34  
     __end_of_RtccReadDate 1840       __end_of_RtccReadTime 19A4       RtccWriteTime@wasAlrm 0006  
     RtccWriteTime@wasWrEn 0007     __size_of_RtccWriteDate 0146            RtccWriteDate@di 0003  
   __size_of_RtccWriteTime 010C          __size_of_Read_RTC 00D8        __size_of_lcd_comand 000E  
      __size_of_lcd_gotoxy 0024                   ??___wmul 0005          __size_of_RtccWrOn 0012  
          RtccWriteTime@di 0003           __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91  
  __end_of_LCD_INIT_STRING 0F0F                __pbssCOMRAM 0025                  _Write_RTC 11A0  
             _isdigit$1814 0002          __size_of_caratula 010A            Delay1KTCYx@unit 0001  
        __size_of_lcd_init 0080                sprintf@flag 001D          __size_of_lcd_putc 004C  
              sprintf@prec 0020           ___lwdiv@dividend 0001              ?_Delay100TCYx 0001  
                 ?___awdiv 0001                   ?___lwdiv 0001                   ?___lwmod 0008  
  RtccWriteTime@tempMinSec 0008                  _lcd_putrs 1A00              _RtccWriteDate 12E8  
              __smallconst 0F00              _RtccWriteTime 142E                   ?_isdigit 0001  
     __CFG_RTCOSC$T1OSCREF 000000             __size_of_Setup 0048                 ?_Write_RTC 0001  
         ___lwdiv@quotient 0005                   ?_sprintf 000D           _RtccAlrmTimeDate 0060  
           ___wmul@product 0005                   _LATBbits 000F8A                   _PIE3bits 000FA3  
                _segundo_d 004A             ??_Delay100TCYx 0001                  _segundo_u 004B  
         __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 0005         _Rtcc_read_TimeDate 0070  
           ?_RtccWriteDate 0001                 ?_lcd_putrs 0009          ___wmul@multiplier 0001  
           ?_RtccWriteTime 0001                  lcd_init@i 0005      __size_of_RtccReadDate 008E  
             ??_lcd_comand 0005                  lcd_putc@c 0008      __size_of_RtccReadTime 006E  
             ??_lcd_gotoxy 0006                  copy_data0 1B62                   _Read_RTC 1644  
          _lcd_send_nibble 18C0                   __Hrparam 0000                   _RtccDate 0037  
                 __Lrparam 0000                   _RtccTime 003B                   _RtccWrOn 1C76  
       __end_of_lcd_comand 1C96         __end_of_lcd_gotoxy 1C30               _RtccReadDate 17B2  
         __size_of___awdiv 0096               _RtccReadTime 1936           __size_of___lwdiv 005C  
         __size_of___lwmod 004C               _RtccTimeDate 0068                 sprintf@val 001E  
                 _caratula 153A           __size_of_isdigit 0022            ___lwdiv@divisor 0003  
              ??_Write_RTC 000E            ___lwdiv@counter 0007                   __ptext10 1AEC  
                 __ptext11 1840                   __ptext20 12E8                   __ptext12 1C52  
                 __ptext21 1C76                   __ptext13 1C88                   __ptext22 1644  
                 __ptext14 1BB2                   __ptext23 1936                   __ptext15 18C0  
                 __ptext24 17B2                   __ptext16 1C64                   __ptext17 11A0  
                 __ptext18 171C                   __ptext19 142E                   _lcd_init 1840  
                 _lcd_putc 1AA0           __size_of_sprintf 0264     __size_of_lcd_send_byte 0032  
            __size_of_main 003A                   _minuto_d 0048                   _minuto_u 0049  
            ??_Delay1KTCYx 0001            ??_RtccWriteDate 0004            ??_RtccWriteTime 0004  
              ??_lcd_putrs 000B                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       RtccWriteTime@wasOn 0005       __end_of_Delay100TCYx 1C76                   isdigit@c 0003  
                sprintf@ap 001B    __end_of_lcd_send_nibble 1936                  sprintf@sp 000D  
         ___lwmod@dividend 0008                 _OSCCONbits 000FD3      RtccWriteDate@tempYear 0007  
            _lcd_send_byte 1BB2                 _RTCCFGbits 000F3F                   sprintf@c 0023  
                 sprintf@f 000F            ___lwmod@divisor 000A        __end_of_Delay1KTCYx 1C64  
          ___lwmod@counter 000C       RtccWriteDate@wasAlrm 0006       RtccWriteDate@wasWrEn 0009  
    lcd_send_nibble@nibble 0002  
